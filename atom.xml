<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>飘逸峰的博客</title>
  
  <subtitle>Spring--Java程序员的春天</subtitle>
  <link href="https://blog.hanqunfeng.com/atom.xml" rel="self"/>
  
  <link href="https://blog.hanqunfeng.com/"/>
  <updated>2024-05-10T03:44:18.528Z</updated>
  <id>https://blog.hanqunfeng.com/</id>
  
  <author>
    <name>飘逸峰</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySql--从Mysql5.7升级到Mysql8</title>
    <link href="https://blog.hanqunfeng.com/2024/05/08/mysql8-upgrade/"/>
    <id>https://blog.hanqunfeng.com/2024/05/08/mysql8-upgrade/</id>
    <published>2024-05-08T13:35:05.000Z</published>
    <updated>2024-05-10T03:44:18.528Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++ --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>MySql知识点介绍:从Mysql5.7升级到Mysql8</p></li><li class="lvl-2"><p>本文基于<code>mysql-8.0.30</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/">https://dev.mysql.com/doc/refman/8.0/en/</a></p></li><li class="lvl-2"><p>2024-04-30，<a href="https://dev.mysql.com/doc/relnotes/mysql/8.4/en/news-8-4-0.html">mysql-8.4.0 LTS</a>版本发布，本文在将mysql从5.7.44升级到8.0.30的基础上，升级到8.4.0 LTS版本。<a href="https://dev.mysql.com/doc/refman/8.4/en/">mysql-8.4.0 LTS官方文档</a></p></li></ul><span id="more"></span><h2 id="从Mysql5-7升级到Mysql8">从Mysql5.7升级到Mysql8</h2><p><em><strong>升级前，请先备份数据库，防止升级失败</strong></em></p><h3 id="mysqlsh">mysqlsh</h3><ul class="lvl-0"><li class="lvl-2"><p>在mysql8以前，升级mysql还是比较麻烦的，除了要处理不兼容的参数和语法外，而且不支持跨版本的升级，比如5.5必须先升级到5.6，然后再升级到5.7。</p></li><li class="lvl-2"><p><code>mysqlsh</code>是mysql官方提供的一个命令行工具，是MySQL的高级客户端和代码编辑器。其不仅可以像使用<code>mysql</code>命令一样执行sql，而且还支持js脚本、python脚本，等等，具体可以查看<a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-shell-commands.html">官网</a>。</p></li><li class="lvl-2"><p><code>mysqlsh</code>的众多功能之一就是可以检测当前版本是否可以升级到与当前<code>mysqlsh</code>相同的版本。</p></li><li class="lvl-2"><p>如果你当前的版本是5.6，你甚至都不需要先将数据库升级到5.7就可以直接升级到8.0，因为mysql8.0支持mysql5.5到mysql8.0的升级。</p></li><li class="lvl-2"><p><a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/">mysqlsh官方文档</a></p></li></ul><h4 id="安装mysqlsh">安装mysqlsh</h4><ul class="lvl-0"><li class="lvl-2"><p><a href="https://dev.mysql.com/downloads/shell/">官网下载地址</a></p></li><li class="lvl-2"><p>选择需要的版本进行下载，我这里选择下载的版本是<a href="https://downloads.mysql.com/archives/get/p/43/file/mysql-shell-8.0.30-linux-glibc2.12-x86-64bit.tar.gz">linux的8.0.30版本</a></p></li><li class="lvl-2"><p>下载后解压即可</p></li></ul><h4 id="检查是否可以升级">检查是否可以升级</h4><ul class="lvl-0"><li class="lvl-2"><p><a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-shell-utilities-upgrade.html">官网说明</a></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysqlsh8.4以前可以使用如下方法，因为其默认就是执行js代码</span></span><br><span class="line">./mysqlsh username:password@host -e <span class="string">&quot;util.checkForServerUpgrade()&quot;</span></span><br><span class="line"><span class="comment"># mysqlsh8.4后默认执行的是sql代码，所以要先登录，切换到js环境后再运行上面的代码</span></span><br><span class="line"><span class="comment"># 登录</span></span><br><span class="line">./mysqlsh username:password@host</span><br><span class="line"> MySQL  localhost  SQL  &gt; \js</span><br><span class="line">Switching to JavaScript mode...</span><br><span class="line"> MySQL  localhost  JS  &gt; util.checkForServerUpgrade()</span><br><span class="line"> ……………………………………………………</span><br><span class="line"> <span class="comment"># 退出</span></span><br><span class="line"> MySQL  localhost  JS &gt; \q</span><br><span class="line">Bye!</span><br></pre></td></tr></table></figure><h4 id="检查输出信息说明">检查输出信息说明</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">WARNING: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">The MySQL server at</span><br><span class="line">localhost:3306, version</span><br><span class="line">5.7.44-<span class="built_in">log</span> - Please upgrade to 8.0 or opt-in to the paid RDS Extended Support</span><br><span class="line">service before 5.7 reaches end of standard support on 29 February, 2024:</span><br><span class="line">https://a.co/hQqiIn0, will now be checked <span class="keyword">for</span> compatibility issues <span class="keyword">for</span> upgrade</span><br><span class="line">to MySQL 8.0.30...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 旧时间类型的使用</span></span><br><span class="line">1) Usage of old temporal <span class="built_in">type</span></span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用与新保留关键字冲突的数据库对象名称</span></span><br><span class="line">2) Usage of db objects with names conflicting with new reserved keywords</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用utf8mb3字符集</span></span><br><span class="line">3) Usage of utf8mb3 charset</span><br><span class="line">  Warning: The following objects use the utf8mb3 character <span class="built_in">set</span>. It is</span><br><span class="line">    recommended to convert them to use utf8mb4 instead, <span class="keyword">for</span> improved Unicode</span><br><span class="line">    support.</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf8mb3.html</span><br><span class="line"></span><br><span class="line">  mydb - schema<span class="string">&#x27;s default character set: utf8</span></span><br><span class="line"><span class="string">  mysql - schema&#x27;</span>s default character <span class="built_in">set</span>: utf8</span><br><span class="line">  mydb.tbl_info_i.a_product - column<span class="string">&#x27;s default character set: utf8</span></span><br><span class="line"><span class="string">  mydb.tbl_info_i.a_country - column&#x27;</span>s default character <span class="built_in">set</span>: utf8</span><br><span class="line">  mydb.tbl_info_i.a_version - column<span class="string">&#x27;s default character set: utf8</span></span><br><span class="line"><span class="string">  mydb.tbl_info_i.a_placement - column&#x27;</span>s default character <span class="built_in">set</span>: utf8</span><br><span class="line">………………………………………………………………………………………………………………………………</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL模式中的表名与8.0中的新表冲突</span></span><br><span class="line">4) Table names <span class="keyword">in</span> the mysql schema conflicting with new tables <span class="keyword">in</span> 8.0</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用非本机分区引擎的分区表</span></span><br><span class="line">5) Partitioned tables using engines with non native partitioning</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 外键约束名称超过64个字符</span></span><br><span class="line">6) Foreign key constraint names longer than 64 characters</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用过时的MAXDB sql_mode标志</span></span><br><span class="line">7) Usage of obsolete MAXDB sql_mode flag</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用过时的sql_mode标志</span></span><br><span class="line">8) Usage of obsolete sql_mode flags</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># ENUM/SET列定义包含超过255个字符的元素</span></span><br><span class="line">9) ENUM/SET column definitions containing elements longer than 255 characters</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在共享表空间中使用分区表</span></span><br><span class="line">10) Usage of partitioned tables <span class="keyword">in</span> shared tablespaces</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 表空间数据文件路径中的循环目录引用</span></span><br><span class="line">11) Circular directory references <span class="keyword">in</span> tablespace data file paths</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用已删除的函数</span></span><br><span class="line">12) Usage of removed <span class="built_in">functions</span></span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用已删除的GROUP BY ASC/DESC语法</span></span><br><span class="line">13) Usage of removed GROUP BY ASC/DESC syntax</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 已删除的用于错误日志记录到系统日志配置的系统变量</span></span><br><span class="line">14) Removed system variables <span class="keyword">for</span> error logging to the system <span class="built_in">log</span> configuration</span><br><span class="line">  To run this check requires full path to MySQL server configuration file to be specified at <span class="string">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-13.html<span class="comment">#mysqld-8-0-13-logging</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 已删除的系统变量</span></span><br><span class="line">15) Removed system variables</span><br><span class="line">  To run this check requires full path to MySQL server configuration file to be specified at <span class="string">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html<span class="comment">#optvars-removed</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 具有新默认值的系统变量</span></span><br><span class="line">16) System variables with new default values</span><br><span class="line">  To run this check requires full path to MySQL server configuration file to be specified at <span class="string">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class="line">  More information:</span><br><span class="line">    https://mysqlserverteam.com/new-defaults-in-mysql-8-0/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 零日期、日期时间和时间戳值</span></span><br><span class="line">17) Zero Date, Datetime, and Timestamp values</span><br><span class="line">  Warning: By default zero <span class="built_in">date</span>/datetime/timestamp values are no longer allowed</span><br><span class="line">    <span class="keyword">in</span> MySQL, as of 5.7.8 NO_ZERO_IN_DATE and NO_ZERO_DATE are included <span class="keyword">in</span></span><br><span class="line">    SQL_MODE by default. These modes should be used with strict mode as they will</span><br><span class="line">    be merged with strict mode <span class="keyword">in</span> a future release. If you <span class="keyword">do</span> not include these</span><br><span class="line">    modes <span class="keyword">in</span> your SQL_MODE setting, you are able to insert</span><br><span class="line">    <span class="built_in">date</span>/datetime/timestamp values that contain zeros. It is strongly advised to</span><br><span class="line">    replace zero values with valid ones, as they may not work correctly <span class="keyword">in</span> the</span><br><span class="line">    future.</span><br><span class="line">  More information:</span><br><span class="line">    https://lefred.be/content/mysql-8-0-and-wrong-dates/</span><br><span class="line"></span><br><span class="line">  global.sql_mode - does not contain either NO_ZERO_DATE or NO_ZERO_IN_DATE</span><br><span class="line">    <span class="built_in">which</span> allows insertion of zero dates</span><br><span class="line"></span><br><span class="line"><span class="comment"># 由文件删除或损坏导致的模式不一致</span></span><br><span class="line">18) Schema inconsistencies resulting from file removal or corruption</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 被InnoDB识别但属于不同引擎的表</span></span><br><span class="line">19) Tables recognized by InnoDB that belong to a different engine</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x27;check table x for upgrade&#x27;命令报告的问题</span></span><br><span class="line">20) Issues reported by <span class="string">&#x27;check table x for upgrade&#x27;</span> <span class="built_in">command</span></span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新的默认认证插件考虑</span></span><br><span class="line">21) New default authentication plugin considerations</span><br><span class="line">  Warning: The new default authentication plugin <span class="string">&#x27;caching_sha2_password&#x27;</span> offers</span><br><span class="line">    more secure password hashing than previously used <span class="string">&#x27;mysql_native_password&#x27;</span></span><br><span class="line">    (and consequent improved client connection authentication). However, it also</span><br><span class="line">    has compatibility implications that may affect existing MySQL installations.</span><br><span class="line">    If your MySQL installation must serve pre-8.0 clients and you encounter</span><br><span class="line">    compatibility issues after upgrading, the simplest way to address those</span><br><span class="line">    issues is to reconfigure the server to revert to the previous default</span><br><span class="line">    authentication plugin (mysql_native_password). For example, use these lines</span><br><span class="line">    <span class="keyword">in</span> the server option file:</span><br><span class="line"></span><br><span class="line">    [mysqld]</span><br><span class="line">    default_authentication_plugin=mysql_native_password</span><br><span class="line"></span><br><span class="line">    However, the setting should be viewed as temporary, not as a long term or</span><br><span class="line">    permanent solution, because it causes new accounts created with the setting</span><br><span class="line">    <span class="keyword">in</span> effect to forego the improved authentication security.</span><br><span class="line">    If you are using replication please take time to understand how the</span><br><span class="line">    authentication plugin changes may impact you.</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html<span class="comment">#upgrade-caching-sha2-password-compatibility-issues</span></span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html<span class="comment">#upgrade-caching-sha2-password-replication</span></span><br><span class="line"></span><br><span class="line">Errors:   0</span><br><span class="line">Warnings: 98</span><br><span class="line">Notices:  0</span><br><span class="line"></span><br><span class="line">NOTE: No fatal errors were found that would prevent an upgrade, but some potential issues were detected. Please ensure that the reported issues are not significant before upgrading.</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>可以看到，其检查的数据库版本是5.7.44，其检查是否可以升级到8.0.30</p></li><li class="lvl-2"><p>检测项共有21个，其中警告有98个，错误有0个，注意，如果有错误，则不能直接升级，需要解决错误问题，否则升级会失败。至于警告暂时可以不处理。</p></li><li class="lvl-2"><p>警告集中体现在字符集上，5.7.44的字符集是utf8(实际就是utf8mb3)，而mysql8以后的默认字符集是utf8mb4，这个警告不影响升级，可以忽略。如果需要修改字符集到utf8mb4，需要注意原来的字段字符串长度是否符合要求，因为utf8mb4是4字节，而utf8mb3是3字节。另外如果使用了存储过程也要注意参数的长度是否符合要求。</p></li><li class="lvl-2"><p>这里说一下<code>default_authentication_plugin</code>，mysql8.0.13开始，默认的认证插件是<code>caching_sha2_password</code>，而之前是<code>mysql_native_password</code>，这个警告虽然可以忽略，但是升级后建议尽快将认证插件修改为<code>caching_sha2_password</code>，因为<code>mysql_native_password</code>的认证方式存在安全漏洞，可以参考<a href="https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-compatibility-issues">官方文档</a>。另外，从mysql8.4.0开始，不再支持<code>default_authentication_plugin</code>，若要使其支持<code>mysql_native_password</code>插件，8.4.0开始为我们增加了一个新的配置项<code>mysql-native-password</code>，在[mysqld]中配置<code>mysql-native-password=ON</code>即可开启支持，默认为<code>OFF</code>。</p></li><li class="lvl-2"><p>另外还要注意<code>关键词</code>和<code>保留词</code>的问题，mysql8.0以后，又增加了很多个<code>关键词</code>和<code>保留词</code>，如果检查到则需要修改一下，不然升级会失败。即便表和字段里没有使用这些保留字，也要检查一下业务代码中是否有使用。关于<code>关键词</code>和<code>保留词</code>可以查看官网<a href="https://dev.mysql.com/doc/refman/8.0/en/keywords.html">Keywords and Reserved Words</a>，相比于MySQL 5.7，增加了大约130个，同时也减少了6个。</p><blockquote><p>这里建议设置表名称和字段名称时，可以为其设置前缀，比如：表名称为：t_user、字段名称为：f_user_id</p></blockquote></li><li class="lvl-2"><p>还有一点需要注意，Mysql8修改了很多参数的默认值，具体可以查看<a href="https://dev.mysql.com/blog-archive/new-defaults-in-mysql-8-0/">官方网站的说明</a>，如果你不希望使用默认值，则需要将其配置到配置文件中，这里强调一下，重点关注 <code>character_set_server</code> 和 <code>collation_server</code> 这两个参数。所有的参数配置参考<a href="https://dev.mysql.com/doc/refman/8.0/en/programs.html">官方文档</a></p></li></ul><div class="tips"><p><em><strong>关于字符集还想多说两句</strong></em></p><ul class="lvl-1"><li class="lvl-2">mysql8的<code>character_set_server</code>默认是<code>utf8mb4</code>，<code>collation_server</code>默认是<code>utf8mb4_0900_ai_ci</code></li><li class="lvl-2">如果创建数据库或者表的时候没有指定字符集，则默认使用<code>character_set_server</code>和<code>collation_server</code>的默认值</li><li class="lvl-2">此时新创建的表就有可能与旧表字符集不一致，关联查询时就有可能导致错误或因为需要进行字符集转换导致查询性能下降。</li><li class="lvl-2">最好的方式是创建数据库或表时明确指定字符集，或者在<code>my.cnf</code>配置文件中配置<code>character_set_server</code>和<code>collation_server</code>的值。</li></ul></div><h3 id="升级数据库的过程">升级数据库的过程</h3><ul class="lvl-0"><li class="lvl-2"><p>因为我们要升级到mysql8.0.30，所以需要先下载并安装mysql8.0.30</p></li><li class="lvl-2"><p>关闭mysql5.7的数据库</p></li><li class="lvl-2"><p>备份数据目录(一定要做好备份，升级后不能降级的)</p></li><li class="lvl-2"><p>根据检查提示修改<code>my.cnf</code>配置文件中的配置(主要是不兼容的配置，如果检查提示没有则不需要修改)</p></li><li class="lvl-2"><p>非常重要的一步，就是修改<code>my.cnf</code>配置文件中的<code>basedir</code>，将其指向mysql8.0.30的安装目录</p></li><li class="lvl-2"><p>直接使用mysql8.0.30的命令启动数据库，启动过程中就会完成数据库的升级，可以通过mysql的日志文件(log-error)查看升级情况</p></li><li class="lvl-2"><p>升级完成后尽快使用新的密码认证插件修改密码，注意要修改所有用户的密码，包括root用户</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> caching_sha2_password <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>小贴士</strong></em></p><ul class="lvl-1"><li class="lvl-2">mysql8.4.0相比于之前的版本变化比较大，具体可以查看<a href="https://dev.mysql.com/doc/refman/8.4/en/mysql-nutshell.html">官网文档</a></li><li class="lvl-2">mysql5.7不要直接升级到8.4.0及以后的版本，可以先升级到8.0.30，然后再升级到8.4.0</li><li class="lvl-2">升级到8.4.0前依旧要先使用<code>mysqlsh</code>检查是否可以升级，注意要下载对应的<code>mysqlsh</code>版本</li><li class="lvl-2">升级前要先检查是否所有用户的密码插件都是<code>caching_sha2_password</code>，如果没有则需要修改</li><li class="lvl-2">升级前要先检查<code>my.cnf</code>中是否配置了default_authentication_plugin，如果有则删除，如果必须要配置<code>mysql_native_password</code>认证插件，则需要配置<code>mysql-native-password=ON</code></li><li class="lvl-2">修改<code>my.cnf</code>中的<code>basedir</code>使其指向8.4.0的安装目录</li><li class="lvl-2">使用8.4.0的命令启动mysql，检查日志是否有错误。</li></ul></div><h2 id="mysql5-7-44升级到8-0-30，再升级到8-4-0的完整过程">mysql5.7.44升级到8.0.30，再升级到8.4.0的完整过程</h2><ul class="lvl-0"><li class="lvl-2"><p>准备好各个版本的mysql和mysqlsh</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 目录结构</span></span><br><span class="line">mysql5 <span class="comment"># 5.7.44安装目录</span></span><br><span class="line">mysql8.0.30 <span class="comment"># 8.0.30安装目录</span></span><br><span class="line">mysql8.4.0 <span class="comment"># 8.4.0安装目录</span></span><br><span class="line">mysqlsh8.0.30 <span class="comment"># 8.0.30的mysqlsh安装目录</span></span><br><span class="line">mysqlsh8.4.0 <span class="comment"># 8.4.0的mysqlsh安装目录</span></span><br><span class="line">datas/mysql <span class="comment"># 存放数据目录</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>mysql5/my.cnf</code>配置</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">local_infile=ON</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">port       = 3306</span><br><span class="line">socket     = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">skip-name-resolve</span><br><span class="line">secure_file_priv=&quot;&quot;</span><br><span class="line">local_infile=ON</span><br><span class="line"></span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line"></span><br><span class="line">port       = 3306</span><br><span class="line">server-id  = 1001</span><br><span class="line">user       = mysql</span><br><span class="line">socket     = /tmp/mysql.sock</span><br><span class="line">basedir    = /usr/local/soft/mysql5</span><br><span class="line">datadir    = /usr/local/soft/datas/mysql</span><br><span class="line"></span><br><span class="line">log-bin    = mysql-bin</span><br><span class="line">binlog-format = ROW</span><br><span class="line"></span><br><span class="line">expire-logs-days=10</span><br><span class="line"></span><br><span class="line">sync-binlog=0</span><br><span class="line">innodb_data_home_dir      =./</span><br><span class="line">innodb_log_group_home_dir =./</span><br><span class="line">log-error =mysql.log</span><br><span class="line">pid-file  =mysql.pid</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line">lower_case_table_names=1</span><br><span class="line">autocommit =1</span><br><span class="line">slow_query_log=1</span><br><span class="line">slow_query_log_file=db_slow.log</span><br><span class="line">long_query_time=5</span><br><span class="line">log_output=FILE</span><br><span class="line">log_queries_not_using_indexes=1</span><br><span class="line">skip-external-locking</span><br><span class="line">key_buffer_size = 256M</span><br><span class="line">max_allowed_packet = 64M</span><br><span class="line">table_open_cache = 1024</span><br><span class="line">sort_buffer_size = 4M</span><br><span class="line">net_buffer_length = 8K</span><br><span class="line">read_buffer_size = 4M</span><br><span class="line">read_rnd_buffer_size = 512K</span><br><span class="line">myisam_sort_buffer_size = 64M</span><br><span class="line">thread_cache_size = 64</span><br><span class="line">tmp_table_size = 128M</span><br><span class="line">explicit_defaults_for_timestamp = true</span><br><span class="line">max_connections = 500</span><br><span class="line">max_connect_errors = 100</span><br><span class="line">open_files_limit = 65535</span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line">innodb_data_file_path = ibdata1:10M:autoextend</span><br></pre></td></tr></table></figure><h3 id="5-7-44升级到8-0-30">5.7.44升级到8.0.30</h3><ul class="lvl-0"><li class="lvl-2"><p>升级检查</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 升级检查</span></span><br><span class="line">./mysqlsh8.0.30/bin/mysqlsh --uri root:123456@localhost  -e <span class="string">&quot;util.checkForServerUpgrade()&quot;</span></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">WARNING: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">The MySQL server at /tmp%2Fmysql.sock, version 5.7.44-<span class="built_in">log</span> - MySQL Community</span><br><span class="line">Server (GPL), will now be checked <span class="keyword">for</span> compatibility issues <span class="keyword">for</span> upgrade to MySQL</span><br><span class="line">8.0.30...</span><br><span class="line"></span><br><span class="line">1) Usage of old temporal <span class="built_in">type</span></span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">2) Usage of db objects with names conflicting with new reserved keywords</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">3) Usage of utf8mb3 charset</span><br><span class="line">  Warning: The following objects use the utf8mb3 character <span class="built_in">set</span>. It is</span><br><span class="line">    recommended to convert them to use utf8mb4 instead, <span class="keyword">for</span> improved Unicode</span><br><span class="line">    support.</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf8mb3.html</span><br><span class="line"></span><br><span class="line">  mydb - schema<span class="string">&#x27;s default character set: utf8</span></span><br><span class="line"><span class="string">  mysql - schema&#x27;</span>s default character <span class="built_in">set</span>: utf8</span><br><span class="line">  mydb.tbl_info_i.a_product - column<span class="string">&#x27;s default character set: utf8</span></span><br><span class="line"><span class="string">  mydb.tbl_info_i.a_country - column&#x27;</span>s default character <span class="built_in">set</span>: utf8</span><br><span class="line">  mydb.tbl_info_i.a_version - column<span class="string">&#x27;s default character set: utf8</span></span><br><span class="line"><span class="string">  mydb.tbl_info_i.a_placement - column&#x27;</span>s default character <span class="built_in">set</span>: utf8</span><br><span class="line"> …………………………………………………………………………………………</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4) Table names <span class="keyword">in</span> the mysql schema conflicting with new tables <span class="keyword">in</span> 8.0</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">5) Partitioned tables using engines with non native partitioning</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">6) Foreign key constraint names longer than 64 characters</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">7) Usage of obsolete MAXDB sql_mode flag</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">8) Usage of obsolete sql_mode flags</span><br><span class="line">  Notice: The following DB objects have obsolete options persisted <span class="keyword">for</span></span><br><span class="line">    sql_mode, <span class="built_in">which</span> will be cleared during upgrade to 8.0.</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html<span class="comment">#mysql-nutshell-removals</span></span><br><span class="line"></span><br><span class="line">  global system variable sql_mode - defined using obsolete NO_AUTO_CREATE_USER</span><br><span class="line">    option</span><br><span class="line"></span><br><span class="line">9) ENUM/SET column definitions containing elements longer than 255 characters</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">10) Usage of partitioned tables <span class="keyword">in</span> shared tablespaces</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">11) Circular directory references <span class="keyword">in</span> tablespace data file paths</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">12) Usage of removed <span class="built_in">functions</span></span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">13) Usage of removed GROUP BY ASC/DESC syntax</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">14) Removed system variables <span class="keyword">for</span> error logging to the system <span class="built_in">log</span> configuration</span><br><span class="line">  To run this check requires full path to MySQL server configuration file to be specified at <span class="string">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-13.html<span class="comment">#mysqld-8-0-13-logging</span></span><br><span class="line"></span><br><span class="line">15) Removed system variables</span><br><span class="line">  To run this check requires full path to MySQL server configuration file to be specified at <span class="string">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html<span class="comment">#optvars-removed</span></span><br><span class="line"></span><br><span class="line">16) System variables with new default values</span><br><span class="line">  To run this check requires full path to MySQL server configuration file to be specified at <span class="string">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class="line">  More information:</span><br><span class="line">    https://mysqlserverteam.com/new-defaults-in-mysql-8-0/</span><br><span class="line"></span><br><span class="line">17) Zero Date, Datetime, and Timestamp values</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">18) Schema inconsistencies resulting from file removal or corruption</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">19) Tables recognized by InnoDB that belong to a different engine</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">20) Issues reported by <span class="string">&#x27;check table x for upgrade&#x27;</span> <span class="built_in">command</span></span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">21) New default authentication plugin considerations</span><br><span class="line">  Warning: The new default authentication plugin <span class="string">&#x27;caching_sha2_password&#x27;</span> offers</span><br><span class="line">    more secure password hashing than previously used <span class="string">&#x27;mysql_native_password&#x27;</span></span><br><span class="line">    (and consequent improved client connection authentication). However, it also</span><br><span class="line">    has compatibility implications that may affect existing MySQL installations.</span><br><span class="line">    If your MySQL installation must serve pre-8.0 clients and you encounter</span><br><span class="line">    compatibility issues after upgrading, the simplest way to address those</span><br><span class="line">    issues is to reconfigure the server to revert to the previous default</span><br><span class="line">    authentication plugin (mysql_native_password). For example, use these lines</span><br><span class="line">    <span class="keyword">in</span> the server option file:</span><br><span class="line"></span><br><span class="line">    [mysqld]</span><br><span class="line">    default_authentication_plugin=mysql_native_password</span><br><span class="line"></span><br><span class="line">    However, the setting should be viewed as temporary, not as a long term or</span><br><span class="line">    permanent solution, because it causes new accounts created with the setting</span><br><span class="line">    <span class="keyword">in</span> effect to forego the improved authentication security.</span><br><span class="line">    If you are using replication please take time to understand how the</span><br><span class="line">    authentication plugin changes may impact you.</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html<span class="comment">#upgrade-caching-sha2-password-compatibility-issues</span></span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html<span class="comment">#upgrade-caching-sha2-password-replication</span></span><br><span class="line"></span><br><span class="line">Errors:   0</span><br><span class="line">Warnings: 98</span><br><span class="line">Notices:  1</span><br><span class="line"></span><br><span class="line">NOTE: No fatal errors were found that would prevent an upgrade, but some potential issues were detected. Please ensure that the reported issues are not significant before upgrading.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>看到没有error，开始升级</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭数据库</span></span><br><span class="line">./mysql5/bin/mysqladmin --defaults-file=./mysql5/my.cnf -uroot -p123456 shutdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制mysql配置文件</span></span><br><span class="line"><span class="built_in">cp</span> ./mysql5/my.cnf ./mysql8.0.30/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改新的配置文件中的basedir，使其指向8.0.30的安装路径</span></span><br><span class="line">basedir    = /usr/local/soft/mysql8.0.30</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用8.0.30启动</span></span><br><span class="line">./mysql8.0.30/bin/mysqld_safe --defaults-file=./mysql8.0.30/my.cnf &amp;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看启动日志，没有错误说明升级成功</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">2024-05-09T06:48:50.524705Z 0 [Warning] [MY-011068] [Server] The syntax <span class="string">&#x27;expire-logs-days&#x27;</span> is deprecated and will be removed <span class="keyword">in</span> a future release. Please use binlog_expire_logs_seconds instead.</span><br><span class="line">2024-05-09T06:48:50.524819Z 0 [Warning] [MY-010097] [Server] Insecure configuration <span class="keyword">for</span> --secure-file-priv: Current value does not restrict location of generated files. Consider setting it to a valid, non-empty path.</span><br><span class="line">2024-05-09T06:48:50.524917Z 0 [Warning] [MY-010918] [Server] <span class="string">&#x27;default_authentication_plugin&#x27;</span> is deprecated and will be removed <span class="keyword">in</span> a future release. Please use authentication_policy instead.</span><br><span class="line">2024-05-09T06:48:50.524983Z 0 [System] [MY-010116] [Server] /usr/local/soft/mysql8.0.30/bin/mysqld (mysqld 8.0.30) starting as process 26696</span><br><span class="line">2024-05-09T06:48:50.563366Z 1 [System] [MY-011012] [Server] Starting upgrade of data directory.</span><br><span class="line">2024-05-09T06:48:50.563414Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2024-05-09T06:48:51.260298Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2024-05-09T06:48:53.614398Z 2 [System] [MY-011003] [Server] Finished populating Data Dictionary tables with data.</span><br><span class="line">2024-05-09T06:48:55.055320Z 5 [System] [MY-013381] [Server] Server upgrade from <span class="string">&#x27;50700&#x27;</span> to <span class="string">&#x27;80030&#x27;</span> started.</span><br><span class="line">2024-05-09T06:49:02.063990Z 5 [System] [MY-013381] [Server] Server upgrade from <span class="string">&#x27;50700&#x27;</span> to <span class="string">&#x27;80030&#x27;</span> completed.</span><br><span class="line">2024-05-09T06:49:02.237992Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">2024-05-09T06:49:02.238048Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported <span class="keyword">for</span> this channel.</span><br><span class="line">2024-05-09T06:49:02.267583Z 0 [System] [MY-011323] [Server] X Plugin ready <span class="keyword">for</span> connections. Bind-address: <span class="string">&#x27;::&#x27;</span> port: 33060, socket: /tmp/mysqlx.sock</span><br><span class="line">2024-05-09T06:49:02.267648Z 0 [System] [MY-010931] [Server] /usr/local/soft/mysql8.0.30/bin/mysqld: ready <span class="keyword">for</span> connections. Version: <span class="string">&#x27;8.0.30&#x27;</span>  socket: <span class="string">&#x27;/tmp/mysql.sock&#x27;</span>  port: 3306  MySQL Community Server - GPL.</span><br></pre></td></tr></table></figure><blockquote><p>根据日志提示我们应该修改两个配置参数，未来将不可用了，不过这里暂且先不去管它，等检查通不过了再进行处理就可以。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.The syntax &#x27;expire-logs-days&#x27; is deprecated and will be removed in a future release. Please use binlog_expire_logs_seconds instead.</span><br><span class="line">2.&#x27;default_authentication_plugin&#x27; is deprecated and will be removed in a future release. Please use authentication_policy instead.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>修改密码插件，这个步骤很重要</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录</span></span><br><span class="line">./mysql8.0.30/bin/mysql -uroot -p123456</span><br><span class="line"><span class="comment"># 升级完成后使用新的密码认证插件修改密码，8.4不再推荐mysql_native_password认证插，所以升级到8.4以前一定要先修改密码插件，如果忘记了也没关系，文末有重置密码的方法</span></span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED WITH caching_sha2_password BY <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="8-0-30升级到8-4-0">8.0.30升级到8.4.0</h3><ul class="lvl-0"><li class="lvl-2"><p>同样先用8.4.0的mysqlsh检查一下</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 升级检查</span></span><br><span class="line">./mysqlsh8.4.0/bin/mysqlsh --uri root:123456@localhost</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">MySQL Shell 8.4.0</span><br><span class="line"></span><br><span class="line">Copyright (c) 2016, 2024, Oracle and/or its affiliates.</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its affiliates.</span><br><span class="line">Other names may be trademarks of their respective owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;\help&#x27;</span> or <span class="string">&#x27;\?&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>; <span class="string">&#x27;\quit&#x27;</span> to <span class="built_in">exit</span>.</span><br><span class="line">WARNING: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Creating a Classic session to <span class="string">&#x27;root@/tmp%2Fmysql.sock&#x27;</span></span><br><span class="line">Fetching global names <span class="keyword">for</span> auto-completion... Press ^C to stop.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 15</span><br><span class="line">Server version: 8.0.30 MySQL Community Server - GPL</span><br><span class="line">No default schema selected; <span class="built_in">type</span> \use &lt;schema&gt; to <span class="built_in">set</span> one.</span><br><span class="line"> MySQL  localhost  SQL &gt; \js</span><br><span class="line">Switching to JavaScript mode...</span><br><span class="line"> MySQL  localhost  JS &gt; util.checkForServerUpgrade()</span><br><span class="line">The MySQL server at /tmp%2Fmysql.sock, version 8.0.30 - MySQL Community Server</span><br><span class="line">- GPL, will now be checked <span class="keyword">for</span> compatibility issues <span class="keyword">for</span> upgrade to MySQL 8.4.0.</span><br><span class="line">To check <span class="keyword">for</span> a different target server version, use the targetVersion option.</span><br><span class="line"></span><br><span class="line">WARNING: Upgrading MySQL Server from version 8.0.30 to 8.4.0 is not supported.</span><br><span class="line">Please consider running the check using the following option: targetVersion=8.0</span><br><span class="line"></span><br><span class="line">1) Usage of db objects with names conflicting with new reserved keywords</span><br><span class="line">(reservedKeywords)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">2) Removed system variables (removedSysVars)</span><br><span class="line">  Error: Following system variables that were detected as being used will be</span><br><span class="line">    removed. Please update your system to not rely on them before the upgrade.</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html<span class="comment">#optvars-removed</span></span><br><span class="line"></span><br><span class="line">  expire_logs_days - Error: The system variable <span class="string">&#x27;expire_logs_days&#x27;</span> is <span class="built_in">set</span> to 10</span><br><span class="line">    (EXPLICIT) and will be removed.</span><br><span class="line"></span><br><span class="line">3) System variables with new default values (sysVarsNewDefaults)</span><br><span class="line">  Warning: Following system variables that are not defined <span class="keyword">in</span> your</span><br><span class="line">    configuration file will have new default values. Please review <span class="keyword">if</span> you rely on</span><br><span class="line">    their current values and <span class="keyword">if</span> so define them before performing upgrade.</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/blog-archive/new-defaults-in-mysql-8-0/</span><br><span class="line"></span><br><span class="line">  binlog_transaction_dependency_tracking - default value will change from</span><br><span class="line">    COMMIT_ORDER to WRITESET.</span><br><span class="line">  group_replication_consistency - default value will change from EVENTUAL to</span><br><span class="line">    BEFORE_ON_PRIMARY_FAILOVER.</span><br><span class="line">  group_replication_exit_state_action - default value will change from</span><br><span class="line">    READ_ONLY to OFFLINE_MODE.</span><br><span class="line">  innodb_adaptive_hash_index - default value will change from ON to OFF.</span><br><span class="line">  innodb_buffer_pool_in_core_file - default value will change from ON to OFF.</span><br><span class="line">  innodb_buffer_pool_instances - default value will change from 8 (or 1 <span class="keyword">if</span></span><br><span class="line">    innodb_buffer_pool_size &lt; 1GB) to MAX(1, <span class="comment">#vcpu/4).</span></span><br><span class="line">  innodb_change_buffering - default value will change from all to none.</span><br><span class="line">  innodb_doublewrite_files - default value will change from</span><br><span class="line">    innodb_buffer_pool_instances * 2 to 2.</span><br><span class="line">  innodb_doublewrite_pages - default value will change from</span><br><span class="line">    innodb_write_io_threads to 128.</span><br><span class="line">  innodb_flush_method - default value will change from fsynch (unix) or</span><br><span class="line">    unbuffered (windows) to O_DIRECT.</span><br><span class="line">  innodb_io_capacity - default value will change from 200 to 10000.</span><br><span class="line">  innodb_io_capacity_max - default value will change from 200 to 2 x</span><br><span class="line">    innodb_io_capacity.</span><br><span class="line">  innodb_log_buffer_size - default value will change from 16777216 (16MB) to</span><br><span class="line">    67108864 (64MB).</span><br><span class="line">  innodb_log_writer_threads - default value will change from ON to OFF ( <span class="keyword">if</span></span><br><span class="line">    <span class="comment">#vcpu &lt;= 32 ).</span></span><br><span class="line">  innodb_numa_interleave - default value will change from OFF to ON.</span><br><span class="line">  innodb_page_cleaners - default value will change from 4 to</span><br><span class="line">    innodb_buffer_pool_instances.</span><br><span class="line">  innodb_parallel_read_threads - default value will change from 4 to</span><br><span class="line">    MAX(<span class="comment">#vcpu/8, 4).</span></span><br><span class="line">  innodb_purge_threads - default value will change from 4 to 1 ( <span class="keyword">if</span> <span class="comment">#vcpu &lt;= 16</span></span><br><span class="line">    ).</span><br><span class="line">  innodb_read_io_threads - default value will change from 4 to MAX(<span class="comment">#vcpu/2, 4).</span></span><br><span class="line">  innodb_redo_log_capacity - default value will change from 104857600 (100MB)</span><br><span class="line">    to MIN ( <span class="comment">#vcpu/2, 16 )GB.</span></span><br><span class="line"></span><br><span class="line">4) Issues reported by <span class="string">&#x27;check table x for upgrade&#x27;</span> <span class="built_in">command</span> (checkTableCommand)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">5) Check <span class="keyword">for</span> deprecated usage of single dollar signs <span class="keyword">in</span> object names</span><br><span class="line">(dollarSignName)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">6) Check <span class="keyword">for</span> deprecated or invalid user authentication methods.</span><br><span class="line">(authMethodUsage)</span><br><span class="line">  Warning: The following <span class="built_in">users</span> are using the <span class="string">&#x27;mysql_native_password&#x27;</span></span><br><span class="line">  authentication method <span class="built_in">which</span> is deprecated as of MySQL 8.0.0 and will be</span><br><span class="line">  removed <span class="keyword">in</span> a future release.</span><br><span class="line">  Consider switching the <span class="built_in">users</span> to a different authentication method (i.e.</span><br><span class="line">  caching_sha2_password).</span><br><span class="line"></span><br><span class="line">  - adsdk_cns@%</span><br><span class="line">  - mysql.session@localhost</span><br><span class="line">  - mysql.sys@localhost</span><br><span class="line">  - root@localhost</span><br><span class="line"></span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7) Check <span class="keyword">for</span> deprecated or removed plugin usage. (pluginUsage)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">8) Check <span class="keyword">for</span> deprecated or invalid default authentication methods <span class="keyword">in</span> system</span><br><span class="line">variables. (deprecatedDefaultAuth)</span><br><span class="line">  The following variables have problems with their <span class="built_in">set</span> authentication method:</span><br><span class="line"></span><br><span class="line">  Error: default_authentication_plugin - mysql_native_password authentication</span><br><span class="line">    method was removed and it must be corrected before upgrading to 8.4.0 release.</span><br><span class="line"></span><br><span class="line">9) Check <span class="keyword">for</span> deprecated or invalid authentication methods <span class="keyword">in</span> use by MySQL</span><br><span class="line">Router internal accounts. (deprecatedRouterAuthMethod)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">10) Checks <span class="keyword">for</span> errors <span class="keyword">in</span> column definitions (columnDefinition)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">11) Check <span class="keyword">for</span> allowed values <span class="keyword">in</span> System Variables. (sysvarAllowedValues)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">12) Checks <span class="keyword">for</span> user privileges that will be removed (invalidPrivileges)</span><br><span class="line">  Verifies <span class="keyword">for</span> <span class="built_in">users</span> containing grants to be removed, since privileges are</span><br><span class="line">    removed as part of the upgrade, raises a NOTICE to inform the user about</span><br><span class="line">    <span class="built_in">users</span> that will be losing invalid privileges</span><br><span class="line"></span><br><span class="line">  <span class="string">&#x27;mysql.session&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> - The user <span class="string">&#x27;mysql.session&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> has the</span><br><span class="line">    following privileges that will be removed as part of the upgrade process:</span><br><span class="line">    SET_USER_ID</span><br><span class="line">  <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> - The user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> has the following privileges</span><br><span class="line">    that will be removed as part of the upgrade process: SET_USER_ID</span><br><span class="line"></span><br><span class="line">13) Checks <span class="keyword">for</span> partitions by key using columns with prefix key indexes</span><br><span class="line">(partitionsWithPrefixKeys)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">Errors:   2</span><br><span class="line">Warnings: 24</span><br><span class="line">Notices:  2</span><br><span class="line"></span><br><span class="line">ERROR: 2 errors were found. Please correct these issues before upgrading to avoid compatibility issues.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>看到了两处错误，就是我们上面说的那两个参数需要修改，修改<code>./mysql8.0.30/my.cnf</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># binlog日志过期时间，单位秒，过期的binlog日志会被删除，保证磁盘空间，这里设置为10天，mysql8以前的版本这个参数是expire-logs-days，单位是天</span></span><br><span class="line">binlog_expire_logs_seconds =864000</span><br><span class="line"><span class="comment">#expire-logs-days=10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#default_authentication_plugin=mysql_native_password</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>修改后要重启数据库</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭数据库</span></span><br><span class="line"> ./mysql8.0.30/bin/mysqladmin --defaults-file=./mysql8.0.30/my.cnf -uroot -p123456 shutdown</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 使用8.0.30启动</span></span><br><span class="line"> ./mysql8.0.30/bin/mysqld_safe --defaults-file=./mysql8.0.30/my.cnf &amp;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>再次进程升级检查</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 升级检查</span></span><br><span class="line">./mysqlsh8.4.0/bin/mysqlsh --uri root:123456@localhost</span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">MySQL Shell 8.4.0</span><br><span class="line"></span><br><span class="line">Copyright (c) 2016, 2024, Oracle and/or its affiliates.</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its affiliates.</span><br><span class="line">Other names may be trademarks of their respective owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;\help&#x27;</span> or <span class="string">&#x27;\?&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>; <span class="string">&#x27;\quit&#x27;</span> to <span class="built_in">exit</span>.</span><br><span class="line">WARNING: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Creating a Classic session to <span class="string">&#x27;root@/tmp%2Fmysql.sock&#x27;</span></span><br><span class="line">Fetching global names <span class="keyword">for</span> auto-completion... Press ^C to stop.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 8</span><br><span class="line">Server version: 8.0.30 MySQL Community Server - GPL</span><br><span class="line">No default schema selected; <span class="built_in">type</span> \use &lt;schema&gt; to <span class="built_in">set</span> one.</span><br><span class="line"> MySQL  localhost  SQL &gt; \js</span><br><span class="line">Switching to JavaScript mode...</span><br><span class="line"> MySQL  localhost  JS &gt; util.checkForServerUpgrade()</span><br><span class="line">The MySQL server at /tmp%2Fmysql.sock, version 8.0.30 - MySQL Community Server</span><br><span class="line">- GPL, will now be checked <span class="keyword">for</span> compatibility issues <span class="keyword">for</span> upgrade to MySQL 8.4.0.</span><br><span class="line">To check <span class="keyword">for</span> a different target server version, use the targetVersion option.</span><br><span class="line"></span><br><span class="line">WARNING: Upgrading MySQL Server from version 8.0.30 to 8.4.0 is not supported.</span><br><span class="line">Please consider running the check using the following option: targetVersion=8.0</span><br><span class="line"></span><br><span class="line">1) Usage of db objects with names conflicting with new reserved keywords</span><br><span class="line">(reservedKeywords)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">2) Removed system variables (removedSysVars)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">3) System variables with new default values (sysVarsNewDefaults)</span><br><span class="line">  Warning: Following system variables that are not defined <span class="keyword">in</span> your</span><br><span class="line">    configuration file will have new default values. Please review <span class="keyword">if</span> you rely on</span><br><span class="line">    their current values and <span class="keyword">if</span> so define them before performing upgrade.</span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/blog-archive/new-defaults-in-mysql-8-0/</span><br><span class="line"></span><br><span class="line">  binlog_transaction_dependency_tracking - default value will change from</span><br><span class="line">    COMMIT_ORDER to WRITESET.</span><br><span class="line">  group_replication_consistency - default value will change from EVENTUAL to</span><br><span class="line">    BEFORE_ON_PRIMARY_FAILOVER.</span><br><span class="line">  group_replication_exit_state_action - default value will change from</span><br><span class="line">    READ_ONLY to OFFLINE_MODE.</span><br><span class="line">  innodb_adaptive_hash_index - default value will change from ON to OFF.</span><br><span class="line">  innodb_buffer_pool_in_core_file - default value will change from ON to OFF.</span><br><span class="line">  innodb_buffer_pool_instances - default value will change from 8 (or 1 <span class="keyword">if</span></span><br><span class="line">    innodb_buffer_pool_size &lt; 1GB) to MAX(1, <span class="comment">#vcpu/4).</span></span><br><span class="line">  innodb_change_buffering - default value will change from all to none.</span><br><span class="line">  innodb_doublewrite_files - default value will change from</span><br><span class="line">    innodb_buffer_pool_instances * 2 to 2.</span><br><span class="line">  innodb_doublewrite_pages - default value will change from</span><br><span class="line">    innodb_write_io_threads to 128.</span><br><span class="line">  innodb_flush_method - default value will change from fsynch (unix) or</span><br><span class="line">    unbuffered (windows) to O_DIRECT.</span><br><span class="line">  innodb_io_capacity - default value will change from 200 to 10000.</span><br><span class="line">  innodb_io_capacity_max - default value will change from 200 to 2 x</span><br><span class="line">    innodb_io_capacity.</span><br><span class="line">  innodb_log_buffer_size - default value will change from 16777216 (16MB) to</span><br><span class="line">    67108864 (64MB).</span><br><span class="line">  innodb_log_writer_threads - default value will change from ON to OFF ( <span class="keyword">if</span></span><br><span class="line">    <span class="comment">#vcpu &lt;= 32 ).</span></span><br><span class="line">  innodb_numa_interleave - default value will change from OFF to ON.</span><br><span class="line">  innodb_page_cleaners - default value will change from 4 to</span><br><span class="line">    innodb_buffer_pool_instances.</span><br><span class="line">  innodb_parallel_read_threads - default value will change from 4 to</span><br><span class="line">    MAX(<span class="comment">#vcpu/8, 4).</span></span><br><span class="line">  innodb_purge_threads - default value will change from 4 to 1 ( <span class="keyword">if</span> <span class="comment">#vcpu &lt;= 16</span></span><br><span class="line">    ).</span><br><span class="line">  innodb_read_io_threads - default value will change from 4 to MAX(<span class="comment">#vcpu/2, 4).</span></span><br><span class="line">  innodb_redo_log_capacity - default value will change from 104857600 (100MB)</span><br><span class="line">    to MIN ( <span class="comment">#vcpu/2, 16 )GB.</span></span><br><span class="line"></span><br><span class="line">4) Issues reported by <span class="string">&#x27;check table x for upgrade&#x27;</span> <span class="built_in">command</span> (checkTableCommand)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">5) Check <span class="keyword">for</span> deprecated usage of single dollar signs <span class="keyword">in</span> object names</span><br><span class="line">(dollarSignName)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">6) Check <span class="keyword">for</span> deprecated or invalid user authentication methods.</span><br><span class="line">(authMethodUsage)</span><br><span class="line">  Warning: The following <span class="built_in">users</span> are using the <span class="string">&#x27;mysql_native_password&#x27;</span></span><br><span class="line">  authentication method <span class="built_in">which</span> is deprecated as of MySQL 8.0.0 and will be</span><br><span class="line">  removed <span class="keyword">in</span> a future release.</span><br><span class="line">  Consider switching the <span class="built_in">users</span> to a different authentication method (i.e.</span><br><span class="line">  caching_sha2_password).</span><br><span class="line"></span><br><span class="line">  - adsdk_cns@%</span><br><span class="line">  - mysql.session@localhost</span><br><span class="line">  - mysql.sys@localhost</span><br><span class="line">  - root@localhost</span><br><span class="line"></span><br><span class="line">  More information:</span><br><span class="line">    https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">7) Check <span class="keyword">for</span> deprecated or removed plugin usage. (pluginUsage)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">8) Check <span class="keyword">for</span> deprecated or invalid default authentication methods <span class="keyword">in</span> system</span><br><span class="line">variables. (deprecatedDefaultAuth)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">9) Check <span class="keyword">for</span> deprecated or invalid authentication methods <span class="keyword">in</span> use by MySQL</span><br><span class="line">Router internal accounts. (deprecatedRouterAuthMethod)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">10) Checks <span class="keyword">for</span> errors <span class="keyword">in</span> column definitions (columnDefinition)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">11) Check <span class="keyword">for</span> allowed values <span class="keyword">in</span> System Variables. (sysvarAllowedValues)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">12) Checks <span class="keyword">for</span> user privileges that will be removed (invalidPrivileges)</span><br><span class="line">  Verifies <span class="keyword">for</span> <span class="built_in">users</span> containing grants to be removed, since privileges are</span><br><span class="line">    removed as part of the upgrade, raises a NOTICE to inform the user about</span><br><span class="line">    <span class="built_in">users</span> that will be losing invalid privileges</span><br><span class="line"></span><br><span class="line">  <span class="string">&#x27;mysql.session&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> - The user <span class="string">&#x27;mysql.session&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> has the</span><br><span class="line">    following privileges that will be removed as part of the upgrade process:</span><br><span class="line">    SET_USER_ID</span><br><span class="line">  <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> - The user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> has the following privileges</span><br><span class="line">    that will be removed as part of the upgrade process: SET_USER_ID</span><br><span class="line"></span><br><span class="line">13) Checks <span class="keyword">for</span> partitions by key using columns with prefix key indexes</span><br><span class="line">(partitionsWithPrefixKeys)</span><br><span class="line">  No issues found</span><br><span class="line"></span><br><span class="line">Errors:   0</span><br><span class="line">Warnings: 24</span><br><span class="line">Notices:  2</span><br><span class="line"></span><br><span class="line">NOTE: No fatal errors were found that would prevent an upgrade, but some potential issues were detected. Please ensure that the reported issues are not significant before upgrading.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时看到通过检查，关闭数据库直接升级吧</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭数据库</span></span><br><span class="line">./mysql8.0.30/bin/mysqladmin --defaults-file=./mysql8.0.30/my.cnf -uroot -p123456 shutdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制mysql配置文件</span></span><br><span class="line"><span class="built_in">cp</span> ./mysql8.0.30/my.cnf ./mysql8.4.0/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改新的配置文件中的basedir，使其指向8.4.0的安装路径</span></span><br><span class="line">basedir    = /usr/local/soft/mysql8.4.0</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 使用8.4.0启动</span></span><br><span class="line">./mysql8.4.0/bin/mysqld_safe --defaults-file=./mysql8.4.0/my.cnf &amp;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看日志，依旧是没有错误，升级很顺利</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">2024-05-09T07:21:55.325669Z 0 [System] [MY-015015] [Server] MySQL Server - start.</span><br><span class="line">2024-05-09T07:21:55.740435Z 0 [Warning] [MY-011070] [Server] &#x27;binlog_format&#x27; is deprecated and will be removed in a future release.</span><br><span class="line">2024-05-09T07:21:55.740549Z 0 [Warning] [MY-010097] [Server] Insecure configuration for --secure-file-priv: Current value does not restrict location of generated files. Consider setting it to a valid, non-empty path.</span><br><span class="line">2024-05-09T07:21:55.740629Z 0 [System] [MY-010116] [Server] /usr/local/soft/mysql-8.4.0-linux-glibc2.17-x86_64/bin/mysqld (mysqld 8.4.0) starting as process 28414</span><br><span class="line">2024-05-09T07:21:55.796983Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2024-05-09T07:21:56.421873Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2024-05-09T07:21:56.442008Z 1 [System] [MY-011090] [Server] Data dictionary upgrading from version &#x27;80023&#x27; to &#x27;80300&#x27;.</span><br><span class="line">2024-05-09T07:21:57.106002Z 1 [System] [MY-013413] [Server] Data dictionary upgrade from version &#x27;80023&#x27; to &#x27;80300&#x27; completed.</span><br><span class="line">2024-05-09T07:22:00.128935Z 4 [System] [MY-013381] [Server] Server upgrade from &#x27;80030&#x27; to &#x27;80400&#x27; started.</span><br><span class="line">2024-05-09T07:22:06.850838Z 4 [System] [MY-013381] [Server] Server upgrade from &#x27;80030&#x27; to &#x27;80400&#x27; completed.</span><br><span class="line">2024-05-09T07:22:07.063386Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">2024-05-09T07:22:07.063456Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.</span><br><span class="line">2024-05-09T07:22:07.085760Z 0 [System] [MY-010931] [Server] /usr/local/soft/mysql-8.4.0-linux-glibc2.17-x86_64/bin/mysqld: ready for connections. Version: &#x27;8.4.0&#x27;  socket: &#x27;/tmp/mysql.sock&#x27;  port: 3306  MySQL Community Server - GPL.</span><br><span class="line">2024-05-09T07:22:07.340333Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: &#x27;::&#x27; port: 33060, socket: /tmp/mysqlx.sock</span><br></pre></td></tr></table></figure><blockquote><p>从日志看到’binlog_format’也要不支持了，不过先不用管，等到不支持了再处理吧。</p></blockquote><h2 id="如果升级到8-4之前忘记修改密码插件了，则升级之后就不能正常登录了，此时怎么办呢？">如果升级到8.4之前忘记修改密码插件了，则升级之后就不能正常登录了，此时怎么办呢？</h2><ul class="lvl-0"><li class="lvl-2"><p>升级到8.4之前忘记修改密码插件了，则升级之后登录数据库会报告如下错误</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1524 (HY000): Plugin &#x27;mysql_native_password&#x27; is not loaded</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>解决方案<br>在mysql的配置文件中增加<code>mysql-native-password=ON</code>，然后重启数据库即可，但还是建议尽快修改用户的认证插件为<code>caching_sha2_password</code>吧，毕竟这个认证方式存在安全漏洞。</p></li></ul><div class="tips"><p><em><strong>小贴士</strong></em><br>笔者之前没有注意到8.4.0新增的<code>mysql-native-password=ON</code>这个配置，所以采用了如下重置密码的方式进行插件修改，留个纪念吧。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kill掉mysql服务</span></span><br><span class="line">killall mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无权限模式启动</span></span><br><span class="line">./mysql8.4.0/bin/mysqld_safe --defaults-file=./mysql8.4.0/my.cnf --skip-grant-tables &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录，此时不需要密码</span></span><br><span class="line">./mysql8.4.0/bin/mysql -uroot</span><br><span class="line"></span><br><span class="line">mysql&gt; USE mysql;</span><br><span class="line"><span class="comment"># 修改密码插件为 caching_sha2_password</span></span><br><span class="line">mysql&gt; UPDATE user SET plugin=<span class="string">&#x27;caching_sha2_password&#x27;</span> WHERE User=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment"># 将密码设置为空</span></span><br><span class="line">mysql&gt; UPDATE user SET authentication_string=null WHERE User=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment"># 刷新权限：</span></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment"># 退出MySQL</span></span><br><span class="line">mysql&gt; <span class="built_in">exit</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭数据库，此时不需要密码即可关闭</span></span><br><span class="line">./mysql8.4.0/bin/mysqladmin --defaults-file=./mysql8.4.0/my.cnf -uroot -p shutdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启启动mysql服务</span></span><br><span class="line">./mysql8.4.0/bin/mysqld_safe --defaults-file=./mysql8.4.0/my.cnf &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录，此时依旧不需要密码</span></span><br><span class="line">./mysql8.4.0/bin/mysql -uroot</span><br><span class="line"><span class="comment"># 设置密码</span></span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="comment"># 刷新权限：</span></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment"># 退出MySQL</span></span><br><span class="line">mysql&gt; <span class="built_in">exit</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录，此时使用密码就可以正常登录了</span></span><br><span class="line">./mysql8.4.0/bin/mysql -uroot -p123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 之后再修改其他用户的密码即可，比如</span></span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;other&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED WITH caching_sha2_password BY <span class="string">&#x27;otherpass&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看修改后的user信息</span></span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; <span class="keyword">select</span> user,host,plugin from user;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MySql知识点介绍:从Mysql5.7升级到Mysql8&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;，&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;2024-04-30，&lt;a href=&quot;https://dev.mysql.com/doc/relnotes/mysql/8.4/en/news-8-4-0.html&quot;&gt;mysql-8.4.0 LTS&lt;/a&gt;版本发布，本文在将mysql从5.7.44升级到8.0.30的基础上，升级到8.4.0 LTS版本。&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.4/en/&quot;&gt;mysql-8.4.0 LTS官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB7.0--SpringBoot配置mongodb连接池</title>
    <link href="https://blog.hanqunfeng.com/2024/04/08/mongodb7-pool-springboot/"/>
    <id>https://blog.hanqunfeng.com/2024/04/08/mongodb7-pool-springboot/</id>
    <published>2024-04-08T13:30:05.000Z</published>
    <updated>2024-04-09T06:29:29.519Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍如何使用SpringBoot配置MongoDB7.0的连接池</p></li><li class="lvl-2"><p>SpringBoot版本3.2.4，MongoDB版本7.0.6</p></li><li class="lvl-2"><p>关于springboot与mongodb的集成可以参考：<a href="/2024/03/05/mongodb7-springboot/" title="MongoDB7.0--SpringBoot单集合操作">MongoDB7.0--SpringBoot单集合操作</a>，本文只讨论连接池相关内容。</p></li></ul><span id="more"></span><h2 id="spring-boot-的-MongoDB-连接池">spring-boot 的 MongoDB 连接池</h2><ul class="lvl-0"><li class="lvl-2"><p>当我们在springboot的配置文件中配置mongodb的相关属性时，并没有发现和连接池相关的属性，查看<code>MongoProperties</code>中的属性也可以证实这一点，这就很奇怪，按理说springboot应该不会这么弱鸡。</p></li><li class="lvl-2"><p>于是我打算看看springboot的源码，看看springboot为我们自动创建的<code>MongoClient</code>到底有没有连接池的配置。</p></li><li class="lvl-2"><p>我们就从mongodb的自动配置类<code>MongoAutoConfiguration</code>开始，该类中定义了<code>PropertiesMongoConnectionDetails</code>和<code>MongoClient</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个类主要用于ConnectionString对象的封装，后面会讲到</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(&#123;MongoConnectionDetails.class&#125;)</span></span><br><span class="line">PropertiesMongoConnectionDetails <span class="title function_">mongoConnectionDetails</span><span class="params">(MongoProperties properties)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PropertiesMongoConnectionDetails</span>(properties);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(&#123;MongoClient.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> MongoClient <span class="title function_">mongo</span><span class="params">(ObjectProvider&lt;MongoClientSettingsBuilderCustomizer&gt; builderCustomizers, MongoClientSettings settings)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (MongoClient)(<span class="keyword">new</span> <span class="title class_">MongoClientFactory</span>(builderCustomizers.orderedStream().toList())).createMongoClient(settings);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>可以看到，创建<code>MongoClient</code>的bean时，依赖两个参数，一个是<code>ObjectProvider&lt;MongoClientSettingsBuilderCustomizer&gt;</code>，一个是<code>MongoClientSettings</code>，前者会将spring上下文中所有类型为<code>MongoClientSettingsBuilderCustomizer</code>的bean封装到该对象中(springboot默认只提供了一个<code>StandardMongoClientSettingsBuilderCustomizer</code>)</p></li><li class="lvl-2"><p><code>MongoAutoConfiguration</code>缺省为我们提供了<code>MongoClientSettings</code>和<code>StandardMongoClientSettingsBuilderCustomizer</code>，这两个类都很重要，连接池参数就和它们有关</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">MongoClientSettings <span class="title function_">mongoClientSettings</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> MongoClientSettings.builder().build();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 需要的参数connectionDetails刚好是上面的PropertiesMongoConnectionDetails</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line">StandardMongoClientSettingsBuilderCustomizer <span class="title function_">standardMongoSettingsCustomizer</span><span class="params">(MongoProperties properties, MongoConnectionDetails connectionDetails, ObjectProvider&lt;SslBundles&gt; sslBundles)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">StandardMongoClientSettingsBuilderCustomizer</span>(connectionDetails.getConnectionString(), properties.getUuidRepresentation(), properties.getSsl(), (SslBundles)sslBundles.getIfAvailable());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>我们先看<code>MongoClientSettings</code>，其中就定义一个连接池的配置对象<code>ConnectionPoolSettings</code>，而<code>ConnectionPoolSettings</code>其内部就定义了连接池的配置属性，<code>MongoClientSettings</code>通过<code>ConnectionPoolSettings</code>的构造器创建出了<code>ConnectionPoolSettings</code>对象，其缺省值如下：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="variable">maxSize</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> minSize;</span><br><span class="line"><span class="keyword">private</span> <span class="type">long</span> <span class="variable">maxWaitTimeMS</span> <span class="operator">=</span> <span class="number">1000</span> * <span class="number">60</span> * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="type">long</span> maxConnectionLifeTimeMS;</span><br><span class="line"><span class="keyword">private</span> <span class="type">long</span> maxConnectionIdleTimeMS;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="variable">maxConnecting</span> <span class="operator">=</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>我们看另一个和创建<code>MongoClient</code>相关的bean，这个<code>StandardMongoClientSettingsBuilderCustomizer</code>，创建这个bean时需要一个<code>MongoConnectionDetails</code>对象，并调用其<code>getConnectionString</code>方法，这个对象<code>MongoAutoConfiguration</code>也为我们提供了(上面可以看到)</p></li><li class="lvl-2"><p>查看<code>PropertiesMongoConnectionDetails</code>的源码，发现<code>connectionDetails.getConnectionString()</code>的功能就是将<code>MongoProperties</code>的属性封装为<code>uri</code>并传递给<code>ConnectionString</code>的构造器创建对象</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> ConnectionString <span class="title function_">getConnectionString</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.properties.getUri() != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ConnectionString</span>(<span class="built_in">this</span>.properties.getUri());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;mongodb://&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.properties.getUsername() != <span class="literal">null</span>) &#123;</span><br><span class="line">            builder.append(<span class="built_in">this</span>.encode(<span class="built_in">this</span>.properties.getUsername()));</span><br><span class="line">            builder.append(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.properties.getPassword() != <span class="literal">null</span>) &#123;</span><br><span class="line">                builder.append(<span class="built_in">this</span>.encode(<span class="built_in">this</span>.properties.getPassword()));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            builder.append(<span class="string">&quot;@&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        builder.append(<span class="built_in">this</span>.properties.getHost() != <span class="literal">null</span> ? <span class="built_in">this</span>.properties.getHost() : <span class="string">&quot;localhost&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.properties.getPort() != <span class="literal">null</span>) &#123;</span><br><span class="line">            builder.append(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">            builder.append(<span class="built_in">this</span>.properties.getPort());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.properties.getAdditionalHosts() != <span class="literal">null</span>) &#123;</span><br><span class="line">            builder.append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            builder.append(String.join(<span class="string">&quot;,&quot;</span>, <span class="built_in">this</span>.properties.getAdditionalHosts()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        builder.append(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        builder.append(<span class="built_in">this</span>.properties.getMongoClientDatabase());</span><br><span class="line">        List&lt;String&gt; options = <span class="built_in">this</span>.getOptions();</span><br><span class="line">        <span class="keyword">if</span> (!options.isEmpty()) &#123;</span><br><span class="line">            builder.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">            builder.append(String.join(<span class="string">&quot;&amp;&quot;</span>, options));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将MongoProperties转换为uri格式后调用构造器创建ConnectionString</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ConnectionString</span>(builder.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>这个<code>ConnectionString</code>对象的初始化过程就很有意思了，其会对这个<code>uri</code>进行解析，解析过程中会调用<code>parseOptions(connectionStringQueryParameters)</code>方法，其会将<code>uri</code>中的参数转换为<code>Map</code>，之后调用<code>translateOptions(combinedOptionsMaps)</code>方法遍历这个map，而在遍历的过程中就会完成对<code>ConnectionString</code>对象的连接池相关属性的初始化</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">translateOptions</span><span class="params">(<span class="keyword">final</span> Map&lt;String, List&lt;String&gt;&gt; optionsMap)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">tlsInsecureSet</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">tlsAllowInvalidHostnamesSet</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">final</span> String key : GENERAL_OPTIONS_KEYS) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> getLastValue(optionsMap, key);</span><br><span class="line">            <span class="keyword">if</span> (value == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="comment">// 连接池相关属性，注意这里的属性名称，后面我们配置连接池时会用到</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;maxpoolsize&quot;</span>:</span><br><span class="line">                    maxConnectionPoolSize = parseInteger(value, <span class="string">&quot;maxpoolsize&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;minpoolsize&quot;</span>:</span><br><span class="line">                    minConnectionPoolSize = parseInteger(value, <span class="string">&quot;minpoolsize&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;maxidletimems&quot;</span>:</span><br><span class="line">                    maxConnectionIdleTime = parseInteger(value, <span class="string">&quot;maxidletimems&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;maxlifetimems&quot;</span>:</span><br><span class="line">                    maxConnectionLifeTime = parseInteger(value, <span class="string">&quot;maxlifetimems&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;maxconnecting&quot;</span>:</span><br><span class="line">                    maxConnecting = parseInteger(value, <span class="string">&quot;maxConnecting&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;waitqueuetimeoutms&quot;</span>:</span><br><span class="line">                    maxWaitTime = parseInteger(value, <span class="string">&quot;waitqueuetimeoutms&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;connecttimeoutms&quot;</span>:</span><br><span class="line">                    connectTimeout = parseInteger(value, <span class="string">&quot;connecttimeoutms&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">           ……………………………………………………………………………………</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>其实此时我们就已经知道应该如何配置连接池参数了，就是将连接池相关的参数追加到<code>uri</code>的参数部分，但是前面我们提到负责连接池的类是<code>ConnectionPoolSettings</code>，那么<code>ConnectionString</code>对象中的连接池属性是如何被传递给<code>ConnectionPoolSettings</code>的呢，我们接着往下看。</p></li><li class="lvl-2"><p>参数准备好后就开始创建<code>MongoClient</code>了，其会调用<code>MongoClientFactory</code>的<code>createMongoClient</code>方法，其会对<code>MongoClientSettings</code>对象做进一步的封装，并最终基于封装后的<code>MongoClientSettings</code>对象创建出<code>MongoClient</code>对象</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> T <span class="title function_">createMongoClient</span><span class="params">(MongoClientSettings settings)</span> &#123;</span><br><span class="line">    <span class="type">Builder</span> <span class="variable">targetSettings</span> <span class="operator">=</span> MongoClientSettings.builder(settings);</span><br><span class="line">    customize(targetSettings);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.clientCreator.apply(targetSettings.build(), driverInformation());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">customize</span><span class="params">(Builder builder)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (MongoClientSettingsBuilderCustomizer customizer : <span class="built_in">this</span>.builderCustomizers) &#123;</span><br><span class="line">        customizer.customize(builder);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>而在进一步封装<code>MongoClientSettings</code>对象时，会调用系统中所有被spring管理的<code>MongoClientSettingsBuilderCustomizer</code>,实际上也就是<code>StandardMongoClientSettingsBuilderCustomizer</code>的<code>customize</code>方法，其又会调用<code>MongoClientSettings.builder()</code>的<code>applyConnectionSettings</code>方法，而在该方法中调用<code>connectionPoolSettingsBuilder.applyConnectionString(connectionString);</code>就完成了将<code>ConnectionString</code>对象中的连接池属性传递给<code>ConnectionPoolSettings</code>对象的过程，当然，如果属性没有获取到就会使用默认值，所以我们可以基于需要配置相关的属性。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Builder <span class="title function_">applyConnectionString</span><span class="params">(<span class="keyword">final</span> ConnectionString connectionString)</span> &#123;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">maxConnectionPoolSize</span> <span class="operator">=</span> connectionString.getMaxConnectionPoolSize();</span><br><span class="line">    <span class="keyword">if</span> (maxConnectionPoolSize != <span class="literal">null</span>) &#123;</span><br><span class="line">        maxSize(maxConnectionPoolSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">minConnectionPoolSize</span> <span class="operator">=</span> connectionString.getMinConnectionPoolSize();</span><br><span class="line">    <span class="keyword">if</span> (minConnectionPoolSize != <span class="literal">null</span>) &#123;</span><br><span class="line">        minSize(minConnectionPoolSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">maxWaitTime</span> <span class="operator">=</span> connectionString.getMaxWaitTime();</span><br><span class="line">    <span class="keyword">if</span> (maxWaitTime != <span class="literal">null</span>) &#123;</span><br><span class="line">        maxWaitTime(maxWaitTime, MILLISECONDS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">maxConnectionIdleTime</span> <span class="operator">=</span> connectionString.getMaxConnectionIdleTime();</span><br><span class="line">    <span class="keyword">if</span> (maxConnectionIdleTime != <span class="literal">null</span>) &#123;</span><br><span class="line">        maxConnectionIdleTime(maxConnectionIdleTime, MILLISECONDS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">maxConnectionLifeTime</span> <span class="operator">=</span> connectionString.getMaxConnectionLifeTime();</span><br><span class="line">    <span class="keyword">if</span> (maxConnectionLifeTime != <span class="literal">null</span>) &#123;</span><br><span class="line">        maxConnectionLifeTime(maxConnectionLifeTime, MILLISECONDS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">maxConnecting</span> <span class="operator">=</span> connectionString.getMaxConnecting();</span><br><span class="line">    <span class="keyword">if</span> (maxConnecting != <span class="literal">null</span>) &#123;</span><br><span class="line">        maxConnecting(maxConnecting);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>大体过程就是这样，很绕，简单点说就是springboot已经为我们提供了mongodb的连接池，我们也可以基于需要，在配置<code>mongodb-uri</code>时，增加相关的连接池参数，springboot就会按照我们配置的参数为我们创建连接池，并自动管理连接池。</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">data:</span></span><br><span class="line">    <span class="attr">mongodb:</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">mongodb://user:password@127.0.0.1:27040,127.0.0.1:27041,127.0.0.1:27042/mytest?authSource=admin&amp;readPreference=primaryPreferred&amp;maxpoolsize=100&amp;minpoolsize=10&amp;maxidletimems=0&amp;maxlifetimems=0&amp;maxconnecting=5&amp;waitqueuetimeoutms=60000</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>参数说明</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">maxpoolsize: 100 # 池中允许的最大连接数。一旦池耗尽，任何需要连接的操作都将在阻塞队列中等待直到获取到连接， 默认: 100</span><br><span class="line">minpoolsize: 10 # 池中允许的最小连接数。这些连接在空闲时将保留在池中，并且池将确保它至少包含这个最小数量 默认: 0</span><br><span class="line">maxidletimems: 0 # 池连接的最大空闲时间。零值表示对空闲时间没有限制。超过其空闲时间的池连接将被关闭并在必要时由新连接替换。单位为毫秒</span><br><span class="line">maxlifetimems: 0 # 池连接可以存活的最长时间。零值表示寿命没有限制。超过其生命周期的池连接将被关闭并在必要时由新连接替换。单位为毫秒</span><br><span class="line">maxconnecting: 5 # 同一时刻允许的最大并行连接数。默认值是: 2。</span><br><span class="line">waitqueuetimeoutms: 60000 # 阻塞队列中请求的最大等待时间，超过这个时间的请求将被拒绝。单位为毫秒，默认为: 120s</span><br></pre></td></tr></table></figure><h2 id="如何查看连接池是否生效了？">如何查看连接池是否生效了？</h2><ul class="lvl-0"><li class="lvl-2"><p>很简单，我们只需要注入<code>MongoClient</code>并查看其<code>settings</code>属性，就可以看到连接池的配置信息了`</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">MongoClient mongoClient;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印连接池配置信息</span></span><br><span class="line">System.out.println(((MongoClientImpl) mongoClient).getSettings().getConnectionPoolSettings());</span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">ConnectionPoolSettings&#123;maxSize=<span class="number">100</span>, minSize=<span class="number">10</span>, maxWaitTimeMS=<span class="number">60000</span>, maxConnectionLifeTimeMS=<span class="number">0</span>, maxConnectionIdleTimeMS=<span class="number">0</span>, maintenanceInitialDelayMS=<span class="number">0</span>, maintenanceFrequencyMS=<span class="number">60000</span>, connectionPoolListeners=[], maxConnecting=<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="后记">后记</h2><ul class="lvl-0"><li class="lvl-2"><p>springboot为什么没有将mongodb的连接池属性也封装到<code>MongoProperties</code>中呢，也许是因为和mongodb相关的链接参数太多了吧，而且我们在配置mongodb时，一般都会使用<code>mongodb-uri</code>的方式，所以springboot就直接将连接池参数放到<code>mongodb-uri</code>中，这样配置起来就比较方便了。</p></li><li class="lvl-2"><p>另外我们发现，在<code>MongoClientSettings</code>中除了连接池的配置，还有很多配置项也是基于<code>mongodb-uri</code>的，我们可以基于需要进行配置，如下所示：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ReadPreference readPreference;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> WriteConcern writeConcern;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> retryWrites;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> retryReads;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ReadConcern readConcern;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> MongoCredential credential;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> TransportSettings transportSettings;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> LoggerSettings loggerSettings;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ClusterSettings clusterSettings;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> SocketSettings socketSettings;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> SocketSettings heartbeatSocketSettings;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ConnectionPoolSettings connectionPoolSettings;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ServerSettings serverSettings;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> SslSettings sslSettings;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍如何使用SpringBoot配置MongoDB7.0的连接池&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;SpringBoot版本3.2.4，MongoDB版本7.0.6&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;关于springboot与mongodb的集成可以参考：&lt;a href=&quot;/2024/03/05/mongodb7-springboot/&quot; title=&quot;MongoDB7.0--SpringBoot单集合操作&quot;&gt;MongoDB7.0--SpringBoot单集合操作&lt;/a&gt;，本文只讨论连接池相关内容。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/mongodb/"/>
    
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB7.0一些有用的功能</title>
    <link href="https://blog.hanqunfeng.com/2024/04/07/mongodb7-others/"/>
    <id>https://blog.hanqunfeng.com/2024/04/07/mongodb7-others/</id>
    <published>2024-04-07T13:30:05.000Z</published>
    <updated>2024-04-07T07:10:44.125Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍MongoDB7.0的一些有用的功能，比如运行js，查看慢查询日志等等</p></li><li class="lvl-2"><p>MongoDB<a href="https://www.mongodb.com/docs/v7.0/">官方文档</a></p></li><li class="lvl-2"><p>本文基于<code>CentOS8(x86_64)</code></p></li></ul><span id="more"></span><h2 id="运行js">运行js</h2><ul class="lvl-0"><li class="lvl-2"><p>运行js文件</p></li></ul><blockquote><p>insertMany.js</p></blockquote>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tags = [<span class="string">&#x27;nosql&#x27;</span>, <span class="string">&#x27;mongodb&#x27;</span>, <span class="string">&#x27;document&#x27;</span>, <span class="string">&#x27;developer&#x27;</span>, <span class="string">&#x27;popular&#x27;</span>]</span><br><span class="line"><span class="keyword">var</span> types = [<span class="string">&#x27;technology&#x27;</span>, <span class="string">&#x27;sociality&#x27;</span>, <span class="string">&#x27;travel&#x27;</span>, <span class="string">&#x27;novel&#x27;</span>, <span class="string">&#x27;literature&#x27;</span>]</span><br><span class="line"><span class="keyword">var</span> books = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> typeIdx = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * types.<span class="property">length</span>)</span><br><span class="line">  <span class="keyword">var</span> tagIdx = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * tags.<span class="property">length</span>)</span><br><span class="line">  <span class="keyword">var</span> favCount = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">100</span>)</span><br><span class="line">  <span class="keyword">var</span> book = &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;book-&#x27;</span> + i,</span><br><span class="line">    <span class="attr">type</span>: types[typeIdx],</span><br><span class="line">    <span class="attr">tag</span>: tags[tagIdx],</span><br><span class="line">    <span class="attr">favCount</span>: favCount,</span><br><span class="line">    <span class="attr">author</span>: <span class="string">&#x27;xxx&#x27;</span> + i</span><br><span class="line">  &#125;</span><br><span class="line">  books.<span class="title function_">push</span>(book)</span><br><span class="line">&#125;</span><br><span class="line">db.<span class="property">books</span>.<span class="title function_">insertMany</span>(books)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -f 运行js文件</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span> -f insertMany.js</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>运行js语句</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---eval 运行js语句</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span> --<span class="built_in">eval</span> <span class="string">&quot;db.books.find().limit(2)&quot;</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    _id: ObjectId(<span class="string">&#x27;660d0b05a8a6c09b0b1852b7&#x27;</span>),</span><br><span class="line">    title: <span class="string">&#x27;book-0&#x27;</span>,</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">&#x27;novel&#x27;</span>,</span><br><span class="line">    tag: <span class="string">&#x27;document&#x27;</span>,</span><br><span class="line">    favCount: 58,</span><br><span class="line">    author: <span class="string">&#x27;xxx0&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    _id: ObjectId(<span class="string">&#x27;660d0b05a8a6c09b0b1852b8&#x27;</span>),</span><br><span class="line">    title: <span class="string">&#x27;book-1&#x27;</span>,</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">&#x27;novel&#x27;</span>,</span><br><span class="line">    tag: <span class="string">&#x27;popular&#x27;</span>,</span><br><span class="line">    favCount: 10,</span><br><span class="line">    author: <span class="string">&#x27;xxx1&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="Profiler模块">Profiler模块</h2><ul class="lvl-0"><li class="lvl-2"><p>Profiler模块可以用来记录、分析MongoDB的详细操作日志，默认情况下该功能是关闭的。</p></li><li class="lvl-2"><p>Profiler模块开启对于每个业务库来说是独立的，对某个业务库开启Profiler模块之后，符合条件的慢操作日志会被写入该库的<code>system.profile</code>集合中。</p></li><li class="lvl-2"><p>Profiler模块的调试级别有：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0：关闭Profiler模块；</span><br><span class="line">1：部分开启，仅符合条件（时长大于slowms）的操作日志会被记录；</span><br><span class="line">2：日志全开，所有的操作日志都被记录；</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>设置Profiler模块的调试级别：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置Profiler模块的调试级别为2</span></span><br><span class="line">&gt; db.setProfilingLevel(2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当的调试级别信息</span></span><br><span class="line">&gt; db.<span class="function"><span class="title">getProfilingStatus</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">  was: 2,  <span class="comment"># 当前的调试级别</span></span><br><span class="line">  slowms: 100, <span class="comment"># 慢查询的阈值，单位是毫秒；</span></span><br><span class="line">  sampleRate: 1.0, <span class="comment"># 日志随机采样率，1.0则表示满足条件的全部输出。</span></span><br><span class="line">  ok: 1,   <span class="comment"># 状态</span></span><br><span class="line">  <span class="string">&#x27;$clusterTime&#x27;</span>: &#123; <span class="comment"># 时间戳</span></span><br><span class="line">    clusterTime: Timestamp(&#123; t: 1712471779, i: 1 &#125;), <span class="comment"># 时间戳</span></span><br><span class="line">    signature: &#123; <span class="comment"># 签名</span></span><br><span class="line">      <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;GGCAjzJrW8arhfJX0Cn0VpvC5MA=&#x27;</span>, 0), <span class="comment"># 签名</span></span><br><span class="line">      keyId: Long(<span class="string">&#x27;7346062378896719877&#x27;</span>)  <span class="comment"># 签名</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  operationTime: Timestamp(&#123; t: 1712471779, i: 1 &#125;) <span class="comment"># 操作时间</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只记录时长超过500ms的操作</span></span><br><span class="line">&gt; db.setProfilingLevel(1,500)</span><br><span class="line"><span class="comment"># 同时加上采样率</span></span><br><span class="line">&gt; db.setProfilingLevel(1,&#123;slowms:500,sampleRate:0.5&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭Profiler模块</span></span><br><span class="line">&gt; db.setProfilingLevel(2)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看日志</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看操作日志</span></span><br><span class="line">&gt; db.system.profile.find().<span class="built_in">limit</span>(5).<span class="built_in">sort</span>(&#123;ts:-1&#125;).pretty()</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    op: <span class="string">&#x27;query&#x27;</span>, <span class="comment"># 操作类型,比如查询,更新,删除等</span></span><br><span class="line">    ns: <span class="string">&#x27;admin.system.profile&#x27;</span>, <span class="comment"># 操作的集合</span></span><br><span class="line">    <span class="built_in">command</span>: &#123; <span class="comment"># 操作的命令</span></span><br><span class="line">      find: <span class="string">&#x27;system.profile&#x27;</span>, <span class="comment"># 操作的集合</span></span><br><span class="line">      filter: &#123;&#125;, <span class="comment"># 查询条件</span></span><br><span class="line">      lsid: &#123; <span class="built_in">id</span>: UUID(<span class="string">&#x27;2285d6a5-b2df-4b46-b9d2-5e556b0a7c7d&#x27;</span>) &#125;, <span class="comment"># 会话id</span></span><br><span class="line">      <span class="string">&#x27;$clusterTime&#x27;</span>: &#123; <span class="comment"># 时间戳</span></span><br><span class="line">        clusterTime: Timestamp(&#123; t: 1712471018, i: 1 &#125;),</span><br><span class="line">        signature: &#123;</span><br><span class="line">          <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;8YEsN+XUWO6EkoHEegKkG49eWPA=&#x27;</span>, 0),</span><br><span class="line">          keyId: Long(<span class="string">&#x27;7346062378896719877&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;$db&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>, <span class="comment"># 数据库</span></span><br><span class="line">      <span class="string">&#x27;$readPreference&#x27;</span>: &#123; mode: <span class="string">&#x27;primaryPreferred&#x27;</span> &#125; <span class="comment"># 读偏好</span></span><br><span class="line">    &#125;,</span><br><span class="line">    keysExamined: 0, <span class="comment"># 扫描索引条目数，如果比nreturned大出很多，则说明查询效率不高。</span></span><br><span class="line">    docsExamined: 3, <span class="comment"># 扫描文档条目数，如果比nreturned大出很多，则说明查询效率不高。</span></span><br><span class="line">    nBatches: 1, <span class="comment"># 批处理数量</span></span><br><span class="line">    cursorExhausted: <span class="literal">true</span>, <span class="comment"># 是否游标已耗尽</span></span><br><span class="line">    numYield: 0, <span class="comment"># 操作数，大于0表示等待锁或者是磁盘I/O操作</span></span><br><span class="line">    nreturned: 3, <span class="comment"># 返回的文档数量</span></span><br><span class="line">    queryHash: <span class="string">&#x27;8880B5AF&#x27;</span>, <span class="comment"># 查询哈希值</span></span><br><span class="line">    planCacheKey: <span class="string">&#x27;8880B5AF&#x27;</span>,</span><br><span class="line">    queryFramework: <span class="string">&#x27;classic&#x27;</span>,</span><br><span class="line">    locks: &#123;       <span class="comment"># 锁占用的情况。</span></span><br><span class="line">      FeatureCompatibilityVersion: &#123; acquireCount: &#123; r: Long(<span class="string">&#x27;1&#x27;</span>) &#125; &#125;,</span><br><span class="line">      Global: &#123; acquireCount: &#123; r: Long(<span class="string">&#x27;1&#x27;</span>) &#125; &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    flowControl: &#123;&#125;,</span><br><span class="line">    readConcern: &#123; level: <span class="string">&#x27;local&#x27;</span>, provenance: <span class="string">&#x27;implicitDefault&#x27;</span> &#125;, <span class="comment"># 读关注</span></span><br><span class="line">    responseLength: 3414, <span class="comment"># 响应数据大小（字节数），一次性查询太多的数据会影响性能，可以使用limit、batchSize进行一些限制。</span></span><br><span class="line">    protocol: <span class="string">&#x27;op_msg&#x27;</span>, <span class="comment"># 协议类型，op_msg是mongodb 4.0+的协议，op_query是mongodb 3.2及以前版本的协议。</span></span><br><span class="line">    millis: 0, <span class="comment"># 命令执行的时长，单位是毫秒。</span></span><br><span class="line">    planSummary: <span class="string">&#x27;COLLSCAN&#x27;</span>, <span class="comment"># 查询计划的概要，如IXSCAN表示使用了索引扫描。</span></span><br><span class="line">    planningTimeMicros: 79,</span><br><span class="line">    execStats: &#123;  <span class="comment"># 执行过程统计信息。</span></span><br><span class="line">      stage: <span class="string">&#x27;COLLSCAN&#x27;</span>,</span><br><span class="line">      nReturned: 3,</span><br><span class="line">      executionTimeMillisEstimate: 0,</span><br><span class="line">      works: 4,</span><br><span class="line">      advanced: 3,</span><br><span class="line">      needTime: 0,</span><br><span class="line">      needYield: 0,</span><br><span class="line">      saveState: 0,</span><br><span class="line">      restoreState: 0,</span><br><span class="line">      isEOF: 1,</span><br><span class="line">      direction: <span class="string">&#x27;forward&#x27;</span>,</span><br><span class="line">      docsExamined: 3</span><br><span class="line">    &#125;,</span><br><span class="line">    ts: ISODate(<span class="string">&#x27;2024-04-07T06:23:56.054Z&#x27;</span>), <span class="comment"># 命令执行的时间点。</span></span><br><span class="line">    client: <span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="comment"># 客户端地址。</span></span><br><span class="line">    appName: <span class="string">&#x27;mongosh 2.1.5&#x27;</span>, <span class="comment"># 客户端名称。</span></span><br><span class="line">    allUsers: [ &#123; user: <span class="string">&#x27;user&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span> &#125; ], <span class="comment"># 所有用户信息。</span></span><br><span class="line">    user: <span class="string">&#x27;user@admin&#x27;</span> <span class="comment"># 当前用户信息。</span></span><br><span class="line">  &#125;</span><br><span class="line">………………………………</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看执行时长最大的10条操作记录</span></span><br><span class="line">&gt; db.system.profile.find().<span class="built_in">limit</span>(10).<span class="built_in">sort</span>(&#123;millis:-1&#125;).pretty()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个集合中的update操作日志</span></span><br><span class="line">&gt; db.system.profile.find(&#123;op:<span class="string">&quot;update&quot;</span>,ns:<span class="string">&quot;shop.user&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>system.profile</code>是一个1MB的固定大小的集合，随着记录日志的增多，一些旧的记录会被滚动删除。</p></li><li class="lvl-2"><p>Profiler模块的设置是内存级的，重启服务器后会自动恢复默认状态。</p></li></ul><h2 id="db-currentOp">db.currentOp()</h2><ul class="lvl-0"><li class="lvl-2"><p>Profiler模块所记录的日志都是已经发生的事情，<code>db.currentOp()</code>命令则与此相反，它可以用来查看数据库当前正在执行的一些操作。</p></li><li class="lvl-2"><p>db.currentOp()读取的是当前数据库的命令快照，该命令可以返回许多有用的信息，比如：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">操作的运行时长，快速发现耗时漫长的低效扫描操作。</span><br><span class="line">执行计划信息，用于判断是否命中了索引，或者存在锁冲突的情况。</span><br><span class="line">操作ID、时间、客户端等信息，方便定位出产生慢操作的源头</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.<span class="function"><span class="title">currentOp</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">inprog: [ <span class="comment"># 当前正在执行的操作</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&#x27;op&#x27;</span>, <span class="comment"># 操作类型，可以是op、idleSession、idleCursor的一种，一般的操作信息以op表示。其为MongoDB 4.2版本新增功能</span></span><br><span class="line">      host: <span class="string">&#x27;localhost:27041&#x27;</span>, <span class="comment"># 操作所在的主机</span></span><br><span class="line">      desc: <span class="string">&#x27;conn474&#x27;</span>, <span class="comment"># 操作的描述信息</span></span><br><span class="line">      connectionId: 474, <span class="comment"># 操作的连接ID</span></span><br><span class="line">      client: <span class="string">&#x27;127.0.0.1:58103&#x27;</span>, <span class="comment"># 操作的客户端信息</span></span><br><span class="line">      appName: <span class="string">&#x27;mongosh 2.1.5&#x27;</span>, <span class="comment"># 操作的客户端应用信息</span></span><br><span class="line">      clientMetadata: &#123; <span class="comment"># 关于客户端的附加信息，可以包含驱动的版本。</span></span><br><span class="line">        application: &#123; name: <span class="string">&#x27;mongosh 2.1.5&#x27;</span> &#125;,</span><br><span class="line">        driver: &#123; name: <span class="string">&#x27;nodejs|mongosh&#x27;</span>, version: <span class="string">&#x27;6.3.0|2.1.5&#x27;</span> &#125;,</span><br><span class="line">        platform: <span class="string">&#x27;Node.js v20.11.1, LE&#x27;</span>,</span><br><span class="line">        os: &#123;</span><br><span class="line">          name: <span class="string">&#x27;darwin&#x27;</span>,</span><br><span class="line">          architecture: <span class="string">&#x27;x64&#x27;</span>,</span><br><span class="line">          version: <span class="string">&#x27;22.6.0&#x27;</span>,</span><br><span class="line">          <span class="built_in">type</span>: <span class="string">&#x27;Darwin&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      active: <span class="literal">true</span>, <span class="comment"># 操作是否活跃。如果是空闲状态则为false</span></span><br><span class="line">      currentOpTime: <span class="string">&#x27;2024-04-07T14:54:02.994+08:00&#x27;</span>, <span class="comment"># 操作的开始时间。MongoDB 3.6版本新增功能</span></span><br><span class="line">      threaded: <span class="literal">true</span>,</span><br><span class="line">      opid: 236247, <span class="comment"># opid：当前操作在数据库进程中的唯一编号,如果已经发现该操作正在导致数据库系统响应缓慢，则可以考虑将其“杀”死 : db.killOp(236247)</span></span><br><span class="line">      secs_running: Long(<span class="string">&#x27;3&#x27;</span>), <span class="comment"># 操作持续时间,单位：秒</span></span><br><span class="line">      microsecs_running: Long(<span class="string">&#x27;3362378&#x27;</span>), <span class="comment"># 操作持续时间，单位：微秒</span></span><br><span class="line">      op: <span class="string">&#x27;command&#x27;</span>, <span class="comment"># 标识操作类型的字符串，如 command, insert, query, update, delete, getMore, killCursors</span></span><br><span class="line">      ns: <span class="string">&#x27;admin.$cmd&#x27;</span>, <span class="comment"># 操作的命名空间，格式为 db.collection</span></span><br><span class="line">      redacted: <span class="literal">false</span>, <span class="comment"># 是否已脱敏</span></span><br><span class="line">      <span class="built_in">command</span>: &#123; <span class="comment"># 操作命令参数</span></span><br><span class="line">        hello: 1,</span><br><span class="line">        maxAwaitTimeMS: 10000,</span><br><span class="line">        topologyVersion: &#123;</span><br><span class="line">          processId: ObjectId(<span class="string">&#x27;6611f8cd59f7cfaa5c8cd7e4&#x27;</span>),</span><br><span class="line">          counter: Long(<span class="string">&#x27;18&#x27;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class="line">          clusterTime: Timestamp(&#123; t: 1712470998, i: 1 &#125;),</span><br><span class="line">          signature: &#123;</span><br><span class="line">            <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;gvgo03Wqi1AuOVqnrlhzKIK2NAU=&#x27;</span>, 0),</span><br><span class="line">            keyId: Long(<span class="string">&#x27;7346062378896719877&#x27;</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;$db&#x27;</span>: <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      numYields: 0,</span><br><span class="line">      locks: &#123;&#125;, <span class="comment"># 当前操作持有锁的类型和模式。</span></span><br><span class="line">      waitingForLock: <span class="literal">false</span>, <span class="comment"># 是否在等待锁</span></span><br><span class="line">      lockStats: &#123;&#125;, <span class="comment"># 当前操作持有锁的统计。</span></span><br><span class="line">      waitingForFlowControl: <span class="literal">false</span>,</span><br><span class="line">      flowControlStats: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">………………………………</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看等待锁的增加、删除、修改、查询操作</span></span><br><span class="line">&gt; db.currentOp(&#123;</span><br><span class="line"> waitingForLock:<span class="literal">true</span>,</span><br><span class="line"> <span class="variable">$or</span>:[</span><br><span class="line">  &#123;op:&#123;<span class="variable">$in</span>:[<span class="string">&quot;insert&quot;</span>,<span class="string">&quot;update&quot;</span>,<span class="string">&quot;remove&quot;</span>]&#125;&#125;,</span><br><span class="line">  &#123;<span class="string">&quot;query.findandmodify&quot;</span>:&#123;<span class="variable">$exists</span>:<span class="literal">true</span>&#125;&#125;</span><br><span class="line">  ]</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看执行时间超过1s的操作</span></span><br><span class="line">&gt; db.currentOp(&#123;</span><br><span class="line">   secs_running:&#123;<span class="variable">$gt</span>:1&#125;</span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看test数据库中的操作</span></span><br><span class="line">&gt; db.currentOp(&#123;</span><br><span class="line">   ns:/test/</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍MongoDB7.0的一些有用的功能，比如运行js，查看慢查询日志等等&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MongoDB&lt;a href=&quot;https://www.mongodb.com/docs/v7.0/&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;CentOS8(x86_64)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/mongodb/"/>
    
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB Command Line Database Tools</title>
    <link href="https://blog.hanqunfeng.com/2024/04/03/mongodb7-tools/"/>
    <id>https://blog.hanqunfeng.com/2024/04/03/mongodb7-tools/</id>
    <published>2024-04-03T13:30:05.000Z</published>
    <updated>2024-04-07T06:16:15.022Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍Linux下MongoDB Command Line Database Tools的安装与使用</p></li><li class="lvl-2"><p>MongoDB Command Line Database Tools<a href="https://www.mongodb.com/docs/database-tools/">官方文档</a></p></li><li class="lvl-2"><p>本文基于<code>CentOS8(x86_64)</code></p></li></ul><span id="more"></span><h2 id="MongoDB-Database-Tools">MongoDB Database Tools</h2><ul class="lvl-0"><li class="lvl-2"><p>MongoDB Database Tools是MongoDB官方提供的数据库管理工具，可以用于管理MongoDB数据库，包括MongoDB的备份、恢复、监控等功能。</p></li><li class="lvl-2"><p><a href="https://www.mongodb.com/try/download/database-tools">MongoDB Database Tools的下载地址</a></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">wget https://fastdl.mongodb.org/tools/db/mongodb-database-tools-rhel80-x86_64-100.9.4.tgz</span><br><span class="line"><span class="comment"># 解压安装包</span></span><br><span class="line">tar -xvzf mongodb-database-tools-rhel80-x86_64-100.9.4.tgz</span><br><span class="line"><span class="comment"># 创建软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s mongodb-database-tools-rhel80-x86_64-100.9.4 /mongodb/tools</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在/etc/profile文件中配置PATH环境变量</span></span><br><span class="line"><span class="built_in">export</span> PATH=/mongodb/tools/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>MongoDB Database Tools常用命令，详细的使用方法请查看<a href="https://www.mongodb.com/docs/database-tools/">官方文档</a></p></li></ul><table><thead><tr><th>文件名称</th><th>作用</th></tr></thead><tbody><tr><td>mongostat</td><td>数据库性能监控工具</td></tr><tr><td>mongotop</td><td>热点表监控工具</td></tr><tr><td>mongodump</td><td>数据库逻辑备份工具</td></tr><tr><td>mongorestore</td><td>数据库逻辑恢复工具</td></tr><tr><td>mongoexport</td><td>数据导出工具</td></tr><tr><td>mongoimport</td><td>数据导入工具</td></tr><tr><td>bsondump</td><td>BSON格式转换工具</td></tr><tr><td>mongofiles</td><td>GridFS文件工具</td></tr></tbody></table><h2 id="mongoexport-导出数据">mongoexport: 导出数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导出csv格式的数据</span></span><br><span class="line">mongoexport <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class="built_in">test</span> -c books -f _id,title,<span class="built_in">type</span>,tag --<span class="built_in">type</span>=csv -o books.csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出json格式的数据</span></span><br><span class="line">mongoexport <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class="built_in">test</span> -c books -f _id,title,<span class="built_in">type</span>,tag --<span class="built_in">type</span>=json -o books.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line">-d 指定数据库</span><br><span class="line">-c 指定集合</span><br><span class="line">-f 指定导出字段，csv格式需要指定字段，json格式可以不指定字段，默认导出全部</span><br><span class="line">--<span class="built_in">type</span>=csv/json 指定导出格式</span><br><span class="line">-o 指定导出文件</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出时可以增加过滤条件</span></span><br><span class="line">mongoexport <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb -c user --<span class="built_in">type</span>=json -o user.json  --<span class="built_in">limit</span>=10 --skip=2 --<span class="built_in">sort</span>=<span class="string">&#x27;&#123;&quot;name&quot;:1&#125;&#x27;</span> --query=<span class="string">&#x27;&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:25&#125;,&quot;name&quot;:&quot;zhangsan&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line">--<span class="built_in">limit</span>=10 指定导出条数</span><br><span class="line">--skip=2 指定跳过条数</span><br><span class="line">--<span class="built_in">sort</span>=<span class="string">&#x27;&#123;&quot;name&quot;:1&#125;&#x27;</span> 指定排序字段</span><br><span class="line">--query=<span class="string">&#x27;&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:25&#125;,&quot;name&quot;:&quot;zhangsan&quot;&#125;&#x27;</span> 指定查询条件，注意这里的查询条件是json格式，字段名需要使用双引号包裹</span><br></pre></td></tr></table></figure><h2 id="mongoimport-导入数据">mongoimport: 导入数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入csv格式的数据</span></span><br><span class="line"><span class="comment"># 注意此时导入的csv文件中第一行如果是字段名，需要先删除第一行再导入，这里使用了 -f 指定字段，来和导入的csv文件的列一一对应</span></span><br><span class="line">mongoimport <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class="built_in">test</span> -c books_new -f _id,title,<span class="built_in">type</span>,tag --<span class="built_in">type</span>=csv --file books.csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意此时导入的csv文件中第一行如果是字段名，需要先删除第一行再导入，这里使用了 -f 指定字段，来和导入的csv文件的列一一对应</span></span><br><span class="line">mongoimport <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class="built_in">test</span> -c books_new --headerline --<span class="built_in">type</span>=csv --file books.csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入json格式的数据</span></span><br><span class="line">mongoimport <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class="built_in">test</span> -c books_new --<span class="built_in">type</span>=json --file books.json</span><br><span class="line"></span><br><span class="line">-d 指定数据库</span><br><span class="line">-c 指定集合</span><br><span class="line">-f 指定导入字段，csv格式需要指定字段</span><br><span class="line">--headerline 指定第一行是字段名</span><br><span class="line">--<span class="built_in">type</span>=csv/json 指定导入格式</span><br><span class="line">--file 指定导入文件</span><br><span class="line">--mode 指定导入方式，默认是insert，还可以是upsert，merge，delete</span><br></pre></td></tr></table></figure><blockquote><p>mode说明</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>insert: 默认值，如果数据不存在，则插入，如果存在，则报错</p></li><li class="lvl-2"><p>upsert: 如果数据不存在，则插入，如果存在，则更新</p></li><li class="lvl-2"><p>merge: 如果数据不存在，则插入，如果存在，则合并后更新</p></li><li class="lvl-2"><p>delete: 如果数据不存在，也不执行插入，如果存在，则删除</p></li></ul><h2 id="mongostat-数据库性能监控">mongostat: 数据库性能监控</h2><ul class="lvl-0"><li class="lvl-2"><p>mongostat命令用于实时监控MongoDB数据库的性能，包括连接数、文档数、索引数、内存使用情况等。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监控20次，间隔1秒</span></span><br><span class="line">mongostat <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -n20 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line">-n 指定监控次数</span><br><span class="line">1 指定监控间隔时间，单位为秒</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控实时数据</span></span><br><span class="line">host               insert query update delete getmore <span class="built_in">command</span> dirty  used flushes vsize  res qrw arw net_in net_out conn <span class="built_in">set</span> repl                time</span><br><span class="line">10.1.2.142:27017    *0    *0     *0     *0       0     4|0     0.4%  5.0%       0 2.95G 151M 0|0 0|0  1.13k   75.2k   24 rs0  SLV Apr  3 08:37:49.405</span><br><span class="line">10.1.2.26:27017     *0    *0     *0     *0       0     2|0     0.2%  3.8%       0 2.87G 138M 0|0 0|0   710b   74.3k   14 rs0  SEC Apr  3 08:37:49.385</span><br><span class="line">10.1.2.41:27017     *0    *0     *0     *0       0     5|0     0.0% 17.7%       0 2.96G 184M 0|0 0|0  1.45k   75.5k   16 rs0  SEC Apr  3 08:37:49.426</span><br></pre></td></tr></table></figure><blockquote><p>指标说明</p></blockquote><table><thead><tr><th>指标名</th><th>说明</th></tr></thead><tbody><tr><td><code>inserts</code></td><td>每秒插入数</td></tr><tr><td><code>query</code></td><td>每秒查询数</td></tr><tr><td><code>update</code></td><td>每秒更新数</td></tr><tr><td><code>delete</code></td><td>每秒删除数</td></tr><tr><td><code>getmore</code></td><td>每秒getmore数</td></tr><tr><td><code>command</code></td><td>每秒命令数，涵盖了内部的一些操作</td></tr><tr><td><code>%dirty</code></td><td>WiredTiger缓存中脏数据百分比</td></tr><tr><td><code>%used</code></td><td>WiredTiger 正在使用的缓存百分比</td></tr><tr><td><code>flushes</code></td><td>WiredTiger执行CheckPoint的次数</td></tr><tr><td><code>vsize</code></td><td>虚拟内存使用量</td></tr><tr><td><code>res</code></td><td>物理内存使用量</td></tr><tr><td><code>qrw</code></td><td>客户端读写等待队列数量，高并发时，一般队列值会升高</td></tr><tr><td><code>arw</code></td><td>客户端读写活跃个数</td></tr><tr><td><code>netIn</code></td><td>网络接收数据量</td></tr><tr><td><code>netOut</code></td><td>网络发送数据量</td></tr><tr><td><code>conn</code></td><td>当前连接数</td></tr><tr><td><code>set</code></td><td>所属复制集名称</td></tr><tr><td><code>repl</code></td><td>复制节点状态，如PRI(主节点,我这里主节点显示为SLV),SEC(从节点),ARB(仲裁节点),REC(节点正在恢复),UNK(未知状态),RTR(mongos)</td></tr><tr><td><code>time</code></td><td>时间戳</td></tr></tbody></table><blockquote><p>需要重点关注的指标<br>1.插入、删除、修改、查询的速率是否产生较大波动，是否超出预期。<br>2.qrw、arw：队列是否较高，若长时间大于0则说明此时读写速度较慢。<br>3.conn：连接数是否太多。<br>4.dirty：百分比是否较高，若持续高于10%则说明磁盘I/O存在瓶颈。<br>5.netIn、netOut：是否超过网络带宽阈值。<br>6.repl：状态是否异常，如PRI、SEC、RTR为正常，若出现REC等异常值则需要修复。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定监控指标 -o</span></span><br><span class="line">mongostat <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -n1 1 -o=<span class="string">&#x27;host,insert,query,update,delete,qrw,arw,conn,dirty,repl,version&#x27;</span></span><br><span class="line"></span><br><span class="line">            host insert query update delete qrw arw conn dirty repl version</span><br><span class="line">10.1.2.142:27017     *0    *0     *0     *0 0|0 0|0   24  0.4%  SLV   7.0.7</span><br><span class="line"> 10.1.2.26:27017     *0    *0     *0     *0 0|0 0|0   14  0.2%  SEC   7.0.7</span><br><span class="line"> 10.1.2.41:27017     *0    *0     *0     *0 0|0 0|0   16  0.4%  SEC   7.0.7</span><br></pre></td></tr></table></figure><h2 id="mongotop-查看数据库性能">mongotop: 查看数据库性能</h2><ul class="lvl-0"><li class="lvl-2"><p>mongotop命令可用于查看数据库的热点表，通过观察mongotop的输出，可以判定是哪些集合占用了大部分读写时间。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监控20次，间隔1秒</span></span><br><span class="line">mongotop <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -n 20 1</span><br><span class="line"></span><br><span class="line">                             ns    total    <span class="built_in">read</span>    write    2024-04-03T09:16:53Z</span><br><span class="line">                 admin.atlascli      0ms     0ms      0ms</span><br><span class="line">              admin.system.keys      0ms     0ms      0ms</span><br><span class="line">             admin.system.users      0ms     0ms      0ms</span><br><span class="line">           admin.system.version      0ms     0ms      0ms</span><br><span class="line">config.external_validation_keys      0ms     0ms      0ms</span><br><span class="line">        config.image_collection      0ms     0ms      0ms</span><br><span class="line">          config.queryAnalyzers      0ms     0ms      0ms</span><br><span class="line">                config.settings      0ms     0ms      0ms</span><br><span class="line">    config.shardMergeRecipients      0ms     0ms      0ms</span><br><span class="line">        config.shardSplitDonors      0ms     0ms      0ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出说明</span></span><br><span class="line">ns 集合名称</span><br><span class="line">total 花费在该集合上的时长</span><br><span class="line"><span class="built_in">read</span> 花费在该集合上的读操作时长</span><br><span class="line">write 花费在该集合上的写操作时长</span><br></pre></td></tr></table></figure><h2 id="mongodump-备份数据库">mongodump: 备份数据库</h2><ul class="lvl-0"><li class="lvl-2"><p>mongodump命令用于备份数据库</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份所有库，默认输出到dump文件夹下</span></span><br><span class="line">mongodump <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> --gzip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份指定库，默认输出到dump文件夹下</span></span><br><span class="line">mongodump <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class="built_in">test</span> --gzip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份指定集合</span></span><br><span class="line">mongodump <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class="built_in">test</span> -c books --gzip -o ./books</span><br><span class="line">2024-04-03T09:36:18.980+0000writing test.books to books/test/books.bson.gz</span><br><span class="line">2024-04-03T09:36:18.983+0000<span class="keyword">done</span> dumping test.books (50 documents)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line">-d 指定数据库，不指定则导出全部数据库</span><br><span class="line">-c 指定集合，不指定则导出全部集合</span><br><span class="line">--gzip 指定压缩格式，导出的文件会被压缩为.gz格式</span><br><span class="line">-o 指定备份目录，不指定则默认为当前目录下的dump文件夹</span><br><span class="line"></span><br><span class="line"><span class="comment"># 类似于 mongoexport ,备份数据时同样支持过滤条件</span></span><br><span class="line">mongodump <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class="built_in">test</span> -c books --gzip -o ./books --query=<span class="string">&#x27;&#123;&quot;name&quot;:&quot;hello&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="mongorestore-恢复数据库">mongorestore: 恢复数据库</h2><ul class="lvl-0"><li class="lvl-2"><p>mongorestore命令用于恢复数据库</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复到相同数据库的相同集合,此时会将dump目录下的所有数据库进行恢复</span></span><br><span class="line">mongorestore <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> --gzip ./dump</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只恢复指定的库下的所有集合</span></span><br><span class="line">mongorestore <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> --nsInclude=<span class="string">&quot;test.*&quot;</span> --gzip ./dump</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只恢复指定的集合</span></span><br><span class="line">mongorestore <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> --nsInclude=<span class="string">&quot;test.books&quot;</span> --gzip ./dump</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line">--nsInclude=test.books 指定要恢复的集合</span><br><span class="line">--gzip 指定压缩格式</span><br></pre></td></tr></table></figure><h2 id="bsondump-查看BSON文件内容">bsondump: 查看BSON文件内容</h2><ul class="lvl-0"><li class="lvl-2"><p>bsondump命令用于查看BSON文件内容，可以将bson格式的数据转换为json格式，方便查看。</p></li><li class="lvl-2"><p>我们使用mongodump导出的数据格式为bson格式，可以使用bsondump命令将其转换为json格式。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果导出的是压缩格式需要先解压缩</span></span><br><span class="line">gunzip emp.bson.gz</span><br><span class="line"><span class="comment"># 将bson文件转换为json文件</span></span><br><span class="line">bsondump emp.bson &gt; emp.json</span><br></pre></td></tr></table></figure><h2 id="mongofiles-文件存储">mongofiles: 文件存储</h2><ul class="lvl-0"><li class="lvl-2"><p>mongofiles命令用于文件存储，可以将文件存储到MongoDB中，然后通过mongofiles命令进行查看和删除。</p></li><li class="lvl-2"><p>不过现在文件存储基本都会使用S3，很少使用mongodb了。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传</span></span><br><span class="line">mongofiles <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb put shell从入门到精通.docx</span><br><span class="line"><span class="comment"># 上传后会在指定的数据库中创建两个集合：fs.files 和 fs.chunks</span></span><br><span class="line"></span><br><span class="line">&gt; db.fs.files.find()</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    _id: ObjectId(<span class="string">&#x27;66120f0135b8419b3a1ca510&#x27;</span>), <span class="comment"># 文档ID，唯一标识</span></span><br><span class="line">    length: Long(<span class="string">&#x27;486680&#x27;</span>),                    <span class="comment"># 文件大小</span></span><br><span class="line">    chunkSize: 261120,                         <span class="comment"># 每个分片的大小</span></span><br><span class="line">    uploadDate: ISODate(<span class="string">&#x27;2024-04-07T03:12:01.965Z&#x27;</span>), <span class="comment"># 上传时间</span></span><br><span class="line">    filename: <span class="string">&#x27;shell从入门到精通.docx&#x27;</span>,          <span class="comment"># 文件名</span></span><br><span class="line">    metadata: &#123;&#125;                               <span class="comment"># 元数据</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; db.fs.chunks.find()</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    _id: ObjectId(<span class="string">&#x27;66120f0135b8419b3a1ca512&#x27;</span>),     <span class="comment"># 分片ID</span></span><br><span class="line">    files_id: ObjectId(<span class="string">&#x27;66120f0135b8419b3a1ca510&#x27;</span>), <span class="comment"># 文档ID，对应fs.files集合中的_id</span></span><br><span class="line">    n: 1,                                         <span class="comment"># 分片序号</span></span><br><span class="line">    data: &lt;Binary&gt;                                <span class="comment"># 分片数据</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">mongofiles <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索</span></span><br><span class="line">mongofiles <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb search shell</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载</span></span><br><span class="line">mongofiles <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb get shell从入门到精通.docx</span><br><span class="line"><span class="comment"># 根据id获取文件</span></span><br><span class="line">mongofiles <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb get_id <span class="string">&#x27;&#123;&quot;$oid&quot;: &quot;66120f0135b8419b3a1ca510&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">mongofiles <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb delete shell从入门到精通.docx</span><br><span class="line"><span class="comment"># 根据id删除文件</span></span><br><span class="line">mongofiles <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb delete_id <span class="string">&#x27;&#123;&quot;$oid&quot;: &quot;66120f0135b8419b3a1ca510&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍Linux下MongoDB Command Line Database Tools的安装与使用&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MongoDB Command Line Database Tools&lt;a href=&quot;https://www.mongodb.com/docs/database-tools/&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;CentOS8(x86_64)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/mongodb/"/>
    
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB7.0--复制集</title>
    <link href="https://blog.hanqunfeng.com/2024/03/29/mongodb7-replset/"/>
    <id>https://blog.hanqunfeng.com/2024/03/29/mongodb7-replset/</id>
    <published>2024-03-29T13:30:05.000Z</published>
    <updated>2024-04-08T06:09:08.508Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍Linux下MongoDB7.0复制集的安装和使用</p></li><li class="lvl-2"><p>MongoDB<a href="https://www.mongodb.com/docs/v7.0/">官方文档</a></p></li><li class="lvl-2"><p>本文基于<code>CentOS8(x86_64)</code></p></li><li class="lvl-2"><p><code>Mongodb分片集群</code>搭建参看<a href="/2020/03/19/mongodb-mongos/" title="MongoDB 分片集群搭建">MongoDB 分片集群搭建</a>，虽然是基于<code>4.4</code>版本的，但是安装方式差别不大，只是配置文件中个别的属性名称发生了变化。</p></li></ul><span id="more"></span><h2 id="复制集节点类型">复制集节点类型</h2><ul class="lvl-0"><li class="lvl-2"><p>一个复制集最多支持50个节点，且做多只能有7个节点参与投票，节点类型分为<code>Primary</code>、<code>Secondary</code>与<code>Arbiter</code>。</p></li><li class="lvl-2"><p><code>Primary</code>：主节点，其接收所有的写请求，然后把修改同步到所有 <code>Secondary</code> 节点。一个复制集只能有一个主节点，当主节点<em><strong>挂掉</strong></em>后，其他节点会重新选举出来一个主节点。</p></li><li class="lvl-2"><p><code>Secondary</code>：备节点，与主节点保持同样的数据集。当主节点<em><strong>挂掉</strong></em>时，参与竞选主节点。分为以下三个不同类型：</p><ul class="lvl-2"><li class="lvl-4">Hidden = false：正常的只读节点，是否可选为主，是否可投票，取决于 <code>Priority</code>，<code>Vote</code> 的值；</li><li class="lvl-4">Hidden = true：隐藏节点，对客户端不可见， 可以参与选举，但是 <code>Priority</code> 必须为 0，即不能被提升为主。 由于隐藏节点不会接受业务访问，因此可通过隐藏节点做一些数据备份、离线计算的任务，这并不会影响整个复制集。</li><li class="lvl-4">Delayed ：延迟节点，必须同时具备<code>隐藏节点</code>和<code>Priority=0</code>的特性，会延迟一定的时间（secondaryDelaySecs 配置决定）从上游复制增量，常用于快速回滚场景。</li></ul></li><li class="lvl-2"><p><code>Arbiter</code>：仲裁节点，只用于参与选举投票，本身不承载任何数据，只作为投票角色。比如你部署了2个节点的复制集，1个 Primary，1个Secondary，任意节点宕机，复制集将不能提供服务了（无法选出Primary），这时可以给复制集添加⼀个 Arbiter节点，即使有节点宕机，仍能选出Primary。 Arbiter本身不存储数据，是非常轻量级的服务，当复制集成员为偶数时，最好加入⼀个Arbiter节点，以提升复制集可用性。</p></li></ul><h2 id="搭建基于3台机器的复制集">搭建基于3台机器的复制集</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10.1</span><span class="number">.2</span><span class="number">.26</span></span><br><span class="line"><span class="number">10.1</span><span class="number">.2</span><span class="number">.142</span></span><br><span class="line"><span class="number">10.1</span><span class="number">.2</span><span class="number">.41</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>mongod.conf配置文件，需要创建好相关目录</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongodb/log/mongodb.log</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/mongodb/data</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line">  <span class="attr">replSetName:</span> <span class="string">rs0</span></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line">  <span class="attr">keyFile:</span> <span class="string">/mongodb/mongo.key</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>创建key文件</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openssl rand -<span class="built_in">base64</span> 756 &gt; /mongodb/mongo.key</span><br><span class="line"><span class="comment"># 修改权限</span></span><br><span class="line"><span class="built_in">chmod</span> 600 /mongodb/mongo.key</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>分别启动3个节点</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongodb/mongo.conf</span><br></pre></td></tr></table></figure><h2 id="初始化">初始化</h2><ul class="lvl-0"><li class="lvl-2"><p>登录任意节点</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongosh 10.1.2.26:27017</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>初始化复制集</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 必须切换到admin数据库</span></span><br><span class="line"><span class="built_in">test</span>&gt; use admin</span><br><span class="line">switched to db admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">admin&gt; rs.initiate(</span><br><span class="line">  &#123;</span><br><span class="line">    _id: <span class="string">&quot;rs0&quot;</span>,</span><br><span class="line">    members: [</span><br><span class="line">      &#123; _id : 0, host : <span class="string">&quot;10.1.2.26&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 1, host : <span class="string">&quot;10.1.2.142&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 2, host : <span class="string">&quot;10.1.2.41&quot;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看谁是主节点</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看谁是主节点，可以看到此时主节点是 10.1.2.26</span></span><br><span class="line">&gt; rs.<span class="function"><span class="title">isMaster</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">  topologyVersion: &#123;   <span class="comment"># 拓扑版本，包含进程 ID 和计数器。</span></span><br><span class="line">    processId: ObjectId(<span class="string">&#x27;660a1cdf2e7a827807cac6f9&#x27;</span>),  <span class="comment"># 进程 ID</span></span><br><span class="line">    counter: Long(<span class="string">&#x27;6&#x27;</span>)   <span class="comment"># 计数器，用于标识拓扑版本</span></span><br><span class="line">  &#125;,</span><br><span class="line">  hosts: [ <span class="string">&#x27;10.1.2.26:27017&#x27;</span>, <span class="string">&#x27;10.1.2.142:27017&#x27;</span>, <span class="string">&#x27;10.1.2.41:27017&#x27;</span> ], <span class="comment"># 复制集中所有成员的主机和端口号列表。</span></span><br><span class="line">  setName: <span class="string">&#x27;rs0&#x27;</span>,    <span class="comment"># 复制集的名称</span></span><br><span class="line">  setVersion: 1,     <span class="comment"># 复制集的版本号</span></span><br><span class="line">  ismaster: <span class="literal">true</span>,    <span class="comment"># 当前节点是否为主节点</span></span><br><span class="line">  secondary: <span class="literal">false</span>,  <span class="comment"># 当前节点是否为从节点</span></span><br><span class="line">  primary: <span class="string">&#x27;10.1.2.26:27017&#x27;</span>, <span class="comment"># 主节点的主机名和端口号</span></span><br><span class="line">  me: <span class="string">&#x27;10.1.2.26:27017&#x27;</span>,      <span class="comment"># 当前节点的主机名和端口号</span></span><br><span class="line">  electionId: ObjectId(<span class="string">&#x27;7fffffff0000000000000001&#x27;</span>), <span class="comment"># 选举 ID</span></span><br><span class="line">  lastWrite: &#123; <span class="comment"># 最后一次写入操作的时间信息</span></span><br><span class="line">    opTime: &#123; ts: Timestamp(&#123; t: 1711939636, i: 7 &#125;), t: Long(<span class="string">&#x27;1&#x27;</span>) &#125;, <span class="comment"># 操作时间戳</span></span><br><span class="line">    lastWriteDate: ISODate(<span class="string">&#x27;2024-04-01T02:47:16.000Z&#x27;</span>),               <span class="comment"># 最后一次写入操作的时间</span></span><br><span class="line">    majorityOpTime: &#123; ts: Timestamp(&#123; t: 1711939636, i: 7 &#125;), t: Long(<span class="string">&#x27;1&#x27;</span>) &#125;, <span class="comment"># 大多数写操作的时间戳</span></span><br><span class="line">    majorityWriteDate: ISODate(<span class="string">&#x27;2024-04-01T02:47:16.000Z&#x27;</span>)                    <span class="comment"># 大多数写操作的时间</span></span><br><span class="line">  &#125;,</span><br><span class="line">  maxBsonObjectSize: 16777216,                    <span class="comment"># 最大 BSON 对象大小</span></span><br><span class="line">  maxMessageSizeBytes: 48000000,                  <span class="comment"># 最大消息大小(以字节为单位）)</span></span><br><span class="line">  maxWriteBatchSize: 100000,                      <span class="comment"># 最大写批次大小</span></span><br><span class="line">  localTime: ISODate(<span class="string">&#x27;2024-04-01T02:47:20.408Z&#x27;</span>), <span class="comment"># 本地时间</span></span><br><span class="line">  logicalSessionTimeoutMinutes: 30,               <span class="comment"># 登录超时时间(以分钟为单位)</span></span><br><span class="line">  connectionId: 7,                                <span class="comment"># 连接 ID</span></span><br><span class="line">  minWireVersion: 0,                              <span class="comment"># 最小Wire版本</span></span><br><span class="line">  maxWireVersion: 21,                             <span class="comment"># 最大Wire版本</span></span><br><span class="line">  readOnly: <span class="literal">false</span>,                                <span class="comment"># 当前节点是否为只读节点</span></span><br><span class="line">  ok: 1,                                          <span class="comment"># 操作是否成功</span></span><br><span class="line">  <span class="string">&#x27;$clusterTime&#x27;</span>: &#123;                               <span class="comment"># 集群时间</span></span><br><span class="line">    clusterTime: Timestamp(&#123; t: 1711939636, i: 7 &#125;), <span class="comment"># 集群时间戳</span></span><br><span class="line">    signature: &#123;   <span class="comment"># 签名信息</span></span><br><span class="line">      <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;OOXSWapWStZk2n4cyJ7jdBS87do=&#x27;</span>, 0), <span class="comment"># 签名哈希</span></span><br><span class="line">      keyId: Long(<span class="string">&#x27;7352724745051176965&#x27;</span>) <span class="comment"># 密钥 ID</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  operationTime: Timestamp(&#123; t: 1711939636, i: 7 &#125;), <span class="comment"># 操作时间戳</span></span><br><span class="line">  isWritablePrimary: <span class="literal">true</span> <span class="comment"># 当前主节点是否可写</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看集群状态</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&gt; rs.status()</span><br><span class="line"><span class="comment"># 这里只列出节点的信息</span></span><br><span class="line">…………………………</span><br><span class="line">members: [   <span class="comment"># 复制集成员列表</span></span><br><span class="line">    &#123;</span><br><span class="line">      _id: 0, <span class="comment"># 节点 ID</span></span><br><span class="line">      name: <span class="string">&#x27;10.1.2.26:27017&#x27;</span>, <span class="comment"># 节点主机名和端口号</span></span><br><span class="line">      health: 1, <span class="comment"># 节点健康状态，这里是 1，表示健康</span></span><br><span class="line">      state: 1, <span class="comment"># 节点状态，这里是 1，表示主节点</span></span><br><span class="line">      stateStr: <span class="string">&#x27;PRIMARY&#x27;</span>, <span class="comment"># 节点状态字符串</span></span><br><span class="line">      <span class="built_in">uptime</span>: 88366, <span class="comment"># 节点运行时间</span></span><br><span class="line">      optime: &#123; ts: Timestamp(&#123; t: 1712044133, i: 1 &#125;), t: Long(<span class="string">&#x27;5&#x27;</span>) &#125;, <span class="comment"># 节点操作时间戳</span></span><br><span class="line">      optimeDate: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.000Z&#x27;</span>), <span class="comment"># 节点操作时间</span></span><br><span class="line">      lastAppliedWallTime: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.125Z&#x27;</span>), <span class="comment"># 节点最后应用时间</span></span><br><span class="line">      lastDurableWallTime: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.125Z&#x27;</span>), <span class="comment"># 节点最后持久化时间</span></span><br><span class="line">      syncSourceHost: <span class="string">&#x27;&#x27;</span>, <span class="comment"># 同步源主机名</span></span><br><span class="line">      syncSourceId: -1, <span class="comment"># 同步源节点 ID</span></span><br><span class="line">      infoMessage: <span class="string">&#x27;Could not find member to sync from&#x27;</span>, <span class="comment"># 节点信息消息</span></span><br><span class="line">      electionTime: Timestamp(&#123; t: 1712044063, i: 1 &#125;), <span class="comment"># 选举时间戳</span></span><br><span class="line">      electionDate: ISODate(<span class="string">&#x27;2024-04-02T07:47:43.000Z&#x27;</span>), <span class="comment"># 选举时间</span></span><br><span class="line">      configVersion: 4, <span class="comment"># 配置版本</span></span><br><span class="line">      configTerm: 5, <span class="comment"># 选举任期</span></span><br><span class="line">      self: <span class="literal">true</span>, <span class="comment"># 是否为主节点</span></span><br><span class="line">      lastHeartbeatMessage: <span class="string">&#x27;&#x27;</span> <span class="comment"># 节点心跳消息</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      _id: 1,</span><br><span class="line">      name: <span class="string">&#x27;10.1.2.142:27017&#x27;</span>,</span><br><span class="line">      health: 1,</span><br><span class="line">      state: 2, <span class="comment"># 节点状态，这里是 2，表示从节点</span></span><br><span class="line">      stateStr: <span class="string">&#x27;SECONDARY&#x27;</span>,</span><br><span class="line">      <span class="built_in">uptime</span>: 88363,</span><br><span class="line">      optime: &#123; ts: Timestamp(&#123; t: 1712044133, i: 1 &#125;), t: Long(<span class="string">&#x27;5&#x27;</span>) &#125;,</span><br><span class="line">      optimeDurable: &#123; ts: Timestamp(&#123; t: 1712044133, i: 1 &#125;), t: Long(<span class="string">&#x27;5&#x27;</span>) &#125;,</span><br><span class="line">      optimeDate: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.000Z&#x27;</span>),</span><br><span class="line">      optimeDurableDate: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.000Z&#x27;</span>),</span><br><span class="line">      lastAppliedWallTime: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.125Z&#x27;</span>),</span><br><span class="line">      lastDurableWallTime: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.125Z&#x27;</span>),</span><br><span class="line">      lastHeartbeat: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.140Z&#x27;</span>), <span class="comment"># 最后一次心跳时间</span></span><br><span class="line">      lastHeartbeatRecv: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.655Z&#x27;</span>), <span class="comment"># 最后一次接收心跳时间</span></span><br><span class="line">      pingMs: Long(<span class="string">&#x27;0&#x27;</span>), <span class="comment"># 节点心跳间隔时间</span></span><br><span class="line">      lastHeartbeatMessage: <span class="string">&#x27;&#x27;</span>, <span class="comment"># 节点心跳消息</span></span><br><span class="line">      syncSourceHost: <span class="string">&#x27;10.1.2.26:27017&#x27;</span>, <span class="comment"># 同步源主机名</span></span><br><span class="line">      syncSourceId: 0, <span class="comment"># 同步源节点 ID</span></span><br><span class="line">      infoMessage: <span class="string">&#x27;&#x27;</span>, <span class="comment"># 节点信息消息</span></span><br><span class="line">      configVersion: 4, <span class="comment"># 配置版本</span></span><br><span class="line">      configTerm: 5 <span class="comment"># 选举任期</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      _id: 2,</span><br><span class="line">      name: <span class="string">&#x27;10.1.2.41:27017&#x27;</span>,</span><br><span class="line">      health: 0, <span class="comment"># 节点健康状态，这里是0，表示节点不可达，因为该节点的mongo服务被关掉了，这里只是为了展示不同的状态</span></span><br><span class="line">      state: 8, <span class="comment"># 节点状态，这里是8，表示不可达</span></span><br><span class="line">      stateStr: <span class="string">&#x27;(not reachable/healthy)&#x27;</span>, <span class="comment"># 节点状态字符串，提示节点不可达</span></span><br><span class="line">      <span class="built_in">uptime</span>: 0,</span><br><span class="line">      optime: &#123; ts: Timestamp(&#123; t: 0, i: 0 &#125;), t: Long(<span class="string">&#x27;-1&#x27;</span>) &#125;,</span><br><span class="line">      optimeDurable: &#123; ts: Timestamp(&#123; t: 0, i: 0 &#125;), t: Long(<span class="string">&#x27;-1&#x27;</span>) &#125;,</span><br><span class="line">      optimeDate: ISODate(<span class="string">&#x27;1970-01-01T00:00:00.000Z&#x27;</span>),</span><br><span class="line">      optimeDurableDate: ISODate(<span class="string">&#x27;1970-01-01T00:00:00.000Z&#x27;</span>),</span><br><span class="line">      lastAppliedWallTime: ISODate(<span class="string">&#x27;2024-04-02T07:47:23.818Z&#x27;</span>),</span><br><span class="line">      lastDurableWallTime: ISODate(<span class="string">&#x27;2024-04-02T07:47:23.818Z&#x27;</span>),</span><br><span class="line">      lastHeartbeat: ISODate(<span class="string">&#x27;2024-04-02T07:48:53.163Z&#x27;</span>),</span><br><span class="line">      lastHeartbeatRecv: ISODate(<span class="string">&#x27;2024-04-02T07:47:32.215Z&#x27;</span>),</span><br><span class="line">      pingMs: Long(<span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">      lastHeartbeatMessage: <span class="string">&#x27;Error connecting to 10.1.2.41:27017 :: caused by :: onInvoke :: caused by :: Connection refused&#x27;</span>, <span class="comment"># 节点心跳消息，这里是连接失败</span></span><br><span class="line">      syncSourceHost: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      syncSourceId: -1,</span><br><span class="line">      infoMessage: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      configVersion: 4,</span><br><span class="line">      configTerm: 4</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">………………………………</span><br></pre></td></tr></table></figure><blockquote><p>state的值及对应的含义<br>0: Startup - 成员正在启动。<br>1: Primary - 成员是主副本集节点。可以接收写入操作。每个副本集有且仅有一个主节点。<br>2: Secondary - 成员是从副本集节点。复制主节点的数据变更。<br>3: Recovering - 成员已经接收到新的数据，但还无法提供读或投票服务。此状态通常是短暂的。<br>4: Fatal - 成员发生了不可恢复的错误，已停止接收和复制数据。人工干预需要重启成员或者副本集。<br>5: Startup2 - 成员正在初始化副本集的内部数据结构。<br>6: Unknown - 因为与此成员的同步被打断，导致此成员状态未知。<br>7: Arbiter - 成员是仲裁者。<br>8: Down - 这个成员目前不能到达。<br>9: Rollback - 这个成员正在滚动回数据以达到一致的状态。<br>10: Removed - 这个成员已经从副本集中删除。</p></blockquote><h2 id="授权">授权</h2><ul class="lvl-0"><li class="lvl-2"><p>创建用户</p></li></ul><blockquote><p>授权后需要重新登录或进行认证后才能继续操作</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录主节点</span></span><br><span class="line">rs0 [direct: primary] <span class="built_in">test</span>&gt; use admin</span><br><span class="line">switched to db admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">rs0 [direct: primary] admin&gt; db.createUser(&#123;</span><br><span class="line"> user: <span class="string">&quot;user&quot;</span>,</span><br><span class="line"> <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line"> roles: [</span><br><span class="line">  &#123; role: <span class="string">&quot;clusterAdmin&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ,</span><br><span class="line">  &#123; role: <span class="string">&quot;userAdminAnyDatabase&quot;</span>, db: <span class="string">&quot;admin&quot;</span>&#125;,</span><br><span class="line">  &#123; role: <span class="string">&quot;dbAdminAnyDatabase&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125;,</span><br><span class="line">  &#123; role: <span class="string">&quot;readWriteAnyDatabase&quot;</span>, db: <span class="string">&quot;admin&quot;</span>&#125;</span><br><span class="line"> ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="登录">登录</h2><ul class="lvl-0"><li class="lvl-2"><p>方法1，连接的同时认证</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认登录test数据库</span></span><br><span class="line">mongosh 10.1.2.26:27017 -u user -p password --authenticationDatabase admin</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.26:27017/test?authSource=admin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群连接，推荐，会自动登录到主节点</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>方法2，先连接，再认证</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mongosh 10.1.2.26:27017</span><br><span class="line">&gt; use admin</span><br><span class="line">switched to db admin</span><br><span class="line">&gt; db.auth(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line">&#123; ok: 1 &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群连接，推荐，会自动登录到主节点</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span></span><br><span class="line">&gt; use admin</span><br><span class="line">switched to db admin</span><br><span class="line">&gt; db.auth(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line">&#123; ok: 1 &#125;</span><br></pre></td></tr></table></figure><h2 id="查看用户信息">查看用户信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先要切换到 admin 数据库</span></span><br><span class="line">rs0 [direct: primary] admin&gt; db.system.users.find()</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    _id: <span class="string">&#x27;admin.user&#x27;</span>,</span><br><span class="line">    userId: UUID(<span class="string">&#x27;19dcd146-6872-41fe-8e39-46bb98b9db5c&#x27;</span>),</span><br><span class="line">    user: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">    db: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">    credentials: &#123;</span><br><span class="line">      <span class="string">&#x27;SCRAM-SHA-1&#x27;</span>: &#123;</span><br><span class="line">        iterationCount: 10000,</span><br><span class="line">        salt: <span class="string">&#x27;DLOOhoEKeG2RKfW8hU4caw==&#x27;</span>,</span><br><span class="line">        storedKey: <span class="string">&#x27;ohQOJeAS3XWUwlFJAGduuiUJptc=&#x27;</span>,</span><br><span class="line">        serverKey: <span class="string">&#x27;rDjqq/nF3awasdaPr2ocJskm7p0=&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&#x27;SCRAM-SHA-256&#x27;</span>: &#123;</span><br><span class="line">        iterationCount: 15000,</span><br><span class="line">        salt: <span class="string">&#x27;6YpcJH2pcL3yC726rpIq6VWSQLSV68i+oqURkw==&#x27;</span>,</span><br><span class="line">        storedKey: <span class="string">&#x27;1nIijUrLAL0lQZ6++O0cxM3VbsprdwRQucVFYkDQWbA=&#x27;</span>,</span><br><span class="line">        serverKey: <span class="string">&#x27;nk8TKbK19zLaD7wJn+991euF9ILE08iPopmJ8YAAqfQ=&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    roles: [</span><br><span class="line">      &#123; role: <span class="string">&#x27;userAdminAnyDatabase&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span> &#125;,</span><br><span class="line">      &#123; role: <span class="string">&#x27;clusterAdmin&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span> &#125;,</span><br><span class="line">      &#123; role: <span class="string">&#x27;dbAdminAnyDatabase&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span> &#125;,</span><br><span class="line">      &#123; role: <span class="string">&#x27;readWriteAnyDatabase&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">rs0 [direct: primary] admin&gt; show <span class="built_in">users</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    _id: <span class="string">&#x27;admin.user&#x27;</span>,</span><br><span class="line">    userId: UUID(<span class="string">&#x27;19dcd146-6872-41fe-8e39-46bb98b9db5c&#x27;</span>),</span><br><span class="line">    user: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">    db: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">    roles: [</span><br><span class="line">      &#123; role: <span class="string">&#x27;userAdminAnyDatabase&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span> &#125;,</span><br><span class="line">      &#123; role: <span class="string">&#x27;clusterAdmin&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span> &#125;,</span><br><span class="line">      &#123; role: <span class="string">&#x27;dbAdminAnyDatabase&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span> &#125;,</span><br><span class="line">      &#123; role: <span class="string">&#x27;readWriteAnyDatabase&#x27;</span>, db: <span class="string">&#x27;admin&#x27;</span> &#125;</span><br><span class="line">    ],</span><br><span class="line">    mechanisms: [ <span class="string">&#x27;SCRAM-SHA-1&#x27;</span>, <span class="string">&#x27;SCRAM-SHA-256&#x27;</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="开启从库读取数据的权限">开启从库读取数据的权限</h2><ul class="lvl-0"><li class="lvl-2"><p>使用当前最新版<code>mongosh-2.2.2</code>连接从库时，默认就支持读取数据，其默认的<code>readPreference</code>为<code>primaryPreferred</code>。</p></li><li class="lvl-2"><p>如果使用之前的版本连接从库时，默认是不能读取数据的，需要手工开启</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提示非主节点，不能查询数据，</span></span><br><span class="line">rs0 [direct: secondary] <span class="built_in">test</span>&gt; show <span class="built_in">users</span></span><br><span class="line">MongoServerError[NotPrimaryNoSecondaryOk]: not primary - consider using db.getMongo().setReadPref() or readPreference <span class="keyword">in</span> the connection string</span><br><span class="line"></span><br><span class="line"><span class="comment"># 早期版本是运行 rs.secondaryOk()，不过现在提示已经不推荐了</span></span><br><span class="line">rs0 [direct: secondary] <span class="built_in">test</span>&gt; rs.secondaryOk()</span><br><span class="line">DeprecationWarning: .setSecondaryOk() is deprecated. Use .setReadPref(<span class="string">&quot;primaryPreferred&quot;</span>) instead</span><br><span class="line">Setting <span class="built_in">read</span> preference from <span class="string">&quot;primary&quot;</span> to <span class="string">&quot;primaryPreferred&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>全局设置<code>readPreference</code>，对本次链接都有效</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启从库读取数据权限</span></span><br><span class="line">rs0 [direct: secondary] <span class="built_in">test</span>&gt; db.getMongo().setReadPref(<span class="string">&quot;primaryPreferred&quot;</span>)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>也可以在链接参数中指定<code>readPreference</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单节点连接</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.142:27017/test?authSource=admin&amp;readPreference=primaryPreferred&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群连接</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&amp;readPreference=primaryPreferred&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>可以在查询时指定<code>readPreference</code>，只针对当前查询，对后续查询无效</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rs0 [direct: secondary] admin&gt; db.system.users.find().readPref(<span class="string">&quot;secondary&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="readPreference">readPreference</h2><p>readPreference决定使用哪一类节点（主或从节点）来满足正在发起的读请求。可选值包括：</p><ul class="lvl-0"><li class="lvl-2"><p><code>primary</code>：默认值，只读主节点的数据。</p></li><li class="lvl-2"><p><code>primaryPreferred</code>：优先读主节点的数据，如果主节点不可用，则读从节点的数据。</p></li><li class="lvl-2"><p><code>secondary</code>：只读从节点的数据。</p></li><li class="lvl-2"><p><code>secondaryPreferred</code>：优先读从节点的数据，如果从节点不可用，则读主节点的数据。</p></li><li class="lvl-2"><p><code>nearest</code>：优先读距离最近的节点的数据。</p></li></ul><blockquote><p>指定 <code>readPreference</code> 时应注意高可用问题。例如将 <code>readPreference</code> 指定 <code>primary</code>，则发生故障转移不存在 <code>primary</code> 期间将没有节点可读。如果业务允许，则应选择 <code>primaryPreferred</code>；</p></blockquote><h2 id="Tag">Tag</h2><ul class="lvl-0"><li class="lvl-2"><p>集群中节点的标签，用于选择节点</p></li><li class="lvl-2"><p><code>readPreference</code> 只能控制使用一类（主或从节点）节点。<code>Tag</code> 则可以将节点选择控制到一个或几个节点。</p></li><li class="lvl-2"><p>为节点添加<code>Tag</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 必须在主节点下才能修改配置</span></span><br><span class="line">conf = rs.conf()</span><br><span class="line">conf.members[0].tags = &#123; purpose: <span class="string">&quot;online&quot;</span> &#125;</span><br><span class="line">conf.members[1].tags = &#123; purpose: <span class="string">&quot;online&quot;</span> &#125;</span><br><span class="line">conf.members[2].tags = &#123; purpose: <span class="string">&quot;analyse&quot;</span>&#125;</span><br><span class="line">rs.reconfig(conf)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>全局指定<code>Tag</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rs0 [direct: primary] admin&gt; db.getMongo().setReadPref(<span class="string">&quot;primaryPreferred&quot;</span>, [ &#123;purpose: <span class="string">&quot;online&quot;</span>&#125; ])</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>在链接参数中指定<code>Tag</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&amp;readPreference=primaryPreferred&amp;readPreferenceTags=purpose:online&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>在查询时指定<code>Tag</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rs0 [direct: secondary] admin&gt; db.system.users.find().readPref(<span class="string">&quot;secondary&quot;</span>, [ &#123;purpose: <span class="string">&quot;analyse&quot;</span>&#125; ])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意，`Tag`只能用于从节点，主节点不支持。</span></span><br><span class="line">rs0 [direct: primary] admin&gt; db.system.users.find().readPref(<span class="string">&quot;primary&quot;</span>, [ &#123;purpose: <span class="string">&quot;online&quot;</span>&#125; ])</span><br><span class="line">MongoInvalidArgumentError: Primary <span class="built_in">read</span> preference cannot be combined with tags</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>使用 Tag 时应注意高可用问题，如果只有一个节点拥有一个特定 Tag，则在这个节点失效时将无节点可读。这在有时候是期望的结果，有时候不是。例如：</p><ul class="lvl-2"><li class="lvl-4">如果报表使用的节点失效，即使不生成报表，通常也不希望将报表负载转移到其他节点上，此时只有一个节点有报表 Tag 是合理的选择；</li><li class="lvl-4">如果线上节点失效，通常希望有替代节点，所以应该保持多个节点有同样的 Tag；</li></ul></li><li class="lvl-2"><p>Tag 有时需要与优先级、选举权综合考虑。例如做报表的节点通常不会希望它成为主节点，则优先级应为 0。</p></li><li class="lvl-2"><p>通过<code>rs.conf()</code>可以查看复制集中各个节点的Tag信息</p></li></ul><h2 id="优先级-priority-与-选举权-vote">优先级(priority) 与 选举权(vote)</h2><ul class="lvl-0"><li class="lvl-2"><p>当 <code>Priority</code> 等于 0 时，它不可以被复制集选举为主，<code>Priority</code> 的值越高，则被选举为主的概率更大。</p></li><li class="lvl-2"><p>当 <code>Vote</code> 等于 0 时，它不可以参与选举投票，此时该节点的 <code>Priority</code> 也必须为 0，即它也不能被选举为主。</p></li><li class="lvl-2"><p>由于一个复制集中最多只有7个投票成员，因此多出来的成员则必须将其vote属性值设置为0，即这些成员将无法参与投票。</p></li><li class="lvl-2"><p>通过<code>rs.conf()</code>可以查看复制集中各个节点的相关配置</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&gt; rs.<span class="function"><span class="title">conf</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">  _id: <span class="string">&#x27;rs0&#x27;</span>,                <span class="comment"># 复制集名称</span></span><br><span class="line">  version: 2,                <span class="comment"># 配置版本号，即conf被修改的次数，每次更改配置时，版本号都会递增。</span></span><br><span class="line">  term: 3,                   <span class="comment"># 选举轮次（election term）。在进行选举时，MongoDB 使用一个单调递增的 term 值来标识选举的周期。这个值会随着选举的进行而增加。</span></span><br><span class="line">  members: [                 <span class="comment"># 成员数组，包含了复制集中的所有成员的详细配置信息。</span></span><br><span class="line">    &#123;</span><br><span class="line">      _id: 0,                <span class="comment"># 成员的唯一标识符，从0开始递增。</span></span><br><span class="line">      host: <span class="string">&#x27;10.1.2.26:27017&#x27;</span>, <span class="comment"># 节点ip+port</span></span><br><span class="line">      arbiterOnly: <span class="literal">false</span>,    <span class="comment"># 是否为仲裁节点</span></span><br><span class="line">      buildIndexes: <span class="literal">true</span>,    <span class="comment"># 是否在此节点上创建索引</span></span><br><span class="line">      hidden: <span class="literal">false</span>,         <span class="comment"># 是否为隐藏节点，即不被客户端发现。</span></span><br><span class="line">      priority: 1,           <span class="comment"># 选举优先级，值越大优先级越高，0表示不能被选举为主节点</span></span><br><span class="line">      tags: &#123; purpose: <span class="string">&#x27;online&#x27;</span> &#125;, <span class="comment"># Tag</span></span><br><span class="line">      secondaryDelaySecs: Long(<span class="string">&#x27;0&#x27;</span>), <span class="comment"># 如果存在延迟复制，表示复制延迟的时间量（以秒为单位），如果为0则表示不是延迟节点。</span></span><br><span class="line">      votes: 1               <span class="comment"># 成员的投票数，大于0表示参与投票。</span></span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">  protocolVersion: Long(<span class="string">&#x27;1&#x27;</span>),                         <span class="comment"># 复制集使用的协议版本。</span></span><br><span class="line">  writeConcernMajorityJournalDefault: <span class="literal">true</span>,           <span class="comment"># 是否在写入操作中默认启用大多数写关注和日志记录</span></span><br><span class="line">  settings: &#123;                                         <span class="comment"># 复制集的全局设置，包含以下属性：</span></span><br><span class="line">    chainingAllowed: <span class="literal">true</span>,                            <span class="comment"># 是否允许从其他成员读取数据。</span></span><br><span class="line">    heartbeatIntervalMillis: 2000,                    <span class="comment"># 心跳间隔，即成员之间检测状态的时间间隔。</span></span><br><span class="line">    heartbeatTimeoutSecs: 10,                         <span class="comment"># 心跳超时时间，如果在此时间内未收到心跳，则认为成员不可用。</span></span><br><span class="line">    electionTimeoutMillis: 10000,                     <span class="comment"># 选举超时时间，即进行选举的时间间隔。</span></span><br><span class="line">    catchUpTimeoutMillis: -1,                         <span class="comment"># 成员在追赶操作时的超时时间。</span></span><br><span class="line">    catchUpTakeoverDelayMillis: 30000,                <span class="comment"># 在追赶操作期间，发生主节点故障时，延迟节点接管主节点之前的延迟时间。</span></span><br><span class="line">    getLastErrorModes: &#123;&#125;,                            <span class="comment"># 指定写操作的确认模式。</span></span><br><span class="line">    getLastErrorDefaults: &#123; w: 1, wtimeout: 0 &#125;,      <span class="comment"># 指定写操作的默认确认参数。</span></span><br><span class="line">    replicaSetId: ObjectId(<span class="string">&#x27;660a20282e7a827807cac803&#x27;</span>) <span class="comment"># 复制集的唯一标识符。</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">    ………………</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>修改节点优先级</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 必须在主节点执行</span></span><br><span class="line">cfg = rs.conf()</span><br><span class="line"><span class="comment"># 保存成功后，由于当前节点的优先级最高，所以集群会发起重新选举将当前节点设置为主节点</span></span><br><span class="line">cfg.members[2].priority = 10</span><br><span class="line">rs.reconfig(cfg)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>设置隐藏节点</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 必须在主节点执行</span></span><br><span class="line">cfg = rs.conf()</span><br><span class="line">cfg.members[2].priority = 0</span><br><span class="line">cfg.members[2].hidden = <span class="literal">true</span></span><br><span class="line">rs.reconfig(cfg)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>配置延时节点</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cfg = rs.conf()</span><br><span class="line">cfg.members[2].priority = 0</span><br><span class="line">cfg.members[2].hidden = <span class="literal">true</span></span><br><span class="line"><span class="comment">#延迟60秒</span></span><br><span class="line">cfg.members[2].secondaryDelaySecs = 60</span><br><span class="line">rs.reconfig(cfg)</span><br></pre></td></tr></table></figure><h2 id="读关注-readConcern">读关注(readConcern)</h2><ul class="lvl-0"><li class="lvl-2"><p>在 <code>readPreference</code> 选择了指定的节点后，<code>readConcern</code> 决定这个节点上的数据哪些是可读的</p></li><li class="lvl-2"><p>类似于关系数据库的隔离级别，可选值包括：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- available：读取所有可用的数据;</span><br><span class="line">- <span class="built_in">local</span>：读取所有可用且属于当前分片的数据。在复制集中 <span class="built_in">local</span> 和 available 是没有区别的，两者仅在分片集群中才有区别;</span><br><span class="line">- majority：读取在大多数节点上提交完成的数据;</span><br><span class="line">- linearizable：可线性化读取文档，仅支持从主节点读。只读取大多数节点确认过的数据。和 majority 最大差别是保证绝对的操作线性顺序;</span><br><span class="line">- snapshot：读取最近快照中的数据，仅可用于多文档事务，隔离级别最高;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>主节点读取数据时默认 <code>readConcern</code> 是 <code>local</code>，从节点读取数据时默认 <code>readConcern</code> 是 <code>available</code></p></li></ul><div class="tips"><p><em><strong>分片集群中 local 和 available 的区别</strong></em></p><ul class="lvl-1"><li class="lvl-2">如果一个 chunk x 正在从 shard1 向 shard2 迁移；</li><li class="lvl-2">整个迁移过程中 chunk x 中的部分数据会在 shard1 和 shard2 中同时存在，但源分片 shard1仍然是chunk x 的负责方：<ul class="lvl-3"><li class="lvl-4">所有对 chunk x 的读写操作仍然进入 shard1；</li><li class="lvl-4">config 中记录的信息 chunk x 仍然属于 shard1；</li></ul></li><li class="lvl-2">此时如果读 shard2，则会体现出 local 和 available 的区别：<ul class="lvl-3"><li class="lvl-4">local：只取应该由 shard2 负责的数据（不包括 x）；</li><li class="lvl-4">available：shard2 上有什么就读什么（包括 x）；</li></ul></li></ul></div><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.user.find().readConcern(<span class="string">&#x27;local&#x27;</span>)</span><br><span class="line">db.user.find().readConcern(<span class="string">&#x27;majority&#x27;</span>)</span><br><span class="line"><span class="comment"># 读取从节点上已经被大多数节点提交完成的数据</span></span><br><span class="line">db.user.find().readPref(<span class="string">&quot;secondary&quot;</span>).readConcern(<span class="string">&quot;majority&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="写关注-writeConcern">写关注(writeConcern)</h2><ul class="lvl-0"><li class="lvl-2"><p><code>writeConcern</code> 决定一个写操作落到多少个节点上才算成功。</p></li><li class="lvl-2"><p>MongoDB支持客户端灵活配置写入策略（writeConcern），以满足不同场景的需求。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123; w: &lt;value&gt;, j: &lt;boolean&gt;, wtimeout: &lt;number&gt; &#125;</span><br><span class="line"></span><br><span class="line">w: 数据写入到number个节点才向用客户端确认</span><br><span class="line">  - &#123;w: 0&#125; 对客户端的写入不需要发送任何确认，适用于性能要求高，但不关注正确性的场景</span><br><span class="line">  - &#123;w: 1&#125; 默认的writeConcern，数据写入到Primary就向客户端发送确认</span><br><span class="line">  - &#123;w: <span class="string">&quot;majority&quot;</span>&#125; 数据写入到副本集大多数成员后向客户端发送确认，适用于对数据安全性要求比较高的场景，该选项会降低写入性能</span><br><span class="line"></span><br><span class="line">j: 写入操作的journal持久化后才向客户端确认</span><br><span class="line">  - 默认为&#123;j: <span class="literal">false</span>&#125;，如果要求Primary写入持久化了才向客户端确认，则指定该选项为<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">wtimeout: 写入超时时间，仅w的值大于1时有效。</span><br><span class="line">  - 当指定&#123;w: &#125;时，数据需要成功写入number个节点才算成功，如果写入过程中有节点故障，可能导致这个条件一直不能满足，从而一直不能向客户端发送确认结果，针对这种情况，客户端可设置wtimeout选项来指定超时时间，当写入过程持续超过该时间仍未结束，则认为写入失败。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>通常重要数据应用 <code>&#123;w: &quot;majority&quot;&#125;</code>，普通数据可以应用 <code>&#123;w: 1&#125;</code> 以确保最佳性能。</p></li><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 等等大多数节点写入成功</span></span><br><span class="line">db.user.insertOne(&#123;name:<span class="string">&quot;李四&quot;</span>&#125;,&#123;writeConcern:&#123;w:<span class="string">&quot;majority&quot;</span>&#125;&#125;)</span><br><span class="line"><span class="comment"># 等待3个节点写入成功，若超时则写入失败</span></span><br><span class="line">db.user.insertOne(&#123;name:<span class="string">&quot;小明&quot;</span>&#125;,&#123;writeConcern:&#123;w:3,wtimeout:3000&#125;&#125;)</span><br></pre></td></tr></table></figure><h2 id="优雅的重启复制集">优雅的重启复制集</h2><ul class="lvl-0"><li class="lvl-2"><p>逐个重启复制集里所有的Secondary节点</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭服务</span></span><br><span class="line">mongod --shutdown -f /mongodb/mongo.conf</span><br><span class="line"><span class="comment"># 重启启动</span></span><br><span class="line">mongod -f /mongodb/mongo.conf</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>对Primary发送rs.stepDown()命令，等待primary降级为Secondary</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rs0 [primary] <span class="built_in">local</span>&gt; rs.<span class="function"><span class="title">stepDown</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">  ok: 1,</span><br><span class="line">  <span class="string">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class="line">    clusterTime: Timestamp(&#123; t: 1712046433, i: 1 &#125;),</span><br><span class="line">    signature: &#123;</span><br><span class="line">      <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;dklQyCuunlYhWYkKuNtiNcGNom8=&#x27;</span>, 0),</span><br><span class="line">      keyId: Long(<span class="string">&#x27;7352724745051176965&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  operationTime: Timestamp(&#123; t: 1712046433, i: 1 &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>重启降级后的Primary</p></li></ul><h2 id="oplog">oplog</h2><ul class="lvl-0"><li class="lvl-2"><p>在复制集架构中，主节点与备节点之间是通过oplog来同步数据的，这里的oplog是一个特殊的固定集合，当主节点上的一个写操作完成后，会向oplog集合写入一条对应的日志，而备节点则通过这个oplog不断拉取到新的日志，在本地进行回放以达到数据同步的目的。<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/d2K4tD.png" alt=""></p></li><li class="lvl-2"><p>查询oplog</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">use <span class="built_in">local</span></span><br><span class="line"><span class="comment"># 查询最近10条oplog，这里 $natural:-1 是按照时间降序排列</span></span><br><span class="line">db.oplog.rs.find().<span class="built_in">sort</span>(&#123;<span class="variable">$natural</span>:-1&#125;).<span class="built_in">limit</span>(10)</span><br><span class="line"><span class="comment"># 查询最近60分钟oplog</span></span><br><span class="line">db.oplog.rs.find(&#123;</span><br><span class="line">  <span class="string">&quot;ts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;<span class="variable">$gt</span>&quot;</span>: Timestamp(Math.floor(new Date().getTime() / 1000) - 60*60, 1)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="built_in">sort</span>(&#123;</span><br><span class="line">  <span class="string">&quot;<span class="variable">$natural</span>&quot;</span>: -1</span><br><span class="line">&#125;).<span class="built_in">limit</span>(10)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    op: <span class="string">&#x27;u&#x27;</span>,</span><br><span class="line">    ns: <span class="string">&#x27;config.system.sessions&#x27;</span>,</span><br><span class="line">    ui: UUID(<span class="string">&#x27;4f90005d-a546-4d59-971d-7954c3acd0f8&#x27;</span>),</span><br><span class="line">    o: &#123;</span><br><span class="line">      <span class="string">&#x27;$v&#x27;</span>: 2,</span><br><span class="line">      diff: &#123; u: &#123; lastUse: ISODate(<span class="string">&#x27;2024-04-02T08:31:10.148Z&#x27;</span>) &#125; &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    o2: &#123;</span><br><span class="line">      _id: &#123;</span><br><span class="line">        <span class="built_in">id</span>: UUID(<span class="string">&#x27;3f881052-ac21-4677-816c-33934322fbd6&#x27;</span>),</span><br><span class="line">        uid: Binary.createFromBase64(<span class="string">&#x27;eOZyqfHfiVpfviPDWgAERmzNFnUp8UBdlWKN50Fv9fo=&#x27;</span>, 0)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    ts: Timestamp(&#123; t: 1712046670, i: 1 &#125;),</span><br><span class="line">    t: Long(<span class="string">&#x27;6&#x27;</span>),</span><br><span class="line">    v: Long(<span class="string">&#x27;2&#x27;</span>),</span><br><span class="line">    wall: ISODate(<span class="string">&#x27;2024-04-02T08:31:10.148Z&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ts： 操作时间，当前timestamp + 计数器，计数器每秒都被重置</span><br><span class="line">v：oplog版本信息</span><br><span class="line">op：操作类型:</span><br><span class="line">    i：插⼊操作</span><br><span class="line">    u：更新操作</span><br><span class="line">    d：删除操作</span><br><span class="line">    c：执行命令（如createDatabase，dropDatabase）</span><br><span class="line">    n：空操作，特殊用途</span><br><span class="line">ns：操作针对的集合</span><br><span class="line">o：操作内容</span><br><span class="line">o2：操作查询条件，仅update操作包含该字段</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>oplog集合的大小默认为<code>min(磁盘可用空间*5%，50GB)</code>，可以通过如下命令修改</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将复制集成员的oplog大小修改为1G，这里单位是M</span></span><br><span class="line">&gt; db.adminCommand(&#123;replSetResizeOplog: 1, size: 1024&#125;)</span><br><span class="line"><span class="comment"># 查看oplog大小</span></span><br><span class="line">&gt; use <span class="built_in">local</span></span><br><span class="line">&gt; db.oplog.rs.stats().maxSize/1024/1024</span><br><span class="line">1024</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>这里要注意每个节点的oplog大小都需要单独的配置，并且必须一致，否则有可能会出现同步失败的情况。</p></li><li class="lvl-2"><p>查看当前节点的oplog的状态</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">rs0 [primary] <span class="built_in">test</span>&gt; rs.printReplicationInfo()</span><br><span class="line">actual oplog size</span><br><span class="line"><span class="string">&#x27;1024 MB&#x27;</span></span><br><span class="line">---</span><br><span class="line">configured oplog size</span><br><span class="line"><span class="string">&#x27;1024 MB&#x27;</span></span><br><span class="line">---</span><br><span class="line"><span class="built_in">log</span> length start to end</span><br><span class="line"><span class="string">&#x27;112923 secs (31.37 hrs)&#x27;</span></span><br><span class="line">---</span><br><span class="line">oplog first event time</span><br><span class="line"><span class="string">&#x27;Mon Apr 01 2024 02:47:04 GMT+0000 (Coordinated Universal Time)&#x27;</span></span><br><span class="line">---</span><br><span class="line">oplog last event time</span><br><span class="line"><span class="string">&#x27;Tue Apr 02 2024 10:09:07 GMT+0000 (Coordinated Universal Time)&#x27;</span></span><br><span class="line">---</span><br><span class="line">now</span><br><span class="line"><span class="string">&#x27;Tue Apr 02 2024 10:09:08 GMT+0000 (Coordinated Universal Time)&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">actual oplog size：表示实际使用的 oplog 大小。Oplog 是一个 circurlar buffer，用于存储主节点上的操作日志。这个属性指示了 oplog 的当前大小。在示例中，oplog 大小为 <span class="string">&#x27;1024 MB&#x27;</span>。</span><br><span class="line"></span><br><span class="line">configured oplog size：表示配置的 oplog 大小。这是在配置复制集时指定的 oplog 大小。在示例中，配置的 oplog 大小也是 <span class="string">&#x27;1024 MB&#x27;</span>，说明实际 oplog 大小与配置的 oplog 大小相匹配。</span><br><span class="line"></span><br><span class="line"><span class="built_in">log</span> length start to end：表示 oplog 的记录长度，从开始到结束的时间跨度。在示例中，oplog 记录了 <span class="string">&#x27;112923 secs (31.37 hrs)&#x27;</span>，表示从 oplog 开始记录到结束的时间跨度为约 31.37 小时。</span><br><span class="line"></span><br><span class="line">oplog first event time：表示 oplog 记录的第一个事件的时间戳。在示例中，第一个事件的时间为 <span class="string">&#x27;Mon Apr 01 2024 02:47:04 GMT+0000 (Coordinated Universal Time)&#x27;</span>。</span><br><span class="line"></span><br><span class="line">oplog last event time：表示 oplog 记录的最后一个事件的时间戳。在示例中，最后一个事件的时间为 <span class="string">&#x27;Tue Apr 02 2024 10:09:07 GMT+0000 (Coordinated Universal Time)&#x27;</span>。</span><br><span class="line"></span><br><span class="line">now：表示当前时间。在示例中，当前时间为 <span class="string">&#x27;Tue Apr 02 2024 10:09:08 GMT+0000 (Coordinated Universal Time)&#x27;</span>。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>以从节点视角查看oplog复制状态</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rs0 [primary] <span class="built_in">local</span>&gt; rs.printSecondaryReplicationInfo()</span><br><span class="line"><span class="built_in">source</span>: 10.1.2.142:27017</span><br><span class="line">&#123;</span><br><span class="line">  syncedTo: <span class="string">&#x27;Tue Apr 02 2024 10:10:07 GMT+0000 (Coordinated Universal Time)&#x27;</span>,</span><br><span class="line">  replLag: <span class="string">&#x27;0 secs (0 hrs) behind the primary &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">---</span><br><span class="line"><span class="built_in">source</span>: 10.1.2.41:27017</span><br><span class="line">&#123;</span><br><span class="line">  syncedTo: <span class="string">&#x27;Tue Apr 02 2024 10:10:07 GMT+0000 (Coordinated Universal Time)&#x27;</span>,</span><br><span class="line">  replLag: <span class="string">&#x27;0 secs (0 hrs) behind the primary &#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span>：从节点的主机名和端口号，即复制数据的来源节点。</span><br><span class="line"></span><br><span class="line">syncedTo：表示从节点已经复制到的最新操作的时间戳。它指示了从节点上数据的同步程度，即从节点已经复制了到主节点的哪个时间点的数据。在示例中，两个从节点的 syncedTo 时间戳都是 <span class="string">&#x27;Tue Apr 02 2024 10:10:07 GMT+0000 (Coordinated Universal Time)&#x27;</span>，表示它们都已经与主节点同步到了相同的时间点。</span><br><span class="line"></span><br><span class="line">replLag：表示从节点与主节点之间的复制延迟。它显示了从节点当前落后于主节点的时间量，以秒和小时为单位。在示例中，两个从节点的 replLag 都是 <span class="string">&#x27;0 secs (0 hrs) behind the primary&#x27;</span>，表示它们与主节点保持实时同步，没有任何复制延迟。</span><br></pre></td></tr></table></figure><h2 id="既然oplog的大小有限制，新的数据会覆盖旧的数据，那么新加入的节点如何全量同步数据呢？">既然oplog的大小有限制，新的数据会覆盖旧的数据，那么新加入的节点如何全量同步数据呢？</h2><ul class="lvl-0"><li class="lvl-2"><p>当MongoDB的从库节点需要进行数据同步时，会执行以下步骤：</p><ul class="lvl-2"><li class="lvl-4">初始同步： 当一个新节点加入到副本集中时，它会执行初始同步以获取集合中的所有数据。初始同步会复制所有数据库的所有数据，包括系统数据库。之后，新节点会开始从oplog里获取更改历史，应用这些更改历史到数据，以保证与其他从库节点一致。注意，初始同步中的数据包括在新加入节点之前的数据以及新节点加入之后其他节点产生的新数据。</li><li class="lvl-4">oplog落后： 如果从库在初始同步执行期间不能及时获取oplog（例如，oplog的数据超出了大小限制并被覆盖，或者初次同步时间过长），新节点需要重新进行初始同步操作。</li></ul></li><li class="lvl-2"><p>这些步骤确保了MongoDB副本集的数据在所有节点间的一致性，尽管oplog有大小限制并且旧的内容会被新的操作覆盖。</p></li></ul><h2 id="复制集相关操作">复制集相关操作</h2><ul class="lvl-0"><li class="lvl-2"><p><a href="https://www.mongodb.com/docs/manual/reference/method/js-replication/">官方文档</a></p></li></ul><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>rs.add(“hostname:port”)</td><td>为复制集新增节点</td></tr><tr><td>rs.addArb(“hostname:port”)</td><td>为复制集新增一个 arbiters</td></tr><tr><td>rs.conf()</td><td>返回复制集配置信息</td></tr><tr><td>rs.config()</td><td>同 rs.conf()</td></tr><tr><td>rs.freeze(3600)</td><td>防止当前节点在一段时间内选举成为主节点，如这里是3600秒，则当前节点在3600秒内不会选举成为主节点</td></tr><tr><td>rs.help()</td><td>返回 replica set 的命令帮助</td></tr><tr><td>rs.initiate()</td><td>初始化一个新的复制集</td></tr><tr><td>rs.printReplicationInfo()</td><td>以当前节点的视角返回复制的状态报告</td></tr><tr><td>rs.printSecondaryReplicationInfo()</td><td>以从节点的视角返回复制状态报告</td></tr><tr><td>rs.reconfig()</td><td>通过重新应用复制集配置来为复制集更新配置</td></tr><tr><td>rs.remove(“hostname:port”)</td><td>从复制集中移除一个节点</td></tr><tr><td>rs.secondaryOk()</td><td>为当前的连接设置从节点可读，该方法已经过时了，使用 db.getMongo().setReadPref() 代替</td></tr><tr><td>rs.status()</td><td>返回复制集状态信息</td></tr><tr><td>rs.stepDown()</td><td>让当前的 primary 变为从节点并触发新一轮的主节点选举</td></tr><tr><td>rs.syncFrom(“hostname:port”)</td><td>设置复制集节点从哪个节点处同步数据，将会覆盖默认选取逻辑</td></tr><tr><td>rs.reconfigForPSASet()</td><td>在主-从-仲裁器（PSA）副本集或正在更改为PSA架构的副本集上安全地执行一些重新配置更改。</td></tr></tbody></table><h3 id="移除节点">移除节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rs0 [primary] <span class="built_in">local</span>&gt; rs.remove(<span class="string">&quot;10.1.2.41:27017&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">  ok: 1,</span><br><span class="line">  <span class="string">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class="line">    clusterTime: Timestamp(&#123; t: 1712049022, i: 1 &#125;),</span><br><span class="line">    signature: &#123;</span><br><span class="line">      <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;Qg3Ymzp3k+hhzaDo3jZQimc4WCI=&#x27;</span>, 0),</span><br><span class="line">      keyId: Long(<span class="string">&#x27;7352724745051176965&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  operationTime: Timestamp(&#123; t: 1712049022, i: 1 &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加仲裁节点">添加仲裁节点</h3><p><em><strong>当集群中的节点数<code>&gt;=3</code>时，无论是添加仲裁节点还是从节点都没有问题。</strong></em></p><ul class="lvl-0"><li class="lvl-2"><p>上面删除了集群中的一个节点，此时集群中的节点说是2(一主一从)，此时如果主发生故障集群就没办法工作了，此时我们可以为其添加一个仲裁节点(只投票不存储数据)。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加仲裁节点，但是此时添加仲裁节点会报错</span></span><br><span class="line">rs0 [primary] <span class="built_in">local</span>&gt; rs.addArb(<span class="string">&quot;10.1.2.41:27017&quot;</span>)</span><br><span class="line">MongoServerError[NewReplicaSetConfigurationIncompatible]: Reconfig attempted to install a config that would change the implicit default write concern. Use the setDefaultRWConcern <span class="built_in">command</span> to <span class="built_in">set</span> a cluster-wide write concern and try the reconfig again.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 报错原因：由于默认的写关注为 majority，而当前节点中只有2个节点，没有办法确认“大多数”是多少了，所以我们需要修改写关注的设置</span></span><br><span class="line"><span class="comment"># 查询默认的读写关注</span></span><br><span class="line">rs0 [primary] admin&gt; db.adminCommand(&#123;<span class="string">&quot;getDefaultRWConcern&quot;</span> : 1&#125;)</span><br><span class="line">&#123;</span><br><span class="line">  defaultReadConcern: &#123; level: <span class="string">&#x27;local&#x27;</span> &#125;,</span><br><span class="line">  defaultWriteConcern: &#123; w: <span class="string">&#x27;majority&#x27;</span>, wtimeout: 0 &#125;,</span><br><span class="line">  updateOpTime: Timestamp(&#123; t: 1712050437, i: 1 &#125;),</span><br><span class="line">  updateWallClockTime: ISODate(<span class="string">&#x27;2024-04-02T09:15:04.462Z&#x27;</span>),</span><br><span class="line">  defaultWriteConcernSource: <span class="string">&#x27;global&#x27;</span>,</span><br><span class="line">  defaultReadConcernSource: <span class="string">&#x27;implicit&#x27;</span>,</span><br><span class="line">  localUpdateWallClockTime: ISODate(<span class="string">&#x27;2024-04-02T09:15:04.462Z&#x27;</span>),</span><br><span class="line">  ok: 1,</span><br><span class="line">  <span class="string">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class="line">    clusterTime: Timestamp(&#123; t: 1712109448, i: 1 &#125;),</span><br><span class="line">    signature: &#123;</span><br><span class="line">      <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;oUiR9xdXN4mzQqdz9IXHGdCmNto=&#x27;</span>, 0),</span><br><span class="line">      keyId: Long(<span class="string">&#x27;7352724745051176965&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  operationTime: Timestamp(&#123; t: 1712109448, i: 1 &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改默认写关注 defaultWriteConcern</span></span><br><span class="line"><span class="comment"># setDefaultRWConcern：用于指定设置默认读写关注级别（RW Concern）的操作。值为 1 表示执行设置操作。</span></span><br><span class="line"><span class="comment"># defaultWriteConcern：用于指定默认的写入关注级别。在这个例子中，写入关注级别被设置为 &#123; &quot;w&quot; : 2 &#125;，意味着在写入数据时，MongoDB 驱动程序会等待至少两个节点确认写入成功后才返回成功。其实这里设置为1也可以，表示写入主节点就返回成功。</span></span><br><span class="line">rs0 [primary] <span class="built_in">local</span>&gt; db.adminCommand( &#123;<span class="string">&quot;setDefaultRWConcern&quot;</span> : 1, <span class="string">&quot;defaultWriteConcern&quot;</span> : &#123; <span class="string">&quot;w&quot;</span> : 2 &#125; &#125; )</span><br><span class="line">&#123;</span><br><span class="line">  defaultReadConcern: &#123; level: <span class="string">&#x27;local&#x27;</span> &#125;,</span><br><span class="line">  defaultWriteConcern: &#123; w: 2, wtimeout: 0 &#125;,</span><br><span class="line">  updateOpTime: Timestamp(&#123; t: 1712049370, i: 1 &#125;),</span><br><span class="line">  updateWallClockTime: ISODate(<span class="string">&#x27;2024-04-02T09:16:22.715Z&#x27;</span>),</span><br><span class="line">  defaultWriteConcernSource: <span class="string">&#x27;global&#x27;</span>,</span><br><span class="line">  defaultReadConcernSource: <span class="string">&#x27;implicit&#x27;</span>,</span><br><span class="line">  localUpdateWallClockTime: ISODate(<span class="string">&#x27;2024-04-02T09:16:22.726Z&#x27;</span>),</span><br><span class="line">  ok: 1,</span><br><span class="line">  <span class="string">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class="line">    clusterTime: Timestamp(&#123; t: 1712049382, i: 2 &#125;),</span><br><span class="line">    signature: &#123;</span><br><span class="line">      <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;04nzjl47CMumvguEzUq7RnY55+s=&#x27;</span>, 0),</span><br><span class="line">      keyId: Long(<span class="string">&#x27;7352724745051176965&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  operationTime: Timestamp(&#123; t: 1712049382, i: 2 &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次添加仲裁节点成功</span></span><br><span class="line">rs0 [primary] <span class="built_in">local</span>&gt; rs.addArb(<span class="string">&quot;10.1.2.41:27017&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">  ok: 1,</span><br><span class="line">  <span class="string">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class="line">    clusterTime: Timestamp(&#123; t: 1712049480, i: 1 &#125;),</span><br><span class="line">    signature: &#123;</span><br><span class="line">      <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;4q9s6mvT0boa6Q+vjKms8vnTR6Y=&#x27;</span>, 0),</span><br><span class="line">      keyId: Long(<span class="string">&#x27;7352724745051176965&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  operationTime: Timestamp(&#123; t: 1712049480, i: 1 &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时关闭主节点，就会看到另一个从节点成为主节点了</p></li></ul><h3 id="添加新的节点">添加新的节点</h3><p><em><strong>当集群中的节点数<code>&gt;=3</code>时，无论是添加仲裁节点还是从节点都没有问题。</strong></em></p><ul class="lvl-0"><li class="lvl-2"><p>如果当前集群中有两个节点(一主一从)，我们也可以不添加仲裁节点，而是直接添加一个新的从节点</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rs0 [primary] <span class="built_in">test</span>&gt; rs.add(<span class="string">&quot;10.1.2.41:27017&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">  ok: 1,</span><br><span class="line">  <span class="string">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class="line">    clusterTime: Timestamp(&#123; t: 1712051880, i: 1 &#125;),</span><br><span class="line">    signature: &#123;</span><br><span class="line">      <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;DuuorhNH4MWqa4DHCifPzxcMN3I=&#x27;</span>, 0),</span><br><span class="line">      keyId: Long(<span class="string">&#x27;7352724745051176965&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  operationTime: Timestamp(&#123; t: 1712051880, i: 1 &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>当集群中只有一个主节点和一个仲裁节点时，此时若直接添加新的节点会报错</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rs0 [primary] <span class="built_in">local</span>&gt; rs.add(<span class="string">&quot;10.1.2.142:27017&quot;</span>)</span><br><span class="line">MongoServerError[NewReplicaSetConfigurationIncompatible]: Rejecting reconfig <span class="built_in">where</span> the new config has a PSA topology and the secondary is electable, but the old config contains only one writable node. Refer to https://docs.mongodb.com/manual/reference/method/rs.reconfigForPSASet/ <span class="keyword">for</span> next steps on reconfiguring a PSA <span class="built_in">set</span>.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>根据给出的网址的提示，执行以下操作</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取当前配置</span></span><br><span class="line">rs0 [primary] <span class="built_in">test</span>&gt; cfg = rs.conf();</span><br><span class="line">&#123;</span><br><span class="line">  _id: <span class="string">&#x27;rs0&#x27;</span>,</span><br><span class="line">  version: 7,</span><br><span class="line">  term: 8,</span><br><span class="line">  members: [</span><br><span class="line">    &#123;</span><br><span class="line">      _id: 0,</span><br><span class="line">      host: <span class="string">&#x27;10.1.2.26:27017&#x27;</span>,</span><br><span class="line">      arbiterOnly: <span class="literal">false</span>,</span><br><span class="line">      buildIndexes: <span class="literal">true</span>,</span><br><span class="line">      hidden: <span class="literal">false</span>,</span><br><span class="line">      priority: 1,</span><br><span class="line">      tags: &#123; purpose: <span class="string">&#x27;online&#x27;</span> &#125;,</span><br><span class="line">      secondaryDelaySecs: Long(<span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">      votes: 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      _id: 2,</span><br><span class="line">      host: <span class="string">&#x27;10.1.2.41:27017&#x27;</span>,</span><br><span class="line">      arbiterOnly: <span class="literal">true</span>,</span><br><span class="line">      buildIndexes: <span class="literal">true</span>,</span><br><span class="line">      hidden: <span class="literal">false</span>,</span><br><span class="line">      priority: 0,</span><br><span class="line">      tags: &#123;&#125;,</span><br><span class="line">      secondaryDelaySecs: Long(<span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">      votes: 1</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  protocolVersion: Long(<span class="string">&#x27;1&#x27;</span>),</span><br><span class="line">  writeConcernMajorityJournalDefault: <span class="literal">true</span>,</span><br><span class="line">  settings: &#123;</span><br><span class="line">    chainingAllowed: <span class="literal">true</span>,</span><br><span class="line">    heartbeatIntervalMillis: 2000,</span><br><span class="line">    heartbeatTimeoutSecs: 10,</span><br><span class="line">    electionTimeoutMillis: 10000,</span><br><span class="line">    catchUpTimeoutMillis: -1,</span><br><span class="line">    catchUpTakeoverDelayMillis: 30000,</span><br><span class="line">    getLastErrorModes: &#123;&#125;,</span><br><span class="line">    getLastErrorDefaults: &#123; w: 1, wtimeout: 0 &#125;,</span><br><span class="line">    replicaSetId: ObjectId(<span class="string">&#x27;660a20282e7a827807cac803&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置，增加新的节点信息</span></span><br><span class="line">rs0 [primary] <span class="built_in">test</span>&gt; cfg[<span class="string">&quot;members&quot;</span>] = [</span><br><span class="line">    &#123;</span><br><span class="line">      _id: 0,</span><br><span class="line">      host: <span class="string">&#x27;10.1.2.26:27017&#x27;</span>,</span><br><span class="line">      arbiterOnly: <span class="literal">false</span>,</span><br><span class="line">      buildIndexes: <span class="literal">true</span>,</span><br><span class="line">      hidden: <span class="literal">false</span>,</span><br><span class="line">      priority: 1,</span><br><span class="line">      tags: &#123; purpose: <span class="string">&#x27;online&#x27;</span> &#125;,</span><br><span class="line">      secondaryDelaySecs: Long(<span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">      votes: 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      _id: 1,</span><br><span class="line">      host: <span class="string">&#x27;10.1.2.142:27017&#x27;</span>,   <span class="comment"># 新的节点</span></span><br><span class="line">      arbiterOnly: <span class="literal">false</span>,</span><br><span class="line">      buildIndexes: <span class="literal">true</span>,</span><br><span class="line">      hidden: <span class="literal">false</span>,</span><br><span class="line">      priority: 1,</span><br><span class="line">      tags: &#123; purpose: <span class="string">&#x27;online&#x27;</span> &#125;,</span><br><span class="line">      secondaryDelaySecs: Long(<span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">      votes: 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      _id: 2,</span><br><span class="line">      host: <span class="string">&#x27;10.1.2.41:27017&#x27;</span>,</span><br><span class="line">      arbiterOnly: <span class="literal">true</span>,</span><br><span class="line">      buildIndexes: <span class="literal">true</span>,</span><br><span class="line">      hidden: <span class="literal">false</span>,</span><br><span class="line">      priority: 0,</span><br><span class="line">      tags: &#123;&#125;,</span><br><span class="line">      secondaryDelaySecs: Long(<span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">      votes: 1</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行配置</span></span><br><span class="line">rs0 [primary] <span class="built_in">test</span>&gt; rs.reconfigForPSASet(1, cfg);</span><br><span class="line">Running first reconfig to give member at index 1 &#123; votes: 1, priority: 0 &#125;</span><br><span class="line">Running second reconfig to give member at index 1 &#123; priority: 1 &#125;</span><br><span class="line">&#123;</span><br><span class="line">  ok: 1,</span><br><span class="line">  <span class="string">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class="line">    clusterTime: Timestamp(&#123; t: 1712051518, i: 2 &#125;),</span><br><span class="line">    signature: &#123;</span><br><span class="line">      <span class="built_in">hash</span>: Binary.createFromBase64(<span class="string">&#x27;+tgYZKeeGP0KGt3YVpDCAjW3xTc=&#x27;</span>, 0),</span><br><span class="line">      keyId: Long(<span class="string">&#x27;7352724745051176965&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  operationTime: Timestamp(&#123; t: 1712051518, i: 2 &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看新节点的状态</span></span><br><span class="line">rs0 [primary] <span class="built_in">test</span>&gt; rs.status()</span><br><span class="line">………………</span><br><span class="line">&#123;</span><br><span class="line">      _id: 1,</span><br><span class="line">      name: <span class="string">&#x27;10.1.2.142:27017&#x27;</span>,</span><br><span class="line">      health: 1,</span><br><span class="line">      state: 2,</span><br><span class="line">      stateStr: <span class="string">&#x27;SECONDARY&#x27;</span>,</span><br><span class="line">      <span class="built_in">uptime</span>: 87,</span><br><span class="line">      optime: &#123; ts: Timestamp(&#123; t: 1712051597, i: 1 &#125;), t: Long(<span class="string">&#x27;8&#x27;</span>) &#125;,</span><br><span class="line">      optimeDurable: &#123; ts: Timestamp(&#123; t: 1712051597, i: 1 &#125;), t: Long(<span class="string">&#x27;8&#x27;</span>) &#125;,</span><br><span class="line">      optimeDate: ISODate(<span class="string">&#x27;2024-04-02T09:53:17.000Z&#x27;</span>),</span><br><span class="line">      optimeDurableDate: ISODate(<span class="string">&#x27;2024-04-02T09:53:17.000Z&#x27;</span>),</span><br><span class="line">      lastAppliedWallTime: ISODate(<span class="string">&#x27;2024-04-02T09:53:17.058Z&#x27;</span>),</span><br><span class="line">      lastDurableWallTime: ISODate(<span class="string">&#x27;2024-04-02T09:53:17.058Z&#x27;</span>),</span><br><span class="line">      lastHeartbeat: ISODate(<span class="string">&#x27;2024-04-02T09:53:24.535Z&#x27;</span>),</span><br><span class="line">      lastHeartbeatRecv: ISODate(<span class="string">&#x27;2024-04-02T09:53:24.535Z&#x27;</span>),</span><br><span class="line">      pingMs: Long(<span class="string">&#x27;0&#x27;</span>),</span><br><span class="line">      lastHeartbeatMessage: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      syncSourceHost: <span class="string">&#x27;10.1.2.26:27017&#x27;</span>,</span><br><span class="line">      syncSourceId: 0,</span><br><span class="line">      infoMessage: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      configVersion: 10,</span><br><span class="line">      configTerm: 8</span><br><span class="line">    &#125;</span><br><span class="line">………………</span><br></pre></td></tr></table></figure><h2 id="故障转移">故障转移</h2><ul class="lvl-0"><li class="lvl-2"><p>集群组建完成后，集群内的各个节点会开启心跳响应定时器，默认每隔2秒<code>(heartbeatIntervalMillis)</code>会向其它成员发起心跳。</p></li><li class="lvl-2"><p>同时各成员节点还会启动一个选举超时检测定时器，默认每隔10秒<code>(electionTimeoutMillis)</code>会发起一轮<code>选举调度</code>。</p></li><li class="lvl-2"><p>当主节点心跳响应成功，则当前节点就会取消上一次的<code>选举调度</code>，即会重置选举超时检测定时器的倒计时</p></li><li class="lvl-2"><p>若主节点心跳响应失败，并且在<code>选举超时检测</code>的时间内仍然没有响应成功，则当前节点就会发起一轮<code>选举调度</code></p></li><li class="lvl-2"><p>MongoDB的复制集选举使用<a href="https://raft.github.io/">Raft算法</a>来实现，选举成功的必要条件是大多数投票节点存活。简单来说就是如果超过半数的节点都给我投票了，那么我就会成为主节点。</p></li></ul><h3 id="为什么推荐集群连接的方式？">为什么推荐集群连接的方式？</h3><ul class="lvl-0"><li class="lvl-2"><p>考虑这样的场景，如果我连接主节点并且插入10000条说，若此时主节点宕机，则客户端会立刻停止操作。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只连接主节点</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.26:27017/test?authSource=admin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行插入</span></span><br><span class="line">rs0 [direct: primary] <span class="built_in">test</span>&gt; <span class="keyword">for</span>(i=0;i&lt;10000;i++)&#123;db.emp.insertOne(&#123;name:<span class="string">&quot;test&quot;</span>+i&#125;)&#125;</span><br><span class="line"><span class="comment"># 此时关闭主节点的mongo服务，则客户端会立刻给出报错信息</span></span><br><span class="line">MongoServerError[NotWritablePrimary]: not primary</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>若连接采用集群的方式连接，则不会中断操作，其原因就是集群连接方式会自动完成故障转移</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span></span><br><span class="line"><span class="comment"># 插入操作没有被中断</span></span><br><span class="line">rs0 [primary] <span class="built_in">test</span>&gt; <span class="keyword">for</span>(i=0;i&lt;10000;i++)&#123;db.emp.insertOne(&#123;name:<span class="string">&quot;test&quot;</span>+i&#125;)&#125;</span><br><span class="line">&#123;</span><br><span class="line">  acknowledged: <span class="literal">true</span>,</span><br><span class="line">  insertedId: ObjectId(<span class="string">&#x27;660cce829918b823661879c6&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 查询结果正确</span></span><br><span class="line">rs0 [primary] <span class="built_in">test</span>&gt; db.emp.countDocuments()</span><br><span class="line">10000</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>这里有一点需要注意，当你创建集群时使用的是各个节点的内网ip地址，则客户端必须可以访问这些内网ip才能通过集群连接，否则会出现连接失败的情况。因为通过集群连接的方式，实际上是会先在集群内部判断出主节点的ip地址返回给客户端，然后客户端再通过这个主节点ip访问主节点。</p></li></ul><div class="tips"><p><em><strong>小贴士</strong></em></p><ul class="lvl-1"><li class="lvl-2">在复制集发生主备节点切换的情况下，会出现短暂的无主节点阶段，此时无法接受业务写操作。</li><li class="lvl-2">早期的版本中需要添加<code>retryWrites</code>参数，现在已经默认开启了</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongosh <span class="string">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&amp;retryWrites=true&quot;</span></span><br></pre></td></tr></table></figure></div><h2 id="SpringBoot集成MongoDB集群">SpringBoot集成MongoDB集群</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">data:</span></span><br><span class="line">    <span class="attr">mongodb:</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">mongodb://user:password@127.0.0.1:27040,127.0.0.1:27041,127.0.0.1:27042/mytest?authSource=admin&amp;readPreference=primaryPreferred</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍Linux下MongoDB7.0复制集的安装和使用&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MongoDB&lt;a href=&quot;https://www.mongodb.com/docs/v7.0/&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;CentOS8(x86_64)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;&lt;code&gt;Mongodb分片集群&lt;/code&gt;搭建参看&lt;a href=&quot;/2020/03/19/mongodb-mongos/&quot; title=&quot;MongoDB 分片集群搭建&quot;&gt;MongoDB 分片集群搭建&lt;/a&gt;，虽然是基于&lt;code&gt;4.4&lt;/code&gt;版本的，但是安装方式差别不大，只是配置文件中个别的属性名称发生了变化。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/mongodb/"/>
    
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Ansible 一些有用的小Demo</title>
    <link href="https://blog.hanqunfeng.com/2024/03/28/ansible-useful-demo/"/>
    <id>https://blog.hanqunfeng.com/2024/03/28/ansible-useful-demo/</id>
    <published>2024-03-28T13:30:05.000Z</published>
    <updated>2024-04-03T03:45:36.908Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍 Ansible 的一些使用技巧。</p></li><li class="lvl-2"><p>关于Ansible的介绍可以参看 <a href="/2024/03/19/linux-command15-ansible/" title="Linux常用命令--Ansible">Linux常用命令--Ansible</a></p></li></ul><span id="more"></span><h2 id="将同组内机器别名设置到hosts中">将同组内机器别名设置到<code>hosts</code>中</h2><ul class="lvl-0"><li class="lvl-2"><p>inventory</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[test-mongo]</span><br><span class="line">10.1.2.249 hostname=mongodb.db0</span><br><span class="line">10.1.2.184 hostname=mongodb.db1</span><br><span class="line">10.1.2.178 hostname=mongodb.db2</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>tasks</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- name: Set static hostname <span class="keyword">in</span> /etc/hosts</span><br><span class="line">  lineinfile:</span><br><span class="line">    path: /etc/hosts</span><br><span class="line">    line: <span class="string">&quot;&#123;&#123; item &#125;&#125; &#123;&#123; hostvars[item].hostname | default(&#x27;mongodb.db&#x27; ~ index)  &#125;&#125;&quot;</span></span><br><span class="line">    state: present</span><br><span class="line">  loop: <span class="string">&quot;&#123;&#123; groups[group_names[0]] &#125;&#125;&quot;</span></span><br><span class="line">  loop_control:</span><br><span class="line">    index_var: index <span class="comment"># 循环索引变量，从0开始，ansible&gt;2.14+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>说明</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">10.1.2.249 hostname=mongodb.db03 : 这里hostname就是要设置给当前主机的变量，多个变量空格分割</span><br><span class="line"></span><br><span class="line"><span class="built_in">groups</span>[key] : 获取指定组内的ip数组，key为组名</span><br><span class="line">group_names[0] : 获取运行当前脚本的第一个组名</span><br><span class="line">hostvars[item].hostname : 获取指定ip的变量名称为hostname的值</span><br><span class="line">default(<span class="string">&#x27;mongodb.db&#x27;</span> ~ index) : 设置缺省值，即如果没有设置hostname，则默认为mongodb.db[0~2]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取除了当前主机外的ip数组</span></span><br><span class="line">&#123;&#123; <span class="built_in">groups</span>[group_names[0]] | difference([inventory_hostname]) &#125;&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>这里用到了<code>loop</code>，关于<code>loop</code>的用法可以参考<a href="https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_loops.html">官方文档</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍 Ansible 的一些使用技巧。&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;关于Ansible的介绍可以参看 &lt;a href=&quot;/2024/03/19/linux-command15-ansible/&quot; title=&quot;Linux常用命令--Ansible&quot;&gt;Linux常用命令--Ansible&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    <category term="Ansible" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/Ansible/"/>
    
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    <category term="Ansible" scheme="https://blog.hanqunfeng.com/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible Collection Publish To Galaxy</title>
    <link href="https://blog.hanqunfeng.com/2024/03/27/ansible-collection-publish/"/>
    <id>https://blog.hanqunfeng.com/2024/03/27/ansible-collection-publish/</id>
    <published>2024-03-27T13:30:05.000Z</published>
    <updated>2024-04-03T03:45:36.898Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍如何将Ansible Collection发布到Galaxy。</p></li><li class="lvl-2"><p>关于Ansible的介绍可以参看 <a href="/2024/03/19/linux-command15-ansible/" title="Linux常用命令--Ansible">Linux常用命令--Ansible</a></p></li><li class="lvl-2"><p>关于将Ansible Role发布到Galaxy的详细介绍可以参看 <a href="/2024/03/26/ansible-role-publish/" title="Ansible Role Publish To Galaxy">Ansible Role Publish To Galaxy</a></p></li></ul><span id="more"></span><h2 id="创建Collection">创建Collection</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录下创建collection</span></span><br><span class="line"><span class="comment"># 注意这里的collerction名称格式为 namespace.collection，名称只支持 [a-zA-Z0-9_]</span></span><br><span class="line">$ ansible-galaxy collection init hanqunfeng.install_mongodb</span><br><span class="line">- Collection hanqunfeng.install_mongodb was created successfully</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>目录结构</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hanqunfeng</span><br><span class="line">└── install_mongodb</span><br><span class="line">   ├── docs</span><br><span class="line">   ├── galaxy.yml</span><br><span class="line">   ├── meta</span><br><span class="line">   │  └── runtime.yml</span><br><span class="line">   ├── plugins</span><br><span class="line">   │  └── README.md</span><br><span class="line">   ├── README.md</span><br><span class="line">   └── roles</span><br></pre></td></tr></table></figure><blockquote><p>在<code>galaxy.yml</code>中配置collection的元数据<br>在<code>runtime.yml</code>中配置collection的运行时依赖<br>在<code>README.md</code>中配置collection的描述信息<br>在<code>roles</code>中创建role，这里可以创建多个role，我这里将上面创建的role复制到<code>roles</code>目录下，不过名称需要修改一下，不支持下划线，所以这里将role的名称改为<code>centos_mongodb_install</code></p></blockquote><p>相关代码参考:<a href="https://github.com/hanqunfeng/ansible_collections">https://github.com/hanqunfeng/ansible_collections</a></p><ul class="lvl-0"><li class="lvl-2"><p>构建collection的tar包</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建collection的tar包时先要进入namespace目录下</span></span><br><span class="line">$ <span class="built_in">cd</span> hanqunfeng</span><br><span class="line"><span class="comment"># 指定collection的目录名称，会基于我们在 galaxy.yml中的配置信息生成tar包</span></span><br><span class="line">$ ansible-galaxy collection build install_mongodb</span><br><span class="line">Created collection <span class="keyword">for</span> hanqunfeng.install_mongodb at /Users/hanqf/ansible_workspace/collections/hanqunfeng/hanqunfeng-install_mongodb-1.0.0.tar.gz</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>上传collection到Galaxy<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/iOTd1D.png" alt=""><br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/bl2Pkq.png" alt=""><br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/RohfLq.png" alt=""><br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/Mmmxcs.png" alt=""><br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/rmsiSe.png" alt=""></p></li><li class="lvl-2"><p>搜索collection<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/KHYzXd.png" alt=""><br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/b0KQkB.png" alt=""></p></li><li class="lvl-2"><p>安装collection</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认安装最新版本</span></span><br><span class="line">$ ansible-galaxy collection install hanqunfeng.install_mongodb</span><br><span class="line">Starting galaxy collection install process</span><br><span class="line">Process install dependency map</span><br><span class="line">Starting collection install process</span><br><span class="line">Downloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/hanqunfeng-install_mongodb-1.0.0.tar.gz to /Users/hanqf/.ansible/tmp/ansible-local-322947_s0gv88/tmp1fbnqss_/hanqunfeng-install_mongodb-1.0.0-s2wczaen</span><br><span class="line">Installing <span class="string">&#x27;hanqunfeng.install_mongodb:1.0.0&#x27;</span> to <span class="string">&#x27;/Users/hanqf/.ansible/collections/ansible_collections/hanqunfeng/install_mongodb&#x27;</span></span><br><span class="line">hanqunfeng.install_mongodb:1.0.0 was installed successfully</span><br><span class="line"></span><br><span class="line"><span class="comment"># 升级安装时需要加上 --force</span></span><br><span class="line">ansible-galaxy collection install --force hanqunfeng.install_mongodb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已安装的role</span></span><br><span class="line">ansible-galaxy collection list</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>使用collection</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">test-mongo</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span>  <span class="comment"># 切换到root用户下执行</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hanqunfeng.install_mongodb.centos_mongodb_install</span> <span class="comment"># &lt;namespace&gt;.&lt;collection_name&gt;.&lt;role_name&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>删除collection</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 没有现成的remove命令，只能手动删除</span></span><br><span class="line">$ <span class="built_in">rm</span> -rf ~/.ansible/collections/ansible_collections/hanqunfeng/install_mongodb</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>更新collection<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/lZjgci.png" alt=""><br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/7QzrmF.png" alt=""></p></li><li class="lvl-2"><p>重新安装collection</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认安装最新版本</span></span><br><span class="line">$ ansible-galaxy collection install --force hanqunfeng.install_mongodb</span><br><span class="line">Starting galaxy collection install process</span><br><span class="line">Process install dependency map</span><br><span class="line">Starting collection install process</span><br><span class="line">Downloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/hanqunfeng-install_mongodb-1.0.1.tar.gz to /Users/hanqf/.ansible/tmp/ansible-local-530779nbn853q/tmpiuxg6ads/hanqunfeng-install_mongodb-1.0.1-ep0cswny</span><br><span class="line">Installing <span class="string">&#x27;hanqunfeng.install_mongodb:1.0.1&#x27;</span> to <span class="string">&#x27;/Users/hanqf/.ansible/collections/ansible_collections/hanqunfeng/install_mongodb&#x27;</span></span><br><span class="line">hanqunfeng.install_mongodb:1.0.1 was installed successfully</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装指定版本</span></span><br><span class="line">ansible-galaxy collection install  hanqunfeng.install_mongodb:1.0.1</span><br></pre></td></tr></table></figure><h2 id="命令行发布collection">命令行发布collection</h2><ul class="lvl-0"><li class="lvl-2"><p>先要在ansible-galaxy网站上获取<code>api-key</code><br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/WGgnPL.png" alt=""></p></li><li class="lvl-2"><p>发布collection</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意替换自己的 api-key</span></span><br><span class="line">$ ansible-galaxy collection publish --token xxxxxxxxxxxxxxx hanqunfeng-install_mongodb-1.0.2.tar.gz</span><br><span class="line">Publishing collection artifact <span class="string">&#x27;/Users/hanqf/ansible_workspace/collections/hanqunfeng/hanqunfeng-install_mongodb-1.0.2.tar.gz&#x27;</span> to default https://galaxy.ansible.com/api/</span><br><span class="line">Collection has been published to the Galaxy server default https://galaxy.ansible.com/api/</span><br><span class="line">Waiting <span class="keyword">until</span> Galaxy import task https://galaxy.ansible.com/api/v3/imports/collections/018e7f26-b771-7c47-9c92-14e671b776dc/ has completed</span><br><span class="line">Collection has been successfully published and imported to the Galaxy server default https://galaxy.ansible.com/api/</span><br></pre></td></tr></table></figure><h2 id="后记">后记</h2><p>目前<code>2.16.4</code>这个版本尚不支持在命令行搜索collection，只能通过web界面搜索。</p>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍如何将Ansible Collection发布到Galaxy。&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;关于Ansible的介绍可以参看 &lt;a href=&quot;/2024/03/19/linux-command15-ansible/&quot; title=&quot;Linux常用命令--Ansible&quot;&gt;Linux常用命令--Ansible&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;关于将Ansible Role发布到Galaxy的详细介绍可以参看 &lt;a href=&quot;/2024/03/26/ansible-role-publish/&quot; title=&quot;Ansible Role Publish To Galaxy&quot;&gt;Ansible Role Publish To Galaxy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    <category term="Ansible" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/Ansible/"/>
    
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    <category term="Ansible" scheme="https://blog.hanqunfeng.com/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Ansible Role Publish To Galaxy</title>
    <link href="https://blog.hanqunfeng.com/2024/03/26/ansible-role-publish/"/>
    <id>https://blog.hanqunfeng.com/2024/03/26/ansible-role-publish/</id>
    <published>2024-03-26T13:30:05.000Z</published>
    <updated>2024-04-03T03:45:36.903Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍如何将Ansible Role发布到Galaxy。</p></li><li class="lvl-2"><p>关于Ansible的介绍可以参看 <a href="/2024/03/19/linux-command15-ansible/" title="Linux常用命令--Ansible">Linux常用命令--Ansible</a></p></li><li class="lvl-2"><p>关于将Ansible Collection发布到Galaxy的详细介绍可以参看 <a href="/2024/03/27/ansible-collection-publish/" title="Ansible Collection Publish To Galaxy">Ansible Collection Publish To Galaxy</a></p></li></ul><span id="more"></span><h2 id="创建Role">创建Role</h2><ul class="lvl-0"><li class="lvl-2"><p>在当前目录下创建一个名称为<code>mongodb-install</code>的role，实际上就是创建一个名称为<code>mongodb-install</code>的目录结构</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy init mongodb-install</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>创建完成后，目录结构如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mongodb-install</span><br><span class="line">├── defaults</span><br><span class="line">│  └── main.yml</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│  └── main.yml</span><br><span class="line">├── meta</span><br><span class="line">│  └── main.yml</span><br><span class="line">├── README.md</span><br><span class="line">├── tasks</span><br><span class="line">│  └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">├── tests</span><br><span class="line">│  ├── inventory</span><br><span class="line">│  └── test.yml</span><br><span class="line">└── vars</span><br><span class="line">   └── main.yml</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>编辑role，相关代码参考<a href="https://github.com/hanqunfeng/ansible-role-mongodb">https://github.com/hanqunfeng/ansible-role-mongodb</a></p></li><li class="lvl-2"><p>这里我们要注意两个文件</p></li></ul><blockquote><p><code>README.md</code>: 这里面配置的是role的描述信息，其会显示在<code>文档</code>一栏中<br><code>meta/main.yml</code>，这里面配置的是role的作者信息</p></blockquote><h2 id="上传Role到Github">上传Role到Github</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> mongodb-install</span><br><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;init&quot;</span></span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin https://github.com/hanqunfeng/ansible-role-mongodb.git</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h2 id="发布Role到Galaxy">发布Role到Galaxy</h2><ul class="lvl-0"><li class="lvl-2"><p>登录<a href="https://galaxy.ansible.com/">https://galaxy.ansible.com/</a>，点击<code>登录</code>，使用Github账号登录。</p></li><li class="lvl-2"><p>导入Role<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/w1UxvL.png" alt=""></p></li><li class="lvl-2"><p>填写Role信息<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/OnIT3a.png" alt=""></p></li><li class="lvl-2"><p>查看导入状态<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/7Dghla.png" alt=""></p></li><li class="lvl-2"><p>搜索Role<br>此时我们在角色列表中搜索关键字<code>hanqunfeng</code>，就可以搜索到我们刚刚上传的那个role了<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/lx7rCg.png" alt=""></p></li><li class="lvl-2"><p>点击进去我们就可以查看角色的详细信息了</p></li></ul><h2 id="修改Role">修改Role</h2><ul class="lvl-0"><li class="lvl-2"><p>修改了role信息后，重新上传到github即可</p></li><li class="lvl-2"><p>如果同时修改了<code>README.md</code>等role信息，可以在galaxy中重新上传即可<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/PVNRGz.png" alt=""></p></li></ul><h2 id="安装Role">安装Role</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ ansible-galaxy role install hanqunfeng.mongodb-install</span><br><span class="line">Starting galaxy role install process</span><br><span class="line">- downloading role <span class="string">&#x27;mongodb-install&#x27;</span>, owned by hanqunfeng</span><br><span class="line">- downloading role from https://github.com/hanqunfeng/ansible-role-mongodb/archive/main.tar.gz</span><br><span class="line">- extracting hanqunfeng.mongodb-install to /Users/hanqf/.ansible/roles/hanqunfeng.mongodb-install</span><br><span class="line">- hanqunfeng.mongodb-install (main) was installed successfully</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新安装</span></span><br><span class="line">ansible-galaxy role install --force hanqunfeng.mongodb-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已安装的role</span></span><br><span class="line">ansible-galaxy role list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">$ ansible-galaxy role remove hanqunfeng.mongodb-install</span><br><span class="line">- successfully removed hanqunfeng.mongodb-install</span><br></pre></td></tr></table></figure><h2 id="使用Role">使用Role</h2><ul class="lvl-0"><li class="lvl-2"><p>在<code>playbook</code>中引用role</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">test-mongo</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span>  <span class="comment"># 切换到root用户下执行</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hanqunfeng.mongodb-install</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>执行playbook</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -i hosts playbook.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换默认的变量</span></span><br><span class="line">ansible-playbook -i hosts --extra-vars <span class="string">&quot;mongo_port=27019&quot;</span> --extra-vars <span class="string">&quot;mongo_replica_set_name=rs1&quot;</span> playbook.yml</span><br></pre></td></tr></table></figure><h2 id="发布指定版本到Galaxy">发布指定版本到Galaxy</h2><ul class="lvl-0"><li class="lvl-2"><p>给角色代码打tag</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建tag，名称为 v1.0.0</span></span><br><span class="line">git tag -a v1.0.0 -m <span class="string">&quot;v1.0.0&quot;</span></span><br><span class="line"><span class="comment"># 提交tag</span></span><br><span class="line">git push origin v1.0.0</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>在galaxy中重新上传，注意此时在要指定tag名称<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/sESeVk.png" alt=""></p></li><li class="lvl-2"><p>上传成功后，就可以在galaxy中查看到对应的版本了<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/R18rBY.png" alt=""></p></li></ul><h2 id="下载指定版本的角色">下载指定版本的角色</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意role和版本号之间用逗号隔开，不加版本号，则下载最新版本</span></span><br><span class="line">$ ansible-galaxy role install hanqunfeng.mongodb-install,v1.0.0</span><br><span class="line">Starting galaxy role install process</span><br><span class="line">- downloading role <span class="string">&#x27;mongodb-install&#x27;</span>, owned by hanqunfeng</span><br><span class="line">- downloading role from https://github.com/hanqunfeng/ansible-role-mongodb/archive/v1.0.0.tar.gz</span><br><span class="line">- extracting hanqunfeng.mongodb-install to /Users/hanqf/.ansible/roles/hanqunfeng.mongodb-install</span><br><span class="line">- hanqunfeng.mongodb-install (v1.0.0) was installed successfully</span><br></pre></td></tr></table></figure><h2 id="搜索角色">搜索角色</h2><ul class="lvl-0"><li class="lvl-2"><p>除了在galaxy网站中搜索，还可以通过命令行搜索</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ansible-galaxy search hanqunfeng</span><br><span class="line"></span><br><span class="line">Found 1 roles matching your search:</span><br><span class="line"></span><br><span class="line"> Name                       Description</span><br><span class="line"> ----                       -----------</span><br><span class="line"> hanqunfeng.mongodb-install CentOS 7&amp;8 MongoDB install role</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 或者</span></span><br><span class="line"> ansible-galaxy role search hanqunfeng</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍如何将Ansible Role发布到Galaxy。&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;关于Ansible的介绍可以参看 &lt;a href=&quot;/2024/03/19/linux-command15-ansible/&quot; title=&quot;Linux常用命令--Ansible&quot;&gt;Linux常用命令--Ansible&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;关于将Ansible Collection发布到Galaxy的详细介绍可以参看 &lt;a href=&quot;/2024/03/27/ansible-collection-publish/&quot; title=&quot;Ansible Collection Publish To Galaxy&quot;&gt;Ansible Collection Publish To Galaxy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    <category term="Ansible" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/Ansible/"/>
    
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    <category term="Ansible" scheme="https://blog.hanqunfeng.com/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令--Ansible</title>
    <link href="https://blog.hanqunfeng.com/2024/03/19/linux-command15-ansible/"/>
    <id>https://blog.hanqunfeng.com/2024/03/19/linux-command15-ansible/</id>
    <published>2024-03-19T13:30:05.000Z</published>
    <updated>2024-04-03T03:45:37.267Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍Ansible的安装和使用。</p></li><li class="lvl-2"><p>本文基于CentOS8。</p></li></ul><span id="more"></span><h2 id="Ansible简介">Ansible简介</h2><ul class="lvl-0"><li class="lvl-2"><p>Ansible 是一个开源的自动化运维工具，它基于 Python 语言开发，支持跨平台，可以运行在 Linux、Unix、Mac OS X、Windows 等多种系统环境。</p></li><li class="lvl-2"><p>Ansible简单易用，只需要在控制主机上安装 Ansible 并在被管理主机上安装 Python 2.6 或更高版本即可（现有的开源Linux系统基本都自带了Python ，所以相当于远程主机什么都不需要安装），就可以管理远程主机对其进行自动化配置、编排高级工作流程以支持应用程序部署、系统更新等。</p></li><li class="lvl-2"><p>Ansible可以用来管理Linux、Unix、Windows、OpenStack、AWS、GCP、OpenShift、Kubernetes等系统环境。</p></li><li class="lvl-2"><p>Ansible官网文档：<a href="https://docs.ansible.com/ansible/latest/">https://docs.ansible.com/ansible/latest/</a></p></li><li class="lvl-2"><p>Ansible中文权威指南：<a href="https://ansible-tran.readthedocs.io/en/latest/index.html">https://ansible-tran.readthedocs.io/en/latest/index.html</a></p></li></ul><h2 id="Ansible安装">Ansible安装</h2><ul class="lvl-0"><li class="lvl-2"><p>Ansible安装方式有多种，这里介绍通过pip安装，当前系统中的python版本为python3.9。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install ansible</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>如果尚未安装pip，可以通过下面的方法进行安装</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">python3 get-pip.py</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>安装完成后，可以查看一下版本</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ansible --version</span><br><span class="line">ansible [core 2.15.9]</span><br><span class="line">  config file = None</span><br><span class="line">  configured module search path = [<span class="string">&#x27;/root/.ansible/plugins/modules&#x27;</span>, <span class="string">&#x27;/usr/share/ansible/plugins/modules&#x27;</span>]</span><br><span class="line">  ansible python module location = /usr/local/lib/python3.9/site-packages/ansible</span><br><span class="line">  ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections</span><br><span class="line">  executable location = /usr/local/bin/ansible</span><br><span class="line">  python version = 3.9.16 (main, Sep  8 2023, 00:00:00) [GCC 11.4.1 20230605 (Red Hat 11.4.1-2)] (/usr/bin/python3)</span><br><span class="line">  jinja version = 3.1.3</span><br><span class="line">  libyaml = True</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Ansible常用参数：</p></li></ul><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-u</td><td>指定连接到主机的用户名</td></tr><tr><td>-i</td><td>指定连接hosts文件的路径</td></tr><tr><td>-k</td><td>指定连接到主机的密码</td></tr><tr><td>-m</td><td>指定模块名称，可以指定模块的参数，比如指定shell模块的参数：-m shell -a ‘ls -l’</td></tr><tr><td>-a</td><td>指定模块的参数，比如指定shell模块的参数：-m shell -a ‘ls -l’</td></tr><tr><td>-e</td><td>指定附加参数，比如指定shell端口： -e ‘ansible_port=22’</td></tr><tr><td>-b</td><td>切换到root权限</td></tr><tr><td>-f</td><td>指定并发连接数，默认为5，即可以同时管理5台主机</td></tr></tbody></table><h2 id="Ansible的配置文件">Ansible的配置文件</h2><ul class="lvl-0"><li class="lvl-2"><p>ansible的相关配置都是通过一个名为<code>ansible.cfg</code>的配置文件进行配置的，但我们通过pip安装是不会默认创建它的，实际上不创建这个配置文件也不影响ansible的执行，因为其会使用一些默认的配置，并且在大多数场景下默认的配置就能满足需求。</p></li><li class="lvl-2"><p>ansible查找配置文件的顺序，优先级由上到下逐渐降低</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* ANSIBLE_CONFIG (一个环境变量)</span><br><span class="line">* ansible.cfg (位于当前目录中)</span><br><span class="line">* .ansible.cfg (位于家目录中)</span><br><span class="line">* /etc/ansible/ansible.cfg</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>如果需要修改默认配置，我们可以通过如下命令创建一份配置文件</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此时会创建一份所有配置项都以 ; 开头的配置文件，我们要修改那个配置，就删除其前面的 ; ，然后修改其值即可</span></span><br><span class="line">ansible-config init --disabled &gt; ansible.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前的生效配置，注意绿色为默认配置，黄色为被修改的配置</span></span><br><span class="line">ansible-config dump</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看帮助文件</span></span><br><span class="line">ansible-config list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看默认配置项的值和注释说明</span></span><br><span class="line">ansible-config init list</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用配置详解</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通用默认配置段；</span></span><br><span class="line">[defaults]</span><br><span class="line"><span class="comment"># 被控端IP或者DNS列表；</span></span><br><span class="line">inventory=/etc/ansible/hosts</span><br><span class="line"><span class="comment"># Ansible默认搜寻模块的位置；</span></span><br><span class="line">library=&#123;&#123; ANSIBLE_HOME ~ <span class="string">&quot;/plugins/modules:/usr/share/ansible/plugins/modules&quot;</span> &#125;&#125;</span><br><span class="line"><span class="comment"># 并行进程数；</span></span><br><span class="line">forks=5</span><br><span class="line"><span class="comment"># 是否允许切换为其它用户</span></span><br><span class="line">become=False</span><br><span class="line"><span class="comment"># become=True时，通过sudo进行切换</span></span><br><span class="line">become_method=sudo</span><br><span class="line"><span class="comment"># 切换为root</span></span><br><span class="line">become_user=root</span><br><span class="line"><span class="comment"># 搜索roles的路径</span></span><br><span class="line">roles_path=&#123;&#123; ANSIBLE_HOME ~ <span class="string">&quot;/roles:/usr/share/ansible/roles:/etc/ansible/roles&quot;</span> &#125;&#125;</span><br><span class="line"><span class="comment"># 日志路径，默认不输出</span></span><br><span class="line">log_path=</span><br><span class="line"><span class="comment"># Ansible命令执行默认的模块；</span></span><br><span class="line">module_name=<span class="built_in">command</span></span><br><span class="line"><span class="comment"># 是否检查远程主机密钥，默认为True，如果希望不检查可以将其设为False，可以加快连接速度</span></span><br><span class="line">host_key_checking=True</span><br></pre></td></tr></table></figure><h2 id="Ansible的hosts配置">Ansible的hosts配置</h2><ul class="lvl-0"><li class="lvl-2"><p>需要创建hosts文件，使用ansible时，ansible会到hosts文件中查找对应的远程主机配置，默认的查找路径为<code>/etc/ansible/hosts</code>，也可以通过<code>ansible.cfg</code>修改默认配置</p></li></ul><h3 id="hosts文件格式1">hosts文件格式1</h3><ul class="lvl-0"><li class="lvl-2"><p>hosts文件格式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以配置ip或主机名</span></span><br><span class="line">[webservers] <span class="comment"># 分组名称</span></span><br><span class="line">10.10.2.45</span><br><span class="line">10.10.2.46</span><br><span class="line">[dbservers]</span><br><span class="line">10.10.2.47</span><br><span class="line">10.10.2.48</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>命令行里加上连接参数</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行命令，多个ip逗号分隔</span></span><br><span class="line">ansible -u username -m ping --private-key=~/.ssh/id_rsa -e <span class="string">&#x27;ansible_port=22&#x27;</span> 10.10.2.45,10.10.2.46</span><br><span class="line"><span class="comment"># 指定hosts文件路径</span></span><br><span class="line">ansible -i hosts -u username -m ping --private-key=~/.ssh/id_rsa -e <span class="string">&#x27;ansible_port=22&#x27;</span> 10.10.2.45,10.10.2.46</span><br></pre></td></tr></table></figure><h3 id="hosts文件格式2">hosts文件格式2</h3><ul class="lvl-0"><li class="lvl-2"><p>hosts文件里也可以配置连接参数</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">10.10.2.45 ansible_ssh_user=username ansible_ssh_private_key=~/.ssh/id_rsa ansible_ssh_port=22</span><br><span class="line">10.10.2.46 ansible_ssh_user=username ansible_ssh_private_key=~/.ssh/id_rsa ansible_ssh_port=22</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时命令行连接时就不需要指定连接参数了</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible -i hosts -u username -m ping 10.10.2.45,10.10.2.46</span><br></pre></td></tr></table></figure><h3 id="hosts文件格式3">hosts文件格式3</h3><ul class="lvl-0"><li class="lvl-2"><p>ansible是基于ssh建立连接的，所以只要ssh能连上远程主机，ansible就可以管理远程主机，如果我们为ssh配置config文件，那么ansible就可以直接将config里的Host名称配置到hosts文件里，这样就不需要配置连接参数了，同时此时也可以支持跳板机。关于ssh的config详细说明可以参考<a href="/2023/02/28/linux-command02-ssh/" title="Linux常用命令--ssh、scp与免密登录">Linux常用命令--ssh、scp与免密登录</a></p><ul class="lvl-2"><li class="lvl-6">配置~/.ssh/config</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 跳板机</span></span><br><span class="line">Host forward</span><br><span class="line">    User ec2-user</span><br><span class="line">    HostName 53.22.227.200</span><br><span class="line">    Port 22</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程主机</span></span><br><span class="line">Host remote-host</span><br><span class="line">    User ec2-user</span><br><span class="line">    HostName 10.9.5.123</span><br><span class="line">    Port 22</span><br><span class="line">    IdentityFile ~/.ssh/key.pem</span><br><span class="line">    ProxyCommand ssh forward -W %h:%p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程主机 ,10.9网段的所有主机</span></span><br><span class="line">Host 10.9.*</span><br><span class="line">    User ec2-user</span><br><span class="line">    Port 22</span><br><span class="line">    IdentityFile ~/.ssh/key.pem</span><br><span class="line">    ProxyCommand ssh forward -W %h:%p</span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6">hosts文件</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">forward     <span class="comment"># 与config中配置的Host名称一致</span></span><br><span class="line">remote-host <span class="comment"># 与config中配置的Host名称一致</span></span><br><span class="line">10.9.5.123     <span class="comment"># 匹配config中的网段</span></span><br><span class="line">10.9.5.124     <span class="comment"># 匹配config中的网段</span></span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6">命令行</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过指定主机名或ip</span></span><br><span class="line">ansible -m ping remote-host</span><br><span class="line">ansible -m ping 10.9.5.123</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通配符匹配，此时在匹配hosts中123和124</span></span><br><span class="line">ansible -m ping  <span class="string">&quot;10.9.5.*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过分组名</span></span><br><span class="line">ansible -m ping  webservers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过all指定hosts里的全部主机</span></span><br><span class="line">ansible -m ping  all</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="查看hosts配置相关命令">查看hosts配置相关命令</h3><ul class="lvl-0"><li class="lvl-2"><p>列出所有组的配置ip信息</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all --list-hosts</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看当前hosts中配置所有组名称</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible localhost -m debug -a <span class="string">&#x27;var=groups.keys()&#x27;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>列出指定组的配置ip信息</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible dbservers --list-hosts</span><br></pre></td></tr></table></figure><h2 id="Ansible模块">Ansible模块</h2><ul class="lvl-0"><li class="lvl-2"><p>列出所有模块</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc -l</span><br><span class="line"><span class="comment"># 也可以指定模块名称</span></span><br><span class="line">ansible-doc -l | grep -i shell</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看指定模块的参数信息，如下查看shell模块的参数说明</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc -s shell</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看模块的帮助信息，如下查看shell模块的帮助信息，这与官方文档一致:<a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html#ansible-collections-ansible-builtin-shell-module">shell模块</a></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc shell</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Ansible管理工具常用的模块：<code>command、shell、file、user、copy、service、yum、synchronze、cron、setup、ping</code>等。可以在命令行里指定各个模块的参数(<code>ansible</code>命令)，也可以将参数配置到yml文件里，然后在命令行里指定yml文件(<code>ansible-playbook</code>命令)，下面会结合两种方式一块介绍。网上有大把的关于ansible命令的使用说明，这里只简单介绍几个模块的使用方法，其他模块的使用方法可以参考<a href="https://docs.ansible.com/ansible/latest/collections/index.html#plugin-list">ansible模块</a></p></li><li class="lvl-2"><p>下面介绍的都是<a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/index.html#plugins-in-ansible-builtin">ansible核心模块:ansible-core</a></p></li></ul><h3 id="debug模块">debug模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html#ansible-collections-ansible-builtin-debug-module">debug模块</a>此模块在执行期间打印语句，可用于调试变量或表达式</p></li><li class="lvl-2"><p>通过命令行执行命令</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m debug -a <span class="string">&#x27;msg=&quot;System HostName: &#123;&#123; inventory_hostname &#125;&#125;&quot;&#x27;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>通过yml文件执行命令</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># debug.yml</span></span><br><span class="line"><span class="string">---</span>  <span class="comment"># yml文件的开头，规定playbook的yml文件格式，必须以---开头(必须)，...结尾(非必须)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Debug</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Debug</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">msg:</span> <span class="string">&quot;System HostName: <span class="template-variable">&#123;&#123; inventory_hostname &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明：<code>ansible-doc -s debug</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>msg</td><td>打印消息，支持变量</td></tr><tr><td>var</td><td>打印消息，支持变量，注册变量  , 与msg互斥</td></tr></tbody></table><h3 id="ping模块">ping模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/ping_module.html#ansible-collections-ansible-builtin-ping-module">ping模块</a>用于测试主机的连通性，它会尝试连接到主机，验证可用的python，并在成功时返回“pong”，可以指定主机名或ip，也可以指定分组名，也可以指定all</p></li><li class="lvl-2"><p>通过命令行执行命令</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m ping</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>通过yml文件执行命令</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ping.yml</span></span><br><span class="line"><span class="string">---</span>  <span class="comment"># yml文件的开头，规定playbook的yml文件格式，必须以---开头(必须)，...结尾(非必须)</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Ping</span> <span class="string">web</span> <span class="string">servers</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span>  <span class="comment"># ip或组名，也可以配置all：匹配全部主机</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Ping</span> <span class="string">the</span> <span class="string">servers</span></span><br><span class="line">      <span class="attr">ping:</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">command_output</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">显示命令输出</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">var:</span> <span class="string">command_output.stdout_lines</span> <span class="comment"># 注册变量输出要使用 var</span></span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>ansible-playbook</strong></em></p><ul class="lvl-1"><li class="lvl-2">通过ansible-playbook命令，可以指定yml文件</li><li class="lvl-2">ansible-playbook相关命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查yml文件语法格式</span></span><br><span class="line">ansible-playbook --syntax-check ping.yml</span><br><span class="line"><span class="comment"># 列出hosts</span></span><br><span class="line">ansible-playbook --list-hosts ping.yml</span><br><span class="line"><span class="comment"># 列出tags</span></span><br><span class="line">ansible-playbook --list-tags ping.yml</span><br><span class="line"><span class="comment"># 列出task</span></span><br><span class="line">ansible-playbook --list-tasks ping.yml</span><br><span class="line"><span class="comment"># 指定执行主机：--limit 或 -l，其必须是yml中hosts指定的子集</span></span><br><span class="line">ansible-playbook ping.yml --<span class="built_in">limit</span> 192.168.20.23</span><br><span class="line"><span class="comment"># 执行命令</span></span><br><span class="line">ansible-playbook ping.yml</span><br><span class="line"><span class="comment"># 模拟执行，Ansible 会模拟执行任务，并输出执行结果，但不会对目标主机做出任何更改</span></span><br><span class="line"><span class="comment"># 注意这个命令运行不报错并不能说明一定可以执行成功，因为这个命令是模拟执行的</span></span><br><span class="line">ansible-playbook ping.yml --check</span><br></pre></td></tr></table></figure></div><h3 id="setup模块">setup模块</h3><ul class="lvl-0"><li class="lvl-2"><p>该模块用于采集被管理设备信息并返回给服务端，后面跟<code>--tree &lt;目录&gt;</code>，可以将采集信息以ip为文件名保存至指定目录下</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看全部信息</span></span><br><span class="line">ansible all -m setup</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只查看内存信息</span></span><br><span class="line">ansible all -m setup -a <span class="string">&quot;filter=*mem*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只查看网络信息</span></span><br><span class="line">ansible all -m setup -a <span class="string">&quot;gather_subset=network&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存信息至指定目录，这样会每个ip对应一个文件</span></span><br><span class="line">ansible all -m setup --tree ./</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明：<code>ansible-doc -s setup</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>gather_subset</td><td>指定要收集的系统信息的子集。可以是 all（所有信息）、network（网络信息）、hardware（硬件信息）等。默认为 all。</td></tr><tr><td>gather_timeout</td><td>设置信息收集的超时时间，单位为秒。默认为 10 秒。</td></tr><tr><td>filter</td><td>指定要收集的系统信息的过滤条件。可以是一个或多个标签，只收集匹配的信息。</td></tr><tr><td>fact_path</td><td>指定自定义 facts 文件的路径。</td></tr></tbody></table><blockquote><p>这里重点介绍一下gather_subset</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">all: 收集所有可用的系统信息。</span><br><span class="line">all_ipv4_addresses: 收集所有 IPv4 地址信息。</span><br><span class="line">all_ipv6_addresses: 收集所有 IPv6 地址信息。</span><br><span class="line">apparmor: 收集 AppArmor 相关信息。</span><br><span class="line">architecture: 收集系统架构信息。</span><br><span class="line">caps: 收集进程的 capabilities 信息。</span><br><span class="line">chroot: 收集 chroot 环境的信息。</span><br><span class="line">cmdline: 收集内核命令行参数信息。</span><br><span class="line">date_time: 收集日期和时间信息。</span><br><span class="line">default_ipv4: 收集默认的 IPv4 地址信息。</span><br><span class="line">default_ipv6: 收集默认的 IPv6 地址信息。</span><br><span class="line">devices: 收集系统设备信息。</span><br><span class="line">distribution: 收集发行版信息。</span><br><span class="line">distribution_major_version: 收集发行版主版本号。</span><br><span class="line">distribution_release: 收集发行版发行号。</span><br><span class="line">distribution_version: 收集发行版版本信息。</span><br><span class="line">dns: 收集 DNS 配置信息。</span><br><span class="line">effective_group_ids: 收集有效组 ID 信息。</span><br><span class="line">effective_user_id: 收集有效用户 ID 信息。</span><br><span class="line">env: 收集环境变量信息。</span><br><span class="line">facter: 收集 Facter 信息。</span><br><span class="line">fips: 收集 FIPS 相关信息。</span><br><span class="line">hardware: 收集硬件信息。</span><br><span class="line">interfaces: 收集网络接口信息。</span><br><span class="line">is_chroot: 收集是否处于 chroot 环境的信息。</span><br><span class="line">iscsi: 收集 iSCSI 配置信息。</span><br><span class="line">kernel: 收集内核信息。</span><br><span class="line">local: 收集本地配置信息。</span><br><span class="line">lsb: 收集 LSB 发行版信息。</span><br><span class="line">machine: 收集机器信息。</span><br><span class="line">machine_id: 收集机器 ID 信息。</span><br><span class="line">mounts: 收集挂载点信息。</span><br><span class="line">network: 收集网络相关信息。</span><br><span class="line">ohai: 收集 Ohai 信息。</span><br><span class="line">os_family: 收集操作系统家族信息。</span><br><span class="line">pkg_mgr: 收集包管理器信息。</span><br><span class="line">platform: 收集平台信息。</span><br><span class="line">processor: 收集处理器信息。</span><br><span class="line">processor_cores: 收集处理器核心数信息。</span><br><span class="line">processor_count: 收集处理器数量信息。</span><br><span class="line">python: 收集 Python 相关信息。</span><br><span class="line">python_version: 收集 Python 版本信息。</span><br><span class="line">real_user_id: 收集真实用户 ID 信息。</span><br><span class="line">selinux: 收集 SELinux 配置信息。</span><br><span class="line">service_mgr: 收集服务管理器信息。</span><br><span class="line">ssh_host_key_dsa_public: 收集 SSH DSA 公钥信息。</span><br><span class="line">ssh_host_key_ecdsa_public: 收集 SSH ECDSA 公钥信息。</span><br><span class="line">ssh_host_key_ed25519_public: 收集 SSH ED25519 公钥信息。</span><br><span class="line">ssh_host_key_rsa_public: 收集 SSH RSA 公钥信息。</span><br><span class="line">ssh_host_pub_keys: 收集 SSH 主机公钥信息。</span><br><span class="line">ssh_pub_keys: 收集 SSH 用户公钥信息。</span><br><span class="line">system: 收集系统相关信息。</span><br><span class="line">system_capabilities: 收集系统能力信息。</span><br><span class="line">system_capabilities_enforced: 收集系统能力强制信息。</span><br><span class="line">user: 收集用户账户信息。</span><br><span class="line">user_dir: 收集用户目录信息。</span><br><span class="line">user_gecos: 收集用户 GECOS 信息。</span><br><span class="line">user_gid: 收集用户组 ID 信息。</span><br><span class="line">user_id: 收集用户 ID 信息。</span><br><span class="line">user_shell: 收集用户 Shell 信息。</span><br><span class="line">user_uid: 收集用户 UID 信息。</span><br><span class="line">virtual: 收集虚拟化相关信息。</span><br><span class="line">virtualization_role: 收集虚拟化角色信息。</span><br><span class="line">virtualization_type: 收集虚拟化类型信息。</span><br></pre></td></tr></table></figure><h3 id="command模块">command模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html#ansible-collections-ansible-builtin-command-module">command模块</a>为ansible默认模块，主要用于执行Linux基础命令，可以执行远程服务器命令执行、任务执行等操作。</p></li><li class="lvl-2"><p>command模块不支持管道符号、变量，只能运行简单命令，复杂命令需要使用shell模块</p></li><li class="lvl-2"><p>示例1</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m <span class="built_in">command</span> -a <span class="string">&quot;df -hT&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># command.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上运行</span> <span class="string">df</span> <span class="string">-hT</span> <span class="string">命令</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">执行</span> <span class="string">df</span> <span class="string">-hT</span> <span class="string">命令</span></span><br><span class="line">      <span class="attr">command:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">&quot;df -hT&quot;</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">command_output</span> <span class="comment"># 保存命令执行结果</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">显示命令输出</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">var:</span> <span class="string">command_output.stdout_lines</span> <span class="comment"># 输出命令执行结果</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例2：参数chdir：切换到指定目录后再运行命令</p></li></ul><blockquote><p>可以通过<code>ansible-doc -s command</code>查看其支持的参数</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m <span class="built_in">command</span> -a <span class="string">&quot;chdir=/tmp ls -l&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># command2.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上列出</span> <span class="string">/tmp</span> <span class="string">目录的内容</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">切换到</span> <span class="string">/tmp</span> <span class="string">目录并列出内容</span></span><br><span class="line">      <span class="attr">command:</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/tmp</span>       <span class="comment"># 切换到 /tmp 目录</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">ls</span> <span class="string">-l</span>        <span class="comment"># 执行命令</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">command_output</span>  <span class="comment"># 保存命令执行结果</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">显示命令输出</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">var:</span> <span class="string">command_output.stdout_lines</span> <span class="comment"># 输出命令执行结果</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明：<code>ansible-doc -s command</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>argv</td><td>要执行的命令，可以是字符串形式或列表形式。</td></tr><tr><td>chdir</td><td>在执行命令之前切换到的目录。</td></tr><tr><td>cmd</td><td>要执行的命令。</td></tr><tr><td>creates</td><td>指定一个文件名或模式，如果匹配的文件已经存在，则不执行命令。</td></tr><tr><td>expand_argument_vars</td><td>是否展开作为变量的参数。默认为 true，表示展开变量。</td></tr><tr><td>free_form</td><td>以字符串形式指定要执行的命令。这个参数并不存在，但是 command 模块接受自由形式的字符串作为命令。</td></tr><tr><td>removes</td><td>指定一个文件名或模式，如果匹配的文件存在，则执行命令。</td></tr><tr><td>stdin</td><td>将命令的标准输入设置为指定的值。</td></tr><tr><td>stdin_add_newline</td><td>是否在标准输入数据后添加换行符。</td></tr><tr><td>strip_empty_ends</td><td>是否从标准输出的末尾剥离空行。</td></tr></tbody></table><h3 id="shell模块">shell模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html#ansible-collections-ansible-builtin-shell-module">shell模块</a>与command模块类似，可以执行远程服务器命令执行、任务执行等操作，但是shell模块支持管道符号、变量，可以执行复杂命令</p></li><li class="lvl-2"><p>示例：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看进程</span></span><br><span class="line">ansible webservers -m shell -a <span class="string">&quot;ps -ef | grep java | grep -v &#x27;grep&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">ansible webservers -m shell -a <span class="string">&quot; echo 123456 | passwd --stdin ansible&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shell.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上查找</span> <span class="string">Java</span> <span class="string">进程</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">执行</span> <span class="string">ps</span> <span class="string">-ef</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">java</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-v</span> <span class="string">&#x27;grep&#x27;</span> <span class="string">命令</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">ps</span> <span class="string">-ef</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">java</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-v</span> <span class="string">&#x27;grep&#x27;</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">command_output</span>  <span class="comment"># 保存命令执行结果</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">显示命令输出</span></span><br><span class="line">      <span class="attr">debug:</span></span><br><span class="line">        <span class="attr">var:</span> <span class="string">command_output.stdout_lines</span> <span class="comment"># 输出命令执行结果</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明：<code>ansible-doc -s shell</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>argv</td><td>要执行的命令，可以是字符串形式或列表形式。</td></tr><tr><td>chdir</td><td>在执行命令之前切换到的目录。</td></tr><tr><td>cmd</td><td>要执行的命令。</td></tr><tr><td>creates</td><td>指定一个文件名或模式，如果匹配的文件已经存在，则不执行命令。</td></tr><tr><td>executable</td><td>用于执行命令的可执行程序，默认情况下为 /bin/sh。</td></tr><tr><td>free_form</td><td>以字符串形式指定要执行的命令。这个参数并不存在，但是 shell 模块接受自由形式的字符串作为命令。</td></tr><tr><td>removes</td><td>指定一个文件名或模式，如果匹配的文件存在，则执行命令。</td></tr><tr><td>stdin</td><td>将命令的标准输入设置为指定的值。</td></tr><tr><td>stdin_add_newline</td><td>是否在标准输入数据后添加换行符。</td></tr><tr><td>strip_empty_ends</td><td>是否从标准输出的末尾剥离空行。</td></tr></tbody></table><h3 id="file模块">file模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html#ansible-collections-ansible-builtin-file-module">file模块</a>主要用于文件和目录的管理，可以创建、删除、修改文件和目录，可以指定文件或目录的属性，可以指定文件或目录的权限，可以指定文件或目录的owner、group、mode等信息，等等</p></li><li class="lvl-2"><p>示例：创建目录</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m file -a <span class="string">&quot;path=/tmp/`date +%F`  state=directory  mode=755&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上创建日期格式的目录</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">创建目录</span></span><br><span class="line">      <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">&quot;/tmp/<span class="template-variable">&#123;&#123; ansible_date_time.date &#125;&#125;</span>&quot;</span> <span class="comment"># ansible_date_time.date表示当前时间获取的日期，格式为YYYY-MM-DD</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span> <span class="comment"># 创建目录，如果目录已经存在则不创建</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">&quot;755&quot;</span> <span class="comment"># 设置目录权限</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明：<code>ansible-doc -s file</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>文件或目录的路径。</td></tr><tr><td>state</td><td>文件或目录的状态。可选值包括 file（文件）、directory（目录）、link（符号链接）。默认为 file。</td></tr><tr><td>owner</td><td>文件或目录的所有者。</td></tr><tr><td>group</td><td>文件或目录的所属组。</td></tr><tr><td>mode</td><td>文件或目录的权限。</td></tr><tr><td>src</td><td>源文件路径，用于复制文件或创建链接。</td></tr><tr><td>dest</td><td>目标文件路径，用于复制文件或创建链接。</td></tr><tr><td>follow</td><td>是否遵循符号链接。如果为 yes，则会遵循符号链接进行操作。默认为 yes。</td></tr><tr><td>selevel</td><td>文件或目录的 SELinux 安全上下文。</td></tr><tr><td>serole</td><td>文件或目录的 SELinux 角色。</td></tr><tr><td>setype</td><td>文件或目录的 SELinux 类型。</td></tr><tr><td>seuser</td><td>文件或目录的 SELinux 用户。</td></tr><tr><td>unsafe_writes</td><td>是否启用不安全的写入模式。如果为 yes，则在写入文件之前不会创建备份。默认为 no。</td></tr></tbody></table><blockquote><p>这里重点说一下<code>state</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">file：表示要求目标主机上存在指定的文件。如果文件已经存在，则不执行任何操作；如果文件不存在，则会创建它。</span><br><span class="line">directory：表示要求目标主机上存在指定的目录。如果目录已经存在，则不执行任何操作；如果目录不存在，则会创建它。</span><br><span class="line">link：表示要求目标主机上存在指定的符号链接。如果符号链接已经存在，则不执行任何操作；如果符号链接不存在，则会创建它。</span><br><span class="line">hard：创建硬链接</span><br><span class="line">touch：如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间</span><br><span class="line">absent：删除目录、文件或者取消链接文件</span><br></pre></td></tr></table></figure><h3 id="copy模块">copy模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html#ansible-collections-ansible-builtin-copy-module">copy模块</a>主要用于将文件复制到远程服务器，可以指定文件的源路径、目标路径、owner、group、mode等信息，等等</p></li><li class="lvl-2"><p>示例：复制文件到指定目录</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -b 切换到root用户下执行</span></span><br><span class="line">ansible webservers -m copy -a <span class="string">&quot;src=/tmp/a.txt dest=/tmp/ owner=root group=root mode=755&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># copy.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上复制文件</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span> <span class="comment"># 切换到root用户下执行</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">复制文件</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">&quot;/tmp/a.txt&quot;</span> <span class="comment"># 源文件路径</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">&quot;/tmp/&quot;</span>     <span class="comment"># 目标文件路径</span></span><br><span class="line">        <span class="attr">owner:</span> <span class="string">root</span>       <span class="comment"># 指定文件owner</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">root</span>       <span class="comment"># 指定文件group</span></span><br><span class="line">        <span class="attr">mode:</span> <span class="string">&quot;755&quot;</span>       <span class="comment"># 指定文件权限</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明：<code>ansible-doc -s copy</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>src</td><td>源文件的路径。</td></tr><tr><td>dest</td><td>目标文件的路径。</td></tr><tr><td>backup</td><td>是否备份目标文件。如果为 yes，则在复制目标文件之前会创建一个备份文件。默认为 yes。</td></tr><tr><td>content</td><td>要写入目标文件的内容。</td></tr><tr><td>directory_mode</td><td>目标目录的权限。只有当目标是一个目录时才会生效。</td></tr><tr><td>follow</td><td>是否跟随符号链接。如果为 yes，则会跟随符号链接进行操作。默认为 yes。</td></tr><tr><td>force</td><td>是否强制覆盖目标文件。如果为 yes，则强制复制源文件，即使目标文件已经存在。默认为 no。</td></tr><tr><td>group</td><td>目标文件的所属组。</td></tr><tr><td>mode</td><td>目标文件的权限。</td></tr><tr><td>owner</td><td>目标文件的所有者。</td></tr><tr><td>remote_src</td><td>指定源文件是否在远程主机上。如果为 yes，表示源文件在远程主机上。默认为 no。</td></tr></tbody></table><h3 id="fetch模块">fetch模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/fetch_module.html#ansible-collections-ansible-builtin-fetch-module">fetch模块</a>主要用于将文件从远程服务器复制到本地，可以指定文件的源路径、目标路径、owner、group、mode等信息，等等</p></li><li class="lvl-2"><p>示例：将文件从远程服务器复制到本地</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m fetch -a <span class="string">&quot;src=/tmp/a.txt dest=/tmp/ flat=yes&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fetch.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上将文件从远程服务器复制到本地</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">复制文件</span></span><br><span class="line">      <span class="attr">fetch:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">&quot;/tmp/a.txt&quot;</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">&quot;/tmp/&quot;</span></span><br><span class="line">        <span class="attr">flat:</span> <span class="literal">yes</span> <span class="comment"># flat: yes  # 将文件复制到dest目录下，不创建目录结构</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明：<code>ansible-doc -s fetch</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>src</td><td>远程主机上要拉取的文件的路径。</td></tr><tr><td>dest</td><td>本地主机上文件的目标路径。</td></tr><tr><td>flat</td><td>是否将文件放置在顶层目录中。如果为 yes，则所有文件都将放置在一个目录中。默认为 no。</td></tr><tr><td>fail_on_missing</td><td>如果为 yes，则在源文件不存在时失败。默认为 yes。</td></tr><tr><td>validate_checksum</td><td>是否验证远程文件的校验和。默认为 no。</td></tr></tbody></table><h3 id="cron模块">cron模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/cron_module.html#ansible-collections-ansible-builtin-cron-module">cron模块</a>主要用于在远程服务器上创建、修改、删除定时任务</p></li><li class="lvl-2"><p>示例：创建定时任务</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m cron -a <span class="string">&#x27;name=&quot;restart httpd&quot; hour=*/5 job=&quot;systemctl restart httpd&quot;&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cron.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上创建定时任务</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">创建定时任务</span></span><br><span class="line">      <span class="attr">cron:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">&quot;restart httpd&quot;</span></span><br><span class="line">        <span class="attr">hour:</span> <span class="string">&quot;*/5&quot;</span></span><br><span class="line">        <span class="attr">job:</span> <span class="string">&quot;systemctl restart httpd&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明：<code>ansible-doc -s cron</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>cron 任务的名称。</td></tr><tr><td>minute</td><td>cron 任务执行的分钟。</td></tr><tr><td>hour</td><td>cron 任务执行的小时。</td></tr><tr><td>day</td><td>cron 任务执行的日期。</td></tr><tr><td>month</td><td>cron 任务执行的月份。</td></tr><tr><td>weekday</td><td>cron 任务执行的星期几。</td></tr><tr><td>job</td><td>要执行的命令或脚本。</td></tr><tr><td>cron_file</td><td>要操作的 cron 文件的路径。默认为 /etc/crontab。</td></tr><tr><td>state</td><td>cron 任务的状态。可选值包括 present（默认）和 absent。表示要求任务存在或不存在。</td></tr><tr><td>user</td><td>cron 任务的执行用户。默认为 root。</td></tr><tr><td>backup</td><td>是否备份 cron 文件。可选值包括 true 和 false。</td></tr></tbody></table><blockquote><p>state</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">present：表示要求指定的 cron 任务存在。如果指定的 cron 任务不存在，则 Ansible 将会创建它。如果已经存在，则不执行任何操作。</span><br><span class="line">absent：表示要求指定的 cron 任务不存在。如果指定的 cron 任务存在，则 Ansible 将会删除它。如果不存在，则不执行任何操作。</span><br></pre></td></tr></table></figure><h3 id="yum模块">yum模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/yum_module.html#ansible-collections-ansible-builtin-yum-module">yum模块</a>主要用于在远程服务器上安装、卸载、更新软件包，可以指定软件包的名称、版本、repo等信息，等等</p></li><li class="lvl-2"><p>示例：安装软件包</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装软件包，相当于 yum install httpd</span></span><br><span class="line">ansible webservers -m yum -a <span class="string">&quot;name=httpd state=present&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上安装</span> <span class="string">httpd</span> <span class="string">软件包</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">httpd</span> <span class="string">软件包</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span> <span class="comment"># 软件包名称，相当于 yum install httpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span> <span class="comment"># 安装软件包，如果软件包已经安装则不安装</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明:<code>ansible-doc -s yum</code></p></li></ul><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>name</td><td>指定要操作的包的名称。</td></tr><tr><td>update_cache</td><td>指定是否在执行操作之前更新 yum 缓存。可选值为 <code>yes</code> 或 <code>no</code>。默认为 <code>yes</code>。</td></tr><tr><td>disable_gpg_check</td><td>指定是否禁用 GPG 检查。如果为 <code>yes</code>，则禁用 GPG 检查。默认为 <code>no</code>。</td></tr><tr><td>disable_plugin</td><td>指定是否禁用指定的 yum 插件。可以是一个插件名称的列表。</td></tr><tr><td>enablerepo</td><td>指定要启用的仓库。可以是一个仓库名称的列表。</td></tr><tr><td>disablerepo</td><td>指定要禁用的仓库。可以是一个仓库名称的列表。</td></tr><tr><td>installroot</td><td>指定要安装软件包的根目录。</td></tr><tr><td>security</td><td>指定是否只安装安全更新。如果为 <code>yes</code>，则只安装安全更新。默认为 <code>no</code>。</td></tr><tr><td>list</td><td>指定是否列出所有已安装的包。如果为 <code>yes</code>，则列出已安装的包。默认为 <code>no</code>。</td></tr><tr><td>state</td><td>指定软件包的状态。可选值为 <code>present</code>、<code>latest</code>、<code>absent</code>、<code>installed</code>、<code>removed</code>。默认为 <code>present</code>。</td></tr></tbody></table><blockquote><p>这里重点说一下<code>state</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">present: 表示要求目标主机上存在指定的软件包。如果软件包已经安装，则不执行任何操作；如果软件包未安装，则会安装它。</span><br><span class="line">latest: 表示要求目标主机上存在指定的软件包，并且希望保持为最新版本。如果软件包已经安装，但不是最新版本，则会更新到最新版本；如果软件包未安装，则会安装最新版本。</span><br><span class="line">absent: 表示要求目标主机上不存在指定的软件包。如果软件包已安装，则会将其卸载；如果软件包未安装，则不执行任何操作。</span><br><span class="line">installed: 与 present 意义相同，用于明确表达希望软件包已经安装在目标主机上。</span><br><span class="line">removed: 与 absent 意义相同，用于明确表达希望软件包已从目标主机上卸载。</span><br></pre></td></tr></table></figure><h3 id="service模块-调用的是service命令">service模块:调用的是<code>service</code>命令</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html#ansible-collections-ansible-builtin-service-module">service模块</a>主要用于在远程服务器上启动、停止、重启、重新加载、启用、禁用、检查服务，可以指定服务的名称、状态、启动方式等信息，等等</p></li><li class="lvl-2"><p>示例：启动服务</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m service -a <span class="string">&quot;name=httpd state=started&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上启动</span> <span class="string">httpd</span> <span class="string">服务</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动</span> <span class="string">httpd</span> <span class="string">服务</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明:<code>ansible-doc -s service</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>服务的名称。</td></tr><tr><td>state</td><td>服务的状态。可选值包括 started（已启动）、stopped（已停止）、restarted（已重启）。</td></tr><tr><td>enabled</td><td>是否在启动时自动启用服务。如果为 yes，则在系统启动时自动启动服务。默认为 yes。</td></tr><tr><td>pattern</td><td>匹配服务的模式。默认情况下为服务名称。</td></tr><tr><td>sleep</td><td>在重新启动服务之前等待的秒数。</td></tr><tr><td>arguments</td><td>启动或停止服务时要传递的参数。</td></tr></tbody></table><blockquote><p>state</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">started：表示要求服务处于已启动状态。如果指定的服务未启动，则 Ansible 将尝试启动该服务。如果服务已经处于运行状态，则不执行任何操作。</span><br><span class="line">stopped：表示要求服务处于已停止状态。如果指定的服务正在运行，则 Ansible 将尝试停止该服务。如果服务已经停止，则不执行任何操作。</span><br><span class="line">restarted：表示要求重启服务。无论服务当前处于运行状态还是停止状态，Ansible 都会尝试重新启动该服务。</span><br></pre></td></tr></table></figure><h3 id="systemd模块-支持centos7-，调用的是systemctl">systemd模块:支持<code>centos7+</code>，调用的是<code>systemctl</code></h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_service_module.html#ansible-collections-ansible-builtin-systemd-service-module">systemd模块</a>用于控制 systemd 后台服务，允许你启动、重新启动、停止或者重新加载 systemd 服务。此外，你也可以使用它来使服务在系统启动时自动启动或禁止自动启动。除此之外，systemd 模块还允许你检查服务的状态。</p></li><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m systemd -a <span class="string">&quot;name=httpd state=restarted&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemd.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上重新启动</span> <span class="string">httpd</span> <span class="string">服务</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">重新启动</span> <span class="string">httpd</span> <span class="string">服务</span></span><br><span class="line">      <span class="attr">systemd:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">restarted</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>主要参数说明：<code>ansible-doc -s systemd</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>enabled</td><td>指定服务是否应该在启动时自动启用。可选值为 yes 或 no。默认为 yes。</td></tr><tr><td>masked</td><td>指定服务是否应该被置为 masked 状态，禁止手动启动。可选值为 yes 或 no。默认为 no。</td></tr><tr><td>name</td><td>服务的名称。</td></tr><tr><td>state</td><td>指定服务的状态。可选值为 started（启动）、stopped（停止）、restarted（重新启动）、reloaded（重新加载）</td></tr></tbody></table><h3 id="script模块">script模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/script_module.html#ansible-collections-ansible-builtin-script-module">script模块</a>主要用于在远程服务器上执行本地的脚本</p></li><li class="lvl-2"><p>示例：执行脚本</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m script -a <span class="string">&quot;chdir=/tmp /tmp/a.sh&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># script.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">web</span> <span class="string">服务器上运行脚本</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">在</span> <span class="string">/tmp</span> <span class="string">目录中运行脚本</span></span><br><span class="line">      <span class="attr">script:</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/tmp</span> <span class="comment"># 指定脚本的执行目录</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">/tmp/a.sh</span> <span class="comment"># 本地脚本的路径</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明:<code>ansible-doc -s script</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>chdir</td><td>在远程主机上执行脚本之前切换到的目录。</td></tr><tr><td>free_form</td><td>要在远程主机上执行的脚本内容。</td></tr><tr><td>creates</td><td>如果指定的文件已经存在，则不执行脚本。</td></tr><tr><td>executable</td><td>指定要使用的脚本解释器。</td></tr><tr><td>removes</td><td>在执行脚本之后，如果指定的文件存在，则删除该文件。</td></tr><tr><td>cmd</td><td>指定要执行的命令。</td></tr><tr><td>decrypt</td><td>指定要解密的源文件。</td></tr></tbody></table><h3 id="user模块">user模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/user_module.html#ansible-collections-ansible-builtin-user-module">user模块</a>主要用于在远程服务器上创建、修改、删除用户，可以指定用户的名称、密码、uid、gid、home、shell等信息，等等</p></li><li class="lvl-2"><p>示例：创建用户</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m user -a <span class="string">&quot;name=nginx group=nginx shell=/sbin/nologin create_home=no&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># user.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">创建用户</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">添加用户</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span> <span class="comment"># 用户名称</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/sbin/nologin</span> <span class="comment"># 指定用户shell,非登录用户</span></span><br><span class="line">        <span class="attr">createhome:</span> <span class="literal">no</span> <span class="comment"># 不创建用户主目录</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用参数说明:<code>ansible-doc -s user</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>append</td><td>是否将用户添加到现有组，而不是替换组。</td></tr><tr><td>comment</td><td>对用户的注释信息。</td></tr><tr><td>createhome</td><td>是否创建用户的家目录。</td></tr><tr><td>expires</td><td>用户帐户过期日期。</td></tr><tr><td>force</td><td>是否强制创建或更改用户帐户。</td></tr><tr><td>generate_ssh_key</td><td>是否生成用户的 SSH 密钥对。</td></tr><tr><td>group</td><td>用户所属组的名称或 ID。</td></tr><tr><td>groups</td><td>用户所属的其他组。</td></tr><tr><td>home</td><td>用户的家目录路径。</td></tr><tr><td>login_class</td><td>用户登录类。</td></tr><tr><td>move_home</td><td>是否在更改用户家目录路径时移动其内容。</td></tr><tr><td>name</td><td>用户的名称。</td></tr><tr><td>non_unique</td><td>允许用户具有非唯一的数字 ID。</td></tr><tr><td>password</td><td>用户的密码哈希值或加密后的密码。</td></tr><tr><td>remove</td><td>是否删除用户。</td></tr><tr><td>shell</td><td>用户的 shell。</td></tr><tr><td>state</td><td>用户帐户的状态。</td></tr><tr><td>system</td><td>是否为系统用户。</td></tr><tr><td>uid</td><td>用户的数字 ID。</td></tr></tbody></table><blockquote><p>state</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">present：表示要求指定的用户账户存在。如果指定的用户账户不存在，则 Ansible 将会创建该账户。如果用户账户已经存在，则不执行任何操作。</span><br><span class="line">absent：表示要求指定的用户账户不存在。如果指定的用户账户存在，则 Ansible 将会删除该账户。如果用户账户不存在，则不执行任何操作。</span><br></pre></td></tr></table></figure><h3 id="get-url模块">get_url模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/get_url_module.html#ansible-collections-ansible-builtin-get-url-module">get_url模块</a>负责下载文件到目标主机。</p></li><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m get_url -a <span class="string">&quot;url=https://www.example.com dest=/tmp&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get_url.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">下载文件到目标主机的指定目录</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Download</span> <span class="string">files</span> <span class="string">from</span> <span class="string">remote</span> <span class="string">host</span></span><br><span class="line">      <span class="attr">get_url:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">https://www.example.com/file.conf</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/tmp</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>主要参数说明:<code>ansible-doc -s get_url</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>url</td><td>要下载的文件的 URL 地址。</td></tr><tr><td>dest</td><td>下载文件保存的目标路径。</td></tr><tr><td>force</td><td>是否强制覆盖目标路径中的文件。可选值为 yes 或 no。默认为 yes。</td></tr><tr><td>timeout</td><td>下载超时时间，单位为秒。默认为 10 秒。</td></tr><tr><td>validate_certs</td><td>是否验证 SSL 证书。可选值为 yes 或 no。默认为 yes。</td></tr><tr><td>owner</td><td>下载后文件的所有者。</td></tr><tr><td>group</td><td>下载后文件的所属组。</td></tr><tr><td>mode</td><td>下载后文件的权限模式。</td></tr><tr><td>backup</td><td>是否创建备份文件。可选值为 yes 或 no。默认为 no。</td></tr><tr><td>headers</td><td>附加的 HTTP 请求头。</td></tr><tr><td>force_basic_auth</td><td>是否强制使用 HTTP 基本身份验证。可选值为 yes 或 no。默认为 yes。</td></tr><tr><td>http_agent</td><td>用于 HTTP 请求的代理。</td></tr></tbody></table><h3 id="lineinfile模块">lineinfile模块</h3><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html#ansible-collections-ansible-builtin-lineinfile-module">lineinfile模块</a>主要用于在远程主机上查找和替换文件中的行，可以指定要查找的行、要替换的行、要添加的行等信息，等等</p></li><li class="lvl-2"><p>示例：设置环境变量，需要注意的是此时环境变量在剧本的上下文中是不生效的，如果需要在剧本上下文生效的环境变量，可以使用 <code>shell</code> 模块</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -m lineinfile -a <span class="string">&quot;path=/etc/profile line=&#x27;PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin&#x27; state=present backup=yes&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># lineinfile.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">设置环境变量</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">设置环境变量</span></span><br><span class="line">      <span class="attr">lineinfile:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/etc/profile</span></span><br><span class="line">        <span class="attr">line:</span> <span class="string">&#x27;PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin&#x27;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="attr">backup:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>主要参数说明:<code>ansible-doc -s lineinfile</code></p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>path</td><td>要修改的文件的路径。</td></tr><tr><td>line</td><td>要添加、修改或删除的行内容。</td></tr><tr><td>state</td><td>指定要执行的操作。</td></tr><tr><td>regexp</td><td>用于匹配行的正则表达式。</td></tr><tr><td>search_string</td><td>用于匹配行的字符串。</td></tr><tr><td>backup</td><td>是否创建备份文件。可选值为 yes 或 no。默认为 no。</td></tr><tr><td>backrefs</td><td>是否允许在 <code>regexp</code> 中使用反向引用。</td></tr><tr><td>insertbefore</td><td>指定一个行，将新行插入到它之前。</td></tr><tr><td>insertafter</td><td>指定一个行，将新行插入到它之后。</td></tr><tr><td>firstmatch</td><td>是否只匹配第一个匹配项。</td></tr></tbody></table><blockquote><p>state说明</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">present：确保指定的行存在于文件中。如果文件中不存在指定的行，则会添加该行。如果文件中已经存在该行，则不做任何改变。</span><br><span class="line">absent：确保指定的行不存在于文件中。如果文件中存在指定的行，则会将该行删除。如果文件中不存在该行，则不做任何改变。</span><br></pre></td></tr></table></figure><h2 id="ansible-playbook-剧本">ansible-playbook:剧本</h2><ul class="lvl-0"><li class="lvl-2"><p><a href="https://docs.ansible.com/ansible/latest/cli/ansible-playbook.html#ansible-playbook">ansible-playbook</a>是Ansible的核心命令，用于执行playbook文件，playbook文件是Ansible执行任务的最小单元，一个playbook文件可以包含多个play，每个play可以包含多个task，每个task可以包含多个module，每个module可以执行一个操作，比如创建目录、安装软件包、启动服务、执行脚本等</p></li><li class="lvl-2"><p><a href="https://ansible-tran.readthedocs.io/en/latest/docs/playbooks_intro.html">Ansible中文全文指南–Playbooks</a></p></li><li class="lvl-2"><p>上面在介绍ansible模块时，我们已经编写了一些playbook文件，就是那些yml文件，运行时也是通过ansible-playbook命令执行的，但是基本上都是单个任务单个模块，下面我们来看一个复杂一些的示例</p></li><li class="lvl-2"><p>示例：安装nginx并配置</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># playbook.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装nginx并配置</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span>  <span class="comment"># 切换到root用户下执行</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">gcc,zlib-devel,pcre-devel,openssl-devel</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">installed</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">wget</span> <span class="string">nginx</span> <span class="string">tar.gz</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">wget</span> <span class="string">https://nginx.org/download/nginx-1.22.1.tar.gz</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/usr/local</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tar</span> <span class="string">-zxvf</span> <span class="string">nginx-1.22.1.tar.gz</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">tar</span> <span class="string">-zxvf</span> <span class="string">nginx-1.22.1.tar.gz</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/usr/local</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">user</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/sbin/nologin</span></span><br><span class="line">        <span class="attr">createhome:</span> <span class="literal">no</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">configure</span> <span class="string">,make</span> <span class="string">and</span> <span class="string">make</span> <span class="string">install</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">cd</span> <span class="string">nginx-1.22.1;./configure</span> <span class="string">--prefix=/usr/local/nginx</span> <span class="string">--with-http_stub_status_module</span> <span class="string">--with-http_ssl_module</span> <span class="string">--user=nginx;make</span> <span class="string">-j4;make</span> <span class="string">-j4</span> <span class="string">install;</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/usr/local</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">/usr/local/nginx/sbin/nginx</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>优化1</p></li></ul><blockquote><p><strong>问题</strong>: 上面的剧本有个问题，就是如果系统已经安装了nginx，则运行这个剧本还是会重新安装<br><strong>解决方法</strong>: 先判断nginx是否已经安装，如果已经安装，直接跳过安装步骤，直接执行启动命令，否则执行安装步骤，然后再执行启动命令</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装nginx并配置</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span>  <span class="comment"># 切换到root用户下执行</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查系统是否已安装Nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">/usr/local/nginx/sbin/nginx</span> <span class="string">-v</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">nginx_installed</span></span><br><span class="line">      <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">      <span class="attr">loop:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">gcc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">pcre-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl-devel</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_installed.rc</span> <span class="type">!=</span> <span class="number">0</span>  <span class="comment"># 只有当Nginx未安装时执行</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查系统是否已启动Nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">ps</span> <span class="string">aux</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">nginx</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-v</span> <span class="string">grep</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">nginx_status</span></span><br><span class="line">      <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">下载Nginx源码包</span></span><br><span class="line">      <span class="attr">get_url:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">https://nginx.org/download/nginx-1.22.1.tar.gz</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/usr/local</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_installed.rc</span> <span class="type">!=</span> <span class="number">0</span>  <span class="comment"># 只有当Nginx未安装时执行</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">解压Nginx源码包</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">tar</span> <span class="string">-zxvf</span> <span class="string">nginx-1.22.1.tar.gz</span></span><br><span class="line">        <span class="attr">chdir:</span> <span class="string">/usr/local</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_installed.rc</span> <span class="type">!=</span> <span class="number">0</span>  <span class="comment"># 只有当Nginx未安装时执行</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">添加nginx用户</span></span><br><span class="line">      <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/sbin/nologin</span></span><br><span class="line">        <span class="attr">createhome:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">编译Nginx并安装</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          cd nginx-1.22.1</span></span><br><span class="line"><span class="string">          ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class="line"><span class="string">          make -j4</span></span><br><span class="line"><span class="string">          make -j4 install</span></span><br><span class="line"><span class="string"></span>        <span class="attr">chdir:</span> <span class="string">/usr/local</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_installed.rc</span> <span class="type">!=</span> <span class="number">0</span>  <span class="comment"># 只有当Nginx未安装时执行</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动Nginx服务</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">/usr/local/nginx/sbin/nginx</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_status.rc</span> <span class="type">!=</span> <span class="number">0</span>  <span class="comment"># 只有当Nginx未启动时执行</span></span><br></pre></td></tr></table></figure><blockquote><p>register :用于将命令执行的结果保存到变量中，我们可以调用变量的属性，比如rc表示命令返回的状态码($?)，stdout表示命令的输出，stderr表示命令的错误输出<br>ignore_errors :用于忽略错误<br>loop :用于循环列表<br>when :用于判断条件，只有条件满足时才执行</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>优化2</p></li></ul><blockquote><p><strong>问题</strong>: 上面的步骤有点多，比如下载、解压、编译nginx，这些都是在没有安装nginx的情况下要运行的任务<br><strong>解决方法</strong>: 使用shell模块可以将这些步骤封装成一个任务</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装nginx并配置</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span>  <span class="comment"># 切换到root用户下执行</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查系统是否已安装Nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">/usr/local/nginx/sbin/nginx</span> <span class="string">-v</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">nginx_installed</span></span><br><span class="line">      <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">      <span class="attr">loop:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">gcc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">pcre-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl-devel</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_installed.rc</span> <span class="type">!=</span> <span class="number">0</span>  <span class="comment"># 只有当Nginx未安装时执行</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查系统是否已启动Nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">ps</span> <span class="string">aux</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">nginx</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-v</span> <span class="string">grep</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">nginx_status</span></span><br><span class="line">      <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">添加nginx用户</span></span><br><span class="line">      <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/sbin/nologin</span></span><br><span class="line">        <span class="attr">createhome:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Nginx并安装</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          wget https://nginx.org/download/nginx-1.22.1.tar.gz</span></span><br><span class="line"><span class="string">          tar -zxvf nginx-1.22.1.tar.gz</span></span><br><span class="line"><span class="string">          cd nginx-1.22.1</span></span><br><span class="line"><span class="string">          ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class="line"><span class="string">          make -j4</span></span><br><span class="line"><span class="string">          make -j4 install</span></span><br><span class="line"><span class="string"></span>        <span class="attr">chdir:</span> <span class="string">/usr/local</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_installed.rc</span> <span class="type">!=</span> <span class="number">0</span>  <span class="comment"># 只有当Nginx未安装时执行</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动Nginx服务</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">/usr/local/nginx/sbin/nginx</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_status.rc</span> <span class="type">!=</span> <span class="number">0</span>  <span class="comment"># 只有当Nginx未启动时执行</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>优化3</p></li></ul><blockquote><p><strong>问题</strong>: 上面的剧本虽然已经满足了我的需求，但是不够简练，因为很多任务并不是主要任务，我需要在每个任务中进行条件判断来决定是否执行该任务，能否只保留主要任务，其它任务只有当这些主要任务成功运行了才会被运行呢？比如这里的主要任务就是两个：1-判断是否安装了nginx，没安装就去安装，2-判断是否启动了nginx，没启动就去启动<br><strong>解决方法</strong>: 使用基于handlers的notify语句，这样可以减少重复执行任务的次数</p></blockquote><blockquote><p><strong>何为handlers</strong><br>Handler 本身是一种非同步的 callback function ，在这里则是指关连于特定 tasks 的事件 (event) 触发机制。当关联 handler 的 tasks 状态为被改变 (changed) 且都已被执行时，才会触发一次</p></blockquote><blockquote><p><strong>何为 tasks 状态为被改变 (changed)</strong><br>在Ansible中，task的状态会根据任务执行的结果而改变。当一个任务成功完成并且使得系统的状态与预期不同（即执行了一些更改），那么这个任务的状态就会被标记为&quot;changed&quot;。<br>具体来说，task状态为&quot;changed&quot;的条件包括但不限于以下情况：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">文件变更：例如复制、创建、删除文件等操作导致了文件系统的变更。</span><br><span class="line">服务状态变更：例如启动、停止、重启服务等操作导致了服务状态的改变。</span><br><span class="line">配置更改：例如修改配置文件、添加配置项等操作导致了系统配置的改变。</span><br><span class="line">软件包安装/卸载：例如安装新的软件包或者删除已安装的软件包导致了系统软件状态的改变。</span><br><span class="line">权限变更：例如修改文件权限、更改用户组、更改用户等操作导致了系统权限的改变。</span><br><span class="line">当一个或多个任务的状态被标记为&quot;changed&quot;时，与这些任务关联的handlers会被触发执行。这样可以确保在所有相关的任务都完成并且导致了系统状态的改变时，才执行后续的处理操作，从而保证了任务的一致性和可靠性。</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装nginx并配置</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span>  <span class="comment"># 切换到root用户下执行</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">判断是否存在nginx安装目录，不存在就安装nginx</span></span><br><span class="line">      <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/usr/local/nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">      <span class="attr">notify:</span>  <span class="comment"># 执行通知任务，顺序为从下到上</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Nginx安装</span> <span class="comment"># 匹配任务name</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">添加nginx用户</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查系统是否已启动Nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">ps</span> <span class="string">aux</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">nginx</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-v</span> <span class="string">grep</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">nginx_status</span></span><br><span class="line">      <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查是否需要启动nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">echo</span> <span class="string">&quot;start nginx&quot;</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_status.rc</span> <span class="type">!=</span> <span class="number">0</span> <span class="comment"># 只有当条件满足时才会运行该任务</span></span><br><span class="line">      <span class="attr">notify:</span>  <span class="comment"># 运行任务后只有状态为changed才会发送notify给handler</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">启动Nginx服务</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">handlers:</span>  <span class="comment"># handlers是一类特殊任务，当有notify时，会自动执行该任务</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">添加nginx用户</span></span><br><span class="line">      <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/sbin/nologin</span></span><br><span class="line">        <span class="attr">createhome:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">      <span class="attr">loop:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">gcc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">pcre-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl-devel</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Nginx安装</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          wget https://nginx.org/download/nginx-1.22.1.tar.gz</span></span><br><span class="line"><span class="string">          tar -zxvf nginx-1.22.1.tar.gz</span></span><br><span class="line"><span class="string">          cd nginx-1.22.1</span></span><br><span class="line"><span class="string">          ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class="line"><span class="string">          make -j4</span></span><br><span class="line"><span class="string">          make -j4 install</span></span><br><span class="line"><span class="string"></span>        <span class="attr">chdir:</span> <span class="string">/usr/local</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动Nginx服务</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">/usr/local/nginx/sbin/nginx</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>优化4</p></li></ul><blockquote><p><strong>问题</strong>: 上面的剧本中nginx的安装版本和安装路径都是写死的，能否动态配置呢？<br><strong>解决方法</strong>: 提取变量，使用vars</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装nginx并配置</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span>  <span class="comment"># 切换到root用户下执行</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">vars:</span> <span class="comment"># 定义变量</span></span><br><span class="line">    <span class="attr">nginx_version:</span> <span class="string">&quot;1.22.1&quot;</span></span><br><span class="line">    <span class="attr">work_dir:</span> <span class="string">&quot;/usr/local&quot;</span></span><br><span class="line">    <span class="attr">nginx_install_path:</span> <span class="string">&quot;/usr/local/nginx&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">判断是否存在nginx安装目录，不存在就安装nginx</span></span><br><span class="line">      <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>&quot;</span> <span class="comment"># 变量一定要双括号</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">      <span class="attr">notify:</span>  <span class="comment"># 执行通知任务，顺序为从下到上</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Nginx安装</span> <span class="comment"># 匹配任务name</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">添加nginx用户</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查系统是否已启动Nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">ps</span> <span class="string">aux</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">nginx</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-v</span> <span class="string">grep</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">nginx_status</span></span><br><span class="line">      <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查是否需要启动nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">echo</span> <span class="string">&quot;start nginx&quot;</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_status.rc</span> <span class="type">!=</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">启动Nginx服务</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">handlers:</span>  <span class="comment"># handlers是一类特殊任务，当有notify时，会自动执行该任务</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">添加nginx用户</span></span><br><span class="line">      <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/sbin/nologin</span></span><br><span class="line">        <span class="attr">createhome:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">      <span class="attr">loop:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">gcc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">pcre-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl-devel</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Nginx安装</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          wget https://nginx.org/download/nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class="line"><span class="string">          tar -zxvf nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class="line"><span class="string">          cd nginx-&#123;&#123; nginx_version &#125;&#125;</span></span><br><span class="line"><span class="string">          ./configure --prefix=&#123;&#123; nginx_install_path &#125;&#125; --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class="line"><span class="string">          make -j4</span></span><br><span class="line"><span class="string">          make -j4 install</span></span><br><span class="line"><span class="string"></span>        <span class="attr">chdir:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; work_dir &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动Nginx服务</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>/sbin/nginx&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认</span></span><br><span class="line">ansible-playbook nginx.yml</span><br><span class="line"><span class="comment"># 修改变量</span></span><br><span class="line">ansible-playbook nginx.yml -e <span class="string">&quot;nginx_version=1.24.0&quot;</span> -e <span class="string">&quot;work_dir=/root&quot;</span></span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>小贴士</strong></em></p><ul class="lvl-1"><li class="lvl-2">除了我们自己定义的变量，我们也可以使用Ansible内置的变量，Ansible内置的变量可以参考<a href="https://docs.ansible.com/ansible/latest/reference_appendices/special_variables.html">官方文档</a>。</li><li class="lvl-2">我们用的最多的就是<code>ansible_facts</code>变量获取主机信息，如IP地址、MAC地址、操作系统版本等。也就是通过<code>setup</code>模块获取的信息。</li><li class="lvl-2">在使用<code>ansible_facts</code>变量时需要开启<code>gather_facts</code>选项，默认是开启的。</li><li class="lvl-2">常用的<code>ansible_facts</code>变量如下，注意这里属性名称前是不加<code>ansible_</code>前缀的：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible_facts[&#x27;distribution&#x27;]: 远程主机的操作系统分发名称。</span><br><span class="line">ansible_facts[&#x27;distribution_version&#x27;]: 远程主机的操作系统版本号。</span><br><span class="line">ansible_facts[&#x27;user_id&#x27;]: 远程主机上当前用户的用户 ID。</span><br></pre></td></tr></table></figure></div><h2 id="ansible-playbook-Template">ansible-playbook:Template</h2><ul class="lvl-0"><li class="lvl-2"><p>Ansible Playbook Template是一种Ansible的特性，它允许您在Playbook中使用<code>Jinja2</code>模板语言来动态生成配置文件或其他文本文件。通过使用模板，您可以根据变量、条件、循环等动态信息来生成目标文件，从而使配置文件更具可扩展性和灵活性。</p></li><li class="lvl-2"><p>下面是使用Ansible Playbook Template的一些常见用法和特性：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Jinja2模板语言: Ansible Playbook Template使用Jinja2模板语言，这是一种功能强大的模板引擎，支持变量替换、条件语句、循环语句等功能。</span><br><span class="line">变量替换: 您可以在模板中使用Ansible的变量来替换文本中的占位符。这使得您可以根据不同的环境或条件生成不同的配置文件。</span><br><span class="line">条件语句: 您可以在模板中使用条件语句来根据不同的条件生成不同的文本。这允许您根据需要灵活地调整生成的配置文件。</span><br><span class="line">循环语句: 您可以在模板中使用循环语句来对列表或字典中的元素进行迭代，从而生成重复的文本块。</span><br><span class="line">包含其他模板文件: 您可以在一个模板中包含其他模板文件，从而使模板更加模块化和易于管理。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Jinja2模板文件后缀为<code>.j2</code>，常用语法如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印变量</span></span><br><span class="line">&#123;&#123; index_title &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># for循环</span></span><br><span class="line">&#123;% <span class="keyword">for</span> key <span class="keyword">in</span> index_for_array %&#125;</span><br><span class="line">&lt;p&gt;show &#123;&#123; key &#125;&#125;&lt;/p&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># if判断</span></span><br><span class="line">&#123;% <span class="keyword">if</span> blog_href_show %&#125;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;&#123;&#123; blog_href &#125;&#125;&quot;</span>&gt;&#123;&#123; index_title &#125;&#125;&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using &#123;&#123; index_title &#125;&#125;.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>结合上面部署nginx的示例，我这里增加一个任务，就是替换nginx发布目录下的index.html，然后重启nginx，这里给出<code>index.html.j2</code></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123; index_title &#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">html</span> &#123; <span class="attribute">color</span>-scheme: light dark; &#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span> &#123; <span class="attribute">width</span>: <span class="number">35em</span>; <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-family</span>: Tahoma, Verdana, Arial, sans-serif; &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; blog_img &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% for key in index_for_array %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>show &#123;&#123; key &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;% if blog_href_show %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; blog_href &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; index_title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>Thank you for using &#123;&#123; index_title &#125;&#125;.<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>接着我们修改剧本yml</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装nginx并配置</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span>  <span class="comment"># 切换到root用户下执行</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">vars:</span> <span class="comment"># 定义变量</span></span><br><span class="line">    <span class="attr">nginx_version:</span> <span class="string">&quot;1.22.1&quot;</span></span><br><span class="line">    <span class="attr">work_dir:</span> <span class="string">&quot;/usr/local&quot;</span></span><br><span class="line">    <span class="attr">nginx_install_path:</span> <span class="string">&quot;/usr/local/nginx&quot;</span></span><br><span class="line">    <span class="attr">index_title:</span> <span class="string">&quot;hanqf&#x27;s blog&quot;</span></span><br><span class="line">    <span class="attr">index_for_array:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hello</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">world</span></span><br><span class="line">    <span class="attr">blog_href_show:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">blog_href:</span> <span class="string">&quot;https://blog.hanqunfeng.com&quot;</span></span><br><span class="line">    <span class="attr">blog_img:</span> <span class="string">&quot;me.png&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">判断是否存在nginx安装目录，不存在就安装nginx</span></span><br><span class="line">      <span class="attr">file:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>&quot;</span> <span class="comment"># 变量一定要双括号</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">      <span class="attr">notify:</span>  <span class="comment"># 执行通知任务，顺序为从下到上</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Nginx安装</span> <span class="comment"># 匹配任务name</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">添加nginx用户</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查系统是否已启动Nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">ps</span> <span class="string">aux</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">nginx</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-v</span> <span class="string">grep</span></span><br><span class="line">      <span class="attr">register:</span> <span class="string">nginx_status</span></span><br><span class="line">      <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查是否需要启动nginx</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">echo</span> <span class="string">&quot;start nginx&quot;</span></span><br><span class="line">      <span class="attr">when:</span> <span class="string">nginx_status.rc</span> <span class="type">!=</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">启动Nginx服务</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">上传图片</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">me.png</span> <span class="comment"># 与yml在同一目录</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>/html/me.png&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">发布index.html</span></span><br><span class="line">      <span class="attr">template:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">index.html.j2</span> <span class="comment"># 与yml在同一目录</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>/html/index.html&quot;</span></span><br><span class="line">        <span class="attr">force:</span> <span class="literal">true</span> <span class="comment"># 强制覆盖</span></span><br><span class="line">        <span class="attr">backup:</span> <span class="literal">true</span> <span class="comment"># 覆盖前备份</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">重启Nginx服务</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">handlers:</span>  <span class="comment"># handlers是一类特殊任务，当有notify时，会自动执行该任务</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">添加nginx用户</span></span><br><span class="line">      <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/sbin/nologin</span></span><br><span class="line">        <span class="attr">createhome:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">      <span class="attr">loop:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">gcc</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">zlib-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">pcre-devel</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">openssl-devel</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Nginx安装</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          wget https://nginx.org/download/nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class="line"><span class="string">          tar -zxvf nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class="line"><span class="string">          cd nginx-&#123;&#123; nginx_version &#125;&#125;</span></span><br><span class="line"><span class="string">          ./configure --prefix=&#123;&#123; nginx_install_path &#125;&#125; --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class="line"><span class="string">          make -j4</span></span><br><span class="line"><span class="string">          make -j4 install</span></span><br><span class="line"><span class="string"></span>        <span class="attr">chdir:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; work_dir &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动Nginx服务</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>/sbin/nginx&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">重启Nginx服务</span></span><br><span class="line">      <span class="attr">shell:</span></span><br><span class="line">        <span class="attr">cmd:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          pkill nginx</span></span><br><span class="line"><span class="string">          &quot;&#123;&#123; nginx_install_path &#125;&#125;/sbin/nginx&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>替换之后的效果</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>hanqf&#x27;s blog<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">html</span> &#123; <span class="attribute">color</span>-scheme: light dark; &#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span> &#123; <span class="attribute">width</span>: <span class="number">35em</span>; <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-family</span>: Tahoma, Verdana, Arial, sans-serif; &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;me.png&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>show hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>show world<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://blog.hanqunfeng.com&quot;</span>&gt;</span>hanqf&#x27;s blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>Thank you for using hanqf&#x27;s blog.<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>template模块</code>的常用参数说明 <code>ansible-doc  -s template</code></p></li></ul><table><thead><tr><th>参数</th><th>必需</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>src</td><td>是</td><td>无</td><td>模板文件的路径。</td></tr><tr><td>dest</td><td>是</td><td>无</td><td>目标文件的路径。</td></tr><tr><td>force</td><td>否</td><td>false</td><td>如果目标文件已经存在，是否强制覆盖。</td></tr><tr><td>backup</td><td>否</td><td>false</td><td>如果设置为true，则在覆盖目标文件之前创建备份。</td></tr><tr><td>unsafe_writes</td><td>否</td><td>false</td><td>如果设置为true，则会跳过文件的暂时性写入保护（如确保在写入文件之前不会更改其内容）。</td></tr><tr><td>newline_sequence</td><td>否</td><td>\n</td><td>用于生成文件时的换行符序列。</td></tr><tr><td>validate</td><td>否</td><td>无</td><td>要应用于生成文件的验证器脚本的路径。</td></tr><tr><td>mode</td><td>否</td><td>无</td><td>目标文件的权限模式。</td></tr><tr><td>owner</td><td>否</td><td>无</td><td>目标文件的所有者。</td></tr><tr><td>group</td><td>否</td><td>无</td><td>目标文件的所属组。</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>这里要注意<code>template模块</code>与<code>copy</code>模块的区别，前者在上传时会进行变量替换。</p></li></ul><h2 id="ansible-playbook-Role">ansible-playbook:Role</h2><ul class="lvl-0"><li class="lvl-2"><p>Ansible中的Role是一种组织和管理剧本的方法，它允许您将相关的任务、变量、文件和处理程序组合到一个可重用的单元中。Role使得您可以更轻松地管理和组织大型的Ansible项目，并促进了可维护性和复用性。</p></li><li class="lvl-2"><p>Role的特性</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">组织性：Role允许您将相关的任务和文件组织在一起，使得代码更易于理解和维护。每个Role通常都有一个特定的目的，例如安装特定的软件、配置服务或执行特定的系统管理任务。</span><br><span class="line"></span><br><span class="line">可重用性：Role可以被设计成可重用的组件，可以在不同的项目中多次使用。这样一来，您可以将常见的功能和配置封装到Role中，并在需要时轻松地调用它们，从而提高了代码的复用性和可移植性。</span><br><span class="line"></span><br><span class="line">结构化布局：Ansible推荐一种特定的目录结构来组织Role，包括tasks、handlers、templates、files、vars和defaults等目录。这种结构化布局有助于更清晰地分离任务、变量、文件和处理程序，并使Role更易于管理和维护。</span><br><span class="line"></span><br><span class="line">参数化：Role可以使用变量来接受外部输入，从而使其更加灵活和通用。通过参数化，您可以定制Role的行为，使其适用于不同的环境和需求。</span><br><span class="line"></span><br><span class="line">依赖关系：Role可以定义依赖关系，即一个Role可能依赖于另一个Role。这种依赖关系使得您可以构建复杂的系统配置，而不必重复编写相同的代码。</span><br><span class="line"></span><br><span class="line">可测试性：由于Role是可重用的组件，因此它们也是可测试的。您可以编写测试用例来验证Role的行为是否符合预期，并确保在修改代码时不会破坏现有功能。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><a href="https://github.com/ansible/ansible-examples">ansible-examples</a></p></li><li class="lvl-2"><p>创建role</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录下创建一个名称为nginx-install的role，实际上就是创建一个名称为nginx-install的目录结构</span></span><br><span class="line">ansible-galaxy init nginx-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在指定目录下创建role</span></span><br><span class="line">ansible-galaxy init --init-path /usr/local nginx-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx-install目录结构</span></span><br><span class="line">$ tree nginx-install/</span><br><span class="line">nginx-install/</span><br><span class="line">├── README.md</span><br><span class="line">├── defaults</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── meta</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">├── tests</span><br><span class="line">│   ├── inventory</span><br><span class="line">│   └── test.yml</span><br><span class="line">└── vars</span><br><span class="line">    └── main.yml</span><br><span class="line"></span><br><span class="line">8 directories, 8 files</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">files：存放由copy或script模块等调用的文件</span><br><span class="line">templates：template模块查找所需要模板文件的目录</span><br><span class="line">tasks：定义task、role的基本元素，至少应该包含一个名为main.yml的文件。其他文件需要在此文件中通过include进行包含</span><br><span class="line">handlers：至少应该包含一个名为main.yml的文件，其他文件需要在此文件中通过include进行包含</span><br><span class="line">vars：定义变量，至少应该包含一个名为main.yml的文件，其他文件需要在此文件中通过include进行包含</span><br><span class="line">meta：定义当前角色的特殊设定及其依赖关系，至少应该包含一个名为main.yml的文件，其他文件需在此文件中通过include进行包含</span><br><span class="line">default：设定默认变量时使用此目录中的main.yml文件，比vars的优先级低</span><br><span class="line">tests：定义测试用例，至少应该包含一个名为inventory的文件，其他文件需要在此文件中通过include进行包含</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>ansible查找role的路径，推荐放到<code>/etc/ansible/roles</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">pwd</span>)/roles</span><br><span class="line">/$(<span class="built_in">whoami</span>)/.ansible/roles</span><br><span class="line">/usr/share/ansible/roles</span><br><span class="line">/etc/ansible/roles</span><br><span class="line">$(<span class="built_in">pwd</span>)</span><br></pre></td></tr></table></figure><h3 id="我们将上面安装nginx那个剧本修改为role的方式">我们将上面安装nginx那个剧本修改为role的方式</h3><ul class="lvl-0"><li class="lvl-2"><p>nginx-install/tasks/main.yml</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># tasks file for nginx-install</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Check</span> <span class="string">if</span> <span class="string">running</span> <span class="string">as</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">fail:</span></span><br><span class="line">    <span class="attr">msg:</span> <span class="string">&quot;This role must be run as root user&quot;</span></span><br><span class="line">  <span class="attr">when:</span> <span class="string">ansible_facts[&#x27;user_id&#x27;]</span> <span class="type">!=</span> <span class="string">&#x27;root&#x27;</span> <span class="comment"># 因为我们的剧本是需要root用户运行，所以这里加一个判断，这里就用到了ansible_facts特殊变量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">判断是否存在nginx安装目录，不存在就安装nginx</span></span><br><span class="line">  <span class="attr">file:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">directory</span></span><br><span class="line">  <span class="attr">notify:</span>  <span class="comment"># 执行通知任务，顺序为从下到上</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Nginx安装</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">添加nginx用户</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查系统是否已启动Nginx</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">ps</span> <span class="string">aux</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">nginx</span> <span class="string">|</span> <span class="string">grep</span> <span class="string">-v</span> <span class="string">grep</span></span><br><span class="line">  <span class="attr">register:</span> <span class="string">nginx_status</span></span><br><span class="line">  <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查是否需要启动nginx</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">echo</span> <span class="string">&quot;start nginx&quot;</span></span><br><span class="line">  <span class="attr">when:</span> <span class="string">nginx_status.rc</span> <span class="type">!=</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">notify:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">启动Nginx服务</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">上传图片</span></span><br><span class="line">  <span class="attr">copy:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">me.png</span> <span class="comment"># 与yml在同一目录</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>/html/me.png&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">发布index.html</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">index.html.j2</span> <span class="comment"># 与yml在同一目录</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>/html/index.html&quot;</span></span><br><span class="line">    <span class="attr">force:</span> <span class="literal">true</span> <span class="comment"># 强制覆盖</span></span><br><span class="line">    <span class="attr">backup:</span> <span class="literal">true</span> <span class="comment"># 覆盖前备份</span></span><br><span class="line">  <span class="attr">notify:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">重启Nginx服务</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>nginx-install/handlers/main.yml</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># handlers file for nginx-install</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">添加nginx用户</span></span><br><span class="line">  <span class="attr">user:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">    <span class="attr">shell:</span> <span class="string">/sbin/nologin</span></span><br><span class="line">    <span class="attr">createhome:</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装Nginx依赖软件包</span></span><br><span class="line">  <span class="attr">yum:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">  <span class="attr">loop:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gcc</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zlib</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">zlib-devel</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pcre-devel</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">openssl</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">openssl-devel</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Nginx安装</span></span><br><span class="line">  <span class="attr">shell:</span></span><br><span class="line">    <span class="attr">cmd:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      wget https://nginx.org/download/nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class="line"><span class="string">      tar -zxvf nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class="line"><span class="string">      cd nginx-&#123;&#123; nginx_version &#125;&#125;</span></span><br><span class="line"><span class="string">      ./configure --prefix=&#123;&#123; nginx_install_path &#125;&#125; --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class="line"><span class="string">      make -j4</span></span><br><span class="line"><span class="string">      make -j4 install</span></span><br><span class="line"><span class="string"></span>    <span class="attr">chdir:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; work_dir &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动Nginx服务</span></span><br><span class="line">  <span class="attr">shell:</span></span><br><span class="line">    <span class="attr">cmd:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; nginx_install_path &#125;&#125;</span>/sbin/nginx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">重启Nginx服务</span></span><br><span class="line">  <span class="attr">shell:</span></span><br><span class="line">    <span class="attr">cmd:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      pkill nginx</span></span><br><span class="line"><span class="string">      &quot;&#123;&#123; nginx_install_path &#125;&#125;/sbin/nginx&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>nginx-install/vars/main.yml</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># vars file for nginx-install</span></span><br><span class="line"><span class="attr">nginx_version:</span> <span class="string">&quot;1.22.1&quot;</span></span><br><span class="line"><span class="attr">work_dir:</span> <span class="string">&quot;/usr/local&quot;</span></span><br><span class="line"><span class="attr">nginx_install_path:</span> <span class="string">&quot;/usr/local/nginx&quot;</span></span><br><span class="line"><span class="attr">index_title:</span> <span class="string">&quot;hanqf&#x27;s blog&quot;</span></span><br><span class="line"><span class="attr">index_for_array:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hello</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">world</span></span><br><span class="line"><span class="attr">blog_href_show:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">blog_href:</span> <span class="string">&quot;https://blog.hanqunfeng.com&quot;</span></span><br><span class="line"><span class="attr">blog_img:</span> <span class="string">&quot;me.png&quot;</span></span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>小贴士</strong></em></p><ul class="lvl-1"><li class="lvl-2">上面介绍的<code>tasks</code>、<code>handlers</code>，其目录中都含有一个main.yml文件，这个文件是必须存在的</li><li class="lvl-2">但是如果配置的内容比较多，都写在main.yml文件中，那么这个文件就显得有点臃肿，所以可以将这些内容拆分成多个文件，然后在main.yml文件中通过<code>include</code>进行包含</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include:</span> <span class="string">other1.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include:</span> <span class="string">other2.yml</span></span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2"><code>tasks</code>或者<code>handlers中</code>还可以使用<code>include_tasks</code>进行包含</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include_tasks:</span> <span class="string">other1.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include_tasks:</span> <span class="string">other2.yml</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include_tasks:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">loop:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">other1.yml</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">other2.yml</span></span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2"><p><code>vars</code>里也可以定义多个yml文件存储变量，然后在tasks中通过<code>include_vars</code>进行包含，注意，必须放在task的yml文件中</p></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此时不需要加上vars路径，会自动从vars目录下查找</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include_vars:</span> <span class="string">&quot;v-other1.yml&quot;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include_vars:</span> <span class="string">&quot;v-other2.yml&quot;</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">include_vars:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class="line">  <span class="attr">loop:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">v-other1.yml</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">v-other2.yml</span></span><br></pre></td></tr></table></figure></div><ul class="lvl-0"><li class="lvl-2"><p>将模板文件和图片文本保存到对应的路径</p></li></ul><blockquote><p>nginx-install/templates/index.html.j2<br>nginx-install/files/me.png</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>执行<br><em><strong>假设我们将创建的角色安装到了<code>/etc/ansible/roles</code>下</strong></em></p></li></ul><blockquote><p>创建启动剧本<code>nginx-install-start.yml</code>，我们也可以修改<code>tests/test.yml</code></p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装nginx并配置</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">become:</span> <span class="literal">yes</span>  <span class="comment"># 切换到root用户下执行</span></span><br><span class="line">  <span class="attr">roles:</span> <span class="comment"># 调用role</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">nginx-install</span> <span class="comment"># role名称</span></span><br></pre></td></tr></table></figure><blockquote><p>执行role</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook nginx-install-start.yml</span><br></pre></td></tr></table></figure><h2 id="ansible-galaxy">ansible-galaxy</h2><h3 id="什么是ansible-galaxy">什么是ansible-galaxy</h3><ul class="lvl-0"><li class="lvl-2"><p>用于从<a href="https://galaxy.ansible.com">ansible-galaxy官网</a>上查找，下载<code>role</code>和<code>collection</code>的工具，如何下载和使用网站上都有说明。</p></li><li class="lvl-2"><p><a href="https://ansible.readthedocs.io/projects/galaxy-ng/en/latest/community/userguide/">ansible-galaxy用户指南</a></p></li><li class="lvl-2"><p>我们也可以将自己创建好的<code>role</code>发布到<code>ansible-galaxy</code>上，可以参考 <a href="/2024/03/26/ansible-role-publish/" title="Ansible Role Publish To Galaxy">Ansible Role Publish To Galaxy</a></p></li></ul><h3 id="role">role</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索role</span></span><br><span class="line">ansible-galaxy search mysql</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">ansible-galaxy role search mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已经安装的role</span></span><br><span class="line">ansible-galaxy list</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">ansible-galaxy role list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装role，默认安装到 ~/.ansible/roles 下</span></span><br><span class="line">ansible-galaxy role install shaneholloman.redis</span><br><span class="line"><span class="comment"># 安装到指定路径</span></span><br><span class="line">ansible-galaxy role install &lt;role-name&gt; -p &lt;path&gt;</span><br></pre></td></tr></table></figure><h3 id="collection">collection</h3><ul class="lvl-0"><li class="lvl-2"><p>ansible-galaxy同时支持下载 collection</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看已经安装的collection</span></span><br><span class="line">ansible-galaxy collection list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装collection，，默认安装到 ~/.ansible/collections/ansible_collections 下</span></span><br><span class="line">ansible-galaxy collection install saiello.kafka</span><br><span class="line"><span class="comment"># 安装到指定路径</span></span><br><span class="line">ansible-galaxy collection install &lt;collection-name&gt; -p &lt;path&gt;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Ansible Collection 是 Ansible 社区为了更好地管理和组织 Ansible 角色、模块、插件等内容而引入的概念。它可以被视为一种打包机制，用于将相关的 Ansible 内容打包成单独的单元，使得其更易于分享、安装和维护。</p></li><li class="lvl-2"><p>具体来说，Ansible Collection 具有以下作用：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">组织和管理角色、模块和插件：通过 Collection，可以将相关的角色、模块和插件打包在一起，形成逻辑上的单元，提高了内容的组织性和可管理性。</span><br><span class="line"></span><br><span class="line">易于分享和分发：Ansible Collection 可以被轻松地分享和分发给其他用户。开发人员可以将自己的角色、模块打包成 Collection，并将其发布到 Ansible Galaxy 或其他集中式的仓库中，供其他用户使用。</span><br><span class="line"></span><br><span class="line">版本控制和更新：与角色相比，Collection 更容易进行版本控制和更新。开发人员可以为 Collection 指定版本，并在更新内容时发布新的版本，使得用户可以选择使用特定版本或者升级到最新版本。</span><br><span class="line"></span><br><span class="line">依赖管理：Collection 支持依赖管理，可以在 Collection 中指定依赖关系，确保相关的角色、模块和插件能够正常工作。</span><br><span class="line"></span><br><span class="line">提供文档和示例：开发人员可以将文档和示例代码与 Collection 打包在一起，使得用户更容易理解和使用其中的内容。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>总的来说，Ansible Collection 提供了一种更高级别的组织和管理方式，使得 Ansible 内容更易于分享、使用和维护，从而提高了 Ansible 的整体生态系统的健壮性和可用性。</p></li></ul><div class="tips"><p><em><strong>小贴士</strong></em></p><ul class="lvl-1"><li class="lvl-2">前面的剧本中我们多次使用到了<code>become</code>切换用户到root用户，其实在<code>ansible.cfg</code>中我们可以配置<code>become_user</code>，这样我们就可以不用每次都切换用户了</li><li class="lvl-2">但这里有个需要注意的点，就是因为 <code>become</code> 会以一个全新的环境执行任务，所以其不会包含原用户的环境变量。可以理解为其是通过<code>sudo su</code>切换到root，而非<code>sudo -i</code>。</li></ul></div><h2 id="后记">后记</h2><p>关于ansible的知识点还有很多没有研究到，后面会慢慢补吧……</p><ul class="lvl-0"><li class="lvl-2"><p>关于将Ansible Role发布到Galaxy的详细介绍可以参看 <a href="/2024/03/26/ansible-role-publish/" title="Ansible Role Publish To Galaxy">Ansible Role Publish To Galaxy</a></p></li><li class="lvl-2"><p>关于将Ansible Collection发布到Galaxy的详细介绍可以参看 <a href="/2024/03/27/ansible-collection-publish/" title="Ansible Collection Publish To Galaxy">Ansible Collection Publish To Galaxy</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍Ansible的安装和使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于CentOS8。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB本地测试环境搭建工具--mtools之mlaunch使用方法</title>
    <link href="https://blog.hanqunfeng.com/2024/03/14/mongodb7-mtools/"/>
    <id>https://blog.hanqunfeng.com/2024/03/14/mongodb7-mtools/</id>
    <published>2024-03-14T13:30:05.000Z</published>
    <updated>2024-04-03T03:45:37.293Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍mtools工具的使用</p></li><li class="lvl-2"><p>mtools<a href="https://rueckstiess.github.io/mtools/">官方文档</a>，<a href="https://github.com/rueckstiess/mtools">mtools-github</a></p></li><li class="lvl-2"><p>mtools提供的<code>mlaunch</code>是一个基于python的mongo环境管理工具，可以方便的启动、停止、重启、kill mongo进程，还可以查看mongo进程的运行状态，可以方便初学者快速搭建本地mongo环境，但是其只能在一台机器上运行。</p></li></ul><span id="more"></span><h2 id="mtools安装">mtools安装</h2><ul class="lvl-0"><li class="lvl-2"><p>mtools基于python3，支持mongo4+以上版本，但是mtools并且不会为我们安装mongodb，所以需要我们自己先在系统中安装好mongodb，mongodb的安装可以参考<a href="/2024/03/01/mongodb7/" title="MongoDB7.0的安装">MongoDB7.0的安装</a></p></li><li class="lvl-2"><p>按照官网的说法，mtools支持的Python版本为 3.7|3.8|3.9|3.10，其他版本的Python目前不受支持或测试，但作者的python版本为3.11.3，并没有出现兼容性问题。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ python3 --version</span><br><span class="line">Python 3.11.3</span><br><span class="line">➜  ~ pip3 -V</span><br><span class="line">pip 24.0 from /usr/local/lib/python3.11/site-packages/pip (python 3.11)</span><br><span class="line">➜  ~ pip3 list</span><br><span class="line">Package           Version</span><br><span class="line">----------------- ------------</span><br><span class="line">certifi           2023.11.17</span><br><span class="line">cffi              1.16.0</span><br><span class="line">cryptography      41.0.7</span><br><span class="line">docutils          0.20.1</span><br><span class="line">idna              3.6</span><br><span class="line">Jinja2            3.1.2</span><br><span class="line">MarkupSafe        2.1.3</span><br><span class="line">packaging         23.2</span><br><span class="line">pip               24.0</span><br><span class="line">pycparser         2.21</span><br><span class="line">Pygments          2.17.2</span><br><span class="line">pyparsing         3.1.1</span><br><span class="line">pytz              2023.3.post1</span><br><span class="line">requests          2.31.0</span><br><span class="line">setuptools        68.2.2</span><br><span class="line">six               1.16.0</span><br><span class="line">tabulate          0.0.0</span><br><span class="line">typing_extensions 4.9.0</span><br><span class="line">urllib3           2.1.0</span><br><span class="line">wheel             0.41.2</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>安装mtools依赖</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install python-dateutil psutil pymongo</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>安装mtools</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install mtools</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>安装mtools会同时为我们安装mtools的所有工具，如果只希望安装mlaunch，可以使用下面的命令<br><em><strong>mtools提供的其它工具，如<code>mlogfilter</code>,<code>mloginfo</code>,<code>mplotqueries</code>等并不支持<code>logv2</code>格式的日志，<code>logv2</code>是<code>mongodb4.4+</code>以后的加入的，从<code>mongodb5.0</code>以后<code>logv2</code>为默认的日志格式，所以这里不做介绍。</strong></em></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install <span class="string">&#x27;mtools[mlaunch]&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="mlaunch">mlaunch</h2><ul class="lvl-0"><li class="lvl-2"><p>查看mlaunch版本</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ <span class="built_in">which</span> mlaunch</span><br><span class="line">/usr/local/bin/mlaunch</span><br><span class="line">➜  ~ mlaunch --version</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">mtools version 1.7.2 || Python 3.11.6 (main, Oct 3 2023, 02:51:45) [Clang 14.0.3 (clang-1403.0.22.14.1)]</span><br></pre></td></tr></table></figure><h3 id="init-构建环境">init :构建环境</h3><p><em><strong>此命令初始化并启动MongoDB独立实例、副本集或分片集群，它只需要为每个环境调用一次。</strong></em></p><h4 id="构建独立实例">构建独立实例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 快速构建一个单节点，数据目录在当前路径下的data目录下</span></span><br><span class="line">$ mlaunch init --single --auth</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">Generating keyfile: /mongodb/mtools/single/data/keyfile</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27017</span><br><span class="line">Username <span class="string">&quot;user&quot;</span>, password <span class="string">&quot;password&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line"><span class="comment"># --single ：启动单节点</span></span><br><span class="line"><span class="comment"># --auth ：开启默认认证，默认用户名/密码:user/password，并授予如下角色</span></span><br><span class="line">  <span class="comment"># &#123; role: &#x27;userAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;,</span></span><br><span class="line">  <span class="comment"># &#123; role: &#x27;readWriteAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;,</span></span><br><span class="line">  <span class="comment"># &#123; role: &#x27;dbAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;,</span></span><br><span class="line">  <span class="comment"># &#123; role: &#x27;clusterAdmin&#x27;, db: &#x27;admin&#x27; &#125;</span></span><br><span class="line"><span class="comment"># --dir ：指定数据目录，默认为当前路径下的data目录</span></span><br><span class="line"><span class="comment"># --bind_ip：指定监听ip，默认为127.0.0.1</span></span><br><span class="line"><span class="comment"># --port：指定监听端口，默认为27017</span></span><br></pre></td></tr></table></figure><h4 id="构建复制集">构建复制集</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 快速构建一个3节点的复制集</span></span><br><span class="line">$ mlaunch init --replicaset --nodes 3 --auth --port 27040</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">Generating keyfile: /mongodb/mtools/replicaset/data/keyfile</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27040</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27041</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27042</span><br><span class="line">replica <span class="built_in">set</span> <span class="string">&#x27;replset&#x27;</span> initialized.</span><br><span class="line">waiting <span class="keyword">for</span> primary to add a user.</span><br><span class="line">Username <span class="string">&quot;user&quot;</span>, password <span class="string">&quot;password&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --replicaset ：创建副本集，默认3个节点</span></span><br><span class="line"><span class="comment"># --nodes 3 ：指定副本集节点个数，默认3个节点</span></span><br><span class="line"><span class="comment"># --auth : 开启默认认证，同单节点</span></span><br><span class="line"><span class="comment"># --port 27040 : 指定复制集的起始端口，默认从27017开始，依次递增</span></span><br></pre></td></tr></table></figure><h4 id="构建分片集群">构建分片集群</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 快速构建一个2个分片的分片集群，每个分片是一个包含3每个节点的复制集，包含一个3个节点配置复制集，并且启动3个mongos路由</span></span><br><span class="line">$ mlaunch init --sharded 2 --replicaset --node 3 --config 3 --csrs --mongos 3 --auth --port 27050</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">Generating keyfile: /mongodb/mtools/sharded/data/keyfile</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27053</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27054</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27055</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27056</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27057</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27058</span><br><span class="line">launching: config server on port 27059</span><br><span class="line">launching: config server on port 27060</span><br><span class="line">launching: config server on port 27061</span><br><span class="line">replica <span class="built_in">set</span> <span class="string">&#x27;configRepl&#x27;</span> initialized.</span><br><span class="line">replica <span class="built_in">set</span> <span class="string">&#x27;shard01&#x27;</span> initialized.</span><br><span class="line">replica <span class="built_in">set</span> <span class="string">&#x27;shard02&#x27;</span> initialized.</span><br><span class="line">launching: mongos on port 27050</span><br><span class="line">launching: mongos on port 27051</span><br><span class="line">launching: mongos on port 27052</span><br><span class="line">adding shards. can take up to 30 seconds...</span><br><span class="line">sent signal 15 to 12 processes.</span><br><span class="line">launching: config server on port 27059</span><br><span class="line">launching: config server on port 27060</span><br><span class="line">launching: config server on port 27061</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27053</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27054</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27055</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27056</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27057</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27058</span><br><span class="line">launching: mongos on port 27050</span><br><span class="line">launching: mongos on port 27051</span><br><span class="line">launching: mongos on port 27052</span><br><span class="line">Username <span class="string">&quot;user&quot;</span>, password <span class="string">&quot;password&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --sharded 2：启用分片集群模式，分片数为2。</span></span><br><span class="line"><span class="comment"># --replicaset : 创建副本集，默认3个节点，可以通过 --nodes 指定复制集节点个数</span></span><br><span class="line"><span class="comment"># --nodes 3：采用3节点的复制集架构，默认就是3个节点。</span></span><br><span class="line"><span class="comment"># --config 3：配置服务器采用3节点的复制集架构模式</span></span><br><span class="line"><span class="comment"># --csrs：指Config Server as a Replica Set，这个也是默认配置</span></span><br><span class="line"><span class="comment"># --mongos 3：启动3个mongos实例进程。</span></span><br><span class="line"><span class="comment"># --auth : 开启默认认证，同单节点</span></span><br><span class="line"><span class="comment"># --port 27050：集群将以27050作为起始端口，集群中的各个实例基于该端口向上递增。</span></span><br></pre></td></tr></table></figure><blockquote><p>以下命令运行时必须指定数据目录，默认为当前路径下的data目录，可以使用<code>--dir</code>指定数据目录，因为需要通过<code>./data/.mlaunch_startup</code>来获取mongo的构建信息。以分片集群举例：</p></blockquote><h3 id="list-查看启动信息">list: 查看启动信息</h3><ul class="lvl-0"><li class="lvl-2"><p>查看集群状态</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示mongo进程的列表</span></span><br><span class="line">$ mlaunch list</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line"></span><br><span class="line">PROCESS          PORT     STATUS     PID</span><br><span class="line"></span><br><span class="line">mongos           27050    running    61988</span><br><span class="line">mongos           27051    running    61991</span><br><span class="line">mongos           27052    running    61999</span><br><span class="line"></span><br><span class="line">config server    27059    running    61903</span><br><span class="line">config server    27060    running    61911</span><br><span class="line">config server    27061    running    61914</span><br><span class="line"></span><br><span class="line">shard01</span><br><span class="line">    mongod       27053    running    61922</span><br><span class="line">    mongod       27054    running    61947</span><br><span class="line">    mongod       27055    running    61955</span><br><span class="line"></span><br><span class="line">shard02</span><br><span class="line">    mongod       27056    running    61964</span><br><span class="line">    mongod       27057    running    61972</span><br><span class="line">    mongod       27058    running    61980</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看启动命令</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ mlaunch list --startup</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line"></span><br><span class="line">PROCESS          PORT     STATUS     PID      STARTUP COMMAND</span><br><span class="line"></span><br><span class="line">mongos           27050    running    61988    mongos --logpath /mongodb/mtools/sharded/data/mongos/mongos_27050.<span class="built_in">log</span> --port 27050 --configdb configRepl/localhost:27059,localhost:27060,localhost:27061 --keyFile /mongodb/mtools/sharded/data/keyfile --fork</span><br><span class="line">mongos           27051    running    61991    mongos --logpath /mongodb/mtools/sharded/data/mongos/mongos_27051.<span class="built_in">log</span> --port 27051 --configdb configRepl/localhost:27059,localhost:27060,localhost:27061 --keyFile /mongodb/mtools/sharded/data/keyfile --fork</span><br><span class="line">mongos           27052    running    61999    mongos --logpath /mongodb/mtools/sharded/data/mongos/mongos_27052.<span class="built_in">log</span> --port 27052 --configdb configRepl/localhost:27059,localhost:27060,localhost:27061 --keyFile /mongodb/mtools/sharded/data/keyfile --fork</span><br><span class="line"></span><br><span class="line">config server    27059    running    61903    mongod --replSet configRepl --dbpath /mongodb/mtools/sharded/data/configRepl/rs1/db --logpath /mongodb/mtools/sharded/data/configRepl/rs1/mongod.log --port 27059 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --configsvr --wiredTigerCacheSizeGB 1</span><br><span class="line">config server    27060    running    61911    mongod --replSet configRepl --dbpath /mongodb/mtools/sharded/data/configRepl/rs2/db --logpath /mongodb/mtools/sharded/data/configRepl/rs2/mongod.log --port 27060 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --configsvr --wiredTigerCacheSizeGB 1</span><br><span class="line">config server    27061    running    61914    mongod --replSet configRepl --dbpath /mongodb/mtools/sharded/data/configRepl/rs3/db --logpath /mongodb/mtools/sharded/data/configRepl/rs3/mongod.log --port 27061 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --configsvr --wiredTigerCacheSizeGB 1</span><br><span class="line"></span><br><span class="line">shard01</span><br><span class="line">    mongod       27053    running    61922    mongod --replSet shard01 --dbpath /mongodb/mtools/sharded/data/shard01/rs1/db --logpath /mongodb/mtools/sharded/data/shard01/rs1/mongod.log --port 27053 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class="line">    mongod       27054    running    61947    mongod --replSet shard01 --dbpath /mongodb/mtools/sharded/data/shard01/rs2/db --logpath /mongodb/mtools/sharded/data/shard01/rs2/mongod.log --port 27054 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class="line">    mongod       27055    running    61955    mongod --replSet shard01 --dbpath /mongodb/mtools/sharded/data/shard01/rs3/db --logpath /mongodb/mtools/sharded/data/shard01/rs3/mongod.log --port 27055 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class="line"></span><br><span class="line">shard02</span><br><span class="line">    mongod       27056    running    61964    mongod --replSet shard02 --dbpath /mongodb/mtools/sharded/data/shard02/rs1/db --logpath /mongodb/mtools/sharded/data/shard02/rs1/mongod.log --port 27056 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class="line">    mongod       27057    running    61972    mongod --replSet shard02 --dbpath /mongodb/mtools/sharded/data/shard02/rs2/db --logpath /mongodb/mtools/sharded/data/shard02/rs2/mongod.log --port 27057 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class="line">    mongod       27058    running    61980    mongod --replSet shard02 --dbpath /mongodb/mtools/sharded/data/shard02/rs3/db --logpath /mongodb/mtools/sharded/data/shard02/rs3/mongod.log --port 27058 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    auth: <span class="string">&quot;user:password&quot;</span></span><br></pre></td></tr></table></figure><h3 id="stop-关闭-mongo进程">stop: 关闭 mongo进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭全部mongo进程，注意：如果开启了认证，stop会使用默认的用户名和密码进行认证（user/password），否则需要使用 kill</span></span><br><span class="line">$ mlaunch stop</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">sent signal 15 to 11 processes.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只关闭mongos进程，这里mongos是tag</span></span><br><span class="line">$ mlaunch stop mongos</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">sent signal 15 to 2 processes.</span><br><span class="line"><span class="comment"># 查看当前mongo进程状态</span></span><br><span class="line">$ mlaunch list</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line"></span><br><span class="line">PROCESS          PORT     STATUS     PID</span><br><span class="line"></span><br><span class="line">mongos           27050    down       -</span><br><span class="line">mongos           27051    down       -</span><br><span class="line"></span><br><span class="line">config server    27058    running    23284</span><br><span class="line">config server    27059    running    23287</span><br><span class="line">config server    27060    running    23295</span><br><span class="line"></span><br><span class="line">shard01</span><br><span class="line">    mongod       27052    running    23303</span><br><span class="line">    mongod       27053    running    23326</span><br><span class="line">    mongod       27054    running    23334</span><br><span class="line"></span><br><span class="line">shard02</span><br><span class="line">    mongod       27055    running    23342</span><br><span class="line">    mongod       27056    running    23345</span><br><span class="line">    mongod       27057    running    23353</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auth: <span class="string">&quot;user:password&quot;</span></span><br></pre></td></tr></table></figure><h3 id="start-启动-mongo进程">start: 启动 mongo进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动全部mongo进程</span></span><br><span class="line">$ mlaunch start</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">launching: config server on port 27058</span><br><span class="line">launching: config server on port 27059</span><br><span class="line">launching: config server on port 27060</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27052</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27053</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27054</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27055</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27056</span><br><span class="line">launching: <span class="string">&quot;mongod&quot;</span> on port 27057</span><br><span class="line">launching: mongos on port 27050</span><br><span class="line">launching: mongos on port 27051</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只启动当前关闭的mongo进程</span></span><br><span class="line">$ mlaunch start down</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">launching: mongos on port 27050</span><br><span class="line">launching: mongos on port 27051</span><br></pre></td></tr></table></figure><h3 id="restart-重启-mongo进程">restart: 重启 mongo进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重启，不推荐使用，除了单实例，复制集和分片集群都会出问题</span></span><br><span class="line">$ mlaunch restart</span><br><span class="line"><span class="comment"># 以下是分片集群重启后的报错信息，猜测原因是并没有完全关闭mongo分片集群中的所有节点时就启动了</span></span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">sent signal 15 to 11 processes.</span><br><span class="line">b<span class="string">&#x27;about to fork child process, waiting until server is ready for connections.\nforked process: 20202\nERROR: child process failed, exited with 1\nTo see additional information in this output, start without the &quot;--fork&quot; option.\n&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="kill-杀掉-mongo进程">kill: 杀掉 mongo进程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 杀掉全部mongo进程</span></span><br><span class="line">$ mlaunch <span class="built_in">kill</span></span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">sent signal 15 to 11 processes.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀掉某个端口的mongo进程</span></span><br><span class="line">$ mlaunch <span class="built_in">kill</span> 27050</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line">sent signal 15 to 1 process.</span><br><span class="line"><span class="comment"># 可以看到27050端口的mongo进程的状态为down</span></span><br><span class="line">$ mlaunch list</span><br><span class="line">Detected mongod version: 7.0.6</span><br><span class="line"></span><br><span class="line">PROCESS          PORT     STATUS     PID</span><br><span class="line"></span><br><span class="line">mongos           27050    down       -</span><br><span class="line">mongos           27051    running    23369</span><br><span class="line"></span><br><span class="line">config server    27058    running    23284</span><br><span class="line">config server    27059    running    23287</span><br><span class="line">config server    27060    running    23295</span><br><span class="line"></span><br><span class="line">shard01</span><br><span class="line">    mongod       27052    running    23303</span><br><span class="line">    mongod       27053    running    23326</span><br><span class="line">    mongod       27054    running    23334</span><br><span class="line"></span><br><span class="line">shard02</span><br><span class="line">    mongod       27055    running    23342</span><br><span class="line">    mongod       27056    running    23345</span><br><span class="line">    mongod       27057    running    23353</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auth: <span class="string">&quot;user:password&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭全部mongos进程</span></span><br><span class="line">$ mlaunch <span class="built_in">kill</span> mongos</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>支持的tags</strong></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">all：环境中的所有节点。</span><br><span class="line">running：所有当前运行的节点。</span><br><span class="line">down：目前所有关闭的节点。</span><br><span class="line">mongos：所有mongos进程都带有此标签。</span><br><span class="line">mongod：所有mongod进程（包括仲裁者和配置服务器）。</span><br><span class="line">config：所有配置服务器</span><br><span class="line">&lt;shard name&gt;：对于分片环境，分片的每个成员都带有分片名称作为标签，例如“shard-a”。</span><br><span class="line">&lt;port number&gt;：每个节点都带有其端口号作为标签。</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍mtools工具的使用&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;mtools&lt;a href=&quot;https://rueckstiess.github.io/mtools/&quot;&gt;官方文档&lt;/a&gt;，&lt;a href=&quot;https://github.com/rueckstiess/mtools&quot;&gt;mtools-github&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;mtools提供的&lt;code&gt;mlaunch&lt;/code&gt;是一个基于python的mongo环境管理工具，可以方便的启动、停止、重启、kill mongo进程，还可以查看mongo进程的运行状态，可以方便初学者快速搭建本地mongo环境，但是其只能在一台机器上运行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mac" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mac/"/>
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mac/mongodb/"/>
    
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令--常用设置</title>
    <link href="https://blog.hanqunfeng.com/2024/03/13/linux-command14-setting/"/>
    <id>https://blog.hanqunfeng.com/2024/03/13/linux-command14-setting/</id>
    <published>2024-03-13T13:30:05.000Z</published>
    <updated>2024-04-03T03:45:37.261Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>安装完linux后，一些常用的设置可以方便我们今后的使用，比如关闭SELinux，增加文件描述符限制，等等。</p></li><li class="lvl-2"><p>本文基于CentOS8。</p></li></ul><span id="more"></span><h2 id="关闭SELinux">关闭SELinux</h2><ul class="lvl-0"><li class="lvl-2"><p>SELinux（Security-Enhanced Linux）是一种基于安全策略的 Linux 安全模块，其主要目的是提供对各种应用程序和进程的更细粒度的访问控制。</p></li><li class="lvl-2"><p>SELinux 的安全方案主要基于以下两个策略：</p><ul class="lvl-2"><li class="lvl-6">强制访问控制（Mandatory Access Control, MAC）：MAC 策略不允许用户在他们拥有的文件和进程上设置安全访问控制，而是根据一个由系统管理员和/或操作系统开发商定义的集中安全策略进行访问控制。</li><li class="lvl-6">类型强制访问控制（Type Enforcement）：通过将文件、目录和其他资源分配到类型，并定义它们之间的交互，限制进程在资源之间的信息流。</li></ul></li><li class="lvl-2"><p>在实际工作中，SELinux 可以用来阻止或限制恶意或损坏的应用程序对系统造成的损害。当配置正确时，SELinux 提供的强大安全机制可以显著提高系统的安全性。</p></li><li class="lvl-2"><p>但是，SELinux 也可能会带来一些问题，例如，它可能会导致某些应用程序无法正常工作，或者它可能会在某些情况下导致性能下降。因此，许多 Linux 发行版默认会关闭 SELinux，以避免这些问题。</p></li><li class="lvl-2"><p>通过以下命令，可以查看当前的 SELinux 状态：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果当前状态为 Enforcing，表示 SELinux 已启用，否则为 Disabled。</span></span><br><span class="line">$ sestatus</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>临时关闭 SELinux，可以使用以下命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ setenforce 0</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>永久关闭 SELinux，可以使用以下命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/selinux/config</span><br><span class="line">    <span class="comment"># 在文件中找到以下行，将值改为 disabled。</span></span><br><span class="line">    SELINUX=disabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启系统，SELinux 就会关闭。</span></span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>临时开启 SELinux，可以使用以下命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ setenforce 1</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>永久开启 SELinux，可以使用以下命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/selinux/config</span><br><span class="line">    <span class="comment"># 在文件中找到以下行，将值改为 enforcing。</span></span><br><span class="line">    SELINUX=enforcing</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启系统，SELinux 就会开启。</span></span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure><h2 id="增加文件描述符限制">增加文件描述符限制</h2><ul class="lvl-0"><li class="lvl-2"><p>每个运行中的进程都有一个限制，即它可以同时打开的最大文件描述符数量。这个限制对于避免过度使用系统资源非常重要。然而，在某些情况下，你可能需要增加这个限制来满足应用的需求。</p></li><li class="lvl-2"><p>Linux 服务器默认的文件描述符限制为 1024，如果需要使用更多的文件描述符，可以使用以下命令来增加限制：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 临时设置，即刻生效</span></span><br><span class="line"><span class="built_in">ulimit</span> -n 65535</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久设置</span></span><br><span class="line">$ vi /etc/security/limits.conf</span><br><span class="line">    <span class="comment"># 在文件中找到以下行，将值改为 65535</span></span><br><span class="line">    <span class="comment"># 如果不存在对应的配置则在文件末尾添加即可</span></span><br><span class="line">    <span class="comment"># root用户限制</span></span><br><span class="line">    root soft nofile 65535</span><br><span class="line">    root hard nofile 65535</span><br><span class="line">    <span class="comment"># 其它用户限制</span></span><br><span class="line">    * soft nofile 65535</span><br><span class="line">    * hard nofile 65535</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启系统，文件描述符限制就变了。</span></span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>这样的设置既为 root 用户设置了文件描述符（句柄）的软硬限制数量为65535，也为系统中所有其他用户设置了同样的限制。所谓“软限制”是指用户可以达到但不能超过的限制，而“硬限制”是指系统设置的绝对限制。即软限制不能大于硬限制的值。</p></li><li class="lvl-2"><p>通过以下命令，可以查看当前的文件描述符限制：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看的是当前 bash 的“软”文件描述符限制</span></span><br><span class="line">$ <span class="built_in">ulimit</span> -n</span><br><span class="line"><span class="comment"># 查看软限制，在大多数情况下，ulimit -n 和 ulimit -Sn 是相同的</span></span><br><span class="line">$ <span class="built_in">ulimit</span> -Sn</span><br><span class="line"><span class="comment"># 查看硬限制</span></span><br><span class="line">$ <span class="built_in">ulimit</span> -Hn</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;安装完linux后，一些常用的设置可以方便我们今后的使用，比如关闭SELinux，增加文件描述符限制，等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于CentOS8。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB7.0--索引</title>
    <link href="https://blog.hanqunfeng.com/2024/03/11/mongodb7-index/"/>
    <id>https://blog.hanqunfeng.com/2024/03/11/mongodb7-index/</id>
    <published>2024-03-11T13:30:05.000Z</published>
    <updated>2024-04-03T03:45:37.289Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍如何使用MongoDB7.0的索引</p></li><li class="lvl-2"><p>MongoDB版本7.0.6</p></li><li class="lvl-2"><p><a href="https://www.mongodb.com/docs/v7.0/indexes/">MongoDB Indexes</a></p></li></ul><span id="more"></span><h2 id="MongoDB索引简介">MongoDB索引简介</h2><ul class="lvl-0"><li class="lvl-2"><p>索引支持在MongoDB中高效执行查询。如果没有索引，MongoDB必须扫描集合中的每个文档才能返回查询结果。如果查询存在适当的索引，MongoDB使用该索引来限制它必须扫描的文档数量。</p></li><li class="lvl-2"><p>虽然索引可以提高查询性能，但添加索引对写入操作的性能有负面影响。对于写入读数比较高的集合，索引很昂贵，因为每个插入还必须更新任何索引。</p></li><li class="lvl-2"><p>所以合理的创建索引，即可以提升查询性能，又不会对写操作造成太大的影响。</p></li><li class="lvl-2"><p>MongoDB采用 <code>B-Tree (准确的说是 B+Tree)</code> 做索引，索引创建在colletions上。</p></li></ul><h2 id="创建索引语法">创建索引语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.collection.createIndex( keys, options )</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Key 值为你要创建的索引字段，1 按升序创建索引， -1 按降序创建索引</p></li><li class="lvl-2"><p>options 选项</p></li></ul><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>background</td><td>Boolean</td><td>建索引过程是否阻塞其它数据库操作，设置为 true 则以后台方式创建索引</td></tr><tr><td>unique</td><td>Boolean</td><td>建立的索引是否唯一，设置为 true 则创建唯一索引</td></tr><tr><td>name</td><td>string</td><td>索引的名称</td></tr><tr><td>dropDups</td><td>Boolean</td><td>3.0+版本已废弃，在建立唯一索引时是否删除重复记录</td></tr><tr><td>sparse</td><td>Boolean</td><td>对文档中不存在的字段数据是否启用索引</td></tr><tr><td>expireAfterSeconds</td><td>integer</td><td>指定一个以秒为单位的数值，完成 TTL 设定，设定集合的生存时间</td></tr><tr><td>v</td><td>index version</td><td>索引的版本号</td></tr><tr><td>weights</td><td>document</td><td>索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重</td></tr><tr><td>default_language</td><td>string</td><td>对于文本索引，该参数决定了停用词及词干和词器的规则的列表</td></tr><tr><td>language_override</td><td>string</td><td>对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的 language</td></tr></tbody></table><h2 id="索引类型">索引类型</h2><ul class="lvl-0"><li class="lvl-2"><p>与大多数数据库一样，MongoDB支持各种丰富的索引类型，包括单键索引、复合索引，唯一索引等一些常用的结构。由于采用了灵活可变的文档类型，因此它也同样支持对嵌套字段、数组进行索引。通过建立合适的索引，我们可以极大地提升数据的检索速度。在一些特殊应用场景，MongoDB还支持地理空间索引、文本检索索引、TTL索引等不同的特性。</p></li></ul><h3 id="单键索引-Single-Field-Indexes">单键索引(Single Field Indexes)</h3><ul class="lvl-0"><li class="lvl-2"><p>单键索引是MongoDB最简单的索引类型，它将一个字段作为索引键，索引键值唯一。</p></li><li class="lvl-2"><p>默认情况下，MongoDB会在ID字段上创建一个单键索引，ID字段是文档的唯一标识符，MongoDB会自动创建一个ID字段，如果用户自己创建ID字段，MongoDB会自动将ID字段作为单键索引。</p></li><li class="lvl-2"><p>单键索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1表示正序，-1表示倒序</span></span><br><span class="line">db.books.createIndex(&#123;title:1&#125;)</span><br><span class="line"><span class="comment"># 对内嵌文档字段创建索引：</span></span><br><span class="line">db.books.createIndex(&#123;<span class="string">&quot;author.name&quot;</span>:1&#125;)</span><br></pre></td></tr></table></figure><h3 id="复合索引-Compound-Index">复合索引(Compound Index)</h3><ul class="lvl-0"><li class="lvl-2"><p>复合索引是将多个字段作为索引键，其性质和单字段索引类似。但不同的是，复合索引中字段的顺序、字段的升降序对查询性能有直接的影响，因此在设计复合索引时则需要考虑不同的查询场景。</p></li><li class="lvl-2"><p>复合索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.books.createIndex(&#123;title:1, author.name:1&#125;)</span><br><span class="line"><span class="comment"># 对内嵌文档字段创建索引：</span></span><br><span class="line">db.books.createIndex(&#123;<span class="string">&quot;author.name&quot;</span>:1, <span class="string">&quot;author.age&quot;</span>:1&#125;)</span><br></pre></td></tr></table></figure><h3 id="多键-数组-索引-Multikey-Index">多键(数组)索引(Multikey Index)</h3><ul class="lvl-0"><li class="lvl-2"><p>多键索引是将一个字段作为索引键，该字段可以是嵌套文档、数组等复杂数据类型。</p></li><li class="lvl-2"><p>多键索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tags字段为数组</span></span><br><span class="line">db.books.createIndex(&#123;<span class="string">&quot;tags&quot;</span>:1&#125;)</span><br><span class="line"><span class="comment"># 创建复合多值索引，这里仅能有一个字段是数组，MongoDB并不支持一个复合索引中同时出现多个数组字段</span></span><br><span class="line">db.books.createIndex(&#123;title:1, tags:1&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例数据格式</span></span><br><span class="line">&#123;</span><br><span class="line">  _id: 1,</span><br><span class="line">  item: <span class="string">&quot;abc&quot;</span>,</span><br><span class="line">  stock: [</span><br><span class="line">    &#123; size: <span class="string">&quot;S&quot;</span>, color: <span class="string">&quot;red&quot;</span>, quantity: 25 &#125;,</span><br><span class="line">    &#123; size: <span class="string">&quot;S&quot;</span>, color: <span class="string">&quot;blue&quot;</span>, quantity: 10 &#125;,</span><br><span class="line">    &#123; size: <span class="string">&quot;M&quot;</span>, color: <span class="string">&quot;blue&quot;</span>, quantity: 50 &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 可以对嵌入文档创建多键索引</span></span><br><span class="line">db.collection.createIndex( &#123; <span class="string">&quot;stock.size&quot;</span>: 1, <span class="string">&quot;stock.quantity&quot;</span>: 1 &#125; )</span><br></pre></td></tr></table></figure><h3 id="Hash索引-Hashed-Indexes">Hash索引(Hashed Indexes)</h3><ul class="lvl-0"><li class="lvl-2"><p>Hash索引是MongoDB中的一种特殊的索引类型，它将字段的值计算出一个哈希值，然后将该哈希值作为索引键。由于哈希值的唯一性，因此MongoDB在创建Hash索引时，不会对索引键值进行排序。</p></li><li class="lvl-2"><p>Hash索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.books.createIndex(&#123;title:<span class="string">&quot;hashed&quot;</span>&#125;)</span><br><span class="line"><span class="comment"># 对内嵌文档字段创建索引：</span></span><br><span class="line">db.books.createIndex(&#123;<span class="string">&quot;author.name&quot;</span>:<span class="string">&quot;hashed&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="通配符索引-Wildcard-Indexes">通配符索引(Wildcard Indexes)</h3><ul class="lvl-0"><li class="lvl-2"><p>通配符索引是MongoDB中的一种特殊的索引类型，它允许在索引键值中包含通配符，从而支持对通配符匹配的查询。</p></li><li class="lvl-2"><p>MongoDB 4.2 引入了通配符索</p></li><li class="lvl-2"><p>通配符索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 示例数据</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;product_name&quot;</span> : <span class="string">&quot;Spy Coat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;product_attributes&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;material&quot;</span> : [ <span class="string">&quot;Tweed&quot;</span>, <span class="string">&quot;Wool&quot;</span>, <span class="string">&quot;Leather&quot;</span> ],</span><br><span class="line">        <span class="string">&quot;size&quot;</span> : &#123;</span><br><span class="line">            <span class="string">&quot;length&quot;</span> : 72,</span><br><span class="line">            <span class="string">&quot;units&quot;</span> : <span class="string">&quot;inches&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db.products.createIndex( &#123; <span class="string">&quot;product_attributes.$**&quot;</span> : 1 &#125; )</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>通配符索引是稀疏的，不索引空字段。因此，通配符索引不能支持查询字段不存在的文档。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通配符索引不能支持以下查询</span></span><br><span class="line">db.products.find( &#123;<span class="string">&quot;product_attributes&quot;</span> : &#123; <span class="variable">$exists</span> : <span class="literal">false</span> &#125; &#125; )</span><br><span class="line">db.products.aggregate([</span><br><span class="line">  &#123; <span class="variable">$match</span> : &#123; <span class="string">&quot;product_attributes&quot;</span> : &#123; <span class="variable">$exists</span> : <span class="literal">false</span> &#125; &#125; &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>通配符索引为文档或数组的内容生成条目，而不是文档/数组本身。因此通配符索引不能支持精确的文档/数组相等匹配。通配符索引可以支持查询字段等于空文档{}的情况</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通配符索引不能支持以下查询:</span></span><br><span class="line">db.products.find(&#123; <span class="string">&quot;product_attributes.colors&quot;</span> : [ <span class="string">&quot;Blue&quot;</span>, <span class="string">&quot;Black&quot;</span> ] &#125; )</span><br><span class="line"></span><br><span class="line">db.products.aggregate([&#123;</span><br><span class="line">  <span class="variable">$match</span> : &#123; <span class="string">&quot;product_attributes.colors&quot;</span> : [ <span class="string">&quot;Blue&quot;</span>, <span class="string">&quot;Black&quot;</span> ] &#125;</span><br><span class="line">&#125;])</span><br></pre></td></tr></table></figure><h2 id="索引属性">索引属性</h2><h3 id="唯一索引-Unique-Indexes">唯一索引(Unique Indexes)</h3><ul class="lvl-0"><li class="lvl-2"><p>唯一索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单键索引支持唯一约束</span></span><br><span class="line">db.books.createIndex(&#123;title:1&#125;, &#123;unique:<span class="literal">true</span>&#125;)</span><br><span class="line"><span class="comment"># 复合索引支持唯一性约束</span></span><br><span class="line">db.books.createIndex(&#123;title:1，<span class="built_in">type</span>:1&#125;, &#123;unique:<span class="literal">true</span>&#125;)</span><br><span class="line"><span class="comment"># 多键索引支持唯一性约束，这里tags是数组</span></span><br><span class="line">db.books.createIndex(&#123;<span class="string">&quot;tags&quot;</span>:1&#125;, &#123;unique:<span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>唯一性索引对于文档中缺失的字段，会使用null值代替，因此不允许存在多个文档缺失索引字段的情况。</p></li><li class="lvl-2"><p>对于分片的集合，唯一性约束必须匹配分片规则。换句话说，为了保证全局的唯一性，分片键必须作为唯一性索引的前缀字段。</p></li></ul><h3 id="部分索引-Partial-Indexes">部分索引(Partial Indexes)</h3><ul class="lvl-0"><li class="lvl-2"><p>部分索引仅对满足指定过滤器表达式的文档进行索引。通过在一个集合中为文档的一个子集建立索引，部分索引具有更低的存储需求和更低的索引创建和维护的性能成本。</p></li><li class="lvl-2"><p>部分索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 符合条件&#123;author: &#123;$exists: true&#125;&#125;，即存在作者，才对title创建升序索引</span></span><br><span class="line">db.books.createIndex(&#123;title:1&#125;, &#123;partialFilterExpression: &#123;author: &#123;<span class="variable">$exists</span>: <span class="literal">true</span>&#125;&#125;&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>partialFilterExpression(筛选器表达式)选项接受指定过滤条件的文档:<br>- 等式表达式(例如:field: value或使用$eq操作符)<br>- $exists: true<br>- $gt， $gte， $lt， $lte<br>- $type<br>- 顶层的$and</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>注意：如果同时指定了partialFilterExpression和唯一约束，那么唯一约束只适用于满足筛选器表达式的文档。如果文档不满足筛选条件，那么带有惟一约束的部分索引不会阻止插入不满足惟一约束的文档。</p></li></ul><h3 id="稀疏索引-Sparse-Indexes">稀疏索引(Sparse Indexes)</h3><ul class="lvl-0"><li class="lvl-2"><p>索引的稀疏属性确保索引只包含具有索引字段的文档的条目，索引将跳过没有索引字段的文档。即只对存在字段的文档进行索引（包括字段值为null的文档）。</p></li><li class="lvl-2"><p>如果稀疏索引会导致查询和排序操作的结果集不完整，MongoDB将不会使用该索引，除非hint()明确指定索引。</p></li><li class="lvl-2"><p>稀疏索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据准备</span></span><br><span class="line">db.scores.insertMany([</span><br><span class="line">    &#123;<span class="string">&quot;userid&quot;</span> : <span class="string">&quot;newbie&quot;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;userid&quot;</span> : <span class="string">&quot;abby&quot;</span>, <span class="string">&quot;score&quot;</span> : 82&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;userid&quot;</span> : <span class="string">&quot;nina&quot;</span>, <span class="string">&quot;score&quot;</span> : 90&#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建稀疏索引</span></span><br><span class="line">db.scores.createIndex( &#123; score: 1 &#125; , &#123; sparse: <span class="literal">true</span> &#125; )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line"><span class="comment"># 使用稀疏索引</span></span><br><span class="line">db.scores.find( &#123; score: &#123; <span class="variable">$lt</span>: 90 &#125; &#125; )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 即使排序是通过索引字段，MongoDB也不会选择稀疏索引来完成查询，以返回完整的结果</span></span><br><span class="line">db.scores.find().<span class="built_in">sort</span>( &#123; score: -1 &#125; )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 要使用稀疏索引，使用hint()显式指定索引</span></span><br><span class="line">db.scores.find().<span class="built_in">sort</span>( &#123; score: -1 &#125; ).hint( &#123; score: 1 &#125; )</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>同时具有稀疏性和唯一性的索引可以防止集合中存在字段值重复的文档，但允许不包含此索引字段的文档插入。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除之前创建的索引</span></span><br><span class="line">db.scores.dropIndex(&#123;score:1&#125;)</span><br><span class="line"><span class="comment"># 创建具有唯一约束的稀疏索引</span></span><br><span class="line">db.scores.createIndex( &#123; score: 1 &#125; , &#123; sparse: <span class="literal">true</span>, unique: <span class="literal">true</span> &#125; )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试插入</span></span><br><span class="line">db.scores.insertMany( [</span><br><span class="line">   &#123; <span class="string">&quot;userid&quot;</span>: <span class="string">&quot;AAAAAAA&quot;</span>, <span class="string">&quot;score&quot;</span>: 50 &#125;,</span><br><span class="line">   &#123; <span class="string">&quot;userid&quot;</span>: <span class="string">&quot;BBBBBBB&quot;</span>, <span class="string">&quot;score&quot;</span>: 64 &#125;,</span><br><span class="line">   &#123; <span class="string">&quot;userid&quot;</span>: <span class="string">&quot;CCCCCCC&quot;</span> &#125;,</span><br><span class="line">   &#123; <span class="string">&quot;userid&quot;</span>: <span class="string">&quot;CCCCCCC&quot;</span> &#125;</span><br><span class="line">] )</span><br></pre></td></tr></table></figure><h3 id="TTL索引-TTL-Indexes">TTL索引(TTL Indexes)</h3><ul class="lvl-0"><li class="lvl-2"><p>MongoDB 可以使用它在一定时间或特定时钟时间后自动从集合中删除文档，就是带有过期时间的索引，到期后，MongoDB会自动删除这些过期的文档。</p></li><li class="lvl-2"><p>TTL索引只能创建在日期字段上，当文档过期后，MongoDB会自动删除这些文档。</p></li><li class="lvl-2"><p>TTL索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据准备</span></span><br><span class="line">db.log_events.insertOne( &#123;</span><br><span class="line">   <span class="string">&quot;createdAt&quot;</span>: new Date(),</span><br><span class="line">   <span class="string">&quot;logEvent&quot;</span>: 2,</span><br><span class="line">   <span class="string">&quot;logMessage&quot;</span>: <span class="string">&quot;Success!&quot;</span></span><br><span class="line">&#125; )</span><br><span class="line"><span class="comment"># 创建TTL索引</span></span><br><span class="line">db.scores.createIndex( &#123; <span class="string">&quot;createdAt&quot;</span>: 1 &#125;, &#123; expireAfterSeconds: 3600 &#125; )</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>TTL 索引不保证过期数据会在过期后立即被删除。文档过期和 MongoDB 从数据库中删除文档的时间之间可能存在延迟。删除过期文档的后台任务每 60 秒运行一次。因此，在文档到期和后台任务运行之间的时间段内，文档可能会保留在集合中。</p></li><li class="lvl-2"><p>TTL索引在创建之后，仍然可以对过期时间进行修改。这需要使用collMod命令对索引的定义进行变更</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.runCommand( &#123;</span><br><span class="line">    collMod: <span class="string">&quot;log_events&quot;</span>,</span><br><span class="line">    index: &#123;</span><br><span class="line">        keyPattern: &#123; createdAt: 1 &#125;,</span><br><span class="line">        expireAfterSeconds: 3600</span><br><span class="line">    &#125;</span><br><span class="line">&#125; )</span><br></pre></td></tr></table></figure><h3 id="隐藏索引-Hidden-Indexes">隐藏索引(Hidden Indexes)</h3><ul class="lvl-0"><li class="lvl-2"><p>隐藏索引对查询规划器不可见，不能用于查询。</p></li><li class="lvl-2"><p>通过对规划器隐藏索引，用户可以在不实际删除索引的情况下评估删除索引的潜在影响。如果影响是负面的，用户可以取消隐藏索引，而不必重新创建已删除的索引。</p></li><li class="lvl-2"><p>隐藏索引的创建方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建隐藏索引</span></span><br><span class="line">db.restaurants.createIndex(&#123; borough: 1 &#125;,&#123; hidden: <span class="literal">true</span> &#125;);</span><br><span class="line"><span class="comment"># 隐藏现有索引</span></span><br><span class="line">db.restaurants.hideIndex( &#123; borough: 1&#125; );</span><br><span class="line">db.restaurants.hideIndex( <span class="string">&quot;索引名称&quot;</span> )</span><br><span class="line"><span class="comment"># 取消隐藏索引</span></span><br><span class="line">db.restaurants.unhideIndex( &#123; borough: 1&#125; );</span><br><span class="line">db.restaurants.unhideIndex( <span class="string">&quot;索引名称&quot;</span> );</span><br></pre></td></tr></table></figure><h2 id="索引其它操作">索引其它操作</h2><h3 id="查看索引">查看索引</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看索引信息</span></span><br><span class="line">db.books.getIndexes()</span><br><span class="line"><span class="comment"># 查看索引键</span></span><br><span class="line">db.books.getIndexKeys()</span><br></pre></td></tr></table></figure><h3 id="删除索引">删除索引</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除集合指定索引</span></span><br><span class="line">db.col.dropIndex(<span class="string">&quot;索引名称&quot;</span>)</span><br><span class="line"><span class="comment"># 删除集合所有索引,不能删除主键索引</span></span><br><span class="line">db.col.dropIndexes()</span><br></pre></td></tr></table></figure><h2 id="索引使用建议">索引使用建议</h2><ul class="lvl-0"><li class="lvl-2"><p>为每一个查询建立合适的索引</p><ul class="lvl-2"><li class="lvl-6">这个是针对于数据量较大比如说超过几十上百万（文档数目）数量级的集合。</li><li class="lvl-6">如果没有索引MongoDB需要把所有的Document从盘上读到内存，这会对MongoDB服务器造成较大的压力并影响到其他请求的执行。</li></ul></li><li class="lvl-2"><p>创建合适的复合索引，不要依赖于交叉索引</p><ul class="lvl-2"><li class="lvl-6">如果你的查询会使用到多个字段，MongoDB有两个索引技术可以使用：交叉索引和复合索引。</li><li class="lvl-6">交叉索引就是针对每个字段单独建立一个单字段索引，然后在查询执行时候使用相应的单字段索引进行索引交叉而得到查询结果。</li><li class="lvl-6">交叉索引目前触发率较低，所以如果你有一个多字段查询的时候，建议使用复合索引能够保证索引正常的使用。</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查找所有年龄小于30岁的深圳市马拉松运动员</span></span><br><span class="line">db.athelets.find(&#123;sport: <span class="string">&quot;marathon&quot;</span>, location: <span class="string">&quot;sz&quot;</span>, age: &#123;<span class="variable">$lt</span>: 30&#125;&#125;&#125;)</span><br><span class="line"><span class="comment">#创建复合索引</span></span><br><span class="line">db.athelets.createIndex(&#123;sport:1, location:1, age:1&#125;)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>复合索引字段顺序：匹配条件在前，范围条件在后（Equality First, Range After）</p><ul class="lvl-2"><li class="lvl-6">前面的例子，在创建复合索引时如果条件有匹配和范围之分，那么匹配条件（sport: “marathon”) 应该在复合索引的前面。范围条件(age: &lt;30)字段应该放在复合索引的后面。</li></ul></li><li class="lvl-2"><p>尽可能使用覆盖索引（Covered Index）</p><ul class="lvl-2"><li class="lvl-6">建议只返回需要的字段，同时，利用覆盖索引来提升性能。</li></ul></li><li class="lvl-2"><p>建索引要在后台运行</p><ul class="lvl-2"><li class="lvl-6">在对一个集合创建索引时，该集合所在的数据库将不接受其他读写操作。对大数据量的集合建索引，建议使用后台运行选项 {background: true}</li></ul></li><li class="lvl-2"><p>避免设计过长的数组索引</p><ul class="lvl-2"><li class="lvl-6">数组索引是多值的，在存储时需要使用更多的空间。如果索引的数组长度特别长，或者数组的增长不受控制，则可能导致索引空间急剧膨胀。</li></ul></li></ul><h2 id="explain执行计划">explain执行计划</h2><ul class="lvl-0"><li class="lvl-2"><p>explain执行计划的作用是：查看MongoDB执行查询时的执行计划。</p></li><li class="lvl-2"><p>explain执行计划的使用方式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line">db.collection.find().explain(&lt;verbose&gt;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">db.books.find(&#123;title: <span class="string">&quot;MongoDB 教程&quot;</span>&#125;).explain()</span><br><span class="line">db.books.find(&#123;title: <span class="string">&quot;MongoDB 教程&quot;</span>&#125;).explain(<span class="string">&quot;executionStats&quot;</span>)</span><br><span class="line">db.books.find(&#123;title: <span class="string">&quot;MongoDB 教程&quot;</span>&#125;).explain(<span class="string">&quot;allPlansExecution&quot;</span>)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>verbose :可选参数，表示执行计划的输出模式，默认queryPlanner</p></li></ul><table><thead><tr><th>模式名字</th><th>描述</th></tr></thead><tbody><tr><td>queryPlanner</td><td>执行计划的详细信息，包括查询计划、集合信息、查询条件、最佳执行计划、查询方式和 MongoDB 服务信息等</td></tr><tr><td>executionStats</td><td>最佳执行计划的执行情况和被拒绝的计划等信息</td></tr><tr><td>allPlansExecution</td><td>选择并执行最佳执行计划，并返回最佳执行计划和其他执行计划的执行情况</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>输出结果中重点查看<code>stage</code>,比如<code>queryPlanner</code>下的<code>winningPlan.stage</code></p></li><li class="lvl-2"><p><code>stage</code>类型</p></li></ul><table><thead><tr><th>状态</th><th>描述</th></tr></thead><tbody><tr><td>COLLSCAN</td><td>全表扫描</td></tr><tr><td>IXSCAN</td><td>索引扫描</td></tr><tr><td>FETCH</td><td>根据索引检索指定文档</td></tr><tr><td>SHARD_MERGE</td><td>将各个分片返回数据进行合并</td></tr><tr><td>SORT</td><td>在内存中进行了排序</td></tr><tr><td>LIMIT</td><td>使用 limit 限制返回数</td></tr><tr><td>SKIP</td><td>使用 skip 进行跳过</td></tr><tr><td>IDHACK</td><td>对 _id 进行查询</td></tr><tr><td>SHARDING_FILTER</td><td>通过 mongos 对分片数据进行查询</td></tr><tr><td>COUNTSCAN</td><td>count 不使用索引进行 count 时的 stage 返回</td></tr><tr><td>COUNT_SCAN</td><td>count 使用了索引进行 count 时的 stage 返回</td></tr><tr><td>SUBPLAN</td><td>未使用到索引的 $or 查询的 stage 返回</td></tr><tr><td>TEXT</td><td>使用全文索引进行查询时候的 stage 返回</td></tr><tr><td>PROJECTION</td><td>限定返回字段时候 stage 的返回</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>执行计划的返回结果中尽量不要出现以下<code>stage</code>:</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- COLLSCAN(全表扫描)</span><br><span class="line">- SORT(使用sort但是无index)</span><br><span class="line">- 不合理的SKIP</span><br><span class="line">- SUBPLA(未用到index的$or)</span><br><span class="line">- COUNTSCAN(不使用index进行count)</span><br></pre></td></tr></table></figure></li></ul><h2 id="实战">实战</h2><ul class="lvl-0"><li class="lvl-2"><p>下面是一个结合各种索引类型的示例，假设我们正在为一个电商应用创建和管理一个MongoDB集合products，其中包含以下字段：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">_id: 默认的ObjectId类型，作为主键（已自动带有唯一性索引）。</span><br><span class="line">category: 商品分类，字符串类型。</span><br><span class="line">brand: 商品品牌，字符串类型。</span><br><span class="line">tags: 商品标签数组，包含多个字符串元素。</span><br><span class="line">price: 商品价格，数字类型。</span><br><span class="line">lastUpdated: 商品最后更新时间，日期类型。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>创建集合与插入文档</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 假设已经连接到数据库并选择了一个database</span><br><span class="line">db.createCollection(<span class="string">&quot;products&quot;</span>);</span><br><span class="line"></span><br><span class="line">// 插入一些示例数据</span><br><span class="line">db.products.insertMany([</span><br><span class="line">  &#123;</span><br><span class="line">    category: <span class="string">&quot;Electronics&quot;</span>,</span><br><span class="line">    brand: <span class="string">&quot;Apple&quot;</span>,</span><br><span class="line">    tags: [<span class="string">&quot;smartphone&quot;</span>, <span class="string">&quot;ios&quot;</span>],</span><br><span class="line">    price: 999,</span><br><span class="line">    lastUpdated: ISODate(<span class="string">&quot;2023-03-01T00:00:00Z&quot;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  // ...其他商品文档</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>单键索引 - 查询商品按价格排序</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">products</span>.<span class="title function_">createIndex</span>(&#123; <span class="attr">price</span>: <span class="number">1</span> &#125;);</span><br><span class="line">db.<span class="property">products</span>.<span class="title function_">find</span>().<span class="title function_">sort</span>(&#123; <span class="attr">price</span>: <span class="number">1</span> &#125;); <span class="comment">// 获取所有商品按价格升序排列</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>复合索引 - 按品牌和价格查询，并进行排序：</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">products</span>.<span class="title function_">createIndex</span>(&#123; <span class="attr">brand</span>: <span class="number">1</span>, <span class="attr">price</span>: -<span class="number">1</span> &#125;);</span><br><span class="line">db.<span class="property">products</span>.<span class="title function_">find</span>(&#123; <span class="attr">brand</span>: <span class="string">&quot;Apple&quot;</span> &#125;).<span class="title function_">sort</span>(&#123; <span class="attr">price</span>: -<span class="number">1</span> &#125;); <span class="comment">// 获取指定品牌的商品并按价格降序排列</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>多键索引 - 根据商品标签进行搜索</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">products</span>.<span class="title function_">createIndex</span>(&#123; <span class="string">&quot;tags&quot;</span>: <span class="number">1</span> &#125;, &#123; <span class="string">&quot;sparse&quot;</span>: <span class="literal">true</span> &#125;); <span class="comment">// 如果不是每个文档都有tags，可以使用sparse选项以节省空间</span></span><br><span class="line">db.<span class="property">products</span>.<span class="title function_">find</span>(&#123; <span class="string">&quot;tags&quot;</span>: <span class="string">&quot;smartphone&quot;</span> &#125;); <span class="comment">// 找到所有带有“smartphone”标签的商品</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>唯一索引 - 确保品牌名称不重复</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="property">products</span>.<span class="title function_">createIndex</span>(&#123; <span class="attr">brand</span>: <span class="number">1</span> &#125;, &#123; <span class="attr">unique</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"><span class="comment">// 尝试插入重复记录时</span></span><br><span class="line">db.<span class="property">products</span>.<span class="title function_">insertOne</span>(&#123; <span class="attr">category</span>: <span class="string">&quot;Electronics&quot;</span>, <span class="attr">brand</span>: <span class="string">&quot;Apple&quot;</span>, ... &#125;); <span class="comment">// 正常插入</span></span><br><span class="line">db.<span class="property">products</span>.<span class="title function_">insertOne</span>(&#123; <span class="attr">category</span>: <span class="string">&quot;Computers&quot;</span>, <span class="attr">brand</span>: <span class="string">&quot;Apple&quot;</span>, ... &#125;); <span class="comment">// 若数据库中已有Apple品牌，则会因违反唯一性而报错</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍如何使用MongoDB7.0的索引&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MongoDB版本7.0.6&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mongodb.com/docs/v7.0/indexes/&quot;&gt;MongoDB Indexes&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/mongodb/"/>
    
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB7.0--SpringBoot聚合操作</title>
    <link href="https://blog.hanqunfeng.com/2024/03/07/mongodb7-springboot-aggregate/"/>
    <id>https://blog.hanqunfeng.com/2024/03/07/mongodb7-springboot-aggregate/</id>
    <published>2024-03-07T13:30:05.000Z</published>
    <updated>2024-04-03T03:45:37.303Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍如何使用SpringBoot实现MongoDB7.0的聚合操作</p></li><li class="lvl-2"><p>SpringBoot版本3.2.3，MongoDB版本7.0.6</p></li><li class="lvl-2"><p><a href="https://www.mongodb.com/docs/v7.0/aggregation/">MongoDB Aggregation Operations</a></p></li><li class="lvl-2"><p><a href="https://www.mongodb.com/docs/v7.0/reference/sql-aggregation-comparison/">SQL to Aggregation Mapping Chart</a></p></li><li class="lvl-2"><a href="/2024/03/05/mongodb7-springboot/" title="MongoDB7.0--SpringBoot单集合操作">MongoDB7.0--SpringBoot单集合操作</a></li></ul><span id="more"></span><h2 id="聚合操作简介">聚合操作简介</h2><ul class="lvl-0"><li class="lvl-2"><p>聚合操作允许用户处理多个文档并返回计算结果</p></li><li class="lvl-2"><p>聚合操作包含三类</p><ul class="lvl-2"><li class="lvl-6">单文档聚合：针对单个集合，如：<code>db.collection.countDocument()</code>, <code>db.collection.distinct()</code></li><li class="lvl-6">聚合管道：它可以作用在一个或几个集合上，对集合中的数据进行的一系列运算，并将这些数据转化为用户期望的形式，本文主要介绍管道操作</li><li class="lvl-6">MapReduce：从MongoDB 5.0开始，map-reduce操作已被弃用，本文不做介绍。</li></ul></li></ul><h2 id="聚合管道">聚合管道</h2><ul class="lvl-0"><li class="lvl-2"><p>聚合管道是MongoDB中非常强大的功能，它允许用户将多个操作组合在一起，以实现复杂的数据处理。</p></li><li class="lvl-2"><p>从效果而言，聚合管道相当于 SQL 查询中的 GROUP BY、 LEFT OUTER JOIN 、 AS等。</p></li><li class="lvl-2"><p>整个聚合运算过程称为管道（Pipeline），它是由多个阶段（Stage）组成的， 每个管道：</p><ul class="lvl-2"><li class="lvl-6">接受一系列文档（原始数据）</li><li class="lvl-6">每个阶段对这些文档进行一系列运算</li><li class="lvl-6">结果文档输出给下一个阶段</li></ul></li></ul><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/cHlDgv.png" alt=""></p><ul class="lvl-0"><li class="lvl-2"><p>聚合管道操作语法</p><ul class="lvl-2"><li class="lvl-6">pipelines 一组数据聚合阶段。除$out、$Merge和$geonear阶段之外，每个阶段都可以在管道中出现多次。</li><li class="lvl-6">options 可选，聚合操作的其他参数。包含：查询计划、是否使用临时文件、 游标、最大操作时间、读写策略、强制索引等等</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pipeline = [<span class="variable">$stage1</span>, <span class="variable">$stage2</span>, ...<span class="variable">$stageN</span>];</span><br><span class="line">db.collection.aggregate(pipeline, &#123;options&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/reMhNx.png" alt="聚合管道"></p></li><li class="lvl-2"><p>常用的聚合阶段运算符</p></li></ul><table><thead><tr><th>阶段运算符</th><th>描述</th><th>SQL等价运算符</th></tr></thead><tbody><tr><td>$match</td><td>过滤文档</td><td>WHERE</td></tr><tr><td>$project</td><td>投影，改变文档的形状和内容</td><td>SELECT filedName AS newName</td></tr><tr><td>$group</td><td>将文档分组</td><td>GROUP BY</td></tr><tr><td>$sort</td><td>对文档进行排序</td><td>ORDER BY</td></tr><tr><td>$limit</td><td>限制结果集的大小</td><td>LIMIT</td></tr><tr><td>$skip</td><td>跳过指定数量的文档</td><td>OFFSET</td></tr><tr><td>$unwind</td><td>展开数组</td><td>-</td></tr><tr><td>$lookup</td><td>从其他集合中获取相关文档,左外连接</td><td>LEFT OUTER JOIN</td></tr><tr><td>$out</td><td>将结果集输出到新的集合</td><td>-</td></tr><tr><td>$geoNear</td><td>按照地理位置附近的顺序返回文档</td><td>-</td></tr><tr><td>$graphLookup</td><td>执行递归查询</td><td>-</td></tr><tr><td>$addFields</td><td>添加新字段</td><td>-</td></tr><tr><td>$bucket</td><td>根据指定条件将文档分组成桶</td><td>-</td></tr><tr><td>$facet</td><td>允许在单个聚合阶段内执行多个独立的子聚合</td><td>-</td></tr></tbody></table><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/BqWIi9.png" alt=""></p><ul class="lvl-0"><li class="lvl-2"><p>聚合表达式</p></li></ul><blockquote><p>获取字段信息</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&lt;field&gt;  ： 用 $ 指示字段路径</span><br><span class="line">$&lt;field&gt;.&lt;subfield&gt;  ： 使用 $  和 .  来指示内嵌文档的路径</span><br></pre></td></tr></table></figure><blockquote><p>常量表达式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$literal</span> :&lt;value&gt; ： 指示常量 &lt;value&gt;</span><br></pre></td></tr></table></figure><blockquote><p>系统变量表达式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$$&lt;variable&gt;  使用 $$ 指示系统变量</span><br><span class="line">$<span class="variable">$CURRENT</span>  指示管道中当前操作的文档</span><br></pre></td></tr></table></figure><h2 id="聚合管道示例">聚合管道示例</h2><ul class="lvl-0"><li class="lvl-2"><p>本示例使用SpringBoot实现MongoDB7.0的聚合操作</p></li><li class="lvl-2"><p>初始化数据</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">var tags = [&quot;nosql&quot;,&quot;mongodb&quot;,&quot;document&quot;,&quot;developer&quot;,&quot;popular&quot;];</span></span><br><span class="line"><span class="comment">var types = [&quot;technology&quot;,&quot;sociality&quot;,&quot;travel&quot;,&quot;novel&quot;,&quot;literature&quot;];</span></span><br><span class="line"><span class="comment">var books=[];</span></span><br><span class="line"><span class="comment">for(var i=0;i&lt;50;i++)&#123;</span></span><br><span class="line"><span class="comment">    var typeIdx = Math.floor(Math.random()*types.length);</span></span><br><span class="line"><span class="comment">    var tagIdx = Math.floor(Math.random()*tags.length);</span></span><br><span class="line"><span class="comment">    var tagIdx2 = Math.floor(Math.random()*tags.length);</span></span><br><span class="line"><span class="comment">    var favCount = Math.floor(Math.random()*100);</span></span><br><span class="line"><span class="comment">    var username = &quot;xx00&quot;+Math.floor(Math.random()*10);</span></span><br><span class="line"><span class="comment">    var age = 20 + Math.floor(Math.random()*15);</span></span><br><span class="line"><span class="comment">    var book = &#123;</span></span><br><span class="line"><span class="comment">        title: &quot;book-&quot;+i,</span></span><br><span class="line"><span class="comment">        type: types[typeIdx],</span></span><br><span class="line"><span class="comment">        tag: [tags[tagIdx],tags[tagIdx2]],</span></span><br><span class="line"><span class="comment">        favCount: favCount,</span></span><br><span class="line"><span class="comment">        author: &#123;name:username,age:age&#125;</span></span><br><span class="line"><span class="comment">    &#125;;</span></span><br><span class="line"><span class="comment">    books.push(book)</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">db.books.insertMany(books);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">String[] tags = &#123;<span class="string">&quot;nosql&quot;</span>, <span class="string">&quot;mongodb&quot;</span>, <span class="string">&quot;document&quot;</span>, <span class="string">&quot;developer&quot;</span>, <span class="string">&quot;popular&quot;</span>&#125;;</span><br><span class="line">String[] types = &#123;<span class="string">&quot;technology&quot;</span>, <span class="string">&quot;sociality&quot;</span>, <span class="string">&quot;travel&quot;</span>, <span class="string">&quot;novel&quot;</span>, <span class="string">&quot;literature&quot;</span>&#125;;</span><br><span class="line">List&lt;Document&gt; books = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">typeIdx</span> <span class="operator">=</span> random.nextInt(types.length);</span><br><span class="line">    <span class="type">int</span> <span class="variable">tagIdx</span> <span class="operator">=</span> random.nextInt(tags.length);</span><br><span class="line">    <span class="type">int</span> <span class="variable">tagIdx2</span> <span class="operator">=</span> random.nextInt(tags.length);</span><br><span class="line">    <span class="type">int</span> <span class="variable">favCount</span> <span class="operator">=</span> random.nextInt(<span class="number">100</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;xx00&quot;</span> + random.nextInt(<span class="number">10</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">20</span> + random.nextInt(<span class="number">15</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">Document</span> <span class="variable">book</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;book-&quot;</span> + i)</span><br><span class="line">            .append(<span class="string">&quot;type&quot;</span>, types[typeIdx])</span><br><span class="line">            .append(<span class="string">&quot;tag&quot;</span>, List.of(tags[tagIdx], tags[tagIdx2]))</span><br><span class="line">            .append(<span class="string">&quot;favCount&quot;</span>, favCount)</span><br><span class="line">            .append(<span class="string">&quot;author&quot;</span>, <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;name&quot;</span>, username).append(<span class="string">&quot;age&quot;</span>, age));</span><br><span class="line">    books.add(book);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mongoTemplate.insert(books, <span class="string">&quot;books&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="project-投影操作">$project:投影操作</h3><ul class="lvl-0"><li class="lvl-2"><p>将原始字段投影成指定名称， 如将集合中的 title 投影成 name</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// db.books.aggregate([&#123;$project:&#123;name:&quot;$title&quot;&#125;&#125;])</span></span><br><span class="line"><span class="type">ProjectionOperation</span> <span class="variable">projectOperation</span> <span class="operator">=</span> Aggregation.project()</span><br><span class="line">        .andExpression(<span class="string">&quot;title&quot;</span>).as(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(projectOperation);</span><br><span class="line">System.out.println(aggregation);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Document document : result) &#123;</span><br><span class="line">    System.out.println(document.toJson());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>剔除不需要的字段</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// db.books.aggregate([&#123;$project:&#123;name:&quot;$title&quot;,_id:0,type:1,author.name:1&#125;&#125;])</span></span><br><span class="line"><span class="type">ProjectionOperation</span> <span class="variable">projectOperation</span> <span class="operator">=</span> Aggregation.project()</span><br><span class="line">        .andExclude(<span class="string">&quot;_id&quot;</span>)</span><br><span class="line">        .andInclude(<span class="string">&quot;type&quot;</span>)</span><br><span class="line">        .andExpression(<span class="string">&quot;author.name&quot;</span>).as(<span class="string">&quot;author.name&quot;</span>) <span class="comment">// 这里必须使用as重新命名，否则只会用name做字段名称，这就和后面的title的别名冲突了</span></span><br><span class="line">        .andExpression(<span class="string">&quot;title&quot;</span>).as(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(projectOperation);</span><br><span class="line">System.out.println(aggregation);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Document document : results) &#123;</span><br><span class="line">    System.out.println(document.toJson());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="match-过滤操作">$match:过滤操作</h3><ul class="lvl-0"><li class="lvl-2"><p>过滤出指定条件的文档</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// db.books.aggregate([&#123;$match:&#123;type:&quot;technology&quot;&#125;&#125;])</span></span><br><span class="line"><span class="type">MatchOperation</span> <span class="variable">matchOperation</span> <span class="operator">=</span> Aggregation.match(Criteria.where(<span class="string">&quot;type&quot;</span>).is(<span class="string">&quot;technology&quot;</span>));</span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(matchOperation);</span><br><span class="line">System.out.println(aggregation);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br><span class="line"><span class="keyword">for</span> (Document document : results) &#123;</span><br><span class="line">    System.out.println(document.toJson());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>组合其它管道</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$match:&#123;type:&quot;technology&quot;&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$project:&#123;name:&quot;$title&quot;,_id:0,type:1,author:&#123;name:1&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">MatchOperation</span> <span class="variable">matchOperation</span> <span class="operator">=</span> Aggregation.match(Criteria.where(<span class="string">&quot;type&quot;</span>).is(<span class="string">&quot;technology&quot;</span>));</span><br><span class="line"><span class="type">ProjectionOperation</span> <span class="variable">projectOperation</span> <span class="operator">=</span> Aggregation.project(<span class="string">&quot;title&quot;</span>).andExclude(<span class="string">&quot;_id&quot;</span>).andInclude(<span class="string">&quot;type&quot;</span>).and(<span class="string">&quot;author.name&quot;</span>).as(<span class="string">&quot;author.name&quot;</span>);</span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(matchOperation, projectOperation);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure><h3 id="count-计数操作">$count:计数操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$match:&#123;type:&quot;technology&quot;&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$count: &quot;type_count&quot;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// MatchOperation to filter documents by type: &quot;technology&quot;</span></span><br><span class="line"><span class="type">MatchOperation</span> <span class="variable">matchAggregation</span> <span class="operator">=</span> Aggregation.match(Criteria.where(<span class="string">&quot;type&quot;</span>).is(<span class="string">&quot;technology&quot;</span>));</span><br><span class="line"><span class="comment">// CountOperation to count the matched documents</span></span><br><span class="line"><span class="type">CountOperation</span> <span class="variable">countAggregation</span> <span class="operator">=</span> Aggregation.count().as(<span class="string">&quot;type_count&quot;</span>);</span><br><span class="line"><span class="comment">// Combine the match and count operations</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(matchAggregation, countAggregation);</span><br><span class="line">System.out.println(aggregation);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure><h3 id="group-分组操作">$group:分组操作</h3><ul class="lvl-0"><li class="lvl-2"><p>按指定的表达式对文档进行分组，并将每个不同分组的文档输出到下一个阶段。输出文档包含一个_id字段，该字段按键包含不同的组。</p></li><li class="lvl-2"><p>输出文档还可以包含计算字段，该字段保存由$group的_id字段分组的一些accumulator表达式的值。 $group不会输出具体的文档而只是统计信息。</p></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="variable">$group</span>: &#123; _id: &lt;expression&gt;, &lt;field1&gt;: &#123; &lt;accumulator1&gt; : &lt;expression1&gt; &#125;, ... &#125; &#125;</span><br><span class="line"><span class="comment"># _id字段是必填的;但是，可以指定_id值为null来为整个输入文档计算累计值。</span></span><br><span class="line"><span class="comment"># 剩余的计算字段是可选的，并使用&lt;accumulator&gt;运算符进行计算。</span></span><br><span class="line"><span class="comment"># _id和&lt;accumulator&gt;表达式可以接受任何有效的表达式。</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>accumulator操作符</p></li></ul><table><thead><tr><th>名称</th><th>描述</th><th>类比sql</th></tr></thead><tbody><tr><td><code>avg</code></td><td>计算均值</td><td>avg</td></tr><tr><td><code>first</code></td><td>返回每组第一个文档，如果有排序，按照排序，如果没有按照默认的存储的顺序的第一个文档。</td><td>limit 0,1</td></tr><tr><td><code>last</code></td><td>返回每组最后一个文档，如果有排序，按照排序，如果没有按照默认的存储的顺序的最后个文档。</td><td>-</td></tr><tr><td><code>max</code></td><td>根据分组，获取集合中所有文档对应值得最大值。</td><td>max</td></tr><tr><td><code>min</code></td><td>根据分组，获取集合中所有文档对应值得最小值。</td><td>min</td></tr><tr><td><code>push</code></td><td>将指定的表达式的值添加到一个数组中。</td><td>-</td></tr><tr><td><code>addToSet</code></td><td>将表达式的值添加到一个集合中（无重复值，无序）。</td><td>-</td></tr><tr><td><code>sum</code></td><td>计算总和</td><td>sum</td></tr><tr><td><code>stdDevPop</code></td><td>返回输入值的总体标准偏差（population standard deviation）</td><td>-</td></tr><tr><td><code>stdDevSamp</code></td><td>返回输入值的样本标准偏差（the sample standard deviation）</td><td>-</td></tr></tbody></table><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/EVvswC.png" alt=""></p><h4 id="示例">示例</h4><ul class="lvl-0"><li class="lvl-2"><p>book的数量，收藏总数和平均值</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$group:&#123;_id:null,count:&#123;$sum:1&#125;,pop:&#123;$sum:&quot;$favCount&quot;&#125;,avg:&#123;$avg:&quot;$favCount&quot;&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.group().count().as(<span class="string">&quot;count&quot;</span>).sum(<span class="string">&quot;favCount&quot;</span>).as(<span class="string">&quot;pop&quot;</span>).avg(<span class="string">&quot;favCount&quot;</span>).as(<span class="string">&quot;avg&quot;</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">AggregationResults&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class);</span><br><span class="line">List&lt;Document&gt; mappedResults = results.getMappedResults();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Assuming that there will be only one result due to grouping by null (_id: null)</span></span><br><span class="line"><span class="keyword">if</span> (!mappedResults.isEmpty()) &#123;</span><br><span class="line">    System.out.println(mappedResults.get(<span class="number">0</span>).toJson());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;&#123;&#125;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>统计每个作者的book收藏总数</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$group:&#123;_id:&quot;$author.name&quot;,pop:&#123;$sum:&quot;$favCount&quot;&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.group(<span class="string">&quot;author.name&quot;</span>).sum(<span class="string">&quot;favCount&quot;</span>).as(<span class="string">&quot;pop&quot;</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">AggregationResults&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class);</span><br><span class="line">List&lt;Document&gt; mappedResults = results.getMappedResults();</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>统计每个作者的每本book的收藏数</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$group:&#123;_id:&#123;name:&quot;$author.name&quot;,title:&quot;$title&quot;&#125;,pop:&#123;$sum:&quot;$favCount&quot;&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.group(<span class="string">&quot;author.name&quot;</span>, <span class="string">&quot;title&quot;</span>).sum(<span class="string">&quot;favCount&quot;</span>).as(<span class="string">&quot;pop&quot;</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">AggregationResults&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class);</span><br><span class="line">List&lt;Document&gt; mappedResults = results.getMappedResults();</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>每个作者的book的type合集</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$group:&#123;_id:&quot;$author.name&quot;,types:&#123;$addToSet:&quot;$type&quot;&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">GroupOperation</span> <span class="variable">groupOperation</span> <span class="operator">=</span> Aggregation.group(<span class="string">&quot;author.name&quot;</span>).addToSet(<span class="string">&quot;type&quot;</span>).as(<span class="string">&quot;types&quot;</span>);</span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(groupOperation);</span><br><span class="line">AggregationResults&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class);</span><br><span class="line">List&lt;Document&gt; mappedResults = results.getMappedResults();</span><br></pre></td></tr></table></figure><h3 id="unwind">$unwind</h3><ul class="lvl-0"><li class="lvl-2"><p>可以将数组拆分为单独的文档</p></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="variable">$unwind</span>:</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">#要指定字段路径，在字段名称前加上$符并用引号括起来。</span></span><br><span class="line">      path: &lt;field path&gt;,</span><br><span class="line">      <span class="comment">#可选,一个新字段的名称用于存放元素的数组索引。该名称不能以$开头。</span></span><br><span class="line">      includeArrayIndex: &lt;string&gt;,</span><br><span class="line">      <span class="comment">#可选，default :false，若为true,如果路径为空，缺少或为空数组，则$unwind输出文档</span></span><br><span class="line">      preserveNullAndEmptyArrays: &lt;boolean&gt;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="示例-2">示例</h4><ul class="lvl-0"><li class="lvl-2"><p>姓名为xx006的作者的book的tag数组拆分为多个文档</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$match:&#123;&quot;author.name&quot;:&quot;xx006&quot;&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$unwind:&quot;$tag&quot;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.match(Criteria.where(<span class="string">&quot;author.name&quot;</span>).is(<span class="string">&quot;xx006&quot;</span>)),</span><br><span class="line">        Aggregation.unwind(<span class="string">&quot;tag&quot;</span>)</span><br><span class="line">);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>使用<code>includeArrayIndex</code>选项来输出数组元素的数组索引</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$match:&#123;&quot;author.name&quot;:&quot;xx006&quot;&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$unwind:&#123;path:&quot;$tag&quot;, includeArrayIndex: &quot;arrayIndex&quot;&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.match(Criteria.where(<span class="string">&quot;author.name&quot;</span>).is(<span class="string">&quot;xx006&quot;</span>)),</span><br><span class="line">        Aggregation.unwind(<span class="string">&quot;tag&quot;</span>, <span class="string">&quot;arrayIndex&quot;</span>)</span><br><span class="line">);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>每个作者的book的tag合集</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$unwind:&quot;$tag&quot;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$group:&#123;_id:&quot;$author.name&quot;,types:&#123;$addToSet:&quot;$tag&quot;&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">UnwindOperation</span> <span class="variable">unwindOperation</span> <span class="operator">=</span> Aggregation.unwind(<span class="string">&quot;tag&quot;</span>);</span><br><span class="line"><span class="type">GroupOperation</span> <span class="variable">groupOperation</span> <span class="operator">=</span> Aggregation.group(<span class="string">&quot;author.name&quot;</span>).addToSet(<span class="string">&quot;tag&quot;</span>).as(<span class="string">&quot;types&quot;</span>);</span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(unwindOperation, groupOperation);</span><br><span class="line">AggregationResults&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class);</span><br><span class="line">List&lt;Document&gt; mappedResults = results.getMappedResults();</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>使用<code>preserveNullAndEmptyArrays</code>选项在输出中包含缺少tag字段，null或空数组的文档</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化数据，加入一些tag为空数组或不存在tag的文档</span></span><br><span class="line">db.books.insertMany([</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;title&quot;</span> : <span class="string">&quot;book-51&quot;</span>,</span><br><span class="line">        <span class="string">&quot;type&quot;</span> : <span class="string">&quot;technology&quot;</span>,</span><br><span class="line">        <span class="string">&quot;favCount&quot;</span> : 11,</span><br><span class="line">        <span class="string">&quot;tag&quot;</span>:[],</span><br><span class="line">        <span class="string">&quot;author&quot;</span> : &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;xx006&quot;</span>,</span><br><span class="line">            <span class="string">&quot;age&quot;</span> : 28</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;title&quot;</span> : <span class="string">&quot;book-52&quot;</span>,</span><br><span class="line">        <span class="string">&quot;type&quot;</span> : <span class="string">&quot;technology&quot;</span>,</span><br><span class="line">        <span class="string">&quot;favCount&quot;</span> : 15,</span><br><span class="line">        <span class="string">&quot;author&quot;</span> : &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span> : <span class="string">&quot;xx006&quot;</span>,</span><br><span class="line">            <span class="string">&quot;age&quot;</span> : 28</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$match:&#123;&quot;author.name&quot;:&quot;xx006&quot;&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$unwind:&#123;path:&quot;$tag&quot;, preserveNullAndEmptyArrays: true&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.match(Criteria.where(<span class="string">&quot;author.name&quot;</span>).is(<span class="string">&quot;xx006&quot;</span>)),</span><br><span class="line">        Aggregation.unwind(<span class="string">&quot;tag&quot;</span>, <span class="literal">true</span>)</span><br><span class="line">);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure><h3 id="limit-skip-sort">$limit/$skip/$sort</h3><ul class="lvl-0"><li class="lvl-2"><p>$limit:限制传递到管道中下一阶段的文档数</p></li><li class="lvl-2"><p>$skip:跳过传递到管道中下一阶段的文档数</p></li><li class="lvl-2"><p>$sort:对传递到管道中下一阶段的文档进行排序</p></li></ul><h4 id="示例-3">示例</h4><ul class="lvl-0"><li class="lvl-2"><p>姓名为xx006的作者的book的tag数组拆分为多个文档，按照收藏数降序排序，跳过2个文档，取5个文档</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$match:&#123;&quot;author.name&quot;:&quot;xx006&quot;&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$unwind:&#123;path:&quot;$tag&quot;, preserveNullAndEmptyArrays: true&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$sort:&#123;&quot;favCount&quot;:-1&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$limit : 5 &#125;,</span></span><br><span class="line"><span class="comment">    &#123;$skip : 2&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.match(Criteria.where(<span class="string">&quot;author.name&quot;</span>).is(<span class="string">&quot;xx006&quot;</span>)),</span><br><span class="line">        Aggregation.unwind(<span class="string">&quot;tag&quot;</span>, <span class="literal">true</span>),</span><br><span class="line">        Aggregation.sort(Sort.by(Sort.Direction.DESC, <span class="string">&quot;favCount&quot;</span>)),</span><br><span class="line">        Aggregation.skip(<span class="number">2</span>),</span><br><span class="line">        Aggregation.limit(<span class="number">5</span>)</span><br><span class="line">);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br><span class="line">``</span><br><span class="line">* 统计每个分类的book文档数量</span><br><span class="line">```java</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$group:&#123;_id:&quot;$type&quot;,total:&#123;$sum:1&#125;&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$sort:&#123;total:-1&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.group(<span class="string">&quot;type&quot;</span>).count().as(<span class="string">&quot;total&quot;</span>),</span><br><span class="line">        Aggregation.sort(Sort.by(Sort.Direction.DESC, <span class="string">&quot;total&quot;</span>))</span><br><span class="line">);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>标签的热度排行，标签的热度则按其关联book文档的收藏数（favCount）来计算</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$match:&#123;favCount:&#123;$gt:0&#125;&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$unwind:&quot;$tag&quot;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$group:&#123;_id:&quot;$tag&quot;,total:&#123;$sum:&quot;$favCount&quot;&#125;&#125;&#125;,</span></span><br><span class="line"><span class="comment">    &#123;$sort:&#123;total:-1&#125;&#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.match(Criteria.where(<span class="string">&quot;favCount&quot;</span>).gt(<span class="number">0</span>)),</span><br><span class="line">        Aggregation.unwind(<span class="string">&quot;tag&quot;</span>),</span><br><span class="line">        Aggregation.group(<span class="string">&quot;tag&quot;</span>).sum(<span class="string">&quot;favCount&quot;</span>).as(<span class="string">&quot;total&quot;</span>),</span><br><span class="line">        Aggregation.sort(Sort.by(Sort.Direction.DESC, <span class="string">&quot;total&quot;</span>))</span><br><span class="line">);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure><h3 id="bucket">$bucket</h3><ul class="lvl-0"><li class="lvl-2"><p>$bucket:根据指定的条件和边界，将文档分组到不同的桶中</p></li></ul><h4 id="示例-4">示例</h4><ul class="lvl-0"><li class="lvl-2"><p>统计book文档收藏数[0,10),[10,60),[60,80),[80,100),[100,+∞）</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.books.aggregate([&#123;</span></span><br><span class="line"><span class="comment">    $bucket:&#123;</span></span><br><span class="line"><span class="comment">        groupBy:&quot;$favCount&quot;,</span></span><br><span class="line"><span class="comment">        boundaries:[0,10,60,80,100],</span></span><br><span class="line"><span class="comment">        default:&quot;other&quot;,</span></span><br><span class="line"><span class="comment">        output:&#123;&quot;count&quot;:&#123;$sum:1&#125;&#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;])</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">[</span></span><br><span class="line"><span class="comment">  &#123; _id: 0, count: 3 &#125;,</span></span><br><span class="line"><span class="comment">  &#123; _id: 10, count: 27 &#125;,</span></span><br><span class="line"><span class="comment">  &#123; _id: 60, count: 11 &#125;,</span></span><br><span class="line"><span class="comment">  &#123; _id: 80, count: 11 &#125;</span></span><br><span class="line"><span class="comment">]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">groupBy: 指定用于分组的字段。在此示例中，根据 favCount 字段的值进行分组。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">boundaries: 定义分桶的边界，即每个桶的范围。文档的值将根据这些边界被分配到不同的桶中。边界应按升序排列。在这个命令中，边界 [0, 10, 60, 80, 100] 表示将文档分成六个桶：小于等于0、大于0小于等于10、大于10小于等于60、大于60小于等于80、大于80小于等于100、大于100。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">default: 这是一个可选参数，用于指定默认桶的名称。如果文档的值不在指定的边界范围内，则会被放入该桶中。在这个命令中，如果 favCount 的值不在指定的边界范围内，将会被放入名为 &quot;other&quot; 的桶中。比如这里设置边界 [10, 60, 80, 100]，即表示从10开始分组，则0~10的数据会被分组到名为 &quot;other&quot; 的桶中。</span></span><br><span class="line"><span class="comment">[</span></span><br><span class="line"><span class="comment">  &#123; _id: 10, count: 27 &#125;,</span></span><br><span class="line"><span class="comment">  &#123; _id: 60, count: 11 &#125;,</span></span><br><span class="line"><span class="comment">  &#123; _id: 80, count: 11 &#125;,</span></span><br><span class="line"><span class="comment">  &#123; _id: &#x27;other&#x27;, count: 3 &#125;</span></span><br><span class="line"><span class="comment">]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">output: 定义了每个桶的输出内容。这是一个子文档，它指定了在每个桶中计算的聚合操作。在这个示例中，使用 $sum 聚合操作符来计算每个桶中的文档数量，并将结果存储在名为 &quot;count&quot; 的字段中。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.bucket(<span class="string">&quot;$favCount&quot;</span>)</span><br><span class="line">                .withBoundaries(<span class="number">0</span>,<span class="number">10</span>,<span class="number">60</span>,<span class="number">80</span>,<span class="number">100</span>)</span><br><span class="line">                .withDefaultBucket(<span class="string">&quot;other&quot;</span>)</span><br><span class="line">                .andOutput(context -&gt; <span class="keyword">new</span> <span class="title class_">Document</span>(<span class="string">&quot;$sum&quot;</span>, <span class="number">1</span>))</span><br><span class="line">                .as(<span class="string">&quot;count&quot;</span>)</span><br><span class="line">);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;books&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure><h3 id="lookup">$lookup</h3><ul class="lvl-0"><li class="lvl-2"><p>$lookup:将文档中的一个字段的值与另一个集合中的文档进行匹配，然后将匹配的文档添加到当前文档中</p></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db.collection.aggregate([&#123;</span><br><span class="line">    <span class="variable">$lookup</span>: &#123;</span><br><span class="line">            from: <span class="string">&quot;&lt;collection to join&gt;&quot;</span>,</span><br><span class="line">            localField: <span class="string">&quot;&lt;field from the input documents&gt;&quot;</span>,</span><br><span class="line">            foreignField: <span class="string">&quot;&lt;field from the documents of the from collection&gt;&quot;</span>,</span><br><span class="line">            as: <span class="string">&quot;&lt;output array field&gt;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td><code>from</code></td><td>同一个数据库下等待被Join的集合。</td></tr><tr><td><code>localField</code></td><td>源集合中的match值，如果输入的集合中，某文档没有 localField这个Key（Field），在处理的过程中，会默认为此文档含有 localField：null的键值对。</td></tr><tr><td><code>foreignField</code></td><td>待Join的集合的match值，如果待Join的集合中，文档没有foreignField值，在处理的过程中，会默认为此文档含有 foreignField：null的键值对。</td></tr><tr><td><code>as</code></td><td>为输出文档的新增值命名。如果输入的集合中已存在该值，则会覆盖掉。</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>其语法功能类似于下面的伪SQL语句</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span>, <span class="operator">&lt;</span>output <span class="keyword">array</span> field<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">FROM</span> collection</span><br><span class="line"><span class="keyword">WHERE</span> <span class="operator">&lt;</span>output <span class="keyword">array</span> field<span class="operator">&gt;</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">                               <span class="keyword">FROM</span> <span class="operator">&lt;</span>collection <span class="keyword">to</span> <span class="keyword">join</span><span class="operator">&gt;</span></span><br><span class="line">                               <span class="keyword">WHERE</span> <span class="operator">&lt;</span>foreignField<span class="operator">&gt;</span> <span class="operator">=</span> <span class="operator">&lt;</span>collection.localField<span class="operator">&gt;</span>);</span><br></pre></td></tr></table></figure><h4 id="示例-5">示例</h4><ul class="lvl-0"><li class="lvl-2"><p>准备数据</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 顾客信息</span></span><br><span class="line">db.customer.insertOne(&#123;customerCode:1,name:<span class="string">&quot;customer1&quot;</span>,phone:<span class="string">&quot;13112345678&quot;</span>,address:<span class="string">&quot;test1&quot;</span>&#125;)</span><br><span class="line">db.customer.insertOne(&#123;customerCode:2,name:<span class="string">&quot;customer2&quot;</span>,phone:<span class="string">&quot;13112345679&quot;</span>,address:<span class="string">&quot;test2&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 订单信息</span></span><br><span class="line">db.order.insertOne(&#123;orderId:1,orderCode:<span class="string">&quot;order001&quot;</span>,customerCode:1,price:200&#125;)</span><br><span class="line">db.order.insertOne(&#123;orderId:2,orderCode:<span class="string">&quot;order002&quot;</span>,customerCode:2,price:400&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 订单明细</span></span><br><span class="line">db.orderItem.insertOne(&#123;itemId:1,productName:<span class="string">&quot;apples&quot;</span>,qutity:2,orderId:1&#125;)</span><br><span class="line">db.orderItem.insertOne(&#123;itemId:2,productName:<span class="string">&quot;oranges&quot;</span>,qutity:2,orderId:1&#125;)</span><br><span class="line">db.orderItem.insertOne(&#123;itemId:3,productName:<span class="string">&quot;mangoes&quot;</span>,qutity:2,orderId:1&#125;)</span><br><span class="line">db.orderItem.insertOne(&#123;itemId:4,productName:<span class="string">&quot;apples&quot;</span>,qutity:2,orderId:2&#125;)</span><br><span class="line">db.orderItem.insertOne(&#123;itemId:5,productName:<span class="string">&quot;oranges&quot;</span>,qutity:2,orderId:2&#125;)</span><br><span class="line">db.orderItem.insertOne(&#123;itemId:6,productName:<span class="string">&quot;mangoes&quot;</span>,qutity:2,orderId:2&#125;)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查询顾客的订单信息，关联字段为customerCode顾客号码</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.customer.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$lookup: &#123;</span></span><br><span class="line"><span class="comment">       from: &quot;order&quot;,</span></span><br><span class="line"><span class="comment">       localField: &quot;customerCode&quot;,</span></span><br><span class="line"><span class="comment">       foreignField: &quot;customerCode&quot;,</span></span><br><span class="line"><span class="comment">       as: &quot;customerOrder&quot;</span></span><br><span class="line"><span class="comment">     &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.lookup(<span class="string">&quot;order&quot;</span>, <span class="string">&quot;customerCode&quot;</span>, <span class="string">&quot;customerCode&quot;</span>, <span class="string">&quot;customerOrder&quot;</span>)</span><br><span class="line">);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;customer&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>根据订单信息关联顾客信息和订单明细</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.order.aggregate([</span></span><br><span class="line"><span class="comment">    &#123;$lookup: &#123;</span></span><br><span class="line"><span class="comment">               from: &quot;customer&quot;,</span></span><br><span class="line"><span class="comment">               localField: &quot;customerCode&quot;,</span></span><br><span class="line"><span class="comment">               foreignField: &quot;customerCode&quot;,</span></span><br><span class="line"><span class="comment">               as: &quot;curstomer&quot;</span></span><br><span class="line"><span class="comment">             &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;,</span></span><br><span class="line"><span class="comment">    &#123;$lookup: &#123;</span></span><br><span class="line"><span class="comment">               from: &quot;orderItem&quot;,</span></span><br><span class="line"><span class="comment">               localField: &quot;orderId&quot;,</span></span><br><span class="line"><span class="comment">               foreignField: &quot;orderId&quot;,</span></span><br><span class="line"><span class="comment">               as: &quot;orderItem&quot;</span></span><br><span class="line"><span class="comment">             &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">        Aggregation.lookup(<span class="string">&quot;customer&quot;</span>, <span class="string">&quot;customerCode&quot;</span>, <span class="string">&quot;customerCode&quot;</span>, <span class="string">&quot;curstomer&quot;</span>),</span><br><span class="line">        Aggregation.lookup(<span class="string">&quot;orderItem&quot;</span>, <span class="string">&quot;orderId&quot;</span>, <span class="string">&quot;orderId&quot;</span>, <span class="string">&quot;orderItem&quot;</span>)</span><br><span class="line">);</span><br><span class="line">List&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;order&quot;</span>, Document.class).getMappedResults();</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍如何使用SpringBoot实现MongoDB7.0的聚合操作&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;SpringBoot版本3.2.3，MongoDB版本7.0.6&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mongodb.com/docs/v7.0/aggregation/&quot;&gt;MongoDB Aggregation Operations&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mongodb.com/docs/v7.0/reference/sql-aggregation-comparison/&quot;&gt;SQL to Aggregation Mapping Chart&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;a href=&quot;/2024/03/05/mongodb7-springboot/&quot; title=&quot;MongoDB7.0--SpringBoot单集合操作&quot;&gt;MongoDB7.0--SpringBoot单集合操作&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/mongodb/"/>
    
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB7.0--SpringBoot单集合操作</title>
    <link href="https://blog.hanqunfeng.com/2024/03/05/mongodb7-springboot/"/>
    <id>https://blog.hanqunfeng.com/2024/03/05/mongodb7-springboot/</id>
    <published>2024-03-05T13:30:05.000Z</published>
    <updated>2024-04-08T06:07:11.881Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍如何使用SpringBoot实现MongoDB7.0的单集合的CURD操作</p></li><li class="lvl-2"><p>SpringBoot版本3.2.3，MongoDB版本7.0.6</p></li><li class="lvl-2"><p><a href="https://www.mongodb.com/docs/v7.0/crud/">MongoDB CRUD Operations</a></p></li><li class="lvl-2"><p><a href="https://www.mongodb.com/docs/v7.0/reference/sql-comparison/">SQL to MongoDB Mapping Chart</a></p></li><li class="lvl-2"><a href="/2024/03/07/mongodb7-springboot-aggregate/" title="MongoDB7.0--SpringBoot聚合操作">MongoDB7.0--SpringBoot聚合操作</a></li></ul><span id="more"></span><h2 id="spring-boot-与-MongoDB-的版本对应关系">spring-boot 与 MongoDB 的版本对应关系</h2><ul class="lvl-0"><li class="lvl-2"><p><code>spring-data-mongodb</code>与<code>MongoDB</code>版本对应关系可以参看<a href="https://docs.spring.io/spring-data/mongodb/reference/preface.html">官方文档</a></p></li><li class="lvl-2"><p><code>spring-boot-starter-data-mongodb</code> 与 <code>spring-data-mongodb</code> 版本对应关系</p></li></ul><table><thead><tr><th>spring-boot-starter-data-mongodb 版本</th><th>spring-data-mongodb 版本</th><th>MongoDB Server 版本</th><th>Java Driver Version</th></tr></thead><tbody><tr><td>3.2.x</td><td>4.2.x</td><td>6.0.x,7.0.x</td><td>4.11.x</td></tr><tr><td>3.1.x</td><td>4.1.x</td><td>6.0.x,7.0.x</td><td>4.9.x</td></tr><tr><td>3.0.x</td><td>4.0.x</td><td>6.0.x</td><td>4.7.x</td></tr><tr><td>2.7.x</td><td>3.4.x</td><td>5.0.x</td><td>4.6.x</td></tr><tr><td>2.6.x</td><td>3.3.x</td><td>5.0.x</td><td>4.4.x</td></tr><tr><td>2.5.x</td><td>3.2.x</td><td>4.4.x</td><td>4.1.x</td></tr><tr><td>2.4.x</td><td>3.1.x</td><td>4.4.x</td><td>4.1.x</td></tr><tr><td>2.3.x</td><td>3.0.x</td><td>4.4.x</td><td>4.0.x</td></tr><tr><td>2.2.x</td><td>2.2.x</td><td>4.2.x</td><td>3.11.x</td></tr><tr><td>2.1.x</td><td>2.1.x</td><td>4.0.x</td><td>3.8.x</td></tr><tr><td>2.0.x</td><td>2.0.x</td><td>3.4.x</td><td>3.5.x</td></tr><tr><td>1.10.x</td><td>1.10.x</td><td>2.4.x</td><td>2.10.x,2.11.x</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>Mongo的Java驱动，在<code>3.7.x</code>及以后的版本叫做<a href="https://mvnrepository.com/artifact/org.mongodb/mongodb-driver-sync">mongodb-driver-sync</a>，以前的版本叫做<a href="https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver">mongo-java-driver</a></p></li><li class="lvl-2"><p>MongoDB 与 Java Driver 兼容性<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/FZeH9j.png" alt="" width="800" height="800"></p></li></ul><h2 id="SpringBoot整合MongoDB">SpringBoot整合MongoDB</h2><ul class="lvl-0"><li class="lvl-2"><p>引入依赖</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>配置yml</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">data:</span></span><br><span class="line">    <span class="attr">mongodb:</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">mongodb://root:password@127.0.0.1:27017/mytest?authSource=admin</span></span><br><span class="line">      <span class="comment">#uri等同于下面的配置</span></span><br><span class="line">      <span class="comment"># database: mytest # 数据库名</span></span><br><span class="line">      <span class="comment"># host: 127.0.0.1</span></span><br><span class="line">      <span class="comment"># port: 27017</span></span><br><span class="line">      <span class="comment"># username: root</span></span><br><span class="line">      <span class="comment"># password: password</span></span><br><span class="line">      <span class="comment">#a uthentication-database: admin</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 复制集</span></span><br><span class="line">      <span class="comment"># uri: mongodb://user:password@127.0.0.1:27040,127.0.0.1:27041,127.0.0.1:27042/mytest?authSource=admin&amp;readPreference=primaryPreferred</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>配置类:去掉<code>_class</code>属性</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MongoConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定制TypeMapper去掉_class属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    MappingMongoConverter <span class="title function_">mappingMongoConverter</span><span class="params">(</span></span><br><span class="line"><span class="params">            MongoDatabaseFactory mongoDatabaseFactory,</span></span><br><span class="line"><span class="params">            MongoMappingContext context, MongoCustomConversions conversions)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">DbRefResolver</span> <span class="variable">dbRefResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultDbRefResolver</span>(mongoDatabaseFactory);</span><br><span class="line">        <span class="type">MappingMongoConverter</span> <span class="variable">mappingMongoConverter</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">MappingMongoConverter</span>(dbRefResolver, context);</span><br><span class="line">        mappingMongoConverter.setCustomConversions(conversions);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//构造DefaultMongoTypeMapper，将typeKey设置为空值</span></span><br><span class="line">        mappingMongoConverter.setTypeMapper(<span class="keyword">new</span> <span class="title class_">DefaultMongoTypeMapper</span>(<span class="literal">null</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mappingMongoConverter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查询">查询</h2><ul class="lvl-0"><li class="lvl-2"><p>Mongo语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询集合中的若干文档</span></span><br><span class="line">db.collection.find(query, projection)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询集合中的第一个文档</span></span><br><span class="line">db.collection.findOne(query, projection)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你需要以易读的方式来读取数据，可以使用pretty()方法</span></span><br><span class="line">db.collection.find().pretty()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序，1 为升序排列，而 -1 是用于降序排列</span></span><br><span class="line">db.collection.find(query, projection).<span class="built_in">sort</span>(&#123;field:-1&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分页</span></span><br><span class="line"><span class="comment"># .skip(16) 表示跳过前面 16 条记录，即前两页的所有记录.</span></span><br><span class="line"><span class="comment"># .limit(8) 表示返回 8 条记录，即第三页的所有记录。</span></span><br><span class="line">db.collection.find().skip(16).<span class="built_in">limit</span>(8)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询记录数</span></span><br><span class="line">db.collection.countDocuments()</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>query ：可选，使用查询操作符指定查询条件</p></li><li class="lvl-4"><p>projection ：可选，使用投影操作符指定返回的键。查询时返回文档中所有键值， 只需省略该参数即可（默认省略）。投影时，_id为1的时候，其他字段必须是1；_id是0的时候，其他字段可以是0；如果没有_id字段约束，多个其他字段必须同为0或同为1。</p></li></ul><ul class="lvl-0"><li class="lvl-2"><p>查询操作符</p></li></ul><table><thead><tr><th>操作符</th><th>解释</th><th>示例</th><th>示例解释</th></tr></thead><tbody><tr><td><code>$lt</code></td><td>小于</td><td><code>db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lt&quot;: 25 &#125; &#125;)</code></td><td>查询年龄小于 25 的文档</td></tr><tr><td><code>$lte</code></td><td>小于等于</td><td><code>db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lte&quot;: 25 &#125; &#125;)</code></td><td>查询年龄小于等于 25 的文档</td></tr><tr><td><code>$gt</code></td><td>大于</td><td><code>db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gt&quot;: 25 &#125; &#125;)</code></td><td>查询年龄大于 25 的文档</td></tr><tr><td><code>$gte</code></td><td>大于等于</td><td><code>db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gte&quot;: 25 &#125; &#125;)</code></td><td>查询年龄大于等于 25 的文档</td></tr><tr><td><code>$ne</code></td><td>不等于</td><td><code>db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$ne&quot;: 25 &#125; &#125;)</code></td><td>查询年龄不等于 25 的文档</td></tr><tr><td><code>$in</code></td><td>在指定数组中</td><td><code>db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$in&quot;: [20, 25] &#125; &#125;)</code></td><td>查询年龄存在并且在指定数组中的文档</td></tr><tr><td><code>$nin</code></td><td>不在指定数组中</td><td><code>db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$nin&quot;: [20, 25] &#125; &#125;)</code></td><td>查询年龄不存在或者不在指定数组中的文档</td></tr><tr><td><code>$or</code></td><td>匹配两个或多个条件中的一个</td><td><code>db.collection.find(&#123; &quot;$or&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</code></td><td>查询年龄为 20 或者薪资大于 8000 的文档</td></tr><tr><td><code>$and</code></td><td>匹配全部条件</td><td><code>db.collection.find(&#123; &quot;$and&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</code></td><td>查询年龄为 20 并且薪资大于 8000 的文档</td></tr><tr><td><code>$all</code></td><td>匹配数组中所有元素满足指定条件</td><td><code>db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [ &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125; &#125;, &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;XL&quot; &#125; &#125; ] &#125; &#125;)</code></td><td>查询包含 tagKey 为 “color”，tagValue 为 “red” 的标签，并且包含 tagKey 为 “size”，tagValue 为 “XL” 的标签的文档</td></tr><tr><td><code>$elemMatch</code></td><td>匹配数组中至少一个元素满足指定条件</td><td><code>db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;blue&quot; &#125; &#125; &#125;)</code></td><td>查询包含 tagKey 为 “color”，tagValue 包含 “blue” 的标签的文档</td></tr><tr><td><code>$text</code></td><td>全文搜索</td><td><code>db.collection.find(&#123; &quot;$text&quot;: &#123; &quot;$search&quot;: &quot;searchTerm&quot; &#125; &#125;)</code></td><td>进行全文搜索，查找包含 “searchTerm” 的文档</td></tr><tr><td><code>$type</code></td><td>指定字段类型</td><td><code>db.collection.find(&#123; &quot;field&quot;: &#123; &quot;$type&quot;: &quot;string&quot; &#125; &#125;)</code></td><td>查询指定字段类型为字符串的文档</td></tr><tr><td><code>$size</code></td><td>数组长度</td><td><code>db.collection.find(&#123; &quot;field&quot;: &#123; &quot;$size&quot;: sizeValue &#125; &#125;)</code></td><td>查询指定字段数组长度为 sizeValue 的文档</td></tr><tr><td><code>$exists</code></td><td>字段存在</td><td><code>db.collection.find(&#123; &quot;field&quot;: &#123; &quot;$exists&quot;: true &#125; &#125;)</code></td><td>查询指定字段存在的文档</td></tr><tr><td><code>$mod</code></td><td>取模</td><td><code>db.collection.find(&#123; &quot;field&quot;: &#123; &quot;$mod&quot;: [divisor, remainder] &#125; &#125;)</code></td><td>查询指定字段取模后符合给定除数和余数的文档</td></tr></tbody></table><h3 id="SpringBoot代码示例">SpringBoot代码示例</h3><ul class="lvl-0"><li class="lvl-2"><p>操作<code>org.bson.Document</code>对象，无需创建实体映射对象，但操作时需要指定集合名称</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bson.Document;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.MongoTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.BasicQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Criteria;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasicTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    // 初始化数据</span></span><br><span class="line"><span class="comment">    db.collection.insertMany([</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;name&quot;: &quot;item1&quot;,</span></span><br><span class="line"><span class="comment">            &quot;age&quot;: 20,</span></span><br><span class="line"><span class="comment">            &quot;salary&quot;: 5000,</span></span><br><span class="line"><span class="comment">            &quot;colors&quot;: [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;],</span></span><br><span class="line"><span class="comment">            &quot;sizes&quot;: [&quot;S&quot;, &quot;M&quot;, &quot;L&quot;],</span></span><br><span class="line"><span class="comment">            &quot;tags&quot;: [</span></span><br><span class="line"><span class="comment">                &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125;,</span></span><br><span class="line"><span class="comment">                &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;M&quot; &#125;,</span></span><br><span class="line"><span class="comment">                &#123; &quot;tagKey&quot;: &quot;style&quot;, &quot;tagValue&quot;: &quot;casual&quot; &#125;</span></span><br><span class="line"><span class="comment">            ]</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;name&quot;: &quot;item2&quot;,</span></span><br><span class="line"><span class="comment">            &quot;age&quot;: 30,</span></span><br><span class="line"><span class="comment">            &quot;salary&quot;: 8000,</span></span><br><span class="line"><span class="comment">            &quot;colors&quot;: [&quot;green&quot;, &quot;yellow&quot;],</span></span><br><span class="line"><span class="comment">            &quot;sizes&quot;: [&quot;M&quot;, &quot;L&quot;, &quot;XL&quot;],</span></span><br><span class="line"><span class="comment">            &quot;tags&quot;: [</span></span><br><span class="line"><span class="comment">                &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;blue&quot; &#125;,</span></span><br><span class="line"><span class="comment">                &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;XL&quot; &#125;,</span></span><br><span class="line"><span class="comment">                &#123; &quot;tagKey&quot;: &quot;style&quot;, &quot;tagValue&quot;: &quot;formal&quot; &#125;</span></span><br><span class="line"><span class="comment">            ]</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            &quot;name&quot;: &quot;item3&quot;,</span></span><br><span class="line"><span class="comment">            &quot;age&quot;: 25,</span></span><br><span class="line"><span class="comment">            &quot;salary&quot;: 10000,</span></span><br><span class="line"><span class="comment">            &quot;colors&quot;: [&quot;red&quot;, &quot;green&quot;],</span></span><br><span class="line"><span class="comment">            &quot;sizes&quot;: [&quot;L&quot;, &quot;XL&quot;],</span></span><br><span class="line"><span class="comment">            &quot;tags&quot;: [</span></span><br><span class="line"><span class="comment">                &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;green&quot; &#125;,</span></span><br><span class="line"><span class="comment">                &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;L&quot; &#125;,</span></span><br><span class="line"><span class="comment">                &#123; &quot;tagKey&quot;: &quot;style&quot;, &quot;tagValue&quot;: &quot;casual&quot; &#125;</span></span><br><span class="line"><span class="comment">            ]</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    ]);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">initializeData</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Document&gt; documents = Arrays.asList(</span><br><span class="line">                <span class="comment">// 文档1</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;item1&quot;</span>)</span><br><span class="line">                        .append(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>)</span><br><span class="line">                        .append(<span class="string">&quot;salary&quot;</span>, <span class="number">5000</span>)</span><br><span class="line">                        .append(<span class="string">&quot;colors&quot;</span>, Arrays.asList(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>))</span><br><span class="line">                        .append(<span class="string">&quot;sizes&quot;</span>, Arrays.asList(<span class="string">&quot;S&quot;</span>, <span class="string">&quot;M&quot;</span>, <span class="string">&quot;L&quot;</span>))</span><br><span class="line">                        .append(<span class="string">&quot;tags&quot;</span>, Arrays.asList(</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;tagKey&quot;</span>, <span class="string">&quot;color&quot;</span>)</span><br><span class="line">                                        .append(<span class="string">&quot;tagValue&quot;</span>, <span class="string">&quot;red&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;tagKey&quot;</span>, <span class="string">&quot;size&quot;</span>)</span><br><span class="line">                                        .append(<span class="string">&quot;tagValue&quot;</span>, <span class="string">&quot;M&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;tagKey&quot;</span>, <span class="string">&quot;style&quot;</span>)</span><br><span class="line">                                        .append(<span class="string">&quot;tagValue&quot;</span>, <span class="string">&quot;casual&quot;</span>)</span><br><span class="line">                        )),</span><br><span class="line">                <span class="comment">// 文档2</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;item2&quot;</span>)</span><br><span class="line">                        .append(<span class="string">&quot;age&quot;</span>, <span class="number">30</span>)</span><br><span class="line">                        .append(<span class="string">&quot;salary&quot;</span>, <span class="number">8000</span>)</span><br><span class="line">                        .append(<span class="string">&quot;colors&quot;</span>, Arrays.asList(<span class="string">&quot;green&quot;</span>, <span class="string">&quot;yellow&quot;</span>))</span><br><span class="line">                        .append(<span class="string">&quot;sizes&quot;</span>, Arrays.asList(<span class="string">&quot;M&quot;</span>, <span class="string">&quot;L&quot;</span>, <span class="string">&quot;XL&quot;</span>))</span><br><span class="line">                        .append(<span class="string">&quot;tags&quot;</span>, Arrays.asList(</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;tagKey&quot;</span>, <span class="string">&quot;color&quot;</span>)</span><br><span class="line">                                        .append(<span class="string">&quot;tagValue&quot;</span>, <span class="string">&quot;blue&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;tagKey&quot;</span>, <span class="string">&quot;size&quot;</span>)</span><br><span class="line">                                        .append(<span class="string">&quot;tagValue&quot;</span>, <span class="string">&quot;XL&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;tagKey&quot;</span>, <span class="string">&quot;style&quot;</span>)</span><br><span class="line">                                        .append(<span class="string">&quot;tagValue&quot;</span>, <span class="string">&quot;formal&quot;</span>)</span><br><span class="line">                        )),</span><br><span class="line">                <span class="comment">// 文档3</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;item3&quot;</span>)</span><br><span class="line">                        .append(<span class="string">&quot;age&quot;</span>, <span class="number">25</span>)</span><br><span class="line">                        .append(<span class="string">&quot;salary&quot;</span>, <span class="number">10000</span>)</span><br><span class="line">                        .append(<span class="string">&quot;colors&quot;</span>, Arrays.asList(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;green&quot;</span>))</span><br><span class="line">                        .append(<span class="string">&quot;sizes&quot;</span>, Arrays.asList(<span class="string">&quot;L&quot;</span>, <span class="string">&quot;XL&quot;</span>))</span><br><span class="line">                        .append(<span class="string">&quot;tags&quot;</span>, Arrays.asList(</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;tagKey&quot;</span>, <span class="string">&quot;color&quot;</span>)</span><br><span class="line">                                        .append(<span class="string">&quot;tagValue&quot;</span>, <span class="string">&quot;green&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;tagKey&quot;</span>, <span class="string">&quot;size&quot;</span>)</span><br><span class="line">                                        .append(<span class="string">&quot;tagValue&quot;</span>, <span class="string">&quot;L&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Document</span>().append(<span class="string">&quot;tagKey&quot;</span>, <span class="string">&quot;style&quot;</span>)</span><br><span class="line">                                        .append(<span class="string">&quot;tagValue&quot;</span>, <span class="string">&quot;casual&quot;</span>)</span><br><span class="line">                        ))</span><br><span class="line">        );</span><br><span class="line">        <span class="comment">// 这里要指定集合名称</span></span><br><span class="line">        mongoTemplate.insert(documents, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 也可以通过json来构建Document对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">initializeData2</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;String&gt; jsonList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        jsonList.add(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    &quot;name&quot;: &quot;item1&quot;,</span></span><br><span class="line"><span class="string">                    &quot;age&quot;: 20,</span></span><br><span class="line"><span class="string">                    &quot;salary&quot;: 5000,</span></span><br><span class="line"><span class="string">                    &quot;colors&quot;: [&quot;red&quot;, &quot;blue&quot;, &quot;green&quot;],</span></span><br><span class="line"><span class="string">                    &quot;sizes&quot;: [&quot;S&quot;, &quot;M&quot;, &quot;L&quot;],</span></span><br><span class="line"><span class="string">                    &quot;tags&quot;: [</span></span><br><span class="line"><span class="string">                        &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125;,</span></span><br><span class="line"><span class="string">                        &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;M&quot; &#125;,</span></span><br><span class="line"><span class="string">                        &#123; &quot;tagKey&quot;: &quot;style&quot;, &quot;tagValue&quot;: &quot;casual&quot; &#125;</span></span><br><span class="line"><span class="string">                    ]</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span>);</span><br><span class="line">        jsonList.add(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    &quot;name&quot;: &quot;item2&quot;,</span></span><br><span class="line"><span class="string">                    &quot;age&quot;: 30,</span></span><br><span class="line"><span class="string">                    &quot;salary&quot;: 8000,</span></span><br><span class="line"><span class="string">                    &quot;colors&quot;: [&quot;green&quot;, &quot;yellow&quot;],</span></span><br><span class="line"><span class="string">                    &quot;sizes&quot;: [&quot;M&quot;, &quot;L&quot;, &quot;XL&quot;],</span></span><br><span class="line"><span class="string">                    &quot;tags&quot;: [</span></span><br><span class="line"><span class="string">                        &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;blue&quot; &#125;,</span></span><br><span class="line"><span class="string">                        &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;XL&quot; &#125;,</span></span><br><span class="line"><span class="string">                        &#123; &quot;tagKey&quot;: &quot;style&quot;, &quot;tagValue&quot;: &quot;formal&quot; &#125;</span></span><br><span class="line"><span class="string">                    ]</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span>);</span><br><span class="line">        jsonList.add(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    &quot;name&quot;: &quot;item3&quot;,</span></span><br><span class="line"><span class="string">                    &quot;age&quot;: 25,</span></span><br><span class="line"><span class="string">                    &quot;salary&quot;: 10000,</span></span><br><span class="line"><span class="string">                    &quot;colors&quot;: [&quot;red&quot;, &quot;green&quot;],</span></span><br><span class="line"><span class="string">                    &quot;sizes&quot;: [&quot;L&quot;, &quot;XL&quot;],</span></span><br><span class="line"><span class="string">                    &quot;tags&quot;: [</span></span><br><span class="line"><span class="string">                        &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;green&quot; &#125;,</span></span><br><span class="line"><span class="string">                        &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;L&quot; &#125;,</span></span><br><span class="line"><span class="string">                        &#123; &quot;tagKey&quot;: &quot;style&quot;, &quot;tagValue&quot;: &quot;casual&quot; &#125;</span></span><br><span class="line"><span class="string">                    ]</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;Document&gt; documents = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String json : jsonList) &#123;</span><br><span class="line">            <span class="comment">// 通过Document.parse()方法将json字符串转换为Document对象</span></span><br><span class="line">            documents.add(Document.parse(json));</span><br><span class="line">        &#125;</span><br><span class="line">        mongoTemplate.insert(documents, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testQueries</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">QueryExecutor</span> <span class="variable">queryExecutor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryExecutor</span>(mongoTemplate);</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lt&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeLessThan25&quot;</span>, queryExecutor.findAgeLessThan25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lte&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeLessThanOrEqualTo25&quot;</span>, queryExecutor.findAgeLessThanOrEqualTo25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gt&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeGreaterThan25&quot;</span>, queryExecutor.findAgeGreaterThan25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gte&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeGreaterThanOrEqualTo25&quot;</span>, queryExecutor.findAgeGreaterThanOrEqualTo25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$ne&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeNotEqualTo25&quot;</span>, queryExecutor.findAgeNotEqualTo25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$in&quot;: [20, 25] &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeInArray&quot;</span>, queryExecutor.findAgeInArray(List.of(<span class="number">20</span>, <span class="number">25</span>)));</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$nin&quot;: [20, 25] &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeNotInArray&quot;</span>, queryExecutor.findAgeNotInArray(List.of(<span class="number">20</span>, <span class="number">25</span>)));</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;$or&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeOrSalary&quot;</span>, queryExecutor.findAgeOrSalary());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;$and&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeAndSalary&quot;</span>, queryExecutor.findAgeAndSalary());</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125; &#125;,</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;XL&quot; &#125; &#125;</span></span><br><span class="line"><span class="comment">        ]&#125;&#125;)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        printResult(<span class="string">&quot;findTagsWithColorAndSize&quot;</span>, queryExecutor.findTagsWithColorAndSize());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /blue/ &#125; &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findTagsWithColorContainingBlue&quot;</span>, queryExecutor.findTagsWithColorContainingBlue());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags.tagKey&quot;: &quot;color&quot; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findTagsWithColor&quot;</span>, queryExecutor.findTagsWithColor());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$size&quot;: 3 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findDocumentWithTagsSizeThree&quot;</span>, queryExecutor.findDocumentWithTagsSizeThree());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125; &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findDocumentWithSpecificTag&quot;</span>, queryExecutor.findDocumentWithSpecificTag());</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /green/ &#125; &#125;</span></span><br><span class="line"><span class="comment">        ]&#125;&#125;)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        printResult(<span class="string">&quot;findAllElementsWithSpecificTag&quot;</span>, queryExecutor.findAllElementsWithSpecificTag());</span><br><span class="line">        printResult(<span class="string">&quot;findAllElementsWithSpecificTagByJson&quot;</span>, queryExecutor.findAllElementsWithSpecificTagByJson());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printResult</span><span class="params">(String queryName, List&lt;Document&gt; result)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Query: &quot;</span> + queryName + <span class="string">&quot; ###################################################&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Document document : result) &#123;</span><br><span class="line">            System.out.println(document);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">QueryExecutor</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">QueryExecutor</span><span class="params">(MongoTemplate mongoTemplate)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.mongoTemplate = mongoTemplate;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄小于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lt&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAgeLessThan25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).lt(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄小于等于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lte&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAgeLessThanOrEqualTo25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).lte(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄大于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gt&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAgeGreaterThan25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).gt(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄大于等于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gte&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAgeGreaterThanOrEqualTo25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).gte(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄不等于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$ne&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAgeNotEqualTo25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).ne(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄存在并且在指定数组中的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$in&quot;: [20, 25] &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAgeInArray</span><span class="params">(List&lt;Integer&gt; ages)</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).in(ages));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄不存在或者不在指定数组中的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$nin&quot;: [20, 25] &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAgeNotInArray</span><span class="params">(List&lt;Integer&gt; ages)</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).nin(ages));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄存在并且为 20，或者薪资大于 8000 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;$or&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAgeOrSalary</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(<span class="keyword">new</span> <span class="title class_">Criteria</span>().orOperator(Criteria.where(<span class="string">&quot;age&quot;</span>).is(<span class="number">20</span>), Criteria.where(<span class="string">&quot;salary&quot;</span>).gt(<span class="number">8000</span>)));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄为 20，并且薪资大于 8000 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;$and&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAgeAndSalary</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(<span class="keyword">new</span> <span class="title class_">Criteria</span>().andOperator(Criteria.where(<span class="string">&quot;age&quot;</span>).is(<span class="number">20</span>), Criteria.where(<span class="string">&quot;salary&quot;</span>).gt(<span class="number">8000</span>)));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询包含 tagKey 为 &quot;color&quot;，tagValue 为 &quot;red&quot; 的标签，并且包含 tagKey 为 &quot;size&quot;，tagValue 为 &quot;XL&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125; &#125;,</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;XL&quot; &#125; &#125;</span></span><br><span class="line"><span class="comment">        ]&#125;&#125;)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findTagsWithColorAndSize</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Criteria</span>().andOperator(Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).is(<span class="string">&quot;red&quot;</span>)), Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;size&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).is(<span class="string">&quot;XL&quot;</span>)));</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询包含 tagKey 为 &quot;color&quot;，tagValue 包含 &quot;blue&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /blue/ &#125; &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findTagsWithColorContainingBlue</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).regex(<span class="string">&quot;blue&quot;</span>)));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询包含 tagKey 为 &quot;color&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags.tagKey&quot;: &quot;color&quot; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findTagsWithColor</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags.tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询 tags 数组长度为 3 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$size&quot;: 3 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findDocumentWithTagsSizeThree</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags&quot;</span>).size(<span class="number">3</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询包含 tagKey 为 &quot;color&quot;，tagValue 为 &quot;red&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125; &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findDocumentWithSpecificTag</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).is(<span class="string">&quot;red&quot;</span>)));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询 tags 数组所有元素满足 tagKey 为 &quot;color&quot;，tagValue 包含 &quot;green&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /green/ &#125; &#125;</span></span><br><span class="line"><span class="comment">        ]&#125;&#125;)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAllElementsWithSpecificTag</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).regex(<span class="string">&quot;green&quot;</span>)));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询 tags 数组所有元素满足 tagKey 为 &quot;color&quot;，tagValue 包含 &quot;green&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">// 使用 BasicQuery，可以使用 json 字符串，这样就可以直接使用 mongo 的查询语法</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Document&gt; <span class="title function_">findAllElementsWithSpecificTagByJson</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                    &#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="string">                                &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /green/ &#125; &#125;</span></span><br><span class="line"><span class="string">                            ]&#125;&#125;</span></span><br><span class="line"><span class="string">                    &quot;&quot;&quot;</span>;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BasicQuery</span>(json);</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Document.class, <span class="string">&quot;collection&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>操作实体类</p></li></ul><table><thead><tr><th>相关注解</th><th>修饰范围</th><th>作用</th><th>属性</th></tr></thead><tbody><tr><td>@Document</td><td>类</td><td>映射类对象为Mongo文档</td><td>value, collection</td></tr><tr><td>@Id</td><td>成员变量、方法</td><td>将成员变量值映射为文档的_id的值</td><td></td></tr><tr><td>@Field</td><td>成员变量、方法</td><td>将成员变量及值映射为文档中key:value对</td><td>name, value</td></tr><tr><td>@Transient</td><td>成员变量、方法</td><td>指定成员变量不参与文档的序列化</td><td></td></tr></tbody></table><ul class="lvl-0"><li class="lvl-4"><p>使用 @Document 注解指定集合名</p></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqf.mongo.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.annotation.Id;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.mapping.Document;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.mapping.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Document(collection = &quot;collection&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Item</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@Field</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Field</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="meta">@Field</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> salary;</span><br><span class="line">    <span class="meta">@Field</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; colors;</span><br><span class="line">    <span class="meta">@Field</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; sizes;</span><br><span class="line">    <span class="meta">@Field</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Tag&gt; tags;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Item</span><span class="params">(String name, <span class="type">int</span> age, <span class="type">double</span> salary, List&lt;String&gt; colors, List&lt;String&gt; sizes, List&lt;Tag&gt; tags)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">        <span class="built_in">this</span>.colors = colors;</span><br><span class="line">        <span class="built_in">this</span>.sizes = sizes;</span><br><span class="line">        <span class="built_in">this</span>.tags = tags;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Tag</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> String tagKey;</span><br><span class="line">        <span class="keyword">private</span> String tagValue;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>查询示例</p></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hanqf.mongo.model.Item;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.MongoTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.BasicQuery;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Criteria;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Query;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasicTests2</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">initializeData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// Initialize data</span></span><br><span class="line">        List&lt;Item&gt; items = Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="string">&quot;item1&quot;</span>, <span class="number">20</span>, <span class="number">5000</span>,</span><br><span class="line">                        Arrays.asList(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>),</span><br><span class="line">                        Arrays.asList(<span class="string">&quot;S&quot;</span>, <span class="string">&quot;M&quot;</span>, <span class="string">&quot;L&quot;</span>),</span><br><span class="line">                        Arrays.asList(<span class="keyword">new</span> <span class="title class_">Item</span>.Tag(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;red&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Item</span>.Tag(<span class="string">&quot;size&quot;</span>, <span class="string">&quot;M&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Item</span>.Tag(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;casual&quot;</span>))),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="string">&quot;item2&quot;</span>, <span class="number">30</span>, <span class="number">8000</span>,</span><br><span class="line">                        Arrays.asList(<span class="string">&quot;green&quot;</span>, <span class="string">&quot;yellow&quot;</span>),</span><br><span class="line">                        Arrays.asList(<span class="string">&quot;M&quot;</span>, <span class="string">&quot;L&quot;</span>, <span class="string">&quot;XL&quot;</span>),</span><br><span class="line">                        Arrays.asList(<span class="keyword">new</span> <span class="title class_">Item</span>.Tag(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;blue&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Item</span>.Tag(<span class="string">&quot;size&quot;</span>, <span class="string">&quot;XL&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Item</span>.Tag(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;formal&quot;</span>))),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Item</span>(<span class="string">&quot;item3&quot;</span>, <span class="number">25</span>, <span class="number">10000</span>,</span><br><span class="line">                        Arrays.asList(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;green&quot;</span>),</span><br><span class="line">                        Arrays.asList(<span class="string">&quot;L&quot;</span>, <span class="string">&quot;XL&quot;</span>),</span><br><span class="line">                        Arrays.asList(<span class="keyword">new</span> <span class="title class_">Item</span>.Tag(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;green&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Item</span>.Tag(<span class="string">&quot;size&quot;</span>, <span class="string">&quot;L&quot;</span>),</span><br><span class="line">                                <span class="keyword">new</span> <span class="title class_">Item</span>.Tag(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;casual&quot;</span>)))</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        mongoTemplate.insertAll(items);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">testQueries</span><span class="params">()</span> &#123;</span><br><span class="line">        BasicTests2.<span class="type">QueryExecutor</span> <span class="variable">queryExecutor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BasicTests2</span>.QueryExecutor(mongoTemplate);</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lt&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeLessThan25&quot;</span>, queryExecutor.findAgeLessThan25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lte&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeLessThanOrEqualTo25&quot;</span>, queryExecutor.findAgeLessThanOrEqualTo25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gt&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeGreaterThan25&quot;</span>, queryExecutor.findAgeGreaterThan25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gte&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeGreaterThanOrEqualTo25&quot;</span>, queryExecutor.findAgeGreaterThanOrEqualTo25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$ne&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeNotEqualTo25&quot;</span>, queryExecutor.findAgeNotEqualTo25());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$in&quot;: [20, 25] &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeInArray&quot;</span>, queryExecutor.findAgeInArray(List.of(<span class="number">20</span>, <span class="number">25</span>)));</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$nin&quot;: [20, 25] &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeNotInArray&quot;</span>, queryExecutor.findAgeNotInArray(List.of(<span class="number">20</span>, <span class="number">25</span>)));</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;$or&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeOrSalary&quot;</span>, queryExecutor.findAgeOrSalary());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;$and&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findAgeAndSalary&quot;</span>, queryExecutor.findAgeAndSalary());</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125; &#125;,</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;XL&quot; &#125; &#125;</span></span><br><span class="line"><span class="comment">        ]&#125;&#125;)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        printResult(<span class="string">&quot;findTagsWithColorAndSize&quot;</span>, queryExecutor.findTagsWithColorAndSize());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /blue/ &#125; &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findTagsWithColorContainingBlue&quot;</span>, queryExecutor.findTagsWithColorContainingBlue());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags.tagKey&quot;: &quot;color&quot; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findTagsWithColor&quot;</span>, queryExecutor.findTagsWithColor());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$size&quot;: 3 &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findDocumentWithTagsSizeThree&quot;</span>, queryExecutor.findDocumentWithTagsSizeThree());</span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125; &#125; &#125;)</span></span><br><span class="line">        printResult(<span class="string">&quot;findDocumentWithSpecificTag&quot;</span>, queryExecutor.findDocumentWithSpecificTag());</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /green/ &#125; &#125;</span></span><br><span class="line"><span class="comment">        ]&#125;&#125;)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        printResult(<span class="string">&quot;findAllElementsWithSpecificTag&quot;</span>, queryExecutor.findAllElementsWithSpecificTag());</span><br><span class="line">        printResult(<span class="string">&quot;findAllElementsWithSpecificTagByJson&quot;</span>, queryExecutor.findAllElementsWithSpecificTagByJson());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">printResult</span><span class="params">(String queryName, List&lt;Item&gt; result)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Query: &quot;</span> + queryName + <span class="string">&quot; ###################################################&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Item item : result) &#123;</span><br><span class="line">            System.out.println(item);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">QueryExecutor</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">QueryExecutor</span><span class="params">(MongoTemplate mongoTemplate)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.mongoTemplate = mongoTemplate;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄小于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lt&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAgeLessThan25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).lt(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄小于等于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$lte&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAgeLessThanOrEqualTo25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).lte(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄大于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gt&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAgeGreaterThan25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).gt(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄大于等于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$gte&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAgeGreaterThanOrEqualTo25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).gte(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄不等于 25 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$ne&quot;: 25 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAgeNotEqualTo25</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).ne(<span class="number">25</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄存在并且在指定数组中的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$in&quot;: [20, 25] &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAgeInArray</span><span class="params">(List&lt;Integer&gt; ages)</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).in(ages));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄不存在或者不在指定数组中的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;age&quot;: &#123; &quot;$nin&quot;: [20, 25] &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAgeNotInArray</span><span class="params">(List&lt;Integer&gt; ages)</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;age&quot;</span>).nin(ages));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄存在并且为 20，或者薪资大于 8000 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;$or&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAgeOrSalary</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(<span class="keyword">new</span> <span class="title class_">Criteria</span>().orOperator(</span><br><span class="line">                    Criteria.where(<span class="string">&quot;age&quot;</span>).is(<span class="number">20</span>),</span><br><span class="line">                    Criteria.where(<span class="string">&quot;salary&quot;</span>).gt(<span class="number">8000</span>)</span><br><span class="line">            ));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询年龄为 20，并且薪资大于 8000 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;$and&quot;: [ &#123; &quot;age&quot;: 20 &#125;, &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 8000 &#125; &#125; ] &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAgeAndSalary</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(<span class="keyword">new</span> <span class="title class_">Criteria</span>().andOperator(</span><br><span class="line">                    Criteria.where(<span class="string">&quot;age&quot;</span>).is(<span class="number">20</span>),</span><br><span class="line">                    Criteria.where(<span class="string">&quot;salary&quot;</span>).gt(<span class="number">8000</span>)</span><br><span class="line">            ));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询包含 tagKey 为 &quot;color&quot;，tagValue 为 &quot;red&quot; 的标签，并且包含 tagKey 为 &quot;size&quot;，tagValue 为 &quot;XL&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125; &#125;,</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;size&quot;, &quot;tagValue&quot;: &quot;XL&quot; &#125; &#125;</span></span><br><span class="line"><span class="comment">        ]&#125;&#125;)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findTagsWithColorAndSize</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Criteria</span>().andOperator(</span><br><span class="line">                    Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(</span><br><span class="line">                            Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).is(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">                    ),</span><br><span class="line">                    Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(</span><br><span class="line">                            Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;size&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).is(<span class="string">&quot;XL&quot;</span>)</span><br><span class="line">                    )</span><br><span class="line">            );</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(criteria);</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询包含 tagKey 为 &quot;color&quot;，tagValue 包含 &quot;blue&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /blue/ &#125; &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findTagsWithColorContainingBlue</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(</span><br><span class="line">                    Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).regex(<span class="string">&quot;blue&quot;</span>)</span><br><span class="line">            ));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询包含 tagKey 为 &quot;color&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags.tagKey&quot;: &quot;color&quot; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findTagsWithColor</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags.tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询 tags 数组长度为 3 的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$size&quot;: 3 &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findDocumentWithTagsSizeThree</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags&quot;</span>).size(<span class="number">3</span>));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询包含 tagKey 为 &quot;color&quot;，tagValue 为 &quot;red&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">// db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: &quot;red&quot; &#125; &#125; &#125;)</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findDocumentWithSpecificTag</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(</span><br><span class="line">                    Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).is(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">            ));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询 tags 数组所有元素满足 tagKey 为 &quot;color&quot;，tagValue 包含 &quot;green&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        db.collection.find(&#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="comment">            &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /green/ &#125; &#125;</span></span><br><span class="line"><span class="comment">        ]&#125;&#125;)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAllElementsWithSpecificTag</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;tags&quot;</span>).elemMatch(</span><br><span class="line">                    Criteria.where(<span class="string">&quot;tagKey&quot;</span>).is(<span class="string">&quot;color&quot;</span>).and(<span class="string">&quot;tagValue&quot;</span>).regex(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">            ));</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询 tags 数组所有元素满足 tagKey 为 &quot;color&quot;，tagValue 包含 &quot;green&quot; 的标签的文档</span></span><br><span class="line">        <span class="comment">// 使用 BasicQuery，可以使用 json 字符串，这样就可以直接使用 mongo 的查询语法</span></span><br><span class="line">        <span class="keyword">public</span> List&lt;Item&gt; <span class="title function_">findAllElementsWithSpecificTagByJson</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">json</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                    &#123; &quot;tags&quot;: &#123; &quot;$all&quot;: [</span></span><br><span class="line"><span class="string">                                &#123; &quot;$elemMatch&quot;: &#123; &quot;tagKey&quot;: &quot;color&quot;, &quot;tagValue&quot;: /green/ &#125; &#125;</span></span><br><span class="line"><span class="string">                            ]&#125;&#125;</span></span><br><span class="line"><span class="string">                    &quot;&quot;&quot;</span>;</span><br><span class="line">            <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BasicQuery</span>(json);</span><br><span class="line">            System.out.println(query); <span class="comment">// 打印出生成的查询字符串</span></span><br><span class="line">            <span class="keyword">return</span> mongoTemplate.find(query, Item.class);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="常用的查询方法">常用的查询方法</h3><ul class="lvl-0"><li class="lvl-4"><p>查询所有文档</p></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// db.employee.find()</span></span><br><span class="line">List&lt;Employee&gt; list = mongoTemplate.findAll(Employee.class);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>根据_id查询</p></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// db.employee.findOne(&#123; &quot;_id&quot;: 1 &#125;)|</span></span><br><span class="line"><span class="type">Employee</span> <span class="variable">e</span> <span class="operator">=</span> mongoTemplate.findById(<span class="number">1</span>, Employee.class);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>查询第一个文档</p></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// db.employee.findOne(&#123;&#125;)</span></span><br><span class="line"><span class="type">Employee</span> <span class="variable">e</span> <span class="operator">=</span> mongoTemplate.findOne(<span class="keyword">new</span> <span class="title class_">Query</span>(), Employee.class);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>条件查询，排序及分页</p></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.employee.find(&#123;</span></span><br><span class="line"><span class="comment">          &quot;$or&quot;: [</span></span><br><span class="line"><span class="comment">              &#123; &quot;username&quot;: &quot;张三&quot; &#125;,</span></span><br><span class="line"><span class="comment">              &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 5000 &#125; &#125;</span></span><br><span class="line"><span class="comment">          ]</span></span><br><span class="line"><span class="comment">      &#125;).sort(&#123; &quot;salary&quot;: -1 &#125;).skip(2).limit(4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(<span class="keyword">new</span> <span class="title class_">Criteria</span>().orOperator(Criteria.where(<span class="string">&quot;name&quot;</span>).is(<span class="string">&quot;张三&quot;</span>), Criteria.where(<span class="string">&quot;salary&quot;</span>).gt(<span class="number">5000</span>)););</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果你不熟悉 Criteria，但是熟悉 mongo 的查询语法，可以使用 BasicQuery</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  String json = &quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">          &#123;</span></span><br><span class="line"><span class="comment">              &quot;$or&quot;: [</span></span><br><span class="line"><span class="comment">                  &#123; &quot;username&quot;: &quot;张三&quot; &#125;,</span></span><br><span class="line"><span class="comment">                  &#123; &quot;salary&quot;: &#123; &quot;$gt&quot;: 5000 &#125; &#125;</span></span><br><span class="line"><span class="comment">              ]</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">          &quot;&quot;&quot;;</span></span><br><span class="line"><span class="comment">  Query query = new BasicQuery(json);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//skip limit 分页  skip用于指定跳过记录数，limit则用于限定返回结果数量。</span></span><br><span class="line">query.with(Sort.by(Sort.Order.desc(<span class="string">&quot;salary&quot;</span>)))</span><br><span class="line">        .skip(<span class="number">2</span>)  <span class="comment">//指定跳过记录数</span></span><br><span class="line">        .limit(<span class="number">4</span>);  <span class="comment">//每页显示记录数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查询结果</span></span><br><span class="line">List&lt;Employee&gt; employees = mongoTemplate.find(</span><br><span class="line">        query, Employee.class);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>只返回部分字段</p></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.employee.find(</span></span><br><span class="line"><span class="comment">  &#123; &quot;age&quot;: &#123; &quot;$gte&quot;: 18 &#125; &#125;,  // 筛选条件，年龄大于等于18岁的文档</span></span><br><span class="line"><span class="comment">  &#123; &quot;name&quot;: 1, &quot;age&quot;: 1 &#125;      // 指定返回的字段，只包含&quot;name&quot;和&quot;age&quot;，其中1表示包含该字段，0表示不包含</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>();</span><br><span class="line">query.addCriteria(Criteria.where(<span class="string">&quot;age&quot;</span>).gte(<span class="number">18</span>)); <span class="comment">// 筛选条件，年龄大于等于18岁的文档</span></span><br><span class="line">query.fields().include(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>).exclude(<span class="string">&quot;id&quot;</span>);<span class="comment">// 指定返回的字段，只包含&quot;name&quot;和&quot;age&quot;，要去除id，否则默认会返回id</span></span><br><span class="line">List&lt;Employee&gt; results = mongoTemplate.find(query, Employee.class);</span><br><span class="line"><span class="comment">// Employee(id=null, name=张三, age=21, salary=null, entryDay=null)</span></span><br><span class="line">results.forEach(System.out::println);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>去重</p></li></ul><blockquote><p>distinct 方法只能直接获取唯一值，并不能在查询过程中进行其他的聚合操作，使用场景非常受限，推荐使用聚合方式进行查询</p></blockquote>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//语法：db.collectionName.distinct(&quot;fieldName&quot;, &#123; /* 过滤条件 */ &#125;)，这将返回指定字段 fieldName 的唯一值数组。</span></span><br><span class="line"><span class="comment">// 示例：db.collection.distinct(&quot;name&quot;,&#123;age:&#123;$gte:25&#125;&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方式1</span></span><br><span class="line">DistinctIterable&lt;String&gt; distinctIterable = mongoTemplate.getCollection(<span class="string">&quot;collection&quot;</span>)</span><br><span class="line">        .distinct(<span class="string">&quot;name&quot;</span>, BsonDocument.parse(<span class="string">&quot;&#123;age:&#123;$gte:25&#125;&#125;&quot;</span>), String.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方式2</span></span><br><span class="line"><span class="comment">// DistinctIterable&lt;String&gt; distinctIterable = mongoTemplate.getCollection(&quot;collection&quot;)</span></span><br><span class="line"><span class="comment">//        .distinct(&quot;name&quot;, new Document(&quot;age&quot;, new Document(&quot;$gte&quot;, 25)), String.class);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将DistinctIterable转换为List</span></span><br><span class="line">List&lt;String&gt; distinctNames = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">distinctIterable.iterator().forEachRemaining(distinctNames::add);</span><br><span class="line"><span class="comment">// 打印输出</span></span><br><span class="line">distinctNames.forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 聚合方式，聚合方式的详细说明会在下一篇博客中介绍</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  db.collection.aggregate([</span></span><br><span class="line"><span class="comment">      &#123;</span></span><br><span class="line"><span class="comment">          $match: &#123; age: &#123; $gte: 25 &#125; &#125;</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">      &#123;</span></span><br><span class="line"><span class="comment">          $group: &#123;</span></span><br><span class="line"><span class="comment">              _id: &quot;$name&quot;</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">  ])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Aggregation</span> <span class="variable">aggregation</span> <span class="operator">=</span> Aggregation.newAggregation(</span><br><span class="line">              Aggregation.match(Criteria.where(<span class="string">&quot;age&quot;</span>).gte(<span class="number">25</span>)),</span><br><span class="line">              Aggregation.group(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">      );</span><br><span class="line"></span><br><span class="line">      AggregationResults&lt;Document&gt; results = mongoTemplate.aggregate(aggregation, <span class="string">&quot;collection&quot;</span>, Document.class);</span><br><span class="line">      List&lt;String&gt; distinctNames = results.getMappedResults().stream()</span><br><span class="line">              .map(document -&gt; document.getString(<span class="string">&quot;_id&quot;</span>))</span><br><span class="line">              .toList();</span><br><span class="line"></span><br><span class="line">      distinctNames.forEach(System.out::println);</span><br></pre></td></tr></table></figure><blockquote><p>SpringBoot对Mongo的查询，其实就是如何通过Criteria来构建一个Query，所以我们的目标就是要熟练掌握Criteria的语法。当然，如果你熟悉Mongo的查询语法，也可以直接使用BasicQuery来实现Mongo的查询。</p></blockquote><h2 id="插入">插入</h2><ul class="lvl-0"><li class="lvl-2"><p>Mongo语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 插入单个文档</span></span><br><span class="line">db.collection.insertOne(</span><br><span class="line">   &lt;document&gt;,</span><br><span class="line">   &#123;</span><br><span class="line">      writeConcern: &lt;document&gt;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">db.demo.insertOne(</span><br><span class="line">   &#123; name: <span class="string">&quot;张三&quot;</span>, age: 35&#125;,</span><br><span class="line">   &#123;</span><br><span class="line">      writeConcern: &#123; w: <span class="string">&quot;majority&quot;</span>, j: <span class="literal">true</span>, wtimeout: 5000 &#125;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入多个文档</span></span><br><span class="line">db.collection.insertMany(</span><br><span class="line">   [ &lt;document 1&gt; , &lt;document 2&gt;, ... ],</span><br><span class="line">   &#123;</span><br><span class="line">      writeConcern: &lt;document&gt;,</span><br><span class="line">      ordered: &lt;boolean&gt;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>writeConcern 是 MongoDB 中用来控制写入确认的选项，可选。以下是 writeConcern 参数的一些常见选项：</p></blockquote><ul class="lvl-0"><li class="lvl-4"><p>w：指定写入确认级别。如果指定为数字，则表示要等待写入操作完成的节点数。如果指定为 majority，则表示等待大多数节点完成写入操作。默认为 1，表示等待写入操作完成的节点数为 1。</p></li><li class="lvl-4"><p>j：表示写入操作是否要求持久化到磁盘。如果设置为 true，则表示写入操作必须持久化到磁盘后才返回成功。如果设置为 false，则表示写入操作可能在数据被持久化到磁盘之前返回成功。默认为 false。</p></li><li class="lvl-4"><p>wtimeout：表示等待写入操作完成的超时时间，单位为毫秒。如果超过指定的时间仍然没有返回确认信息，则返回错误。默认为 0，表示不设置超时时间。</p></li></ul><blockquote><p>ordered：指定是否按顺序写入，默认 true，按顺序写入。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>插入单个文档</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  db.employee.insertOne(&#123;</span></span><br><span class="line"><span class="comment">      &quot;_id&quot;: 1,</span></span><br><span class="line"><span class="comment">      &quot;username&quot;: &quot;小明&quot;,</span></span><br><span class="line"><span class="comment">      &quot;age&quot;: 30,</span></span><br><span class="line"><span class="comment">      &quot;salary&quot;: 10000.00,</span></span><br><span class="line"><span class="comment">      &quot;entryDay&quot;: new Date()</span></span><br><span class="line"><span class="comment">  &#125;)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1</span>, <span class="string">&quot;小明&quot;</span>, <span class="number">30</span>, <span class="number">10000.00</span>, <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">mongoTemplate.insert(employee);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>插入多个文档</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  db.employee.insertMany([</span></span><br><span class="line"><span class="comment">      &#123;</span></span><br><span class="line"><span class="comment">          &quot;_id&quot;: 2,</span></span><br><span class="line"><span class="comment">          &quot;username&quot;: &quot;张三&quot;,</span></span><br><span class="line"><span class="comment">          &quot;age&quot;: 21,</span></span><br><span class="line"><span class="comment">          &quot;salary&quot;: 5000.00,</span></span><br><span class="line"><span class="comment">          &quot;entryDay&quot;: new Date()</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">      &#123;</span></span><br><span class="line"><span class="comment">          &quot;_id&quot;: 3,</span></span><br><span class="line"><span class="comment">          &quot;username&quot;: &quot;李四&quot;,</span></span><br><span class="line"><span class="comment">          &quot;age&quot;: 26,</span></span><br><span class="line"><span class="comment">          &quot;salary&quot;: 8000.00,</span></span><br><span class="line"><span class="comment">          &quot;entryDay&quot;: new Date()</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">      &#123;</span></span><br><span class="line"><span class="comment">          &quot;_id&quot;: 4,</span></span><br><span class="line"><span class="comment">          &quot;username&quot;: &quot;王五&quot;,</span></span><br><span class="line"><span class="comment">          &quot;age&quot;: 22,</span></span><br><span class="line"><span class="comment">          &quot;salary&quot;: 8000.00,</span></span><br><span class="line"><span class="comment">          &quot;entryDay&quot;: new Date()</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">      &#123;</span></span><br><span class="line"><span class="comment">          &quot;_id&quot;: 5,</span></span><br><span class="line"><span class="comment">          &quot;username&quot;: &quot;张龙&quot;,</span></span><br><span class="line"><span class="comment">          &quot;age&quot;: 28,</span></span><br><span class="line"><span class="comment">          &quot;salary&quot;: 6000.00,</span></span><br><span class="line"><span class="comment">          &quot;entryDay&quot;: new Date()</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">      &#123;</span></span><br><span class="line"><span class="comment">          &quot;_id&quot;: 6,</span></span><br><span class="line"><span class="comment">          &quot;username&quot;: &quot;赵虎&quot;,</span></span><br><span class="line"><span class="comment">          &quot;age&quot;: 24,</span></span><br><span class="line"><span class="comment">          &quot;salary&quot;: 7000.00,</span></span><br><span class="line"><span class="comment">          &quot;entryDay&quot;: new Date()</span></span><br><span class="line"><span class="comment">      &#125;,</span></span><br><span class="line"><span class="comment">      &#123;</span></span><br><span class="line"><span class="comment">          &quot;_id&quot;: 7,</span></span><br><span class="line"><span class="comment">          &quot;username&quot;: &quot;赵六&quot;,</span></span><br><span class="line"><span class="comment">          &quot;age&quot;: 28,</span></span><br><span class="line"><span class="comment">          &quot;salary&quot;: 12000.00,</span></span><br><span class="line"><span class="comment">          &quot;entryDay&quot;: new Date()</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">  ])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">List&lt;Employee&gt; list = Arrays.asList(</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">2</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">21</span>, <span class="number">5000.00</span>, <span class="keyword">new</span> <span class="title class_">Date</span>()),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">3</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">26</span>, <span class="number">8000.00</span>, <span class="keyword">new</span> <span class="title class_">Date</span>()),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">4</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">22</span>, <span class="number">8000.00</span>, <span class="keyword">new</span> <span class="title class_">Date</span>()),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">5</span>, <span class="string">&quot;张龙&quot;</span>, <span class="number">28</span>, <span class="number">6000.00</span>, <span class="keyword">new</span> <span class="title class_">Date</span>()),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">6</span>, <span class="string">&quot;赵虎&quot;</span>, <span class="number">24</span>, <span class="number">7000.00</span>, <span class="keyword">new</span> <span class="title class_">Date</span>()),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">7</span>, <span class="string">&quot;赵六&quot;</span>, <span class="number">28</span>, <span class="number">12000.00</span>, <span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line"><span class="comment">//插入多条数据</span></span><br><span class="line">mongoTemplate.insert(list, Employee.class);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>id存在时更新，不存在时插入</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  db.employee.updateOne(</span></span><br><span class="line"><span class="comment">   &#123; &quot;_id&quot;: 1 &#125;,</span></span><br><span class="line"><span class="comment">   &#123;</span></span><br><span class="line"><span class="comment">      $set: &#123;</span></span><br><span class="line"><span class="comment">         &quot;name&quot;: &quot;小明&quot;,</span></span><br><span class="line"><span class="comment">         &quot;age&quot;: 30,</span></span><br><span class="line"><span class="comment">         &quot;salary&quot;: 10000.00,</span></span><br><span class="line"><span class="comment">         &quot;entryDay&quot;: ISODate(&quot;2024-03-05T00:00:00Z&quot;)</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">   &#125;,</span></span><br><span class="line"><span class="comment">   &#123; upsert: true &#125;</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Employee</span> <span class="variable">employee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1</span>, <span class="string">&quot;小明&quot;</span>, <span class="number">30</span>, <span class="number">10000.00</span>, <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"><span class="comment">//save方法会根据对象的id是否存在来判断是更新还是插入</span></span><br><span class="line">mongoTemplate.save(employee);</span><br></pre></td></tr></table></figure><h2 id="更新">更新</h2><ul class="lvl-0"><li class="lvl-2"><p>Mongo语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新单个或多个文档</span></span><br><span class="line">db.collection.update[One|Many](</span><br><span class="line">   &lt;filter&gt;,</span><br><span class="line">   &lt;update&gt;,</span><br><span class="line">   &#123;</span><br><span class="line">     upsert: &lt;boolean&gt;,</span><br><span class="line">     writeConcern: &lt;document&gt;,</span><br><span class="line">     collation: &lt;document&gt;,</span><br><span class="line">     arrayFilters: [ &lt;filterdocument1&gt;, ... ],</span><br><span class="line">     hint:  &lt;document|string&gt;        // Available starting <span class="keyword">in</span> MongoDB 4.2.1</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># findAndModify,只能更新单个文档</span></span><br><span class="line">db.collection.findAndModify(&#123;</span><br><span class="line">    query:&lt;filter&gt;,</span><br><span class="line">    update:&lt;update&gt;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># 示例，该操作会返回符合查询条件的文档数据，并完成对文档的修改</span></span><br><span class="line"><span class="comment"># 将某个book文档的收藏数（favCount）加1</span></span><br><span class="line">db.books.findAndModify(&#123;</span><br><span class="line">    query:&#123;_id:ObjectId(<span class="string">&quot;6457a39c817728350ec83b9d&quot;</span>)&#125;,</span><br><span class="line">    update:&#123;<span class="variable">$inc</span>:&#123;favCount:1&#125;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment"># 默认情况下，findAndModify会返回修改前的“旧”数据。如果希望返回修改后的数据，则可以指定new选项</span></span><br><span class="line">db.books.findAndModify(&#123;</span><br><span class="line">    query:&#123;_id:ObjectId(<span class="string">&quot;6457a39c817728350ec83b9d&quot;</span>)&#125;,</span><br><span class="line">    update:&#123;<span class="variable">$inc</span>:&#123;favCount:1&#125;&#125;,</span><br><span class="line">    new: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>&lt;filter&gt;</td><td>一个筛选器对象，用于指定要更新的文档。</td></tr><tr><td>&lt;update&gt;</td><td>一个更新操作对象，用于指定如何更新文档。可以使用一些操作符，例如$set、$inc、$unset等，以更新文档中的特定字段。</td></tr><tr><td>upsert</td><td>一个布尔值，用于指定如果找不到与筛选器匹配的文档时是否应插入一个新文档。如果upsert为true，则会插入一个新文档。默认值为false。</td></tr><tr><td>writeConcern</td><td>一个文档，用于指定写入操作的安全级别。可以指定写入操作需要到达的节点数或等待写入操作的时间。</td></tr><tr><td>collation</td><td>一个文档，用于指定用于查询的排序规则。例如，可以通过指定locale属性来指定语言环境，从而实现基于区域设置的排序。</td></tr><tr><td>arrayFilters</td><td>一个数组，用于指定要更新的数组元素。数组元素是通过使用更新操作符$[]和$来指定的。</td></tr><tr><td>hint</td><td>一个文档或字符串，用于指定查询使用的索引。该参数仅在MongoDB 4.2.1及以上版本中可用。</td></tr></tbody></table><blockquote><p>更新操作符</p></blockquote><table><thead><tr><th>操作符</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>$set</td><td>{ $set: { field: value } }</td><td>指定一个键并更新值，若键不存在则创建。</td></tr><tr><td>$unset</td><td>{ $unset : { field : 1 } }</td><td>删除一个键。</td></tr><tr><td>$inc</td><td>{ $inc : { field : value } }</td><td>对数值类型进行增减。</td></tr><tr><td>$rename</td><td>{ $rename : { old_field_name : new_field_name } }</td><td>修改字段名称。</td></tr><tr><td>$push</td><td>{ $push : { field : value } }</td><td>将数值追加到数组中，若数组不存在则会进行初始化。</td></tr><tr><td>$pushAll</td><td>{ $pushAll : { field : value_array } }</td><td>追加多个值到一个数组字段内。</td></tr><tr><td>$pull</td><td>{ $pull : { field : _value } }</td><td>从数组中删除指定的元素。</td></tr><tr><td>$addToSet</td><td>{ $addToSet : { field : value } }</td><td>添加元素到数组中，具有排重功能。</td></tr><tr><td>$pop</td><td>{ $pop : { field : 1 } }</td><td>删除数组的第一个或最后一个元素。</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>只更新满足条件的第一条记录</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  db.employee.updateOne(</span></span><br><span class="line"><span class="comment">      &#123; &quot;salary&quot;: &#123; &quot;$gte&quot;: 8000 &#125; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; &quot;$set&quot;: &#123; &quot;salary&quot;: 13000 &#125; &#125;</span></span><br><span class="line"><span class="comment">  )</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;salary&quot;</span>).gte(<span class="number">8000</span>));</span><br><span class="line"><span class="type">Update</span> <span class="variable">update</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Update</span>();</span><br><span class="line"><span class="comment">//设置更新属性</span></span><br><span class="line">update.set(<span class="string">&quot;salary&quot;</span>, <span class="number">13000</span>);</span><br><span class="line"><span class="type">UpdateResult</span> <span class="variable">updateResult</span> <span class="operator">=</span> mongoTemplate.updateFirst(query, update, Employee.class);</span><br><span class="line"><span class="comment">//返回修改的记录数</span></span><br><span class="line">System.out.println(updateResult.getModifiedCount());</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>更新所有满足条件的记录</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  db.employee.updateMany(</span></span><br><span class="line"><span class="comment">      &#123; &quot;salary&quot;: &#123; &quot;$gte&quot;: 8000 &#125; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; &quot;$set&quot;: &#123; &quot;salary&quot;: 13000 &#125; &#125;</span></span><br><span class="line"><span class="comment">  )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;salary&quot;</span>).gte(<span class="number">8000</span>));</span><br><span class="line"><span class="type">Update</span> <span class="variable">update</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Update</span>();</span><br><span class="line"><span class="comment">//设置更新属性</span></span><br><span class="line">update.set(<span class="string">&quot;salary&quot;</span>, <span class="number">13000</span>);</span><br><span class="line"><span class="type">UpdateResult</span> <span class="variable">updateResult</span> <span class="operator">=</span> mongoTemplate.updateMulti(query, update, Employee.class);</span><br><span class="line"><span class="comment">//返回修改的记录数</span></span><br><span class="line">System.out.println(updateResult.getModifiedCount());</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>没有符合条件的记录则插入数据</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  db.employee.updateOne(</span></span><br><span class="line"><span class="comment">      &#123; &quot;salary&quot;: &#123; &quot;$gte&quot;: 8000 &#125; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; &quot;$set&quot;: &#123; &quot;salary&quot;: 13000 &#125;, &quot;$setOnInsert&quot;: &#123; &quot;id&quot;: 11 &#125; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; &quot;upsert&quot;: true &#125;</span></span><br><span class="line"><span class="comment">  )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;salary&quot;</span>).gte(<span class="number">8000</span>));</span><br><span class="line"><span class="type">Update</span> <span class="variable">update</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Update</span>();</span><br><span class="line"><span class="comment">//设置更新属性</span></span><br><span class="line">update.set(<span class="string">&quot;salary&quot;</span>, <span class="number">13000</span>);</span><br><span class="line">update.setOnInsert(<span class="string">&quot;id&quot;</span>,<span class="number">11</span>);  <span class="comment">//指定_id，只有没有匹配到时才插入</span></span><br><span class="line"><span class="type">UpdateResult</span> <span class="variable">updateResult</span> <span class="operator">=</span> mongoTemplate.upsert(query, update, Employee.class);</span><br><span class="line"><span class="comment">//返回修改的记录数</span></span><br><span class="line">System.out.println(updateResult.getModifiedCount());</span><br></pre></td></tr></table></figure><h2 id="替换">替换</h2><ul class="lvl-0"><li class="lvl-2"><p>Mongo语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">db.collection.replaceOne(</span><br><span class="line">   &lt;filter&gt;,</span><br><span class="line">   &lt;replacement&gt;,</span><br><span class="line">   &#123;</span><br><span class="line">     upsert: &lt;boolean&gt;,</span><br><span class="line">     writeConcern: &lt;document&gt;,</span><br><span class="line">     collation: &lt;document&gt;,</span><br><span class="line">     hint: &lt;document|string&gt;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>replaceOne</code>操作会首先使用指定的筛选条件来查找匹配的文档，然后用提供的新文档完全替换掉原始文档，也就是说<code>replaceOne</code>是整体替换，而不是修改文档中的某些字段。</p></li></ul><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>&lt;filter&gt;</td><td>一个筛选器对象，用于指定要替换的文档。只有与筛选器对象匹配的第一个文档才会被替换。</td></tr><tr><td>&lt;replacement&gt;</td><td>一个替换文档对象，用于指定用于替换原始文档的新文档。替换文档必须包含所有要在原始文档中修改或替换的字段。</td></tr><tr><td>upsert</td><td>一个布尔值，表示如果找不到与筛选器匹配的文档时是否应插入一个新文档。如果设置为true，则会插入一个新文档。默认为false。</td></tr><tr><td>writeConcern</td><td>一个文档，用于指定写入操作的安全级别。可以指定写入操作需要到达的节点数或等待写入操作的时间。</td></tr><tr><td>collation</td><td>一个文档，用于指定用于查询的排序规则。例如，可以通过指定locale属性来指定语言环境，从而实现基于区域设置的排序。</td></tr><tr><td>hint</td><td>一个文档或字符串，用于指定查询使用的索引。该参数仅在MongoDB 4.2.1及以上版本中可用</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">db.collection.replaceOne(</span></span><br><span class="line"><span class="comment">   &#123; &quot;name&quot;: &quot;John&quot; &#125;,  // 筛选条件，匹配name为John的文档</span></span><br><span class="line"><span class="comment">   &#123;                     // 替换文档，用于替换匹配到的文档</span></span><br><span class="line"><span class="comment">     &quot;name&quot;: &quot;Peter&quot;,    // 新的name字段值为Peter</span></span><br><span class="line"><span class="comment">     &quot;age&quot;: 30           // 新增age字段，值为30</span></span><br><span class="line"><span class="comment">   &#125;</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;name&quot;</span>).is(<span class="string">&quot;John&quot;</span>));</span><br><span class="line"><span class="type">Employee</span> <span class="variable">replacement</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Employee</span>();</span><br><span class="line">replacement.setName(<span class="string">&quot;Peter&quot;</span>);</span><br><span class="line">replacement.setAge(<span class="number">30</span>);</span><br><span class="line">mongoTemplate.findAndReplace(query, replacement);</span><br></pre></td></tr></table></figure><h2 id="删除">删除</h2><ul class="lvl-0"><li class="lvl-2"><p>Mongo语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按条件删除多个文档</span></span><br><span class="line">db.collection.deleteMany(&lt;filter&gt;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按条件删除单个文档</span></span><br><span class="line">db.collection.deleteOne(&lt;filter&gt;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先查询后删除，返回查询条件对应的文档，sort是可选项</span></span><br><span class="line">db.collection.findOneAndDelete(&lt;filter&gt;,&#123;<span class="built_in">sort</span>:&#123;field:1&#125;&#125;)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>删除所有文档</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// db.employee.deleteMany(&#123;&#125;)</span></span><br><span class="line">mongoTemplate.remove(<span class="keyword">new</span> <span class="title class_">Query</span>(),Employee.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// db.employee.drop()</span></span><br><span class="line"><span class="comment">// 清空数据也可以使用drop方法，但是这样会删除索引</span></span><br><span class="line">mongoTemplate.dropCollection(Employee.class);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>按条件删除文档</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// db.employee.deleteMany(&#123; &quot;salary&quot;: &#123; &quot;$gte&quot;: 10000 &#125; &#125;)</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;salary&quot;</span>).gte(<span class="number">10000</span>));</span><br><span class="line">mongoTemplate.remove(query, Employee.class);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>删除查询到的第一个文档</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// db.employee.deleteOne(&#123; &quot;salary&quot;: &#123; &quot;$gte&quot;: 10000 &#125; &#125;)</span></span><br><span class="line"><span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Query</span>(Criteria.where(<span class="string">&quot;salary&quot;</span>).gte(<span class="number">10000</span>));</span><br><span class="line">query.limit(<span class="number">1</span>);</span><br><span class="line">mongoTemplate.remove(query, Employee.class);</span><br></pre></td></tr></table></figure><h2 id="批量操作">批量操作</h2><ul class="lvl-0"><li class="lvl-2"><p>bulkwrite()方法提供了执行批量插入、更新和删除操作的能力。</p></li><li class="lvl-2"><p>bulkWrite()支持以下写操作:</p><ul class="lvl-2"><li class="lvl-4">insertOne</li><li class="lvl-4">updateOne</li><li class="lvl-4">updateMany</li><li class="lvl-4">replaceOne</li><li class="lvl-4">deleteOne</li><li class="lvl-4">deleteMany</li></ul></li><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.annotation.Id;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.BulkOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.MongoTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.mapping.Document;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Criteria;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Query;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.mongodb.core.query.Update;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BulkWriteTests</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MongoTemplate mongoTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    db.pizzas.insertMany( [</span></span><br><span class="line"><span class="comment">      &#123; _id: 0, type: &quot;pepperoni&quot;, size: &quot;small&quot;, price: 4 &#125;,</span></span><br><span class="line"><span class="comment">      &#123; _id: 1, type: &quot;cheese&quot;, size: &quot;medium&quot;, price: 7 &#125;,</span></span><br><span class="line"><span class="comment">      &#123; _id: 2, type: &quot;vegan&quot;, size: &quot;large&quot;, price: 8 &#125;</span></span><br><span class="line"><span class="comment">    ] )</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">insertManyPizzas</span><span class="params">()</span> &#123;</span><br><span class="line">        mongoTemplate.insertAll(Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Pizza</span>(<span class="number">0</span>, <span class="string">&quot;pepperoni&quot;</span>, <span class="string">&quot;small&quot;</span>, <span class="number">4</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Pizza</span>(<span class="number">1</span>, <span class="string">&quot;cheese&quot;</span>, <span class="string">&quot;medium&quot;</span>, <span class="number">7</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Pizza</span>(<span class="number">2</span>, <span class="string">&quot;vegan&quot;</span>, <span class="string">&quot;large&quot;</span>, <span class="number">8</span>)</span><br><span class="line">        ));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    db.pizzas.bulkWrite( [</span></span><br><span class="line"><span class="comment">      &#123; insertOne: &#123; document: &#123; _id: 3, type: &quot;beef&quot;, size: &quot;medium&quot;, price: 6 &#125; &#125; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; insertOne: &#123; document: &#123; _id: 4, type: &quot;sausage&quot;, size: &quot;large&quot;, price: 10 &#125; &#125; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; updateOne: &#123;</span></span><br><span class="line"><span class="comment">          filter: &#123; type: &quot;cheese&quot; &#125;,</span></span><br><span class="line"><span class="comment">          update: &#123; $set: &#123; price: 8 &#125; &#125;</span></span><br><span class="line"><span class="comment">      &#125; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; deleteOne: &#123; filter: &#123; type: &quot;pepperoni&quot;&#125; &#125; &#125;,</span></span><br><span class="line"><span class="comment">      &#123; replaceOne: &#123;</span></span><br><span class="line"><span class="comment">          filter: &#123; type: &quot;vegan&quot; &#125;,</span></span><br><span class="line"><span class="comment">          replacement: &#123; type: &quot;tofu&quot;, size: &quot;small&quot;, price: 4 &#125;</span></span><br><span class="line"><span class="comment">      &#125; &#125;</span></span><br><span class="line"><span class="comment">    ] )</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">performBulkWrite</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">BulkOperations</span> <span class="variable">bulkOperations</span> <span class="operator">=</span> mongoTemplate.bulkOps(BulkOperations.BulkMode.ORDERED, Pizza.class);</span><br><span class="line"></span><br><span class="line">        bulkOperations.insert(Arrays.asList(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Pizza</span>(<span class="number">3</span>, <span class="string">&quot;beef&quot;</span>, <span class="string">&quot;medium&quot;</span>, <span class="number">6</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Pizza</span>(<span class="number">4</span>, <span class="string">&quot;sausage&quot;</span>, <span class="string">&quot;large&quot;</span>, <span class="number">10</span>)</span><br><span class="line">        ));</span><br><span class="line"></span><br><span class="line">        bulkOperations.updateOne(</span><br><span class="line">                Query.query(Criteria.where(<span class="string">&quot;type&quot;</span>).is(<span class="string">&quot;cheese&quot;</span>)),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Update</span>().set(<span class="string">&quot;price&quot;</span>, <span class="number">8</span>)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        bulkOperations.remove(</span><br><span class="line">                Query.query(Criteria.where(<span class="string">&quot;type&quot;</span>).is(<span class="string">&quot;pepperoni&quot;</span>)).limit(<span class="number">1</span>)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        bulkOperations.replaceOne(</span><br><span class="line">                Query.query(Criteria.where(<span class="string">&quot;type&quot;</span>).is(<span class="string">&quot;vegan&quot;</span>)),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">Pizza</span>(<span class="literal">null</span>, <span class="string">&quot;tofu&quot;</span>, <span class="string">&quot;small&quot;</span>, <span class="number">4</span>)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        bulkOperations.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="meta">@AllArgsConstructor</span></span><br><span class="line">    <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    <span class="meta">@Document(&quot;pizza&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Pizza</span> &#123;</span><br><span class="line">        <span class="meta">@Id</span></span><br><span class="line">        <span class="keyword">private</span> Integer _id;</span><br><span class="line">        <span class="keyword">private</span> String type;</span><br><span class="line">        <span class="keyword">private</span> String size;</span><br><span class="line">        <span class="keyword">private</span> Integer price;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍如何使用SpringBoot实现MongoDB7.0的单集合的CURD操作&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;SpringBoot版本3.2.3，MongoDB版本7.0.6&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mongodb.com/docs/v7.0/crud/&quot;&gt;MongoDB CRUD Operations&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.mongodb.com/docs/v7.0/reference/sql-comparison/&quot;&gt;SQL to MongoDB Mapping Chart&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;a href=&quot;/2024/03/07/mongodb7-springboot-aggregate/&quot; title=&quot;MongoDB7.0--SpringBoot聚合操作&quot;&gt;MongoDB7.0--SpringBoot聚合操作&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/mongodb/"/>
    
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB7.0的安装</title>
    <link href="https://blog.hanqunfeng.com/2024/03/01/mongodb7/"/>
    <id>https://blog.hanqunfeng.com/2024/03/01/mongodb7/</id>
    <published>2024-03-01T13:30:05.000Z</published>
    <updated>2024-04-03T07:42:41.013Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍Linux下MongoDB7.0的安装</p></li><li class="lvl-2"><p>MongoDB<a href="https://www.mongodb.com/docs/v7.0/">官方文档</a></p></li><li class="lvl-2"><p>本文基于<code>CentOS8(x86_64)</code></p></li></ul><span id="more"></span><h2 id="MongoDB-7-0新特性">MongoDB 7.0新特性</h2><ul class="lvl-0"><li class="lvl-2"><p>2024年8月15日，MongoDB正式发布7.0版本，截止目前最新版本为7.0.6。</p></li><li class="lvl-2"><p><a href="https://www.mongodb.com/docs/v7.0/release-notes/7.0/">MongoDB7.0特性</a></p></li><li class="lvl-2"><p><a href="https://help.aliyun.com/zh/mongodb/product-overview/features-of-mongodb-7-0?spm=a2c4g.11186623.0.0.2acc36f3yP2Mr9">阿里云关于MongoDB7.0的特性说明</a>，该文档中也包含MongoDB其它版本的特性说明</p></li><li class="lvl-2"><p><a href="https://www.mongodb.com/legal/support-policy/lifecycles">MongoDB Software Lifecycle Schedules</a></p></li></ul><h2 id="安装MongoDB">安装MongoDB</h2><ul class="lvl-0"><li class="lvl-2"><p>mongodb的安装方法可以查看<a href="https://www.mongodb.com/docs/v7.0/administration/install-community/">官方文档</a></p></li><li class="lvl-2"><p><a href="https://www.mongodb.com/try/download/community">MongoDB下载地址</a>，选择合适的版本、平台和包类型</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载MongoDB</span></span><br><span class="line">wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel80-7.0.6.tgz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf mongodb-linux-x86_64-rhel80-7.0.6.tgz</span><br><span class="line"><span class="comment"># 方便起见，创建软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s mongodb-linux-x86_64-rhel80-7.0.6 mongodb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改/etc/profile，添加环境变量，方便执行MongoDB命令</span></span><br><span class="line"><span class="built_in">export</span> MONGODB_HOME=/usr/local/soft/mongodb</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$MONGODB_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看版本，检查命令是否可用</span></span><br><span class="line">mongod --version</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建dbpath和logpath的存储目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /mongodb/data /mongodb/log</span><br></pre></td></tr></table></figure><h3 id="安装mongoDB时可能遇到的问题">安装mongoDB时可能遇到的问题</h3><ul class="lvl-0"><li class="lvl-2"><ol><li class="lvl-5">启动mongodb服务时，提示<code>mongod: error while loading shared libraries: libcrypto.so.1.1: cannot open shared object file: No such file or directory</code></li></ol></li></ul><blockquote><p>解决方法：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget  https://www.openssl.org/source/openssl-1.1.1w.tar.gz</span><br><span class="line">tar -zxvf openssl-1.1.1w.tar.gz</span><br><span class="line"><span class="built_in">cd</span> openssl-1.1.1w</span><br><span class="line">./config</span><br><span class="line"><span class="comment"># 如果make时提示 /bin/sh: gcc: command not found，需要先安装gcc：sudo yum install gcc -y</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/lib64/libcrypto.so.1.1 /usr/lib64/libcrypto.so.1.1</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/lib64/libssl.so.1.1 /usr/lib64/libssl.so.1.1</span><br></pre></td></tr></table></figure><h2 id="启动mongodb服务">启动mongodb服务</h2><ul class="lvl-0"><li class="lvl-2"><p>命令参数启动</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mongod --port=27017 --dbpath=/mongodb/data --logpath=/mongodb/log/mongodb.log --bind_ip=0.0.0.0 --fork</span><br><span class="line">    <span class="comment"># 参数说明</span></span><br><span class="line">    --port: 指定端口，默认为27017</span><br><span class="line">    --dbpath: 指定数据文件存放目录</span><br><span class="line">    --logpath: 指定日志文件，注意是指定文件不是目录</span><br><span class="line">    --bind_ip: 默认只监听localhost网卡</span><br><span class="line">    --fork: 后台启动</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>也可以将上面的参数写到配置文件中，如<code>/mongodb/conf/mongo.conf</code>文件，必须是yaml格式</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongodb/log/mongodb.log</span> <span class="comment"># log path</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/mongodb/data</span> <span class="comment"># data directory</span></span><br><span class="line">  <span class="attr">engine:</span> <span class="string">wiredTiger</span>  <span class="comment">#存储引擎，默认值就是wiredTiger</span></span><br><span class="line">  <span class="attr">journal:</span>            <span class="comment">#journal日志配置</span></span><br><span class="line">    <span class="attr">commitIntervalMs:</span> <span class="number">100</span> <span class="comment">#mongod进程在日志操作之间允许的最大时间（以毫秒为单位）。值可以从1到500毫秒不等。较低的值会增加日志的耐用性，而牺牲了磁盘性能。在WiredTiger上，默认的日志提交间隔是100毫秒。此外，包含或暗示j:true的写入将导致期刊立即同步。</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>将命令行参数直接转换为yaml:<code>--outputConfig</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongod --port=27017 --dbpath=/mongodb/data --logpath=/mongodb/log/mongodb.log --bind_ip=0.0.0.0 --fork --outputConfig</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line"><span class="attr">outputConfig:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/mongodb/data</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/mongodb/log/mongodb.log</span></span><br></pre></td></tr></table></figure><blockquote><p>删除<code>outputConfig: true</code>这一行，然后将其余内容复制到mongo.conf中</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>关于配置参数的详细信息可以查看<a href="https://www.mongodb.com/docs/v7.0/reference/configuration-options/">官方文档</a></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动mongo服务</span></span><br><span class="line">mongod -f /mongodb/conf/mongo.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭mongo服务，注意：macos下不支持 --shutdown</span></span><br><span class="line">mongod -f /mongodb/conf/mongo.conf --shutdown</span><br></pre></td></tr></table></figure><h2 id="shell客户端mongosh">shell客户端mongosh</h2><ul class="lvl-0"><li class="lvl-2"><p>从mongodb6开始不再支持mongo命令，而是需要使用mongosh命令，关于mongosh命令的使用可以查看<a href="https://www.mongodb.com/docs/mongodb-shell/">官方文档</a></p></li><li class="lvl-2"><p>mongosh命令的使用方式与mongo命令基本一致</p></li><li class="lvl-2"><p>下载地址：<a href="https://www.mongodb.com/try/download/shell">mongosh下载地址</a></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line"><span class="comment"># openssl11是centos7的版本，目前支持centos8，但更推荐使用centos8时下载openssl3的版本</span></span><br><span class="line">wget https://downloads.mongodb.com/compass/mongosh-2.2.2-linux-x64-openssl11.tgz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf mongosh-2.2.2-linux-x64-openssl11.tgz</span><br><span class="line"><span class="comment"># 创建软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s mongosh-2.2.2-linux-x64-openssl11 mongosh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改/etc/profile，添加环境变量，方便执行MongoShell命令</span></span><br><span class="line"><span class="built_in">export</span> MONGODB_SHELL_HOME=/usr/local/soft/mongosh</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$MONGODB_SHELL_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">mongosh --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接mongodb server端</span></span><br><span class="line">mongosh --host=127.0.0.1 --port=27017</span><br><span class="line"><span class="comment"># --host: mongodb server端ip地址</span></span><br><span class="line"><span class="comment"># --port: mongodb server端口</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>mongosh常用命令</p></li></ul><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>show dbs 或 show databases</td><td>显示数据库</td></tr><tr><td>use 数据库名</td><td>切换数据库，如果不存在创建数据库</td></tr><tr><td>db.dropDatabase()</td><td>删除数据库</td></tr><tr><td>show collections 或 show tables</td><td>显示当前数据库的集合列表</td></tr><tr><td>db.集合名.stats()</td><td>查看集合详情</td></tr><tr><td>db.集合名.drop()</td><td>删除集合</td></tr><tr><td>show users</td><td>显示当前数据库的用户列表</td></tr><tr><td>show roles</td><td>显示当前数据库的角色列表</td></tr><tr><td>show profile</td><td>显示最近发生的操作</td></tr><tr><td>load(“xxx.js”)</td><td>执行一个JavaScript脚本文件</td></tr><tr><td>exit 或 quit</td><td>退出</td></tr><tr><td>help</td><td>查看mongodb支持哪些命令</td></tr><tr><td>db.help()</td><td>查询当前数据库支持的方法</td></tr><tr><td>db.集合名.help()</td><td>显示集合的帮助信息</td></tr><tr><td>db.version()</td><td>查看数据库版本</td></tr><tr><td>cls</td><td>清屏</td></tr><tr><td>db.shutdownServer()</td><td>关闭mongodb server端</td></tr></tbody></table><h2 id="安全认证">安全认证</h2><ul class="lvl-0"><li class="lvl-2"><p>创建管理员</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置管理员用户名密码需要切换到admin库</span></span><br><span class="line">use admin</span><br><span class="line"><span class="comment">#显示可设置权限</span></span><br><span class="line">show roles</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建管理员，授予root角色</span></span><br><span class="line">db.createUser(&#123;user:<span class="string">&quot;root&quot;</span>,<span class="built_in">pwd</span>:<span class="string">&quot;password&quot;</span>,roles:[<span class="string">&quot;root&quot;</span>]&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前数据库所有用户信息</span></span><br><span class="line">show <span class="built_in">users</span></span><br><span class="line"><span class="comment">#显示所有用户</span></span><br><span class="line">db.system.users.find()</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>常用角色</p></li></ul><table><thead><tr><th>权限名</th><th>描述</th></tr></thead><tbody><tr><td>read</td><td>允许用户读取指定数据库</td></tr><tr><td>readWrite</td><td>允许用户读写指定数据库</td></tr><tr><td>dbAdmin</td><td>允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</td></tr><tr><td>dbOwner</td><td>允许用户在指定数据库中执行任意操作，增、删、改、查等</td></tr><tr><td>userAdmin</td><td>允许用户向system.users集合写入，可以在指定数据库里创建、删除和管理用户</td></tr><tr><td>clusterAdmin</td><td>只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限</td></tr><tr><td>readAnyDatabase</td><td>只在admin数据库中可用，赋予用户所有数据库的读权限</td></tr><tr><td>readWriteAnyDatabase</td><td>只在admin数据库中可用，赋予用户所有数据库的读写权限</td></tr><tr><td>userAdminAnyDatabase</td><td>只在admin数据库中可用，赋予用户所有数据库的userAdmin权限</td></tr><tr><td>dbAdminAnyDatabase</td><td>只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限</td></tr><tr><td>root</td><td>只在admin数据库中可用。超级账号，超级权限</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>创建数据库用户</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">admin&gt; use mydb</span><br><span class="line">switched to db mydb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认认证数据库为当前数据库，下面的授权等同于 &#123; role: &#x27;dbOwner&#x27;, db: &#x27;mydb&#x27; &#125;</span></span><br><span class="line">mydb&gt; db.createUser(&#123;user:<span class="string">&quot;mytest&quot;</span>,<span class="built_in">pwd</span>:<span class="string">&quot;123456&quot;</span>,roles:[<span class="string">&quot;dbOwner&quot;</span>]&#125;)</span><br><span class="line">&#123; ok: 1 &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前数据库下的用户</span></span><br><span class="line">mydb&gt; show <span class="built_in">users</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    _id: <span class="string">&#x27;mydb.mytest&#x27;</span>,</span><br><span class="line">    userId: UUID(<span class="string">&#x27;8bc42a74-5d84-4849-af25-09fdcbdfd03a&#x27;</span>),</span><br><span class="line">    user: <span class="string">&#x27;mytest&#x27;</span>,</span><br><span class="line">    db: <span class="string">&#x27;mydb&#x27;</span>,</span><br><span class="line">    roles: [ &#123; role: <span class="string">&#x27;dbOwner&#x27;</span>, db: <span class="string">&#x27;mydb&#x27;</span> &#125; ],</span><br><span class="line">    mechanisms: [ <span class="string">&#x27;SCRAM-SHA-1&#x27;</span>, <span class="string">&#x27;SCRAM-SHA-256&#x27;</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>重置用户密码</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mydb&gt; db.changeUserPassword(<span class="string">&quot;mytest&quot;</span>, <span class="string">&quot;password&quot;</span>)</span><br><span class="line">&#123; ok: 1 &#125;</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">mydb&gt; db.updateUser(<span class="string">&quot;mytest&quot;</span>, &#123;<span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>&#125;)</span><br><span class="line">&#123; ok: 1 &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>为用户添加角色</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假设已经创建了用户mytest，需要重新赋予其角色</span></span><br><span class="line">mydb&gt; db.grantRolesToUser( <span class="string">&quot;mytest&quot;</span> , [</span><br><span class="line"> &#123; role: <span class="string">&quot;dbAdmin&quot;</span>, db: <span class="string">&quot;mydb&quot;</span> &#125; ,</span><br><span class="line"> &#123; role: <span class="string">&quot;userAdmin&quot;</span>, db: <span class="string">&quot;mydb&quot;</span>&#125;</span><br><span class="line"> ])</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>删除用户的指定角色</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mydb&gt; db.revokeRolesFromUser( <span class="string">&quot;mytest&quot;</span> , [</span><br><span class="line">  &#123; role: <span class="string">&quot;dbAdmin&quot;</span>, db: <span class="string">&quot;mydb&quot;</span> &#125;</span><br><span class="line">  ])</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>删除用户</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mydb&gt; db.dropUser(<span class="string">&quot;mytest&quot;</span>)</span><br><span class="line">&#123; ok: 1 &#125;</span><br><span class="line">mydb&gt; show <span class="built_in">users</span></span><br><span class="line">[]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除全部用户</span></span><br><span class="line">mydb&gt; db.dropAllUsers()</span><br></pre></td></tr></table></figure><h2 id="MongoDB启用鉴权">MongoDB启用鉴权</h2><ul class="lvl-0"><li class="lvl-2"><p>默认情况下，MongoDB不会启用鉴权，以鉴权模式启动MongoDB有两种方法</p></li></ul><blockquote><p>命令行参数增加 <code>--auth</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod -f /mongodb/conf/mongo.conf --auth</span><br></pre></td></tr></table></figure><blockquote><p>配置文件中加上如下内容</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">security:</span></span><br><span class="line">  <span class="attr">authorization:</span> <span class="string">enabled</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>启用鉴权之后，连接MongoDB的相关操作都需要提供身份认证</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mongosh --host=127.0.0.1 --port=27017 -u root -p password --authenticationDatabase=admin</span><br><span class="line"><span class="comment"># -u: 用户名</span></span><br><span class="line"><span class="comment"># -p: 密码</span></span><br><span class="line"><span class="comment"># --authenticationDatabase: 指定认证数据库</span></span><br></pre></td></tr></table></figure><h2 id="mongosh连接mongodb-server端的方式">mongosh连接mongodb server端的方式</h2><ul class="lvl-0"><li class="lvl-2"><p>参数方式</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以通过 mongosh --help 查看帮助</span></span><br><span class="line">mongosh --host=127.0.0.1 --port=27017 -u root -p password --authenticationDatabase=admin</span><br><span class="line"><span class="comment"># 指定连接的数据库，这里指定连接到mydb数据库，如果不指定，默认连接到test数据库</span></span><br><span class="line">mongosh mydb --host=127.0.0.1 --port=27017 -u root -p password --authenticationDatabase=admin</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>混合方式</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip+端口方式连接</span></span><br><span class="line">mongosh 127.0.0.1:27017</span><br><span class="line"><span class="comment"># ip+端口方式连接，后面可以加上各种参数配置</span></span><br><span class="line">mongosh 127.0.0.1:27017 -u root -p password --authenticationDatabase=admin</span><br><span class="line"><span class="comment"># ip+端口方式连接，同时可以指定连接的数据库，这里指定连接到mydb数据库，如果不指定，默认连接到test数据库</span></span><br><span class="line">mongosh 127.0.0.1:27017/mydb</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>uri方式</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mongosh mongodb://127.0.0.1:27017</span><br><span class="line"><span class="comment"># 指定连接数据库</span></span><br><span class="line">mongosh mongodb://127.0.0.1:27017/mydb</span><br><span class="line"><span class="comment"># 带认证方式连接</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://root:password@127.0.0.1:27017/mydb?authSource=admin&quot;</span></span><br><span class="line"><span class="comment"># 带认证方式连接，同时指定readPreference为primaryPreferred，即读取数据时优先从主节点读取数据</span></span><br><span class="line">mongosh <span class="string">&quot;mongodb://root:password@127.0.0.1:27019/mydb?authSource=admin&amp;readPreference=primaryPreferred&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>如果只是连接本机的server端，而且端口为27017，可以省略host和port</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongosh</span><br></pre></td></tr></table></figure><h2 id="解决连接MongoDB时出现的-vm-max-map-count-is-too-low-的问题">解决连接MongoDB时出现的 vm.max_map_count is too low 的问题</h2><ul class="lvl-0"><li class="lvl-2"><p>默认的<code>vm.max_map_count</code>值为<code>65530</code>，如果需要开启MongoDB的分片功能，需要将<code>vm.max_map_count</code>设置为较高的值，通常推荐为<code>1048576</code></p></li><li class="lvl-2"><p>查看当前<code>vm.max_map_count</code>的值</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl vm.max_map_count</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>临时增加<code>vm.max_map_count</code>的值</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w vm.max_map_count=1048576</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>永久增加<code>vm.max_map_count</code>的值</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改/etc/sysctl.conf文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;vm.max_map_count = 1048576&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>重启MongoDB才会生效</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍Linux下MongoDB7.0的安装&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MongoDB&lt;a href=&quot;https://www.mongodb.com/docs/v7.0/&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;CentOS8(x86_64)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/mongodb/"/>
    
    
    <category term="mongodb" scheme="https://blog.hanqunfeng.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令--echo与printf</title>
    <link href="https://blog.hanqunfeng.com/2024/02/28/linux-command13-echo-printf/"/>
    <id>https://blog.hanqunfeng.com/2024/02/28/linux-command13-echo-printf/</id>
    <published>2024-02-28T13:30:05.000Z</published>
    <updated>2024-04-03T03:45:37.257Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>在编写 shell 脚本时，echo 和 printf 是两个常用的命令，用于输出信息到标准输出设备。虽然它们看似简单，但深入理解它们的使用方式和内部机制对于编写高效、可读性强的脚本至关重要。</p></li></ul><span id="more"></span><h2 id="echo-命令">echo 命令</h2><h3 id="基本语法和用法">基本语法和用法</h3><ul class="lvl-0"><li class="lvl-2"><p><code>echo</code> 命令的基本语法为：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> [选项] [字符串或变量]</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>参数和选项</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-n：不换行输出。</span><br><span class="line">-e：解释转义字符。</span><br><span class="line">-E：禁止解释转义字符。</span><br><span class="line"></span><br><span class="line">常见的转义字符包括 \n（换行）、\t（制表符）等。</span><br></pre></td></tr></table></figure><h3 id="实际应用示例">实际应用示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">- 打印一个文本消息。注意：引号是可选的</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span></span><br><span class="line"></span><br><span class="line">- 打印一个带环境变量的消息</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;My path is <span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line">- 打印一个不带尾随换行符的消息</span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;Hello World&quot;</span></span><br><span class="line"></span><br><span class="line">- 将消息追加到文件中</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span> &gt;&gt; file.txt</span><br><span class="line"></span><br><span class="line">- 启用反斜杠转义（特殊字符）的解释</span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;Column 1\tColumn 2&quot;</span></span><br><span class="line"></span><br><span class="line">- 打印最后一个执行命令的退出状态</span><br><span class="line">    <span class="built_in">echo</span> $?</span><br></pre></td></tr></table></figure><h3 id="echo输出颜色化文本">echo输出颜色化文本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\e[1;31mError:\e[0m Something went wrong.&quot;</span></span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\033[1;31mError:\033[0m Something went wrong.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：</span></span><br><span class="line">\e[1;31m：这部分控制文本的颜色和样式。</span><br><span class="line">其中：</span><br><span class="line">    \e 表示这是一个转义字符，它是 ANSI 转义序列的起始，后跟一系列用于控制文本颜色、样式等的数字和字符。这里\e也可以用\033替代。</span><br><span class="line">    1 表示设置文本为粗体（或者称为高亮）。</span><br><span class="line">    31 表示设置文本颜色为红色。不同的数字代表不同的颜色，这里的 31 对应红色。</span><br><span class="line"></span><br><span class="line">\e[0m：这部分重置文本格式为默认值。这样做是为了确保在之后的输出中文本样式不受之前的影响。</span><br><span class="line"></span><br><span class="line">因此，这条命令会输出一个红色的“Error:”，接着是一个空格，然后是普通文本“Something went wrong.”。整体效果是，错误消息以红色高亮显示，使其在输出中更加醒目。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">颜色：</span><br><span class="line">    30：黑色</span><br><span class="line">    31：红色</span><br><span class="line">    32：绿色</span><br><span class="line">    33：黄色</span><br><span class="line">    34：蓝色</span><br><span class="line">    35：紫色</span><br><span class="line">    36：青色</span><br><span class="line">    37：白色</span><br><span class="line"></span><br><span class="line">样式：</span><br><span class="line">    0：重置所有样式（默认值）</span><br><span class="line">    1：粗体（或高亮）</span><br><span class="line">    2：暗色（不常见，视终端而定）</span><br><span class="line">    3：斜体（不常见，视终端而定）</span><br><span class="line">    4：下划线</span><br><span class="line">    5：闪烁（不常见，视终端而定）</span><br><span class="line">    7：反显（前景色与背景色交换）</span><br><span class="line">    8：隐藏（文本不可见）</span><br><span class="line"></span><br><span class="line">这些数字和字符可以单独使用，比如\e[1m 表示加粗，\e[31m 表示设置文本颜色为红色。</span><br><span class="line">也可以组合使用，比如 \e[1;31m 表示设置文本为红色并加粗，中间用分号隔开。</span><br></pre></td></tr></table></figure><h2 id="printf-命令">printf 命令</h2><h3 id="基本语法和用法-2">基本语法和用法</h3><ul class="lvl-0"><li class="lvl-2"><p><code>printf</code> 命令的基本语法为：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> [格式化字符串] [参数]</span><br></pre></td></tr></table></figure><h3 id="实际应用示例-2">实际应用示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- 打印文本消息：</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%s\n&quot;</span> <span class="string">&quot;Hello world&quot;</span></span><br><span class="line"></span><br><span class="line">- 以蓝色粗体打印整数：使用方法同<span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;\e[1;34m%.3d\e[0m\n&quot;</span> 42</span><br><span class="line"></span><br><span class="line">- 打印带有Unicode Euro符号的浮点数：</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;\u20AC %.2f\n&quot;</span> 123.4</span><br><span class="line"></span><br><span class="line">- 打印由变量组成的文本消息：</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;var1: %s\tvar2: %s\n&quot;</span> <span class="string">&quot;<span class="variable">$var1</span>&quot;</span> <span class="string">&quot;<span class="variable">$var2</span>&quot;</span></span><br><span class="line"></span><br><span class="line">- 将格式化的消息存储在变量中：</span><br><span class="line">    <span class="built_in">printf</span> -v myvar <span class="string">&quot;This is %s = %d\n&quot;</span> <span class="string">&quot;a year&quot;</span> 2016</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$myvar</span></span><br><span class="line">    This is a year = 2016</span><br></pre></td></tr></table></figure><div class="tips"><p>在 printf 命令中，支持的格式化符号用于指定输出的格式，包括整数、浮点数、字符串等。<br>以下是常用的格式化符号及其使用示例：</p><ul class="lvl-1"><li class="lvl-2"><p>1.整数格式化符号：</p><ul class="lvl-3"><li class="lvl-6">%d：以十进制形式输出整数。</li><li class="lvl-6">%.nd：指定数字占几位，不足部分前面补0。</li><li class="lvl-6">%o：以八进制形式输出整数。</li><li class="lvl-6">%x 或 %X：以十六进制形式输出整数（小写或大写）。</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d\n&quot;</span> 42      <span class="comment"># 输出：42</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%.3d\n&quot;</span> 42    <span class="comment"># 输出：042</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%o\n&quot;</span> 42      <span class="comment"># 输出：52</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%x\n&quot;</span> 42      <span class="comment"># 输出：2a</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%X\n&quot;</span> 42      <span class="comment"># 输出：2A</span></span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>2.浮点数格式化符号：</p><ul class="lvl-3"><li class="lvl-6">%f：以十进制形式输出浮点数。</li><li class="lvl-6">%.nf：指定小数点后保留 n 位小数。</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%f\n&quot;</span> 3.14159      <span class="comment"># 输出：3.141590</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%.2f\n&quot;</span> 3.14159    <span class="comment"># 输出：3.14</span></span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>3.字符串格式化符号：</p><ul class="lvl-3"><li class="lvl-6">%c：输出单个字符。</li><li class="lvl-6">%s：输出字符串。</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%c\n&quot;</span> <span class="string">&#x27;A&#x27;</span>      <span class="comment"># 输出：A</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%s\n&quot;</span> <span class="string">&quot;Hello&quot;</span>  <span class="comment"># 输出：Hello</span></span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>4.其他格式化符号：</p><ul class="lvl-3"><li class="lvl-6">%p：以十六进制形式输出指针地址。</li><li class="lvl-6">%u：输出无符号整数。</li><li class="lvl-6">%e 或 %E：以科学计数法形式输出浮点数（小写或大写）。</li><li class="lvl-6">%g 或 %G：根据实际情况自动选择 %f 或 %e 格式输出浮点数（小写或大写）。</li><li class="lvl-6">%%：输出一个百分号。</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%p\n&quot;</span> <span class="variable">$var</span>           <span class="comment"># 输出：0x7ffeefbff748 （变量 var 的地址）</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%u\n&quot;</span> -42            <span class="comment"># 输出：4294967254</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%e\n&quot;</span> 123.456        <span class="comment"># 输出：1.234560e+02</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%E\n&quot;</span> 123.456        <span class="comment"># 输出：1.234560E+02</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%g\n&quot;</span> 123.456        <span class="comment"># 输出：123.456</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%G\n&quot;</span> 123.456        <span class="comment"># 输出：123.456</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;100%%\n&quot;</span>             <span class="comment"># 输出：100%</span></span><br></pre></td></tr></table></figure></li></ul></div><h2 id="不同进制之间进行相互转换">不同进制之间进行相互转换</h2><h3 id="10进制转其它进制">10进制转其它进制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 10进制转2进制，obase=2 指定输出进制为二进制，默认为10进制。</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;obase=2; 255&quot;</span> | bc <span class="comment"># 11111111</span></span><br><span class="line"><span class="comment"># printf不支持到二进制的转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 10进制转8进制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;obase=8; 255&quot;</span> | bc <span class="comment"># 377</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%o\n&quot;</span> 255 <span class="comment"># 377，%o 表示八进制数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 10进制转16进制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;obase=16; 255&quot;</span> | bc <span class="comment"># FF</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%x\n&quot;</span> <span class="string">&quot;255&quot;</span> <span class="comment"># ff，%x 表示十六进制数，小写</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%X\n&quot;</span> <span class="string">&quot;255&quot;</span> <span class="comment"># FF，%X 表示十六进制数，大写</span></span><br></pre></td></tr></table></figure><h3 id="2进制转其它进制">2进制转其它进制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2进制转10进制，ibase=2 指定输入进制为二进制，默认为10进制。</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ibase=2; 11111111&quot;</span> | bc <span class="comment"># 255</span></span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">2#11111111</span>)) <span class="comment"># 255，内置的算术运算 $((...))，可以实现其它进制转10进制</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d\n&quot;</span> <span class="string">&quot;0b11111111&quot;</span> <span class="comment"># 255，%d 表示十进制数，对于二进制数，你需要在数字前面加上 0b 的前缀</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d\n&quot;</span> $((<span class="number">2#11111111</span>)) <span class="comment"># 255</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2进制转16进制，两个同时出现时要先声明obase，再声明ibase，否则输出结果错误</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;obase=16; ibase=2; 11111111&quot;</span> | bc  <span class="comment"># FF</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%X\n&quot;</span> <span class="string">&quot;0b11111111&quot;</span> <span class="comment"># FF</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%x\n&quot;</span> <span class="string">&quot;0b11111111&quot;</span> <span class="comment"># ff</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%X\n&quot;</span> $((<span class="number">2#11111111</span>)) <span class="comment"># FF</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%x\n&quot;</span> $((<span class="number">2#11111111</span>)) <span class="comment"># ff</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2进制转8进制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;obase=8; ibase=2; 11111111&quot;</span> | bc <span class="comment"># 377</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%o\n&quot;</span> <span class="string">&quot;0b11111111&quot;</span> <span class="comment"># 377</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%o\n&quot;</span> $((<span class="number">2#11111111</span>)) <span class="comment"># 377</span></span><br></pre></td></tr></table></figure><h3 id="8进制转其它进制">8进制转其它进制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 8进制转10进制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ibase=8; 377&quot;</span> | bc <span class="comment"># 255</span></span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">8#377</span>)) <span class="comment"># 255</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d\n&quot;</span> $((<span class="number">8#377</span>))  <span class="comment"># 255</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8进制转2进制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;obase=2; ibase=8; 377&quot;</span> | bc <span class="comment"># 11111111</span></span><br><span class="line"><span class="comment"># printf不支持到二进制的转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8进制转16进制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;obase=16; ibase=8; 377&quot;</span> | bc <span class="comment"># FF</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%X\n&quot;</span> <span class="string">&quot;<span class="subst">$((8#377)</span>)&quot;</span> <span class="comment"># FF</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%x\n&quot;</span> <span class="string">&quot;<span class="subst">$((8#377)</span>)&quot;</span> <span class="comment"># ff</span></span><br></pre></td></tr></table></figure><h3 id="16进制转其它进制">16进制转其它进制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 16进制转10进制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ibase=16; FF&quot;</span> | bc <span class="comment"># 255</span></span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">16</span>#FF)) <span class="comment"># 255</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d\n&quot;</span> <span class="string">&quot;0xFF&quot;</span>  <span class="comment"># 255，%d 表示十进制数，对于十六进制数，你需要在数字前面加上 0x 的前缀</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d\n&quot;</span> $((<span class="number">16</span>#FF)) <span class="comment"># 255</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 16进制转2进制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;obase=2; ibase=16; FF&quot;</span> | bc <span class="comment"># 11111111</span></span><br><span class="line"><span class="comment"># printf不支持到二进制的转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 16进制转8进制</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;obase=8; ibase=16; FF&quot;</span> | bc <span class="comment"># 377</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%o\n&quot;</span> <span class="string">&quot;0xFF&quot;</span> <span class="comment"># 377</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%o\n&quot;</span> <span class="string">&quot;<span class="subst">$((16#FF)</span>)&quot;</span> <span class="comment"># 377</span></span><br></pre></td></tr></table></figure><h2 id="echo-与-printf-的比较">echo 与 printf 的比较</h2><h3 id="输出效果的比较">输出效果的比较</h3><ul class="lvl-0"><li class="lvl-2"><p>echo 会自动换行，而 printf 需要显式指定换行符。</p></li><li class="lvl-2"><p>printf 提供更灵活的格式化输出方式。</p></li></ul><h3 id="性能比较">性能比较</h3><ul class="lvl-0"><li class="lvl-2"><p>在大量输出时，echo 通常比 printf 更高效。</p></li></ul><h3 id="适用场景的选择">适用场景的选择</h3><ul class="lvl-0"><li class="lvl-2"><p>简单文本输出场景，使用 echo。</p></li><li class="lvl-2"><p>需要格式化输出或者更精确控制输出格式时，使用 printf。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;在编写 shell 脚本时，echo 和 printf 是两个常用的命令，用于输出信息到标准输出设备。虽然它们看似简单，但深入理解它们的使用方式和内部机制对于编写高效、可读性强的脚本至关重要。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>MacOS下一些有用的脚本</title>
    <link href="https://blog.hanqunfeng.com/2024/02/23/macos-shell-useful/"/>
    <id>https://blog.hanqunfeng.com/2024/02/23/macos-shell-useful/</id>
    <published>2024-02-23T13:55:05.000Z</published>
    <updated>2024-04-03T03:45:37.272Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>这里列举一些macos下一些有用的shell脚本</p></li><li class="lvl-2"><p>与本文脚本对应的centos脚本可以参看<a href="https://gitee.com/hanqunfeng/centos-shell.git">centos-shell</a></p></li></ul><span id="more"></span><h2 id="查看端口被哪个进程占用">查看端口被哪个进程占用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#filename：port 授予执行权限</span></span><br><span class="line"><span class="comment">#功能：查询端口被哪个进程占用</span></span><br><span class="line"><span class="comment">#执行方法：port 8080</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line">port=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$port</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;请加上端口作为参数，如：port 8080&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    lsof -i :<span class="variable">$&#123;port&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="杀掉占用某个端口的进程">杀掉占用某个端口的进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#filename：killport 授予执行权限</span></span><br><span class="line"><span class="comment">#功能：关闭占用端口的进程</span></span><br><span class="line"><span class="comment">#执行方法：killport 8080</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;请加上端口作为参数，如：killport 8080&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;kill  begin........&quot;</span></span><br><span class="line">    pid=`port <span class="variable">$1</span> | awk <span class="string">&#x27;NR&gt;1 &#123;print $2&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$pid</span></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$pid</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;No process running.&quot;</span></span><br><span class="line">            <span class="comment">#exit -1;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;The process(<span class="variable">$&#123;pid&#125;</span>) is running...&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">kill</span> <span class="variable">$&#123;pid&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;kill process(<span class="variable">$&#123;pid&#125;</span>) OK&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="本机端口通过跳板机转发到远程端口">本机端口通过跳板机转发到远程端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#filename：ssh_port 授予执行权限</span></span><br><span class="line"><span class="comment">#功能：本机端口通过跳板机转发到远程端口</span></span><br><span class="line"><span class="comment">#执行方法：</span></span><br><span class="line"><span class="comment"># ssh_port start 8080 10.10.2.2 80</span></span><br><span class="line"><span class="comment"># ssh_port stop 8080</span></span><br><span class="line"><span class="comment"># ssh_port status 8080</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check</span></span>()&#123;</span><br><span class="line">    <span class="comment">#验证参数是否为空</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$&#123;#@&#125;</span> &lt; 1 ]];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入参数！&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;开启端口转发：ssh_port start 8080 10.10.2.2 80&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;关闭端口转发：ssh_port stop 8080&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;查看端口状态：ssh_port status 8080&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 工作目录</span></span><br><span class="line">WORKDIR=<span class="string">&quot;/Users/<span class="subst">$(whoami)</span>/workdir&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 操作类型</span></span><br><span class="line">operation=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地端口</span></span><br><span class="line">local_port=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程 IP 地址</span></span><br><span class="line">remote_ip=<span class="string">&quot;<span class="variable">$3</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程端口</span></span><br><span class="line">remote_port=<span class="string">&quot;<span class="variable">$4</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SSH 控制套接字文件</span></span><br><span class="line">sock_file=<span class="string">&quot;<span class="variable">$WORKDIR</span>/<span class="variable">$local_port</span>.sock&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳板机，~/.ssh/config中的配置</span></span><br><span class="line">jump_name=jump-machine</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;start port begin........&quot;</span></span><br><span class="line">    pid=`port <span class="variable">$local_port</span> | grep ssh | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$pid</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># 建立连接</span></span><br><span class="line">        ssh -nNT -S <span class="string">&quot;<span class="variable">$sock_file</span>&quot;</span> -L 127.0.0.1:<span class="variable">$local_port</span>:<span class="variable">$remote_ip</span>:<span class="variable">$remote_port</span> <span class="variable">$jump_name</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;ssh -nNT -S <span class="variable">$&#123;sock_file&#125;</span> -L 127.0.0.1:<span class="variable">$&#123;local_port&#125;</span>:<span class="variable">$&#123;remote_ip&#125;</span>:<span class="variable">$&#123;remote_port&#125;</span> <span class="variable">$&#123;jump_name&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;start port success!&quot;</span></span><br><span class="line">        <span class="built_in">sleep</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;port is running.&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;stop port begin........&quot;</span></span><br><span class="line">    pid=`port <span class="variable">$local_port</span> | grep ssh | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$pid</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;No port running.&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;The port (<span class="variable">$&#123;pid&#125;</span>) is running...&quot;</span></span><br><span class="line">        <span class="comment"># kill -9 $pid</span></span><br><span class="line">        ssh -S <span class="variable">$sock_file</span> -O <span class="built_in">exit</span> <span class="variable">$jump_name</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;ssh -S <span class="variable">$sock_file</span> -O exit <span class="variable">$jump_name</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;stop port (<span class="variable">$&#123;pid&#125;</span>) success!&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;check status port begin........&quot;</span></span><br><span class="line">    pid=`port <span class="variable">$local_port</span> | grep ssh | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$pid</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;No port running.&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;The port (<span class="variable">$&#123;pid&#125;</span>) is running...&quot;</span></span><br><span class="line">        port <span class="variable">$local_port</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$operation</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 判断操作类型</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$operation</span>&quot;</span> == <span class="string">&quot;start&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># 建立连接</span></span><br><span class="line">        start</span><br><span class="line">    <span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$operation</span>&quot;</span> == <span class="string">&quot;stop&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># 关闭连接</span></span><br><span class="line">        stop</span><br><span class="line">    <span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$operation</span>&quot;</span> == <span class="string">&quot;status&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># 关闭连接</span></span><br><span class="line">        status</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        check</span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="查看域名到期时间">查看域名到期时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#filename：check_domain 授予执行权限</span></span><br><span class="line"><span class="comment">#功能：检查域名到期时间</span></span><br><span class="line"><span class="comment">#执行方法：check_domain baidu.com google.com</span></span><br><span class="line"><span class="comment">#输出结果：</span></span><br><span class="line"><span class="comment"># baidu.com，过期日期：2026-10-11</span></span><br><span class="line"><span class="comment"># 距离到期还有958天</span></span><br><span class="line"><span class="comment"># google.com，过期日期：2028-09-14</span></span><br><span class="line"><span class="comment"># 距离到期还有1662天</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#验证域名参数是否为空</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;#@&#125;</span> &lt; 1 ]];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;请输入域名，多个域名空格分隔，如：check_domain baidu.com google.com&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#检测域名到期时间</span></span><br><span class="line"><span class="keyword">for</span> domain <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>;<span class="keyword">do</span></span><br><span class="line">    <span class="comment">#取出域名过期时间</span></span><br><span class="line">    expire_date=`whois <span class="variable">$domain</span> | grep <span class="string">&quot;Expiration Time&quot;</span> | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>`</span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$expire_date</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">        expire_date=`whois <span class="variable">$domain</span> | grep <span class="string">&#x27;Expiry Date&#x27;</span>| awk <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>| <span class="built_in">cut</span> -d <span class="string">&#x27;T&#x27;</span> -f 1`</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;domain&#125;</span>，过期日期：<span class="variable">$&#123;expire_date&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#转换成时间戳</span></span><br><span class="line">    <span class="comment"># 1.linux</span></span><br><span class="line">    <span class="comment"># expire_date_timestamp=`date -d $expire_date +%s`</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2.macos</span></span><br><span class="line">    <span class="comment"># https://blog.csdn.net/zhw21w/article/details/126010972</span></span><br><span class="line">    expire_date_timestamp=`<span class="built_in">date</span> -j -f %Y-%m-%d <span class="variable">$expire_date</span> +%s`</span><br><span class="line">    <span class="comment">#以时间戳的形式显示当前时间</span></span><br><span class="line">    now=`<span class="built_in">date</span> <span class="string">&#x27;+%s&#x27;</span>`</span><br><span class="line">    <span class="comment">#域名到期剩余天数</span></span><br><span class="line">    time_left=$[$[<span class="variable">$expire_date_timestamp</span>-<span class="variable">$now</span>]/86400]</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;距离到期还有<span class="variable">$&#123;time_left&#125;</span>天&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="查看证书到期时间">查看证书到期时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#filename：ssl_check 授予执行权限</span></span><br><span class="line"><span class="comment">#功能：检查证书到期时间</span></span><br><span class="line"><span class="comment">#执行方法：ssl_check www.baidu.com www.google.com</span></span><br><span class="line"><span class="comment">#输出结果：</span></span><br><span class="line"><span class="comment"># 证书：www.baidu.com，过期时间：2024-08-06 01:51:05</span></span><br><span class="line"><span class="comment"># 距离到期还有161天</span></span><br><span class="line"><span class="comment"># 证书：www.google.com，过期时间：2024-04-29 08:19:49</span></span><br><span class="line"><span class="comment"># 距离到期还有62天</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#验证证书参数是否为空</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;#@&#125;</span> &lt; 1 ]];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;请输入证书，多个证书空格分隔，如：ssl_check www.baidu.com www.google.com&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取证书的有效时间</span></span><br><span class="line"><span class="keyword">for</span> domain <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>;<span class="keyword">do</span></span><br><span class="line">    <span class="comment"># 这里在openssl x509 -noout -dates后面加上了2&gt;/dev/null，否则会打印告警信息：Warning: Reading certificate from stdin since no -in or -new option is given</span></span><br><span class="line">    <span class="comment"># 您可以忽略此警告。它只是表明您没有使用 -in 或 -new 选项指定输入文件，因此 OpenSSL 将从标准输入 (stdin) 读取证书。</span></span><br><span class="line">    time=$(<span class="built_in">echo</span> | openssl s_client  -connect  <span class="variable">$domain</span>:443 2&gt;/dev/null | openssl x509 -noout -dates 2&gt;/dev/null |awk -F<span class="string">&#x27;=&#x27;</span> <span class="string">&#x27;NR==2&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">    <span class="comment">#echo $time</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#取出域名过期时间</span></span><br><span class="line">    expire_date=`<span class="built_in">env</span> LC_ALL=en_US.en <span class="built_in">date</span> -j -f <span class="string">&#x27;%b %d %H:%M:%S %Y GMT&#x27;</span> <span class="string">&quot;<span class="variable">$time</span>&quot;</span> <span class="string">&#x27;+%Y-%m-%d %H:%M:%S&#x27;</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;证书：<span class="variable">$domain</span>，过期时间：<span class="variable">$expire_date</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    expire_date_timestamp=`<span class="built_in">date</span> -j -f <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span> <span class="variable">$expire_date</span> +%s`</span><br><span class="line">    <span class="comment">#以时间戳的形式显示当前时间</span></span><br><span class="line">    now=`<span class="built_in">date</span> <span class="string">&#x27;+%s&#x27;</span>`</span><br><span class="line">    <span class="comment">#证书到期剩余天数</span></span><br><span class="line">    time_left=$[$[<span class="variable">$expire_date_timestamp</span>-<span class="variable">$now</span>]/86400]</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;距离到期还有<span class="variable">$&#123;time_left&#125;</span>天&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="查看指定IP的详细信息">查看指定IP的详细信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment"># filename：ip-info 授权执行权限</span></span><br><span class="line"><span class="comment"># 功能：查看IP信息</span></span><br><span class="line"><span class="comment"># 使用方法：ip-info 10.10.2.24/24</span></span><br><span class="line"><span class="comment"># 输出结果：</span></span><br><span class="line"><span class="comment">#  网络地址: 10.10.2.0</span></span><br><span class="line"><span class="comment">#  网关地址: 10.10.2.1</span></span><br><span class="line"><span class="comment">#  广播地址: 10.10.2.255</span></span><br><span class="line"><span class="comment">#  主机地址范围: 10.10.2.1 到 10.10.2.254</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以使用 sipcalc 命令，用法更多，显示也会更为详细：</span></span><br><span class="line"><span class="comment"># 安装：brew install sipcalc</span></span><br><span class="line"><span class="comment"># 使用示例：</span></span><br><span class="line"><span class="comment">#  sipcalc 1.119.161.30/30</span></span><br><span class="line"><span class="comment">#  sipcalc 10.10.2.32 255.255.255.0</span></span><br><span class="line"><span class="comment">#  sipcalc 10.10.2.32 0xffffff00</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否提供了正确数量的参数</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ne 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用法: <span class="variable">$0</span> &lt;IP地址/子网掩码CIDR&gt;&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取命令行参数</span></span><br><span class="line">ip_cidr=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分割IP地址和子网掩码</span></span><br><span class="line">IFS=<span class="string">&#x27;/&#x27;</span> <span class="built_in">read</span> -A ip_parts &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$ip_cidr</span>&quot;</span></span><br><span class="line">ip=<span class="variable">$&#123;ip_parts[1]&#125;</span></span><br><span class="line">subnet_cidr=<span class="variable">$&#123;ip_parts[2]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算子网掩码的二进制表示</span></span><br><span class="line">subnet_binary=$(<span class="built_in">printf</span> <span class="string">&#x27;1%.0s&#x27;</span> $(<span class="built_in">seq</span> 1 <span class="string">&quot;<span class="variable">$subnet_cidr</span>&quot;</span>) &amp;&amp; <span class="built_in">printf</span> <span class="string">&#x27;0%.0s&#x27;</span> $(<span class="built_in">seq</span> 1 $((<span class="number">32</span> - <span class="variable">$subnet_cidr</span>))))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将二进制子网掩码转换为点分十进制表示</span></span><br><span class="line">subnet_mask_decimal=$(<span class="built_in">printf</span> <span class="string">&quot;%d.%d.%d.%d&quot;</span> $((<span class="number">2</span>#<span class="variable">$&#123;subnet_binary:0:8&#125;</span>)) $((<span class="number">2</span>#<span class="variable">$&#123;subnet_binary:8:8&#125;</span>)) $((<span class="number">2</span>#<span class="variable">$&#123;subnet_binary:16:8&#125;</span>)) $((<span class="number">2</span>#<span class="variable">$&#123;subnet_binary:24:8&#125;</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用按位与运算计算网络地址</span></span><br><span class="line">network_address=$(<span class="built_in">printf</span> <span class="string">&quot;%d.%d.%d.%d&quot;</span> $(( $(echo <span class="variable">$ip</span> | cut -d. -f1) &amp; $(echo <span class="variable">$subnet_mask_decimal</span> | cut -d. -f1) )) $(( $(echo <span class="variable">$ip</span> | cut -d. -f2) &amp; $(echo <span class="variable">$subnet_mask_decimal</span> | cut -d. -f2) )) $(( $(echo <span class="variable">$ip</span> | cut -d. -f3) &amp; $(echo <span class="variable">$subnet_mask_decimal</span> | cut -d. -f3) )) $(( $(echo <span class="variable">$ip</span> | cut -d. -f4) &amp; $(echo <span class="variable">$subnet_mask_decimal</span> | cut -d. -f4) )))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算广播地址和网关地址</span></span><br><span class="line">broadcast_address=$(<span class="built_in">printf</span> <span class="string">&quot;%d.%d.%d.%d&quot;</span> $(( $(echo <span class="variable">$network_address</span> | cut -d. -f1) | (<span class="number">255</span> - $(echo <span class="variable">$subnet_mask_decimal</span> | cut -d. -f1) % <span class="number">256</span>) )) $(( $(echo <span class="variable">$network_address</span> | cut -d. -f2) | (<span class="number">255</span> - $(echo <span class="variable">$subnet_mask_decimal</span> | cut -d. -f2) % <span class="number">256</span>) )) $(( $(echo <span class="variable">$network_address</span> | cut -d. -f3) | (<span class="number">255</span> - $(echo <span class="variable">$subnet_mask_decimal</span> | cut -d. -f3) % <span class="number">256</span>) )) $(( $(echo <span class="variable">$network_address</span> | cut -d. -f4) | (<span class="number">255</span> - $(echo <span class="variable">$subnet_mask_decimal</span> | cut -d. -f4) % <span class="number">256</span>) )))</span><br><span class="line"></span><br><span class="line">gateway_address=$(<span class="built_in">printf</span> <span class="string">&quot;%d.%d.%d.%d&quot;</span> $(<span class="built_in">echo</span> <span class="variable">$network_address</span> | <span class="built_in">cut</span> -d. -f1) $(<span class="built_in">echo</span> <span class="variable">$network_address</span> | <span class="built_in">cut</span> -d. -f2) $(<span class="built_in">echo</span> <span class="variable">$network_address</span> | <span class="built_in">cut</span> -d. -f3) $(( $(echo <span class="variable">$network_address</span> | cut -d. -f4) + <span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;网络地址: <span class="variable">$network_address</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;网关地址: <span class="variable">$gateway_address</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;广播地址: <span class="variable">$broadcast_address</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算主机地址范围</span></span><br><span class="line">first_host=$(<span class="built_in">printf</span> <span class="string">&quot;%d.%d.%d.%d&quot;</span> $(<span class="built_in">echo</span> <span class="variable">$network_address</span> | <span class="built_in">cut</span> -d. -f1) $(<span class="built_in">echo</span> <span class="variable">$network_address</span> | <span class="built_in">cut</span> -d. -f2) $(<span class="built_in">echo</span> <span class="variable">$network_address</span> | <span class="built_in">cut</span> -d. -f3) $(( $(echo <span class="variable">$network_address</span> | cut -d. -f4) + <span class="number">1</span>)))</span><br><span class="line">last_host=$(<span class="built_in">printf</span> <span class="string">&quot;%d.%d.%d.%d&quot;</span> $(<span class="built_in">echo</span> <span class="variable">$broadcast_address</span> | <span class="built_in">cut</span> -d. -f1) $(<span class="built_in">echo</span> <span class="variable">$broadcast_address</span> | <span class="built_in">cut</span> -d. -f2) $(<span class="built_in">echo</span> <span class="variable">$broadcast_address</span> | <span class="built_in">cut</span> -d. -f3) $(( $(echo <span class="variable">$broadcast_address</span> | cut -d. -f4) - <span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;主机地址范围: <span class="variable">$first_host</span> 到 <span class="variable">$last_host</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看本机网络信息">查看本机网络信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#filename：ip</span></span><br><span class="line"><span class="comment">#执行方法：ip</span></span><br><span class="line"><span class="comment">#功能：查看本机网络信息</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认获取外网ip超时3秒</span></span><br><span class="line">maxtime=3</span><br><span class="line"></span><br><span class="line">net_ip=$(curl --max-time <span class="variable">$maxtime</span> --silent https://ipv4.icanhazip.com)</span><br><span class="line">MAC=$(ifconfig | grep en0: -A 7 | grep ether | <span class="built_in">cut</span> -d <span class="string">&quot; &quot;</span> -f 2)</span><br><span class="line">local_ip=$(ifconfig | grep -A 1 <span class="string">&quot;en&quot;</span> | grep broadcast | <span class="built_in">cut</span> -d <span class="string">&quot; &quot;</span> -f 2 | <span class="built_in">tr</span> <span class="string">&quot;\\n&quot;</span> <span class="string">&quot; &quot;</span>)</span><br><span class="line">DNS=$(nslookup localhost | grep Server | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MAC: <span class="variable">$&#123;MAC&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;IP: <span class="variable">$&#123;local_ip&#125;</span> <span class="variable">$&#123;net_ip&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;DNS: <span class="variable">$&#123;DNS&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">ip=`ifconfig | grep -A 1 <span class="string">&quot;en&quot;</span> | grep broadcast | <span class="built_in">cut</span> -d <span class="string">&quot; &quot;</span> -f 2`</span><br><span class="line">netmask=`ifconfig | grep -A 1 <span class="string">&quot;en&quot;</span> | grep broadcast | <span class="built_in">cut</span> -d <span class="string">&quot; &quot;</span> -f 4`</span><br><span class="line">Network=$(ipcalc -b <span class="variable">$ip</span> <span class="variable">$netmask</span> | grep Network | sed <span class="string">&#x27;s/   / /&#x27;</span> | awk -F <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\nIP详细信息:&quot;</span></span><br><span class="line">ip-info <span class="variable">$&#123;Network&#125;</span></span><br></pre></td></tr></table></figure><h2 id="将十进制IP地址转换为二进制形式">将十进制IP地址转换为二进制形式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#功能：将十进制IP地址转换为二进制形式</span></span><br><span class="line"><span class="comment">#filename：ipTo2</span></span><br><span class="line"><span class="comment">#执行方法：ipTo2 192.168.16.155</span></span><br><span class="line"><span class="comment">#输出结果：11000000.10101000.00010000.10011011</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否提供了正确数量的参数</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ne 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用法: ipTo2 192.168.16.155&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">ip=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">echo</span> <span class="variable">$&#123;ip&#125;</span> | <span class="built_in">tr</span> <span class="string">&#x27;.&#x27;</span> <span class="string">&#x27; &#x27;</span>); <span class="keyword">do</span> <span class="built_in">echo</span> <span class="string">&quot;obase=2 ; <span class="variable">$i</span>&quot;</span> | bc; <span class="keyword">done</span> | awk <span class="string">&#x27;&#123;printf &quot;.%08d&quot;, $1&#125;&#x27;</span> | <span class="built_in">cut</span> -c2-</span><br></pre></td></tr></table></figure><h2 id="将二进制形式转换为十进制IP地址">将二进制形式转换为十进制IP地址</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#功能：将十进制IP地址转换为二进制形式</span></span><br><span class="line"><span class="comment">#filename：2Toip</span></span><br><span class="line"><span class="comment">#执行方法：2Toip 11111111.11111111.11100000.00000000</span></span><br><span class="line"><span class="comment">#输出结果：255.255.224.0</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否提供了正确数量的参数</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ne 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用法: 2Toip 11111111.11111111.11100000.00000000&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span>|awk -F. <span class="string">&#x27;function bin2dec(a,b,i,c)&#123;b=length(a);c=0;for(i=1;i&lt;=b;i++)&#123;c+=c;if(substr(a,i,1)==&quot;1&quot;)c++&#125;return c&#125;&#123;for(j=1;j&lt;=NF;j++)printf(&quot;%d%s&quot;,bin2dec($j),j!=NF?&quot;.&quot;:&quot;\n&quot;)&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="字符串转ascii码">字符串转ascii码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#filename：strtoascii</span></span><br><span class="line"><span class="comment">#功能：字符串转ascii码</span></span><br><span class="line"><span class="comment">#执行方法：strtoascii 你好hello</span></span><br><span class="line"><span class="comment">#输出结果：\u4f60\u597d\u68\u65\u6c\u6c\u6f</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否提供了正确数量的参数</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ne 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用法: strtoascii 你好hello&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">str=<span class="variable">$1</span></span><br><span class="line">newstr=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="variable">$&#123;#str&#125;</span>;i=<span class="variable">$i</span>+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    text=<span class="string">&quot;<span class="variable">$&#123;str:$i:1&#125;</span>&quot;</span></span><br><span class="line">    newtext=`<span class="built_in">printf</span> <span class="string">&quot;%x&quot;</span> <span class="string">&quot;&#x27;<span class="variable">$text</span>&quot;</span>`;</span><br><span class="line">    newstr=<span class="variable">$newstr</span><span class="string">&quot;\\\\u&quot;</span><span class="variable">$newtext</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$newstr</span></span><br></pre></td></tr></table></figure><h2 id="ascii码转字符串">ascii码转字符串</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#filename：asciitostr</span></span><br><span class="line"><span class="comment">#功能： ascii码转字符串</span></span><br><span class="line"><span class="comment">#执行方法：asciitostr \u4f60\u597d\u68\u65\u6c\u6c\u6f</span></span><br><span class="line"><span class="comment">#输出结果：你好hello</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否提供了正确数量的参数</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ne 1 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;用法: asciitostr \u4f60\u597d\u68\u65\u6c\u6c\u6f&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否包含\u，如果不包含，添加双引号</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != *\\u* ]]; <span class="keyword">then</span></span><br><span class="line">  input=$(<span class="built_in">echo</span> -e <span class="variable">$1</span> | sed <span class="string">&#x27;s/u/\\u/g&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  input=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># 将Unicode转义序列解析为中文字符</span></span><br><span class="line">result=$(<span class="built_in">echo</span> -e <span class="variable">$input</span> | perl -pe <span class="string">&#x27;s/\\u([0-9a-fA-F]&#123;4&#125;)/chr(hex($1))/eg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$result</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="获取java文件的jdk编译版本">获取java文件的jdk编译版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env zsh</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"><span class="comment">#filename：jdk_version</span></span><br><span class="line"><span class="comment">#功能：获取对应java文件的jdk编译版本</span></span><br><span class="line"><span class="comment"># 如果是jar，这里只会检索jar包中第一个class的jdk编译版本，所以也不一定准确</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#执行方法：jdk_version &lt;file_path:[.jar|.class|.war]&gt;</span></span><br><span class="line"><span class="comment"># 1.jar示例：</span></span><br><span class="line"><span class="comment">#  jdk_version xxl-job-admin-2.3.0.jar</span></span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="comment">#  Build-Jdk: 1.8.0_271</span></span><br><span class="line"><span class="comment">#  file_path:[xxl-job-admin-2.3.0.jar]major_version:[52]jdk_version:[jdk1.8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.class示例</span></span><br><span class="line"><span class="comment">#  jdk_version XxlJobAdminConfig.class</span></span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="comment">#  file_path:[XxlJobAdminConfig.class]major_version:[52]jdk_version:[jdk1.8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.war示例</span></span><br><span class="line"><span class="comment">#  jdk_version wardir/BOSS.war</span></span><br><span class="line"><span class="comment"># 输出：</span></span><br><span class="line"><span class="comment">#  file_path:[wardir/BOSS.war]jdk_version:[1.7.0_67-b01 (Oracle Corporation)]</span></span><br><span class="line"><span class="comment">#################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义关联数组</span></span><br><span class="line"><span class="built_in">typeset</span> -A my_map</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向关联数组中添加键值对</span></span><br><span class="line"><span class="comment"># LTS:</span></span><br><span class="line"><span class="comment">#    8(2014年初发布，免费版本至8u202，从8u211开始商用收费，支持到2030年9月)</span></span><br><span class="line"><span class="comment">#    11(2018年9月发布，免费版本版本至11.0.2，后续版本商用收费，支持到2032年9月)</span></span><br><span class="line"><span class="comment">#    17(2021年9月发布，免费，支持到2029年9月)</span></span><br><span class="line"><span class="comment">#    21(2023年9月发布，免费，支持到2031年9月)</span></span><br><span class="line"><span class="comment">#    25(预计2025年9月发布，支持到2033年9月)</span></span><br><span class="line"><span class="comment"># 后续Oracle计划每半年发布一个新的大版本(3、9月)，每两年发布一次LTS(9月)，建议正式环境只使用LTS版本</span></span><br><span class="line"><span class="comment"># 此处可以查看jdk发布计划：https://www.java.com/en/releases/matrix/</span></span><br><span class="line"><span class="comment"># JDK下载地址：https://www.oracle.com/cn/java/technologies/downloads/</span></span><br><span class="line">my_map=(</span><br><span class="line">    [45]=<span class="string">&quot;jdk1.1&quot;</span></span><br><span class="line">    [46]=<span class="string">&quot;jdk1.2&quot;</span></span><br><span class="line">    [47]=<span class="string">&quot;jdk1.3&quot;</span></span><br><span class="line">    [48]=<span class="string">&quot;jdk1.4&quot;</span></span><br><span class="line">    [49]=<span class="string">&quot;jdk1.5&quot;</span></span><br><span class="line">    [50]=<span class="string">&quot;jdk1.6&quot;</span></span><br><span class="line">    [51]=<span class="string">&quot;jdk1.7&quot;</span></span><br><span class="line">    [52]=<span class="string">&quot;jdk1.8&quot;</span></span><br><span class="line">    [53]=<span class="string">&quot;jdk9&quot;</span></span><br><span class="line">    [54]=<span class="string">&quot;jdk10&quot;</span></span><br><span class="line">    [55]=<span class="string">&quot;jdk11&quot;</span></span><br><span class="line">    [56]=<span class="string">&quot;jdk12&quot;</span></span><br><span class="line">    [57]=<span class="string">&quot;jdk13&quot;</span></span><br><span class="line">    [58]=<span class="string">&quot;jdk14&quot;</span></span><br><span class="line">    [59]=<span class="string">&quot;jdk15&quot;</span></span><br><span class="line">    [60]=<span class="string">&quot;jdk16&quot;</span></span><br><span class="line">    [61]=<span class="string">&quot;jdk17&quot;</span></span><br><span class="line">    [62]=<span class="string">&quot;jdk18&quot;</span></span><br><span class="line">    [63]=<span class="string">&quot;jdk19&quot;</span></span><br><span class="line">    [64]=<span class="string">&quot;jdk20&quot;</span></span><br><span class="line">    [65]=<span class="string">&quot;jdk21&quot;</span></span><br><span class="line">    [66]=<span class="string">&quot;jdk22&quot;</span></span><br><span class="line">    [67]=<span class="string">&quot;jdk23&quot;</span></span><br><span class="line">    [68]=<span class="string">&quot;jdk24&quot;</span></span><br><span class="line">    [69]=<span class="string">&quot;jdk25&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">original_string=<span class="string">&quot;\tmajor_version\tjdk_version&quot;</span></span><br><span class="line"><span class="comment"># tr &#x27;[:lower:]&#x27; &#x27;[:upper:]&#x27; 将字符串中的小写字母转换为大写字母。输出结果将是 &quot;MAJOR_VERSION\tJDK_VERSION&quot;</span></span><br><span class="line">uppercase_string=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$original_string</span>&quot;</span> | <span class="built_in">tr</span> <span class="string">&#x27;[:lower:]&#x27;</span> <span class="string">&#x27;[:upper:]&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印map</span></span><br><span class="line"><span class="function"><span class="title">echo_map</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;uppercase_string&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">for</span> key val <span class="keyword">in</span> <span class="variable">$&#123;(kv)my_map&#125;</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;\t<span class="variable">$key</span>\t\t<span class="variable">$val</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">error_message</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Usage: jdk_version &lt;file_path:[.jar|.class|.war]&gt;&quot;</span></span><br><span class="line">    echo_map</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否传递了参数</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    error_message</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">file_path=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查文件是否存在</span></span><br><span class="line"><span class="keyword">if</span> [ ! -e <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;文件不存在:file_path:[<span class="variable">$&#123;file_path&#125;</span>]&quot;</span></span><br><span class="line">    error_message</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">greap_content=<span class="string">&quot;major version&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$file_path</span> == *.class ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 通过javap命令获取class文件的详细信息，grep过滤出包含 “major version” 的行，awk取出其版本号</span></span><br><span class="line">    key=$(javap -verbose <span class="variable">$&#123;file_path&#125;</span> | grep <span class="string">&quot;<span class="variable">$&#123;greap_content&#125;</span>&quot;</span> | awk -F<span class="string">&#x27;: &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$file_path</span> == *.jar ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 先通过“jar tf”命令获取jar包中的class文件，这里只取出第一个，注意这里class路径必须去掉“.class”，之后再通过javap命令获取“-classpath”所指定的jar中的这个第一个class文件的详细信息，grep过滤出包含 “major version” 的行，awk取出其版本号</span></span><br><span class="line">    key=$(javap -classpath <span class="variable">$&#123;file_path&#125;</span> -verbose $(jar tf <span class="variable">$&#123;file_path&#125;</span> | grep <span class="string">&quot;.class$&quot;</span> | <span class="built_in">head</span> -n 1 | sed s/.class//) | grep <span class="string">&quot;<span class="variable">$&#123;greap_content&#125;</span>&quot;</span> | awk -F<span class="string">&#x27;: &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">    <span class="comment"># 通过jar包中的MANIFEST.MF文件来判断打包的jdk版本</span></span><br><span class="line">    result=$(unzip -p <span class="variable">$&#123;file_path&#125;</span> $(jar tf <span class="variable">$&#123;file_path&#125;</span> | grep <span class="string">&quot;MANIFEST.MF$&quot;</span> | <span class="built_in">head</span> -n 1) | grep <span class="string">&quot;^Build-Jdk&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$result</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        result=$(unzip -p <span class="variable">$&#123;file_path&#125;</span> $(jar tf <span class="variable">$&#123;file_path&#125;</span> | grep <span class="string">&quot;MANIFEST.MF$&quot;</span> | <span class="built_in">head</span> -n 1) | grep <span class="string">&quot;^Created-By&quot;</span>)</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$result</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$result</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;没有在 MANIFEST.MF 中发现jdk相关信息&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$file_path</span> == *.war ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 查找 Build-Jdk</span></span><br><span class="line">    jdk_version=$(unzip -p <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>&quot;</span> META-INF/MANIFEST.MF | grep -i <span class="string">&quot;^Build-Jdk&quot;</span> | awk -F<span class="string">&#x27;: &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果 Build-Jdk 未找到，则尝试查找 Created-By</span></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$jdk_version</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        jdk_version=$(unzip -p <span class="string">&quot;<span class="variable">$&#123;file_path&#125;</span>&quot;</span> META-INF/MANIFEST.MF | grep -i <span class="string">&quot;^Created-By&quot;</span> | awk -F<span class="string">&#x27;: &#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    error_message</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印结果</span></span><br><span class="line"><span class="comment"># 输出 JDK 版本信息</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$key</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;file_path:[<span class="variable">$&#123;file_path&#125;</span>]\tmajor_version:[<span class="variable">$key</span>]\tjdk_version:[<span class="variable">$&#123;my_map[$key]&#125;</span>]&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ -n <span class="string">&quot;<span class="variable">$jdk_version</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># jdk_version含有特殊字符，通过如下命令查看包含哪些特殊字符，结果发现包含\r\n</span></span><br><span class="line">    <span class="comment"># echo &quot;$&#123;jdk_version&#125;&quot; | od -c</span></span><br><span class="line">    <span class="comment"># 去掉特殊字符 \r\n</span></span><br><span class="line">    jdk_version_cleaned=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;jdk_version&#125;</span>&quot;</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;\r\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span>  <span class="string">&quot;file_path:[<span class="variable">$&#123;file_path&#125;</span>]\t\tjdk_version:[<span class="variable">$&#123;jdk_version_cleaned&#125;</span>]&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;JDK Version information not found&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;这里列举一些macos下一些有用的shell脚本&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;与本文脚本对应的centos脚本可以参看&lt;a href=&quot;https://gitee.com/hanqunfeng/centos-shell.git&quot;&gt;centos-shell&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="macos" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/macos/"/>
    
    
    <category term="macos" scheme="https://blog.hanqunfeng.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>S3--AWS SDK for Java</title>
    <link href="https://blog.hanqunfeng.com/2024/01/26/aws-s3-java/"/>
    <id>https://blog.hanqunfeng.com/2024/01/26/aws-s3-java/</id>
    <published>2024-01-26T14:30:05.000Z</published>
    <updated>2024-04-03T03:45:37.007Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍如何使用AWS SDK for Java V2操作S3。</p></li><li class="lvl-2"><p>参考资料：</p><ul class="lvl-2"><li class="lvl-6"><a href="https://docs.aws.amazon.com/zh_cn/sdk-for-java/">AWS SDK for Java 文档</a></li><li class="lvl-6"><a href="https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/service_code_examples.html">适用于使用 AWS 软件开发工具包的 Amazon S3 的代码示例</a></li></ul></li></ul><span id="more"></span><h2 id="示例代码">示例代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqf.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hanqf.utils.AmazonS3V2Util;</span><br><span class="line"><span class="keyword">import</span> com.hanqf.utils.MyIOUtil;</span><br><span class="line"><span class="keyword">import</span> com.hanqf.utils.S3ClientFactory;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件下载，支持断点续传，支持分段下载</span></span><br><span class="line"><span class="comment">     * 分段下载的好处就是可以进行多线程下载，提高下载速度，下载完成后再将所有的分段文件进行合并成一个完整的文件</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 可以先下载一个字节的数据，此时可以获取文件总的字节数，然后基于这个总字节数决定分段大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/file-down-range&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fileDownRange</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 服务器上的文件路径，这里只是为了演示方便，实际使用时，需要根据文件的实际存储方式进行处理</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">localFileName</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;fileName&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(localFileName)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;没有上传fileName！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(localFileName);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(localFileName + <span class="string">&quot;:文件不存在！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">long</span> <span class="variable">contentLength</span> <span class="operator">=</span> file.length();</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">range</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Range&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">start</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(range) &amp;&amp; (range.contains(<span class="string">&quot;bytes=&quot;</span>) &amp;&amp; range.contains(<span class="string">&quot;-&quot;</span>))) &#123;</span><br><span class="line">            start = org.apache.commons.lang.StringUtils.substringBetween(range, <span class="string">&quot;bytes=&quot;</span>, <span class="string">&quot;-&quot;</span>);</span><br><span class="line">            end = org.apache.commons.lang.StringUtils.substringAfter(range, <span class="string">&quot;-&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">startIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">endIndex</span> <span class="operator">=</span> contentLength - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(start)) &#123;</span><br><span class="line">            startIndex = Long.parseLong(start);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(end)) &#123;</span><br><span class="line">            endIndex = Long.parseLong(end);</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;range:&quot;</span> + startIndex + <span class="string">&quot;~&quot;</span> + endIndex);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> localFileName;</span><br><span class="line">        <span class="keyword">if</span> (localFileName.contains(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">            fileName = localFileName.substring(localFileName.lastIndexOf(<span class="string">&quot;/&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(start)) &#123;</span><br><span class="line">            fileName = fileName + <span class="string">&quot;.&quot;</span> + startIndex + <span class="string">&quot;-&quot;</span> + endIndex;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">length</span> <span class="operator">=</span> endIndex - startIndex + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">&quot;application/octet-stream&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Accept-Ranges&quot;</span>, <span class="string">&quot;bytes&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Range&quot;</span>, <span class="string">&quot;bytes &quot;</span> + startIndex + <span class="string">&quot;-&quot;</span> + endIndex + <span class="string">&quot;/&quot;</span> + contentLength);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Length&quot;</span>, length + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + fileName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取文件流</span></span><br><span class="line">        <span class="keyword">try</span> (<span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream(); <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Files.newInputStream(file.toPath())) &#123;</span><br><span class="line">            MyIOUtil.copyDataFromInputStreamToOutputStream(inputStream, startIndex, length, outputStream, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * S3文件下载，分段下载</span></span><br><span class="line"><span class="comment">     * num 分段号，从1开始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/s3-down/&#123;num&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">s3Down</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">int</span> num, HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 分段下载测试</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">remoteFileName</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;fileName&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(remoteFileName)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(remoteFileName + <span class="string">&quot;:文件不存在！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> remoteFileName;</span><br><span class="line">        <span class="keyword">if</span> (remoteFileName.contains(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">            fileName = remoteFileName.substring(remoteFileName.lastIndexOf(<span class="string">&quot;/&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fileName = fileName + <span class="string">&quot;.&quot;</span> + num;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">long</span> <span class="variable">contentLength</span> <span class="operator">=</span> AmazonS3V2Util.getObjectInfo(S3ClientFactory.BUCKET_NAME, remoteFileName).contentLength();</span><br><span class="line">        <span class="keyword">final</span> java.util.List&lt;Long&gt; positions = AmazonS3V2Util.positions(contentLength);</span><br><span class="line">        positions.add(contentLength);</span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> positions.get(num - <span class="number">1</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> positions.get(num) - <span class="number">1</span>;</span><br><span class="line">        log.info(<span class="string">&quot;range:&quot;</span> + start + <span class="string">&quot;~&quot;</span> + end);</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">&quot;application/octet-stream&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Accept-Ranges&quot;</span>, <span class="string">&quot;bytes&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Range&quot;</span>, <span class="string">&quot;bytes &quot;</span> + start + <span class="string">&quot;-&quot;</span> + end + <span class="string">&quot;/&quot;</span> + contentLength);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Length&quot;</span>, (end - start + <span class="number">1</span>) + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + fileName);</span><br><span class="line">        <span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">        AmazonS3V2Util.downloadSubsectionAndCloseOutputStream(S3ClientFactory.BUCKET_NAME, remoteFileName, start, end, outputStream);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * S3文件下载，支持断点续传，支持分段下载</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/s3-down-range&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">s3DownRange</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">// 分段下载测试</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">remoteFileName</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;fileName&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(remoteFileName)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(remoteFileName + <span class="string">&quot;:文件不存在！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">long</span> <span class="variable">contentLength</span> <span class="operator">=</span> AmazonS3V2Util.getObjectInfo(S3ClientFactory.BUCKET_NAME, remoteFileName).contentLength();</span><br><span class="line">        <span class="type">String</span> <span class="variable">range</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Range&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">start</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">end</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(range) &amp;&amp; (range.contains(<span class="string">&quot;bytes=&quot;</span>) &amp;&amp; range.contains(<span class="string">&quot;-&quot;</span>))) &#123;</span><br><span class="line">            start = org.apache.commons.lang.StringUtils.substringBetween(range, <span class="string">&quot;bytes=&quot;</span>, <span class="string">&quot;-&quot;</span>);</span><br><span class="line">            end = org.apache.commons.lang.StringUtils.substringAfter(range, <span class="string">&quot;-&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">startIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">endIndex</span> <span class="operator">=</span> contentLength - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(start)) &#123;</span><br><span class="line">            startIndex = Long.parseLong(start);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(end)) &#123;</span><br><span class="line">            endIndex = Long.parseLong(end);</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;range:&quot;</span> + startIndex + <span class="string">&quot;~&quot;</span> + endIndex);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> remoteFileName;</span><br><span class="line">        <span class="keyword">if</span> (remoteFileName.contains(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">            fileName = remoteFileName.substring(remoteFileName.lastIndexOf(<span class="string">&quot;/&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(start)) &#123;</span><br><span class="line">            fileName = fileName + <span class="string">&quot;.&quot;</span> + startIndex + <span class="string">&quot;-&quot;</span> + endIndex;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">&quot;application/octet-stream&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Accept-Ranges&quot;</span>, <span class="string">&quot;bytes&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Range&quot;</span>, <span class="string">&quot;bytes &quot;</span> + startIndex + <span class="string">&quot;-&quot;</span> + endIndex + <span class="string">&quot;/&quot;</span> + contentLength);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Length&quot;</span>, (endIndex - startIndex + <span class="number">1</span>) + <span class="string">&quot;&quot;</span>);</span><br><span class="line">        response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + fileName);</span><br><span class="line">        <span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">        AmazonS3V2Util.downloadSubsectionAndCloseOutputStream(S3ClientFactory.BUCKET_NAME, remoteFileName, startIndex, endIndex, outputStream);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传文件到S3，支持分段上传</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/uploadToS3&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadFileToS3</span><span class="params">(MultipartFile file, String remoteFileName)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span> (file != <span class="literal">null</span> &amp;&amp; StringUtils.hasText(remoteFileName)) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;上传文件到S3：&quot;</span> + remoteFileName);</span><br><span class="line">            AmazonS3V2Util.multipartUpload(S3ClientFactory.BUCKET_NAME, remoteFileName, file.getBytes(), <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;上传成功&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="源码地址">源码地址</h2><ul class="lvl-0"><li class="lvl-2"><p>V2版本：<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/springboot3-demo/aws-s3-v2">https://github.com/hanqunfeng/springbootchapter/tree/master/springboot3-demo/aws-s3-v2</a></p></li><li class="lvl-2"><p>V1版本：<a href="https://github.com/hanqunfeng/springbootchapter/blob/master/springboot3-demo/resumed-transfer-offset/src/main/java/com/hanqf/resumedtransferoffset/utils/AmazonS3Util.java">https://github.com/hanqunfeng/springbootchapter/blob/master/springboot3-demo/resumed-transfer-offset/src/main/java/com/hanqf/resumedtransferoffset/utils/AmazonS3Util.java</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍如何使用AWS SDK for Java V2操作S3。&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul class=&quot;lvl-2&quot;&gt;
&lt;li class=&quot;lvl-6&quot;&gt;&lt;a href=&quot;https://docs.aws.amazon.com/zh_cn/sdk-for-java/&quot;&gt;AWS SDK for Java 文档&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;lvl-6&quot;&gt;&lt;a href=&quot;https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/service_code_examples.html&quot;&gt;适用于使用 AWS 软件开发工具包的 Amazon S3 的代码示例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="aws" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/aws/"/>
    
    <category term="s3" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/aws/s3/"/>
    
    
    <category term="s3" scheme="https://blog.hanqunfeng.com/tags/s3/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令--磁盘管理之RAID5</title>
    <link href="https://blog.hanqunfeng.com/2023/11/06/linux-command12-disk-raid5/"/>
    <id>https://blog.hanqunfeng.com/2023/11/06/linux-command12-disk-raid5/</id>
    <published>2023-11-06T15:30:05.000Z</published>
    <updated>2024-04-03T03:45:37.247Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>磁盘的挂载、分区、格式化、扩容等命令</p></li><li class="lvl-2"><p>本文基于<code>AWS EC2 EBS CentOS8(x86_64)</code></p></li></ul><span id="more"></span><h2 id="写在前面">写在前面</h2><ul class="lvl-0"><li class="lvl-2"><p>raid后不支持重新挂载到EC2</p></li><li class="lvl-2"><p>raid后同样支持分区和扩容，就把raid后的磁盘当作普通磁盘操作即可</p></li></ul><h2 id="创建raid5">创建raid5</h2><h3 id="1-登录aws挂载好3块磁盘-raid5要求至少3块盘-这里每个10g">1.登录aws挂载好3块磁盘,raid5要求至少3块盘,这里每个10g</h3><h3 id="2-创建raid5">2.创建raid5</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看磁盘名称，新挂载的磁盘为 nvme1n1，nvme2n1，nvme3n1</span></span><br><span class="line">$ lsblk</span><br><span class="line">NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">nvme0n1       259:0    0   8G  0 disk</span><br><span class="line">├─nvme0n1p1   259:1    0   8G  0 part /</span><br><span class="line">└─nvme0n1p128 259:2    0   1M  0 part</span><br><span class="line">nvme1n1       259:3    0  10G  0 disk</span><br><span class="line">nvme2n1       259:4    0  10G  0 disk</span><br><span class="line">nvme3n1       259:5    0  10G  0 disk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 /dev/md0 的raid5逻辑卷</span></span><br><span class="line">$ mdadm --create /dev/md0 --level=5 --raid-devices=3 /dev/nvme1n1 /dev/nvme2n1 /dev/nvme3n1</span><br><span class="line">mdadm: Defaulting to version 1.2 metadata</span><br><span class="line">mdadm: array /dev/md0 started.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分区情况，可以看到 /dev/md0 是20G</span></span><br><span class="line">$ fdisk -l</span><br><span class="line">Disk /dev/nvme0n1：8 GiB，8589934592 字节，16777216 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</span><br><span class="line">磁盘标签类型：gpt</span><br><span class="line">磁盘标识符：465F350B-EC19-47A2-9A1D-44ECF9FF38AC</span><br><span class="line"></span><br><span class="line">设备              起点     末尾     扇区 大小 类型</span><br><span class="line">/dev/nvme0n1p1    4096 16777182 16773087   8G Linux 文件系统</span><br><span class="line">/dev/nvme0n1p128  2048     4095     2048   1M BIOS 启动</span><br><span class="line"></span><br><span class="line">分区表记录没有按磁盘顺序。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/nvme1n1：10 GiB，10737418240 字节，20971520 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/nvme2n1：10 GiB，10737418240 字节，20971520 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/nvme3n1：10 GiB，10737418240 字节，20971520 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/md0：20 GiB，21458059264 字节，41910272 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：524288 字节 / 1048576 字节</span><br></pre></td></tr></table></figure><h3 id="3-格式化">3.格式化</h3><h4 id="3-1-ext4">3.1 ext4</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ mkfs.ext4 /dev/md0</span><br><span class="line">mke2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">文件系统标签=</span><br><span class="line">OS <span class="built_in">type</span>: Linux</span><br><span class="line">块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">分块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">Stride=128 blocks, Stripe width=256 blocks</span><br><span class="line">1310720 inodes, 5238784 blocks</span><br><span class="line">261939 blocks (5.00%) reserved <span class="keyword">for</span> the super user</span><br><span class="line">第一个数据块=0</span><br><span class="line">Maximum filesystem blocks=2153775104</span><br><span class="line">160 block <span class="built_in">groups</span></span><br><span class="line">32768 blocks per group, 32768 fragments per group</span><br><span class="line">8192 inodes per group</span><br><span class="line">Superblock backups stored on blocks:</span><br><span class="line">    32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,</span><br><span class="line">    4096000</span><br><span class="line"></span><br><span class="line">Allocating group tables: 完成</span><br><span class="line">正在写入inode表: 完成</span><br><span class="line">Creating journal (32768 blocks): 完成</span><br><span class="line">Writing superblocks and filesystem accounting information: 完成</span><br></pre></td></tr></table></figure><h4 id="3-2-xfs">3.2 xfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ mkfs.xfs /dev/md0</span><br><span class="line"><span class="built_in">log</span> stripe unit (524288 bytes) is too large (maximum is 256KiB)</span><br><span class="line"><span class="built_in">log</span> stripe unit adjusted to 32KiB</span><br><span class="line">meta-data=/dev/md0               isize=512    agcount=16, agsize=327296 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1, sparse=1, rmapbt=0</span><br><span class="line">         =                       reflink=1    bigtime=0 inobtcount=0</span><br><span class="line">data     =                       bsize=4096   blocks=5236736, imaxpct=25</span><br><span class="line">         =                       sunit=128    swidth=256 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0, ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=8 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure><h3 id="4-挂载">4.挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> /data</span><br><span class="line">$ mount /dev/md0 /data</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">df</span> -hT</span><br><span class="line">文件系统       类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs       devtmpfs  456M     0  456M    0% /dev</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /dev/shm</span><br><span class="line">tmpfs          tmpfs     464M  436K  464M    1% /run</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /sys/fs/cgroup</span><br><span class="line">/dev/nvme0n1p1 xfs       8.0G  1.7G  6.4G   21% /</span><br><span class="line">tmpfs          tmpfs      93M     0   93M    0% /run/user/1000</span><br><span class="line">/dev/md0       ext4       20G   24K   19G    1% /data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机自动挂载</span></span><br><span class="line"><span class="comment"># ext4</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;/dev/md0  /data ext4    defaults    0  0&#x27;</span> &gt;&gt; /etc/fstab</span><br><span class="line"><span class="comment"># xfs</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;/dev/md0  /data xfs    defaults    0  0&#x27;</span> &gt;&gt; /etc/fstab</span><br><span class="line">$ mount -a</span><br><span class="line"></span><br><span class="line">$ lsblk <span class="comment"># 此时可以看到 TYPE 为 raid5</span></span><br><span class="line">NAME          MAJ:MIN RM SIZE RO TYPE  MOUNTPOINT</span><br><span class="line">nvme0n1       259:0    0   8G  0 disk</span><br><span class="line">├─nvme0n1p1   259:1    0   8G  0 part  /</span><br><span class="line">└─nvme0n1p128 259:2    0   1M  0 part</span><br><span class="line">nvme1n1       259:3    0  10G  0 disk</span><br><span class="line">└─md0           9:0    0  20G  0 raid5 /data</span><br><span class="line">nvme2n1       259:4    0  10G  0 disk</span><br><span class="line">└─md0           9:0    0  20G  0 raid5 /data</span><br><span class="line">nvme3n1       259:5    0  10G  0 disk</span><br><span class="line">└─md0           9:0    0  20G  0 raid5 /data</span><br></pre></td></tr></table></figure><h3 id="5-检查Raid5状态">5.检查Raid5状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查 RAID5 数组的状态，重点关注 Array Size 和 Used Dev Size，前者表示raid5中总的磁盘大小，后者表示实际使用的磁盘大小</span></span><br><span class="line">$ mdadm --detail /dev/md0</span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Tue Oct 31 09:25:02 2023</span><br><span class="line">        Raid Level : raid5</span><br><span class="line">        Array Size : 20955136 (19.98 GiB 21.46 GB)</span><br><span class="line">     Used Dev Size : 10477568 (9.99 GiB 10.73 GB)</span><br><span class="line">      Raid Devices : 3</span><br><span class="line">     Total Devices : 3</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Tue Oct 31 09:45:35 2023</span><br><span class="line">             State : clean</span><br><span class="line">    Active Devices : 3</span><br><span class="line">   Working Devices : 3</span><br><span class="line">    Failed Devices : 0</span><br><span class="line">     Spare Devices : 0</span><br><span class="line"></span><br><span class="line">            Layout : left-symmetric</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">              Name : 0</span><br><span class="line">              UUID : 765ad648:3d03a9e0:5a86106f:2e24b14d</span><br><span class="line">            Events : 19</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       0     259        3        0      active <span class="built_in">sync</span>   /dev/sdf</span><br><span class="line">       1     259        4        1      active <span class="built_in">sync</span>   /dev/sdg</span><br><span class="line">       3     259        5        2      active <span class="built_in">sync</span>   /dev/sdh</span><br></pre></td></tr></table></figure><h2 id="添加新的磁盘到现有raid5">添加新的磁盘到现有raid5</h2><h3 id="1-登录aws挂载好1块磁盘-这里还是10g">1.登录aws挂载好1块磁盘,这里还是10g</h3><h3 id="2-查看磁盘名称">2.查看磁盘名称</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ lsblk  <span class="comment"># 这里新挂载的磁盘为 nvme4n1</span></span><br><span class="line">NAME          MAJ:MIN RM SIZE RO TYPE  MOUNTPOINT</span><br><span class="line">nvme0n1       259:0    0   8G  0 disk</span><br><span class="line">├─nvme0n1p1   259:1    0   8G  0 part  /</span><br><span class="line">└─nvme0n1p128 259:2    0   1M  0 part</span><br><span class="line">nvme1n1       259:3    0  10G  0 disk</span><br><span class="line">└─md0           9:0    0  20G  0 raid5 /data</span><br><span class="line">nvme2n1       259:4    0  10G  0 disk</span><br><span class="line">└─md0           9:0    0  20G  0 raid5 /data</span><br><span class="line">nvme3n1       259:5    0  10G  0 disk</span><br><span class="line">└─md0           9:0    0  20G  0 raid5 /data</span><br><span class="line">nvme4n1       259:6    0  10G  0 disk</span><br></pre></td></tr></table></figure><h3 id="3-格式化-2">3.格式化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xfs</span></span><br><span class="line">$ mkfs.xfs /dev/nvme4n1</span><br><span class="line"></span><br><span class="line"><span class="comment"># ext4</span></span><br><span class="line">$ mkfs.ext4 /dev/nvme4n1</span><br></pre></td></tr></table></figure><h3 id="4-加入raid5">4.加入raid5</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mdadm --add /dev/md0 /dev/nvme4n1</span><br><span class="line">mdadm: added /dev/nvme4n1</span><br></pre></td></tr></table></figure><h3 id="5-查看raid信息">5.查看raid信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看raid信息，此时可以看到新加入的磁盘被当作了备用盘：Spare Devices : 1</span></span><br><span class="line">$ mdadm --detail /dev/md0</span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Tue Oct 31 09:25:02 2023</span><br><span class="line">        Raid Level : raid5</span><br><span class="line">        Array Size : 20955136 (19.98 GiB 21.46 GB)</span><br><span class="line">     Used Dev Size : 10477568 (9.99 GiB 10.73 GB)</span><br><span class="line">      Raid Devices : 3</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Tue Oct 31 09:45:35 2023</span><br><span class="line">             State : clean</span><br><span class="line">    Active Devices : 3</span><br><span class="line">   Working Devices : 4</span><br><span class="line">    Failed Devices : 0</span><br><span class="line">     Spare Devices : 1</span><br><span class="line"></span><br><span class="line">            Layout : left-symmetric</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">              Name : 0</span><br><span class="line">              UUID : 765ad648:3d03a9e0:5a86106f:2e24b14d</span><br><span class="line">            Events : 19</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       0     259        3        0      active <span class="built_in">sync</span>   /dev/sdf</span><br><span class="line">       1     259        4        1      active <span class="built_in">sync</span>   /dev/sdg</span><br><span class="line">       3     259        5        2      active <span class="built_in">sync</span>   /dev/sdh</span><br><span class="line"></span><br><span class="line">       4     259        6        -      spare   /dev/sdi</span><br></pre></td></tr></table></figure><h3 id="6-将备用盘加入raid">6.将备用盘加入raid</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里扩容到4快盘</span></span><br><span class="line">$ mdadm --grow /dev/md0 --raid-devices=4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次查看raid信息</span></span><br><span class="line">$ mdadm --detail /dev/md0</span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Tue Oct 31 09:25:02 2023</span><br><span class="line">        Raid Level : raid5</span><br><span class="line">        Array Size : 20955136 (19.98 GiB 21.46 GB)</span><br><span class="line">     Used Dev Size : 10477568 (9.99 GiB 10.73 GB)</span><br><span class="line">      Raid Devices : 4</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Tue Oct 31 10:04:18 2023</span><br><span class="line">             State : clean, reshaping</span><br><span class="line">    Active Devices : 4</span><br><span class="line">   Working Devices : 4</span><br><span class="line">    Failed Devices : 0</span><br><span class="line">     Spare Devices : 0</span><br><span class="line"></span><br><span class="line">            Layout : left-symmetric</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">    Reshape Status : 5% complete</span><br><span class="line">     Delta Devices : 1, (3-&gt;4)</span><br><span class="line"></span><br><span class="line">              Name : 0</span><br><span class="line">              UUID : 765ad648:3d03a9e0:5a86106f:2e24b14d</span><br><span class="line">            Events : 39</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       0     259        3        0      active <span class="built_in">sync</span>   /dev/sdf</span><br><span class="line">       1     259        4        1      active <span class="built_in">sync</span>   /dev/sdg</span><br><span class="line">       3     259        5        2      active <span class="built_in">sync</span>   /dev/sdh</span><br><span class="line">       4     259        6        3      active <span class="built_in">sync</span>   /dev/sdi</span><br></pre></td></tr></table></figure><h3 id="7-监视同步过程：扩容后raid机制会将数据分配到新加入的磁盘">7.监视同步过程：扩容后raid机制会将数据分配到新加入的磁盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /proc/mdstat</span><br><span class="line">Personalities : [raid6] [raid5] [raid4]</span><br><span class="line">md0 : active raid5 nvme4n1[4] nvme3n1[3] nvme2n1[1] nvme1n1[0]</span><br><span class="line">      20955136 blocks super 1.2 level 5, 512k chunk, algorithm 2 [4/4] [UUUU]</span><br><span class="line">      [========&gt;............]  reshape = 42.7% (4484448/10477568) finish=3.9min speed=25563K/sec</span><br><span class="line"></span><br><span class="line">unused devices: &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以使用watch命令进行监控，这里设置为每隔1秒执行一次命令</span></span><br><span class="line">$ watch -n 1 <span class="built_in">cat</span> /proc/mdstat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成后的效果</span></span><br><span class="line">$ <span class="built_in">cat</span> /proc/mdstat</span><br><span class="line">Personalities : [raid6] [raid5] [raid4]</span><br><span class="line">md0 : active raid5 nvme4n1[4] nvme3n1[3] nvme2n1[1] nvme1n1[0]</span><br><span class="line">      31432704 blocks super 1.2 level 5, 512k chunk, algorithm 2 [4/4] [UUUU]</span><br><span class="line"></span><br><span class="line">unused devices: &lt;none&gt;</span><br></pre></td></tr></table></figure><h3 id="8-扩展文件系统">8.扩展文件系统</h3><h4 id="8-1-ext4">8.1 ext4</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ resize2fs /dev/md0</span><br><span class="line">resize2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem at /dev/md0 is mounted on /data; on-line resizing required</span><br><span class="line">old_desc_blocks = 3, new_desc_blocks = 4</span><br><span class="line">The filesystem on /dev/md0 is now 7858176 blocks long.</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">df</span> -hT</span><br><span class="line">文件系统       类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs       devtmpfs  456M     0  456M    0% /dev</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /dev/shm</span><br><span class="line">tmpfs          tmpfs     464M  500K  464M    1% /run</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /sys/fs/cgroup</span><br><span class="line">/dev/nvme0n1p1 xfs       8.0G  1.7G  6.4G   21% /</span><br><span class="line">tmpfs          tmpfs      93M     0   93M    0% /run/user/1000</span><br><span class="line">/dev/md0       ext4       30G   24K   28G    1% /data</span><br><span class="line">tmpfs          tmpfs      93M     0   93M    0% /run/user/0</span><br></pre></td></tr></table></figure><h4 id="8-2-xfs">8.2 xfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ xfs_growfs /dev/md0</span><br><span class="line">meta-data=/dev/md0               isize=512    agcount=17, agsize=327296 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1, sparse=1, rmapbt=0</span><br><span class="line">         =                       reflink=1    bigtime=0 inobtcount=0</span><br><span class="line">data     =                       bsize=4096   blocks=5238784, imaxpct=25</span><br><span class="line">         =                       sunit=128    swidth=256 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0, ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=8 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 5238784 to 7858176</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">df</span> -hT</span><br><span class="line">文件系统       类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs       devtmpfs  456M     0  456M    0% /dev</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /dev/shm</span><br><span class="line">tmpfs          tmpfs     464M  500K  464M    1% /run</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /sys/fs/cgroup</span><br><span class="line">/dev/nvme0n1p1 xfs       8.0G  1.7G  6.4G   21% /</span><br><span class="line">tmpfs          tmpfs      93M     0   93M    0% /run/user/1000</span><br><span class="line">/dev/md0       xfs        30G  248M   30G    1% /data</span><br><span class="line">tmpfs          tmpfs      93M     0   93M    0% /run/user/0</span><br></pre></td></tr></table></figure><h2 id="raid5后进行分区">raid5后进行分区</h2><ul class="lvl-0"><li class="lvl-2"><p>raid5后创建的逻辑卷同样支持分区，注意：如果已经mount，则分区前要先umount</p></li></ul><h3 id="1-创建分区，这里以MBR举例">1.创建分区，这里以MBR举例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">$ fdisk /dev/md0</span><br><span class="line"></span><br><span class="line">欢迎使用 fdisk (util-linux 2.30.2)。</span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">分区号 (1-128, 默认  1):</span><br><span class="line">第一个扇区 (34-83820510, 默认 4096):</span><br><span class="line">上个扇区，+sectors 或 +size&#123;K,M,G,T,P&#125; (4096-83820510, 默认 83820510): +10G</span><br><span class="line"></span><br><span class="line">创建了一个新分区 1，类型为“Linux filesystem”，大小为 10 GiB。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">分区号 (2-128, 默认  2):</span><br><span class="line">第一个扇区 (20975616-83820510, 默认 20975616):</span><br><span class="line">上个扇区，+sectors 或 +size&#123;K,M,G,T,P&#125; (20975616-83820510, 默认 83820510):</span><br><span class="line"></span><br><span class="line">创建了一个新分区 2，类型为“Linux filesystem”，大小为 30 GiB。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line">Disk /dev/md0：40 GiB，42916118528 字节，83820544 个扇区</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：524288 字节 / 2097152 字节</span><br><span class="line">磁盘标签类型：gpt</span><br><span class="line">磁盘标识符：73A41633-30A2-47D5-B812-6C419C795D7C</span><br><span class="line"></span><br><span class="line">设备           起点     末尾     扇区 大小 类型</span><br><span class="line">/dev/md0p1     4096 20975615 20971520  10G Linux 文件系统</span><br><span class="line">/dev/md0p2 20975616 83820510 62844895  30G Linux 文件系统</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：w</span><br><span class="line">分区表已调整。</span><br><span class="line">将调用 ioctl() 来重新读分区表。</span><br><span class="line">正在同步磁盘。</span><br></pre></td></tr></table></figure><h3 id="2-格式化，这里以xfs举例">2.格式化，这里以xfs举例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ mkfs.xfs /dev/md0p1</span><br><span class="line"><span class="built_in">log</span> stripe unit (524288 bytes) is too large (maximum is 256KiB)</span><br><span class="line"><span class="built_in">log</span> stripe unit adjusted to 32KiB</span><br><span class="line">meta-data=/dev/md0p1             isize=512    agcount=16, agsize=152576 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1, sparse=1, rmapbt=0</span><br><span class="line">         =                       reflink=1    bigtime=0 inobtcount=0</span><br><span class="line">data     =                       bsize=4096   blocks=2441150, imaxpct=25</span><br><span class="line">         =                       sunit=128    swidth=384 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0, ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=8 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line"></span><br><span class="line">$ mkfs.xfs /dev/md0p2</span><br><span class="line"><span class="built_in">log</span> stripe unit (524288 bytes) is too large (maximum is 256KiB)</span><br><span class="line"><span class="built_in">log</span> stripe unit adjusted to 32KiB</span><br><span class="line">meta-data=/dev/md0p2             isize=512    agcount=16, agsize=338560 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1, sparse=1, rmapbt=0</span><br><span class="line">         =                       reflink=1    bigtime=0 inobtcount=0</span><br><span class="line">data     =                       bsize=4096   blocks=5416320, imaxpct=25</span><br><span class="line">         =                       sunit=128    swidth=384 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0, ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2648, version=2</span><br><span class="line">         =                       sectsz=512   sunit=8 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure><h3 id="3-mount到指定路径">3.mount到指定路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> /data1</span><br><span class="line">$ <span class="built_in">mkdir</span> /data2</span><br><span class="line">$ mount /dev/md0p1 /data1</span><br><span class="line">$ mount /dev/md0p2 /data2</span><br><span class="line">$ <span class="built_in">df</span> -hT</span><br><span class="line">文件系统       类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs       devtmpfs  456M     0  456M    0% /dev</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /dev/shm</span><br><span class="line">tmpfs          tmpfs     464M  508K  464M    1% /run</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /sys/fs/cgroup</span><br><span class="line">/dev/nvme0n1p1 xfs       8.0G  1.7G  6.4G   21% /</span><br><span class="line">tmpfs          tmpfs      93M     0   93M    0% /run/user/1000</span><br><span class="line">tmpfs          tmpfs      93M     0   93M    0% /run/user/0</span><br><span class="line">/dev/md0p1     xfs       9.4G  100M  9.3G    2% /data1</span><br><span class="line">/dev/md0p2     xfs        21G  181M   21G    1% /data2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机自动挂载</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;/dev/md0p1  /data1 xfs    defaults    0  0&#x27;</span> &gt;&gt; /etc/fstab</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;/dev/md0p2  /data2 xfs    defaults    0  0&#x27;</span> &gt;&gt; /etc/fstab</span><br><span class="line">$ mount -a</span><br></pre></td></tr></table></figure><h3 id="4-扩容，添加新的磁盘，新的磁盘只能扩容最后一个分区，这里就是指的第二个分区">4.扩容，添加新的磁盘，新的磁盘只能扩容最后一个分区，这里就是指的第二个分区</h3><ul class="lvl-0"><li class="lvl-2"><p>raid5中添加新的磁盘参考上面的内容，这里不再赘述，这里添加一个10g的新磁盘</p></li><li class="lvl-2"><p>扩容最后一个分区</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ growpart /dev/md0 2</span><br><span class="line">CHANGED: partition=2 start=19531776 old: size=43330560 end=62862336 new: size=64288735 end=83820511</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>同步文件系统</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ xfs_growfs -d /data2</span><br><span class="line">meta-data=/dev/md0p2             isize=512    agcount=16, agsize=338560 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1, sparse=1, rmapbt=0</span><br><span class="line">         =                       reflink=1    bigtime=0 inobtcount=0</span><br><span class="line">data     =                       bsize=4096   blocks=5416320, imaxpct=25</span><br><span class="line">         =                       sunit=128    swidth=384 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0, ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2648, version=2</span><br><span class="line">         =                       sectsz=512   sunit=8 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 5416320 to 8036091</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">df</span> -hT</span><br><span class="line">文件系统       类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs       devtmpfs  456M     0  456M    0% /dev</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /dev/shm</span><br><span class="line">tmpfs          tmpfs     464M  460K  464M    1% /run</span><br><span class="line">tmpfs          tmpfs     464M     0  464M    0% /sys/fs/cgroup</span><br><span class="line">/dev/nvme0n1p1 xfs       8.0G  1.7G  6.4G   21% /</span><br><span class="line">tmpfs          tmpfs      93M     0   93M    0% /run/user/1000</span><br><span class="line">/dev/md0p1     xfs       9.4G  100M  9.3G    2% /data1</span><br><span class="line">/dev/md0p2     xfs        31G  253M   31G    1% /data2</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;磁盘的挂载、分区、格式化、扩容等命令&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;AWS EC2 EBS CentOS8(x86_64)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令--磁盘管理之逻辑卷</title>
    <link href="https://blog.hanqunfeng.com/2023/11/06/linux-command12-disk-lvs/"/>
    <id>https://blog.hanqunfeng.com/2023/11/06/linux-command12-disk-lvs/</id>
    <published>2023-11-06T14:30:05.000Z</published>
    <updated>2024-04-03T03:45:37.242Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>磁盘的挂载、分区、格式化、扩容等命令</p></li><li class="lvl-2"><p>本文基于<code>AWS EC2 EBS CentOS8(x86_64)</code></p></li></ul><span id="more"></span><h2 id="写在前面">写在前面</h2><ul class="lvl-0"><li class="lvl-2"><p>逻辑卷不支持<code>MBR</code>和<code>GPT</code>分区，但通过<code>MBR</code>和<code>GPT</code>分区后的子分区可以被加入到物理卷组，从而扩展原有逻辑分区或者创建新的逻辑分区</p></li><li class="lvl-2"><p>逻辑卷与普通的磁盘和分区一样，同样支持重新挂载到ec2，不过要将组成逻辑卷和物理卷组的所有磁盘都挂载到ec2后才有效</p></li></ul><h2 id="挂载新的逻辑卷">挂载新的逻辑卷</h2><h3 id="1-aws控制台–-卷–-创建一个新卷，注意选择可用区，然后点击操作–-挂载卷–选择对应的ec2实例">1.aws控制台–&gt;卷–&gt;创建一个新卷，注意选择可用区，然后点击操作–&gt;挂载卷–选择对应的ec2实例</h3><h3 id="2-ssh-登录-ec2，以下操作全责root下进行，初始磁盘情况如下">2.ssh 登录 ec2，以下操作全责root下进行，初始磁盘情况如下</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">df</span> -hT</span><br><span class="line">文件系统       类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs       devtmpfs  2.0G     0  2.0G    0% /dev</span><br><span class="line">tmpfs          tmpfs     2.0G     0  2.0G    0% /dev/shm</span><br><span class="line">tmpfs          tmpfs     2.0G  532K  2.0G    1% /run</span><br><span class="line">tmpfs          tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup</span><br><span class="line">/dev/xvda1     xfs       100G   13G   88G   13% /</span><br><span class="line">tmpfs          tmpfs     393M     0  393M    0% /run/user/1002</span><br><span class="line">tmpfs          tmpfs     393M     0  393M    0% /run/user/1001</span><br><span class="line">tmpfs          tmpfs     393M     0  393M    0% /run/user/1000</span><br><span class="line">/dev/xvdf      xfs        20G   53M   20G    1% /data</span><br></pre></td></tr></table></figure><h3 id="3-查看新挂载卷的名称，这里看到新挂载的卷名称为-xvdg">3.查看新挂载卷的名称，这里看到新挂载的卷名称为 <code>xvdg</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ lsblk</span><br><span class="line">NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">xvda    202:0    0  100G  0 disk</span><br><span class="line">└─xvda1 202:1    0  100G  0 part /</span><br><span class="line">xvdf    202:80   0   20G  0 disk /data</span><br><span class="line">xvdg    202:96   0   10G  0 disk</span><br></pre></td></tr></table></figure><h3 id="4-创建新物理卷">4.创建新物理卷</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建新物理卷，可以先分区再创建，这里为了省事不进行分区，也就是说，物理卷可以通过磁盘或者磁盘的子分区进行创建</span></span><br><span class="line">$ pvcreate /dev/xvdg</span><br><span class="line"> Physical volume <span class="string">&quot;/dev/xvdg&quot;</span> successfully created.</span><br><span class="line"><span class="comment"># 查看当期所有物理卷（或使用 pvdisplay 命令）</span></span><br><span class="line">pvs</span><br><span class="line">  PV         VG Fmt  Attr PSize  PFree</span><br><span class="line">  /dev/sdg      lvm2 ---  10.00g 10.00g</span><br></pre></td></tr></table></figure><h3 id="5-创建新物理卷组">5.创建新物理卷组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建新物理卷组，这里 vgnew 就是新卷组的名称</span></span><br><span class="line">$ vgcreate vgnew /dev/xvdg</span><br><span class="line">  Volume group <span class="string">&quot;vgnew&quot;</span> successfully created</span><br><span class="line"><span class="comment"># 查看卷组（或使用  命令）</span></span><br><span class="line">vgs</span><br><span class="line">  VG    <span class="comment">#PV #LV #SN Attr   VSize   VFree</span></span><br><span class="line">  vgnew   1   0   0 wz--n- &lt;10.00g &lt;10.00g</span><br></pre></td></tr></table></figure><h3 id="6-创建新逻辑卷">6.创建新逻辑卷</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建新逻辑卷，lvnew 为自定义逻辑卷名称，一个物理卷组可以创建多个逻辑卷，重点看物理卷组的剩余空间</span></span><br><span class="line">$ lvcreate -n lvnew -l 100%FREE vgnew   <span class="comment"># 这里的含义是将物理卷组中100%的剩余可用空间分配给新的逻辑卷，也可以只使用卷组的部分空余空间，如50%FREE，或者指定具体的容量：lvcreate -n lvnew -L 5G vgnew</span></span><br><span class="line">  Logical volume <span class="string">&quot;lvnew&quot;</span> created.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前所有逻辑卷（或使用 lvdisplay 命令）</span></span><br><span class="line">$ lvs</span><br><span class="line">  LV    VG    Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  lvnew vgnew -wi-a----- &lt;10.00g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看磁盘信息，注意此时创建的逻辑卷的全称为 vgnew-lvnew，与其对应的磁盘路径为 /dev/vgnew/lvnew ，其TYPE为 lvm，这里说一下TYPE: disk-磁盘卷，part-分区卷，lvm-逻辑卷</span></span><br><span class="line">$ lsblk</span><br><span class="line">NAME          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">xvda          202:0    0  100G  0 disk</span><br><span class="line">└─xvda1       202:1    0  100G  0 part /</span><br><span class="line">xvdf          202:80   0   20G  0 disk /data</span><br><span class="line">xvdg          202:96   0   10G  0 disk</span><br><span class="line">└─vgnew-lvnew 253:0    0   10G  0 lvm  /new_data</span><br></pre></td></tr></table></figure><h3 id="7-格式化新卷">7.格式化新卷</h3><h4 id="7-1-xfs">7.1 xfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ mkfs.xfs /dev/vgnew/lvnew</span><br><span class="line">meta-data=/dev/vgnew/lvnew       isize=512    agcount=4, agsize=655104 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=2620416, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure><h4 id="7-2-ext4">7.2 ext4</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ mkfs.ext4 /dev/vgnew/lvnew</span><br><span class="line">mke2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">文件系统标签=</span><br><span class="line">OS <span class="built_in">type</span>: Linux</span><br><span class="line">块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">分块大小=4096 (<span class="built_in">log</span>=2)</span><br><span class="line">Stride=0 blocks, Stripe width=0 blocks</span><br><span class="line">655360 inodes, 2620416 blocks</span><br><span class="line">131020 blocks (5.00%) reserved <span class="keyword">for</span> the super user</span><br><span class="line">第一个数据块=0</span><br><span class="line">Maximum filesystem blocks=2151677952</span><br><span class="line">80 block <span class="built_in">groups</span></span><br><span class="line">32768 blocks per group, 32768 fragments per group</span><br><span class="line">8192 inodes per group</span><br><span class="line">Superblock backups stored on blocks:</span><br><span class="line">    32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632</span><br><span class="line"></span><br><span class="line">Allocating group tables: 完成</span><br><span class="line">正在写入inode表: 完成</span><br><span class="line">Creating journal (32768 blocks): 完成</span><br><span class="line">Writing superblocks and filesystem accounting information: 完成</span><br></pre></td></tr></table></figure><h3 id="8-创建新路径并将新卷挂载上">8.创建新路径并将新卷挂载上</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> /new_data</span><br><span class="line">$ mount /dev/vgnew/lvnew /new_data</span><br><span class="line">$ <span class="built_in">df</span> -hT</span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  2.0G     0  2.0G    0% /dev</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     2.0G  544K  2.0G    1% /run</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup</span><br><span class="line">/dev/xvda1              xfs       100G   13G   88G   13% /</span><br><span class="line">/dev/xvdf               xfs        20G   53M   20G    1% /data</span><br><span class="line">tmpfs                   tmpfs     393M     0  393M    0% /run/user/1002</span><br><span class="line">tmpfs                   tmpfs     393M     0  393M    0% /run/user/1001</span><br><span class="line">tmpfs                   tmpfs     393M     0  393M    0% /run/user/1000</span><br><span class="line">/dev/mapper/vgnew-lvnew xfs        10G   43M   10G    1% /new_data</span><br></pre></td></tr></table></figure><h3 id="9-永久挂载卷">9.永久挂载卷</h3><h4 id="9-1-xfs">9.1 xfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/dev/mapper/vgnew-lvnew  /new_data xfs    defaults    0  0&#x27;</span> &gt;&gt; /etc/fstab</span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure><h4 id="9-2-ext4">9.2 ext4</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;/dev/mapper/vgnew-lvnew  /new_data ext4    defaults    0  0&#x27;</span> &gt;&gt; /etc/fstab</span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure><h2 id="添加新的磁盘到存在的逻辑卷">添加新的磁盘到存在的逻辑卷</h2><h3 id="1-添加新的磁盘，步骤同1，2，3，新卷名称-xvdh，注意物理卷的方式扩容只能添加新的磁盘，不支持修改ebs容量的方式进行扩容">1.添加新的磁盘，步骤同1，2，3，新卷名称 xvdh，注意物理卷的方式扩容只能添加新的磁盘，不支持修改ebs容量的方式进行扩容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ lsblk</span><br><span class="line">NAME          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">xvda          202:0    0  100G  0 disk</span><br><span class="line">└─xvda1       202:1    0  100G  0 part /</span><br><span class="line">xvdf          202:80   0   20G  0 disk /data</span><br><span class="line">xvdg          202:96   0   10G  0 disk</span><br><span class="line">└─vgnew-lvnew 253:0    0   10G  0 lvm  /new_data</span><br><span class="line">xvdh          202:112  0   10G  0 disk</span><br></pre></td></tr></table></figure><h3 id="2-创建新物理卷">2.创建新物理卷</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建新物理卷，可以先分区再创建，这里为了省事不进行分区</span></span><br><span class="line">$ pvcreate /dev/xvdh</span><br><span class="line">  Physical volume <span class="string">&quot;/dev/xvdh&quot;</span> successfully created.</span><br><span class="line"><span class="comment"># 查看当期所有物理卷（或使用 pvdisplay 命令）</span></span><br><span class="line">$ pvs</span><br><span class="line">  PV         VG    Fmt  Attr PSize   PFree</span><br><span class="line">  /dev/sdg   vgnew lvm2 a--  &lt;10.00g     0</span><br><span class="line">  /dev/sdh         lvm2 ---   10.00g 10.00g</span><br></pre></td></tr></table></figure><h3 id="3-扩展已有卷组">3.扩展已有卷组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将新的物理卷 /dev/sdh 加入卷组 vgnew</span></span><br><span class="line">$ vgextend vgnew /dev/sdh</span><br><span class="line">  Volume group <span class="string">&quot;vgnew&quot;</span> successfully extended</span><br><span class="line"><span class="comment"># 查看当前所有物理卷（或使用 pvdisplay 命令）</span></span><br><span class="line">$ pvs</span><br><span class="line">  PV         VG    Fmt  Attr PSize   PFree</span><br><span class="line">  /dev/sdg   vgnew lvm2 a--  &lt;10.00g      0</span><br><span class="line">  /dev/sdh   vgnew lvm2 a--  &lt;10.00g &lt;10.00g</span><br><span class="line"><span class="comment"># 查看卷组（或使用 vgdisplay 命令），此次可以看到卷组中剩余可用空间 VFree和总大小 VSize</span></span><br><span class="line">$ vgs</span><br><span class="line">  VG    <span class="comment">#PV #LV #SN Attr   VSize  VFree</span></span><br><span class="line">  vgnew   2   1   0 wz--n- 19.99g &lt;10.00g</span><br></pre></td></tr></table></figure><h3 id="4-扩容已有逻辑卷">4.扩容已有逻辑卷</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将卷组中的剩余空间添加到指定逻辑卷</span></span><br><span class="line">$ lvextend -l +100%FREE /dev/vgnew/lvnew</span><br><span class="line">  Size of logical volume vgnew/lvnew changed from &lt;10.00 GiB (2559 extents) to 19.99 GiB (5118 extents).</span><br><span class="line">  Logical volume vgnew/lvnew successfully resized.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以加上 -r,自动更新文件系统</span></span><br><span class="line">$ lvextend -r -l +100%FREE /dev/vgnew/lvnew</span><br><span class="line">  Size of logical volume vgnew/lvnew changed from 509.99 GiB (130558 extents) to &lt;519.99 GiB (133117 extents).</span><br><span class="line">  Logical volume vgnew/lvnew successfully resized.</span><br><span class="line">meta-data=/dev/mapper/vgnew-lvnew isize=512    agcount=817, agsize=163776 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1, sparse=1, rmapbt=0</span><br><span class="line">         =                       reflink=1    bigtime=0 inobtcount=0</span><br><span class="line">data     =                       bsize=4096   blocks=133691392, imaxpct=25</span><br><span class="line">         =                       sunit=1      swidth=1 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0, ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=1 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 133691392 to 136311808</span><br></pre></td></tr></table></figure><h3 id="5-更新文件系统，上面的扩展逻辑卷名称加上-r-后，就不需要执行的命令了">5.更新文件系统，上面的扩展逻辑卷名称加上 <code>-r</code> 后，就不需要执行的命令了</h3><h4 id="5-1-xfs">5.1 xfs</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ xfs_growfs /dev/vgnew/lvnew</span><br><span class="line">meta-data=/dev/mapper/vgnew-lvnew isize=512    agcount=4, agsize=655104 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=2620416, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 2620416 to 5240832</span><br></pre></td></tr></table></figure><h4 id="5-2-ext4">5.2 ext4</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ resize2fs /dev/mapper/vgnew-lvnew</span><br><span class="line">resize2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem at /dev/mapper/vgnew-lvnew is mounted on /new_data; on-line resizing required</span><br><span class="line">old_desc_blocks = 2, new_desc_blocks = 3</span><br><span class="line">The filesystem on /dev/mapper/vgnew-lvnew is now 5240832 blocks long.</span><br></pre></td></tr></table></figure><h4 id="5-3-查看结果">5.3 查看结果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">df</span> -hT</span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  2.0G     0  2.0G    0% /dev</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     2.0G  548K  2.0G    1% /run</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup</span><br><span class="line">/dev/xvda1              xfs       100G   13G   88G   13% /</span><br><span class="line">/dev/xvdf               xfs        20G   53M   20G    1% /data</span><br><span class="line">tmpfs                   tmpfs     393M     0  393M    0% /run/user/1002</span><br><span class="line">tmpfs                   tmpfs     393M     0  393M    0% /run/user/1001</span><br><span class="line">tmpfs                   tmpfs     393M     0  393M    0% /run/user/1000</span><br><span class="line">/dev/mapper/vgnew-lvnew xfs        20G   53M   20G    1% /new_data</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;磁盘的挂载、分区、格式化、扩容等命令&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;AWS EC2 EBS CentOS8(x86_64)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="linux常用命令" scheme="https://blog.hanqunfeng.com/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
</feed>
