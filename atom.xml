<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>飘逸峰的博客</title>
  
  <subtitle>Spring--Java程序员的春天</subtitle>
  <link href="https://blog.hanqunfeng.com/atom.xml" rel="self"/>
  
  <link href="https://blog.hanqunfeng.com/"/>
  <updated>2021-10-30T15:45:39.662Z</updated>
  <id>https://blog.hanqunfeng.com/</id>
  
  <author>
    <name>飘逸峰</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git常用命令</title>
    <link href="https://blog.hanqunfeng.com/2021/10/29/git-command/"/>
    <id>https://blog.hanqunfeng.com/2021/10/29/git-command/</id>
    <published>2021-10-29T13:30:05.000Z</published>
    <updated>2021-10-30T15:45:39.662Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>一起来了解一些git常用命令吧，持续更新中……</li></ul><span id="more"></span><h2 id="问题与方法"><a href="#问题与方法" class="headerlink" title="问题与方法"></a>问题与方法</h2><h3 id="1-别人在远程仓库中创建了新的branch，我本地执行git-branch-a却看不到，如何才能看到并checkout呢？"><a href="#1-别人在远程仓库中创建了新的branch，我本地执行git-branch-a却看不到，如何才能看到并checkout呢？" class="headerlink" title="1.别人在远程仓库中创建了新的branch，我本地执行git branch -a却看不到，如何才能看到并checkout呢？"></a>1.别人在远程仓库中创建了新的branch，我本地执行<code>git branch -a</code>却看不到，如何才能看到并checkout呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先要获取远端全部信息</span></span><br><span class="line">git fetch origin</span><br><span class="line"><span class="comment"># git fetch 远程名称，通过git remote查看，一般就是origin。</span></span><br><span class="line">git fetch <span class="comment"># 也可以不加远程名称</span></span><br><span class="line"><span class="comment"># 该命令无论在哪个分支上执行，都会更新本地所有的远程分支</span></span><br><span class="line"><span class="comment"># git fetch 完成了仅有的但是很重要的两步:</span></span><br><span class="line"><span class="comment"># 1.从远程仓库下载本地仓库中缺失的提交记录</span></span><br><span class="line"><span class="comment"># 2.更新远程分支指针(如 o/master)</span></span><br><span class="line"><span class="comment"># git fetch 实际上将本地仓库中的远程分支更新成了远程仓库相应分支最新的状态。</span></span><br><span class="line"><span class="comment"># git fetch 并不会改变你本地仓库的状态。它不会更新你的 本地 分支，也不会修改你磁盘上的文件。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.再查看分支信息</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.checkout到本地并切换到新创建的分支</span></span><br><span class="line">git checkout -b dev（本地分支名） origin/dev（远程分支名）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看当前分支的push和pull地址</span></span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h3 id="2-如何查看本地分支与远程分支的区别？"><a href="#2-如何查看本地分支与远程分支的区别？" class="headerlink" title="2.如何查看本地分支与远程分支的区别？"></a>2.如何查看本地分支与远程分支的区别？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先要获取远端全部信息</span></span><br><span class="line">git fetch origin</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git fetch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.切换到待比较的本地分支，如master</span></span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.比较当前分支与origin/master之间的不同，--stat只显示哪些文件有不同，如果要查看每个文件不同的详细信息就去掉--stat</span></span><br><span class="line">git diff origin/master --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.比较任意两个分支的不同，--stat只显示哪些文件有不同，如果要查看每个文件不同的详细信息就去掉--stat</span></span><br><span class="line">git diff origin/master..master --<span class="built_in">stat</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-如何查看本地两个分支之间的区别？"><a href="#3-如何查看本地两个分支之间的区别？" class="headerlink" title="3.如何查看本地两个分支之间的区别？"></a>3.如何查看本地两个分支之间的区别？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.比较任意两个分支的区别</span></span><br><span class="line">git diff master..dev --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.比较当前分支与master分支的区别</span></span><br><span class="line">git diff master --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h3 id="4-如何查看本地的发生了哪些更改？"><a href="#4-如何查看本地的发生了哪些更改？" class="headerlink" title="4.如何查看本地的发生了哪些更改？"></a>4.如何查看本地的发生了哪些更改？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前工作目录的索引和上次提交索引之间的差异，只有已经被commit过的文件才会被比较，如果是新增的文件则看不到</span></span><br><span class="line">git diff --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过`git status`命令查看本地都有哪些变化，包含新增为加入索引的，新增已加入索引的，已提交过但有改动的，等等</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看下次执行`git commit`时会被提交的文件</span></span><br><span class="line">git diff --cached --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看下次执行`git commit -a` 时会被提交的文件，-a表示先add再commit</span></span><br><span class="line">git diff HEAD --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h3 id="5-如何提交本地仓库？"><a href="#5-如何提交本地仓库？" class="headerlink" title="5.如何提交本地仓库？"></a>5.如何提交本地仓库？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地无论是新增文件或修改文件，都要add后才能commit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.先add再commit</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;message&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.add同时commit</span></span><br><span class="line"> git commit -a -m <span class="string">&#x27;message&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="6-如何回滚到指定版本或分支"><a href="#6-如何回滚到指定版本或分支" class="headerlink" title="6.如何回滚到指定版本或分支?"></a>6.如何回滚到指定版本或分支?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.回滚到上一个版本</span></span><br><span class="line">git reset --hard HEAD^</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.回滚到上上个版本</span></span><br><span class="line">git reset --hard HEAD^^</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.回滚到指定版本的分支</span></span><br><span class="line">git reset --hard 版本号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.1 查看版本号</span></span><br><span class="line">git <span class="built_in">log</span> --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.回滚到指定分支</span></span><br><span class="line">git reset --hard 分支名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.1 回滚到与本地远程分支一样的状态，一般本地仓库搞坏了会这么做</span></span><br><span class="line">git reset --hard origin/master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. `git log`看不到reset的历史，可以通过如下命令查看</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h3 id="7-gitignore中包含了已经提交了的内容，要怎么做才能不提交这些内容呢？"><a href="#7-gitignore中包含了已经提交了的内容，要怎么做才能不提交这些内容呢？" class="headerlink" title="7..gitignore中包含了已经提交了的内容，要怎么做才能不提交这些内容呢？"></a>7.<code>.gitignore</code>中包含了已经提交了的内容，要怎么做才能不提交这些内容呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.清空暂存区，之后重新提交</span></span><br><span class="line">git rm -r --cached .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.加入暂存区</span></span><br><span class="line">git add . <span class="comment"># 将当前目录下所有文件加入暂存区</span></span><br><span class="line">git add file/dir <span class="comment">#将指定文件或目录加入暂存区，支持通配符</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.查看暂存区内容</span></span><br><span class="line">git diff --cached</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.提交</span></span><br><span class="line">git commit -m <span class="string">&quot;message&quot;</span> <span class="comment"># 将暂存区内容提交到本地版本库</span></span><br><span class="line">git commit -am <span class="string">&quot;message&quot;</span> <span class="comment"># 先提交暂存区再提交到本地版本库</span></span><br></pre></td></tr></table></figure><h3 id="8-commit后发现有内容要修改或者注释写错了，但是不想创建新的一次commit，要怎么办呢？"><a href="#8-commit后发现有内容要修改或者注释写错了，但是不想创建新的一次commit，要怎么办呢？" class="headerlink" title="8.commit后发现有内容要修改或者注释写错了，但是不想创建新的一次commit，要怎么办呢？"></a>8.commit后发现有内容要修改或者注释写错了，但是不想创建新的一次commit，要怎么办呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意：以下命令必须在本地已经执行了至少一次commit后但尚未push前时才能执行，否则git push时会提示&quot;更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 覆盖上一次提交，这样不会产生新的提交</span></span><br><span class="line">git commit --amend  -am <span class="string">&quot;注释&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在上次提交中附加一些内容，保持提交日志不变</span></span><br><span class="line">git commit -a --amend --no-edit</span><br></pre></td></tr></table></figure><h3 id="9-如何查看提交日志"><a href="#9-如何查看提交日志" class="headerlink" title="9.如何查看提交日志?"></a>9.如何查看提交日志?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示版本历史，如果有用git reset --hard xxxxx回退操作，则只会显示到xxx之前的历史</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line">git <span class="built_in">log</span> --oneline <span class="comment"># 单行显示</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在所有提交日志中搜索包含「homepage」的提交</span></span><br><span class="line">git <span class="built_in">log</span> --all --grep=<span class="string">&#x27;homepage&#x27;</span> <span class="comment">#模糊匹配</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取某人的提交日志</span></span><br><span class="line">git <span class="built_in">log</span> --author=<span class="string">&quot;hanqf&quot;</span>  <span class="comment">#模糊匹配</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看完整版本历史，也就是说即便有git reset也会显示</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h3 id="10-如何创建本地仓库并绑定到远程仓库"><a href="#10-如何创建本地仓库并绑定到远程仓库" class="headerlink" title="10.如何创建本地仓库并绑定到远程仓库?"></a>10.如何创建本地仓库并绑定到远程仓库?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.首先要在对应的git服务器创建一个新的仓库，一般的git服务器创建新仓库后都会提示你如何绑定该仓库的</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 创建本地仓库</span></span><br><span class="line">git init <span class="comment">#将当前目录加入版本控制</span></span><br><span class="line">git init dir <span class="comment">#将dir加入版本控制</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 创建新的文件后提交到本地仓库</span></span><br><span class="line">git add . &amp;&amp; git commit -m <span class="string">&#x27;message&#x27;</span></span><br><span class="line">git commit -am <span class="string">&quot;备注&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.绑定远程仓库</span></span><br><span class="line">git remote add origin https://xxxxx (远程仓库地址)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.提交本地仓库的变更到远程仓库，这里要注意github的主分支名称已经变更为main，所以提交github时要将master替换为main</span></span><br><span class="line">git pull --rebase origin master <span class="comment">#获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</span></span><br><span class="line">git push -u origin master <span class="comment">#提交master到其远程仓库，第一次提交加上-u，以后就不用了</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git push <span class="comment"># 将当前分支提交到其对应的远程仓库</span></span><br></pre></td></tr></table></figure><h3 id="11-远程仓库地址变更后如何更新？"><a href="#11-远程仓库地址变更后如何更新？" class="headerlink" title="11.远程仓库地址变更后如何更新？"></a>11.远程仓库地址变更后如何更新？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.命令行修改</span></span><br><span class="line">git remote set-url origin [NEW_URL]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.手工编辑.git目录下的config文件</span></span><br><span class="line">[remote <span class="string">&quot;origin&quot;</span>]</span><br><span class="line">    url = https://xxxxxx (修改为新的地址)</span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.查看修改后的地址</span></span><br><span class="line">git remote get-url origin   <span class="comment">#只会显示可以fetch的地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看远程仓库地址</span></span><br><span class="line">git remote -v  <span class="comment"># 会显示push和fetch的地址</span></span><br></pre></td></tr></table></figure><h3 id="12-如何将本地仓库同时绑定到多个远程仓库？"><a href="#12-如何将本地仓库同时绑定到多个远程仓库？" class="headerlink" title="12.如何将本地仓库同时绑定到多个远程仓库？"></a>12.如何将本地仓库同时绑定到多个远程仓库？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.按照`10.如何创建本地仓库并绑定到远程仓库?`中的步骤完成第一个仓库的绑定</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.手工编辑.git目录下的config文件</span></span><br><span class="line">[remote <span class="string">&quot;origin&quot;</span>]</span><br><span class="line">    url = https://xxxxxxxx1  <span class="comment"># 此处为第一个远程仓库的地址，即可以push又可以fetch</span></span><br><span class="line">    url = https://xxxxxxxx2  <span class="comment"># 在此添加第二个仓库的地址，以此类推，可以添加多个，只可以push，只能备份使用</span></span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.保存后再次执行，这里要注意github的主分支名称已经变更为main，所以提交github时要将master替换为main</span></span><br><span class="line">git push -u origin master  <span class="comment"># 提交master到其远程仓库，只有第一次执行时需要加上 -u ，以后只需要：git push  origin master</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git push <span class="comment"># 将当前分支提交到其对应的远程仓库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看远程仓库地址</span></span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h3 id="13-如何在git-pull时不用每次都输入密码？"><a href="#13-如何在git-pull时不用每次都输入密码？" class="headerlink" title="13.如何在git pull时不用每次都输入密码？"></a>13.如何在<code>git pull</code>时不用每次都输入密码？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入项目目录</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行 git pull 并输入密码，此时当前项目就会记住密码了，下次再执行时就不用密码了</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h3 id="14-如果文件已经git-add到暂存区，但是尚未commit，此时如何将文件从暂存区中移除？"><a href="#14-如果文件已经git-add到暂存区，但是尚未commit，此时如何将文件从暂存区中移除？" class="headerlink" title="14.如果文件已经git add到暂存区，但是尚未commit，此时如何将文件从暂存区中移除？"></a>14.如果文件已经<code>git add</code>到暂存区，但是尚未commit，此时如何将文件从暂存区中移除？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 移出单个文件</span></span><br><span class="line">git restore --staged 文件路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移出本次全都add到暂存区的文件</span></span><br><span class="line">git reset .  <span class="comment"># 重置本次全部索引</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过git status查看文件路径</span></span><br><span class="line">git status</span><br></pre></td></tr></table></figure><h3 id="15-如何设置和查看git配置信息？"><a href="#15-如何设置和查看git配置信息？" class="headerlink" title="15.如何设置和查看git配置信息？"></a>15.如何设置和查看git配置信息？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用git config命令进行设置和查看</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局设置用户名和邮箱，全局配置是保存在 ~/.gitconfig中的</span></span><br><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只对当前项目有效，项目根目录下执行，去掉--global，项目配置优先级更高，项目配置保存在.git/config中，可以直接修改</span></span><br><span class="line">git config user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改你的用户名和邮箱</span></span><br><span class="line">git config --global --replace-all user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global --replace-all user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看配置</span></span><br><span class="line">git config --list  <span class="comment"># 此时项目配置和全局配置都会显示</span></span><br><span class="line"></span><br><span class="line">git config --global --list <span class="comment"># 只显示全局配置，全局配置是保存在 ~/.gitconfig中的</span></span><br><span class="line"></span><br><span class="line">git config user.name <span class="comment"># 查看某个配置的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改全局配置的值，--replace-all会匹配所有行，也可以直接在~/.gitconfig中修改</span></span><br><span class="line">git config --global --replace-all user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global --replace-all user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改项目配置的值，--replace-all会匹配所有行，也可以直接在.git/config中修改</span></span><br><span class="line">git config --replace-all user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --replace-all user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><h3 id="16-提交的文件太大-默认是1M-，导致push失败怎么办？"><a href="#16-提交的文件太大-默认是1M-，导致push失败怎么办？" class="headerlink" title="16.提交的文件太大(默认是1M)，导致push失败怎么办？"></a>16.提交的文件太大(默认是1M)，导致push失败怎么办？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加大缓冲区大小（http.postBuffer的参数）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 524288000 的单位代表 B，524288000B 也就是 500MB。</span></span><br><span class="line">git config http.postBuffer 524288000</span><br><span class="line"><span class="comment"># 或全局设置</span></span><br><span class="line">git config --global http.postBuffer 524288000</span><br></pre></td></tr></table></figure><h3 id="17-clone代码最简单的方式是通过https的形式，不过一般这样做需要输入用户名和密码，如果不想输入用户名和密码可以使用git-xxxx的形式，如何实现呢？"><a href="#17-clone代码最简单的方式是通过https的形式，不过一般这样做需要输入用户名和密码，如果不想输入用户名和密码可以使用git-xxxx的形式，如何实现呢？" class="headerlink" title="17.clone代码最简单的方式是通过https的形式，不过一般这样做需要输入用户名和密码，如果不想输入用户名和密码可以使用git@xxxx的形式，如何实现呢？"></a>17.clone代码最简单的方式是通过https的形式，不过一般这样做需要输入用户名和密码，如果不想输入用户名和密码可以使用<code>git@xxxx</code>的形式，如何实现呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这种方式就是基于ssh的密钥证书来实现</span></span><br><span class="line"><span class="comment"># 生成本地ssh密钥对，按照提示完成三次回车，即可生成 ssh key。此时会在~/.ssh/下创建id_rsa.pub(公钥)和id_rsa(私钥)</span></span><br><span class="line">ssh-keygen -b 4096 -t rsa <span class="comment"># -t 指定生成密钥的算法类型，生成的文件名称就是以其开头的，如这里就是id_rsa</span></span><br><span class="line"><span class="comment"># 支持的密钥算法类型包含：rsa,ed25519,等等，具体参见各个git服务器的配置说明</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时cat id_rsa.pub 可以看到公钥的内容</span></span><br><span class="line"><span class="comment"># 形式为:sshkey的算法+密文+sshkey的标签，此时sshkey算法为ssh-rsa，sshkey标签为机器名称，若要指定sshkey标签可以通过-C指定</span></span><br><span class="line">ssh-keygen -b 4096 -t rsa -C <span class="string">&quot;xxxxxxx&quot;</span></span><br><span class="line"><span class="comment"># 注意这里-C可以指定任意值，网上说必须指定邮箱其初衷仅仅是为了便于辨识</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将公钥文件内容复制到对应的git服务器配置ssh-key的地方，具体使用方式可以参见各个git服务器的说明。</span></span><br><span class="line"><span class="comment"># Github: settings--SSH and GPG keys--SSH keys--New SSH key</span></span><br><span class="line"><span class="comment"># 测试连接是否正常</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># Coding: 个人帐号设置--个人设置--SSH 公钥--新增公钥</span></span><br><span class="line"><span class="comment"># 测试连接是否正常</span></span><br><span class="line">ssh -T git@e.coding.net</span><br><span class="line"></span><br><span class="line"><span class="comment"># Gitee: 设置--安全设置--SSH公钥</span></span><br><span class="line"><span class="comment"># 测试连接是否正常</span></span><br><span class="line">ssh -T git@gitee.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># clone代码示例</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git</span><br></pre></td></tr></table></figure><h3 id="18-如何创建分支-切换分支-查看分支-删除分支？"><a href="#18-如何创建分支-切换分支-查看分支-删除分支？" class="headerlink" title="18.如何创建分支\切换分支\查看分支\删除分支？"></a>18.如何创建分支\切换分支\查看分支\删除分支？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从当前分支创建release分支，但是不切换</span></span><br><span class="line">git branch release</span><br><span class="line"><span class="comment"># 从当前分支切换到release分支</span></span><br><span class="line">git checkout release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从当前分支创建并切换到release分支，相当于执行git branch release &amp;&amp; git checkout release两个命令</span></span><br><span class="line">git checkout -b release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从dev分支创建release分支，但是不切换</span></span><br><span class="line">git branch release dev</span><br><span class="line"><span class="comment"># 从dev分支创建release分支,并切换</span></span><br><span class="line">git checkout -b release dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从指定版本创建release分支，版本号通过git log --oneline查看</span></span><br><span class="line">git branch release 799fb04</span><br><span class="line">git checkout -b release 799fb04</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从远程分支origin/release创建release分支，并切换</span></span><br><span class="line">git checkout -b release origin/release</span><br><span class="line"></span><br><span class="line"><span class="comment">#跳到上一个分支，比如当前是master分支，是从dev分支通过git checkout master命令切换过来的，那么该命令会重新回到dev分支</span></span><br><span class="line">git checkout -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line">git branch  <span class="comment">#列出所有本地分支，标*的就是当前所在的分支，.git/HEAD 文件中存放的就是当前分支信息</span></span><br><span class="line">git branch --remote   <span class="comment">#列出远程仓库中的所有分支</span></span><br><span class="line">git branch -a  <span class="comment">#同时显示本地和远程的所有分支</span></span><br><span class="line"></span><br><span class="line">cat .git/HEAD  <span class="comment">#查看当前所在分支</span></span><br><span class="line">git symbolic-ref HEAD <span class="comment">#查看当前所在分支</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line"><span class="comment"># 删除release分支，不能在release下删除自己</span></span><br><span class="line">git branch -d release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设我们通过master创建了release分支，此时release分支发生了变更并执行了commit，但是并没有将更改merge回master，此时删除release分支需要执行如下命令</span></span><br><span class="line">git branch -D release  <span class="comment"># -D 强制删除</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一起来了解一些git常用命令吧，持续更新中……&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="git" scheme="https://blog.hanqunfeng.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot的@Query注解</title>
    <link href="https://blog.hanqunfeng.com/2021/09/08/springboot-query/"/>
    <id>https://blog.hanqunfeng.com/2021/09/08/springboot-query/</id>
    <published>2021-09-08T12:33:15.000Z</published>
    <updated>2021-09-09T10:05:07.936Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>聊聊Spring Boot的@Query注解</li><li>参考：<a href="/2021/09/06/spring-boot-JpaRepository/" title="Spring Boot自定义JpaRepository基类">Spring Boot自定义JpaRepository基类</a></li></ul><span id="more"></span><h2 id="Query说明"><a href="#Query说明" class="headerlink" title="@Query说明"></a>@Query说明</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD, ElementType.ANNOTATION_TYPE&#125;)</span></span><br><span class="line"><span class="meta">@QueryAnnotation</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Query &#123;</span><br><span class="line">    <span class="comment">// 指定JPA Query语句,当nativeQuery=true时是原生的sql语句</span></span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//指定count的JPA Query语句,不指定则自动生成,当nativeQuery=true时是原生的sql语句,countQuery主要用来配合 value实现分页功能</span></span><br><span class="line">    <span class="function">String <span class="title">countQuery</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//依据哪个字段来count,如果未配置countQuery（）或countProjection（），将从原始查询派生count查询</span></span><br><span class="line">    <span class="function">String <span class="title">countProjection</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// 默认是false，表示value 里面是不是原生的Sql 语句</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">nativeQuery</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line">    <span class="comment">//指定一个query 的名字，必须是唯一的。 如果不指定，默认的生成规则是：&#123;$domainClass&#125;.$&#123;queryMethodName&#125;。使用命名查询时会用到。</span></span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//指定一个count 的query 名字，必须是唯一的。如果不指定，默认的生成规则是：&#123;$domainClass&#125;.$&#123;queryMethodName&#125;.count</span></span><br><span class="line">    <span class="function">String <span class="title">countName</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本用法示例"><a href="#基本用法示例" class="headerlink" title="基本用法示例"></a>基本用法示例</h2><ul><li><p>@Entity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_country&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Country</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 主键自增</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line"><span class="meta">@Column(name=&quot;id&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 中文简称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;name_zh&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nameZh;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 英文简称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;name_en&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nameEn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 英文全称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;name_en_full&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nameEnFull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 两字母代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;code_two&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String codeTwo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 三字母代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;code_three&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String codeThree;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 数字代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;num_code&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String numCode;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 备注</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;remark&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Country</span><span class="params">(Long id, String nameZh, String nameEn)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line"><span class="keyword">this</span>.nameZh = nameZh;</span><br><span class="line"><span class="keyword">this</span>.nameEn = nameEn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Country</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>Dto</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountryDto</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 主键自增</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 中文简称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nameZh;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 英文简称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nameEn;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 英文全称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nameEnFull;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 两字母代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String codeTwo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 三字母代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String codeThree;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 数字代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String numCode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 备注</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CountryDto</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CountryDto</span><span class="params">(Long id, String nameZh, String nameEn)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.nameZh = nameZh;</span><br><span class="line">        <span class="keyword">this</span>.nameEn = nameEn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Jpa</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title">BaseJpaRepository</span>&lt;<span class="title">Country</span>, <span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//sql查询，只有SELECT * 时才可以直接返回@Entity对象，但要有无参构造方法，page要指定countQuery</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT * FROM tbl_country WHERE id &gt; ?1&quot;, countQuery = &quot;SELECT count(*) FROM tbl_country WHERE id &gt; ?1&quot;, nativeQuery = true)</span></span><br><span class="line">    <span class="function">Page&lt;Country&gt; <span class="title">findByIdAfter</span><span class="params">(Long id, Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql查询，只有SELECT * 时才可以直接返回@Entity对象</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT * FROM tbl_country  WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">    <span class="function">Country <span class="title">findCountrySqlByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//hql查询部分属性时，返回@Entity对象，要在@Entity中创建对应的构造方法</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT new Country(id,nameZh,nameEn) FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">    <span class="function">Country <span class="title">findCountryHqlByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//hql查询部分属性时，返回非@Entity对象，要创建对应的构造方法，且必须使用全路径</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT new com.example.demo.CountryDto(id,nameZh,nameEn) FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">    <span class="function">CountryDto <span class="title">findCountryDtoNewHqlByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>返回@Entity对象，查询全部属性时，sql和hql都支持直接转换</li><li>返回@Entity对象，查询部分属性时，sql不支持直接转换，hql时，实体要有对应的构造方法</li><li>hql也可以返回Dto对象，查询部分属性时，同样需要Dto有对应的构造方法，注意Dto必须使用全路径</li></ul><h3 id="sql查询部分属性直接转换成对象的方法"><a href="#sql查询部分属性直接转换成对象的方法" class="headerlink" title="sql查询部分属性直接转换成对象的方法"></a>sql查询部分属性直接转换成对象的方法</h3><ul><li>方法1，前一篇文章<a href="/2021/09/06/spring-boot-JpaRepository/" title="Spring Boot自定义JpaRepository基类">Spring Boot自定义JpaRepository基类</a>中通过自定义JpaRepository基类，转换@Entity对象和Dto对象都支持</li><li>方法2，注入自定义的结果转换器，只能转换为Dto对象，下面说明如何实现</li></ul><h2 id="注入自定义的结果转换器"><a href="#注入自定义的结果转换器" class="headerlink" title="注入自定义的结果转换器"></a>注入自定义的结果转换器</h2><ul><li>无论是sql还是hql，查询部分属性时，jpa输出的结果都会被转化为Map对象，我们只需要注入一个能将Map转换为指定对象的转换器就可以了</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;注入自定义查询结果转换器&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JpaDtoConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里用到了上文“Spring Boot自定义JpaRepository基类”中介绍过的JpaUtil，通过json作为中间媒介</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JpaUtil jpaUtil;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化注入<span class="doctag">@JpaDto</span>对应的Converter</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = applicationContext.getBeansWithAnnotation(JpaDto.class);</span><br><span class="line">        <span class="keyword">for</span> (Object o : map.values()) &#123;</span><br><span class="line">            Class c = o.getClass();</span><br><span class="line">            log.info(<span class="string">&quot;Jpa添加Converter,class=&#123;&#125;&quot;</span>, c.getName());</span><br><span class="line">            DefaultConversionService defaultConversionService = ((DefaultConversionService) DefaultConversionService.getSharedInstance());</span><br><span class="line">            <span class="comment">//添加Map对象的转换器，将Map对象转换为指定的对象类型</span></span><br><span class="line">            defaultConversionService.addConverter(Map.class, c, m -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> jpaUtil.mapToObject(m, c, <span class="keyword">false</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> FatalBeanException(<span class="string">&quot;Jpa结果转换出错,class=&quot;</span> + c.getName(), e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>定义标记注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;注解标记，声明在Dto对象上，表示该对象作为结果对象时，可以被自定义结果转换器转化&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Target(value = &#123;ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> JpaDto &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>此时Dto对象上要加上@JpaDto注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JpaDto</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountryDto</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    …………………………</span><br><span class="line">    …………………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>JpaRepository示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title">BaseJpaRepository</span>&lt;<span class="title">Country</span>, <span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//hql查询部分属性时，一定有使用as别名，这里返回值不能是@Entity，并且其要标注@JpaDto注解</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id as id,nameZh as nameZh,nameEn as nameEn FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">    <span class="function">CountryDto <span class="title">findCountryDtoHqlByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql查询部分属性时，一定有使用as别名，这里返回值不能是@Entity，并且其要标注@JpaDto注解</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">    <span class="function">CountryDto <span class="title">findCountryDtoSqlByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql查询部分属性时，一定有使用as别名，这里返回值不能是@Entity，并且其要标注@JpaDto注解，page要指定countQuery</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE id &gt; ?1&quot;, countQuery = &quot;SELECT count(*) FROM tbl_country WHERE id &gt; ?1&quot;, nativeQuery = true)</span></span><br><span class="line">    <span class="function">Page&lt;CountryDto&gt; <span class="title">findByIdAfterDto</span><span class="params">(Long id, Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><ul><li>返回注解了@JpaDto注解的对象时，hql和sql都支持部分字段查询，但要注意字段要加as别名，别名与Dto对象属性名称要一致；</li><li>部分字段查询时，Dto对象中不必创建对应的构造方法；</li><li>查询部分属性时，不支持返回@Entity对象，即使在@Entity类上增加@JpaDto注解也不好使，说明其返回的不是Map对象</li><li>hql返回部分属性时，如果直接返回@Entity对象，会抛异常<code>Failed to convert from type [java.lang.Object[]] to type [com.example.demo.Country]</code>，提示类型转换失败，因其返回类型是java.lang.Object[]，所以也说明为什么要用构造方法的形式接收返回数据，就是要与数组位置一一对应上，所以hql返回部分属性，就要使用构造方法的形式；  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id as id,nameZh as nameZh,nameEn as nameEn FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line"><span class="function">Country <span class="title">findCountryHqlByNameError</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT new Country(id,nameZh,nameEn) FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line"><span class="function">Country <span class="title">findCountryHqlByNameOk</span><span class="params">(String name)</span></span>;</span><br></pre></td></tr></table></figure></li><li>sql返回部分属性时，如果直接返回@Entity对象，会抛异常<code>No such column: &#39;code_three&#39;.</code>，提示缺少字段。说明该形式在封装@Entity对象时需要遍历其所有@Column字段并为其赋值，此时可以返回Dto或者Map，也可以使用自定义JpaRepository的方式，还有一种方法就是使用命名查询，就是@NamedNativeQuery和@SqlResultSetMapping；  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line"><span class="function">Country <span class="title">findCountrySqlByNameError</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确，之后可以将map转换为@Entity对象，如通过json的方式</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line"><span class="function">Map <span class="title">findCountrySqlByNameOk</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">Object[] findCountrySqlByNameOk2(String name);</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确，CountryDto要加上@JpaDto注解</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line"><span class="function">CountryDto <span class="title">findCountrySqlByNameOk3</span><span class="params">(String name)</span></span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="命名查询"><a href="#命名查询" class="headerlink" title="命名查询"></a>命名查询</h2><ul><li><p>@NamedQuery，用于执行hql</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NamedQueries(&#123;</span></span><br><span class="line"><span class="meta">        @NamedQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;HQL_FIND_ALL_COUNTRY&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的hql</span></span><br><span class="line"><span class="meta">                query = &quot;from Country&quot;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_country&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Country</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    …………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>@NamedNativeQuery和@SqlResultSetMapping，用于执行sql，可以指定结果类型，不指定结果类型时返回java.lang.Object[]</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NamedNativeQueries(&#123;</span></span><br><span class="line"><span class="meta">        @NamedNativeQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_FIND_ALL_COUNTRY&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的sql</span></span><br><span class="line"><span class="meta">                query = &quot;select * from tbl_country&quot;,</span></span><br><span class="line"><span class="meta">                //指定返回类型</span></span><br><span class="line"><span class="meta">                resultClass = Country.class</span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @NamedNativeQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_FIND_ALL_COUNTRY2&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的sql</span></span><br><span class="line"><span class="meta">                query = &quot;select * from tbl_country&quot;,</span></span><br><span class="line"><span class="meta">                //通过@SqlResultSetMapping封装返回类型，这里是@SqlResultSetMapping的名称</span></span><br><span class="line"><span class="meta">                resultSetMapping = &quot;SQL_RESULT_COUNTRY_ALL&quot;</span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @NamedNativeQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_FIND_SOME_FIELD_COUNTRY&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的sql</span></span><br><span class="line"><span class="meta">                query = &quot;select id,name_zh as nameZh,name_en as nameEn from tbl_country&quot;,</span></span><br><span class="line"><span class="meta">                //通过@SqlResultSetMapping封装返回类型，这里是@SqlResultSetMapping的名称</span></span><br><span class="line"><span class="meta">                resultSetMapping = &quot;SQL_RESULT_COUNTRY_SOME_FIELD&quot;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@SqlResultSetMappings(&#123;</span></span><br><span class="line"><span class="meta">        @SqlResultSetMapping(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_RESULT_COUNTRY_ALL&quot;,</span></span><br><span class="line"><span class="meta">                //指定返回类的@Entity类型</span></span><br><span class="line"><span class="meta">                entities = &#123;</span></span><br><span class="line"><span class="meta">                        @EntityResult(</span></span><br><span class="line"><span class="meta">                                //指定返回类的@Entity类型</span></span><br><span class="line"><span class="meta">                                entityClass = Country.class</span></span><br><span class="line"><span class="meta">                        )</span></span><br><span class="line"><span class="meta">                &#125;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @SqlResultSetMapping(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_RESULT_COUNTRY_SOME_FIELD&quot;,</span></span><br><span class="line"><span class="meta">                //查询部分属性时，可以通过构造方法封装结果数据</span></span><br><span class="line"><span class="meta">                classes = &#123;</span></span><br><span class="line"><span class="meta">                        @ConstructorResult(</span></span><br><span class="line"><span class="meta">                                //指定返回类的@Entity类型</span></span><br><span class="line"><span class="meta">                                targetClass = Country.class,</span></span><br><span class="line"><span class="meta">                                //指定调用的构造方法</span></span><br><span class="line"><span class="meta">                                columns = &#123;</span></span><br><span class="line"><span class="meta">                                        @ColumnResult(name = &quot;id&quot;, type = Long.class),</span></span><br><span class="line"><span class="meta">                                        @ColumnResult(name = &quot;nameZh&quot;),</span></span><br><span class="line"><span class="meta">                                        @ColumnResult(name = &quot;nameEn&quot;)</span></span><br><span class="line"><span class="meta">                                &#125;</span></span><br><span class="line"><span class="meta">                        )</span></span><br><span class="line"><span class="meta">                &#125;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_country&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Country</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    …………</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Country</span><span class="params">(Long id, String nameZh, String nameEn)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.nameZh = nameZh;</span><br><span class="line">        <span class="keyword">this</span>.nameEn = nameEn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Country</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><ul><li>命名查询的注解只能声明在对应的@Entity类型上</li><li>@NamedNativeQuery名称必须全局唯一，可以通过<code>entityManager.createNamedQuery(String queryName)</code>进行调用</li><li>sql查询部分字段时@Entity一定要有对应的构造方法</li><li>返回类型必须是@Entity对象</li><li>@SqlResultSetMapping可以单独使用，其功能就是将sql的查询结果转换为指定的类型,<code>entityManager.createNativeQuery(String sqlString, String resultSetMapping)</code></li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li><p>通过entityManager的方法进行调用</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List list = entityManager.createNamedQuery(<span class="string">&quot;SQL_FIND_ALL_COUNTRY&quot;</span>).getResultList();</span><br><span class="line"></span><br><span class="line">List list = entityManager.createNativeQuery(<span class="string">&quot;select id,name_zh as nameZh,name_en as nameEn from tbl_country&quot;</span>,<span class="string">&quot;SQL_RESULT_COUNTRY_SOME_FIELD&quot;</span>).getResultList();</span><br></pre></td></tr></table></figure></li><li><p>通过在JpaRepository声明指定的@Query方法，并指定其name属性为对应的@NamedNativeQuery的name值</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title">BaseJpaRepository</span>&lt;<span class="title">Country</span>, <span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Query(name = &quot;HQL_FIND_ALL_COUNTRY&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Country&gt; <span class="title">nameHqlFindAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(name = &quot;SQL_FIND_ALL_COUNTRY&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Country&gt; <span class="title">nameSqlFindAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(name = &quot;SQL_FIND_ALL_COUNTRY2&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Country&gt; <span class="title">nameSqlFindAll2</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(name = &quot;SQL_FIND_SOME_FIELD_COUNTRY&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Country&gt; <span class="title">nameSqlFindSomeField</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;聊聊Spring Boot的@Query注解&lt;/li&gt;
&lt;li&gt;参考：&lt;a href=&quot;/2021/09/06/spring-boot-JpaRepository/&quot; title=&quot;Spring Boot自定义JpaRepository基类&quot;&gt;Spring Boot自定义JpaRepository基类&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.hanqunfeng.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot自定义JpaRepository基类</title>
    <link href="https://blog.hanqunfeng.com/2021/09/06/spring-boot-JpaRepository/"/>
    <id>https://blog.hanqunfeng.com/2021/09/06/spring-boot-JpaRepository/</id>
    <published>2021-09-06T12:33:15.000Z</published>
    <updated>2021-09-08T08:42:28.315Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>SpringBoot基于JPA的数据操作非常方便，我们只需继承JpaRepository就可以拥有强大的数据操控能力，但是偶尔我们需要进行复杂的操作，比如批量插入与更新，或者是复杂sql等等，此时就需要我们对JpaRepository进行一些扩展。</li><li>@Query注解也可以直接执行sql，但是其有一些局限，比如只有<code>select * </code>时才能直接封装为对象，只查询部分属性时就只能封装为Object[]或Map。如果希望@Query查询部分属性时也可以直接转换为对象，可以查看下一篇内容 <a href="/2021/09/08/springboot-query/" title="Spring Boot的@Query注解">Spring Boot的@Query注解</a></li></ul><span id="more"></span><h2 id="自定义JpaRepository接口"><a href="#自定义JpaRepository接口" class="headerlink" title="自定义JpaRepository接口"></a>自定义JpaRepository接口</h2><ul><li>包含一些常用操作，可以按需扩展</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jpa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.repository.NoRepositoryBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NoRepositoryBean</span> <span class="comment">//接口不参与jpa的代理</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseJpaRepository</span>&lt;<span class="title">T</span>, <span class="title">ID</span> <span class="keyword">extends</span> <span class="title">Serializable</span>&gt; <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">T</span>, <span class="title">ID</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">T</span>&gt;, <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">EntityManager <span class="title">getEntityManager</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">findByHql</span><span class="params">(String hql)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Map&gt; <span class="title">findBySql</span><span class="params">(String sql)</span></span>;</span><br><span class="line">    <span class="function">List&lt;Map&gt; <span class="title">findBySql</span><span class="params">(String sql, Object[] params)</span></span>;</span><br><span class="line">    <span class="function">List&lt;Map&gt; <span class="title">findBySql</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function">Map <span class="title">findBySqlFirst</span><span class="params">(String sql)</span></span>;</span><br><span class="line">    <span class="function">Map <span class="title">findBySqlFirst</span><span class="params">(String sql, Object[] params)</span></span>;</span><br><span class="line">    <span class="function">Map <span class="title">findBySqlFirst</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * basic == true 表示基本数据类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">findBySql</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic)</span></span>;</span><br><span class="line">    &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">findBySql</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic, Object[] params)</span></span>;</span><br><span class="line">    &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">findBySql</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic, Map&lt;String, Object&gt; params)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic)</span></span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic)</span></span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic, Object[] params)</span></span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic, Object[] params)</span></span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic, Map&lt;String, Object&gt; params)</span></span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic, Map&lt;String, Object&gt; params)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * basic == true 表示基本数据类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;E&gt; <span class="function">E <span class="title">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic)</span></span>;</span><br><span class="line">    &lt;E&gt; <span class="function">E <span class="title">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic, Object[] params)</span></span>;</span><br><span class="line">    &lt;E&gt; <span class="function">E <span class="title">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic, Map&lt;String, Object&gt; params)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function">T <span class="title">findByIdNew</span><span class="params">(ID id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量插入</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;S extends T&gt; <span class="function">Iterable&lt;S&gt; <span class="title">batchSave</span><span class="params">(Iterable&lt;S&gt; iterable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量更新</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;S extends T&gt; <span class="function">Iterable&lt;S&gt; <span class="title">batchUpdate</span><span class="params">(Iterable&lt;S&gt; iterable)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自定义JpaRepository接口的实现类"><a href="#自定义JpaRepository接口的实现类" class="headerlink" title="自定义JpaRepository接口的实现类"></a>自定义JpaRepository接口的实现类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jpa;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.context.ApplicationContextProvider;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.query.internal.NativeQueryImpl;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.transform.Transformers;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.support.JpaEntityInformation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.support.SimpleJpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Query;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseJpaRepositoryImpl</span>&lt;<span class="title">T</span>, <span class="title">ID</span> <span class="keyword">extends</span> <span class="title">Serializable</span>&gt; <span class="keyword">extends</span> <span class="title">SimpleJpaRepository</span>&lt;<span class="title">T</span>, <span class="title">ID</span>&gt; <span class="keyword">implements</span> <span class="title">BaseJpaRepository</span>&lt;<span class="title">T</span>, <span class="title">ID</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//批量更新时的阀值，每500条数据commit一次</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer BATCH_SIZE = <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过构造方法初始化EntityManager</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> EntityManager entityManager;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BaseJpaRepositoryImpl</span><span class="params">(JpaEntityInformation&lt;T, ID&gt; entityInformation, EntityManager entityManager)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(entityInformation, entityManager);</span><br><span class="line">        <span class="keyword">this</span>.entityManager = entityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EntityManager <span class="title">getEntityManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> entityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">findByHql</span><span class="params">(String hql)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (List&lt;E&gt;) entityManager.createQuery(hql)</span><br><span class="line">                .getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Map&gt; <span class="title">findBySql</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findBySql(sql, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Map&gt; <span class="title">findBySql</span><span class="params">(String sql, Object[] params)</span> </span>&#123;</span><br><span class="line">        Query nativeQuery = entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                nativeQuery.setParameter(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Map&gt; <span class="title">findBySql</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        Query nativeQuery = entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nativeQuery.setParameter(key, params.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">findBySql</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findBySql(sql, clazz, basic, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">findBySql</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic, Object[] params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapListToObjectList(findBySql(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">findBySql</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapListToObjectList(findBySql(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, pageable, clazz, basic, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, countSql, pageable, clazz, basic, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic, Object[] params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, <span class="keyword">null</span>, pageable, clazz, basic, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic, Object[] params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!sql.toLowerCase().contains(<span class="string">&quot;order by&quot;</span>)) &#123;</span><br><span class="line">            StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder(sql);</span><br><span class="line">            stringBuilder.append(<span class="string">&quot; order by &quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> Sort sort = pageable.getSort();</span><br><span class="line">            <span class="keyword">final</span> List&lt;Sort.Order&gt; orders = sort.toList();</span><br><span class="line">            <span class="keyword">for</span> (Sort.Order order : orders) &#123;</span><br><span class="line">                stringBuilder.append(order.getProperty())</span><br><span class="line">                        .append(<span class="string">&quot; &quot;</span>)</span><br><span class="line">                        .append(order.getDirection().name())</span><br><span class="line">                        .append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sql = stringBuilder.toString();</span><br><span class="line">            sql = sql.substring(<span class="number">0</span>, sql.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Query nativeQuery = entityManager.createNativeQuery(sql);</span><br><span class="line">        nativeQuery.setFirstResult(pageable.getPageNumber() * pageable.getPageSize());</span><br><span class="line">        nativeQuery.setMaxResults(pageable.getPageSize());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                nativeQuery.setParameter(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Map&gt; resultList = nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).getResultList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List&lt;E&gt; objectList = getJpaUtil().mapListToObjectList(resultList, clazz, basic);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(countSql)) &#123;</span><br><span class="line">            countSql = <span class="string">&quot;select count(*) from ( &quot;</span> + sql + <span class="string">&quot; ) a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> BigInteger count = findBySqlFirst(countSql, BigInteger.class, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        Page&lt;E&gt; page = <span class="keyword">new</span> PageImpl&lt;&gt;(objectList, pageable, count.longValue());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, <span class="keyword">null</span>, pageable, clazz, basic, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">Page&lt;E&gt; <span class="title">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="keyword">boolean</span> basic, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!sql.toLowerCase().contains(<span class="string">&quot;order by&quot;</span>)) &#123;</span><br><span class="line">            StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder(sql);</span><br><span class="line">            stringBuilder.append(<span class="string">&quot; order by &quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> Sort sort = pageable.getSort();</span><br><span class="line">            <span class="keyword">final</span> List&lt;Sort.Order&gt; orders = sort.toList();</span><br><span class="line">            <span class="keyword">for</span> (Sort.Order order : orders) &#123;</span><br><span class="line">                stringBuilder.append(order.getProperty())</span><br><span class="line">                        .append(<span class="string">&quot; &quot;</span>)</span><br><span class="line">                        .append(order.getDirection().name())</span><br><span class="line">                        .append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sql = stringBuilder.toString();</span><br><span class="line">            sql = sql.substring(<span class="number">0</span>, sql.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Query nativeQuery = entityManager.createNativeQuery(sql);</span><br><span class="line">        nativeQuery.setFirstResult(pageable.getPageNumber() * pageable.getPageSize());</span><br><span class="line">        nativeQuery.setMaxResults(pageable.getPageSize());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nativeQuery.setParameter(key, params.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Map&gt; resultList = nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).getResultList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List&lt;E&gt; objectList = getJpaUtil().mapListToObjectList(resultList, clazz, basic);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(countSql)) &#123;</span><br><span class="line">            countSql = <span class="string">&quot;select count(*) from ( &quot;</span> + sql + <span class="string">&quot; ) a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> BigInteger count = findBySqlFirst(countSql, BigInteger.class, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        Page&lt;E&gt; page = <span class="keyword">new</span> PageImpl&lt;&gt;(objectList, pageable, count.longValue());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">findBySqlFirst</span><span class="params">(String sql)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findBySqlFirst(sql, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">findBySqlFirst</span><span class="params">(String sql, Object[] params)</span> </span>&#123;</span><br><span class="line">        Query nativeQuery = entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                nativeQuery.setParameter(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> Optional first = nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .stream().findFirst();</span><br><span class="line">        <span class="keyword">if</span> (first.isPresent()) &#123;</span><br><span class="line">            <span class="keyword">return</span> (Map) first.get();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">findBySqlFirst</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        Query nativeQuery = entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nativeQuery.setParameter(key, params.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> Optional first = nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .stream().findFirst();</span><br><span class="line">        <span class="keyword">if</span> (first.isPresent()) &#123;</span><br><span class="line">            <span class="keyword">return</span> (Map) first.get();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">E <span class="title">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> findBySqlFirst(sql, clazz, basic, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">E <span class="title">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic, Object[] params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapToObject(findBySqlFirst(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">E <span class="title">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="keyword">boolean</span> basic, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapToObject(findBySqlFirst(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">findByIdNew</span><span class="params">(ID id)</span> </span>&#123;</span><br><span class="line">        T t = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        Optional&lt;T&gt; optional = <span class="keyword">this</span>.findById(id);</span><br><span class="line">        <span class="keyword">if</span> (optional.isPresent()) &#123;</span><br><span class="line">            t = optional.get();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> &lt;S extends T&gt; <span class="function">Iterable&lt;S&gt; <span class="title">batchSave</span><span class="params">(Iterable&lt;S&gt; iterable)</span> </span>&#123;</span><br><span class="line">        Iterator&lt;S&gt; iterator = iterable.iterator();</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            entityManager.persist(iterator.next());</span><br><span class="line">            index++;</span><br><span class="line">            <span class="keyword">if</span> (index % BATCH_SIZE == <span class="number">0</span>) &#123;</span><br><span class="line">                entityManager.flush();</span><br><span class="line">                entityManager.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index % BATCH_SIZE != <span class="number">0</span>) &#123;</span><br><span class="line">            entityManager.flush();</span><br><span class="line">            entityManager.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> iterable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> &lt;S extends T&gt; <span class="function">Iterable&lt;S&gt; <span class="title">batchUpdate</span><span class="params">(Iterable&lt;S&gt; iterable)</span> </span>&#123;</span><br><span class="line">        Iterator&lt;S&gt; iterator = iterable.iterator();</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            entityManager.merge(iterator.next());</span><br><span class="line">            index++;</span><br><span class="line">            <span class="keyword">if</span> (index % BATCH_SIZE == <span class="number">0</span>) &#123;</span><br><span class="line">                entityManager.flush();</span><br><span class="line">                entityManager.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index % BATCH_SIZE != <span class="number">0</span>) &#123;</span><br><span class="line">            entityManager.flush();</span><br><span class="line">            entityManager.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> iterable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> JpaUtil <span class="title">getJpaUtil</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JpaUtil objectUtil = (JpaUtil) ApplicationContextProvider.getBean(<span class="string">&quot;jpaUtil&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> objectUtil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="工具类JpaUtil"><a href="#工具类JpaUtil" class="headerlink" title="工具类JpaUtil"></a>工具类JpaUtil</h2><ul><li>其功能就是将Map对象通过json转换成指定对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jpa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component(&quot;jpaUtil&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JpaUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询结果为List&lt;Map&gt;时，可以通过该方法转换为对象List，注意Map中key要与对象属性匹配，或者对象属性标注了<span class="doctag">@JsonProperty</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">mapListToObjectList</span><span class="params">(List&lt;Map&gt; mapList, Class clazz, <span class="keyword">boolean</span> basic)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;E&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Map map : mapList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (basic) &#123;</span><br><span class="line">                list.add((E) map.values().stream().findFirst().get());</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> String valueAsString = objectMapper.writeValueAsString(map);</span><br><span class="line">                    E newInstance = (E) objectMapper.readValue(valueAsString, clazz);</span><br><span class="line">                    list.add(newInstance);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询结果为Map时，可以通过该方法转换为对象，注意Map中key要与对象属性匹配，或者对象属性标注了<span class="doctag">@JsonProperty</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; <span class="function">E <span class="title">mapToObject</span><span class="params">(Map map, Class clazz, <span class="keyword">boolean</span> basic)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(map == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        E newInstance = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//基本类型，说明返回值只有一列</span></span><br><span class="line">        <span class="keyword">if</span> (basic) &#123;</span><br><span class="line">            newInstance = (E) map.values().stream().findFirst().get();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> String valueAsString = objectMapper.writeValueAsString(map);</span><br><span class="line">                newInstance = (E) objectMapper.readValue(valueAsString, clazz);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ApplicationContextProvider"><a href="#ApplicationContextProvider" class="headerlink" title="ApplicationContextProvider"></a>ApplicationContextProvider</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.common.support;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.i18n.LocaleContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApplicationContextProvider</span></span></span><br><span class="line"><span class="class">        <span class="keyword">implements</span> <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上下文对象实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取applicationContext</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ApplicationContext <span class="title">getApplicationContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        ApplicationContextProvider.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过name获取 Bean.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过class获取Bean.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getBean</span><span class="params">(Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过name,以及Clazz返回指定的Bean</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getBean</span><span class="params">(String name, Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(name, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述 : &lt;获得多语言的资源内容&gt;. &lt;br&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;使用方法说明&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMessage</span><span class="params">(String code, Object[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getMessage(code, args, LocaleContextHolder.getLocale());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述 : &lt;获得多语言的资源内容&gt;. &lt;br&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;使用方法说明&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> defaultMessage</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getMessage</span><span class="params">(String code, Object[] args,</span></span></span><br><span class="line"><span class="params"><span class="function">                                    String defaultMessage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getMessage(code, args, defaultMessage,</span><br><span class="line">                LocaleContextHolder.getLocale());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置类上增加-EnableJpaRepositories-repositoryBaseClass-BaseJpaRepositoryImpl-class"><a href="#配置类上增加-EnableJpaRepositories-repositoryBaseClass-BaseJpaRepositoryImpl-class" class="headerlink" title="配置类上增加 @EnableJpaRepositories(repositoryBaseClass = BaseJpaRepositoryImpl.class)"></a>配置类上增加 @EnableJpaRepositories(repositoryBaseClass = BaseJpaRepositoryImpl.class)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories(repositoryBaseClass = BaseJpaRepositoryImpl.class, basePackages = &quot;com.example.demo&quot;)</span></span><br><span class="line"><span class="meta">@EntityScan(basePackages = &quot;com.example.demo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JpaConfig</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="业务Jpa对象继承BaseJpaRepository"><a href="#业务Jpa对象继承BaseJpaRepository" class="headerlink" title="业务Jpa对象继承BaseJpaRepository"></a>业务Jpa对象继承BaseJpaRepository</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title">BaseJpaRepository</span>&lt;<span class="title">Country</span>, <span class="title">Long</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//这种SELECT * 的形式也可以转换成对象，但是如果只查询某几个属性时，就会转换失败</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT * FROM tbl_country&quot;, countQuery = &quot;SELECT count(*) FROM tbl_country&quot;, nativeQuery = true)</span></span><br><span class="line">    <span class="function">Page&lt;Country&gt; <span class="title">findAll</span><span class="params">(Pageable pageable)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//失败</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id,name_zh FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">    <span class="function">Country <span class="title">findByName</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">index</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查询总数，注意count求和返回的对象是BigInteger类型</span></span><br><span class="line">        <span class="keyword">final</span> BigInteger size = countryJpaRepository.findBySqlFirst(<span class="string">&quot;SELECT count(*) as count FROM tbl_country&quot;</span>, BigInteger.class, <span class="keyword">true</span>);</span><br><span class="line">        map.put(<span class="string">&quot;size&quot;</span>, size);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//分页查询</span></span><br><span class="line">        Pageable pageable = PageRequest.of(<span class="number">1</span>, <span class="number">20</span>, Sort.by(Sort.Direction.DESC, <span class="string">&quot;id&quot;</span>).and(Sort.by(Sort.Direction.ASC, <span class="string">&quot;name_zh&quot;</span>)));</span><br><span class="line">        <span class="keyword">final</span> Page&lt;Country&gt; pages = countryJpaRepository.findPageBySql(<span class="string">&quot;SELECT id,name_zh as nameZh ,name_en as nameEn FROM tbl_country&quot;</span>, pageable, Country.class, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">&quot;pages&quot;</span>, pages);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//批量新增</span></span><br><span class="line">        List&lt;DemoEntity&gt; entityList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            DemoEntity demoEntity = <span class="keyword">new</span> DemoEntity();</span><br><span class="line">            demoEntity.setName(<span class="string">&quot;测试&quot;</span> + i);</span><br><span class="line">            demoEntity.initInsert();</span><br><span class="line">            entityList.add(demoEntity);</span><br><span class="line">        &#125;</span><br><span class="line">        demoEntityJpaRepository.batchSave(entityList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Page&lt;DemoEntity&gt; demoEntities = demoEntityJpaRepository.findAll(PageRequest.of(<span class="number">1</span>, <span class="number">100</span>, Sort.by(Sort.Direction.DESC, <span class="string">&quot;name&quot;</span>)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//批量删除</span></span><br><span class="line">        demoEntityJpaRepository.deleteAllInBatch(demoEntities.getContent());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;SpringBoot基于JPA的数据操作非常方便，我们只需继承JpaRepository就可以拥有强大的数据操控能力，但是偶尔我们需要进行复杂的操作，比如批量插入与更新，或者是复杂sql等等，此时就需要我们对JpaRepository进行一些扩展。&lt;/li&gt;
&lt;li&gt;@Query注解也可以直接执行sql，但是其有一些局限，比如只有&lt;code&gt;select * &lt;/code&gt;时才能直接封装为对象，只查询部分属性时就只能封装为Object[]或Map。如果希望@Query查询部分属性时也可以直接转换为对象，可以查看下一篇内容 &lt;a href=&quot;/2021/09/08/springboot-query/&quot; title=&quot;Spring Boot的@Query注解&quot;&gt;Spring Boot的@Query注解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.hanqunfeng.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>RocketMQ Docker安装方式</title>
    <link href="https://blog.hanqunfeng.com/2021/06/24/rocketmq-docker/"/>
    <id>https://blog.hanqunfeng.com/2021/06/24/rocketmq-docker/</id>
    <published>2021-06-24T10:24:04.000Z</published>
    <updated>2021-06-24T09:54:50.123Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>看完本文你将掌握如下知识点：</p><ul><li>docker[20.10.7]安装rocketmq[4.8.0]的方法</li></ul><span id="more"></span><h3 id="server-有日志目录映射"><a href="#server-有日志目录映射" class="headerlink" title="server 有日志目录映射"></a>server 有日志目录映射</h3><ul><li>设置目录权限<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 $(pwd)/logs</span><br></pre></td></tr></table></figure></li><li>启动<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -v $(pwd)/logs:/home/rocketmq/logs \</span><br><span class="line">-v $(pwd)/logs:/home/rocketmq/logs \</span><br><span class="line">--name rmqnamesrv \</span><br><span class="line">-e &quot;JAVA_OPT_EXT=-Xms512M -Xmx512M -Xmn128m&quot; \</span><br><span class="line">-p 9876:9876 \</span><br><span class="line">foxiswho/rocketmq:4.8.0 \</span><br><span class="line">sh mqnamesrv</span><br></pre></td></tr></table></figure></li></ul><h3 id="broker-目录映射"><a href="#broker-目录映射" class="headerlink" title="broker 目录映射"></a>broker 目录映射</h3><ul><li><p>设置目录权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 $(pwd)/logs</span><br><span class="line">chmod 777 $(pwd)/store</span><br><span class="line">chmod 777 $(pwd)/conf</span><br></pre></td></tr></table></figure></li><li><p>添加文件：$(pwd)/conf/broker.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">brokerClusterName = DefaultCluster</span><br><span class="line">brokerName = broker-a</span><br><span class="line">brokerId = 0</span><br><span class="line">deleteWhen = 04</span><br><span class="line">fileReservedTime = 48</span><br><span class="line">brokerRole = ASYNC_MASTER</span><br><span class="line">flushDiskType = ASYNC_FLUSH</span><br><span class="line">brokerIP1 = &#123;宿主机 IP&#125;</span><br></pre></td></tr></table></figure></li><li><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d</span><br><span class="line">-v $(pwd)/logs:/home/rocketmq/logs</span><br><span class="line">-v $(pwd)/store:/home/rocketmq/store \</span><br><span class="line">-v $(pwd)/conf:/home/rocketmq/conf \</span><br><span class="line">--name rmqbroker --link rmqnamesrv:rmqnamesrv \</span><br><span class="line">-e &quot;NAMESRV_ADDR=rmqnamesrv:9876&quot; \</span><br><span class="line">-e &quot;JAVA_OPT_EXT=-Xms512M -Xmx512M -Xmn128m&quot; \</span><br><span class="line">-p 10911:10911 -p 10912:10912 -p 10909:10909 \</span><br><span class="line">foxiswho/rocketmq:4.8.0 \</span><br><span class="line">sh mqbroker -c /home/rocketmq/conf/broker.conf</span><br></pre></td></tr></table></figure></li></ul><h3 id="console"><a href="#console" class="headerlink" title="console"></a>console</h3><ul><li><p>启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run --name rmqconsole --link rmqnamesrv:rmqnamesrv \</span><br><span class="line">-e &quot;JAVA_OPTS=-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false&quot; \</span><br><span class="line">-p 8180:8080 -t styletang/rocketmq-console-ng</span><br></pre></td></tr></table></figure></li><li><p>访问地址<br><a href="http://localhost:8180/">http://localhost:8180/</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;p&gt;看完本文你将掌握如下知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;docker[20.10.7]安装rocketmq[4.8.0]的方法&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Docker" scheme="https://blog.hanqunfeng.com/categories/Docker/"/>
    
    
    <category term="rocketmq" scheme="https://blog.hanqunfeng.com/tags/rocketmq/"/>
    
    <category term="docker" scheme="https://blog.hanqunfeng.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>vim配置</title>
    <link href="https://blog.hanqunfeng.com/2021/01/23/vimrc/"/>
    <id>https://blog.hanqunfeng.com/2021/01/23/vimrc/</id>
    <published>2021-01-23T14:30:05.000Z</published>
    <updated>2021-02-02T08:35:35.074Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>vim常用配置</li><li>基于<a href="https://github.com/junegunn/vim-plug">vim-plug</a>进行插件管理<span id="more"></span></li></ul><h2 id="vimrc"><a href="#vimrc" class="headerlink" title=".vimrc"></a>.vimrc</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; :set all  查看所有可以设置的命令</span></span><br><span class="line"><span class="comment">&quot; :set command?  查看该命令当前状态，比如:set nu?</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; :map      查看所有键盘映射，参考：http://yyq123.github.io/learn-vim/learn-vi-51-KeyMapping.html</span></span><br><span class="line"><span class="comment">&quot; :autocmd  查看所有自动命令，参考：http://yyq123.github.io/learn-vim/learn-vi-49-01-autocmd.html</span></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 开启行号</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">nu</span></span><br><span class="line"><span class="comment">&quot; 语法高亮</span></span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"><span class="comment">&quot; 设置自动缩进的宽度为4个空格</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">ts</span>=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">sw</span>=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 设置vim编码，默认就是utf-8</span></span><br><span class="line"><span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line"><span class="comment">&quot; 设置vim自动识别的文件编码列表，按顺序进行匹配</span></span><br><span class="line"><span class="keyword">set</span> fileencodings=utf-<span class="number">8</span>,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936,utf-<span class="number">16</span>,big5,euc-jp,latin1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 搜索时忽略大小写，默认是精确匹配，noignorecase</span></span><br><span class="line"><span class="comment">&quot; 如果想在搜索时精确匹配，可以加上&#x27;\C&#x27;前缀，比如搜索plug，:/\Cplug</span></span><br><span class="line"><span class="comment">&quot; &#x27;\c&#x27;就是忽略大小写</span></span><br><span class="line"><span class="keyword">set</span> ignorecase</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 翻页</span></span><br><span class="line"><span class="comment">&quot; Ctrl + f         向下翻整页</span></span><br><span class="line"><span class="comment">&quot; Ctrl + b         向上翻整页</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; Ctrl + d         向下翻半页</span></span><br><span class="line"><span class="comment">&quot; Ctrl + u         向上翻半页</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 窗口</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + w          光标在 nerdtree 和 vim 编辑窗口 之间切换</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + (h/j/k/l)  即h左、j下、k上、l右，表示窗口切换的方向</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + n          新建水平窗口并开始编辑新文件，上方</span></span><br><span class="line"><span class="comment">&quot; :vnew                 新建垂直窗口并开始编辑新文件，右侧</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + s          新建水平窗口并显示当前文件，右侧</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + v          新建垂直窗口并显示当前文件，上方</span></span><br><span class="line"><span class="comment">&quot; :term                 新建终端窗口，上方，关闭使用exit</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; vim -o file1 file2 file3   水平分割窗口</span></span><br><span class="line"><span class="comment">&quot; vim -O file1 file2 file3   垂直分割窗口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; Tab页，标签页，注意：tab不适buffer</span></span><br><span class="line"><span class="comment">&quot; :tabnew               新建tab页，打开一个新的为文件</span></span><br><span class="line"><span class="comment">&quot; :tabedit file         新建tab页，打开指定的文件</span></span><br><span class="line"><span class="comment">&quot; gt/gT                 向后/向前切换tab页，可以循环</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 标记marks</span></span><br><span class="line"><span class="comment">&quot; :marks         查看全部可以跳转到的标记</span></span><br><span class="line"><span class="comment">&quot; 快捷键：m/     这个快捷键只会列出当前文件的标记</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 为当前行添加一个标记: 同一行可以添加多个标记</span></span><br><span class="line"><span class="comment">&quot; m+英文字母</span></span><br><span class="line"><span class="comment">&quot; 小写字母只能在当前文件内部跳转，大写字母可以在其它文件中跳转，如：ma，mA</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 跳转到指定标记:</span></span><br><span class="line"><span class="comment">&quot; &#x27;+英文字母     移动到标记的文本行首，如：&#x27;a，&#x27;A</span></span><br><span class="line"><span class="comment">&quot; `+英文字母     移动到标记的光标位置，如：`a，`A</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 删除标记:</span></span><br><span class="line"><span class="comment">&quot; :delmarks a A  删除一个或多个指定标记，快捷键：dmx :x is a-zA-Z</span></span><br><span class="line"><span class="comment">&quot; :delmarks!     删除所有标记    快捷键：m&lt;Space&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 不生产wrap文件,warp文件是vim意外退出时用于恢复文件时使用的</span></span><br><span class="line"><span class="comment">&quot; set nowrap</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 不生产备份文件</span></span><br><span class="line"><span class="comment">&quot; set nobackup</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 快速跳转到指定行</span></span><br><span class="line"><span class="comment">&quot; 1.查看模式下numgg，比如30gg，跳转到30行</span></span><br><span class="line"><span class="comment">&quot; 2.命令行模式下:num，比如:30，跳转到30行</span></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 撤销：u       :undo</span></span><br><span class="line"><span class="comment">&quot; 恢复：ctrl-r  :redo</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 命令行模式下，通过上下方向键就可以显示历史命令</span></span><br><span class="line"><span class="comment">&quot; 命令行模式下，ctrl-f，会打开历史命令窗口，上下方向键选择</span></span><br><span class="line"><span class="comment">&quot; 普通模式下，q: ，也可以打开历史命令窗口</span></span><br><span class="line"><span class="comment">&quot; 打开历史命令行窗口后，可以像在普通窗口一样键入&#x27;\key&#x27;进行关键字搜索</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 大小写转换:</span></span><br><span class="line"><span class="comment">&quot; gUU：将整行转换为大写</span></span><br><span class="line"><span class="comment">&quot; guu：将整行转换为小写</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; v模式下，选择要转换的字符，然后按 ~，则会进行大小写间的转换</span></span><br><span class="line"><span class="comment">&quot; 这里要注意，~ 转换时，原先是大写就转小写，小写就转大写，</span></span><br><span class="line"><span class="comment">&quot; 所以如果单词中是大小写混合时，要全部转为大写或小写可以使用：U(大写)、u(小写)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;==============================================================</span></span><br><span class="line"><span class="comment">&quot; 代码格式化整个文档：</span></span><br><span class="line"><span class="comment">&quot; (1) 按两下小写g，即gg，定位光标到第一行。</span></span><br><span class="line"><span class="comment">&quot; (2) 按住Shift+v，即大写V，进入可视化编辑的行编辑模式。</span></span><br><span class="line"><span class="comment">&quot; (3) Shift+g，即大写G，选中整个代码。</span></span><br><span class="line"><span class="comment">&quot; (4) 按下等号=，格式化所有代码。</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 也可以在normal模式下，连续输入 gg=G ，也可以格式化整个文档</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 代码格式化部分行：</span></span><br><span class="line"><span class="comment">&quot; (1) 光标定位到开始的行；</span></span><br><span class="line"><span class="comment">&quot; (2) 按住Shift+v，即大写V，进入可视化编辑的行编辑模式。</span></span><br><span class="line"><span class="comment">&quot; (3) 按向下方向键选择要参与格式化的行。</span></span><br><span class="line"><span class="comment">&quot; (4) 按下等号=，格式化所选行代码。</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 也可以在normal模式下，连续输入 5gg=8G ，也可以格式化5~8行的文档</span></span><br><span class="line"><span class="comment">&quot;==============================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 当我们并不知道确切的命令名称时，可以只输入开头的几个字母，然后按下Tab键，就将在底部显示可能匹配的命令。</span></span><br><span class="line"><span class="comment">&quot; 继续按Tab键，可以在这些命令列表间移动，左右方向键也可以移动，没有找到命令时可以按esc退出选择窗口</span></span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"><span class="comment">&quot; 第一次按tab键时会先打印所有匹配的命令名称，再次按tab才会在命令中进行</span></span><br><span class="line"><span class="keyword">set</span> wildmode=lis<span class="variable">t:longest</span>,full</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; autocmd 自动执行指令，参考：http://yyq123.github.io/learn-vim/learn-vi-49-01-autocmd.html</span></span><br><span class="line"><span class="comment">&quot; 快速跳转到上次退出时光标所在行: &#x27;0 不好用啊，会打开buffer</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&quot;autocmd&quot;</span>)</span><br><span class="line">  <span class="comment">&quot; autocmd可以简写为au</span></span><br><span class="line">  <span class="keyword">au</span> BufReadPost * <span class="keyword">if</span> <span class="built_in">line</span>(<span class="string">&quot;&#x27;\&quot;&quot;</span>) &gt; <span class="number">1</span> &amp;&amp; <span class="built_in">line</span>(<span class="string">&quot;&#x27;\&quot;&quot;</span>) &lt;= <span class="built_in">line</span>(<span class="string">&quot;$&quot;</span>) | <span class="keyword">exe</span> <span class="string">&quot;normal! g&#x27;\&quot;&quot;</span> | <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 查看用&lt;&gt;括起来的快捷键的含义  :help keycodes</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span>kk :<span class="keyword">help</span> keycodes<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 设置&lt;leader&gt;的字符，默认为: \</span></span><br><span class="line"><span class="string">&quot; let mapleader=&quot;</span>,<span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 按\w保存文件</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">w</span> :<span class="keyword">w</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; 按\wq保存退出</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">wq</span> :<span class="keyword">wq</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; 按\qq不保存退出</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span>qq :q!<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; \ev，在新tab中打开vimrc配置文件，按\tn在多个tab中切换,按\tc关闭当前tab</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span>ev :<span class="keyword">tabe</span><span class="symbol">&lt;Space&gt;</span>$MYVIMRC<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; 让配置变更保存时就立即生效，:w，这里只针对.vimrc文件保存时生效，其它文件需要重新打开才生效</span></span><br><span class="line"><span class="keyword">autocmd</span> BufWritePost $MYVIMRC <span class="keyword">source</span> $MYVIMRC</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;高亮显示当前行</span></span><br><span class="line"><span class="keyword">set</span> cursorline</span><br><span class="line"><span class="comment">&quot;高亮显示当前列</span></span><br><span class="line"><span class="keyword">set</span> cursorcolumn</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 颜色模式</span></span><br><span class="line"><span class="comment">&quot;https://github.com/tomasr/molokai</span></span><br><span class="line"><span class="keyword">colorscheme</span> molokai</span><br><span class="line"><span class="comment">&quot;-----------------molokai setting---------</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:molokai_original</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:rehash256</span> = <span class="number">1</span></span><br><span class="line"><span class="comment">&quot;-----------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;https://github.com/altercation/vim-colors-solarized</span></span><br><span class="line"><span class="comment">&quot;colorscheme solarized</span></span><br><span class="line"><span class="comment">&quot;--------------solarizded setting---------</span></span><br><span class="line"><span class="comment">&quot; 使用 termnal 背景</span></span><br><span class="line"><span class="comment">&quot;let g:solarized_termtrans  = 1</span></span><br><span class="line"><span class="comment">&quot;let g:solarized_termcolors=256</span></span><br><span class="line"><span class="comment">&quot; 使用 :set list 显示特殊字符时的高亮级别</span></span><br><span class="line"><span class="comment">&quot;let g:solarized_visibility = &#x27;high&#x27;</span></span><br><span class="line"><span class="comment">&quot;-----------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;https://github.com/morhetz/gruvbox</span></span><br><span class="line"><span class="comment">&quot;colorscheme gruvbox</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;https://github.com/rakr/vim-one</span></span><br><span class="line"><span class="comment">&quot;colorscheme one</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;macos 自带</span></span><br><span class="line"><span class="comment">&quot; colorscheme desert</span></span><br><span class="line"><span class="comment">&quot;colorscheme pablo</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> background=dark</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 高亮搜索结果</span></span><br><span class="line"><span class="keyword">set</span> hlsearch</span><br><span class="line"><span class="comment">&quot;取消搜索后高亮 &lt;silent&gt;表示静默执行，就是不打印命令</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span><span class="symbol">&lt;leader&gt;</span>h :<span class="keyword">noh</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 取消自动折行，一行内容超出屏幕时不进行折行显示</span></span><br><span class="line"><span class="keyword">set</span> nowrap</span><br><span class="line"><span class="comment">&quot; set wrap</span></span><br><span class="line"><span class="comment">&quot; 一行内容超出屏幕时，实现更加平滑的逐个字符扩展显示</span></span><br><span class="line"><span class="keyword">set</span> sidescroll=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 解决插入模式下delete/backspce键失效问题</span></span><br><span class="line"><span class="comment">&quot; https://www.cnblogs.com/shengulong/p/10530188.html</span></span><br><span class="line"><span class="keyword">set</span> backspace=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 括号和引号的自动补全</span></span><br><span class="line"><span class="keyword">inoremap</span> ( ()<span class="symbol">&lt;ESC&gt;</span>i</span><br><span class="line"><span class="keyword">inoremap</span> [ []<span class="symbol">&lt;ESC&gt;</span>i</span><br><span class="line"><span class="keyword">inoremap</span> &#123; &#123;&#125;<span class="symbol">&lt;ESC&gt;</span>i</span><br><span class="line"><span class="keyword">inoremap</span> <span class="string">&#x27; &#x27;</span><span class="string">&#x27;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 针对不同的文件类型采用不同的缩进格式</span></span><br><span class="line"><span class="string">filetype indent on</span></span><br><span class="line"><span class="string">&quot; 针对不同的文件类型加载对应的插件</span></span><br><span class="line"><span class="string">filetype plugin on</span></span><br><span class="line"><span class="string">&quot; 启用自动补全</span></span><br><span class="line"><span class="string">&quot;filetype plugin indent on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; set rtp+=/usr/local/opt/fzf</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;---------------------------------vim-plug setting------------------------------</span></span><br><span class="line"><span class="string">&quot; vim-plug插件管理器的声明及配置，具体配置参考： https://github.com/junegunn/vim-plug</span></span><br><span class="line"><span class="string">call plug#begin(&#x27;</span>~/.<span class="keyword">vim</span>/plugged<span class="string">&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; If installed using Homebrew</span></span><br><span class="line"><span class="string">&quot; 文件搜索</span></span><br><span class="line"><span class="string">Plug &#x27;</span>/usr/local/<span class="keyword">opt</span>/fzf<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/junegunn/vim-easy-align</span></span><br><span class="line"><span class="string">&quot; 文本对其</span></span><br><span class="line"><span class="string">Plug &#x27;</span>junegunn/<span class="keyword">vim</span>-easy-align<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/vim-airline/vim-airline</span></span><br><span class="line"><span class="string">&quot; 状态栏设置</span></span><br><span class="line"><span class="string">Plug &#x27;</span><span class="keyword">vim</span>-airline/<span class="keyword">vim</span>-airline<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; Plug &#x27;</span><span class="keyword">vim</span>-airline/<span class="keyword">vim</span>-airline-themes<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/ycm-core/YouCompleteMe#installation</span></span><br><span class="line"><span class="string">&quot; 代码提示</span></span><br><span class="line"><span class="string">Plug &#x27;</span>Valloric/YouCompleteMe<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/preservim/nerdtree</span></span><br><span class="line"><span class="string">&quot;目录树</span></span><br><span class="line"><span class="string">Plug &#x27;</span>preservim/nerdtree<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/preservim/tagbar</span></span><br><span class="line"><span class="string">&quot;将当前文件的内容分类展示，比如java代码中的package\method\field等等</span></span><br><span class="line"><span class="string">Plug &#x27;</span>preservim/tagbar<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/SirVer/ultisnips</span></span><br><span class="line"><span class="string">&quot;代码片段补全</span></span><br><span class="line"><span class="string">Plug &#x27;</span>SirVer/ultisnips<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 网友贡献的补全片段</span></span><br><span class="line"><span class="string">Plug &#x27;</span>honza/<span class="keyword">vim</span>-snippets<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/preservim/nerdcommenter</span></span><br><span class="line"><span class="string">&quot;注释插件</span></span><br><span class="line"><span class="string">Plug &#x27;</span>preservim/nerdcommenter<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/tpope/vim-surround</span></span><br><span class="line"><span class="string">&quot;引号、括号等的替换和删除</span></span><br><span class="line"><span class="string">Plug &#x27;</span>tpope/<span class="keyword">vim</span>-surround<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/mhinz/vim-signify</span></span><br><span class="line"><span class="string">&quot; svn\git插件，修改文件时状态栏会有记录</span></span><br><span class="line"><span class="string">if has(&#x27;</span>nvim<span class="string">&#x27;) || has(&#x27;</span>patch-<span class="number">8.0</span>.<span class="number">902</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">  Plug &#x27;</span>mhinz/<span class="keyword">vim</span>-signify<span class="string">&#x27;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  Plug &#x27;</span>mhinz/<span class="keyword">vim</span>-signify<span class="string">&#x27;, &#123; &#x27;</span>branch<span class="string">&#x27;: &#x27;</span>legacy<span class="string">&#x27; &#125;</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/kshenoy/vim-signature</span></span><br><span class="line"><span class="string">&quot; 窗口左侧显示标记</span></span><br><span class="line"><span class="string">Plug &#x27;</span>kshenoy/<span class="keyword">vim</span>-signature<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">call plug#end()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;---------------------------------vim-plug setting------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;###############以下是单个插件的特殊配置项#########################&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------vim-easy-align setting--------------------</span></span><br><span class="line"><span class="string">&quot; Start interactive EasyAlign in visual mode (e.g. vipga)</span></span><br><span class="line"><span class="string">&quot; vipga</span></span><br><span class="line"><span class="string">xmap ga &lt;Plug&gt;(EasyAlign)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; Start interactive EasyAlign for a motion/text object (e.g. gaip)</span></span><br><span class="line"><span class="string">&quot; gaip</span></span><br><span class="line"><span class="string">nmap ga &lt;Plug&gt;(EasyAlign)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------vim-easy-align setting--------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------vim-airline setting-----------------------</span></span><br><span class="line"><span class="string">if !exists(&#x27;</span><span class="variable">g:airline_symbols</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">  let g:airline_symbols = &#123;&#125;</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; default theme is dark</span></span><br><span class="line"><span class="string">&quot; let g:airline_theme = &#x27;</span>dark<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; let g:airline_theme = &#x27;</span>luna<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let g:airline_left_sep = &#x27;</span>▶<span class="string">&#x27;</span></span><br><span class="line"><span class="string">let g:airline_left_alt_sep = &#x27;</span>❯<span class="string">&#x27;</span></span><br><span class="line"><span class="string">let g:airline_right_sep = &#x27;</span>◀<span class="string">&#x27;</span></span><br><span class="line"><span class="string">let g:airline_right_alt_sep = &#x27;</span>❮<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; let g:airline_symbols.linenr = &#x27;</span>¶<span class="string">&#x27;</span></span><br><span class="line"><span class="string">let g:airline_symbols.branch = &#x27;</span>⎇<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 缓冲区：http://yyq123.blogspot.com/2009/07/vim-buffer.html</span></span><br><span class="line"><span class="string">&quot; 是否打开tabline,打开后，tabline和tmuxline都可以得到增强</span></span><br><span class="line"><span class="string">&quot; let g:airline#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; tabline中当前buffer两端的分隔字符</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#left_sep = &#x27;</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; tabline中未激活buffer两端的分隔字符</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#left_alt_sep = &#x27;</span>|<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; tabline中buffer显示编号</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#buffer_nr_show = 1</span></span><br><span class="line"><span class="string">&quot; 映射切换buffer的键位</span></span><br><span class="line"><span class="string">nnoremap [b :bp&lt;CR&gt;</span></span><br><span class="line"><span class="string">nnoremap ]b :bn&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; 映射&lt;leader&gt;num到num buffer</span></span><br><span class="line"><span class="string">map &lt;leader&gt;1 :b 1&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;2 :b 2&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;3 :b 3&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;4 :b 4&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;5 :b 5&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;6 :b 6&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;7 :b 7&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;8 :b 8&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;9 :b 9&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; let g:airline#extensions#hunks#enabled=0</span></span><br><span class="line"><span class="string">&quot; let g:airline#extensions#branch#enabled=1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------vim-airline setting-----------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------YouCompleteMe setting---------------------</span></span><br><span class="line"><span class="string">&quot;---------------------简称：YCM--------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;打开vim时不再询问是否加载ycm_extra_conf.py配置</span></span><br><span class="line"><span class="string">let g:ycm_confirm_extra_conf=0</span></span><br><span class="line"><span class="string">&quot;让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)</span></span><br><span class="line"><span class="string">set completeopt=longest,menu</span></span><br><span class="line"><span class="string">&quot;python解释器路径</span></span><br><span class="line"><span class="string">&quot;let g:ycm_path_to_python_interpreter=&#x27;</span>/usr/bin/<span class="keyword">python</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot;是否开启语义补全</span></span><br><span class="line"><span class="string">let g:ycm_seed_identifiers_with_syntax=1</span></span><br><span class="line"><span class="string">&quot;是否在注释中也开启补全</span></span><br><span class="line"><span class="string">let g:ycm_complete_in_comments=1</span></span><br><span class="line"><span class="string">let g:ycm_collect_identifiers_from_comments_and_strings = 0</span></span><br><span class="line"><span class="string">&quot;开始补全的字符数</span></span><br><span class="line"><span class="string">let g:ycm_min_num_of_chars_for_completion=2</span></span><br><span class="line"><span class="string">&quot;补全后自动关闭预览窗口</span></span><br><span class="line"><span class="string">let g:ycm_autoclose_preview_window_after_completion=1</span></span><br><span class="line"><span class="string">let g:ycm_autoclose_preview_window_after_insertion=1</span></span><br><span class="line"><span class="string">&quot; 禁止缓存匹配项,每次都重新生成匹配项</span></span><br><span class="line"><span class="string">let g:ycm_cache_omnifunc=0</span></span><br><span class="line"><span class="string">&quot;字符串中也开启补全</span></span><br><span class="line"><span class="string">let g:ycm_complete_in_strings = 1</span></span><br><span class="line"><span class="string">&quot;离开插入模式后自动关闭预览窗口</span></span><br><span class="line"><span class="string">autocmd InsertLeave * if pumvisible() == 0|pclose|endif</span></span><br><span class="line"><span class="string">&quot; 空格键用于关闭补全窗口</span></span><br><span class="line"><span class="string">let g:ycm_key_list_stop_completion = [&#x27;</span><span class="symbol">&lt;space&gt;</span><span class="string">&#x27;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;默认关闭代码自动提示，目前只安装了c和python语言的代码提示，所以需要代码提示时，可以在NORMAL模式下输入&#x27;</span>\+<span class="keyword">y</span><span class="string">&#x27;开启代码提示</span></span><br><span class="line"><span class="string">let g:ycm_auto_trigger=0</span></span><br><span class="line"><span class="string">&quot;turn on YCM：</span></span><br><span class="line"><span class="string">&quot;\+y一起按，看到命令输出后回车即可，这里&lt;leader&gt;代表命令前缀，默认为\</span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;y :let g:ycm_auto_trigger=1&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;turn off YCM：\+y+y一起按</span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;yy :let g:ycm_auto_trigger=0&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------YouCompleteMe setting---------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;-------------NERDTree setting-----------------------</span></span><br><span class="line"><span class="string">&quot;######常用快捷键说明########</span></span><br><span class="line"><span class="string">&quot;Ctrl + t 打开/关闭nerdtree</span></span><br><span class="line"><span class="string">&quot;Ctrl + n 打开、回到最开始打开的文件目录</span></span><br><span class="line"><span class="string">&quot;Shift + f 打开上级目录</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;Ctrl + w + w光标在 nerdtree 和 vim 编辑窗口 之间切换</span></span><br><span class="line"><span class="string">&quot;Ctrl + w + (h/j/k/l)  即h左、j下、k上、l右，表示窗口切换的方向</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;q关闭 nerdtree</span></span><br><span class="line"><span class="string">&quot;o打开选中的文件； 折叠/展开选中的目录</span></span><br><span class="line"><span class="string">&quot;i打开选中的文件，与已打开文件纵向排布窗口，并跳转至该窗口</span></span><br><span class="line"><span class="string">&quot;gi打开选中的文件，与已打开文件纵向排布窗口，但不跳转至该窗口</span></span><br><span class="line"><span class="string">&quot;s打开选中的文件，与已打开文件横向排布窗口，并跳转至该窗口</span></span><br><span class="line"><span class="string">&quot;gs打开选中的文件，与已打开文件横向排布窗口，但不跳转至该窗口</span></span><br><span class="line"><span class="string">&quot;t在新 Tab 中打开选中文件/书签，并跳到新 Tab</span></span><br><span class="line"><span class="string">&quot;T在新 Tab 中打开选中文件/书签，但不跳到新 Tab</span></span><br><span class="line"><span class="string">&quot;x折叠选中结点的父目录</span></span><br><span class="line"><span class="string">&quot;X递归折叠选中结点下的所有目录</span></span><br><span class="line"><span class="string">&quot;k / j光标在 Neadtree 上下移动</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;tc:tabc   关闭当前的 tab</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;to:tabo   关闭所有其他 tab</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;ts:tabs   查看所有打开的 tab</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;tp:tabp   前一个 tab</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;tn:tabn   后一个 tab</span></span><br><span class="line"><span class="string">&quot;?显示菜单</span></span><br><span class="line"><span class="string">&quot;######常用快捷键说明########</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 高亮当前行</span></span><br><span class="line"><span class="string">let NERDTreeHighlightCursorline = 1</span></span><br><span class="line"><span class="string">&quot; 显示行号</span></span><br><span class="line"><span class="string">let NERDTreeShowLineNumbers     = 1</span></span><br><span class="line"><span class="string">&quot; 忽略列表中的文件</span></span><br><span class="line"><span class="string">let NERDTreeIgnore = [ &#x27;</span>\.pyc$<span class="string">&#x27;, &#x27;</span>\.pyo$<span class="string">&#x27;, &#x27;</span>\.obj$<span class="string">&#x27;, &#x27;</span>\.<span class="keyword">o</span>$<span class="string">&#x27;, &#x27;</span>\.egg$<span class="string">&#x27;, &#x27;</span>^\.git$<span class="string">&#x27;, &#x27;</span>^\.repo$<span class="string">&#x27;, &#x27;</span>^\.svn$<span class="string">&#x27;, &#x27;</span>^\.hg$<span class="string">&#x27; ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;n :NERDTreeFocus&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;打开、回到最开始打开的文件目录</span></span><br><span class="line"><span class="string">nnoremap &lt;C-n&gt; :NERDTree&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;打开、关闭目录</span></span><br><span class="line"><span class="string">nnoremap &lt;C-t&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;打开上级目录</span></span><br><span class="line"><span class="string">nnoremap &lt;S-f&gt; :NERDTreeFind&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; \tc 关闭当前的 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;tc :tabc&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; \to 关闭所有其他的 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;to :tabo&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; \ts 查看所有打开的 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;ts :tabs&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; \tp 前一个 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;tp :tabp&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; \tn 后一个 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;tn :tabn&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; Exit Vim if NERDTree is the only window left.</span></span><br><span class="line"><span class="string">&quot; 关闭 NERDTree，当没有文件打开的时候</span></span><br><span class="line"><span class="string">autocmd BufEnter * if tabpagenr(&#x27;</span>$<span class="string">&#x27;) == 1 &amp;&amp; winnr(&#x27;</span>$<span class="string">&#x27;) == 1 &amp;&amp; exists(&#x27;</span><span class="variable">b:NERDTree</span><span class="string">&#x27;) &amp;&amp; b:NERDTree.isTabTree() |</span></span><br><span class="line"><span class="string">    \ quit | endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 启动 vim 时打开 NERDTree</span></span><br><span class="line"><span class="string">&quot;autocmd vimenter * NERDTree</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 当打开 VIM，没有指定文件时和打开一个目录时，打开 NERDTree</span></span><br><span class="line"><span class="string">autocmd StdinReadPre * let s:std_in=1</span></span><br><span class="line"><span class="string">autocmd VimEnter * if argc() == 1 &amp;&amp; isdirectory(argv()[0]) &amp;&amp; !exists(&#x27;</span><span class="variable">s:std_in</span><span class="string">&#x27;) |</span></span><br><span class="line"><span class="string">    \ execute &#x27;</span>NERDTree<span class="string">&#x27; argv()[0] | wincmd p | enew | execute &#x27;</span><span class="keyword">cd</span> <span class="string">&#x27;.argv()[0] | endif</span></span><br><span class="line"><span class="string">autocmd VimEnter * if argc() == 0 &amp;&amp; !exists(&#x27;</span><span class="variable">s:std_in</span><span class="string">&#x27;) | NERDTree | endif</span></span><br><span class="line"><span class="string">&quot;-------------NERDTree setting-----------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;-----------tagbar setting---------------------------</span></span><br><span class="line"><span class="string">&quot;Ctrl - w - w光标在 Tagbar 和 vim 编辑窗口 之间切换</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;tb打开 tagbar</span></span><br><span class="line"><span class="string">&quot;q关闭 tagbar</span></span><br><span class="line"><span class="string">&quot;o（+/-）折叠 / 展开标签集合</span></span><br><span class="line"><span class="string">&quot;p跳转到选中的标签，但光标仍停留在 Tagbar</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; tagbar 依赖 ctags 插件 brew install ctags</span></span><br><span class="line"><span class="string">let g:tagbar_ctags_bin = &#x27;</span>ctags<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 设置 tagbar 的宽度为 30 列，默认 40 列</span></span><br><span class="line"><span class="string">let g:tagbar_width     = 30</span></span><br><span class="line"><span class="string">&quot; 打开 tagbar 时光标在 tagbar 页面内，默认在 vim 打开的文件内</span></span><br><span class="line"><span class="string">let g:tagbar_autofocus = 1</span></span><br><span class="line"><span class="string">&quot; 让 tagbar 在页面左侧显示，默认右边</span></span><br><span class="line"><span class="string">let g:tagbar_left      = 1</span></span><br><span class="line"><span class="string">&quot; 标签不排序，默认排序</span></span><br><span class="line"><span class="string">&quot;let g:tagbar_sort      = 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; &lt;leader&gt;tb 打开 tagbar 窗口，在左侧栏显示</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;tb :TagbarToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;-----------tagbar setting---------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------ultisnips setting-------------------------</span></span><br><span class="line"><span class="string">&quot;:UltiSnipsEdit 显示帮助信息&quot;</span></span><br><span class="line"><span class="string">&quot; 片段信息寻找的文件夹名称，默认UltiSnips，多个逗号分隔</span></span><br><span class="line"><span class="string">&quot;let g:UltiSnipsSnippetDirectories = [&#x27;</span>UltiSnips<span class="string">&#x27;]</span></span><br><span class="line"><span class="string">&quot; :UltiSnipsEdit 显示帮助信的目录路径，默认~/.vim/UltiSnips</span></span><br><span class="line"><span class="string">let g:UltiSnipsSnippetStorageDirectoryForUltiSnipsEdit = &#x27;</span>~/.<span class="keyword">vim</span>/plugged/<span class="keyword">vim</span>-snippets/UltiSnips<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 代码片段补全触发，需要在编辑模式</span></span><br><span class="line"><span class="string">let g:UltiSnipsExpandTrigger       = &#x27;</span><span class="symbol">&lt;c-w&gt;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 列出补全可选列表，需要在编辑模式，可以在输入一些字符后调用，显示当前字符的代码片段提示</span></span><br><span class="line"><span class="string">let g:UltiSnipsListSnippets        = &#x27;</span>&lt;<span class="keyword">c</span>-\&gt;<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 下一条补全，需要在编辑模式，不好使</span></span><br><span class="line"><span class="string">let g:UltiSnipsJumpForwardTrigger  = &#x27;</span><span class="symbol">&lt;c-b&gt;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 上一条补全，需要在编辑模式，不好使</span></span><br><span class="line"><span class="string">let g:UltiSnipsJumpBackwardTrigger = &#x27;</span><span class="symbol">&lt;c-z&gt;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 帮助信息水平显示</span></span><br><span class="line"><span class="string">let g:UltiSnipsEditSplit           = &#x27;</span>horizontal<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 帮助信息垂直显示</span></span><br><span class="line"><span class="string">&quot;let g:UltiSnipsEditSplit           = &#x27;</span><span class="keyword">vertical</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; python3</span></span><br><span class="line"><span class="string">&quot;let g:UltiSnipsUsePythonVersion = 3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------ultisnips setting--------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;------------nerdcommenter setting--------------------</span></span><br><span class="line"><span class="string">&quot; \c+空格</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cc注释当前行起始的 [count]行 或者 注释 visual mode 选中的文本</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cn注释方式同 &lt;leader&gt;cc，但是强制嵌套</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;c&lt;space&gt;这个是最重要的，记住这一个就行了。切换所选行的注释状态。 如果注释了最上面的选定行，则取消注释所有选定行，反之亦然。</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cm使用一组多行注释符注释选定行</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;ci单独切换所选行的各行注释状态</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cs使用块格式布局注释掉选定的行。</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;c$注释从光标到行尾的当前行。</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;cA在行尾添加注释，并切换至插入模式，光标停留在注释符中间</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cl</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cb注释方式同 &lt;leader&gt;cc，注释符左对齐（&lt;leader&gt;cl）或者两边对齐（&lt;leader&gt;cb）</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cu取消选定行的注释</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 在注释符号后加一个空格</span></span><br><span class="line"><span class="string">let g:NERDSpaceDelims            = 1</span></span><br><span class="line"><span class="string">&quot; 紧凑排布多行注释</span></span><br><span class="line"><span class="string">let g:NERDCompactSexyComs        = 1</span></span><br><span class="line"><span class="string">&quot; 逐行注释左对齐</span></span><br><span class="line"><span class="string">let g:NERDDefaultAlign           = &#x27;</span><span class="keyword">left</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; JAVA 语言使用默认的注释符号</span></span><br><span class="line"><span class="string">let g:NERDAltDelims_java         = 1</span></span><br><span class="line"><span class="string">&quot; C 语言注释符号</span></span><br><span class="line"><span class="string">let g:NERDCustomDelimiters       = &#123;&#x27;</span><span class="keyword">c</span><span class="string">&#x27;: &#123;&#x27;</span><span class="keyword">left</span><span class="string">&#x27;: &#x27;</span>/**<span class="string">&#x27;, &#x27;</span><span class="keyword">right</span><span class="string">&#x27;: &#x27;</span>*/<span class="string">&#x27;&#125;&#125;</span></span><br><span class="line"><span class="string">&quot; 允许空行注释</span></span><br><span class="line"><span class="string">let g:NERDCommentEmptyLines      = 1</span></span><br><span class="line"><span class="string">&quot; 取消注释时删除行尾空格</span></span><br><span class="line"><span class="string">let g:NERDTrimTrailingWhitespace = 1</span></span><br><span class="line"><span class="string">&quot; 检查选中的行操作是否成功</span></span><br><span class="line"><span class="string">let g:NERDToggleCheckAllLines    = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;------------nerdcommenter setting--------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;------------fzf setting------------------------------</span></span><br><span class="line"><span class="string">&quot; 在当前目录搜索文件</span></span><br><span class="line"><span class="string">nnoremap &lt;Leader&gt;f :FZF&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;------------fzf setting------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; ----------tpope/vim-surround setting---------------</span></span><br><span class="line"><span class="string">&quot; normal模式下，光标所在航</span></span><br><span class="line"><span class="string">&quot; 替换：</span></span><br><span class="line"><span class="string">&quot; cs&quot;&#x27;</span>  : 将光标所在行中成对出现的双引号替换为单引号</span><br><span class="line"><span class="comment">&quot; cs([  : 将小括号替换为中括号</span></span><br><span class="line"><span class="string">&quot; cst&quot;</span>  : 将当前文本两边成对出现的引号或括号替换为双引号</span><br><span class="line"><span class="comment">&quot; 删除:</span></span><br><span class="line"><span class="string">&quot; ds&quot;</span>   : 删除双引号</span><br><span class="line"><span class="comment">&quot; 添加：</span></span><br><span class="line"><span class="string">&quot; ysiw&quot;</span>  : 将光标所在单词添加上双引号</span><br><span class="line"><span class="string">&quot; yss&quot;</span>   : 将当前行添加上双引号</span><br><span class="line"><span class="comment">&quot; ----------tpope/vim-surround setting---------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ----------mhinz/vim-signify setting----------------</span></span><br><span class="line"><span class="comment">&quot; default updatetime 4000ms is not good for async update</span></span><br><span class="line"><span class="keyword">set</span> updatetime=<span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ----------mhinz/vim-signify setting----------------</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;vim常用配置&lt;/li&gt;
&lt;li&gt;基于&lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;vim-plug&lt;/a&gt;进行插件管理</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vim" scheme="https://blog.hanqunfeng.com/tags/vim/"/>
    
    <category term="vim-plug" scheme="https://blog.hanqunfeng.com/tags/vim-plug/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-OAuth2-JWT-WebFlux-ClientServer</title>
    <link href="https://blog.hanqunfeng.com/2020/12/02/springboot-oauth2-jwt-webflux-clientserver/"/>
    <id>https://blog.hanqunfeng.com/2020/12/02/springboot-oauth2-jwt-webflux-clientserver/</id>
    <published>2020-12-02T13:30:05.000Z</published>
    <updated>2021-05-27T07:43:32.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT-WebFlux的客户端服务器</li><li>本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建</li><li>本文基于<a href="https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-clientserver/">SpringBoot-OAuth2-JWT-ClientServer</a>并实现其功能，可以参考对比</li><li>代码地址:<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48</a></li></ul><span id="more"></span><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li>springboot官方提供了支持<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webflux</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-webflux&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-oauth2-client&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目使用了自定义授权页面，所以引入视图模板依赖和基于webjar的bootstrap，jquery</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-thymeleaf&#x27;</span></span><br><span class="line"><span class="comment">//webjars https://www.webjars.org</span></span><br><span class="line">implementation <span class="string">&#x27;org.webjars:bootstrap:4.5.3&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.webjars.bower:jquery:3.5.1&#x27;</span></span><br><span class="line"><span class="comment">// 可以在html中去掉webjars的版本号，这样升级的时候直接修改上面引入的webjars中的版本号即可，页面中不需要修改</span></span><br><span class="line">implementation <span class="string">&#x27;org.webjars:webjars-locator:0.40&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//r2dbc mysql 库</span></span><br><span class="line">implementation <span class="string">&#x27;dev.miku:r2dbc-mysql&#x27;</span></span><br><span class="line"><span class="comment">//Spring r2dbc 抽象层</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-data-r2dbc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目中使用了lombok减少代码量，非必须依赖</span></span><br><span class="line">compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="ReactiveSecurityConfig"><a href="#ReactiveSecurityConfig" class="headerlink" title="ReactiveSecurityConfig"></a>ReactiveSecurityConfig</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientwebfluxdemo.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomReactiveAuthorizationManager;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerAuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerOAuth2AuthorizedClientRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableReactiveMethodSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.web.server.ServerHttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.SecurityWebFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authentication.logout.RedirectServerLogoutSuccessHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authentication.logout.ServerLogoutSuccessHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;安全认证配置&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/19 10:26.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebFluxSecurity</span> <span class="comment">//必要</span></span><br><span class="line"><span class="meta">@EnableReactiveMethodSecurity</span> <span class="comment">//启用@PreAuthorize注解配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReactiveSecurityConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;oauth2.server.logout&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String oauth2_server_logout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerAccessDeniedHandler customServerAccessDeniedHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerAuthenticationEntryPoint customServerAuthenticationEntryPoint;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomReactiveAuthorizationManager customReactiveAuthorizationManager;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerOAuth2AuthorizedClientRepository customServerOAuth2AuthorizedClientRepository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册安全验证规则</span></span><br><span class="line"><span class="comment">     * 配置方式与HttpSecurity基本一致</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">SecurityWebFilterChain <span class="title">springSecurityFilterChain</span><span class="params">(ServerHttpSecurity http)</span> </span>&#123; <span class="comment">//定义SecurityWebFilterChain对安全进行控制，使用ServerHttpSecurity构造过滤器链；</span></span><br><span class="line">        <span class="keyword">return</span> http.authorizeExchange()</span><br><span class="line">                <span class="comment">//.anyExchange().authenticated() //所有请求都需要通过认证</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">//需要具备相应的角色才能访问</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/user/**&quot;</span>, <span class="string">&quot;/user2/**&quot;</span>).hasAuthority(<span class="string">&quot;SCOPE_any&quot;</span>)</span><br><span class="line">                <span class="comment">//不需要登录就可以访问</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/login&quot;</span>,<span class="string">&quot;/webjars/**&quot;</span>).permitAll()</span><br><span class="line"></span><br><span class="line">                <span class="comment">//其它路径需要根据指定的方法判断是否有权限访问，基于权限管理模型认证</span></span><br><span class="line">                .anyExchange().access(customReactiveAuthorizationManager)</span><br><span class="line">                <span class="comment">//.anyExchange().permitAll()</span></span><br><span class="line">                .and()</span><br><span class="line">                .csrf().disable() <span class="comment">//关闭CSRF（Cross-site request forgery）跨站请求伪造</span></span><br><span class="line">                <span class="comment">//必须post访问</span></span><br><span class="line">                .logout().logoutUrl(<span class="string">&quot;/logout&quot;</span>).logoutSuccessHandler(serverLogoutSuccessHandler())</span><br><span class="line">                .and()</span><br><span class="line"></span><br><span class="line">                <span class="comment">//开启oauth2登录认证</span></span><br><span class="line">                .oauth2Login()</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">//开启基于oauth2的客户端信息</span></span><br><span class="line">                .oauth2Client()</span><br><span class="line">                <span class="comment">//客户端信息基于数据库，基于内存去掉下面配置即可</span></span><br><span class="line">                .authorizedClientRepository(customServerOAuth2AuthorizedClientRepository)</span><br><span class="line">                .and().exceptionHandling()</span><br><span class="line">                .accessDeniedHandler(customServerAccessDeniedHandler)</span><br><span class="line">                .authenticationEntryPoint(customServerAuthenticationEntryPoint)</span><br><span class="line">                .and()</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 退出重定向到认证登录页面，默认&quot;/login?logout&quot;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServerLogoutSuccessHandler <span class="title">serverLogoutSuccessHandler</span><span class="params">()</span></span>&#123;</span><br><span class="line">        RedirectServerLogoutSuccessHandler redirectServerLogoutSuccessHandler = <span class="keyword">new</span> RedirectServerLogoutSuccessHandler();</span><br><span class="line">        redirectServerLogoutSuccessHandler.setLogoutSuccessUrl(URI.create(oauth2_server_logout));</span><br><span class="line">        <span class="keyword">return</span> redirectServerLogoutSuccessHandler;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomReactiveAuthorizationManager"><a href="#CustomReactiveAuthorizationManager" class="headerlink" title="CustomReactiveAuthorizationManager"></a>CustomReactiveAuthorizationManager</h2><p>基于RBAC权限认证管理模型的认证方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authorization.AuthorizationDecision;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authorization.ReactiveAuthorizationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authorization.AuthorizationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.AntPathMatcher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ReactiveAuthorizationManager&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/30 12:05.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomReactiveAuthorizationManager</span> <span class="keyword">implements</span> <span class="title">ReactiveAuthorizationManager</span>&lt;<span class="title">AuthorizationContext</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;AuthorizationDecision&gt; <span class="title">check</span><span class="params">(Mono&lt;Authentication&gt; authentication, AuthorizationContext object)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> authentication.map(auth -&gt; &#123;</span><br><span class="line">            ServerHttpRequest request = object.getExchange().getRequest();</span><br><span class="line">            Object principal = auth.getPrincipal();</span><br><span class="line">            String username;</span><br><span class="line">            <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> Jwt) &#123;</span><br><span class="line">                username = ((Jwt) principal).getClaimAsString(<span class="string">&quot;user_name&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                username = principal.toString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">boolean</span> hasPerssion = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.hasText(username) &amp;&amp; !<span class="string">&quot;anonymousUser&quot;</span>.equals(username)) &#123;</span><br><span class="line">                <span class="comment">//根据用户名查询用户资源权限，这里应该访问数据库查询</span></span><br><span class="line">                Set&lt;String&gt; uris = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">                <span class="keyword">for</span> (String uri : uris) &#123;</span><br><span class="line">                    <span class="comment">//验证用户拥有的资源权限是否与请求的资源相匹配</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">new</span> AntPathMatcher().match(uri, request.getURI().toString())) &#123;</span><br><span class="line">                        hasPerssion = <span class="keyword">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//暂时全部返回true</span></span><br><span class="line">            hasPerssion = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> AuthorizationDecision(hasPerssion);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerAccessDeniedHandler"><a href="#CustomServerAccessDeniedHandler" class="headerlink" title="CustomServerAccessDeniedHandler"></a>CustomServerAccessDeniedHandler</h2><p>没有权限时的处理方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.AccessDeniedException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authorization.ServerAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;没有权限时的处理方式&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/20 11:56.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomServerAccessDeniedHandler</span> <span class="keyword">implements</span> <span class="title">ServerAccessDeniedHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">handle</span><span class="params">(ServerWebExchange serverWebExchange, AccessDeniedException e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> setErrorResponse(serverWebExchange.getResponse(),e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Mono&lt;Void&gt; <span class="title">setErrorResponse</span><span class="params">(ServerHttpResponse response, String message)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        response.getHeaders().setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        AjaxResponse ajaxResponse = AjaxResponse.error(<span class="keyword">new</span> CustomException(CustomExceptionType.USER_INPUT_ERROR, message));</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(response.bufferFactory().wrap(objectMapper.writeValueAsBytes(ajaxResponse))));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerAuthenticationEntryPoint"><a href="#CustomServerAuthenticationEntryPoint" class="headerlink" title="CustomServerAuthenticationEntryPoint"></a>CustomServerAuthenticationEntryPoint</h2><p>token格式错误或过期时的处理方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.ServerAuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ServerAuthenticationEntryPoint&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/20 12:01.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * token格式错误或过期时的处理方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomServerAuthenticationEntryPoint</span> <span class="keyword">implements</span> <span class="title">ServerAuthenticationEntryPoint</span> </span>&#123;</span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">commence</span><span class="params">(ServerWebExchange serverWebExchange, AuthenticationException e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> setErrorResponse(serverWebExchange.getResponse(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Mono&lt;Void&gt; <span class="title">setErrorResponse</span><span class="params">(ServerHttpResponse response, String message)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        response.getHeaders().setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        AjaxResponse ajaxResponse = AjaxResponse.error(<span class="keyword">new</span> CustomException(CustomExceptionType.USER_INPUT_ERROR, message));</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(response.bufferFactory().wrap(objectMapper.writeValueAsBytes(ajaxResponse))));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="WebFluxConfig"><a href="#WebFluxConfig" class="headerlink" title="WebFluxConfig"></a>WebFluxConfig</h2><p>配置跨域</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.config.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.config.WebFluxConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;WebFlux配置类&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/18 17:43.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 我们若需要配置Spring WebFlux只需让配置配实现接口WebFluxConfigurer，</span></span><br><span class="line"><span class="comment"> * 这样我们既能保留Spring Boot给WebFlux配置又能添加我们的定制配置。</span></span><br><span class="line"><span class="comment"> * 若我们向完全控制WebFlux，则在配置类添加注解<span class="doctag">@EnableWebFlux</span></span></span><br><span class="line"><span class="comment"> * 配置方式和Spring MVC类似</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebFluxConfig</span> <span class="keyword">implements</span> <span class="title">WebFluxConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//跨域设置</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>) <span class="comment">//添加映射路径，“/**”表示对所有的路径实行全局跨域访问权限的设置</span></span><br><span class="line">                .allowedMethods(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>) <span class="comment">//开放哪些Http方法，允许跨域访问</span></span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>) <span class="comment">//允许HTTP请求中的携带哪些Header信息</span></span><br><span class="line">                <span class="comment">//When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot;since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header.</span></span><br><span class="line">                <span class="comment">// To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.</span></span><br><span class="line">                <span class="comment">//.allowedOrigins(&quot;*&quot;) //开放哪些ip、端口、域名的访问权限</span></span><br><span class="line">                .allowedOriginPatterns(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowCredentials(<span class="keyword">true</span>); <span class="comment">//是否允许发送Cookie信息</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerOAuth2AuthorizedClientRepository"><a href="#CustomServerOAuth2AuthorizedClientRepository" class="headerlink" title="CustomServerOAuth2AuthorizedClientRepository"></a>CustomServerOAuth2AuthorizedClientRepository</h2><p>基于jdbc存储token信。</p><p>这里有一个注意事项：查询时不要使用.fetch()方法，其会按照字段名称的字母排序进行赋值，导致结果中key和value匹配混乱</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.dao.DataRetrievalFailureException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.r2dbc.core.DatabaseClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.OAuth2AuthorizedClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ClientRegistration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.web.server.ServerOAuth2AuthorizedClientRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.core.OAuth2AccessToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.core.OAuth2RefreshToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ServerOAuth2AuthorizedClientRepository&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/12/1 09:58.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomServerOAuth2AuthorizedClientRepository</span> <span class="keyword">implements</span> <span class="title">ServerOAuth2AuthorizedClientRepository</span> </span>&#123;</span><br><span class="line">    <span class="comment">// @formatter:off</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String COLUMN_NAMES = <span class="string">&quot;client_registration_id, &quot;</span></span><br><span class="line">            + <span class="string">&quot;principal_name, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_type, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_value, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_issued_at, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_expires_at, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_scopes, &quot;</span></span><br><span class="line">            + <span class="string">&quot;refresh_token_value, &quot;</span></span><br><span class="line">            + <span class="string">&quot;refresh_token_issued_at&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TABLE_NAME = <span class="string">&quot;oauth2_authorized_client&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PK_FILTER = <span class="string">&quot;client_registration_id = ? AND principal_name = ?&quot;</span>;</span><br><span class="line">    <span class="comment">// @formatter:on</span></span><br><span class="line">    <span class="comment">// @formatter:off</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LOAD_AUTHORIZED_CLIENT_SQL = <span class="string">&quot;SELECT &quot;</span> + COLUMN_NAMES</span><br><span class="line">            + <span class="string">&quot; FROM &quot;</span> + TABLE_NAME</span><br><span class="line">            + <span class="string">&quot; WHERE &quot;</span> + PK_FILTER;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @formatter:off</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SAVE_AUTHORIZED_CLIENT_SQL = <span class="string">&quot;INSERT INTO &quot;</span> + TABLE_NAME</span><br><span class="line">            + <span class="string">&quot; (&quot;</span> + COLUMN_NAMES + <span class="string">&quot;) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String REMOVE_AUTHORIZED_CLIENT_SQL = <span class="string">&quot;DELETE FROM &quot;</span> + TABLE_NAME + <span class="string">&quot; WHERE &quot;</span> + PK_FILTER;</span><br><span class="line">    <span class="comment">// @formatter:on</span></span><br><span class="line">    <span class="comment">// @formatter:off</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String UPDATE_AUTHORIZED_CLIENT_SQL = <span class="string">&quot;UPDATE &quot;</span> + TABLE_NAME</span><br><span class="line">            + <span class="string">&quot; SET access_token_type = ?, access_token_value = ?, access_token_issued_at = ?,&quot;</span></span><br><span class="line">            + <span class="string">&quot; access_token_expires_at = ?, access_token_scopes = ?,&quot;</span></span><br><span class="line">            + <span class="string">&quot; refresh_token_value = ?, refresh_token_issued_at = ?&quot;</span></span><br><span class="line">            + <span class="string">&quot; WHERE &quot;</span> + PK_FILTER;</span><br><span class="line">    <span class="comment">// @formatter:on</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DatabaseClient databaseClient;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ReactiveClientRegistrationRepository reactiveClientRegistrationRepository;</span><br><span class="line">    <span class="comment">// @formatter:on</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这里有一个注意事项：查询时不要使用.fetch()方法，其会按照字段名称的字母排序进行赋值，导致结果中key和value匹配混乱</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T extends OAuth2AuthorizedClient&gt; <span class="function">Mono&lt;T&gt; <span class="title">loadAuthorizedClient</span><span class="params">(String clientRegistrationId, Authentication principal, ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line">        Assert.hasText(clientRegistrationId, <span class="string">&quot;clientRegistrationId cannot be empty&quot;</span>);</span><br><span class="line">        Assert.hasText(principal.getName(), <span class="string">&quot;principalName cannot be empty&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = databaseClient.sql(LOAD_AUTHORIZED_CLIENT_SQL)</span><br><span class="line">                .bind(<span class="number">0</span>, clientRegistrationId)</span><br><span class="line">                .bind(<span class="number">1</span>, principal.getName())</span><br><span class="line">                .map(row -&gt; &#123;</span><br><span class="line">                    String clientRegistrationId1 = row.get(<span class="string">&quot;client_registration_id&quot;</span>, String.class);</span><br><span class="line">                    String access_token_type = row.get(<span class="string">&quot;access_token_type&quot;</span>, String.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    OAuth2AccessToken.TokenType tokenType = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">if</span> (OAuth2AccessToken.TokenType.BEARER.getValue().equalsIgnoreCase(access_token_type)) &#123;</span><br><span class="line">                        tokenType = OAuth2AccessToken.TokenType.BEARER;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    String tokenValue = <span class="keyword">new</span> String(row.get(<span class="string">&quot;access_token_value&quot;</span>, <span class="keyword">byte</span>[].class), StandardCharsets.UTF_8);</span><br><span class="line">                    Instant issuedAt = row.get(<span class="string">&quot;access_token_issued_at&quot;</span>, LocalDateTime.class).atZone(ZoneId.systemDefault()).toInstant();</span><br><span class="line">                    Instant expiresAt = row.get(<span class="string">&quot;access_token_expires_at&quot;</span>, LocalDateTime.class).atZone(ZoneId.systemDefault()).toInstant();</span><br><span class="line">                    Set&lt;String&gt; scopes = Collections.emptySet();</span><br><span class="line">                    String accessTokenScopes = row.get(<span class="string">&quot;access_token_scopes&quot;</span>, String.class);</span><br><span class="line">                    <span class="keyword">if</span> (accessTokenScopes != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        scopes = StringUtils.commaDelimitedListToSet(accessTokenScopes);</span><br><span class="line">                    &#125;</span><br><span class="line">                    OAuth2AccessToken accessToken = <span class="keyword">new</span> OAuth2AccessToken(tokenType, tokenValue, issuedAt, expiresAt, scopes);</span><br><span class="line">                    OAuth2RefreshToken refreshToken = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">byte</span>[] refreshTokenValue = row.get(<span class="string">&quot;refresh_token_value&quot;</span>, <span class="keyword">byte</span>[].class);</span><br><span class="line">                    <span class="keyword">if</span> (refreshTokenValue != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        tokenValue = <span class="keyword">new</span> String(refreshTokenValue, StandardCharsets.UTF_8);</span><br><span class="line">                        issuedAt = <span class="keyword">null</span>;</span><br><span class="line">                        LocalDateTime refreshTokenIssuedAt = row.get(<span class="string">&quot;refresh_token_issued_at&quot;</span>, LocalDateTime.class);</span><br><span class="line">                        <span class="keyword">if</span> (refreshTokenIssuedAt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            issuedAt = refreshTokenIssuedAt.atZone(ZoneId.systemDefault()).toInstant();</span><br><span class="line">                        &#125;</span><br><span class="line">                        refreshToken = <span class="keyword">new</span> OAuth2RefreshToken(tokenValue, issuedAt);</span><br><span class="line">                    &#125;</span><br><span class="line">                    String principalName = row.get(<span class="string">&quot;principal_name&quot;</span>, String.class);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">final</span> OAuth2RefreshToken refreshToken1 = refreshToken;</span><br><span class="line"></span><br><span class="line">                    Mono&lt;ClientRegistration&gt; clientRegistrationMono = reactiveClientRegistrationRepository</span><br><span class="line">                            .findByRegistrationId(clientRegistrationId1);</span><br><span class="line">                    <span class="keyword">return</span> clientRegistrationMono</span><br><span class="line">                            .switchIfEmpty(Mono.error(<span class="keyword">new</span> DataRetrievalFailureException(</span><br><span class="line">                                    <span class="string">&quot;The ClientRegistration with id &#x27;&quot;</span> + clientRegistrationId1 + <span class="string">&quot;&#x27; exists in the data source, &quot;</span></span><br><span class="line">                                            + <span class="string">&quot;however, it was not found in the ClientRegistrationRepository.&quot;</span>)))</span><br><span class="line">                            .map(clientRegistration -&gt; <span class="keyword">new</span> OAuth2AuthorizedClient(clientRegistration, principalName, accessToken, refreshToken1));</span><br><span class="line">                &#125;).first().flatMap(oAuth2AuthorizedClientMono1 -&gt; oAuth2AuthorizedClientMono1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (Mono&lt;T&gt;) oAuth2AuthorizedClientMono.doOnNext(unused -&gt; log.info(<span class="string">&quot;select client token info success!&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">saveAuthorizedClient</span><span class="params">(OAuth2AuthorizedClient authorizedClient, Authentication principal, ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Assert.notNull(authorizedClient, <span class="string">&quot;authorizedClient cannot be null&quot;</span>);</span><br><span class="line">        Assert.notNull(principal, <span class="string">&quot;principal cannot be null&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.loadAuthorizedClient(authorizedClient.getClientRegistration().getRegistrationId(), principal, exchange)</span><br><span class="line">                 .flatMap((Function&lt;OAuth2AuthorizedClient, Mono&lt;Optional&lt;OAuth2AuthorizedClient&gt;&gt;&gt;) oAuth2AuthorizedClient -&gt; Mono.just(Optional.of(oAuth2AuthorizedClient)))</span><br><span class="line">                 .defaultIfEmpty(Optional.empty())</span><br><span class="line">                 .flatMap((Function&lt;Optional&lt;OAuth2AuthorizedClient&gt;, Mono&lt;Void&gt;&gt;) oAuth2AuthorizedClient -&gt; &#123;</span><br><span class="line">                     <span class="keyword">if</span>(!oAuth2AuthorizedClient.isPresent())&#123;</span><br><span class="line">                         <span class="keyword">return</span> insertAuthorizedClient(authorizedClient,principal);</span><br><span class="line">                     &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                         <span class="keyword">return</span> updateAuthorizedClient(authorizedClient, principal);</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Mono&lt;Void&gt; <span class="title">updateAuthorizedClient</span><span class="params">(OAuth2AuthorizedClient authorizedClient, Authentication principal)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> databaseClient.sql(UPDATE_AUTHORIZED_CLIENT_SQL)</span><br><span class="line">                .bind(<span class="number">0</span>, authorizedClient.getAccessToken().getTokenType().getValue())</span><br><span class="line">                .bind(<span class="number">1</span>, authorizedClient.getAccessToken().getTokenValue().getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                .bind(<span class="number">2</span>, timeFromInstant(authorizedClient.getAccessToken().getIssuedAt()))</span><br><span class="line">                .bind(<span class="number">3</span>, timeFromInstant(authorizedClient.getAccessToken().getExpiresAt()))</span><br><span class="line">                .bind(<span class="number">4</span>, StringUtils.collectionToCommaDelimitedString(authorizedClient.getAccessToken().getScopes()))</span><br><span class="line">                .bind(<span class="number">5</span>, authorizedClient.getRefreshToken().getTokenValue().getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                .bind(<span class="number">6</span>, timeFromInstant(authorizedClient.getRefreshToken().getIssuedAt()))</span><br><span class="line">                .bind(<span class="number">7</span>, authorizedClient.getClientRegistration().getRegistrationId())</span><br><span class="line">                .bind(<span class="number">8</span>, principal.getName())</span><br><span class="line">                .then()</span><br><span class="line">                .doOnNext(unused -&gt; log.info(<span class="string">&quot;update client token info success!&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Mono&lt;Void&gt; <span class="title">insertAuthorizedClient</span><span class="params">(OAuth2AuthorizedClient authorizedClient, Authentication principal)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> databaseClient.sql(SAVE_AUTHORIZED_CLIENT_SQL)</span><br><span class="line">                .bind(<span class="number">0</span>, authorizedClient.getClientRegistration().getRegistrationId())</span><br><span class="line">                .bind(<span class="number">1</span>, principal.getName())</span><br><span class="line">                .bind(<span class="number">2</span>, authorizedClient.getAccessToken().getTokenType().getValue())</span><br><span class="line">                .bind(<span class="number">3</span>, authorizedClient.getAccessToken().getTokenValue().getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                .bind(<span class="number">4</span>, timeFromInstant(authorizedClient.getAccessToken().getIssuedAt()))</span><br><span class="line">                .bind(<span class="number">5</span>, timeFromInstant(authorizedClient.getAccessToken().getExpiresAt()))</span><br><span class="line">                .bind(<span class="number">6</span>, StringUtils.collectionToCommaDelimitedString(authorizedClient.getAccessToken().getScopes()))</span><br><span class="line">                .bind(<span class="number">7</span>, authorizedClient.getRefreshToken().getTokenValue().getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                .bind(<span class="number">8</span>, timeFromInstant(authorizedClient.getRefreshToken().getIssuedAt()))</span><br><span class="line">                .then()</span><br><span class="line">                .doOnNext(unused -&gt; log.info(<span class="string">&quot;insert client token info success!&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">removeAuthorizedClient</span><span class="params">(String clientRegistrationId, Authentication principal, ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Assert.hasText(clientRegistrationId, <span class="string">&quot;clientRegistrationId cannot be empty&quot;</span>);</span><br><span class="line">        Assert.hasText(principal.getName(), <span class="string">&quot;principalName cannot be empty&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> databaseClient.sql(REMOVE_AUTHORIZED_CLIENT_SQL)</span><br><span class="line">                .bind(<span class="number">0</span>, clientRegistrationId)</span><br><span class="line">                .bind(<span class="number">1</span>, principal.getName())</span><br><span class="line">                .then()</span><br><span class="line">                .doOnNext(unused -&gt; log.info(<span class="string">&quot;remove client token info success!&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">timeFromInstant</span><span class="params">(Instant instant)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(LocalDateTime.ofInstant(instant, ZoneId.systemDefault()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AuthController"><a href="#AuthController" class="headerlink" title="AuthController"></a>AuthController</h2><p>自定义登录跳转页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientwebfluxdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerOAuth2AuthorizedClientRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.InMemoryReactiveClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;login&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/30 18:02.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ReactiveClientRegistrationRepository reactiveClientRegistrationRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (reactiveClientRegistrationRepository <span class="keyword">instanceof</span> InMemoryReactiveClientRegistrationRepository) &#123;</span><br><span class="line">            ((InMemoryReactiveClientRegistrationRepository) reactiveClientRegistrationRepository).forEach(registrations -&gt; &#123;</span><br><span class="line">                String registrationId = registrations.getRegistrationId();</span><br><span class="line">                String clientName = registrations.getClientName();</span><br><span class="line">                System.out.println(registrationId + <span class="string">&quot;---&quot;</span> + clientName);</span><br><span class="line">                map.put(registrationId, clientName);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;registrations&quot;</span>, map);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;oauth2/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="login-html"><a href="#login-html" class="headerlink" title="login.html"></a>login.html</h2><p>自定义登录页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/css/bootstrap.min.css&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/jquery/jquery.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/js/bootstrap.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;form-signin-heading&quot;</span>&gt;</span>Login with OAuth 2.0<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;registration: $&#123;registrations&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/oauth2/authorization/&#x27;+$&#123;registration.key&#125;&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;registration.value&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/logout&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Logout<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8099</span></span><br><span class="line"></span><br><span class="line"><span class="attr">oauth2:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://localhost:8080</span></span><br><span class="line">    <span class="attr">logout:</span> <span class="string">$&#123;oauth2.server.url&#125;/logout</span> <span class="comment">#认证服务器logout地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">oauth2-client-webflux</span></span><br><span class="line">  <span class="comment">#资源国际化</span></span><br><span class="line">  <span class="attr">messages:</span></span><br><span class="line">    <span class="attr">basename:</span> <span class="string">static/i18n/messages</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">utf-8</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#thymeleaf</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML</span></span><br><span class="line">    <span class="attr">prefix:</span> <span class="string">classpath:/templates/</span></span><br><span class="line">    <span class="attr">servlet:</span></span><br><span class="line">      <span class="attr">content-type:</span> <span class="string">text/html</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">.html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">#r2dbc mysql</span></span><br><span class="line">  <span class="attr">r2dbc:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">r2dbc:mysql://localhost:3306/springboot?useUnicode=true&amp;characterEncoding=utf-8&amp;useTimezone=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">newpwd</span></span><br><span class="line">    <span class="attr">pool:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">max-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">max-idle-time:</span> <span class="string">30m</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">#oauth2</span></span><br><span class="line">  <span class="comment"># 支持多客户端认证方式</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">client:</span></span><br><span class="line">        <span class="attr">registration:</span></span><br><span class="line">          <span class="comment"># /oauth2/authorization/flux-client # 认证地址</span></span><br><span class="line">          <span class="attr">flux-client:</span> <span class="comment"># 注册名称</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">postman</span> <span class="comment"># 客户端登录用户名称</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">postman</span> <span class="comment"># 客户端登录密码</span></span><br><span class="line">            <span class="attr">authorization-grant-type:</span> <span class="string">authorization_code</span> <span class="comment">#认证方式为code</span></span><br><span class="line">            <span class="comment">#回调地址，需要配置到认证服务器中</span></span><br><span class="line">            <span class="attr">redirect-uri:</span> <span class="string">http://localhost:8099/login/oauth2/code/flux-client</span></span><br><span class="line">            <span class="attr">scope:</span> <span class="string">any</span> <span class="comment">#授权范围</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">客户端1</span> <span class="comment">#显示名称</span></span><br><span class="line"><span class="comment">#          # /oauth2/authorization/flux-client2</span></span><br><span class="line">          <span class="attr">flux-client2:</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">demo-client</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">demo-client</span></span><br><span class="line">            <span class="attr">authorization-grant-type:</span> <span class="string">authorization_code</span></span><br><span class="line">            <span class="attr">redirect-uri:</span> <span class="string">http://localhost:8099/login/oauth2/code/flux-client2</span></span><br><span class="line">            <span class="attr">scope:</span> <span class="string">any</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">客户端2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="attr">google:</span> <span class="comment"># google</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Google认证</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="attr">facebook:</span> <span class="comment"># facebook</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Facebook认证</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="attr">github:</span> <span class="comment"># github</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Github认证</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">provider:</span></span><br><span class="line">          <span class="attr">flux-client:</span> <span class="comment"># 注册客户端的认证信息</span></span><br><span class="line">            <span class="attr">authorization-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/authorize</span> <span class="comment"># 认证服务器授权地址</span></span><br><span class="line">            <span class="attr">token-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/token</span> <span class="comment"># 认证服务器token地址</span></span><br><span class="line">            <span class="attr">user-info-uri:</span> <span class="string">http://localhost:8080/userInfo</span> <span class="comment"># 认证服务器用户信息地址</span></span><br><span class="line">            <span class="attr">userNameAttribute:</span> <span class="string">username</span> <span class="comment"># 指定user-info-uri返回map中的属性名称用于表示用户名</span></span><br><span class="line">          <span class="attr">flux-client2:</span></span><br><span class="line">            <span class="attr">authorization-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/authorize</span></span><br><span class="line">            <span class="attr">token-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/token</span></span><br><span class="line">            <span class="attr">user-info-uri:</span> <span class="string">http://localhost:8080/userInfo</span></span><br><span class="line">            <span class="attr">userNameAttribute:</span> <span class="string">username</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以打印sql</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">org.springframework.data.r2dbc:</span> <span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><h2 id="ResController"><a href="#ResController" class="headerlink" title="ResController"></a>ResController</h2><p>请求资源服务示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientwebfluxdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerOAuth2AuthorizedClientRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.OAuth2AuthorizedClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.client.WebClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;获取资源服务器数据&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/7 22:47.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/res&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> WebClient CLIENT = WebClient.create(<span class="string">&quot;http://localhost:8083&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerOAuth2AuthorizedClientRepository customServerOAuth2AuthorizedClientRepository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取资源服务器的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/res1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title">getRes</span><span class="params">(Authentication principal, ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> OAuth2AuthenticationToken) &#123;</span><br><span class="line">            String authorizedClientRegistrationId = ((OAuth2AuthenticationToken) principal).getAuthorizedClientRegistrationId();</span><br><span class="line">            Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = customServerOAuth2AuthorizedClientRepository.loadAuthorizedClient(authorizedClientRegistrationId, principal, exchange);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> oAuth2AuthorizedClientMono.flatMap(client -&gt; &#123;</span><br><span class="line">                String tokenValue = client.getAccessToken().getTokenValue();</span><br><span class="line">                String tokenType = client.getAccessToken().getTokenType().getValue();</span><br><span class="line">                <span class="keyword">return</span> CLIENT.get()</span><br><span class="line">                        .uri(<span class="string">&quot;/res/res1&quot;</span>)</span><br><span class="line">                        <span class="comment">//增加了Bearer安全认证，所以这里需要传递header认证信息</span></span><br><span class="line">                        .header(HttpHeaders.AUTHORIZATION,</span><br><span class="line">                                tokenType + <span class="string">&quot; &quot;</span> + tokenValue)</span><br><span class="line">                        .retrieve()<span class="comment">//异步接收服务端响应</span></span><br><span class="line">                        .bodyToMono(AjaxResponse.class)</span><br><span class="line">                        .retry(<span class="number">3</span>)</span><br><span class="line">                        .defaultIfEmpty(AjaxResponse.success(<span class="string">&quot;返回结果为Null&quot;</span>));</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.just(AjaxResponse.error(<span class="keyword">new</span> CustomException(CustomExceptionType.SYSTEM_ERROR,<span class="string">&quot;Authentication类型转换异常&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title">getUser</span><span class="params">(Authentication principal, ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> OAuth2AuthenticationToken) &#123;</span><br><span class="line">            String authorizedClientRegistrationId = ((OAuth2AuthenticationToken) principal).getAuthorizedClientRegistrationId();</span><br><span class="line">            Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = customServerOAuth2AuthorizedClientRepository.loadAuthorizedClient(authorizedClientRegistrationId, principal, exchange);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> oAuth2AuthorizedClientMono.flatMap(client -&gt; &#123;</span><br><span class="line">                String tokenValue = client.getAccessToken().getTokenValue();</span><br><span class="line">                String tokenType = client.getAccessToken().getTokenType().getValue();</span><br><span class="line">                <span class="keyword">return</span> CLIENT.post()</span><br><span class="line">                        .uri(<span class="string">&quot;/user&quot;</span>)</span><br><span class="line">                        <span class="comment">//增加了Bearer安全认证，所以这里需要传递header认证信息</span></span><br><span class="line">                        .header(HttpHeaders.AUTHORIZATION,</span><br><span class="line">                                tokenType + <span class="string">&quot; &quot;</span> + tokenValue)</span><br><span class="line">                        .retrieve()<span class="comment">//异步接收服务端响应</span></span><br><span class="line">                        .bodyToMono(AjaxResponse.class)</span><br><span class="line">                        .retry(<span class="number">3</span>)</span><br><span class="line">                        .defaultIfEmpty(AjaxResponse.success(<span class="string">&quot;返回结果为Null&quot;</span>));</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.just(AjaxResponse.error(<span class="keyword">new</span> CustomException(CustomExceptionType.SYSTEM_ERROR,<span class="string">&quot;Authentication类型转换异常&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rbac&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title">getRbac</span><span class="params">(Authentication principal, ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> OAuth2AuthenticationToken) &#123;</span><br><span class="line">            String authorizedClientRegistrationId = ((OAuth2AuthenticationToken) principal).getAuthorizedClientRegistrationId();</span><br><span class="line">            Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = customServerOAuth2AuthorizedClientRepository.loadAuthorizedClient(authorizedClientRegistrationId, principal, exchange);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> oAuth2AuthorizedClientMono.flatMap(client -&gt; &#123;</span><br><span class="line">                String tokenValue = client.getAccessToken().getTokenValue();</span><br><span class="line">                String tokenType = client.getAccessToken().getTokenType().getValue();</span><br><span class="line">                <span class="keyword">return</span> CLIENT.get()</span><br><span class="line">                        .uri(<span class="string">&quot;/rbac&quot;</span>)</span><br><span class="line">                        <span class="comment">//增加了Bearer安全认证，所以这里需要传递header认证信息</span></span><br><span class="line">                        .header(HttpHeaders.AUTHORIZATION,</span><br><span class="line">                                tokenType + <span class="string">&quot; &quot;</span> + tokenValue)</span><br><span class="line">                        .retrieve()<span class="comment">//异步接收服务端响应</span></span><br><span class="line">                        .bodyToMono(AjaxResponse.class)</span><br><span class="line">                        .retry(<span class="number">3</span>)</span><br><span class="line">                        .defaultIfEmpty(AjaxResponse.success(<span class="string">&quot;返回结果为Null&quot;</span>));</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.just(AjaxResponse.error(<span class="keyword">new</span> CustomException(CustomExceptionType.SYSTEM_ERROR,<span class="string">&quot;Authentication类型转换异常&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Map&gt; <span class="title">getuserInfo</span><span class="params">(Authentication principal, ServerWebExchange exchange)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> OAuth2AuthenticationToken) &#123;</span><br><span class="line">            String authorizedClientRegistrationId = ((OAuth2AuthenticationToken) principal).getAuthorizedClientRegistrationId();</span><br><span class="line">            Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = customServerOAuth2AuthorizedClientRepository.loadAuthorizedClient(authorizedClientRegistrationId, principal, exchange);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> oAuth2AuthorizedClientMono.flatMap(client -&gt; &#123;</span><br><span class="line">                String tokenValue = client.getAccessToken().getTokenValue();</span><br><span class="line">                String tokenType = client.getAccessToken().getTokenType().getValue();</span><br><span class="line">                <span class="keyword">return</span> CLIENT.get()</span><br><span class="line">                        .uri(<span class="string">&quot;/userInfo&quot;</span>)</span><br><span class="line">                        <span class="comment">//增加了Bearer安全认证，所以这里需要传递header认证信息</span></span><br><span class="line">                        .header(HttpHeaders.AUTHORIZATION,</span><br><span class="line">                                tokenType + <span class="string">&quot; &quot;</span> + tokenValue)</span><br><span class="line">                        .retrieve()<span class="comment">//异步接收服务端响应</span></span><br><span class="line">                        .bodyToMono(Map.class)</span><br><span class="line">                        .retry(<span class="number">3</span>)</span><br><span class="line">                        .defaultIfEmpty(<span class="keyword">new</span> HashMap());</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.error(<span class="keyword">new</span> CustomException(CustomExceptionType.SYSTEM_ERROR,<span class="string">&quot;Authentication类型转换异常&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT-WebFlux的客户端服务器&lt;/li&gt;
&lt;li&gt;本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建&lt;/li&gt;
&lt;li&gt;本文基于&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-clientserver/&quot;&gt;SpringBoot-OAuth2-JWT-ClientServer&lt;/a&gt;并实现其功能，可以参考对比&lt;/li&gt;
&lt;li&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="oauth2" scheme="https://blog.hanqunfeng.com/tags/oauth2/"/>
    
    <category term="springsecurity" scheme="https://blog.hanqunfeng.com/tags/springsecurity/"/>
    
    <category term="jwt" scheme="https://blog.hanqunfeng.com/tags/jwt/"/>
    
    <category term="webflux" scheme="https://blog.hanqunfeng.com/tags/webflux/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-OAuth2-JWT-WebFlux-ResourceServer</title>
    <link href="https://blog.hanqunfeng.com/2020/12/02/springboot-oauth2-jwt-webflux-resourceserver/"/>
    <id>https://blog.hanqunfeng.com/2020/12/02/springboot-oauth2-jwt-webflux-resourceserver/</id>
    <published>2020-12-02T12:30:05.000Z</published>
    <updated>2021-05-27T07:43:36.245Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT-WebFlux的资源服务器</li><li>本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建</li><li>本文基于<a href="https://blog.hanqunfeng.com/2020/11/15/springBoot-oauth2-jwt-resourcceserver/">SpringBoot-OAuth2-JWT-ResourceServer</a>并实现其功能，可以参考对比</li><li>代码地址:<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48</a></li></ul><span id="more"></span><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li>springboot官方提供了支持<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webflux</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-webflux&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-oauth2-resource-server&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目中使用了lombok减少代码量，非必须依赖</span></span><br><span class="line">compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="ReactiveSecurityConfig"><a href="#ReactiveSecurityConfig" class="headerlink" title="ReactiveSecurityConfig"></a>ReactiveSecurityConfig</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.security.CustomReactiveAuthorizationManager;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.security.CustomServerAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.security.CustomServerAuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableReactiveMethodSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.web.server.ServerHttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.SecurityWebFilterChain;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;安全认证配置&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/19 10:26.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//@EnableWebFluxSecurity //非必要</span></span><br><span class="line"><span class="meta">@EnableReactiveMethodSecurity</span> <span class="comment">//启用@PreAuthorize注解配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReactiveSecurityConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerAccessDeniedHandler customServerAccessDeniedHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerAuthenticationEntryPoint customServerAuthenticationEntryPoint;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomReactiveAuthorizationManager customReactiveAuthorizationManager;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册安全验证规则</span></span><br><span class="line"><span class="comment">     * 配置方式与HttpSecurity基本一致</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">SecurityWebFilterChain <span class="title">springSecurityFilterChain</span><span class="params">(ServerHttpSecurity http)</span> </span>&#123; <span class="comment">//定义SecurityWebFilterChain对安全进行控制，使用ServerHttpSecurity构造过滤器链；</span></span><br><span class="line">        <span class="keyword">return</span> http.authorizeExchange()</span><br><span class="line">                <span class="comment">//.anyExchange().authenticated() //所有请求都需要通过认证</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/res/**&quot;</span>, <span class="string">&quot;/userInfo/**&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">//需要具备相应的角色才能访问</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/user/**&quot;</span>).hasAnyRole(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;user&quot;</span>)</span><br><span class="line">                <span class="comment">//不需要登录就可以访问</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/swagger-ui/**&quot;</span>, <span class="string">&quot;/v3/api-docs**&quot;</span>).permitAll()</span><br><span class="line"></span><br><span class="line">                <span class="comment">//其它路径需要根据指定的方法判断是否有权限访问，基于权限管理模型认证</span></span><br><span class="line">                .anyExchange().access(customReactiveAuthorizationManager)</span><br><span class="line">                .and()</span><br><span class="line">                .csrf().disable() <span class="comment">//关闭CSRF（Cross-site request forgery）跨站请求伪造</span></span><br><span class="line">                .httpBasic().disable() <span class="comment">//不支持HTTP Basic方式登录</span></span><br><span class="line">                .formLogin().disable()<span class="comment">//不支持login页面登录</span></span><br><span class="line">                .cors() <span class="comment">//开启跨域支持</span></span><br><span class="line">                .and()</span><br><span class="line"></span><br><span class="line">                <span class="comment">//鉴权时只支持Bearer Token的形式，不支持url后加参数access_token</span></span><br><span class="line">                .oauth2ResourceServer()<span class="comment">//开启oauth2资源认证</span></span><br><span class="line">                .jwt() <span class="comment">//token为jwt</span></span><br><span class="line">                <span class="comment">//默认情况下，权限是scope，而我们希望使用的是用户的角色，所以这里需要通过转换器进行处理</span></span><br><span class="line">                .jwtAuthenticationConverter(jwt -&gt; &#123; <span class="comment">//通过自定义Converter来指定权限，Converter是函数接口，当前上下问参数为JWT对象</span></span><br><span class="line">                    Collection&lt;SimpleGrantedAuthority&gt; authorities =</span><br><span class="line">                            ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                                    .get(<span class="string">&quot;authorities&quot;</span>)).stream() <span class="comment">//获取JWT中的authorities</span></span><br><span class="line">                                    .map(SimpleGrantedAuthority::<span class="keyword">new</span>)</span><br><span class="line">                                    .collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//如果希望保留scope的权限，可以取出scope数据然后合并到一起，这样因为不是以ROLE_开头，所以需要使用hasAuthority(&#x27;SCOPE_any&#x27;)的形式</span></span><br><span class="line">                    Collection&lt;SimpleGrantedAuthority&gt; scopes = ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                            .get(<span class="string">&quot;scope&quot;</span>)).stream().map(scope -&gt; <span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">&quot;SCOPE_&quot;</span> + scope))</span><br><span class="line">                            .collect(Collectors.toSet());</span><br><span class="line">                    <span class="comment">//合并权限</span></span><br><span class="line">                    authorities.addAll(scopes);</span><br><span class="line">                    <span class="keyword">return</span> Mono.just(<span class="keyword">new</span> JwtAuthenticationToken(jwt, authorities));</span><br><span class="line">                &#125;)</span><br><span class="line">                .and()</span><br><span class="line">                .accessDeniedHandler(customServerAccessDeniedHandler)</span><br><span class="line">                .authenticationEntryPoint(customServerAuthenticationEntryPoint)</span><br><span class="line">                .and().build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="CustomReactiveAuthorizationManager"><a href="#CustomReactiveAuthorizationManager" class="headerlink" title="CustomReactiveAuthorizationManager"></a>CustomReactiveAuthorizationManager</h2><p>基于RBAC权限认证管理模型的认证方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authorization.AuthorizationDecision;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authorization.ReactiveAuthorizationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authorization.AuthorizationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.AntPathMatcher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ReactiveAuthorizationManager&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/30 12:05.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomReactiveAuthorizationManager</span> <span class="keyword">implements</span> <span class="title">ReactiveAuthorizationManager</span>&lt;<span class="title">AuthorizationContext</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;AuthorizationDecision&gt; <span class="title">check</span><span class="params">(Mono&lt;Authentication&gt; authentication, AuthorizationContext object)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> authentication.map(auth -&gt; &#123;</span><br><span class="line">            ServerHttpRequest request = object.getExchange().getRequest();</span><br><span class="line">            Object principal = auth.getPrincipal();</span><br><span class="line">            String username;</span><br><span class="line">            <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> Jwt) &#123;</span><br><span class="line">                username = ((Jwt) principal).getClaimAsString(<span class="string">&quot;user_name&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                username = principal.toString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">boolean</span> hasPerssion = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.hasText(username) &amp;&amp; !<span class="string">&quot;anonymousUser&quot;</span>.equals(username)) &#123;</span><br><span class="line">                <span class="comment">//根据用户名查询用户资源权限，这里应该访问数据库查询</span></span><br><span class="line">                Set&lt;String&gt; uris = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">                <span class="keyword">for</span> (String uri : uris) &#123;</span><br><span class="line">                    <span class="comment">//验证用户拥有的资源权限是否与请求的资源相匹配</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">new</span> AntPathMatcher().match(uri, request.getURI().toString())) &#123;</span><br><span class="line">                        hasPerssion = <span class="keyword">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//暂时全部返回true</span></span><br><span class="line">            hasPerssion = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> AuthorizationDecision(hasPerssion);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerAccessDeniedHandler"><a href="#CustomServerAccessDeniedHandler" class="headerlink" title="CustomServerAccessDeniedHandler"></a>CustomServerAccessDeniedHandler</h2><p>没有权限时的处理方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.AccessDeniedException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authorization.ServerAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;没有权限时的处理方式&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/20 11:56.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomServerAccessDeniedHandler</span> <span class="keyword">implements</span> <span class="title">ServerAccessDeniedHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">handle</span><span class="params">(ServerWebExchange serverWebExchange, AccessDeniedException e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> setErrorResponse(serverWebExchange.getResponse(),e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Mono&lt;Void&gt; <span class="title">setErrorResponse</span><span class="params">(ServerHttpResponse response, String message)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        response.getHeaders().setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        AjaxResponse ajaxResponse = AjaxResponse.error(<span class="keyword">new</span> CustomException(CustomExceptionType.USER_INPUT_ERROR, message));</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(response.bufferFactory().wrap(objectMapper.writeValueAsBytes(ajaxResponse))));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerAuthenticationEntryPoint"><a href="#CustomServerAuthenticationEntryPoint" class="headerlink" title="CustomServerAuthenticationEntryPoint"></a>CustomServerAuthenticationEntryPoint</h2><p>token格式错误或过期时的处理方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.ServerAuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ServerAuthenticationEntryPoint&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/20 12:01.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * token格式错误或过期时的处理方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomServerAuthenticationEntryPoint</span> <span class="keyword">implements</span> <span class="title">ServerAuthenticationEntryPoint</span> </span>&#123;</span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">commence</span><span class="params">(ServerWebExchange serverWebExchange, AuthenticationException e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> setErrorResponse(serverWebExchange.getResponse(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Mono&lt;Void&gt; <span class="title">setErrorResponse</span><span class="params">(ServerHttpResponse response, String message)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        response.getHeaders().setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        AjaxResponse ajaxResponse = AjaxResponse.error(<span class="keyword">new</span> CustomException(CustomExceptionType.USER_INPUT_ERROR, message));</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(response.bufferFactory().wrap(objectMapper.writeValueAsBytes(ajaxResponse))));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="WebFluxConfig"><a href="#WebFluxConfig" class="headerlink" title="WebFluxConfig"></a>WebFluxConfig</h2><p>配置跨域</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.config.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.config.WebFluxConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;WebFlux配置类&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/18 17:43.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 我们若需要配置Spring WebFlux只需让配置配实现接口WebFluxConfigurer，</span></span><br><span class="line"><span class="comment"> * 这样我们既能保留Spring Boot给WebFlux配置又能添加我们的定制配置。</span></span><br><span class="line"><span class="comment"> * 若我们向完全控制WebFlux，则在配置类添加注解<span class="doctag">@EnableWebFlux</span></span></span><br><span class="line"><span class="comment"> * 配置方式和Spring MVC类似</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebFluxConfig</span> <span class="keyword">implements</span> <span class="title">WebFluxConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//跨域设置</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>) <span class="comment">//添加映射路径，“/**”表示对所有的路径实行全局跨域访问权限的设置</span></span><br><span class="line">                .allowedMethods(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>) <span class="comment">//开放哪些Http方法，允许跨域访问</span></span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>) <span class="comment">//允许HTTP请求中的携带哪些Header信息</span></span><br><span class="line">                <span class="comment">//When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot;since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header.</span></span><br><span class="line">                <span class="comment">// To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.</span></span><br><span class="line">                <span class="comment">//.allowedOrigins(&quot;*&quot;) //开放哪些ip、端口、域名的访问权限</span></span><br><span class="line">                .allowedOriginPatterns(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowCredentials(<span class="keyword">true</span>); <span class="comment">//是否允许发送Cookie信息</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#资源服务器端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">oauth2-resource-server-webflux</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#oauth2 配置</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">resourceserver:</span></span><br><span class="line">        <span class="attr">jwt:</span></span><br><span class="line">          <span class="comment"># 公钥文件路径</span></span><br><span class="line">          <span class="comment"># public-key-location: classpath:oauth2_key.pub</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># 认证服务器提供的密钥验证路径，这种方式每次验证access_token都需要访问认证服务器</span></span><br><span class="line">          <span class="attr">jwk-set-uri:</span> <span class="string">http://localhost:8080/.well-known/jwks.json</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="资源接口示例"><a href="#资源接口示例" class="headerlink" title="资源接口示例"></a>资源接口示例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.prepost.PreAuthorize;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.Principal;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;res&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/6 17:22.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意权限区分大小写</span></span><br><span class="line">    <span class="meta">@PreAuthorize(&quot;hasRole(&#x27;admin&#x27;) or hasRole(&#x27;user&#x27;)&quot;)</span></span><br><span class="line">    <span class="comment">//@PreAuthorize(&quot;#oauth2.hasScope(&#x27;any&#x27;)&quot;) //不支持oauth2表达式</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/user&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title">user</span><span class="params">(Principal principal)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//principal在经过security拦截后，是org.springframework.security.authentication.UsernamePasswordAuthenticationToken</span></span><br><span class="line">        <span class="comment">//在经OAuth2拦截后，是OAuth2Authentication</span></span><br><span class="line">        <span class="keyword">return</span> Mono.just(AjaxResponse.success(principal));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意权限区分大小写</span></span><br><span class="line">    <span class="meta">@PreAuthorize(&quot;hasAuthority(&#x27;SCOPE_any&#x27;)&quot;)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/user2&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title">user2</span><span class="params">(Principal principal)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//principal在经过security拦截后，是org.springframework.security.authentication.UsernamePasswordAuthenticationToken</span></span><br><span class="line">        <span class="comment">//在经OAuth2拦截后，是OAuth2Authentication</span></span><br><span class="line">        <span class="keyword">return</span> Mono.just(AjaxResponse.success(principal));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户的claim信息</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Map&lt;String, Object&gt;&gt; userInfo(Authentication authentication)&#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        Object principal = authentication.getPrincipal();</span><br><span class="line">        <span class="keyword">if</span>(principal <span class="keyword">instanceof</span> Jwt)&#123;</span><br><span class="line">            map.put(<span class="string">&quot;username&quot;</span>, ((Jwt) principal).getClaim(<span class="string">&quot;user_name&quot;</span>));</span><br><span class="line">            map.putAll(((Jwt) principal).getClaims());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Mono.just(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT-WebFlux的资源服务器&lt;/li&gt;
&lt;li&gt;本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建&lt;/li&gt;
&lt;li&gt;本文基于&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/15/springBoot-oauth2-jwt-resourcceserver/&quot;&gt;SpringBoot-OAuth2-JWT-ResourceServer&lt;/a&gt;并实现其功能，可以参考对比&lt;/li&gt;
&lt;li&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="oauth2" scheme="https://blog.hanqunfeng.com/tags/oauth2/"/>
    
    <category term="springsecurity" scheme="https://blog.hanqunfeng.com/tags/springsecurity/"/>
    
    <category term="jwt" scheme="https://blog.hanqunfeng.com/tags/jwt/"/>
    
    <category term="webflux" scheme="https://blog.hanqunfeng.com/tags/webflux/"/>
    
  </entry>
  
  <entry>
    <title>发布Jar到Maven中央仓库--gradle</title>
    <link href="https://blog.hanqunfeng.com/2020/11/27/gradle-depoly-maven-center-repository/"/>
    <id>https://blog.hanqunfeng.com/2020/11/27/gradle-depoly-maven-center-repository/</id>
    <published>2020-11-27T13:30:05.000Z</published>
    <updated>2020-11-27T09:14:08.576Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>通过本文，你将知道如何将gradle构建的项目发布到Maven中央仓库</li><li>maven构建请看<a href="https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more">发布Jar到Maven中央仓库–mvn</a>。</li><li>前三个步骤与<a href="https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more">发布Jar到Maven中央仓库–mvn</a>相同，不在赘述。</li></ul><span id="more"></span><h2 id="一、将项目推送到远程仓库，如-Github或者Gitee"><a href="#一、将项目推送到远程仓库，如-Github或者Gitee" class="headerlink" title="一、将项目推送到远程仓库，如 Github或者Gitee"></a>一、将项目推送到远程仓库，如 Github或者Gitee</h2><h2 id="二、注册-Sonatype-账户–就是一个JIRA"><a href="#二、注册-Sonatype-账户–就是一个JIRA" class="headerlink" title="二、注册 Sonatype 账户–就是一个JIRA"></a>二、注册 Sonatype 账户–就是一个JIRA</h2><h2 id="三、登录-Sonatype-创建工单–每部署一个新项目就创建一个工单"><a href="#三、登录-Sonatype-创建工单–每部署一个新项目就创建一个工单" class="headerlink" title="三、登录 Sonatype 创建工单–每部署一个新项目就创建一个工单"></a>三、登录 Sonatype 创建工单–每部署一个新项目就创建一个工单</h2><p>前三个步骤与<a href="https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more">发布Jar到Maven中央仓库–mvn</a>相同，不在赘述。</p><h2 id="四、发布"><a href="#四、发布" class="headerlink" title="四、发布"></a>四、发布</h2><ul><li><p>1.签名<br>  我是mac电脑，于是签名工具使用的是<a href="https://gpgtools.org/">https://gpgtools.org</a>，gradle签名时需要使用到<code>.gpg</code>证书文件，这个工具不支持直接导出gpg，其导出的证书文件是<code>.asc</code>格式的，asc其实就是字符串，可以用记事本打开查看。</p><p>  使用如下命令导出gpg格式的私钥证书：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> qunfeng_han@126.com是创建证书时使用的邮箱，会要求你输入创建证书时的密码</span></span><br><span class="line">gpg --export-secret-keys qunfeng_han@126.com &gt; secret.gpg</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 也可以使用创建证书的用户名，会要求你输入创建证书时的密码</span></span><br><span class="line">gpg --export-secret-keys hanqunfeng &gt; secret.gpg</span><br><span class="line"><span class="meta">#</span><span class="bash"> 导出私钥明文</span></span><br><span class="line">gpg --export-secret-keys --armor hanqunfeng &gt; secret.asc</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出当前全部证书</span></span><br><span class="line">gpg -k</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 导出公钥</span></span><br><span class="line">gpg --export hanqunfeng &gt; public.gpg</span><br><span class="line"><span class="meta">#</span><span class="bash"> 导出公钥明文</span></span><br><span class="line">gpg --export --armor hanqunfeng &gt; public.asc</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 导入公钥或私钥，区别就是导入公钥不需要创建证书的密码</span></span><br><span class="line">gpg --import public.gpg</span><br><span class="line">gpg --import --armor secret.asc</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  也可以使用windows系统下载的<a href="https://www.gpg4win.org/">https://www.gpg4win.org/</a>Kleopatra，将gpgtools导出的证书（勾选密码才是私钥证书，看生成文件的名称就可以，公开就是公钥，私密就是私钥）导入到Kleopatra中，然后右键选择–&gt;Backup secret keys,记得后缀一定是gpg，该工具支持三种格式，asc、gpg、pgp，默认也是acs，手工将文件后缀修改为gpg即可。</p><p>  也可以重新生成了一个密钥对，打开软件，菜单–&gt;文件–&gt;新建密钥对–&gt;创建个人penPGP密钥对，创建好后记得点击“保存密钥副本”，以导出gpg证书文件，该工具支持三种格式，asc、gpg、pgp，默认也是acs，手工将文件后缀修改为gpg即可，如果此时忘记点击保留副本，也可以在证书列表页右键选择–&gt;Backup secret keys,记得后缀一定是gpg。</p></li></ul><ul><li><p>build.gradle<br>重点还是<code>io.codearte.nexus-staging</code>这个自动发布插件，不需要手工操作oss-sonatype的UI进行发布。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;io.spring.dependency-management&#x27;</span> version <span class="string">&#x27;1.0.10.RELEASE&#x27;</span></span><br><span class="line">    <span class="comment">//此处必须是java-library，如果是java则api方法不可用，api可以理解为就是compile，支持传递依赖</span></span><br><span class="line">    id <span class="string">&#x27;java-library&#x27;</span></span><br><span class="line">    <span class="comment">//发布插件</span></span><br><span class="line">    id <span class="string">&#x27;maven-publish&#x27;</span></span><br><span class="line">    <span class="comment">//签名插件</span></span><br><span class="line">    id <span class="string">&#x27;signing&#x27;</span></span><br><span class="line">    <span class="comment">//自动发布到maven中央仓库插件</span></span><br><span class="line">    <span class="comment">//https://github.com/Codearte/gradle-nexus-staging-plugin</span></span><br><span class="line">    id <span class="string">&#x27;io.codearte.nexus-staging&#x27;</span> version <span class="string">&#x27;0.22.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">group</span> = <span class="string">&#x27;com.hanqunfeng&#x27;</span></span><br><span class="line"><span class="comment">//SNAPSHOT版本是不支持发布到Maven中央仓库</span></span><br><span class="line">version = <span class="string">&#x27;1.0.3&#x27;</span></span><br><span class="line"><span class="keyword">sourceCompatibility</span> = <span class="string">&#x27;1.8&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">java &#123;</span><br><span class="line">    withJavadocJar()</span><br><span class="line">    withSourcesJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">repositories</span> &#123;</span><br><span class="line">    maven &#123; url <span class="string">&#x27;https://maven.aliyun.com/repository/public/&#x27;</span> &#125;</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencyManagement &#123;</span><br><span class="line">    imports &#123; mavenBom(<span class="string">&quot;org.springframework.boot:spring-boot-dependencies:2.4.0&quot;</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="comment">//lombok</span></span><br><span class="line">    compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">    annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果不希望传递依赖，则使用implementation，传递依赖则使用compile或者api，gradle7后将不再支持compile</span></span><br><span class="line">    <span class="comment">//注解相关</span></span><br><span class="line">    api <span class="string">&#x27;org.springframework.boot:spring-boot-autoconfigure&#x27;</span></span><br><span class="line">    api <span class="string">&#x27;org.springframework.boot:spring-boot-configuration-processor&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//json-jackson</span></span><br><span class="line">    api <span class="string">&#x27;com.fasterxml.jackson.core:jackson-databind&#x27;</span></span><br><span class="line">    api <span class="string">&#x27;com.fasterxml.jackson.datatype:jackson-datatype-jdk8&#x27;</span></span><br><span class="line">    api <span class="string">&#x27;com.fasterxml.jackson.datatype:jackson-datatype-jsr310&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//@Aspect</span></span><br><span class="line">    api <span class="string">&#x27;org.aspectj:aspectjweaver&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Mono Flux</span></span><br><span class="line">    api <span class="string">&#x27;io.projectreactor:reactor-core&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//redis-template</span></span><br><span class="line">    api <span class="string">&#x27;org.springframework.data:spring-data-redis&#x27;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test &#123;</span><br><span class="line">    useJUnitPlatform()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// java编译的时候缺省状态下会因为中文字符而失败</span></span><br><span class="line">[compileJava, compileTestJava]*.<span class="keyword">options</span>*.encoding = <span class="string">&#x27;UTF-8&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布插件</span></span><br><span class="line"><span class="comment"> * 参考：https://docs.gradle.org/6.6.1/userguide/publishing_maven.html#publishing_maven:resolved_dependencies</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    publications &#123;</span><br><span class="line">        mavenJava(MavenPublication) &#123;</span><br><span class="line">            groupId = <span class="keyword">project</span>.<span class="keyword">group</span></span><br><span class="line">            artifactId = <span class="keyword">project</span>.name</span><br><span class="line">            version = <span class="keyword">project</span>.version</span><br><span class="line">            <span class="comment">//如果不定义，则会按照以上默认值执行</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">from</span> components.java</span><br><span class="line"></span><br><span class="line">            pom &#123;</span><br><span class="line">                name = <span class="string">&#x27;redis-cache-annotation-reactive&#x27;</span></span><br><span class="line">                <span class="keyword">description</span> = <span class="string">&#x27;redis cache function annotation for webflux&#x27;</span></span><br><span class="line">                url = <span class="string">&#x27;https://blog.hanqunfeng.com&#x27;</span></span><br><span class="line">                licenses &#123;</span><br><span class="line">                    license &#123;</span><br><span class="line">                        name = <span class="string">&#x27;The Apache License, Version 2.0&#x27;</span></span><br><span class="line">                        url = <span class="string">&#x27;http://www.apache.org/licenses/LICENSE-2.0.txt&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                developers &#123;</span><br><span class="line">                    developer &#123;</span><br><span class="line">                        id = <span class="string">&#x27;hanqf&#x27;</span></span><br><span class="line">                        name = <span class="string">&#x27;han qunfeng&#x27;</span></span><br><span class="line">                        email = <span class="string">&#x27;qunfeng_han@126.com&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                scm &#123;</span><br><span class="line">                    connection = <span class="string">&#x27;scm:git:https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git&#x27;</span></span><br><span class="line">                    developerConnection = <span class="string">&#x27;scm:git:https://github.com:hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git&#x27;</span></span><br><span class="line">                    url = <span class="string">&#x27;https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            versionMapping &#123;</span><br><span class="line">                usage(<span class="string">&#x27;java-api&#x27;</span>) &#123;</span><br><span class="line">                    fromResolutionOf(<span class="string">&#x27;runtimeClasspath&#x27;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                usage(<span class="string">&#x27;java-runtime&#x27;</span>) &#123;</span><br><span class="line">                    fromResolutionResult()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        maven &#123;</span><br><span class="line">            <span class="comment">// 发布仓库配置，这里基于version后缀是否为SNAPSHOT来区分发布到release库还是snapshots库</span></span><br><span class="line">           <span class="comment">// def releasesRepoUrl = &quot;http://nexus.cxzh.ltd:8081/repository/maven-releases/&quot;</span></span><br><span class="line">           <span class="comment">// def snapshotsRepoUrl = &quot;http://nexus.cxzh.ltd:8081/repository/maven-snapshots/&quot;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">def</span> releasesRepoUrl = <span class="string">&quot;https://oss.sonatype.org/service/local/staging/deploy/maven2/&quot;</span></span><br><span class="line">            <span class="keyword">def</span> snapshotsRepoUrl = <span class="string">&quot;https://oss.sonatype.org/content/repositories/snapshots/&quot;</span></span><br><span class="line">            url = version.endsWith(<span class="string">&#x27;SNAPSHOT&#x27;</span>) ? snapshotsRepoUrl : releasesRepoUrl</span><br><span class="line"></span><br><span class="line">            <span class="comment">//认证用户和密码，在配置文件gradle.properties中配置</span></span><br><span class="line">            <span class="comment">//oss-sonatype的登录用户名和密码</span></span><br><span class="line">            credentials &#123;</span><br><span class="line">                username nexusUser</span><br><span class="line">                password nexusPassword</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.withType(JavaCompile) &#123;</span><br><span class="line">    <span class="keyword">options</span>.encoding = <span class="string">&#x27;UTF-8&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//javadoc，如果用jdk11，默认就支持中文</span></span><br><span class="line"><span class="comment">//查看可以配置的属性：https://docs.gradle.org/current/javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html</span></span><br><span class="line">tasks.withType(Javadoc) &#123;</span><br><span class="line">    <span class="keyword">options</span>.version = <span class="keyword">true</span></span><br><span class="line">    <span class="keyword">options</span>.author = <span class="keyword">true</span></span><br><span class="line">    <span class="keyword">options</span>.encoding = <span class="string">&quot;UTF-8&quot;</span></span><br><span class="line">    <span class="keyword">options</span>.charSet = <span class="string">&quot;UTF-8&quot;</span>  <span class="comment">//解决中文乱码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">javadoc &#123;</span><br><span class="line">    <span class="keyword">if</span>(JavaVersion.current().isJava9Compatible()) &#123;</span><br><span class="line">        <span class="keyword">options</span>.addBooleanOption(<span class="string">&#x27;html5&#x27;</span>, <span class="keyword">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (JavaVersion.current().isJava8Compatible()) &#123;</span><br><span class="line">        tasks.withType(Javadoc) &#123;</span><br><span class="line">            <span class="comment">// disable the crazy super-strict doclint tool in Java 8</span></span><br><span class="line">            <span class="comment">// noinspection SpellCheckingInspection</span></span><br><span class="line">            <span class="keyword">options</span>.addStringOption(<span class="string">&#x27;Xdoclint:none&#x27;</span>, <span class="string">&#x27;-quiet&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//签名，发布时会先执行签名</span></span><br><span class="line"><span class="comment">//参考：https://docs.gradle.org/current/userguide/signing_plugin.html</span></span><br><span class="line">signing &#123;</span><br><span class="line">    sign publishing.publications.mavenJava</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自动发布到maven中央仓库插件的配置信息</span></span><br><span class="line"><span class="comment">//参考：https://github.com/Codearte/gradle-nexus-staging-plugin</span></span><br><span class="line">nexusStaging &#123;</span><br><span class="line">    <span class="comment">//oss-sonatype的登录用户名和密码</span></span><br><span class="line">    username nexusUser</span><br><span class="line">    password nexusPassword</span><br><span class="line">    <span class="comment">//重试次数，默认是60次</span></span><br><span class="line">    numberOfRetries <span class="number">10</span></span><br><span class="line">    <span class="comment">//每次重试的间隔时间，单位毫秒，默认2000，按照官网的说明，执行发布时有延迟，需要等待响应，所以建议调整间隔时间，可以减少重试次数，我这里间隔20秒，大约重试1~2次即可完成</span></span><br><span class="line">    delayBetweenRetriesInMillis <span class="number">20000</span></span><br><span class="line"><span class="comment">//    packageGroup = &quot;com.hanqunfeng&quot; //optional if packageGroup == project.getGroup()</span></span><br><span class="line"><span class="comment">//    stagingProfileId = &quot;yourStagingProfileId&quot; //when not defined will be got from server using &quot;packageGroup&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>gradle.properties</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#gradle -PnexusUser=developer -PnexusPassword=developer clean publish</span><br><span class="line"># 注意参数要放到命令前面</span><br><span class="line"># 这里替换为自己的oss-sonatype的用户名和密码</span><br><span class="line">nexusUser=developer</span><br><span class="line">nexusPassword=developer</span><br><span class="line"></span><br><span class="line">#Disable maven-metadata.xml SHA256 and SHA512 upload warnings to Nexus</span><br><span class="line">#参考：https://github.com/gradle/gradle/issues/12355</span><br><span class="line">systemProp.org.gradle.internal.publish.checksums.insecure=true</span><br><span class="line"></span><br><span class="line">#签名信息。或者执行命令时携带参数，如：gradle -Psigning.secretKeyRingFile=/SECRET.gpg -Psigning.password=xxxxxxxx -Psigning.keyId=xxxxxxxx clean publish</span><br><span class="line"># 这里替换自己的签名信息</span><br><span class="line">signing.keyId=xxxxxxxx</span><br><span class="line">signing.password=xxxxxxxx</span><br><span class="line">signing.secretKeyRingFile=/SECRET.gpg</span><br></pre></td></tr></table></figure></li><li><p>执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./gradlew clean publish closeAndReleaseRepository # 部署到maven中央仓库，参数都配置在gradle.properties中</span><br><span class="line">./gradlew -PnexusUser=developer -PnexusPassword=developer -Psigning.secretKeyRingFile=/SECRET.gpg -Psigning.password=xxxxxxxx -Psigning.keyId=xxxxxxxx clean publish closeAndReleaseRepository # 命令行携带参数</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过本文，你将知道如何将gradle构建的项目发布到Maven中央仓库&lt;/li&gt;
&lt;li&gt;maven构建请看&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more&quot;&gt;发布Jar到Maven中央仓库–mvn&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;前三个步骤与&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more&quot;&gt;发布Jar到Maven中央仓库–mvn&lt;/a&gt;相同，不在赘述。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="maven" scheme="https://blog.hanqunfeng.com/tags/maven/"/>
    
    <category term="gradle" scheme="https://blog.hanqunfeng.com/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>发布Jar到Maven中央仓库--mvn</title>
    <link href="https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/"/>
    <id>https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/</id>
    <published>2020-11-26T13:30:05.000Z</published>
    <updated>2020-11-30T02:06:38.358Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>通过本文，你将知道如何将maven构建的项目发布到Maven中央仓库</li><li>gradle构建请看<a href="https://blog.hanqunfeng.com/2020/11/27/gradle-depoly-maven-center-repository/">发布Jar到Maven中央仓库–gradle</a></li></ul><span id="more"></span><h2 id="一、将项目推送到远程仓库，如-Github或者Gitee"><a href="#一、将项目推送到远程仓库，如-Github或者Gitee" class="headerlink" title="一、将项目推送到远程仓库，如 Github或者Gitee"></a>一、将项目推送到远程仓库，如 Github或者Gitee</h2><h2 id="二、注册-Sonatype-账户–就是一个JIRA"><a href="#二、注册-Sonatype-账户–就是一个JIRA" class="headerlink" title="二、注册 Sonatype 账户–就是一个JIRA"></a>二、注册 Sonatype 账户–就是一个JIRA</h2><p>进入 <a href="https://issues.sonatype.org/secure/Dashboard.jspa">https://issues.sonatype.org/secure/Dashboard.jspa</a> 注册一个账号，邮箱要真实。</p><h2 id="三、登录-Sonatype-创建工单–每部署一个新项目就创建一个工单"><a href="#三、登录-Sonatype-创建工单–每部署一个新项目就创建一个工单" class="headerlink" title="三、登录 Sonatype 创建工单–每部署一个新项目就创建一个工单"></a>三、登录 Sonatype 创建工单–每部署一个新项目就创建一个工单</h2><ul><li>登录后点击“新建”创建工单，如果没有显示“新建”菜单，可以直接请求“<a href="https://issues.sonatype.org/secure/CreateIssue.jspa?issuetype=21&amp;pid=10134%E2%80%9D">https://issues.sonatype.org/secure/CreateIssue.jspa?issuetype=21&amp;pid=10134”</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Summary：工单摘要，随便给个名称</span><br><span class="line">Group Id：填写项目的Group Id</span><br><span class="line">Project URL：填写远程仓库的浏览器地址</span><br><span class="line">SCM url：填写下载项目的git地址</span><br></pre></td></tr></table></figure><ul><li><p>注意：Group Id：最好填写你拥有的域名，比如我的域名是hanqunfeng.com，这里就填写com.hanqunfeng，这样后面验证domain时会方便一些。我第一次就是不知道这个事情，所以随便填的hanqf.org。</p></li><li><p>创建好工单后会收到两封邮件：</p><ul><li><p>第一封，通知你创建工单成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hanqunfeng created OSSRH-62247:</span><br><span class="line">----------------------------------</span><br><span class="line"></span><br><span class="line">            Summary: reactive-redis-cache-annotation</span><br><span class="line">                Key: OSSRH-62247</span><br><span class="line">                URL: https://issues.sonatype.org/browse/OSSRH-62247</span><br><span class="line">            Project: Community Support - Open Source Project Repository Hosting</span><br><span class="line">        Issue Type: New Project</span><br><span class="line">            Reporter: hanqunfeng</span><br><span class="line">            Assignee: Joel Orlina</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reactive-redis-cache-annotation-spring-boot-starter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">This message was sent by Atlassian Jira</span><br><span class="line">(v8.5.7#805007)</span><br></pre></td></tr></table></figure></li><li><p>第二封邮件，要求你验证domain，两封邮件间隔大约5分钟。同时你在工单的注释中也能看到系统回复的同样的信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[ https://issues.sonatype.org/browse/OSSRH-62247?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]</span><br><span class="line"></span><br><span class="line">Central OSSRH updated OSSRH-62247:</span><br><span class="line">----------------------------------</span><br><span class="line">    Status: Waiting for Response  (was: Open)</span><br><span class="line"></span><br><span class="line">Do you own the domain hanqf.org? If so, please verify ownership via one of the following methods:</span><br><span class="line">* Add a TXT record to your DNS referencing this JIRA ticket: OSSRH-62247 (Fastest)</span><br><span class="line">* Setup a redirect to your Github page (if it does not already exist)</span><br><span class="line"></span><br><span class="line">If you do not own this domain, please read:</span><br><span class="line">http://central.sonatype.org/pages/choosing-your-coordinates.html</span><br><span class="line">You may also choose a groupId that reflects your project hosting, in this case, something like io.github.hanqunfeng or com.github.hanqunfeng</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; reactive-redis-cache-annotation</span><br><span class="line">&gt; -------------------------------</span><br><span class="line">&gt;</span><br><span class="line">&gt;                 Key: OSSRH-62247</span><br><span class="line">&gt;                 URL: https://issues.sonatype.org/browse/OSSRH-62247</span><br><span class="line">&gt;             Project: Community Support - Open Source Project Repository Hosting</span><br><span class="line">&gt;          Issue Type: New Project</span><br><span class="line">&gt;            Reporter: hanqunfeng</span><br><span class="line">&gt;            Assignee: Joel Orlina</span><br><span class="line">&gt;            Priority: Major</span><br><span class="line">&gt;</span><br><span class="line">&gt; reactive-redis-cache-annotation-spring-boot-starter</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>看邮件说明，如果是自己的域名，添加一条TXT record 是最快速的验证方式，刚好我有一个域名，于是修改了工单的Group Id，修改工单时需要填写注释，随便填就行。</p></li><li><p>然后去设置了DNS，一条TXT记录，key是工单号，我这里就是OSSRH-62247，值是工单地址，这里就是<a href="https://issues.sonatype.org/browse/OSSRH-62247%EF%BC%8C%E5%88%9B%E5%BB%BA%E5%A5%BD%E5%90%8E%EF%BC%8C%E5%9C%A8%E5%B7%A5%E5%8D%95%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%B8%80%E6%9D%A1%E6%B3%A8%E9%87%8A">https://issues.sonatype.org/browse/OSSRH-62247，创建好后，在工单中添加一条注释</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I have change the group Id to com.hanqunfeng,and I own the domain hanqunfeng.com,and I have added a dns record TXT.</span><br></pre></td></tr></table></figure><p>其它验证方式我并未尝试。</p></li><li><p>过一会你就会收到回复邮件，通知你验证完成，可以发布了，并且给出了发布地址。</p><ul><li>注意这里是先发布到<a href="https://oss.sonatype.org,而不是maven中央仓库的地址./">https://oss.sonatype.org，而不是maven中央仓库的地址。</a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[ https://issues.sonatype.org/browse/OSSRH-62247?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]</span><br><span class="line"></span><br><span class="line">Central OSSRH resolved OSSRH-62247.</span><br><span class="line">-----------------------------------</span><br><span class="line">    Resolution: Fixed</span><br><span class="line"></span><br><span class="line">com.hanqunfeng has been prepared, now user(s) hanqf can:</span><br><span class="line">* Deploy snapshot artifacts into repository https://oss.sonatype.org/content/repositories/snapshots</span><br><span class="line">* Deploy release artifacts into the staging repository https://oss.sonatype.org/service/local/staging/deploy/maven2</span><br><span class="line">* Release staged artifacts into repository &#x27;Releases&#x27;</span><br><span class="line"></span><br><span class="line">please comment on this ticket when you promoted your first release, thanks</span><br><span class="line"></span><br><span class="line">&gt; reactive-redis-cache-annotation</span><br><span class="line">&gt; -------------------------------</span><br><span class="line">&gt;</span><br><span class="line">&gt;                 Key: OSSRH-62247</span><br><span class="line">&gt;                 URL: https://issues.sonatype.org/browse/OSSRH-62247</span><br><span class="line">&gt;             Project: Community Support - Open Source Project Repository Hosting</span><br><span class="line">&gt;          Issue Type: New Project</span><br><span class="line">&gt;            Reporter: hanqunfeng</span><br><span class="line">&gt;            Assignee: Joel Orlina</span><br><span class="line">&gt;            Priority: Major</span><br><span class="line">&gt;</span><br><span class="line">&gt; reactive-redis-cache-annotation-spring-boot-starter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">This message was sent by Atlassian Jira</span><br><span class="line">(v8.5.7#805007)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="四、发布"><a href="#四、发布" class="headerlink" title="四、发布"></a>四、发布</h2><ul><li><p>1.准备签名</p><ul><li>可以使用工具创建密钥对<br>需要下载一个签名工具，我是mac电脑，下载的是<a href="https://gpgtools.org/">https://gpgtools.org</a>。<br>安装后点击新建，按照提示创建一个密钥对即可，注意高级选项里有个过期时间，默认是3年。创建好后会主动提示你是否将公钥发布到key server，点击Upload Public key即可。也可以在创建后的证书列表页面邮件选择证书–&gt;Send Public Key To Key Server。</li></ul><p>  导出证书时，勾选密码并设置密码就是私钥和公钥证书，不勾选密码就是公钥，看生成文件的名称就可以，公开就是公钥，私密就是私钥，格式都是asc，其实就是字符串，可以用记事本打开查看。</p><p>  如果windows系统，可以下载<a href="https://www.gpg4win.org/">https://www.gpg4win.org/</a> ，使用方式差不多，最后点击“将公钥上传的目录服务”。</p><p>  公钥发布到key server后要稍微等一会，大约10分钟吧，因为key server有多个，同步需要一些时间。<br>  记住你创建密钥对时的密码，发布项目时要使用。</p><ul><li>也可以使用命令行创建密钥对，版本[gpg (GnuPG/MacGPG2) 2.2.24]  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建密钥对，按提示输入用户名称和邮箱地址</span></span><br><span class="line">gpg --generate-key</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出密钥，hanqunfeng就是创建密钥对是的用户名，此处也可以使用邮箱</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 结果中第二行一长串的后8位就是keyId，比如：30FF8D58，gradle构建时会用到</span></span><br><span class="line">gpg --list-keys hanqunfeng</span><br><span class="line"><span class="meta">#</span><span class="bash"> 也可以直接通过id查询</span></span><br><span class="line">gpg --list-keys 30FF8D58</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 上传公钥到server key，默认上传到hkps://keys.openpgp.org，但是提示上传失败</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 看到网上的示例可以通过--keyserver指定上传的服务器地址，但是我这个版本[gpg (GnuPG/MacGPG2) 2.2.24]没有这个参数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用 https://gpgtools.org 上传公钥就会成功</span></span><br><span class="line">gpg --send-keys 30FF8D58</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看指纹</span></span><br><span class="line">gpg --fingerprint 30FF8D58</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除私钥，这里也可以使用用户名称或者邮箱，如果唯一的话</span></span><br><span class="line">gpg --delete-secret-keys 30FF8D58</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除公钥</span></span><br><span class="line">gpg --delete-keys 30FF8D58</span><br></pre></td></tr></table></figure></li></ul></li><li><p>2.settings.xml<br>配置 maven 的 settings.xml 文件，设置一个 server，里面添加 Sonatype 的账号和密码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">    [...]</span><br><span class="line">    &lt;servers&gt;</span><br><span class="line">       [...]</span><br><span class="line">       &lt;server&gt;</span><br><span class="line">          &lt;id&gt;ossrh&lt;/id&gt;</span><br><span class="line">          &lt;username&gt;Sonatype账号&lt;/username&gt;</span><br><span class="line">          &lt;password&gt;Sonatype密码&lt;/password&gt;</span><br><span class="line">       &lt;/server&gt;</span><br><span class="line">    &lt;/servers&gt;</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></li><li><p>3.pom.xml，重点是后面几个plugin<br>这里重点说一下“nexus-staging-maven-plugin”这个插件，该插件会将我们发布到<a href="https://oss.sonatype.org的jar自动发布到maven中央仓库,如果没有这个插件,我们需要登录https//oss.sonatype.org%EF%BC%8C%E7%84%B6%E5%90%8E%E6%89%8B%E5%B7%A5%E7%82%B9%E5%87%BBStaging">https://oss.sonatype.org的jar自动发布到maven中央仓库，如果没有这个插件，我们需要登录https://oss.sonatype.org，然后手工点击Staging</a> Repositories ，找到你发布的包（GroupId开头的），然后点击close，再点击release。有说这种方式容易失败（我没有测试），推荐使用插件自动发布。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.hanqunfeng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>reactive-redis-cache-annotation-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>redis-cache-annotation-reactive<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>redis cache function annotation for webflux<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://blog.hanqunfeng.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>The Apache License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>hanqf<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>hanqunfeng<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">email</span>&gt;</span>qunfeng_han@126.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">connection</span>&gt;</span>scm:git:https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git<span class="tag">&lt;/<span class="name">connection</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developerConnection</span>&gt;</span>scm:git:https://github.com:hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git<span class="tag">&lt;/<span class="name">developerConnection</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">maven.compiler.encoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.projectreactor<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>reactor-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-source<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--生成源代码的jar --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-javadoc<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--生成javadoc的jar --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--生成javadoc的html --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>javadoc<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--不显示javadoc警告--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">additionalOptions</span>&gt;</span>-Xdoclint:none<span class="tag">&lt;/<span class="name">additionalOptions</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">additionalJOption</span>&gt;</span>-Xdoclint:none<span class="tag">&lt;/<span class="name">additionalJOption</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- gpg plugin,用于签名认证 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-gpg-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>sign-artifacts<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>sign<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--staging puglin,用于自动执行发布阶段(免手动)--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.sonatype.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nexus-staging-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">serverId</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">serverId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">nexusUrl</span>&gt;</span>https://oss.sonatype.org/<span class="tag">&lt;/<span class="name">nexusUrl</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">autoReleaseAfterClose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">autoReleaseAfterClose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- release plugin,用于发布到release仓库部署插件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-release-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/content/repositories/snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/service/local/staging/deploy/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>4.执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package # 完成打包和测试</span><br><span class="line">mvn clean verify  # 完成源码打包和javadoc打包，同时完成签名</span><br><span class="line">mvn clean deploy  # 完成本地部署和maven中央仓库部署</span><br></pre></td></tr></table></figure><p>  执行过程中会提示你输入创建密钥对时的密码，</p><p>  如果不想人工参与，也可以使用如下方式（参考：<a href="http://maven.apache.org/plugins/maven-gpg-plugin/usage.html%EF%BC%89">http://maven.apache.org/plugins/maven-gpg-plugin/usage.html）</a></p><ul><li><p>a.在执行命令时指定密码：</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean deploy -Dgpg.passphrase=thephrase</span><br></pre></td></tr></table></figure></li><li><p>b.setting.xml中创建一个server</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">[...]</span><br><span class="line">&lt;servers&gt;</span><br><span class="line">    [...]</span><br><span class="line">    &lt;server&gt;</span><br><span class="line">    &lt;id&gt;gpg.passphrase&lt;/id&gt;</span><br><span class="line">    &lt;passphrase&gt;clear or encrypted text&lt;/passphrase&gt;</span><br><span class="line">    &lt;/server&gt;</span><br><span class="line">&lt;/servers&gt;</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>5.执行成功后即说明发布到maven中央仓库成功了，过一会就会收到邮件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[ https://issues.sonatype.org/browse/OSSRH-62247?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]</span><br><span class="line"></span><br><span class="line">Central OSSRH 更新了 OSSRH-62247:</span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">Central sync is activated for com.hanqunfeng. After you successfully release, your component will be published to Central, typically within 10 minutes, though updates to search.maven.org can take up to two hours.</span><br><span class="line"></span><br><span class="line">&gt; reactive-redis-cache-annotation</span><br><span class="line">&gt; -------------------------------</span><br><span class="line">&gt;</span><br><span class="line">&gt;                 关键字: OSSRH-62247</span><br><span class="line">&gt;                 URL: https://issues.sonatype.org/browse/OSSRH-62247</span><br><span class="line">&gt;                  项目: Community Support - Open Source Project Repository Hosting</span><br><span class="line">&gt;                问题类型: New Project</span><br><span class="line">&gt;                 报告人: hanqunfeng</span><br><span class="line">&gt;                 经办人: Joel Orlina</span><br><span class="line">&gt;                 优先级: 重要</span><br><span class="line">&gt;</span><br><span class="line">&gt; reactive-redis-cache-annotation-spring-boot-starter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">这条信息是由Atlassian Jira发送的</span><br><span class="line">(v8.5.7#805007)</span><br></pre></td></tr></table></figure><p>  提示你，大约10分钟后你就可以将依赖添加到项目中进行下载了，不过要通过search.maven.org检索到需要等待两个小时，毕竟更新索引也是需要时间的。<br>  另外，如果你确认发布是成功的，记得要回到工单添加个注释，如</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I&#x27;ve released Releases successfully.Thank you!</span><br></pre></td></tr></table></figure></li></ul><ul><li>6.更新部署<br>修改pom.xml中的版本号，重新执行mvn clean deploy即可。此时不会再收到sonatype发的邮件，依旧等待大约10分钟后你就可以将依赖添加到项目中进行下载了，同样search.maven.org检索到需要等待两个小时。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过本文，你将知道如何将maven构建的项目发布到Maven中央仓库&lt;/li&gt;
&lt;li&gt;gradle构建请看&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/27/gradle-depoly-maven-center-repository/&quot;&gt;发布Jar到Maven中央仓库–gradle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="maven" scheme="https://blog.hanqunfeng.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-WebFlux-Redis缓存注解</title>
    <link href="https://blog.hanqunfeng.com/2020/11/22/springboot-webflux-redis-annotation/"/>
    <id>https://blog.hanqunfeng.com/2020/11/22/springboot-webflux-redis-annotation/</id>
    <published>2020-11-22T13:30:05.000Z</published>
    <updated>2021-05-27T07:43:40.132Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>通过本文，你将知道如何在WebFlux项目中通过redis注解缓存方法的返回值;</li><li>本项目基于springboot:2.4.0，jdk1.8，并使用Maven构建;</li><li>代码地址:<a href="https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter">https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter</a></li></ul><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在使用WebFlux时发现，SpringBoot提供的@Cacheable，@CachePut，@CacheEvict和@Caching注解不支持响应式方法，SpringBoot官方也没有提供响应式方法的缓存注解，看到网上的一些解决方案都是直接在方法代码中加入缓存数据的代码逻辑，这样虽然可以解决问题，但是代码侵入并不优雅，于是萌生自己写一个基于redis的响应式方法缓存注解的想法，本项目参考SpringBoot提供的@Cacheable，@CachePut，@CacheEvict和@Caching注解声明，但是只是实现了一些基本功能，可以满足绝大部分使用场景的要求，因为SpringBoot早晚会给出官方解决方案，在此之前，不妨一试。</p><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><ul><li><p>本项目已经发布到maven中央仓库，直接在项目中添加依赖即可。</p></li><li><p>本项目虽然基于springboot:2.4.0构建，但实际上springboot2.0+都可以使用。</p></li><li><p>maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.hanqunfeng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>reactive-redis-cache-annotation-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>gradle依赖</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.hanqunfeng:reactive-redis-cache-annotation-spring-boot-starter:1.1.0&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>此时项目中可能还要添加其它依赖，以gradle举例</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webflux，非必须，主要是面向响应式编程的，所以使用springboot大概率会使用webflux</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-webflux&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Spring Boot Redis 依赖，或者spring-boot-starter-data-redis-reactive，任选其一即可，注意要在配置文件中加入redis的配置</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-data-redis&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//redis lettuce连接池依赖，也可以使用jedis连接池，非必须，正式环境建议开启连接池</span></span><br><span class="line">implementation <span class="string">&#x27;org.apache.commons:commons-pool2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//aop 面向方面编程 支持@Aspect，非必须</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-aop&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>方法返回值必须是Mono或者Flux类型，使用方式与springboot提供的Cacheable等注解类似</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 缓存 cacheName和key支持EL表达式，实际key的名称是&quot;cacheName_key&quot;</span></span><br><span class="line"><span class="comment">* 缓存结果</span></span><br><span class="line"><span class="comment">* key:sysuser_find_lisi</span></span><br><span class="line"><span class="comment">* value:</span></span><br><span class="line"><span class="comment">* [</span></span><br><span class="line"><span class="comment">* &quot;com.example.model.SysUser&quot;</span></span><br><span class="line"><span class="comment">* &#123;</span></span><br><span class="line"><span class="comment">*    id:&quot;5c74a4e4-c4f2-4570-8735-761d7a570d36&quot;</span></span><br><span class="line"><span class="comment">*    username:&quot;lisi&quot;</span></span><br><span class="line"><span class="comment">*    password:&quot;$2a$10$PXoGXLwg05.5YO.QtZa46ONypBmiK59yfefvO1OGO8kYFwzOB.Os6&quot;</span></span><br><span class="line"><span class="comment">*    enable:true</span></span><br><span class="line"><span class="comment">* &#125;</span></span><br><span class="line"><span class="comment">* ]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ReactiveRedisCacheable(cacheName = &quot;sysuser&quot;, key = &quot;&#x27;find_&#x27; + #username&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Mono&lt;SysUser&gt; <span class="title">findUserByUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sysUserRepository.findByUsername(username);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ReactiveRedisCacheable(cacheName = &quot;sysuser&quot;, key = &quot;all&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Flux&lt;SysUser&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sysUserRepository.findAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 删除缓存，allEntries = true 表示删除全部以&quot;cacheName_&quot;开头的缓存</span></span><br><span class="line"><span class="comment">* allEntries 默认false，此时需要指定key的值，表示删除指定的&quot;cacheName_key&quot;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ReactiveRedisCacheEvict(cacheName = &quot;sysuser&quot;, allEntries = true)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Mono&lt;SysUser&gt; <span class="title">add</span><span class="params">(SysUser sysUser)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sysUserRepository.addSysUser(sysUser.getId(), sysUser.getUsername(), sysUser.getPassword(), sysUser.getEnable()).flatMap(data -&gt; sysUserRepository.findById(sysUser.getId()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 组合注解，用法与<span class="doctag">@Caching</span>类似</span></span><br><span class="line"><span class="comment">* 规则：</span></span><br><span class="line"><span class="comment">* 1.cacheables不能与cacheEvicts或者cachePuts同时存在，因为后者一定会执行方法主体，达不到调用缓存的目的，所以当cacheables存在时，后者即便指定也不执行</span></span><br><span class="line"><span class="comment">* 2.先执行cacheEvicts，再执行cachePuts</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ReactiveRedisCaching(</span></span><br><span class="line"><span class="meta">        evict = &#123;@ReactiveRedisCacheEvict(cacheName = &quot;sysuser&quot;, key = &quot;all&quot;)&#125;,</span></span><br><span class="line"><span class="meta">        put = &#123;@ReactiveRedisCachePut(cacheName = &quot;sysuser&quot;, key = &quot;&#x27;find_&#x27; + #sysUser.username&quot;)&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Mono&lt;SysUser&gt; <span class="title">update</span><span class="params">(SysUser sysUser)</span> </span>&#123;</span><br><span class="line">    Mono&lt;SysUser&gt; save = sysUserRepository.save(sysUser);</span><br><span class="line">    <span class="keyword">return</span> save;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 删除指定的&quot;cacheName_key&quot;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ReactiveRedisCacheEvict(cacheName = &quot;sysuser&quot;, key=&quot;&#x27;find_&#x27; + #username&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Mono&lt;Boolean&gt; <span class="title">deleteByUserName</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sysUserRepository.deleteByUsername(username);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="RedisTemplate"><a href="#RedisTemplate" class="headerlink" title="RedisTemplate"></a>RedisTemplate</h3></li><li><p>如果使用时没有创建RedisTemplate，本项目中提供了一个默认的RedisTemplate，基于jackson序列化，支持jdk8的LocalDate和LocalDateTime</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(value = RedisTemplate.class)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    log.debug(<span class="string">&quot;ReactiveRedisConfig RedisTemplate&quot;</span>);</span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">    <span class="comment">//objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span></span><br><span class="line">    objectMapper.activateDefaultTyping(objectMapper.getPolymorphicTypeValidator(), ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.WRAPPER_ARRAY);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//LocalDateTime系列序列化和反序列化模块，继承自jsr310，我们在这里修改了日期格式</span></span><br><span class="line">    JavaTimeModule javaTimeModule = <span class="keyword">new</span> JavaTimeModule();</span><br><span class="line">    <span class="comment">//序列化</span></span><br><span class="line">    javaTimeModule.addSerializer(LocalDateTime.class, <span class="keyword">new</span> LocalDateTimeSerializer(</span><br><span class="line">            DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)));</span><br><span class="line">    javaTimeModule.addSerializer(LocalDate.class,</span><br><span class="line">            <span class="keyword">new</span> LocalDateSerializer(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)));</span><br><span class="line">    javaTimeModule.addSerializer(LocalTime.class,</span><br><span class="line">            <span class="keyword">new</span> LocalTimeSerializer(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));</span><br><span class="line">    <span class="comment">//反序列化</span></span><br><span class="line">    javaTimeModule.addDeserializer(LocalDateTime.class, <span class="keyword">new</span> LocalDateTimeDeserializer(</span><br><span class="line">            DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)));</span><br><span class="line">    javaTimeModule.addDeserializer(LocalDate.class,</span><br><span class="line">            <span class="keyword">new</span> LocalDateDeserializer(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)));</span><br><span class="line">    javaTimeModule.addDeserializer(LocalTime.class,</span><br><span class="line">            <span class="keyword">new</span> LocalTimeDeserializer(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册模块</span></span><br><span class="line">    objectMapper.registerModule(javaTimeModule);</span><br><span class="line"></span><br><span class="line">    Jackson2JsonRedisSerializer&lt;Object&gt; serializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;&gt;(Object.class);</span><br><span class="line">    serializer.setObjectMapper(objectMapper);</span><br><span class="line"></span><br><span class="line">    RedisTemplate&lt;String, Object&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">    redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">    redisTemplate.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">    redisTemplate.setValueSerializer(serializer);</span><br><span class="line">    redisTemplate.setHashKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">    redisTemplate.setHashValueSerializer(serializer);</span><br><span class="line">    redisTemplate.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> redisTemplate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h1 id="以下为源码说明"><a href="#以下为源码说明" class="headerlink" title="以下为源码说明"></a>以下为源码说明</h1><h2 id="源码依赖"><a href="#源码依赖" class="headerlink" title="源码依赖"></a>源码依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.projectreactor<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>reactor-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自定义Redis缓存相关注解"><a href="#自定义Redis缓存相关注解" class="headerlink" title="自定义Redis缓存相关注解"></a>自定义Redis缓存相关注解</h2><ul><li>只支持方法返回类型为Mono或者Flux</li><li>其它返回类型时请使用springboot提供的Cacheable，CachePut，CacheEvict和Caching</li><li>使用方式与springboot提供的Cacheable，CachePut，CacheEvict和Caching类似，具体看本文上面的示例</li></ul><h3 id="ReactiveRedisCacheable"><a href="#ReactiveRedisCacheable" class="headerlink" title="ReactiveRedisCacheable"></a>ReactiveRedisCacheable</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;redis方法缓存注解&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 18:28.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ReactiveRedisCacheable &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key，key为cacheName+&quot;_&quot;+key</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function">String <span class="title">key</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key分组，会做为缓存key的前缀+&quot;_&quot;</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function">String <span class="title">cacheName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存过期时间，单位秒，默认24小时</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="title">timeout</span><span class="params">()</span> <span class="keyword">default</span> 24 * 3600L</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ReactiveRedisCacheEvict"><a href="#ReactiveRedisCacheEvict" class="headerlink" title="ReactiveRedisCacheEvict"></a>ReactiveRedisCacheEvict</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;redis清除缓存注解&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 22:26.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ReactiveRedisCacheEvict &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key，如果cacheName不为空，则key为cacheName+&quot;_&quot;+key</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">key</span><span class="params">()</span> <span class="keyword">default</span> &quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key分组，会做为缓存key的前缀+&quot;_&quot;</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">cacheName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否删除cacheName下全部缓存数据，</span></span><br><span class="line"><span class="comment">     * true时cacheName不能为空，此时即便指定了key值，也会删除cacheName下全部缓存</span></span><br><span class="line"><span class="comment">     * false时key值不能为空</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">allEntries</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调用清除缓存的时机，true:执行方法前，false:执行方法后</span></span><br><span class="line"><span class="comment">     * 如果是false，则方法执行过程中发生异常，则不会清除缓存</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">beforeInvocation</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ReactiveRedisCachePut"><a href="#ReactiveRedisCachePut" class="headerlink" title="ReactiveRedisCachePut"></a>ReactiveRedisCachePut</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;执行完方法更新缓存&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 23:15.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ReactiveRedisCachePut &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key，key为cacheName+&quot;_&quot;+key</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">key</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key分组，会做为缓存key的前缀+&quot;_&quot;</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">cacheName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存过期时间，单位秒，默认24小时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="title">timeout</span><span class="params">()</span> <span class="keyword">default</span> 24 * 3600L</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ReactiveRedisCaching"><a href="#ReactiveRedisCaching" class="headerlink" title="ReactiveRedisCaching"></a>ReactiveRedisCaching</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;组合&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 23:24.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ReactiveRedisCaching &#123;</span><br><span class="line"></span><br><span class="line">    ReactiveRedisCacheable[] cacheable() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    ReactiveRedisCachePut[] put() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    ReactiveRedisCacheEvict[] evict() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="AOP–ReactiveRedisCacheAspect"><a href="#AOP–ReactiveRedisCacheAspect" class="headerlink" title="AOP–ReactiveRedisCacheAspect"></a>AOP–ReactiveRedisCacheAspect</h2><ul><li>支持方法返回类型为Mono或者Flux</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Flux;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicBoolean;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;redis缓存aop&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 16:16.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">//标识是一个Aspect代理类</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="comment">//如果有多个切面拦截相同的切点，可以用@Order指定执行顺序</span></span><br><span class="line"><span class="comment">//@Order(1)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReactiveRedisCacheAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.hanqunfeng.reactive.redis.cache.aop.ReactiveRedisCacheable)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cacheablePointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.hanqunfeng.reactive.redis.cache.aop.ReactiveRedisCacheEvict)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cacheEvictPointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.hanqunfeng.reactive.redis.cache.aop.ReactiveRedisCachePut)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cachePutPointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.hanqunfeng.reactive.redis.cache.aop.ReactiveRedisCaching)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cachingPointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//环绕通知,一般不建议使用，可以通过@Before和@AfterReturning实现</span></span><br><span class="line">    <span class="comment">//但是响应式方法只能通过环绕通知实现aop，因为其它通知会导致不再同一个线程执行</span></span><br><span class="line">    <span class="meta">@Around(&quot;cacheablePointCut()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">cacheableAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisCacheAspect cacheableAround....&quot;</span>);</span><br><span class="line"></span><br><span class="line">        MethodSignature methodSignature = (MethodSignature) proceedingJoinPoint.getSignature();</span><br><span class="line">        Method method = methodSignature.getMethod();</span><br><span class="line">        String returnTypeName = method.getReturnType().getSimpleName();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ReactiveRedisCacheable annotation = method.getAnnotation(ReactiveRedisCacheable.class);</span><br><span class="line">        String cacheName = annotation.cacheName();</span><br><span class="line">        String key = annotation.key();</span><br><span class="line">        <span class="keyword">long</span> timeout = annotation.timeout();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//转换EL表达式</span></span><br><span class="line">        cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">        key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">        String redis_key = cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> hasKey = redisTemplate.hasKey(redis_key);</span><br><span class="line">        <span class="keyword">if</span> (hasKey) &#123;</span><br><span class="line">            Object o = redisTemplate.opsForValue().get(redis_key);</span><br><span class="line">            <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> Flux.fromIterable((List) o);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> Mono.just(o);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//实际执行的方法</span></span><br><span class="line">            Object proceed = proceedingJoinPoint.proceed();</span><br><span class="line">            <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ((Flux) proceed).collectList().doOnNext(list -&gt; redisTemplate.opsForValue().set(redis_key, list, timeout, TimeUnit.SECONDS)).flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ((Mono) proceed).doOnNext(obj -&gt; redisTemplate.opsForValue().set(redis_key, obj, timeout, TimeUnit.SECONDS));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> proceed;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;cacheEvictPointCut()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">cacheEvictAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisCacheAspect cacheEvictAround....&quot;</span>);</span><br><span class="line"></span><br><span class="line">        MethodSignature methodSignature = (MethodSignature) proceedingJoinPoint.getSignature();</span><br><span class="line">        Method method = methodSignature.getMethod();</span><br><span class="line">        String returnTypeName = method.getReturnType().getSimpleName();</span><br><span class="line"></span><br><span class="line">        ReactiveRedisCacheEvict annotation = method.getAnnotation(ReactiveRedisCacheEvict.class);</span><br><span class="line">        String cacheName = annotation.cacheName();</span><br><span class="line">        String key = annotation.key();</span><br><span class="line">        <span class="keyword">boolean</span> allEntries = annotation.allEntries();</span><br><span class="line">        <span class="keyword">boolean</span> beforeInvocation = annotation.beforeInvocation();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//转换EL表达式</span></span><br><span class="line">        cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">        key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行方法前清除缓存</span></span><br><span class="line">        <span class="keyword">if</span> (beforeInvocation) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//清除全部缓存</span></span><br><span class="line">            deleteRedisCache(cacheName, key, allEntries);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//实际执行的方法</span></span><br><span class="line">            Object proceed = proceedingJoinPoint.proceed();</span><br><span class="line">            <span class="keyword">return</span> proceed;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="comment">//成功执行方法后清除缓存</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//实际执行的方法</span></span><br><span class="line">            Object proceed = proceedingJoinPoint.proceed();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> String cacheNameTemp = cacheName;</span><br><span class="line">            <span class="keyword">final</span> String keyTemp = key;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ((Flux) proceed).collectList().doOnNext(list -&gt; &#123;</span><br><span class="line">                    <span class="comment">//清除全部缓存</span></span><br><span class="line">                    deleteRedisCache(cacheNameTemp, keyTemp, allEntries);</span><br><span class="line">                &#125;).flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ((Mono) proceed).doOnNext(obj -&gt; &#123;</span><br><span class="line">                    <span class="comment">//清除全部缓存</span></span><br><span class="line">                    deleteRedisCache(cacheNameTemp, keyTemp, allEntries);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> proceed;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;cachePutPointCut()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">cachePutAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisCacheAspect cachePutAround....&quot;</span>);</span><br><span class="line"></span><br><span class="line">        MethodSignature methodSignature = (MethodSignature) proceedingJoinPoint.getSignature();</span><br><span class="line">        Method method = methodSignature.getMethod();</span><br><span class="line">        String returnTypeName = method.getReturnType().getSimpleName();</span><br><span class="line"></span><br><span class="line">        ReactiveRedisCachePut annotation = method.getAnnotation(ReactiveRedisCachePut.class);</span><br><span class="line">        String cacheName = annotation.cacheName();</span><br><span class="line">        String key = annotation.key();</span><br><span class="line">        <span class="keyword">long</span> timeout = annotation.timeout();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//转换EL表达式</span></span><br><span class="line">        cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">        key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">        String redis_key = cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> hasKey = redisTemplate.hasKey(redis_key);</span><br><span class="line">        <span class="keyword">if</span> (hasKey) &#123;</span><br><span class="line">            redisTemplate.delete(redis_key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//实际执行的方法</span></span><br><span class="line">        Object proceed = proceedingJoinPoint.proceed();</span><br><span class="line">        <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> ((Flux) proceed).collectList().doOnNext(list -&gt; redisTemplate.opsForValue().set(redis_key, list, timeout, TimeUnit.SECONDS)).flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> ((Mono) proceed).doOnNext(obj -&gt; redisTemplate.opsForValue().set(redis_key, obj, timeout, TimeUnit.SECONDS));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> proceed;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;cachingPointCut()&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">cachingAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisCacheAspect cachingAround....&quot;</span>);</span><br><span class="line"></span><br><span class="line">        MethodSignature methodSignature = (MethodSignature) proceedingJoinPoint.getSignature();</span><br><span class="line">        Method method = methodSignature.getMethod();</span><br><span class="line">        String returnTypeName = method.getReturnType().getSimpleName();</span><br><span class="line"></span><br><span class="line">        ReactiveRedisCaching annotation = method.getAnnotation(ReactiveRedisCaching.class);</span><br><span class="line"></span><br><span class="line">        ReactiveRedisCacheEvict[] cacheEvicts = annotation.evict();</span><br><span class="line">        ReactiveRedisCachePut[] cachePuts = annotation.put();</span><br><span class="line">        ReactiveRedisCacheable[] cacheables = annotation.cacheable();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//规则：</span></span><br><span class="line">        <span class="comment">//1.cacheables不能与cacheEvicts或者cachePuts同时存在，因为后者一定会执行方法主体，达不到调用缓存的目的，所以当cacheables存在时，后者即便指定也不执行</span></span><br><span class="line">        <span class="comment">//2.先执行cacheEvicts，再执行cachePuts</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cacheables.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            Map&lt;String, Long&gt; key_map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            List&lt;String&gt; key_list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            Arrays.stream(cacheables).forEach(cacheable -&gt; &#123;</span><br><span class="line">                String cacheName = cacheable.cacheName();</span><br><span class="line">                String key = cacheable.key();</span><br><span class="line">                <span class="keyword">long</span> timeout = cacheable.timeout();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//转换EL表达式</span></span><br><span class="line">                cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">                key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">                String redis_key = cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line"></span><br><span class="line">                key_map.put(redis_key, timeout);</span><br><span class="line">                key_list.add(redis_key);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            AtomicBoolean isAllKeyHas = <span class="keyword">new</span> AtomicBoolean(<span class="keyword">true</span>);</span><br><span class="line">            key_list.forEach(key -&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (!redisTemplate.hasKey(key)) &#123;</span><br><span class="line">                    isAllKeyHas.set(<span class="keyword">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//全部key都有值，则直接返回缓存</span></span><br><span class="line">            <span class="keyword">if</span> (isAllKeyHas.get()) &#123;</span><br><span class="line">                Object o = redisTemplate.opsForValue().get(key_list.get(<span class="number">0</span>));</span><br><span class="line">                <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Flux.fromIterable((List) o);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Mono.just(o);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> o;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//实际执行的方法</span></span><br><span class="line">                Object proceed = proceedingJoinPoint.proceed();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Flux) proceed).collectList()</span><br><span class="line">                            .doOnNext(list -&gt; key_map.forEach((key, val) -&gt; redisTemplate.opsForValue().set(key, list, val, TimeUnit.SECONDS)))</span><br><span class="line">                            .flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Mono) proceed)</span><br><span class="line">                            .doOnNext(obj -&gt; key_map.forEach((key, val) -&gt; redisTemplate.opsForValue().set(key, obj, val, TimeUnit.SECONDS)));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> proceed;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Map&lt;String, Boolean&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            <span class="keyword">if</span> (cacheEvicts.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                Arrays.stream(cacheEvicts).forEach(cacheEvict -&gt; &#123;</span><br><span class="line">                    String cacheName = cacheEvict.cacheName();</span><br><span class="line">                    String key = cacheEvict.key();</span><br><span class="line">                    <span class="keyword">boolean</span> allEntries = cacheEvict.allEntries();</span><br><span class="line">                    <span class="keyword">boolean</span> beforeInvocation = cacheEvict.beforeInvocation();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//转换EL表达式</span></span><br><span class="line">                    cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">                    key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (beforeInvocation) &#123; <span class="comment">//执行方法前清除缓存</span></span><br><span class="line">                        <span class="comment">//清除全部缓存</span></span><br><span class="line">                        deleteRedisCache(cacheName, key, allEntries);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123; <span class="comment">//成功执行方法后清除缓存，先保存到map中</span></span><br><span class="line">                        <span class="comment">//清除全部缓存</span></span><br><span class="line">                        <span class="keyword">if</span> (allEntries) &#123;</span><br><span class="line">                            map.put(cacheName, <span class="keyword">true</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            map.put(cacheName + <span class="string">&quot;_&quot;</span> + key, <span class="keyword">false</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//实际执行的方法</span></span><br><span class="line">            Object proceed = proceedingJoinPoint.proceed();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cachePuts.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                Map&lt;String, Long&gt; key_map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">                Arrays.stream(cachePuts).forEach(cachePut -&gt; &#123;</span><br><span class="line">                    String cacheName = cachePut.cacheName();</span><br><span class="line">                    String key = cachePut.key();</span><br><span class="line">                    <span class="keyword">long</span> timeout = cachePut.timeout();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//转换EL表达式</span></span><br><span class="line">                    cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">                    key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">                    String redis_key = cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line"></span><br><span class="line">                    key_map.put(redis_key, timeout);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">boolean</span> hasKey = redisTemplate.hasKey(redis_key);</span><br><span class="line">                    <span class="keyword">if</span> (hasKey) &#123;</span><br><span class="line">                        redisTemplate.delete(redis_key);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Flux) proceed).collectList()</span><br><span class="line">                            .doOnNext(list -&gt; &#123;</span><br><span class="line">                                <span class="comment">//执行方法后清除缓存</span></span><br><span class="line">                                <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    map.forEach((key, val) -&gt; &#123;</span><br><span class="line">                                        deleteRedisCache(key, val);</span><br><span class="line">                                    &#125;);</span><br><span class="line">                                &#125;</span><br><span class="line">                                key_map.forEach((key, val) -&gt; redisTemplate.opsForValue().set(key, list, val, TimeUnit.SECONDS));</span><br><span class="line">                            &#125;)</span><br><span class="line">                            .flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Mono) proceed)</span><br><span class="line">                            .doOnNext(obj -&gt; &#123;</span><br><span class="line">                                <span class="comment">//执行方法后清除缓存</span></span><br><span class="line">                                <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    map.forEach((key, val) -&gt; &#123;</span><br><span class="line">                                        deleteRedisCache(key, val);</span><br><span class="line">                                    &#125;);</span><br><span class="line">                                &#125;</span><br><span class="line">                                key_map.forEach((key, val) -&gt; redisTemplate.opsForValue().set(key, obj, val, TimeUnit.SECONDS));</span><br><span class="line">                            &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> proceed;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Flux) proceed).collectList().doOnNext(list -&gt; &#123;</span><br><span class="line">                        <span class="comment">//执行方法后清除缓存</span></span><br><span class="line">                        <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            map.forEach((key, val) -&gt; &#123;</span><br><span class="line">                                deleteRedisCache(key, val);</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;).flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Mono) proceed).doOnNext(obj -&gt; &#123;</span><br><span class="line">                        <span class="comment">//执行方法后清除缓存</span></span><br><span class="line">                        <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            map.forEach((key, val) -&gt; &#123;</span><br><span class="line">                                deleteRedisCache(key, val);</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> proceed;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">deleteRedisCache</span><span class="params">(String key, <span class="keyword">boolean</span> clearAll)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (clearAll) &#123;</span><br><span class="line">            Set keys = redisTemplate.keys(key + <span class="string">&quot;_*&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!keys.isEmpty()) &#123;</span><br><span class="line">                redisTemplate.delete(keys);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (redisTemplate.hasKey(key)) &#123;</span><br><span class="line">                redisTemplate.delete(key);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">deleteRedisCache</span><span class="params">(String cacheName, String key, <span class="keyword">boolean</span> clearAll)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String redis_key = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (clearAll) &#123;</span><br><span class="line">            redis_key = cacheName + <span class="string">&quot;_*&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            redis_key = cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        deleteRedisCache(redis_key, clearAll);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注解属性支持EL表达式的工具类"><a href="#注解属性支持EL表达式的工具类" class="headerlink" title="注解属性支持EL表达式的工具类"></a>注解属性支持EL表达式的工具类</h2><h3 id="AspectSupportUtils"><a href="#AspectSupportUtils" class="headerlink" title="AspectSupportUtils"></a>AspectSupportUtils</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.interceptor.SimpleKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.expression.AnnotatedElementKey;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.EvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AspectSupportUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ExpressionEvaluator evaluator = <span class="keyword">new</span> ExpressionEvaluator();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getKeyValue</span><span class="params">(JoinPoint joinPoint, String keyExpression)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(keyExpression.contains(<span class="string">&quot;#&quot;</span>) || keyExpression.contains(<span class="string">&quot;&#x27;&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> getKeyValue(joinPoint.getTarget(), joinPoint.getArgs(), joinPoint.getTarget().getClass(),</span><br><span class="line">                    ((MethodSignature) joinPoint.getSignature()).getMethod(), keyExpression);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> keyExpression;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title">getKeyValue</span><span class="params">(Object object, Object[] args, Class&lt;?&gt; clazz, Method method,</span></span></span><br><span class="line"><span class="params"><span class="function">                                      String keyExpression)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(keyExpression)) &#123;</span><br><span class="line">            EvaluationContext evaluationContext = evaluator.createEvaluationContext(object, clazz, method, args);</span><br><span class="line">            AnnotatedElementKey methodKey = <span class="keyword">new</span> AnnotatedElementKey(method, clazz);</span><br><span class="line">            <span class="keyword">return</span> evaluator.key(keyExpression, methodKey, evaluationContext);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SimpleKeyGenerator.generateKey(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ExpressionEvaluator"><a href="#ExpressionEvaluator" class="headerlink" title="ExpressionEvaluator"></a>ExpressionEvaluator</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.support.AopUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.expression.AnnotatedElementKey;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.expression.CachedExpressionEvaluator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.expression.MethodBasedEvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.DefaultParameterNameDiscoverer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.ParameterNameDiscoverer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.EvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.Expression;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExpressionEvaluator</span> <span class="keyword">extends</span> <span class="title">CachedExpressionEvaluator</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ParameterNameDiscoverer paramNameDiscoverer = <span class="keyword">new</span> DefaultParameterNameDiscoverer();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;ExpressionKey, Expression&gt; conditionCache = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">64</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;AnnotatedElementKey, Method&gt; targetMethodCache = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;(<span class="number">64</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EvaluationContext <span class="title">createEvaluationContext</span><span class="params">(Object object, Class&lt;?&gt; targetClass, Method method,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                     Object[] args)</span> </span>&#123;</span><br><span class="line">        Method targetMethod = getTargetMethod(targetClass, method);</span><br><span class="line">        ExpressionRootObject root = <span class="keyword">new</span> ExpressionRootObject(object, args);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MethodBasedEvaluationContext(root, targetMethod, args, <span class="keyword">this</span>.paramNameDiscoverer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">key</span><span class="params">(String conditionExpression, AnnotatedElementKey elementKey, EvaluationContext evalContext)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getExpression(<span class="keyword">this</span>.conditionCache, elementKey, conditionExpression).getValue(evalContext);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Method <span class="title">getTargetMethod</span><span class="params">(Class&lt;?&gt; targetClass, Method method)</span> </span>&#123;</span><br><span class="line">        AnnotatedElementKey methodKey = <span class="keyword">new</span> AnnotatedElementKey(method, targetClass);</span><br><span class="line">        Method targetMethod = <span class="keyword">this</span>.targetMethodCache.get(methodKey);</span><br><span class="line">        <span class="keyword">if</span> (targetMethod == <span class="keyword">null</span>) &#123;</span><br><span class="line">            targetMethod = AopUtils.getMostSpecificMethod(method, targetClass);</span><br><span class="line">            <span class="keyword">if</span> (targetMethod == <span class="keyword">null</span>) &#123;</span><br><span class="line">                targetMethod = method;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.targetMethodCache.put(methodKey, targetMethod);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> targetMethod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ExpressionRootObject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object object;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object[] args;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ExpressionRootObject</span><span class="params">(Object object, Object[] args)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.object = object;</span><br><span class="line">            <span class="keyword">this</span>.args = args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">getobject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> object;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Object[] getArgs() &#123;</span><br><span class="line">            <span class="keyword">return</span> args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="本项目提供了自动配置类，开启Aspect支持同时提供RedisTemplate"><a href="#本项目提供了自动配置类，开启Aspect支持同时提供RedisTemplate" class="headerlink" title="本项目提供了自动配置类，开启Aspect支持同时提供RedisTemplate"></a>本项目提供了自动配置类，开启Aspect支持同时提供RedisTemplate</h2><ul><li>支持LocalDate和LocalDateTime的序列化和反序列化</li><li>存储key为字符串，值为json<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.config;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonAutoDetect;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonTypeInfo;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.PropertyAccessor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalTimeSerializer;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.EnableAspectJAutoProxy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/22 15:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;org.hanqf.reactive.redis.cache&quot;)</span></span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReactiveRedisConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认日期时间格式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_DATE_TIME_FORMAT = <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认日期格式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_DATE_FORMAT = <span class="string">&quot;yyyy-MM-dd&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认时间格式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_TIME_FORMAT = <span class="string">&quot;HH:mm:ss&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean(value = RedisTemplate.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisConfig RedisTemplate&quot;</span>);</span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        <span class="comment">//objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span></span><br><span class="line">        objectMapper.activateDefaultTyping(objectMapper.getPolymorphicTypeValidator(), ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.WRAPPER_ARRAY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//LocalDateTime系列序列化和反序列化模块，继承自jsr310，我们在这里修改了日期格式</span></span><br><span class="line">        JavaTimeModule javaTimeModule = <span class="keyword">new</span> JavaTimeModule();</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        javaTimeModule.addSerializer(LocalDateTime.class, <span class="keyword">new</span> LocalDateTimeSerializer(</span><br><span class="line">                DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)));</span><br><span class="line">        javaTimeModule.addSerializer(LocalDate.class,</span><br><span class="line">                <span class="keyword">new</span> LocalDateSerializer(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)));</span><br><span class="line">        javaTimeModule.addSerializer(LocalTime.class,</span><br><span class="line">                <span class="keyword">new</span> LocalTimeSerializer(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));</span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        javaTimeModule.addDeserializer(LocalDateTime.class, <span class="keyword">new</span> LocalDateTimeDeserializer(</span><br><span class="line">                DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)));</span><br><span class="line">        javaTimeModule.addDeserializer(LocalDate.class,</span><br><span class="line">                <span class="keyword">new</span> LocalDateDeserializer(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)));</span><br><span class="line">        javaTimeModule.addDeserializer(LocalTime.class,</span><br><span class="line">                <span class="keyword">new</span> LocalTimeDeserializer(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注册模块</span></span><br><span class="line">        objectMapper.registerModule(javaTimeModule);</span><br><span class="line"></span><br><span class="line">        Jackson2JsonRedisSerializer&lt;Object&gt; serializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;&gt;(Object.class);</span><br><span class="line">        serializer.setObjectMapper(objectMapper);</span><br><span class="line"></span><br><span class="line">        RedisTemplate&lt;String, Object&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        redisTemplate.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        redisTemplate.setValueSerializer(serializer);</span><br><span class="line">        redisTemplate.setHashKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        redisTemplate.setHashValueSerializer(serializer);</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过本文，你将知道如何在WebFlux项目中通过redis注解缓存方法的返回值;&lt;/li&gt;
&lt;li&gt;本项目基于springboot:2.4.0，jdk1.8，并使用Maven构建;&lt;/li&gt;
&lt;li&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter&quot;&gt;https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="redis" scheme="https://blog.hanqunfeng.com/tags/redis/"/>
    
    <category term="webflux" scheme="https://blog.hanqunfeng.com/tags/webflux/"/>
    
    <category term="reactive" scheme="https://blog.hanqunfeng.com/tags/reactive/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-OAuth2-JWT-ClientServer</title>
    <link href="https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-clientserver/"/>
    <id>https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-clientserver/</id>
    <published>2020-11-15T13:30:05.000Z</published>
    <updated>2021-05-27T07:43:24.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT的客户端服务器</li><li>本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建</li><li>代码地址:<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48</a></li></ul><span id="more"></span><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li>springboot官方提供了支持<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-web&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-oauth2-client&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目中使用了lombok简少代码量，非必须依赖</span></span><br><span class="line">compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="WebSecurityConfig"><a href="#WebSecurityConfig" class="headerlink" title="WebSecurityConfig"></a>WebSecurityConfig</h2><ul><li>springboot没有为client-server设置独立的注解和配置类，而是把这部分功能整合到了spring-security中<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientdemo2.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientdemo2.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientdemo2.security.CustomAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.client.RestTemplateCustomizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.ClientHttpRequestInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.ClientHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.WebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.JdbcOAuth2AuthorizedClientService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.OAuth2AuthorizedClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.OAuth2AuthorizedClientService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/9 18:11.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;oauth2.server.logout&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String oauth2_server_logout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomAccessDeniedHandler customAccessDeniedHandler;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定不拦截的路径规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//设置不需要拦截的路径，也就是不需要认证的路径</span></span><br><span class="line">        web.ignoring().antMatchers(<span class="string">&quot;/webjars/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//logout跳转到认证服务器的logout</span></span><br><span class="line">        http.logout().logoutSuccessUrl(oauth2_server_logout);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置认证规则</span></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .mvcMatchers(<span class="string">&quot;/oauth/login&quot;</span>).permitAll()</span><br><span class="line">                <span class="comment">////所有路径都需要登录</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">////需要具备相应的角色才能访问，这里返回的权限是scope，所以还是使用rbac验证吧</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/user/**&quot;</span>, <span class="string">&quot;/user2/**&quot;</span>).hasAuthority(<span class="string">&quot;SCOPE_any&quot;</span>)</span><br><span class="line">                .anyRequest().access(<span class="string">&quot;@rbacService.hasPerssion(request,authentication)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启oauth2登录认证</span></span><br><span class="line">        http.oauth2Login();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启基于oauth2的客户端信息</span></span><br><span class="line">        http.oauth2Client();</span><br><span class="line"></span><br><span class="line">        http.csrf().disable();</span><br><span class="line"></span><br><span class="line">        http.exceptionHandling().accessDeniedHandler(customAccessDeniedHandler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="WebSecurityConfig说明"><a href="#WebSecurityConfig说明" class="headerlink" title="WebSecurityConfig说明"></a>WebSecurityConfig说明</h3><p>与oauth2-client相关的代码就如下两行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//开启oauth2登录认证</span></span><br><span class="line">http.oauth2Login();</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启基于oauth2的客户端信息</span></span><br><span class="line">http.oauth2Client();</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">oauth2:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://localhost:8080</span></span><br><span class="line">    <span class="attr">logout:</span> <span class="string">$&#123;oauth2.server.url&#125;/logout</span> <span class="comment">#可以实现单点登录，不能实现单点登出</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#oauth2客户端配置，默认基于内存，如果基于数据库，需要在config配置类进行相应的配置</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">client:</span></span><br><span class="line">        <span class="attr">registration:</span> <span class="comment">#支持多租户</span></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/my-client</span></span><br><span class="line">          <span class="attr">my-client:</span> <span class="comment"># 1 注册客户端名称，随意指定，但是要与provider的配置相一致</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">postman</span> <span class="comment"># 2 客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">postman</span> <span class="comment"># 3 客户端密码</span></span><br><span class="line">            <span class="attr">authorization-grant-type:</span> <span class="string">authorization_code</span> <span class="comment"># 4 认证类型</span></span><br><span class="line">            <span class="comment">#默认重定向URI模板是&#123;baseUrl&#125;/login/oauth2/code/&#123;registrationId&#125;。</span></span><br><span class="line">            <span class="comment">#registrationId是ClientRegistration的唯一标识符。</span></span><br><span class="line">            <span class="attr">redirect-uri:</span> <span class="string">http://localhost:8088/postman/login/oauth2/code/my-client</span>  <span class="comment"># 5 回调地址，需要配置到数据表中，默认写法，注意最后的路径是注册客户端名称</span></span><br><span class="line">            <span class="attr">scope:</span> <span class="string">any</span> <span class="comment">#请求范围</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">客户端1</span></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/my-client2</span></span><br><span class="line">          <span class="attr">my-client2:</span> <span class="comment"># 1 注册客户端名称，随意指定，但是要与provider的配置相一致</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">postman</span> <span class="comment"># 2 客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">postman</span> <span class="comment"># 3 客户端密码</span></span><br><span class="line">            <span class="attr">authorization-grant-type:</span> <span class="string">authorization_code</span> <span class="comment"># 4 认证类型</span></span><br><span class="line">            <span class="attr">redirect-uri:</span> <span class="string">http://localhost:8088/postman/login/oauth2/code/my-client2</span>  <span class="comment"># 5 回调地址，需要配置到数据表中，默认写法，注意最后的路径是注册客户端名称</span></span><br><span class="line">            <span class="attr">scope:</span> <span class="string">any</span> <span class="comment">#请求范围</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">客户端2</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># CommonOAuth2Provider 中定义了google,facebook,github,okta的默认provider信息，所以这里不需要为其配置provider信息</span></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/google</span></span><br><span class="line">          <span class="comment"># 重定向后：https://accounts.google.com/o/oauth2/v2/auth?response_type=code&amp;client_id=xxxxxxxxx&amp;scope=openid%20profile%20email&amp;state=jO3PpuX2IzwOFemdd7FHBIHeeSPcxDwiP-mqDBTjdfw%3D&amp;redirect_uri=http://localhost:8088/postman/login/oauth2/code/google&amp;nonce=-sxhj2hjgrc7krSHSjL3qz_W90xPEX9nlP6SYzAfktY</span></span><br><span class="line">          <span class="attr">google:</span> <span class="comment"># google帐号认证，跳转到google登录页面</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span> <span class="comment">#  客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span> <span class="comment">#  客户端密码</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Google认证</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/facebook</span></span><br><span class="line">          <span class="comment"># https://www.facebook.com/v2.8/dialog/oauth?response_type=code&amp;client_id=xxxxxxxxx&amp;scope=public_profile%20email&amp;state=BVZM3OW2EUS82pbjJdpQfXvtXbFbMwaUe_lRMOt4BW4%3D&amp;redirect_uri=http://localhost:8088/postman/login/oauth2/code/facebook</span></span><br><span class="line">          <span class="attr">facebook:</span> <span class="comment"># facebook帐号登录，跳转到facebook登录页面</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span> <span class="comment">#  客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span> <span class="comment">#  客户端密码</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Facebook认证</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/github</span></span><br><span class="line">          <span class="comment"># 重定向后：https://github.com/login?client_id=xxxxxxxxx&amp;return_to=%2Flogin%2Foauth%2Fauthorize%3Fclient_id%3Dxxxxxxxxx%26redirect_uri%3Dhttp%253A%252F%252Flocalhost%253A8088%252Fpostman%252Flogin%252Foauth2%252Fcode%252Fgithub%26response_type%3Dcode%26scope%3Dread%253Auser%26state%3DmXtRWMQy8NaqVsFiie-NyYuy2z8OErrdq_VsuejDOPE%253D</span></span><br><span class="line">          <span class="comment"># api文档：https://docs.github.com/cn/free-pro-team@latest/rest</span></span><br><span class="line">          <span class="attr">github:</span> <span class="comment"># github帐号登录，跳转到github登录页面</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span> <span class="comment">#  客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span> <span class="comment">#  客户端密码</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Github认证</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">provider:</span></span><br><span class="line">          <span class="attr">my-client:</span> <span class="comment"># 6 注册客户端名称</span></span><br><span class="line">            <span class="attr">authorization-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/authorize</span> <span class="comment"># 7 认证地址</span></span><br><span class="line">            <span class="attr">token-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/token</span> <span class="comment"># 8 获取token地址</span></span><br><span class="line">            <span class="attr">user-info-uri:</span> <span class="string">http://localhost:8080/userInfo</span> <span class="comment"># 9 获取用户信息地址，必须配置</span></span><br><span class="line">            <span class="attr">userNameAttribute:</span> <span class="string">username</span> <span class="comment"># 10 指定用户信息中哪个属性是用户名称</span></span><br><span class="line">          <span class="attr">my-client2:</span> <span class="comment"># 6 注册客户端名称</span></span><br><span class="line">            <span class="attr">authorization-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/authorize</span> <span class="comment"># 7 认证地址</span></span><br><span class="line">            <span class="attr">token-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/token</span> <span class="comment"># 8 获取token地址</span></span><br><span class="line">            <span class="attr">user-info-uri:</span> <span class="string">http://localhost:8080/userInfo</span> <span class="comment"># 9 获取用户信息地址，必须配置</span></span><br><span class="line">            <span class="attr">userNameAttribute:</span> <span class="string">username</span> <span class="comment"># 10 指定用户信息中哪个属性是用户名称</span></span><br></pre></td></tr></table></figure><h3 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h3><ul><li>springboot默认实现了google,facebook,github,okta的provider，但是其它认证服务器就需要自己指定provider信息。</li><li>这里需要为其指定user-info-uri，这个url提供认证用户的信息，需要认证服务端提供(也可以配置到受认证服务保护的资源服务中)，所以我们需要对认证服务进行改造</li><li>userNameAttribute表示从user-info-uri接口返回的信息中哪个属性名称表示用户名称</li><li>如果客户端信息只有一个，则访问当前客户端服务就会直接跳转到认证服务器的登录页面</li><li>如果客户端配置了多个，则会先跳转到login页面，需要选择要访问的认证服务器，后文有介绍如何自定义login页面</li></ul><h2 id="AuthServer改造"><a href="#AuthServer改造" class="headerlink" title="AuthServer改造"></a>AuthServer改造</h2><h3 id="UserController"><a href="#UserController" class="headerlink" title="UserController"></a>UserController</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">userInfo</span><span class="params">(Authentication authentication)</span></span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        Object principal = authentication.getPrincipal();</span><br><span class="line">        <span class="keyword">if</span>(principal <span class="keyword">instanceof</span> Jwt)&#123;</span><br><span class="line">            map.put(<span class="string">&quot;username&quot;</span>, ((Jwt) principal).getClaim(<span class="string">&quot;user_name&quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//客户端获取用户信息时，将附加信息一块返回给客户端</span></span><br><span class="line">            map.putAll(((Jwt) principal).getClaims());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UserController说明"><a href="#UserController说明" class="headerlink" title="UserController说明"></a>UserController说明</h4><ul><li>这个接口就是普通的controller接口，其返回一个map信息，里面至少包含一个用户名称信息。</li><li>因为client-server与auth-server之间是通过基于JWT的access-token进行访问的，所以这个接口实际上也是一个资源接口，需要为认证服务器配置资源服务。</li></ul><h3 id="SecurityConfig"><a href="#SecurityConfig" class="headerlink" title="SecurityConfig"></a>SecurityConfig</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//认证服务器同时作为资源服务器，其目的是可以对外提供访问的资源，比如&quot;客户端认证获取用户信息&quot;</span></span><br><span class="line"><span class="comment">//鉴权时只支持Bearer Token的形式，不支持url后加参数access_token</span></span><br><span class="line">http.oauth2ResourceServer().jwt() <span class="comment">//开启oauth2资源认证</span></span><br><span class="line">        <span class="comment">//默认情况下，权限是scope，而我们希望使用的是用户的角色，所以这里需要通过转换器进行处理</span></span><br><span class="line">        .jwtAuthenticationConverter(jwt -&gt; &#123; <span class="comment">//通过自定义Converter来指定权限，Converter是函数接口，当前上下问参数为JWT对象</span></span><br><span class="line">            Collection&lt;SimpleGrantedAuthority&gt; authorities =</span><br><span class="line">                    ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                            .get(<span class="string">&quot;authorities&quot;</span>)).stream() <span class="comment">//获取JWT中的authorities</span></span><br><span class="line">                            .map(SimpleGrantedAuthority::<span class="keyword">new</span>)</span><br><span class="line">                            .collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//如果希望保留scope的权限，可以取出scope数据然后合并到一起，这样因为不是以ROLE_开头，所以需要使用hasAuthority(&#x27;SCOPE_any&#x27;)的形式</span></span><br><span class="line">            Collection&lt;SimpleGrantedAuthority&gt; scopes = ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                    .get(<span class="string">&quot;scope&quot;</span>)).stream().map(scope -&gt; <span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">&quot;SCOPE_&quot;</span> + scope))</span><br><span class="line">                    .collect(Collectors.toSet());</span><br><span class="line">            <span class="comment">//合并权限</span></span><br><span class="line">            authorities.addAll(scopes);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> JwtAuthenticationToken(jwt, authorities);</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h4 id="SecurityConfig说明"><a href="#SecurityConfig说明" class="headerlink" title="SecurityConfig说明"></a>SecurityConfig说明</h4><ul><li>如果该接口是登录后就可以访问，只需要按如下配置即可：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.oauth2ResourceServer().jwt();</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#oauth2 配置</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">resourceserver:</span></span><br><span class="line">        <span class="attr">jwt:</span></span><br><span class="line">          <span class="attr">public-key-location:</span> <span class="string">classpath:oauth2_key.pub</span></span><br></pre></td></tr></table></figure><ul><li>将公钥文件放到对应的路径下即可</li></ul><h2 id="自定义login页面"><a href="#自定义login页面" class="headerlink" title="自定义login页面"></a>自定义login页面</h2><ul><li>当客户端配置信息中指定了多个client时，访问当前服务时会先跳转到login页面，需要选择要访问哪个认证服务器。</li></ul><h3 id="依赖-1"><a href="#依赖-1" class="headerlink" title="依赖"></a>依赖</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">implementation</span> <span class="string">&#x27;org.springframework.boot:spring-boot-starter-thymeleaf&#x27;</span></span><br><span class="line"><span class="string">//webjars</span> <span class="string">https://www.webjars.org</span></span><br><span class="line"><span class="string">implementation</span> <span class="string">&#x27;org.webjars:bootstrap:4.5.3&#x27;</span></span><br><span class="line"><span class="string">implementation</span> <span class="string">&#x27;org.webjars.bower:jquery:3.5.1&#x27;</span></span><br><span class="line"><span class="string">//</span> <span class="string">可以在html中去掉webjars的版本号，这样升级的时候直接修改上面引入的webjars中的版本号即可，页面中不需要修改</span></span><br><span class="line"><span class="string">implementation</span> <span class="string">&#x27;org.webjars:webjars-locator:0.40&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="LoginController"><a href="#LoginController" class="headerlink" title="LoginController"></a>LoginController</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientdemo2.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.log4j.Log4j2;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;LoginController&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/14 00:19.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Log4j2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ClientRegistrationRepository clientRegistrationRepository;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoginController</span><span class="params">(ClientRegistrationRepository clientRegistrationRepository)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.clientRegistrationRepository = clientRegistrationRepository;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义登录页面，多租户登录时先显示该页面，由用户选择要使用的认证服务</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/oauth/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(clientRegistrationRepository <span class="keyword">instanceof</span> InMemoryClientRegistrationRepository)&#123;</span><br><span class="line">            ((InMemoryClientRegistrationRepository)clientRegistrationRepository).forEach(registrations-&gt;&#123;</span><br><span class="line">                String registrationId = registrations.getRegistrationId();</span><br><span class="line">                String clientName = registrations.getClientName();</span><br><span class="line">                map.put(registrationId,clientName);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;registrations&quot;</span>, map);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;oauth2/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="login-html"><a href="#login-html" class="headerlink" title="login.html"></a>login.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/css/bootstrap.min.css&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/jquery/jquery.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/js/bootstrap.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;form-signin-heading&quot;</span>&gt;</span>Login with OAuth 2.0<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;registration: $&#123;registrations&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/oauth2/authorization/&#x27;+$&#123;registration.key&#125;&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;registration.value&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="WebSecurityConfig-1"><a href="#WebSecurityConfig-1" class="headerlink" title="WebSecurityConfig"></a>WebSecurityConfig</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启oauth2登录认证</span></span><br><span class="line">http.oauth2Login()</span><br><span class="line">        <span class="comment">//自定义登录页面</span></span><br><span class="line">        .loginPage(<span class="string">&quot;/oauth/login&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="OAuth2AuthorizedClientService"><a href="#OAuth2AuthorizedClientService" class="headerlink" title="OAuth2AuthorizedClientService"></a>OAuth2AuthorizedClientService</h2><ul><li>默认每次客户端获取到的token信息都是存储在内存中的，如果服务器重启则token就会失效，可以将token保存到数据库中</li></ul><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 客户端认证信息表，只需建表，数据会自动创建</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `oauth2_authorized_client` (</span><br><span class="line">    `client_registration_id` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;客户端注册Id&#x27;</span>,</span><br><span class="line">    `principal_name` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;登录用户名称&#x27;</span>,</span><br><span class="line">    `access_token_type` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;验证类型，这里是bear&#x27;</span>,</span><br><span class="line">    `access_token_value` <span class="type">blob</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;access_token的值&#x27;</span>,</span><br><span class="line">    `access_token_issued_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">current_timestamp</span>() <span class="keyword">ON</span> UPDATE <span class="built_in">current_timestamp</span>() COMMENT <span class="string">&#x27;access_token的创建时间&#x27;</span>,</span><br><span class="line">    `access_token_expires_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0000-00-00 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;access_token的过期时间&#x27;</span>,</span><br><span class="line">    `access_token_scopes` <span class="type">varchar</span>(<span class="number">1000</span>) <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;授权范围&#x27;</span>,</span><br><span class="line">    `refresh_token_value` <span class="type">blob</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;refresh_token的值&#x27;</span>,</span><br><span class="line">    `refresh_token_issued_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0000-00-00 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;refresh_token创建时间&#x27;</span>,</span><br><span class="line">    `created_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">current_timestamp</span>() COMMENT <span class="string">&#x27;数据创建时间&#x27;</span>,</span><br><span class="line">    `update_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">current_timestamp</span>() <span class="keyword">ON</span> UPDATE <span class="built_in">current_timestamp</span>() COMMENT <span class="string">&#x27;数据最后更新时间&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`client_registration_id`,`principal_name`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_bin;</span><br></pre></td></tr></table></figure><h3 id="添加数据库依赖"><a href="#添加数据库依赖" class="headerlink" title="添加数据库依赖"></a>添加数据库依赖</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mysql</span></span><br><span class="line">runtimeOnly <span class="string">&#x27;mysql:mysql-connector-java&#x27;</span></span><br><span class="line"><span class="comment">//为了使用datasource</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-jdbc&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="配置文件添加数据库的配置"><a href="#配置文件添加数据库的配置" class="headerlink" title="配置文件添加数据库的配置"></a>配置文件添加数据库的配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#数据源配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?useUnicode=true&amp;characterEncoding=utf-8&amp;useTimezone=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">newpwd</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">30000</span> <span class="comment">#毫秒，默认30秒</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">600000</span>      <span class="comment">#毫秒，默认10分钟</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">1800000</span>     <span class="comment">#毫秒，默认30分钟</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">10</span>     <span class="comment">#默认10</span></span><br></pre></td></tr></table></figure><h3 id="WebSecurityConfig增加JdbcOAuth2AuthorizedClientService的配置"><a href="#WebSecurityConfig增加JdbcOAuth2AuthorizedClientService的配置" class="headerlink" title="WebSecurityConfig增加JdbcOAuth2AuthorizedClientService的配置"></a>WebSecurityConfig增加JdbcOAuth2AuthorizedClientService的配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 基于数据库的客户端信息配置，认证数据会自动创建到数据表中</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> OAuth2AuthorizedClientService <span class="title">authorizedClientService</span><span class="params">(JdbcOperations jdbcOperations, ClientRegistrationRepository clientRegistrationRepository)</span> </span>&#123;</span><br><span class="line">    JdbcOAuth2AuthorizedClientService authorizedClientService =</span><br><span class="line">            <span class="keyword">new</span> JdbcOAuth2AuthorizedClientService(jdbcOperations, clientRegistrationRepository);</span><br><span class="line">    <span class="keyword">return</span> authorizedClientService;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> OAuth2AuthorizedClientService oAuth2AuthorizedClientService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//开启基于oauth2的客户端信息</span></span><br><span class="line">http.oauth2Client()</span><br><span class="line">        <span class="comment">//客户端信息基于数据库，基于内存去掉下面配置即可</span></span><br><span class="line">        .authorizedClientService(oAuth2AuthorizedClientService);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="访问资源服务"><a href="#访问资源服务" class="headerlink" title="访问资源服务"></a>访问资源服务</h2><ul><li>WebSecurityConfig配置类增加如下配置</li><li>其目的就是在使用RestTemplate访问资源服务时，在请求头中增加Bearer Token<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调用Resource Server服务使用RestTemplate，当调用的Resource Server时候我们时需要使用Bearer Token在头部传递Access Token；</span></span><br><span class="line"><span class="comment"> * RestTemplateAutoConfiguration已经给我们自动配置了RestTemplateBuilder来配置RestTemplate，我们需要通过RestTemplateCustomizer来对RestTemplate来定制</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">RestTemplateCustomizer <span class="title">restTemplateCustomizer</span><span class="params">(OAuth2AuthorizedClientService clientService)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> restTemplate -&gt; &#123; <span class="comment">//1 RestTemplateCustomizer时函数接口，入参是RestTemplate</span></span><br><span class="line">        List&lt;ClientHttpRequestInterceptor&gt; interceptors = restTemplate.getInterceptors();</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(interceptors)) &#123;</span><br><span class="line">            interceptors = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        interceptors.add((request, body, execution) -&gt; &#123; <span class="comment">//2 通过增加RestTemplate拦截器，让每次请求添加Bearer Token（Access Token）；ClientHttpRequestInterceptor是函数接口，可用Lambda表达式来实现</span></span><br><span class="line">            OAuth2AuthenticationToken auth = (OAuth2AuthenticationToken)</span><br><span class="line">                    SecurityContextHolder.getContext().getAuthentication();</span><br><span class="line">            String clientRegistrationId = auth.getAuthorizedClientRegistrationId();</span><br><span class="line">            String principalName = auth.getName();</span><br><span class="line">            OAuth2AuthorizedClient client =</span><br><span class="line">                    clientService.loadAuthorizedClient(clientRegistrationId, principalName); <span class="comment">//3 OAuth2AuthorizedClientService可获得用户的OAuth2AuthorizedClient</span></span><br><span class="line">            <span class="keyword">if</span> (client == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">//如果客户端信息使用的是基于内存的InMemoryOAuth2AuthorizedClientService，则重启服务器就会失效，需要重新登录才能恢复，</span></span><br><span class="line">                <span class="comment">// 建议使用基于数据库的JdbcOAuth2AuthorizedClientService，本例使用的就是JdbcOAuth2AuthorizedClientService</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> CustomException(HttpStatus.NOT_ACCEPTABLE, <span class="string">&quot;用户状态异常，请重新登录&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            String accessToken = client.getAccessToken().getTokenValue(); <span class="comment">//4 OAuth2AuthorizedClient可获得用户Access Token</span></span><br><span class="line">            request.getHeaders().add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;Bearer &quot;</span> + accessToken); <span class="comment">//5 将Access Token通过头部的Bearer Token中访问Resource Server</span></span><br><span class="line"></span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求地址: %s&quot;</span>, request.getURI()));</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求头信息: %s&quot;</span>, request.getHeaders()));</span><br><span class="line"></span><br><span class="line">            ClientHttpResponse response = execution.execute(request, body);</span><br><span class="line">            log.info(String.format(<span class="string">&quot;响应头信息: %s&quot;</span>, response.getHeaders()));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">        &#125;);</span><br><span class="line">        restTemplate.setInterceptors(interceptors);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="以ResController举例如何访问资源服务"><a href="#以ResController举例如何访问资源服务" class="headerlink" title="以ResController举例如何访问资源服务"></a>以ResController举例如何访问资源服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientdemo2.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientdemo2.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.client.RestTemplateBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;获取资源服务器数据&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/7 22:47.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/res&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ResController</span><span class="params">(RestTemplateBuilder restTemplateBuilder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.restTemplate = restTemplateBuilder.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取资源服务器的数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/res1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResponse <span class="title">getRes</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://localhost:8082/res/res1&quot;</span>, AjaxResponse.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResponse <span class="title">getUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(<span class="string">&quot;http://localhost:8082/user&quot;</span>,<span class="keyword">null</span>, AjaxResponse.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rbac&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResponse <span class="title">getRbac</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://localhost:8082/rbac&quot;</span>, AjaxResponse.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getuserInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://localhost:8082/userInfo&quot;</span>, Map.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT的客户端服务器&lt;/li&gt;
&lt;li&gt;本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建&lt;/li&gt;
&lt;li&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="oauth2" scheme="https://blog.hanqunfeng.com/tags/oauth2/"/>
    
    <category term="springsecurity" scheme="https://blog.hanqunfeng.com/tags/springsecurity/"/>
    
    <category term="jwt" scheme="https://blog.hanqunfeng.com/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-OAuth2-JWT-ResourceServer</title>
    <link href="https://blog.hanqunfeng.com/2020/11/15/springBoot-oauth2-jwt-resourcceserver/"/>
    <id>https://blog.hanqunfeng.com/2020/11/15/springBoot-oauth2-jwt-resourcceserver/</id>
    <published>2020-11-15T12:30:05.000Z</published>
    <updated>2021-05-27T07:43:28.155Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT的资源服务器</li><li>本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建</li><li>代码地址:<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48</a></li></ul><span id="more"></span><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul><li>springboot官方提供了支持<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-web&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-oauth2-resource-server&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目中使用了lombok减代码量，非必须依赖</span></span><br><span class="line">compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="WebSecurityConfig"><a href="#WebSecurityConfig" class="headerlink" title="WebSecurityConfig"></a>WebSecurityConfig</h2><ul><li>springboot没有为resource-server设置独立的注解和配置类，而是把这部分功能整合到了spring-security中<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverdemo2.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverdemo2.security.CustomAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverdemo2.security.CustomAuthExceptionEntryPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;WebSecurityConfig&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/11 17:01.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomAccessDeniedHandler customAccessDeniedHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomAuthExceptionEntryPoint customAuthExceptionEntryPoint;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启跨域</span></span><br><span class="line">        http.cors();</span><br><span class="line">        http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//权限控制</span></span><br><span class="line">        http.authorizeRequests()<span class="comment">//登录成功就可以访问</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/res/**&quot;</span>, <span class="string">&quot;/userInfo/**&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">//需要具备相应的角色才能访问</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/user/**&quot;</span>).hasAnyRole(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;user&quot;</span>)</span><br><span class="line">                <span class="comment">//不需要登录就可以访问</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/swagger-ui/**&quot;</span>, <span class="string">&quot;/v3/api-docs**&quot;</span>).permitAll()</span><br><span class="line">                <span class="comment">//其它路径需要根据指定的方法判断是否有权限访问，基于权限管理模型认证</span></span><br><span class="line">                .anyRequest().access(<span class="string">&quot;@rbacService.hasPerssion(request,authentication)&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//鉴权时只支持Bearer Token的形式，不支持url后加参数access_token</span></span><br><span class="line">        http.oauth2ResourceServer()<span class="comment">//开启oauth2资源认证</span></span><br><span class="line">                .jwt() <span class="comment">//token为jwt</span></span><br><span class="line">                <span class="comment">//默认情况下，权限是scope，而我们希望使用的是用户的角色，所以这里需要通过转换器进行处理</span></span><br><span class="line">                .jwtAuthenticationConverter(jwt -&gt; &#123; <span class="comment">//通过自定义Converter来指定权限，Converter是函数接口，当前上下问参数为JWT对象</span></span><br><span class="line">                    Collection&lt;SimpleGrantedAuthority&gt; authorities =</span><br><span class="line">                            ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                                    .get(<span class="string">&quot;authorities&quot;</span>)).stream() <span class="comment">//获取JWT中的authorities</span></span><br><span class="line">                                    .map(SimpleGrantedAuthority::<span class="keyword">new</span>)</span><br><span class="line">                                    .collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//如果希望保留scope的权限，可以取出scope数据然后合并到一起，这样因为不是以ROLE_开头，所以需要使用hasAuthority(&#x27;SCOPE_any&#x27;)的形式</span></span><br><span class="line">                    Collection&lt;SimpleGrantedAuthority&gt; scopes = ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                            .get(<span class="string">&quot;scope&quot;</span>)).stream().map(scope -&gt; <span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">&quot;SCOPE_&quot;</span> + scope))</span><br><span class="line">                            .collect(Collectors.toSet());</span><br><span class="line">                    <span class="comment">//合并权限</span></span><br><span class="line">                    authorities.addAll(scopes);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> JwtAuthenticationToken(jwt, authorities);</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//这部分看代码吧，没啥可说的</span></span><br><span class="line">        http.exceptionHandling()</span><br><span class="line">                <span class="comment">//access_token无效或过期时的处理方式</span></span><br><span class="line">                .authenticationEntryPoint(customAuthExceptionEntryPoint)</span><br><span class="line">                <span class="comment">//access_token认证后没有对应的权限时的处理方式</span></span><br><span class="line">                .accessDeniedHandler(customAccessDeniedHandler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跨域配置类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CorsConfigurationSource <span class="title">corsConfigurationSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CorsConfiguration corsConfiguration = <span class="keyword">new</span> CorsConfiguration().applyPermitDefaultValues();</span><br><span class="line">        <span class="comment">//开放哪些ip、端口、域名的访问权限，星号表示开放所有域</span></span><br><span class="line">        corsConfiguration.addAllowedOrigin(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//corsConfiguration.setAllowedOrigins(Arrays.asList(&quot;http://localhost:8080&quot;,&quot;http://localhost:8081&quot;));</span></span><br><span class="line">        <span class="comment">//开放哪些Http方法，允许跨域访问</span></span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//corsConfiguration.setAllowedMethods(Arrays.asList(&quot;GET&quot;,&quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;));</span></span><br><span class="line">        <span class="comment">//允许HTTP请求中的携带哪些Header信息</span></span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//是否允许发送Cookie信息</span></span><br><span class="line">        corsConfiguration.setAllowCredentials(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加映射路径，“/**”表示对所有的路径实行全局跨域访问权限的设置</span></span><br><span class="line">        UrlBasedCorsConfigurationSource configSource = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line">        configSource.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, corsConfiguration);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> configSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="WebSecurityConfig说明"><a href="#WebSecurityConfig说明" class="headerlink" title="WebSecurityConfig说明"></a>WebSecurityConfig说明</h3><p>整体配置方式就是spring-security的配置方式，这里唯一的不同就是如下这部分代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//鉴权时只支持Bearer Token的形式，不支持url后加参数access_token</span></span><br><span class="line">http.oauth2ResourceServer()<span class="comment">//开启oauth2资源认证</span></span><br><span class="line">        .jwt() <span class="comment">//token为jwt</span></span><br><span class="line">        <span class="comment">//默认情况下，权限是scope，而我们希望使用的是用户的角色，所以这里需要通过转换器进行处理</span></span><br><span class="line">        .jwtAuthenticationConverter(jwt -&gt; &#123; <span class="comment">//通过自定义Converter来指定权限，Converter是函数接口，当前上下问参数为JWT对象</span></span><br><span class="line">            Collection&lt;SimpleGrantedAuthority&gt; authorities =</span><br><span class="line">                    ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                            .get(<span class="string">&quot;authorities&quot;</span>)).stream() <span class="comment">//获取JWT中的authorities</span></span><br><span class="line">                            .map(SimpleGrantedAuthority::<span class="keyword">new</span>)</span><br><span class="line">                            .collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//如果希望保留scope的权限，可以取出scope数据然后合并到一起，这样因为不是以ROLE_开头，所以需要使用hasAuthority(&#x27;SCOPE_any&#x27;)的形式</span></span><br><span class="line">            Collection&lt;SimpleGrantedAuthority&gt; scopes = ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                    .get(<span class="string">&quot;scope&quot;</span>)).stream().map(scope -&gt; <span class="keyword">new</span> SimpleGrantedAuthority(<span class="string">&quot;SCOPE_&quot;</span> + scope))</span><br><span class="line">                    .collect(Collectors.toSet());</span><br><span class="line">            <span class="comment">//合并权限</span></span><br><span class="line">            authorities.addAll(scopes);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> JwtAuthenticationToken(jwt, authorities);</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><ul><li>一般情况下，我们只需要这样配置<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.oauth2ResourceServer().jwt();</span><br></pre></td></tr></table></figure>此时就已经开启的oauth2资源服务器的支持，但是此时我们鉴权后获取到的权限是scope，这可能并不是我们希望的，所以我们可以为其指定一个转换器，从access_token的payload中获取<code>authorities</code>属性，并将其设置为用户的权限，如果我们还希望同时得到scope，则也可以再次取出<code>scope</code>的值放入用户的权限列表中。</li></ul><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#oauth2 配置</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">resourceserver:</span></span><br><span class="line">        <span class="attr">jwt:</span></span><br><span class="line">          <span class="comment"># 公钥文件路径</span></span><br><span class="line">          <span class="comment"># public-key-location: classpath:oauth2_key.pub</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># 认证服务器提供的密钥验证路径，这种方式每次验证access_token都需要访问认证服务器</span></span><br><span class="line">          <span class="attr">jwk-set-uri:</span> <span class="string">http://localhost:8080/.well-known/jwks.json</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>本项目基于jks等非对称密钥的方式</li><li>密钥配置方式支持本地配置和认证服务器远程获取</li><li>如果是基于本地配置的方式，则认证服务器什么都不需要做，但是如果是基于认证服务器远程获取的方式，则需要为认证服务器添加对应的功能。</li></ul><h2 id="AuthServer改造"><a href="#AuthServer改造" class="headerlink" title="AuthServer改造"></a>AuthServer改造</h2><h3 id="JwkSetEndpoint"><a href="#JwkSetEndpoint" class="headerlink" title="JwkSetEndpoint"></a>JwkSetEndpoint</h3><ul><li>增加jwk-set验证端点，该功能就是为了获取公钥<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2authserverdemo.security.jwt.JwtTokenProperties;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.JWKSet;</span><br><span class="line"><span class="keyword">import</span> com.nimbusds.jose.jwk.RSAKey;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.endpoint.FrameworkEndpoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.store.KeyStoreKeyFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.KeyPair;</span><br><span class="line"><span class="keyword">import</span> java.security.interfaces.RSAPublicKey;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FrameworkEndpoint</span> <span class="comment">//@FrameworkEndpoint和@Controller相同功能，只用于框架提供的端点</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwkSetEndpoint</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtTokenProperties jwtTokenProperties;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/.well-known/jwks.json&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        KeyStoreKeyFactory keyStoreKeyFactory =</span><br><span class="line">                <span class="keyword">new</span> KeyStoreKeyFactory(jwtTokenProperties.getJksKeyFileResource(), jwtTokenProperties.getJksStorePassword().toCharArray());</span><br><span class="line">        KeyPair keyPair = keyStoreKeyFactory.getKeyPair(jwtTokenProperties.getJksKeyAlias(), jwtTokenProperties.getJksKeyPassword().toCharArray());</span><br><span class="line">        RSAPublicKey publicKey = (RSAPublicKey) keyPair.getPublic();</span><br><span class="line">        RSAKey key = <span class="keyword">new</span> RSAKey.Builder(publicKey).build();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JWKSet(key).toJSONObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="SecurityConfig开发对应的权限"><a href="#SecurityConfig开发对应的权限" class="headerlink" title="SecurityConfig开发对应的权限"></a>SecurityConfig开发对应的权限</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http.authorizeRequests()</span><br><span class="line">       .antMatchers(customSecurityProperties.getPermitAll()).permitAll() <span class="comment">//不用身份认证可以访问</span></span><br><span class="line">       .mvcMatchers(<span class="string">&quot;/.well-known/jwks.json&quot;</span>).permitAll() <span class="comment">//开放JWK SET端点，提供给资源服务器访问获取公钥信息</span></span><br><span class="line">       .anyRequest().authenticated(); <span class="comment">//其它的请求要求必须有身份认证</span></span><br></pre></td></tr></table></figure><h3 id="资源，这里以UserController举例"><a href="#资源，这里以UserController举例" class="headerlink" title="资源，这里以UserController举例"></a>资源，这里以UserController举例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverdemo2.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverdemo2.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.prepost.PreAuthorize;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.Principal;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意权限区分大小写</span></span><br><span class="line">    <span class="meta">@PreAuthorize(&quot;hasRole(&#x27;admin&#x27;) or hasRole(&#x27;user&#x27;)&quot;)</span></span><br><span class="line">    <span class="comment">//@PreAuthorize(&quot;#oauth2.hasScope(&#x27;any&#x27;)&quot;) //不支持oauth2表达式</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/user&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResponse <span class="title">user</span><span class="params">(Principal principal)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//principal在经过security拦截后，是org.springframework.security.authentication.UsernamePasswordAuthenticationToken</span></span><br><span class="line">        <span class="comment">//在经OAuth2拦截后，是OAuth2Authentication</span></span><br><span class="line">        <span class="keyword">return</span> AjaxResponse.success(principal);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意权限区分大小写</span></span><br><span class="line">    <span class="meta">@PreAuthorize(&quot;hasAuthority(&#x27;SCOPE_any&#x27;)&quot;)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/user2&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AjaxResponse <span class="title">user2</span><span class="params">(Principal principal)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//principal在经过security拦截后，是org.springframework.security.authentication.UsernamePasswordAuthenticationToken</span></span><br><span class="line">        <span class="comment">//在经OAuth2拦截后，是OAuth2Authentication</span></span><br><span class="line">        <span class="keyword">return</span> AjaxResponse.success(principal);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户的claim信息</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">userInfo</span><span class="params">(Authentication authentication)</span></span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        Object principal = authentication.getPrincipal();</span><br><span class="line">        <span class="keyword">if</span>(principal <span class="keyword">instanceof</span> Jwt)&#123;</span><br><span class="line">            map.put(<span class="string">&quot;username&quot;</span>, ((Jwt) principal).getClaim(<span class="string">&quot;user_name&quot;</span>));</span><br><span class="line">            map.putAll(((Jwt) principal).getClaims());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="资源服务器访问方式"><a href="#资源服务器访问方式" class="headerlink" title="资源服务器访问方式"></a>资源服务器访问方式</h2><ul><li>通过access_token访问受保护的资源</li></ul><h3 id="只支持Bearer-Token"><a href="#只支持Bearer-Token" class="headerlink" title="只支持Bearer Token"></a>只支持Bearer Token</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8082/user</span><br><span class="line"></span><br><span class="line"># 在请求的header中设置参数：参数名称：Authorization，值是`[grant_type] [access_token]`，grant_type值与access_token值之间用空格分开。例如：</span><br><span class="line"></span><br><span class="line">bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImV4cCI6MTYwNDY1ODc4NiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiJjYjEzZjhmZC03NWRiLTRmODItOTkxOC00YzFjZGI3MDEwMGMiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.W78nue0rPxB-Te7ZsxfzmTUYTasHHfQT0lMgAMG_i5g</span><br></pre></td></tr></table></figure><p>使用Postman接口测试工具时，也可以使用其提供的认证功能[Authorization–&gt;TYPE–&gt; Bearer Token]，然后将access_token填入</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT的资源服务器&lt;/li&gt;
&lt;li&gt;本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建&lt;/li&gt;
&lt;li&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="oauth2" scheme="https://blog.hanqunfeng.com/tags/oauth2/"/>
    
    <category term="springsecurity" scheme="https://blog.hanqunfeng.com/tags/springsecurity/"/>
    
    <category term="jwt" scheme="https://blog.hanqunfeng.com/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-OAuth2-JWT-AuthServer</title>
    <link href="https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-authserver/"/>
    <id>https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-authserver/</id>
    <published>2020-11-15T10:30:05.000Z</published>
    <updated>2021-05-27T07:43:20.217Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT的认证服务器</li><li>本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建</li><li>代码地址:<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48</a></li></ul><span id="more"></span><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-web&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//SpringBoot官方没有提供对认证服务的支持，需要自己搭建，</span></span><br><span class="line"><span class="comment">//我们可以使用SpringSecurity提供的spring-security-oauth2-autoconfigure进行搭建，</span></span><br><span class="line"><span class="comment">//不过SpringSecurity OAuth2项目目前已被弃用，SpringSecurity团队已决定不再为授权服务器提供支持,</span></span><br><span class="line"><span class="comment">//所以，在这个版本里你会看到很多弃用的类，如果不想看到类名称上出现烦人的横线，可以使用2.2.10这个版本，测试过程也没发现什么问题的。</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.3.4.RELEASE&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目中使用了lombok简少代码量，非必须依赖</span></span><br><span class="line">compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="代码说明"><a href="#代码说明" class="headerlink" title="代码说明"></a>代码说明</h2><h3 id="SecurityConfig"><a href="#SecurityConfig" class="headerlink" title="SecurityConfig"></a>SecurityConfig</h3><ul><li><p>用于配置可以登录系统的用户及其权限，也就是认证服务器的用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2authserverdemo.security.CustomSecurityProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.BeanIds;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.WebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.http.SessionCreationPolicy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.provisioning.InMemoryUserDetailsManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Spring-Security配置类,继承WebSecurityConfigurerAdapter</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomSecurityProperties customSecurityProperties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 引入密码加密类</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为了测试方便，这里使用内存用户模型，真实系统请使用基于RBAC的权限模型</span></span><br><span class="line"><span class="comment">     * 用户策略设置，这里使用内存用户策略，自定义策略需要实现UserDetailsService接口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetailsService <span class="title">userDetailsService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InMemoryUserDetailsManager inMemoryUserDetailsManager = <span class="keyword">new</span> InMemoryUserDetailsManager();</span><br><span class="line">        User.UserBuilder builder = User.builder().passwordEncoder(passwordEncoder()::encode);</span><br><span class="line">        inMemoryUserDetailsManager.createUser(builder.username(<span class="string">&quot;admin&quot;</span>).password(<span class="string">&quot;123456&quot;</span>).roles(<span class="string">&quot;admin&quot;</span>).build());</span><br><span class="line">        inMemoryUserDetailsManager.createUser(builder.username(<span class="string">&quot;guest&quot;</span>).password(<span class="string">&quot;123456&quot;</span>).roles(<span class="string">&quot;guest&quot;</span>).build());</span><br><span class="line">        inMemoryUserDetailsManager.createUser(builder.username(<span class="string">&quot;user&quot;</span>).password(<span class="string">&quot;123456&quot;</span>).roles(<span class="string">&quot;user&quot;</span>).build());</span><br><span class="line">        <span class="keyword">return</span> inMemoryUserDetailsManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定不拦截的路径规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//设置不需要拦截的路径，也就是不需要认证的路径</span></span><br><span class="line">        web.ignoring().antMatchers(customSecurityProperties.getIgnoring());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置URL访问授权,必须配置authorizeRequests(),否则启动报错,说是没有启用security技术。</span></span><br><span class="line"><span class="comment">     * 注意:在这里的身份进行认证与授权没有涉及到OAuth的技术：当访问要授权的URL时,请求会被DelegatingFilterProxy拦截,</span></span><br><span class="line"><span class="comment">     * 如果还没有授权,请求就会被重定向到登录界面。在登录成功(身份认证并授权)后,请求被重定向至之前访问的URL。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> http</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.formLogin()</span><br><span class="line">                .permitAll(); <span class="comment">//登记界面，默认是permitAll</span></span><br><span class="line"></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .antMatchers(customSecurityProperties.getPermitAll()).permitAll() <span class="comment">//不用身份认证可以访问</span></span><br><span class="line">                .anyRequest().authenticated(); <span class="comment">//其它的请求要求必须有身份认证</span></span><br><span class="line"></span><br><span class="line">        http.csrf().disable();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启跨域</span></span><br><span class="line">        http.cors();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// session管理</span></span><br><span class="line">        http.sessionManagement()</span><br><span class="line">                .sessionCreationPolicy(SessionCreationPolicy.IF_REQUIRED);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 支持 password 模式(配置)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean(name = BeanIds.AUTHENTICATION_MANAGER)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AuthenticationManager <span class="title">authenticationManagerBean</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.authenticationManagerBean();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跨域配置类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CorsConfigurationSource <span class="title">corsConfigurationSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        CorsConfiguration corsConfiguration = <span class="keyword">new</span> CorsConfiguration().applyPermitDefaultValues();</span><br><span class="line">        <span class="comment">//开放哪些ip、端口、域名的访问权限，星号表示开放所有域</span></span><br><span class="line">        corsConfiguration.addAllowedOrigin(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//corsConfiguration.setAllowedOrigins(Arrays.asList(&quot;http://localhost:8080&quot;,&quot;http://localhost:8081&quot;));</span></span><br><span class="line">        <span class="comment">//开放哪些Http方法，允许跨域访问</span></span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//corsConfiguration.setAllowedMethods(Arrays.asList(&quot;GET&quot;,&quot;POST&quot;, &quot;PUT&quot;, &quot;DELETE&quot;));</span></span><br><span class="line">        <span class="comment">//允许HTTP请求中的携带哪些Header信息</span></span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//是否允许发送Cookie信息</span></span><br><span class="line">        corsConfiguration.setAllowCredentials(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加映射路径，“/**”表示对所有的路径实行全局跨域访问权限的设置</span></span><br><span class="line">        UrlBasedCorsConfigurationSource configSource = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line">        configSource.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, corsConfiguration);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> configSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="CustomSecurityProperties"><a href="#CustomSecurityProperties" class="headerlink" title="CustomSecurityProperties"></a>CustomSecurityProperties</h3></li><li><p>自定义属性配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;security&quot;)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomSecurityProperties</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不需要验证的路径数组</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> String[] permitAll;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不需要拦截的路径数组</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> String[] ignoring;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#springsecurity 自定义属性</span></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line">  <span class="comment">#不需要验证的路径</span></span><br><span class="line">  <span class="attr">permitAll:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/redirect/**</span></span><br><span class="line">  <span class="attr">ignoring:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/webjars/**</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/**/*.js/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/**/*.css</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/static/**</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="AuthServerConfig"><a href="#AuthServerConfig" class="headerlink" title="AuthServerConfig"></a>AuthServerConfig</h3><ul><li>认证服务器的token关联，本例基于jwt</li><li>注意这里定义的是抽象类，还没有声明客户端的配置，具体参加下文说明<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.password.PasswordEncoder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.TokenEnhancer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.TokenEnhancerChain;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.TokenStore;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthServerConfig</span> <span class="keyword">extends</span> <span class="title">AuthorizationServerConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationManager authenticationManager;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> TokenStore jwtTokenStore;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> JwtAccessTokenConverter jwtAccessTokenConverter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> TokenEnhancer jwtTokenEnhancer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.增加jwt 增强模式</span></span><br><span class="line"><span class="comment">     * 2.调用userDetailsService实现UserDetailsService接口,对客户端信息进行认证与授权</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> endpoints</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthorizationServerEndpointsConfigurer endpoints)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//   jwt 增强模式</span></span><br><span class="line">        <span class="comment">//   对令牌的增强操作就在enhance方法中</span></span><br><span class="line">        <span class="comment">//   面在配置类中,将TokenEnhancer和JwtAccessConverter加到一个enhancerChain中</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">//   通俗点讲它做了两件事：</span></span><br><span class="line">        <span class="comment">//   给JWT令牌中设置附加信息和jti：jwt的唯一身份标识,主要用来作为一次性token,从而回避重放攻击</span></span><br><span class="line">        <span class="comment">//   判断请求中是否有refreshToken,如果有,就重新设置refreshToken并加入附加信息</span></span><br><span class="line">        TokenEnhancerChain enhancerChain = <span class="keyword">new</span> TokenEnhancerChain();</span><br><span class="line">        List&lt;TokenEnhancer&gt; enhancerList = <span class="keyword">new</span> ArrayList&lt;TokenEnhancer&gt;();</span><br><span class="line">        enhancerList.add(jwtTokenEnhancer);</span><br><span class="line">        enhancerList.add(jwtAccessTokenConverter);</span><br><span class="line">        enhancerChain.setTokenEnhancers(enhancerList); <span class="comment">//将自定义Enhancer加入EnhancerChain的delegates数组中</span></span><br><span class="line"></span><br><span class="line">        endpoints</span><br><span class="line">                <span class="comment">//设置tokenStore</span></span><br><span class="line">                .tokenStore(jwtTokenStore)</span><br><span class="line">                <span class="comment">//支持 refresh_token 模式</span></span><br><span class="line">                .userDetailsService(userDetailsService)</span><br><span class="line">                <span class="comment">//支持 password 模式</span></span><br><span class="line">                .authenticationManager(authenticationManager)</span><br><span class="line">                <span class="comment">//token扩展属性</span></span><br><span class="line">                .tokenEnhancer(enhancerChain)</span><br><span class="line">                <span class="comment">//设置token转换器</span></span><br><span class="line">                .accessTokenConverter(jwtAccessTokenConverter)</span><br><span class="line">                <span class="comment">//设置每次通过refresh_token获取新的access_token时，是否重新生成一个新的refresh_token。</span></span><br><span class="line">                <span class="comment">//默认true，不重新生成</span></span><br><span class="line">                <span class="comment">//.reuseRefreshTokens(true)</span></span><br><span class="line">                <span class="comment">//设置允许处理的请求类型</span></span><br><span class="line">                .allowedTokenEndpointRequestMethods(HttpMethod.GET,HttpMethod.POST);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthorizationServerSecurityConfigurer security)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        security</span><br><span class="line">                <span class="comment">//获取公钥的请求全部允许</span></span><br><span class="line">                .tokenKeyAccess(<span class="string">&quot;permitAll()&quot;</span>)</span><br><span class="line">                <span class="comment">//验证token有效性的请求需要先登录认证</span></span><br><span class="line">                .checkTokenAccess(<span class="string">&quot;isAuthenticated()&quot;</span>)</span><br><span class="line">                <span class="comment">//允许客户端form表单认证，就是可以将client_id和client_secret放到form中提交，否则必须使用Basic认证</span></span><br><span class="line">                .allowFormAuthenticationForClients();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="JwtTokenConfig"><a href="#JwtTokenConfig" class="headerlink" title="JwtTokenConfig"></a>JwtTokenConfig</h3><ul><li>本例基于JWTToken</li><li>支持两种密钥策略，对称密钥和基于jks证书的非对称密钥<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2authserverdemo.security.jwt.JWTokenEnhancer;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2authserverdemo.security.jwt.JwtTokenProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.TokenEnhancer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.TokenStore;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.store.JwtTokenStore;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.store.KeyStoreKeyFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JwtTokenConfig配置类</span></span><br><span class="line"><span class="comment"> * 使用TokenStore将引入JwtTokenStore</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注：Spring-Sceurity使用TokenEnhancer和JwtAccessConverter增强jwt令牌</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtTokenConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtTokenProperties jwtTokenProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TokenStore <span class="title">jwtTokenStore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> JwtTokenStore(jwtAccessTokenConverter());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JwtAccessTokenConverter：TokenEnhancer的子类,帮助程序在JWT编码的令牌值和OAuth身份验证信息之间进行转换(在两个方向上),同时充当TokenEnhancer授予令牌的时间。</span></span><br><span class="line"><span class="comment">     * 自定义的JwtAccessTokenConverter：把自己设置的jwt签名加入accessTokenConverter中(这里设置&#x27;demo&#x27;,项目可将此在配置文件设置)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JwtAccessTokenConverter <span class="title">jwtAccessTokenConverter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JwtAccessTokenConverter accessTokenConverter = <span class="keyword">new</span> JwtAccessTokenConverter();</span><br><span class="line"></span><br><span class="line">        String type = jwtTokenProperties.getType();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;secret&quot;</span>:</span><br><span class="line">                <span class="comment">//设置加密token的密码</span></span><br><span class="line">                accessTokenConverter.setSigningKey(jwtTokenProperties.getSecret());</span><br><span class="line">                <span class="comment">//实际上资源服务器只需要设置验证token的密码</span></span><br><span class="line">                accessTokenConverter.setVerifierKey(jwtTokenProperties.getSecret());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;jks&quot;</span>:</span><br><span class="line">                <span class="comment">//非对称加密,jks证书</span></span><br><span class="line">                KeyStoreKeyFactory keyStoreKeyFactory =</span><br><span class="line">                        <span class="keyword">new</span> KeyStoreKeyFactory(jwtTokenProperties.getJksKeyFileResource(), jwtTokenProperties.getJksStorePassword().toCharArray());</span><br><span class="line">                accessTokenConverter.setKeyPair(keyStoreKeyFactory.getKeyPair(jwtTokenProperties.getJksKeyAlias(),jwtTokenProperties.getJksKeyPassword().toCharArray()));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;请正确配置密钥类型:secret,jks&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> accessTokenConverter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 引入自定义JWTokenEnhancer:</span></span><br><span class="line"><span class="comment">     * 自定义JWTokenEnhancer实现TokenEnhancer并重写enhance方法,将附加信息加入oAuth2AccessToken中</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TokenEnhancer <span class="title">jwtTokenEnhancer</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> JWTokenEnhancer();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="JWTokenEnhancer"><a href="#JWTokenEnhancer" class="headerlink" title="JWTokenEnhancer"></a>JWTokenEnhancer</h3><ul><li>jwt自定义属性<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.security.jwt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.common.DefaultOAuth2AccessToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.common.OAuth2AccessToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.OAuth2Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.provider.token.TokenEnhancer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * TokenEnhancer：在AuthorizationServerTokenServices 实现存储访问令牌之前增强访问令牌的策略。</span></span><br><span class="line"><span class="comment"> * 自定义TokenEnhancer的代码：把附加信息加入oAuth2AccessToken中</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JWTokenEnhancer</span> <span class="keyword">implements</span> <span class="title">TokenEnhancer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重写enhance方法,将附加信息加入oAuth2AccessToken中</span></span><br><span class="line"><span class="comment">     * 这里只是提供附加信息的方式，没需要可以不配置这个类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> oAuth2AccessToken</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> oAuth2Authentication</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OAuth2AccessToken <span class="title">enhance</span><span class="params">(OAuth2AccessToken oAuth2AccessToken, OAuth2Authentication oAuth2Authentication)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">        User user = (User) oAuth2Authentication.getUserAuthentication().getPrincipal();</span><br><span class="line">        map.put(<span class="string">&quot;_username&quot;</span>, user.getUsername());</span><br><span class="line">        map.put(<span class="string">&quot;_authorities&quot;</span>, user.getAuthorities());</span><br><span class="line">        map.put(<span class="string">&quot;_jwt-ext&quot;</span>, <span class="string">&quot;JWT 扩展信息&quot;</span>);</span><br><span class="line">        ((DefaultOAuth2AccessToken) oAuth2AccessToken).setAdditionalInformation(map);</span><br><span class="line">        <span class="keyword">return</span> oAuth2AccessToken;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="JwtTokenProperties"><a href="#JwtTokenProperties" class="headerlink" title="JwtTokenProperties"></a>JwtTokenProperties</h3><ul><li><p>自定义的jwt相关属性类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.security.jwt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.PathResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.Resource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Jwt工具类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;jwt&quot;)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtTokenProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密钥类型:secret，jks</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String secret;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * accessToken过期时间，单位秒</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer accessTokenValiditySeconds;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * refreshToken过期时间，单位秒</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer refreshTokenValiditySeconds;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jks证书文件路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String jksKeyFile;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jks证书密钥库密码</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> String jksStorePassword;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jks证书密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String jksKeyPassword;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * jks证书别名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String jksKeyAlias;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取jks证书Resource</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Resource <span class="title">getJksKeyFileResource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Resource resource;</span><br><span class="line">        <span class="keyword">if</span> (jksKeyFile.startsWith(<span class="string">&quot;classpath:&quot;</span>)) &#123;</span><br><span class="line">            resource = <span class="keyword">new</span> ClassPathResource(jksKeyFile.replace(<span class="string">&quot;classpath:&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resource = <span class="keyword">new</span> PathResource(Paths.get(jksKeyFile));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义jwt属性信息</span></span><br><span class="line"><span class="attr">jwt:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">jks</span> <span class="comment"># 密钥类型：secret，jks</span></span><br><span class="line">  <span class="comment">#  SECRET 是签名密钥，只生成一次即可，生成方法：</span></span><br><span class="line">  <span class="comment">#  Key key = Keys.secretKeyFor(SignatureAlgorithm.HS512);</span></span><br><span class="line">  <span class="comment">#  String secretString = Encoders.BASE64.encode(key.getEncoded()); # 使用 BASE64 编码</span></span><br><span class="line">  <span class="attr">secret:</span> <span class="string">Ayl7bn+aFwxlakekKCJiqUYguKS80bEVb7OZtd2qfZjdCbAwKxDmM6PWezGy5JIkiJfemtHNPc7Av1l+OWQSqQ==</span> <span class="comment"># 秘钥</span></span><br><span class="line">  <span class="attr">accessTokenValiditySeconds:</span> <span class="number">43200</span>   <span class="comment"># access_token过期时间 (秒) ,默认值12小时</span></span><br><span class="line">  <span class="attr">refreshTokenValiditySeconds:</span> <span class="number">2592000</span> <span class="comment"># refresh_token过期时间 (秒) ,默认值30天</span></span><br><span class="line">  <span class="attr">jksKeyFile:</span> <span class="string">classpath:oauth2_key.jks</span></span><br><span class="line">  <span class="attr">jksStorePassword:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">jksKeyAlias:</span> <span class="string">oauth2</span></span><br><span class="line">  <span class="attr">jksKeyPassword:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><ul><li>Oauth2支持两种客户端配置方式，基于内存和基于数据库<h4 id="AuthServerConfigByMemory"><a href="#AuthServerConfigByMemory" class="headerlink" title="AuthServerConfigByMemory"></a>AuthServerConfigByMemory</h4></li><li>基于内存<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2authserverdemo.security.jwt.JwtTokenProperties;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAuthorizationServer</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(prefix = &quot;oauth2.clients.config&quot;,name = &quot;jdbc&quot;,havingValue = &quot;false&quot;,matchIfMissing = true)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthServerConfigByMemory</span> <span class="keyword">extends</span> <span class="title">AuthServerConfig</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JwtTokenProperties jwtTokenProperties;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置OAuth2的客户端信息：clientId、client_secret、authorization_type、redirect_url等。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clients</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(ClientDetailsServiceConfigurer clients)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        clients.inMemory()</span><br><span class="line">                .withClient(<span class="string">&quot;postman&quot;</span>)</span><br><span class="line">                .secret(passwordEncoder.encode(<span class="string">&quot;postman&quot;</span>))</span><br><span class="line">                .scopes(<span class="string">&quot;any&quot;</span>,<span class="string">&quot;all&quot;</span>) <span class="comment">//指定用户的访问范围</span></span><br><span class="line">                <span class="comment">//.autoApprove(true) //设置true跳过用户确认授权操作页面直接同意，默认false，必须设置scopes</span></span><br><span class="line">                .autoApprove(<span class="string">&quot;any&quot;</span>) <span class="comment">//指定客户端访问哪些范围时，跳过用户确认授权操作页面直接同意，必须设置scopes，请求参数必须加上&amp;scope=any</span></span><br><span class="line">                .authorizedGrantTypes(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;authorization_code&quot;</span>, <span class="string">&quot;refresh_token&quot;</span>,<span class="string">&quot;implicit&quot;</span>,<span class="string">&quot;client_credentials&quot;</span>)</span><br><span class="line">                .redirectUris(<span class="string">&quot;http://localhost:8080/redirect&quot;</span>)</span><br><span class="line">                .accessTokenValiditySeconds(jwtTokenProperties.getAccessTokenValiditySeconds()) <span class="comment">//默认12小时</span></span><br><span class="line">                .refreshTokenValiditySeconds(jwtTokenProperties.getRefreshTokenValiditySeconds()) <span class="comment">//默认30天</span></span><br><span class="line">                .and()</span><br><span class="line">                .withClient(<span class="string">&quot;demo-client&quot;</span>)</span><br><span class="line">                .secret(passwordEncoder.encode(<span class="string">&quot;demo-client&quot;</span>))</span><br><span class="line">                .scopes(<span class="string">&quot;any&quot;</span>)</span><br><span class="line">                .authorizedGrantTypes(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;authorization_code&quot;</span>, <span class="string">&quot;refresh_token&quot;</span>,<span class="string">&quot;implicit&quot;</span>)</span><br><span class="line">                .redirectUris(<span class="string">&quot;http://localhost:8080/redirect&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;OAuth2的client信息基于内存&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h4 id="AuthServerConfigByJDBC"><a href="#AuthServerConfigByJDBC" class="headerlink" title="AuthServerConfigByJDBC"></a>AuthServerConfigByJDBC</h4><ul><li><p>基于数据库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAuthorizationServer</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(prefix = &quot;oauth2.clients.config&quot;, name = &quot;jdbc&quot;, havingValue = &quot;true&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthServerConfigByJDBC</span> <span class="keyword">extends</span> <span class="title">AuthServerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置OAuth2的客户端信息：clientId、client_secret、authorization_type、redirect_url等。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clients</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(ClientDetailsServiceConfigurer clients)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//方式1 也可以自定义ClientDetailsService的实现类</span></span><br><span class="line">        <span class="comment">//JdbcClientDetailsService detailsService = new JdbcClientDetailsService(dataSource);</span></span><br><span class="line">        <span class="comment">//detailsService.setPasswordEncoder(passwordEncoder);</span></span><br><span class="line">        <span class="comment">//clients.withClientDetails(detailsService);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//方式2 等价于方式1</span></span><br><span class="line">        clients.jdbc(dataSource)</span><br><span class="line">                <span class="comment">//指定密码的加密算法</span></span><br><span class="line">                .passwordEncoder(passwordEncoder);</span><br><span class="line">        log.info(<span class="string">&quot;OAuth2的client信息基于数据库&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>为了支持jdbc需要引入依赖</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mysql</span></span><br><span class="line">runtimeOnly <span class="string">&#x27;mysql:mysql-connector-java&#x27;</span></span><br><span class="line"><span class="comment">//为了使用datasource</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-jdbc&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#数据源配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?useUnicode=true&amp;characterEncoding=utf-8&amp;useTimezone=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">newpwd</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">30000</span> <span class="comment">#毫秒，默认30秒</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">600000</span>      <span class="comment">#毫秒，默认10分钟</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">1800000</span>     <span class="comment">#毫秒，默认30分钟</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">10</span>     <span class="comment">#默认10</span></span><br></pre></td></tr></table></figure></li><li><p>数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- oauth2中规定的数据表,需要手动创建,一般项目中提供服务接口插入,参数由用户定义,在请求时会自动查询服务器中对应的参数数据匹配认证</span></span><br><span class="line"># 客户端注册信息表</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `oauth_client_details` (</span><br><span class="line">    `client_id` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;客户端的id&#x27;</span>,</span><br><span class="line">    `resource_ids` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;资源服务器的id，多个用，(逗号)隔开&#x27;</span>,</span><br><span class="line">    `client_secret` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;客户端的秘钥，需要PasswordEncoder加密&#x27;</span>,</span><br><span class="line">    `<span class="keyword">scope</span>` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;客户端的访问范围，多个逗号分隔&#x27;</span>,</span><br><span class="line">    `authorized_grant_types` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;认证的方式，可选值 授权码模式:authorization_code,密码模式:password,刷新token: refresh_token, 隐式模式: implicit: 客户端模式: client_credentials。支持多个用逗号分隔&#x27;</span>,</span><br><span class="line">    `web_server_redirect_uri` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;授权码模式认证成功跳转的地址。authorization_code和implicit需要该值进行校验，注册时填写，多个逗号分隔&#x27;</span>,</span><br><span class="line">    `authorities` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    `access_token_validity` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;access_token的有效时间(秒),默认(60 * 60 * 12,12小时)&#x27;</span>,</span><br><span class="line">    `refresh_token_validity` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;refresh_token有效期(秒)，默认(60 *60 * 24 * 30, 30天)&#x27;</span>,</span><br><span class="line">    `additional_information` <span class="type">varchar</span>(<span class="number">4096</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;附加信息，值必须是json格式&#x27;</span>,</span><br><span class="line">    `autoapprove` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;默认false,适用于authorization_code模式,设置用户是否自动approval操作,设置true跳过用户确认授权操作页面，直接跳到redirect_uri，也可以这只scope中设置的值，表示只有这个scope会跳过授权页面，多个scope逗号分隔&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`client_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 ROW_FORMAT<span class="operator">=</span><span class="keyword">DYNAMIC</span>;</span><br><span class="line"></span><br><span class="line"># 初始化数据，密码要经过PasswordEncoder加密</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `oauth_client_details` <span class="keyword">VALUES</span> (<span class="string">&#x27;postman&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;$2a$10$Owubqs9VaN.vmskZ2B0UTe0GmOMwgTmhGtlIFBjrfCz2glBqISHSu&#x27;</span>, <span class="string">&#x27;any,all&#x27;</span>, <span class="string">&#x27;authorization_code,refresh_token,implicit,password,client_credentials&#x27;</span>, <span class="string">&#x27;http://localhost:8080/redirect,http://localhost:8088/postman/login&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">42300</span>, <span class="number">2592000</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;any&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `oauth_client_details` <span class="keyword">VALUES</span> (<span class="string">&#x27;demo-client&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;$2a$10$v/B9.6c9NUXFbJDHqc28he6VWeyJNOBOD1UI7bwBDfBZTwY4zzcda&#x27;</span>, <span class="string">&#x27;any&#x27;</span>, <span class="string">&#x27;authorization_code,refresh_token,password&#x27;</span>, <span class="string">&#x27;http://localhost:8080/redirect&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">42300</span>, <span class="number">2592000</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>为了方便在内存和jdbc中切换，增加了自定义属性</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#oauth2的client信息是基于内存还是基于数据库，如果不配置，默认为基于内存</span></span><br><span class="line"><span class="attr">oauth2:</span></span><br><span class="line">  <span class="attr">clients:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">jdbc:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="jks证书创建"><a href="#jks证书创建" class="headerlink" title="jks证书创建"></a>jks证书创建</h3><h4 id="生成jks证书"><a href="#生成jks证书" class="headerlink" title="生成jks证书"></a>生成jks证书</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 默认证书有效期3个月</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> keytool -genkeypair -<span class="built_in">alias</span> oauth2 -keyalg RSA -keysize 2048 -keypass 123456 -keystore oauth2_key.jks -storepass 123456</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 指定证书有效期，这里设置有效期大约10年</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> keytool -genkeypair -<span class="built_in">alias</span> oauth2 -keyalg RSA -keysize 2048 -validity 36500 -keypass 123456 -keystore oauth2_key.jks -storepass 123456</span></span><br><span class="line"></span><br><span class="line">您的名字与姓氏是什么?</span><br><span class="line">  [Unknown]:  han</span><br><span class="line">您的组织单位名称是什么?</span><br><span class="line">  [Unknown]:  han</span><br><span class="line">您的组织名称是什么?</span><br><span class="line">  [Unknown]:  han</span><br><span class="line">您所在的城市或区域名称是什么?</span><br><span class="line">  [Unknown]:  bj</span><br><span class="line">您所在的省/市/自治区名称是什么?</span><br><span class="line">  [Unknown]:  bj</span><br><span class="line">该单位的双字母国家/地区代码是什么?</span><br><span class="line">  [Unknown]:  zh</span><br><span class="line">CN=han, OU=han, O=han, L=bj, ST=bj, C=zh是否正确?</span><br><span class="line">  [否]:  y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Warning:</span><br><span class="line">JKS 密钥库使用专用格式。建议使用 &quot;keytool -importkeystore -srckeystore oauth2_key.jks -destkeystore oauth2_key.jks -deststoretype pkcs12&quot; 迁移到行业标准格式 PKCS12。</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 按照警告执行如下命令</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> keytool -importkeystore -srckeystore oauth2_key.jks -destkeystore oauth2_key.jks -deststoretype pkcs12</span></span><br><span class="line">输入源密钥库口令:</span><br><span class="line">已成功导入别名 oauth2 的条目。</span><br><span class="line">已完成导入命令: 1 个条目成功导入, 0 个条目失败或取消</span><br><span class="line"></span><br><span class="line">Warning:</span><br><span class="line">已将 &quot;oauth2_key.jks&quot; 迁移到 Non JKS/JCEKS。将 JKS 密钥库作为 &quot;oauth2_key.jks.old&quot; 进行了备份。</span><br></pre></td></tr></table></figure><h4 id="导出公钥"><a href="#导出公钥" class="headerlink" title="导出公钥"></a>导出公钥</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> keytool -list -rfc --keystore oauth2_key.jks | openssl x509 -inform pem -pubkey</span></span><br><span class="line">输入密钥库口令:  123456</span><br><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmVdbw3XtFamdasjItlko</span><br><span class="line">m8SyJiH0DnSUm1tqJDHY9orHA+0oa+VAlvxiHHBegKMX6FmCX3HAoVzHuAlWAZp0</span><br><span class="line">FyV0SUR4/tuOKOw/N7HbKGa/JZJSfaNdJAEobRxzd8woaLNlCRLelzDPhMy9kGtp</span><br><span class="line">x+Kc60smeo6XpC7RT25Mf5DRvKRJo4RGbPQNj18hWKZtY/TFZYySpa57eI9VOM5u</span><br><span class="line">fvWJkh3Jm5cOXHiHScmF4mdNATR3XQTHXD+TDu0rLgn7H4ap9uYDRTNVGVJ/JfYu</span><br><span class="line">aCrzszMFt4b+JNxz1UL42tTgbtKj8TxUrTRGTI/7KiwD5wjtpISSxlqoK1c0qgCh</span><br><span class="line">KQIDAQAB</span><br><span class="line">-----END PUBLIC KEY-----</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIDQTCCAimgAwIBAgIEZ0BO+jANBgkqhkiG9w0BAQsFADBRMQswCQYDVQQGEwJ6</span><br><span class="line">aDELMAkGA1UECBMCYmoxCzAJBgNVBAcTAmJqMQwwCgYDVQQKEwNoYW4xDDAKBgNV</span><br><span class="line">BAsTA2hhbjEMMAoGA1UEAxMDaGFuMB4XDTIwMTEwODEyNDI0M1oXDTIxMDIwNjEy</span><br><span class="line">NDI0M1owUTELMAkGA1UEBhMCemgxCzAJBgNVBAgTAmJqMQswCQYDVQQHEwJiajEM</span><br><span class="line">MAoGA1UEChMDaGFuMQwwCgYDVQQLEwNoYW4xDDAKBgNVBAMTA2hhbjCCASIwDQYJ</span><br><span class="line">KoZIhvcNAQEBBQADggEPADCCAQoCggEBAJlXW8N17RWpnWrIyLZZKJvEsiYh9A50</span><br><span class="line">lJtbaiQx2PaKxwPtKGvlQJb8YhxwXoCjF+hZgl9xwKFcx7gJVgGadBcldElEeP7b</span><br><span class="line">jijsPzex2yhmvyWSUn2jXSQBKG0cc3fMKGizZQkS3pcwz4TMvZBracfinOtLJnqO</span><br><span class="line">l6Qu0U9uTH+Q0bykSaOERmz0DY9fIVimbWP0xWWMkqWue3iPVTjObn71iZIdyZuX</span><br><span class="line">Dlx4h0nJheJnTQE0d10Ex1w/kw7tKy4J+x+GqfbmA0UzVRlSfyX2Lmgq87MzBbeG</span><br><span class="line">/iTcc9VC+NrU4G7So/E8VK00RkyP+yosA+cI7aSEksZaqCtXNKoAoSkCAwEAAaMh</span><br><span class="line">MB8wHQYDVR0OBBYEFKM+xW8pT4EHc+5/svExkEKw8c3CMA0GCSqGSIb3DQEBCwUA</span><br><span class="line">A4IBAQB3OHZ1BrT+2hUFxhAk7K/7hC8tHVF8iRXhGBdnZWHNz2GRfzxOeyS4Amkp</span><br><span class="line">wCixoKg9GPhUL1fxBya7Z7wjn4jS5f9b5q40c/fP23zIrmbJ3rsqlMnx3vqrcnJB</span><br><span class="line">KF1l9i9h4iLDoTSS1HC42CuPSCSV/4/g2zXrZPWMVMHPHM9Ul8q+aTE7VaRzRsf8</span><br><span class="line">h7xCeqZXRg2z+wFHH4B1LMcfOHwpGWVJ46xgNqt3cx4IovVTcuXbcQGKgd2+/UuQ</span><br><span class="line">vugI0kWUCOH+CME9wbncIEJlDT1510GJIyt4EWyU3nio+vsLnlKz2jRP7QSE5dxY</span><br><span class="line">ps3Y1u9/nrBl1yK4+KEFAguUikbp</span><br><span class="line">-----END CERTIFICATE-----</span><br></pre></td></tr></table></figure><ul><li>这段就是公钥，保存到文件即可<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmVdbw3XtFamdasjItlko</span><br><span class="line">m8SyJiH0DnSUm1tqJDHY9orHA+0oa+VAlvxiHHBegKMX6FmCX3HAoVzHuAlWAZp0</span><br><span class="line">FyV0SUR4/tuOKOw/N7HbKGa/JZJSfaNdJAEobRxzd8woaLNlCRLelzDPhMy9kGtp</span><br><span class="line">x+Kc60smeo6XpC7RT25Mf5DRvKRJo4RGbPQNj18hWKZtY/TFZYySpa57eI9VOM5u</span><br><span class="line">fvWJkh3Jm5cOXHiHScmF4mdNATR3XQTHXD+TDu0rLgn7H4ap9uYDRTNVGVJ/JfYu</span><br><span class="line">aCrzszMFt4b+JNxz1UL42tTgbtKj8TxUrTRGTI/7KiwD5wjtpISSxlqoK1c0qgCh</span><br><span class="line">KQIDAQAB</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure></li></ul><h4 id="查看密钥信息"><a href="#查看密钥信息" class="headerlink" title="查看密钥信息"></a>查看密钥信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> keytool -list -v -keystore oauth2_key.jks</span></span><br><span class="line">输入密钥库口令:</span><br><span class="line">密钥库类型: PKCS12</span><br><span class="line">密钥库提供方: SUN</span><br><span class="line"></span><br><span class="line">您的密钥库包含 1 个条目</span><br><span class="line"></span><br><span class="line">别名: oauth2</span><br><span class="line">创建日期: 2020-11-9</span><br><span class="line">条目类型: PrivateKeyEntry</span><br><span class="line">证书链长度: 1</span><br><span class="line">证书[1]:</span><br><span class="line">所有者: CN=han, OU=han, O=han, L=bj, ST=bj, C=zh</span><br><span class="line">发布者: CN=han, OU=han, O=han, L=bj, ST=bj, C=zh</span><br><span class="line">序列号: 67404efa</span><br><span class="line">有效期为 Sun Nov 08 20:42:43 CST 2020 至 Sat Feb 06 20:42:43 CST 2021</span><br><span class="line">证书指纹:</span><br><span class="line">         MD5:  3E:15:19:80:91:10:00:A8:63:A6:5E:19:5A:0E:A9:E5</span><br><span class="line">         SHA1: E8:BB:68:99:7E:33:6D:51:40:EF:C0:AC:91:A6:93:15:ED:FE:F8:3A</span><br><span class="line">         SHA256: CE:C7:C3:BF:BB:94:28:64:1B:EC:1C:F3:A9:DC:40:C5:53:AD:F2:27:01:83:8D:37:90:E0:EB:DB:C9:73:A5:5C</span><br><span class="line">签名算法名称: SHA256withRSA</span><br><span class="line">主体公共密钥算法: 2048 位 RSA 密钥</span><br><span class="line">版本: 3</span><br><span class="line"></span><br><span class="line">扩展:</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">1: ObjectId: 2.5.29.14 Criticality=<span class="literal">false</span></span></span><br><span class="line">SubjectKeyIdentifier [</span><br><span class="line">KeyIdentifier [</span><br><span class="line">0000: A3 3E C5 6F 29 4F 81 07   73 EE 7F B2 F1 31 90 42  .&gt;.o)O..s....1.B</span><br><span class="line">0010: B0 F1 CD C2                                        ....</span><br><span class="line">]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">*******************************************</span><br><span class="line">*******************************************</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="OAuth2支持获取access-token的方式"><a href="#OAuth2支持获取access-token的方式" class="headerlink" title="OAuth2支持获取access_token的方式"></a>OAuth2支持获取access_token的方式</h2><ul><li>authorization_code 验证码模式</li><li>implicit 隐式模式</li><li>password 密码模式</li><li>client_credentials 客户端模式</li><li>refresh_token 刷新token模式</li></ul><h3 id="Oauth2提供的默认端点（endpoints）"><a href="#Oauth2提供的默认端点（endpoints）" class="headerlink" title="Oauth2提供的默认端点（endpoints）"></a>Oauth2提供的默认端点（endpoints）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/oauth/authorize：授权端点 AuthorizationEndpoint 按照OAuth 2.0规范的授权实现</span><br><span class="line">/oauth/token：令牌端点 TokenEndpoint 按照OAuth 2.0规范请求Token</span><br><span class="line">/oauth/confirm_access：用户确认授权提交端点</span><br><span class="line">/oauth/error：授权服务错误信息端点</span><br><span class="line">/oauth/check_token：用于资源服务访问的令牌解析端点 CheckTokenEndpoint 解码Client的Access Token用来检查和确认生成的Token</span><br><span class="line">/oauth/token_key：提供公有密匙的端点，如果使用JWT令牌的话 TokenKeyEndpoint 提供JWT编码的Token</span><br></pre></td></tr></table></figure><h3 id="验证码模式–authorization-code，最常用的模式"><a href="#验证码模式–authorization-code，最常用的模式" class="headerlink" title="验证码模式–authorization_code，最常用的模式"></a>验证码模式–authorization_code，最常用的模式</h3><ol><li><p>获取验证码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">浏览器GET</span><br><span class="line">http://localhost:8080/oauth/authorize?client_id=postman&amp;response_type=code&amp;redirect_uri=http://localhost:8080/redirect</span><br></pre></td></tr></table></figure><ul><li>1.1 参数说明<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">response_type</span>=<span class="string">code #授权码认证，固定值</span></span><br><span class="line"><span class="attr">client_id</span>=<span class="string">postman #客户端id</span></span><br><span class="line"><span class="attr">redirect_uri</span>=<span class="string">http://localhost:8080/redirect #重定向url，这个值要与配置的值一致，配置这个值时可以配置一个不存在的路径</span></span><br><span class="line"><span class="attr">scope</span>=<span class="string">any 可选参数，指定请求范围，如果不希望跳转到确认页面而是直接通过，需要在代码中配置autoApprove(true)或者autoApprove(&quot;any&quot;)</span></span><br></pre></td></tr></table></figure></li><li>1.2 跳转到登录页面，使用<code>admin/123456</code>登录</li><li>1.3 登录成功后跳转到认证确认页面(如果不希望跳转到确认页面而是直接通过，需要在代码中配置autoApprove(true))，点击<code>Authorize</code>按钮，页面会跳转到<code>http://localhost:8080/redirect?code=7ak4gI</code></li><li>1.4 复制code的值进入第二步</li></ul></li><li><p>获取access_token和refresh_token</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line">http://localhost:8080/oauth/token?grant_type=authorization_code&amp;client_id=postman&amp;client_secret=postman&amp;redirect_uri=http://localhost:8080/redirect&amp;code=7ak4gI</span><br></pre></td></tr></table></figure><ul><li>2.1 code存在有效期，且只能使用一次，所以这个请求只能使用一次，参数说明<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">grant_type</span>=<span class="string">authorization_code #验证code并获取access_token，固定值</span></span><br><span class="line"><span class="attr">client_id</span>=<span class="string">postman #客户端id</span></span><br><span class="line"><span class="attr">client_secret</span>=<span class="string">postman #客户端密码</span></span><br><span class="line"><span class="attr">redirect_uri</span>=<span class="string">http://localhost:8080/redirect #重定向url</span></span><br><span class="line"><span class="attr">code</span>=<span class="string">7ak4gI #上一步中获取到的code值</span></span><br></pre></td></tr></table></figure></li><li>2.2 响应结果如下，默认access_token有效期12小时，refresh_token有效期30天<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;access_token&quot;</span>: <span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImV4cCI6MTYwNDYxMzI3MywiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiJhNzFhMDJhYy02NzgyLTRiODEtOGJiMi1mMGI3ZWVkODk2YTgiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.SKl-0KbdVvv3acqLlXre66PX-fFIruTLwOkCO3peby0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;token_type&quot;</span>: <span class="string">&quot;bearer&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;refresh_token&quot;</span>: <span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImF0aSI6ImE3MWEwMmFjLTY3ODItNGI4MS04YmIyLWYwYjdlZWQ4OTZhOCIsImV4cCI6MTYwNzE2MjA3MywiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiI5NzRjMDRkOS03NTQ0LTRjZTEtODMzZS05NjlmODMyNmRiNmQiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.vy16MpRikSFFz_n2zJEgI5Cfy1APNDrvnuP7Sj1jqJU&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;expires_in&quot;</span>: <span class="number">43199</span>,</span><br><span class="line">    <span class="attr">&quot;scope&quot;</span>: <span class="string">&quot;any&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jwt-ext&quot;</span>: <span class="string">&quot;JWT 扩展信息&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jti&quot;</span>: <span class="string">&quot;a71a02ac-6782-4b81-8bb2-f0b7eed896a8&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>2.3 复制refresh_token的值进入第三步</li><li>2.4 请求时支持base认证方式，详见3.3</li></ul></li><li><p>通过refresh_token获取新的access_token</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line">http://localhost:8080/oauth/token?grant_type=refresh_token&amp;client_id=postman&amp;client_secret=postman&amp;refresh_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImF0aSI6ImE3MWEwMmFjLTY3ODItNGI4MS04YmIyLWYwYjdlZWQ4OTZhOCIsImV4cCI6MTYwNzE2MjA3MywiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiI5NzRjMDRkOS03NTQ0LTRjZTEtODMzZS05NjlmODMyNmRiNmQiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.vy16MpRikSFFz_n2zJEgI5Cfy1APNDrvnuP7Sj1jqJU</span><br></pre></td></tr></table></figure><ul><li>3.1 参数说明，这个就是refresh_token模式，需要先获取到上一次的refresh_token<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">grant_type</span>=<span class="string">refresh_token #刷新token的参数，固定值</span></span><br><span class="line"><span class="attr">client_id</span>=<span class="string">postman #客户端id</span></span><br><span class="line"><span class="attr">client_secret</span>=<span class="string">postman #客户端密码</span></span><br><span class="line"><span class="attr">refresh_token</span>=<span class="string">xxx #上一步中获取的refresh_token值</span></span><br></pre></td></tr></table></figure></li><li>3.2 响应结果如下，获取到新的access_token和refresh_token，注意保存，access_token过期时，可以通过该请求重新获得新的access_token<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;access_token&quot;</span>: <span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImV4cCI6MTYwNDYxMzc4NSwiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiI5YWQ1MTBhNy00MzQyLTQ5M2UtYjQyMS1iNzNmMDU2NmU3OWYiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.L0TPZ-NDzT4hSSivQ0WR-5rPz6xoLbC_HmdvvKOzP_Y&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;token_type&quot;</span>: <span class="string">&quot;bearer&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;refresh_token&quot;</span>: <span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImF0aSI6IjlhZDUxMGE3LTQzNDItNDkzZS1iNDIxLWI3M2YwNTY2ZTc5ZiIsImV4cCI6MTYwNzE2MjA3MywiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiI5NzRjMDRkOS03NTQ0LTRjZTEtODMzZS05NjlmODMyNmRiNmQiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.ekAST3MRc0PqW3FZgnFQv1g-HykCqA4_TuzLRTplCIM&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;expires_in&quot;</span>: <span class="number">43199</span>,</span><br><span class="line">    <span class="attr">&quot;scope&quot;</span>: <span class="string">&quot;any&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jwt-ext&quot;</span>: <span class="string">&quot;JWT 扩展信息&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jti&quot;</span>: <span class="string">&quot;9ad510a7-4342-493e-b421-b73f0566e79f&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>3.3 请求时支持base认证方式</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将client_id和client_secret放到url的前面</span></span><br><span class="line">POST http://postman:postman@localhost:8080/oauth/token?grant_type=refresh_token&amp;refresh_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImF0aSI6ImM4NWM0YjJlLTBlNTktNDJhYy05M2RlLWI2N2I0OWI1ZDU5OSIsImV4cCI6MTYwNzIyMDAxMiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiI2M2U2MGYxOS1iOTU1LTRlMmUtODk2Yy1mYWUxN2IyODUzMzkiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.jVZWYRjr4VwTYwbKXP-sav_08vwc8iAxzEbg0I_jVTw</span><br></pre></td></tr></table></figure><p> 或者在header中增加<code>Authorization</code>请求头，值为<code>Basic xxxxxxxxx</code>，<code>xxxxxxxxx</code>是通过<code>base64.encode(client_id + 空格 + client_secret)</code>得到。<br> 使用Postman接口测试工具时，也可以使用其提供的认证功能[Authorization–&gt;TYPE–&gt;Basic Auth]，直接填写用户名和密码就可以方便进行测试，注意这里用户名和密码是client_id 和 client_secret。</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;access_token&quot;</span>: <span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImV4cCI6MTYwNDY4NTE3NiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiJhNDhiNzZhNC1kNWM0LTRkNTYtYmQ2Yy0zOWYxODQ0MGYwNTMiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.mhNUhWk1M9p267bOsv3fYXnLGeXitvnny6mUT9FyNdw&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;token_type&quot;</span>: <span class="string">&quot;bearer&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;refresh_token&quot;</span>: <span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImF0aSI6ImE0OGI3NmE0LWQ1YzQtNGQ1Ni1iZDZjLTM5ZjE4NDQwZjA1MyIsImV4cCI6MTYwNzIyMDAxMiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiI2M2U2MGYxOS1iOTU1LTRlMmUtODk2Yy1mYWUxN2IyODUzMzkiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.DT_cBdcow7pDv_S9RTHknKLHxZAIT45Byw1Rdw93K8U&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;expires_in&quot;</span>: <span class="number">43199</span>,</span><br><span class="line">    <span class="attr">&quot;scope&quot;</span>: <span class="string">&quot;any&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jwt-ext&quot;</span>: <span class="string">&quot;JWT 扩展信息&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jti&quot;</span>: <span class="string">&quot;a48b76a4-d5c4-4d56-bd6c-39f18440f053&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>3.4 access_token信息<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//HEADER</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//PAYLOAD</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;user_name&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;jwt-ext&quot;</span>: <span class="string">&quot;JWT 扩展信息&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;scope&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;any&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;exp&quot;</span>: <span class="number">1604613785</span>,</span><br><span class="line">  <span class="attr">&quot;authorities&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;ROLE_admin&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;jti&quot;</span>: <span class="string">&quot;9ad510a7-4342-493e-b421-b73f0566e79f&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;client_id&quot;</span>: <span class="string">&quot;postman&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="implicit模式"><a href="#implicit模式" class="headerlink" title="implicit模式"></a>implicit模式</h3><ul><li>仅可获取access_token，不能获取refresh_token</li><li>跳转到登录页面<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">浏览器GET</span><br><span class="line">http://localhost:8080/oauth/authorize?client_id=postman&amp;response_type=token&amp;redirect_uri=http://localhost:8080/redirect</span><br></pre></td></tr></table></figure></li><li>然后登录，然后同意授权</li><li>返回结果直接拼接在redirect_uri的后面，因为是以<code>#</code>开头，所以服务器端无法收到数据，只能从浏览器中获取了  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/redirect#access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImV4cCI6MTYwNDY3NTMwNSwiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiI4ZDcyODM5NC0zODhjLTRiMjAtYjgwYy1jNTk4OWJjZmJlM2IiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.OStAhkT6fBoNLdF7vTaztwhfNV5J8K1MpE1A7pxbyCs&amp;token_type=bearer&amp;expires_in=43199&amp;scope=any&amp;jwt-ext=JWT%20%E6%89%A9%E5%B1%95%E4%BF%A1%E6%81%AF&amp;jti=8d728394-388c-4b20-b80c-c5989bcfbe3b</span><br></pre></td></tr></table></figure></li><li>access_token信息<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//HEADER</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//PAYLOAD</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;user_name&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;jwt-ext&quot;</span>: <span class="string">&quot;JWT 扩展信息&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;scope&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;any&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;exp&quot;</span>: <span class="number">1604675305</span>,</span><br><span class="line">  <span class="attr">&quot;authorities&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;ROLE_admin&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;jti&quot;</span>: <span class="string">&quot;8d728394-388c-4b20-b80c-c5989bcfbe3b&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;client_id&quot;</span>: <span class="string">&quot;postman&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="password-模式"><a href="#password-模式" class="headerlink" title="password 模式"></a>password 模式</h3><ul><li>密码模式（Resource Owner Password Credentials Grant）中，用户向客户端提供自己的用户名和密码。客户端使用这些信息，向”服务商提供商”索要授权。</li><li>在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。</li><li>获取access_token和refresh_token<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line">http://localhost:8080/oauth/token?username=admin&amp;password=123456&amp;grant_type=password&amp;client_id=postman&amp;client_secret=postman</span><br></pre></td></tr></table></figure></li><li>请求时支持base认证方式，认证用户名和密码是client_id 和 client_secret</li><li>grant_type=password，需要携带用户的用户名和密码</li><li>返回结果<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;access_token&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImV4cCI6MTYwNDY3NzU1MiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiJlNjZiMWFjOS04M2RmLTRiNTMtYjNmYS1mMTQyYzA2MTYzMjkiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.jfBeoA-AeNaMUSWHKBktN8IOFbGJHtQSIQUgxP8zzg0&quot;,</span><br><span class="line">    &quot;token_type&quot;: &quot;bearer&quot;,</span><br><span class="line">    &quot;refresh_token&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55Il0sImF0aSI6ImU2NmIxYWM5LTgzZGYtNGI1My1iM2ZhLWYxNDJjMDYxNjMyOSIsImV4cCI6MTYwNzIyNjM1MiwiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiI5MDUwNTQ0Yi00OGVmLTQ2OWMtYjM3OS1lMWQyZDViOTcyYjkiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.fGDixRXD68cYdRTjprH3TM7gAGmFqDAaKxs3RTxphMs&quot;,</span><br><span class="line">    &quot;expires_in&quot;: 43199,</span><br><span class="line">    &quot;scope&quot;: &quot;any&quot;,</span><br><span class="line">    &quot;jwt-ext&quot;: &quot;JWT 扩展信息&quot;,</span><br><span class="line">    &quot;jti&quot;: &quot;e66b1ac9-83df-4b53-b3fa-f142c0616329&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>access_token信息<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//HEADER</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//PAYLOAD</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;user_name&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;jwt-ext&quot;</span>: <span class="string">&quot;JWT 扩展信息&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;scope&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;any&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;exp&quot;</span>: <span class="number">1604677552</span>,</span><br><span class="line">  <span class="attr">&quot;authorities&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;ROLE_admin&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;jti&quot;</span>: <span class="string">&quot;e66b1ac9-83df-4b53-b3fa-f142c0616329&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;client_id&quot;</span>: <span class="string">&quot;postman&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="client-credentials-客户端模式"><a href="#client-credentials-客户端模式" class="headerlink" title="client_credentials 客户端模式"></a>client_credentials 客户端模式</h3><ul><li>客户端模式（Client Credentials Grant）指客户端以自己的名义，而不是以用户的名义，向”服务提供商”进行认证。严格地说，客户端模式并不属于OAuth框架所要解决的问题。在这种模式中，用户直接向客户端注册，客户端以自己的名义要求”服务提供商”提供服务，其实不存在授权问题。</li><li>获取access_token<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST</span><br><span class="line">http://localhost:8080/oauth/token?grant_type=client_credentials&amp;client_id=postman&amp;client_secret=postman</span><br></pre></td></tr></table></figure></li><li>不需要用户的用户名和密码，只是认证客户端是否有效，返回的access_token的payload中也不包含任何用户信息(user_name,authorities)</li><li>没有refresh_token</li><li>返回结果<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;access_token&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqd3QtZXh0IjoiSldUIOaJqeWxleS_oeaBryIsInNjb3BlIjpbImFueSJdLCJleHAiOjE2MDQ2Nzc4NjksImp0aSI6ImU3ZjJhYTEyLTFhMWUtNGFmMC04MjJkLTkxNzg5NmYyMGMwMyIsImNsaWVudF9pZCI6InBvc3RtYW4ifQ.OHy0IUGf9KSmCDKlqq1IZ8bICAhBHFtpazwK1gcbCOI&quot;,</span><br><span class="line">    &quot;token_type&quot;: &quot;bearer&quot;,</span><br><span class="line">    &quot;expires_in&quot;: 43199,</span><br><span class="line">    &quot;scope&quot;: &quot;any&quot;,</span><br><span class="line">    &quot;jwt-ext&quot;: &quot;JWT 扩展信息&quot;,</span><br><span class="line">    &quot;jti&quot;: &quot;e7f2aa12-1a1e-4af0-822d-917896f20c03&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>access_token信息<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//HEADER</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//PAYLOAD</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;jwt-ext&quot;</span>: <span class="string">&quot;JWT 扩展信息&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;scope&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;any&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;exp&quot;</span>: <span class="number">1604677869</span>,</span><br><span class="line">  <span class="attr">&quot;jti&quot;</span>: <span class="string">&quot;e7f2aa12-1a1e-4af0-822d-917896f20c03&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;client_id&quot;</span>: <span class="string">&quot;postman&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="refresh-token模式，见验证码模式第3部分"><a href="#refresh-token模式，见验证码模式第3部分" class="headerlink" title="refresh_token模式，见验证码模式第3部分"></a>refresh_token模式，见验证码模式第3部分</h3><p>通过已有的refresh_token获取新的access_token和refresh_token</p><h3 id="验证token有效性–Basic-Auth"><a href="#验证token有效性–Basic-Auth" class="headerlink" title="验证token有效性–Basic Auth"></a>验证token有效性–Basic Auth</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">POST http://postman:postman@localhost:8080/oauth/check_token?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJhZG1pbiIsImp3dC1leHQiOiJKV1Qg5omp5bGV5L-h5oGvIiwic2NvcGUiOlsiYW55IiwiYWxsIl0sImV4cCI6MTYwNDcxNjMyMCwiYXV0aG9yaXRpZXMiOlsiUk9MRV9hZG1pbiJdLCJqdGkiOiIxNjc4ZTNhYy0yYmNjLTQ4NGUtOTBkMy02ZWFjYTVkNzkyM2IiLCJjbGllbnRfaWQiOiJwb3N0bWFuIn0.8piTJdoAf-4lB0Tn-yeSFWoV3WpkJkqBs7AsoNPoohw</span><br></pre></td></tr></table></figure><p>或者加上Header参数<code>Authorization</code> 值为 <code>Basic cG9zdG1hbjpwb3N0bWFu</code></p><p>返回值</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;user_name&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;jwt-ext&quot;</span>: <span class="string">&quot;JWT 扩展信息&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;scope&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;any&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;active&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;exp&quot;</span>: <span class="number">1604767911</span>,</span><br><span class="line">    <span class="attr">&quot;authorities&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;ROLE_admin&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;jti&quot;</span>: <span class="string">&quot;5597b675-a617-4e02-959f-86d62024a237&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;client_id&quot;</span>: <span class="string">&quot;postman&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取公钥，比如JWT的密钥"><a href="#获取公钥，比如JWT的密钥" class="headerlink" title="获取公钥，比如JWT的密钥"></a>获取公钥，比如JWT的密钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://postman:postman@localhost:8080/oauth/token_key</span><br></pre></td></tr></table></figure><p>或者加上Header参数<code>Authorization</code> 值为 <code>Basic cG9zdG1hbjpwb3N0bWFu</code></p><p>返回值</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;alg&quot;</span>: <span class="string">&quot;HMACSHA256&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;Ayl7bn+aFwxlakekKCJiqUYguKS80bEVb7OZtd2qfZjdCbAwKxDmM6PWezGy5JIkiJfemtHNPc7Av1l+OWQSqQ==&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义登录和授权页面"><a href="#自定义登录和授权页面" class="headerlink" title="自定义登录和授权页面"></a>自定义登录和授权页面</h2><h3 id="依赖-1"><a href="#依赖-1" class="headerlink" title="依赖"></a>依赖</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-thymeleaf&#x27;</span></span><br><span class="line"><span class="comment">//webjars https://www.webjars.org</span></span><br><span class="line">implementation <span class="string">&#x27;org.webjars:bootstrap:4.5.3&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.webjars.bower:jquery:3.5.1&#x27;</span></span><br><span class="line"><span class="comment">// 可以在html中去掉webjars的版本号，这样升级的时候直接修改上面引入的webjars中的版本号即可，页面中不需要修改</span></span><br><span class="line">implementation <span class="string">&#x27;org.webjars:webjars-locator:0.40&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="OAuth2Controller"><a href="#OAuth2Controller" class="headerlink" title="OAuth2Controller"></a>OAuth2Controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.istack.internal.Nullable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.SessionAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@SessionAttributes(&#123;&quot;authorizationRequest&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OAuth2Controller</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义授权页面，注意：一定要在类上加<span class="doctag">@SessionAttributes</span>(&#123;&quot;authorizationRequest&quot;&#125;)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model   model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/oauth/confirm_access&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAccessConfirmation</span><span class="params">(Map&lt;String, Object&gt; model, HttpServletRequest request)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; scopeList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        String scope = request.getParameter(<span class="string">&quot;scope&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (scope != <span class="keyword">null</span>) &#123;</span><br><span class="line">            String[] split = scope.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="keyword">for</span>(String s:split) &#123;</span><br><span class="line">                scopeList.add(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        model.put(<span class="string">&quot;scopeList&quot;</span>, scopeList);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;oauth2/confirm_access&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;h2&gt;自定义登录&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">     * Created by hanqf on 2020/11/13 10:13. &lt;br&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/oauth/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(Model model,<span class="meta">@Nullable</span> Boolean error,HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(error!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;error&quot;</span>,error);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//从客户端logout后，第一次重新登录会不成功，这里加一个处理逻辑，如果发现其queryString的值为logout就重定向到首页</span></span><br><span class="line">            <span class="comment">//暂时不清楚客户端登出后该如何设置才能直接重新登录客户端，可以在认证服务器首页增加客户端入口</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;logout&quot;</span>.equals(request.getQueryString()))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;redirect:/&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;oauth2/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="login-html"><a href="#login-html" class="headerlink" title="login.html"></a>login.html</h3><ul><li>登录页面<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/css/bootstrap.min.css&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/jquery/jquery.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/js/bootstrap.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 320px;margin-top: 100px;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>OAuth2登录<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;alert-danger&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;error&#125;&quot;</span>&gt;</span>用户名或密码错误!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;notice_null&quot;</span> <span class="attr">class</span>=<span class="string">&quot;alert-danger&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span>用户名或密码不能为空!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/login&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return onsubmitCheck()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn-success&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//默认不显示错误提醒</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;#notice_null&quot;</span>).hide();</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">onsubmitCheck</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> username = $(<span class="string">&quot;#username&quot;</span>).val();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> password = $(<span class="string">&quot;#password&quot;</span>).val();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(username == <span class="string">&quot;&quot;</span> || password == <span class="string">&quot;&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;#notice_null&quot;</span>).show();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="confirm-access-html"><a href="#confirm-access-html" class="headerlink" title="confirm_access.html"></a>confirm_access.html</h3><ul><li>授权页面<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>确认授权页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">META</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Pragma&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">META</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Cache-Control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">META</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Expire&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/css/bootstrap.min.css&#125;&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/jquery/jquery.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/js/bootstrap.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-warning&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>是否授权[ <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;session.authorizationRequest.clientId&#125;&quot;</span>&gt;</span>clientId<span class="tag">&lt;/<span class="name">span</span>&gt;</span> ]的访问您的资源：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-info&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&#x27;confirmationForm&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;confirmationForm&#x27;</span> <span class="attr">action</span>=<span class="string">&quot;/oauth/authorize&quot;</span> <span class="attr">method</span>=<span class="string">&#x27;post&#x27;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;user_oauth_approval&quot;</span> <span class="attr">name</span>=<span class="string">&#x27;user_oauth_approval&#x27;</span> <span class="attr">value</span>=<span class="string">&#x27;true&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;hidden&#x27;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--授权访问领域--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;&#x27;[&#x27;+s+&#x27;]&#x27;&#125;&quot;</span>  <span class="attr">th:each</span>=<span class="string">&quot;s : $&#123;scopeList&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn-success&quot;</span> <span class="attr">id</span>=<span class="string">&quot;authorize&quot;</span> <span class="attr">name</span>=<span class="string">&#x27;authorize&#x27;</span> <span class="attr">value</span>=<span class="string">&#x27;授权&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;submit&#x27;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;btn-primary&quot;</span> <span class="attr">id</span>=<span class="string">&quot;refuse&quot;</span> <span class="attr">name</span>=<span class="string">&#x27;refuse&#x27;</span> <span class="attr">value</span>=<span class="string">&#x27;拒绝&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;#refuse&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;#user_oauth_approval&quot;</span>).val(<span class="string">&#x27;false&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;#confirmationForm&quot;</span>).submit();</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="SecurityConfig中开启自定义登录页配置"><a href="#SecurityConfig中开启自定义登录页配置" class="headerlink" title="SecurityConfig中开启自定义登录页配置"></a>SecurityConfig中开启自定义登录页配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http.formLogin()</span><br><span class="line">        .loginPage(<span class="string">&quot;/oauth/login&quot;</span>)</span><br><span class="line">        .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">        <span class="comment">//.defaultSuccessUrl(&quot;/&quot;)</span></span><br><span class="line">        .failureForwardUrl(<span class="string">&quot;/oauth/login?error=true&quot;</span>)</span><br><span class="line">        .permitAll(); <span class="comment">//登记界面，默认是permitAll</span></span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2>至此，一个基于SpringBoot-OAuth2-JWT的认证服务器就搭建好了，如果client-server和resource-server都是基于spring-security-oauth2搭建的，则认证服务器就不需要其它配置了，client-server和resource-server的代码可以参考<br><a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48/oauth2-client-demo">oauth2-client-demo</a>和<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48/oauth2-resource-server-demo">oauth2-resource-server-demo</a>，不过spring-security-oauth2已经不再维护了，所以建议搭建client-server和resource-server的时候，还是使用springboot官方提供的<code>spring-boot-starter-oauth2-client</code>和<code>spring-boot-starter-oauth2-resource-server</code>，此时还需要为认证服务增加一些功能，这部分留到后面讲解client-server和resource-server的搭建的时候再说。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT的认证服务器&lt;/li&gt;
&lt;li&gt;本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建&lt;/li&gt;
&lt;li&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="oauth2" scheme="https://blog.hanqunfeng.com/tags/oauth2/"/>
    
    <category term="springsecurity" scheme="https://blog.hanqunfeng.com/tags/springsecurity/"/>
    
    <category term="jwt" scheme="https://blog.hanqunfeng.com/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot配置文件属性加密</title>
    <link href="https://blog.hanqunfeng.com/2020/10/27/jasypt-springboot/"/>
    <id>https://blog.hanqunfeng.com/2020/10/27/jasypt-springboot/</id>
    <published>2020-10-27T10:30:05.000Z</published>
    <updated>2021-05-27T07:41:24.845Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li><a href="https://github.com/ulisesbocchio/jasypt-spring-boot">jasypt-spring-boot官网</a></li><li>本文使用版本：springboot:2.3.4.RELEASE，jasypt-spring-boot-starter:3.0.3</li></ul><span id="more"></span><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &#x27;com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3&#x27;</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jasypt:</span></span><br><span class="line">  <span class="attr">encryptor:</span></span><br><span class="line">    <span class="comment">#默认加密算法:PBEWITHHMACSHA512ANDAES_256，sha512+AES算法，安全性更高，但是需要 Java JDK 1.9+</span></span><br><span class="line">    <span class="comment">#本服务使用jdk1.8，所以使用 PBEWithMD5AndDES md5+des算法</span></span><br><span class="line">    <span class="comment">#默认使用 com.ulisesbocchio.jasyptspringboot.encryptor.DefaultLazyEncryptor 进行加解密 ，PooledPBEStringEncryptor可以对其加密的内容进行解密</span></span><br><span class="line">    <span class="attr">algorithm:</span> <span class="string">PBEWithMD5AndDES</span></span><br><span class="line">    <span class="comment"># 加密密钥，使用方式 spring.datasource.password=ENC(密文)，不要设置在配置文件中，建议使用环境变量或者启动参数: --jasypt.encryptor.password=123456</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment">#设置密文前缀和后缀</span></span><br><span class="line">    <span class="attr">property:</span></span><br><span class="line">      <span class="attr">prefix:</span> <span class="string">ENC(</span></span><br><span class="line">      <span class="attr">suffix:</span> <span class="string">)</span></span><br><span class="line">    <span class="attr">iv-generator-classname:</span> <span class="string">org.jasypt.iv.RandomIvGenerator</span></span><br></pre></td></tr></table></figure><h3 id="可用属性"><a href="#可用属性" class="headerlink" title="可用属性"></a>可用属性</h3><table><thead><tr><th>Key</th><th>Required</th><th>Default Value</th></tr></thead><tbody><tr><td>jasypt.encryptor.password</td><td>True</td><td>-</td></tr><tr><td>jasypt.encryptor.algorithm</td><td>False</td><td>PBEWITHHMACSHA512ANDAES_256</td></tr><tr><td>jasypt.encryptor.key-obtention-iterations</td><td>False</td><td>1000</td></tr><tr><td>jasypt.encryptor.pool-size</td><td>False</td><td>1</td></tr><tr><td>jasypt.encryptor.provider-name</td><td>False</td><td>SunJCE</td></tr><tr><td>jasypt.encryptor.provider-class-name</td><td>False</td><td>null</td></tr><tr><td>jasypt.encryptor.salt-generator-classname</td><td>False</td><td>org.jasypt.salt.RandomSaltGenerator</td></tr><tr><td>jasypt.encryptor.iv-generator-classname</td><td>False</td><td>org.jasypt.iv.RandomIvGenerator</td></tr><tr><td>jasypt.encryptor.string-output-type</td><td>False</td><td>base64</td></tr><tr><td>jasypt.encryptor.proxy-property-sources</td><td>False</td><td>false</td></tr><tr><td>jasypt.encryptor.skip-property-sources</td><td>False</td><td>empty list</td></tr></tbody></table><h2 id="生成密文"><a href="#生成密文" class="headerlink" title="生成密文"></a>生成密文</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> jar下载地址：https://repo1.maven.org/maven2/org/jasypt/jasypt/1.9.3/jasypt-1.9.3.jar</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 实际上使用maven或者gradle配置jasypt-spring-boot-starter依赖后，这个jar就已经下载到本地仓库了，去本地仓库找找吧</span></span><br><span class="line"><span class="meta">#</span><span class="bash">加密</span></span><br><span class="line">java -cp jasypt-1.9.3.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI password=123456 algorithm=PBEWithMD5AndDES ivGeneratorClassName=org.jasypt.iv.RandomIvGenerator input=newpwd</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">解密</span></span><br><span class="line">java -cp jasypt-1.9.3.jar org.jasypt.intf.cli.JasyptPBEStringDecryptionCLI password=123456 algorithm=PBEWithMD5AndDES ivGeneratorClassName=org.jasypt.iv.RandomIvGenerator input=BwNPdUi+syCTKFj/nlbI5fAtGUKuhN8r</span><br></pre></td></tr></table></figure><h2 id="属性加密"><a href="#属性加密" class="headerlink" title="属性加密"></a>属性加密</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="comment">#数据源配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?useUnicode=true&amp;characterEncoding=utf-8&amp;useTimezone=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">ENC(BwNPdUi+syCTKFj/nlbI5fAtGUKuhN8r)</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#配置redis连接</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">ENC(FE4cpSc+2u9NFEY+Q5n9kNSxW6BUiNXGNTUPuhoQbPA=)</span></span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>配置文件将需要加密的属性使用<code>ENC(密文)</code>的方式进行配置，密文前缀和后缀可以在配置文件中进行配置</li><li>jasypt-spring-boot-starter在服务运行时会自动对密文进行解密处理</li></ul><h2 id="密钥传递方式"><a href="#密钥传递方式" class="headerlink" title="密钥传递方式"></a>密钥传递方式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">1.启动参数</span></span><br><span class="line">java -jar jasypt-spring-boot-demo.jar --jasypt.encryptor.password=password</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">2.系统属性</span></span><br><span class="line">java -Djasypt.encryptor.password=password -jar jasypt-spring-boot-demo.jar</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">3.环境变量</span></span><br><span class="line">jasypt:</span><br><span class="line">    encryptor:</span><br><span class="line">        password: $&#123;JASYPT_ENCRYPTOR_PASSWORD:&#125;</span><br><span class="line"></span><br><span class="line">JASYPT_ENCRYPTOR_PASSWORD=password java -jar jasypt-spring-boot-demo.jar</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">也可以先设置环境变量</span></span><br><span class="line">export JASYPT_ENCRYPTOR_PASSWORD=password</span><br><span class="line">java -jar jasypt-spring-boot-demo.jar</span><br></pre></td></tr></table></figure><h2 id="代码中使用Jasypt"><a href="#代码中使用Jasypt" class="headerlink" title="代码中使用Jasypt"></a>代码中使用Jasypt</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 引入jasypt-spring-boot-starter就会自动注入</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> StringEncryptor stringEncryptor;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StringEncryptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String encrypt = stringEncryptor.encrypt(<span class="string">&quot;newpwd&quot;</span>);</span><br><span class="line">    System.out.println(encrypt);</span><br><span class="line"></span><br><span class="line">    String decrypt = stringEncryptor.decrypt(encrypt);</span><br><span class="line">    System.out.println(decrypt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="非springboot项目"><a href="#非springboot项目" class="headerlink" title="非springboot项目"></a>非springboot项目</h2><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation &#x27;org.jasypt:jasypt:1.9.3&#x27;</span><br></pre></td></tr></table></figure><h3 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.PooledPBEStringEncryptor;</span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.StandardPBEStringEncryptor;</span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig;</span><br><span class="line"><span class="keyword">import</span> org.jasypt.encryption.pbe.config.SimpleStringPBEConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;属性加密工具类&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JasyptUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encrypt</span><span class="params">(String secretKey, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stringEncryptor(secretKey, message, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(String secretKey, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stringEncryptor(secretKey, message, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> StringEncryptor&#125; 加解密。</span></span><br><span class="line"><span class="comment">     * 同一个密钥（secretKey）对同一个内容执行加密，生成的密文都是不一样的，但是根据根据这些密文解密成明文都是可以.</span></span><br><span class="line"><span class="comment">     * 1、Jasypt 默认使用 &#123;<span class="doctag">@link</span> StringEncryptor&#125; 来解密全局配置文件中的属性，所以提供密文时，也需要提供 &#123;<span class="doctag">@link</span> StringEncryptor&#125; 加密的密文</span></span><br><span class="line"><span class="comment">     * 2、&#123;<span class="doctag">@link</span> StringEncryptor&#125; 接口有很多的实现类，比如常用的 &#123;<span class="doctag">@link</span> PooledPBEStringEncryptor&#125;</span></span><br><span class="line"><span class="comment">     * 3、setConfig(final PBEConfig config)：为对象设置 &#123;<span class="doctag">@link</span> PBEConfig&#125; 配置对象</span></span><br><span class="line"><span class="comment">     * 4、encrypt(final String message)：加密内容</span></span><br><span class="line"><span class="comment">     * 5、decrypt(final String encryptedMessage)：解密内容</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secretKey ：密钥。加/解密必须使用同一个密钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message   ：加/解密的内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> isEncrypt ：true 表示加密、false 表示解密</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">stringEncryptor</span><span class="params">(String secretKey, String message, <span class="keyword">boolean</span> isEncrypt)</span> </span>&#123;</span><br><span class="line">        PooledPBEStringEncryptor pooledPBEStringEncryptor = <span class="keyword">new</span> PooledPBEStringEncryptor();</span><br><span class="line">        pooledPBEStringEncryptor.setConfig(getSimpleStringPBEConfig(secretKey));</span><br><span class="line">        String result = isEncrypt ? pooledPBEStringEncryptor.encrypt(message) : pooledPBEStringEncryptor.decrypt(message);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置 &#123;<span class="doctag">@link</span> PBEConfig&#125; 配置对象，SimpleStringPBEConfig 是它的实现类</span></span><br><span class="line"><span class="comment">     * 1、所有的配置项建议与全局配置文件中的配置项保持一致，特别是 password、algorithm 等等选项，如果不一致，则应用启动时解密失败而报错.</span></span><br><span class="line"><span class="comment">     * 2、setPassword(final String password)：设置加密密钥，必须与全局配置文件中配置的保存一致，否则应用启动时会解密失败而报错.</span></span><br><span class="line"><span class="comment">     * 3、setPoolSize(final String poolSize)：设置要创建的加密程序池的大小.</span></span><br><span class="line"><span class="comment">     * 4、setAlgorithm(final String algorithm): 设置加密算法的值， 此算法必须由 JCE 提供程序支持</span></span><br><span class="line"><span class="comment">     * 5、setKeyObtentionIterations: 设置应用于获取加密密钥的哈希迭代次数。</span></span><br><span class="line"><span class="comment">     * 6、setProviderName(final String providerName)：设置要请求加密算法的安全提供程序的名称</span></span><br><span class="line"><span class="comment">     * 7、setSaltGeneratorClassName：设置 Sal 发生器</span></span><br><span class="line"><span class="comment">     * 8、setIvGeneratorClassName：设置 IV 发生器</span></span><br><span class="line"><span class="comment">     * 9、setStringOutputType：设置字符串输出的编码形式。可用的编码类型有 base64、hexadecimal</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secretKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> SimpleStringPBEConfig <span class="title">getSimpleStringPBEConfig</span><span class="params">(String secretKey)</span> </span>&#123;</span><br><span class="line">        SimpleStringPBEConfig config = <span class="keyword">new</span> SimpleStringPBEConfig();</span><br><span class="line">        config.setPassword(secretKey);</span><br><span class="line">        config.setAlgorithm(<span class="string">&quot;PBEWithMD5AndDES&quot;</span>);</span><br><span class="line">        <span class="comment">//以下都是默认值</span></span><br><span class="line">        config.setPoolSize(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">        config.setKeyObtentionIterations(<span class="string">&quot;1000&quot;</span>);</span><br><span class="line">        config.setProviderName(<span class="string">&quot;SunJCE&quot;</span>);</span><br><span class="line">        config.setSaltGeneratorClassName(<span class="string">&quot;org.jasypt.salt.RandomSaltGenerator&quot;</span>);</span><br><span class="line">        <span class="comment">//命令行执行时要指定这个参数</span></span><br><span class="line">        config.setIvGeneratorClassName(<span class="string">&quot;org.jasypt.iv.RandomIvGenerator&quot;</span>);</span><br><span class="line">        config.setStringOutputType(<span class="string">&quot;base64&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> config;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ulisesbocchio/jasypt-spring-boot&quot;&gt;jasypt-spring-boot官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;本文使用版本：springboot:2.3.4.RELEASE，jasypt-spring-boot-starter:3.0.3&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="yasypt" scheme="https://blog.hanqunfeng.com/tags/yasypt/"/>
    
  </entry>
  
  <entry>
    <title>CAS客户端使用SpringSecurity访问CAS发布的属性</title>
    <link href="https://blog.hanqunfeng.com/2020/09/25/springsecurity-cas-attrs/"/>
    <id>https://blog.hanqunfeng.com/2020/09/25/springsecurity-cas-attrs/</id>
    <published>2020-09-25T10:30:05.000Z</published>
    <updated>2021-05-27T07:43:46.099Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>CAS服务端基于cas-overlay-template-5.3.14，已实现基于jdbc的自定义登录策略、验证码、动态service配置、多属性返回，等等</li><li>CAS客户端基于spring-boot-2.3.3.RELEASE，spring-security-cas-5.3.4.RELEASE</li><li>本文代码地址：<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter36">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter36</a></li><li>其重点是client的UserDetailsService的实现类要继承自AbstractCasAssertionUserDetailsService</li></ul><span id="more"></span><h2 id="cas服务配置"><a href="#cas服务配置" class="headerlink" title="cas服务配置"></a>cas服务配置</h2><ul><li>如果是json配置方式：services目录下需要为每个客户端配置一个json文件，如client1-10000005.json</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;@class&quot;</span> : <span class="string">&quot;org.apereo.cas.services.RegexRegisteredService&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;serviceId&quot;</span> : <span class="string">&quot;^(https|http|imaps)://localhost:8081.*&quot;</span>, #对应客户端的地址匹配路径</span><br><span class="line">  <span class="attr">&quot;name&quot;</span> : <span class="string">&quot;client1&quot;</span>,  #与文件名称对应</span><br><span class="line">  <span class="attr">&quot;id&quot;</span> : <span class="number">10000005</span>,     #与文件名称对应</span><br><span class="line">  <span class="attr">&quot;description&quot;</span> : <span class="string">&quot;This service definition authorizes all application urls that support HTTPS and IMAPS protocols.&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;evaluationOrder&quot;</span> : <span class="number">10</span>, #顺序id不能重复</span><br><span class="line">  <span class="attr">&quot;logoutType&quot;</span> : <span class="string">&quot;BACK_CHANNEL&quot;</span>, #固定写法</span><br><span class="line">  <span class="attr">&quot;logoutUrl&quot;</span> : <span class="string">&quot;http://localhost:8081/&quot;</span>,  #客户端地址，用于单点登出时通知客户端使用</span><br><span class="line">  <span class="attr">&quot;attributeReleasePolicy&quot;</span>: &#123; # 属性返回策略</span><br><span class="line">    <span class="attr">&quot;@class&quot;</span>: <span class="string">&quot;org.apereo.cas.services.ReturnAllAttributeReleasePolicy&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;accessStrategy&quot;</span> : &#123; #是否允许该客户端访问单点登录，肯定是要开启的啊</span><br><span class="line">    <span class="attr">&quot;@class&quot;</span> : <span class="string">&quot;org.apereo.cas.services.DefaultRegisteredServiceAccessStrategy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;enabled&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;ssoEnabled&quot;</span> : <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="cas多属性返回"><a href="#cas多属性返回" class="headerlink" title="cas多属性返回"></a>cas多属性返回</h2><ul><li>services的json文件中要增加如下配置<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 返回全部配置属性</span><br><span class="line"><span class="string">&quot;attributeReleasePolicy&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;@class&quot;</span>: <span class="string">&quot;org.apereo.cas.services.ReturnAllAttributeReleasePolicy&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"># 返回指定配置属性，这里指定只返回username和email两个属性</span><br><span class="line">  <span class="string">&quot;attributeReleasePolicy&quot;</span> : &#123;</span><br><span class="line">  <span class="attr">&quot;@class&quot;</span> : <span class="string">&quot;org.apereo.cas.services.ReturnAllowedAttributeReleasePolicy&quot;</span>,</span><br><span class="line"> <span class="attr">&quot;allowedAttributes&quot;</span> : [ <span class="string">&quot;java.util.ArrayList&quot;</span>, [ <span class="string">&quot;username&quot;</span>, <span class="string">&quot;email&quot;</span> ] ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="动态service"><a href="#动态service" class="headerlink" title="动态service"></a>动态service</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果使用代码的方式维护service,则也要根据情况来创建返回策略，</span><br><span class="line">参考代码chapter36/cas-overlay-template-5.3.14/src/main/java/com/cas/controller/ServiceController.java</span><br></pre></td></tr></table></figure><ul><li><p>配置属性</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动态services配置</span></span><br><span class="line"><span class="comment">################################################</span></span><br><span class="line"><span class="comment"># 开启识别Json文件，默认false</span></span><br><span class="line"><span class="comment"># 这一段表示从json文件里面初始化服务，如果我们配置了这个，就会将这写json里面的数据，都会自动导入到数据库中</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.initFromJson</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.watcherEnabled</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#设置配置的服务，一直都有，不会给清除掉 ， 第一次使用，需要配置为 create-drop</span></span><br><span class="line"><span class="comment">#create-drop 重启cas服务的时候，就会给干掉</span></span><br><span class="line"><span class="comment">#create  没有表就创建，有就不创建</span></span><br><span class="line"><span class="comment">#none 什么也不做</span></span><br><span class="line"><span class="comment">#update 更新</span></span><br><span class="line"><span class="comment">#Unrecognized legacy `hibernate.hbm2ddl.auto` value : create-drops</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.ddlAuto</span>=<span class="string">update</span></span><br><span class="line"><span class="comment">#配置将service配置到数据库中</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.isolateInternalQueries</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.url</span>=<span class="string">$&#123;jdbc.url&#125;</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.user</span>=<span class="string">$&#123;jdbc.username&#125;</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.password</span>=<span class="string">$&#123;jdbc.password&#125;</span></span><br><span class="line"><span class="comment">#这个必须是org.hibernate.dialect.MySQL5Dialect ,我就是这个问题导致表创建失败</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.dialect</span>=<span class="string">org.hibernate.dialect.MySQL5Dialect</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.driverClass</span>=<span class="string">$&#123;jdbc.driver&#125;</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.leakThreshold</span>=<span class="string">10</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.batchSize</span>=<span class="string">1</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.autocommit</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">cas.serviceRegistry.jpa.idleTimeout</span>=<span class="string">5000</span></span><br><span class="line"><span class="comment">#配置结束</span></span><br><span class="line"><span class="comment">################################################</span></span><br></pre></td></tr></table></figure></li><li><p>这里说一下delete异常的问题，可以引入jdbcTemplate直接操作数据表，参考chapter36/cas-overlay-template-5.3.14/src/main/java/com/cas/config/DataSourceConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Map&lt;String, Object&gt;&gt; list = jdbcTemplate.queryForList(<span class="string">&quot;select * from regexregisteredservice where serviceId = &#x27;&quot;</span> + serviceId + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (list != <span class="keyword">null</span> &amp;&amp; list.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    has_data = <span class="keyword">true</span>;</span><br><span class="line">    jdbcTemplate.update(<span class="string">&quot;delete from regexregisteredservice where serviceId = &#x27;&quot;</span> + serviceId + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//执行load生效</span></span><br><span class="line"> servicesManager.load();</span><br></pre></td></tr></table></figure></li></ul><h2 id="基于配置文件返回属性"><a href="#基于配置文件返回属性" class="headerlink" title="基于配置文件返回属性"></a>基于配置文件返回属性</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#####################################################</span></span><br><span class="line"><span class="comment">## 属性返回</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].sql</span>=<span class="string">select username,password,email from cas_user where username=?</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 格式cas.authn.attributeRepository.jdbc[0].attributes.key=value</span></span><br><span class="line"><span class="comment"># 返回上面查询结果的username，属性key名称也为username ,以下雷同</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].attributes.username</span>=<span class="string">username</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].attributes.password</span>=<span class="string">password</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].attributes.email</span>=<span class="string">email</span></span><br><span class="line"></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].singleRow</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].order</span>=<span class="string">0</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].requireAllAttributes</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"># cas.authn.attributeRepository.jdbc[0].caseCanonicalization=NONE|LOWER|UPPER</span></span><br><span class="line"><span class="comment"># cas.authn.attributeRepository.jdbc[0].queryType=OR|AND</span></span><br><span class="line"></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].username</span>=<span class="string">username</span></span><br><span class="line"><span class="comment">#数据库连接</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].url</span>=<span class="string">$&#123;jdbc.url&#125;</span></span><br><span class="line"><span class="comment">#数据库dialect配置</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].dialect</span>=<span class="string">$&#123;jdbc.dialect&#125;</span></span><br><span class="line"><span class="comment">#数据库用户名</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].user</span>=<span class="string">$&#123;jdbc.username&#125;</span></span><br><span class="line"><span class="comment">#数据库用户密码</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].password</span>=<span class="string">$&#123;jdbc.password&#125;</span></span><br><span class="line"><span class="comment">#数据库事务自动提交</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].autocommit</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#数据库驱动</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].driverClass</span>=<span class="string">$&#123;jdbc.driver&#125;</span></span><br><span class="line"><span class="comment">#超时配置</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].idleTimeout</span>=<span class="string">5000</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].ddlAuto</span>=<span class="string">none</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].leakThreshold</span>=<span class="string">10</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].batchSize</span>=<span class="string">1</span></span><br><span class="line"><span class="meta">cas.authn.attributeRepository.jdbc[0].dataSourceProxy</span>=<span class="string">false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#####################################################</span></span><br></pre></td></tr></table></figure><h2 id="代码实现返回属性内容"><a href="#代码实现返回属性内容" class="headerlink" title="代码实现返回属性内容"></a>代码实现返回属性内容</h2><ul><li>这个需要结合自定义登录策略来实现，代码参考：chapter36/cas-overlay-template-5.3.14/src/main/java/com/cas/security/CustomerHandlerAuthentication.java，注意要关闭配置文件的登录策略，否则会失效</li><li>注册自定义登录策略，代码参考：chapter36/cas-overlay-template-5.3.14/src/main/java/com/cas/config/CustomAuthenticationConfig.java</li><li>然后将其加入自动配置中,chapter36/cas-overlay-template-5.3.14/src/main/resources/META-INF/spring.factories<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span>=<span class="string">\</span></span><br><span class="line"><span class="string">  org.apereo.cas.config.CasEmbeddedContainerTomcatConfiguration,\</span></span><br><span class="line"><span class="string">  org.apereo.cas.config.CasEmbeddedContainerTomcatFiltersConfiguration,\</span></span><br><span class="line"><span class="string">  com.cas.config.MyConfiguration,\ #自定义的其它需要加入spring上下文的bean</span></span><br><span class="line">  <span class="attr">com.cas.config.DataSourceConfig,\ #数据源配置，为了引入JdbcTemplate</span></span><br><span class="line">  <span class="meta">com.cas.config.CustomAuthenticationConfig,\ </span> <span class="string">#自定义登录策略配置</span></span><br><span class="line">  <span class="meta">com.cas.config.CustomerAuthWebflowConfiguration</span> <span class="string">#自定义登录流程配置</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="cas-client-springsecurity"><a href="#cas-client-springsecurity" class="headerlink" title="cas-client-springsecurity"></a>cas-client-springsecurity</h2><ul><li><p>这里说一下，如果不使用springsecurity，而是直接依赖cas-client，其获取cas返回属性的方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Principal principal = request.getUserPrincipal();</span><br><span class="line"><span class="keyword">if</span>(principal <span class="keyword">instanceof</span> AttributePrincipal)&#123;</span><br><span class="line">    <span class="comment">//cas传递过来的数据</span></span><br><span class="line">    Map&lt;String,Object&gt; result =( (AttributePrincipal)principal).getAttributes();</span><br><span class="line">    <span class="keyword">for</span>(Map.Entry&lt;String, Object&gt; entry :result.entrySet()) &#123;</span><br><span class="line">        String key = entry.getKey();</span><br><span class="line">        Object val = entry.getValue();</span><br><span class="line">        System.out.printf(<span class="string">&quot;%s:%s\r\n&quot;</span>,key,val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用springsecurity的配置类代码参考：chapter36/springsecurity-client-demo/src/main/java/com/example/springsecuritydemo/config/WebSecurityConfigByCASByAttrs.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * cas 认证 Provider</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CasAuthenticationProvider <span class="title">casAuthenticationProvider</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建CAS授权认证器</span></span><br><span class="line">        CasAuthenticationProvider casAuthenticationProvider = <span class="keyword">new</span> CasAuthenticationProvider();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置Cas授权认证器相关配置</span></span><br><span class="line">        casAuthenticationProvider.setServiceProperties(serviceProperties());</span><br><span class="line">        <span class="comment">//设置票据校验器</span></span><br><span class="line">        casAuthenticationProvider.setTicketValidator(cas30ServiceTicketValidator());</span><br><span class="line">        casAuthenticationProvider.setKey(<span class="string">&quot;casAuthenticationProviderKey&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//setUserDetailsService和setAuthenticationUserDetailsService只能设置一个，其目的都是为了初始化属性authenticationUserDetailsService</span></span><br><span class="line">        <span class="comment">//setUserDetailsService的类型为UserDetailsService</span></span><br><span class="line">        <span class="comment">//setAuthenticationUserDetailsService的类型为AuthenticationUserDetailsService&lt;CasAssertionAuthenticationToken&gt;</span></span><br><span class="line">        <span class="comment">// 如果使用setUserDetailsService，则其会对UserDetailsService进行封装，new UserDetailsByNameServiceWrapper(userDetailsService)，</span></span><br><span class="line">        <span class="comment">// 将其转换为AuthenticationUserDetailsService&lt;CasAssertionAuthenticationToken&gt;类型</span></span><br><span class="line">        <span class="comment">//这里使用setAuthenticationUserDetailsService是为了接收cas服务端返回的属性，因为CasAssertionAuthenticationToken会接收到返回的属性</span></span><br><span class="line">        casAuthenticationProvider.setAuthenticationUserDetailsService(userDetailsServiceImplByAttrs());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> casAuthenticationProvider;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetailsServiceImplByAttrs <span class="title">userDetailsServiceImplByAttrs</span><span class="params">()</span></span>&#123;</span><br><span class="line">        UserDetailsServiceImplByAttrs userDetailsServiceImplByAttrs = <span class="keyword">new</span> UserDetailsServiceImplByAttrs();</span><br><span class="line">        <span class="keyword">return</span> userDetailsServiceImplByAttrs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>UserDetailsServiceImplByAttrs的重点就是要继承AbstractCasAssertionUserDetailsService，而不是实现UserDetailsService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实际可以接收的属性</span></span><br><span class="line">Map&lt;String, Object&gt; objectMap = assertion.getPrincipal().getAttributes();</span><br></pre></td></tr></table></figure></li><li><p>这里说一下AbstractCasAssertionUserDetailsService，它有一个实现类GrantedAuthorityFromAssertionAttributesUserDetailsService<br>不过其将返回数据都做为用户的权限了，所以其只是用来从服务器端获取用户权限使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CasAuthenticationToken principal = (CasAuthenticationToken) request.getUserPrincipal();</span><br><span class="line">UserDetails userDetails = principal.getUserDetails();</span><br><span class="line">Collection&lt;SimpleGrantedAuthority&gt; authorities = (Collection&lt;SimpleGrantedAuthority&gt;) userDetails.getAuthorities();</span><br><span class="line">authorities.stream().forEach(System.out::println);</span><br></pre></td></tr></table></figure></li><li><p>如果希望灵活使用cas返回属性，则需要自定义实现类，笔者这里将获取到的属性map存储到自定义的CustomerUser属性中了</p></li><li><p>代码中使用属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#获取登录的用户名称</span><br><span class="line">String username = request.getRemoteUser();</span><br><span class="line">#获取cas返回属性</span><br><span class="line">CasAuthenticationToken principal = (CasAuthenticationToken) request.getUserPrincipal();</span><br><span class="line">UserDetails userDetails = principal.getUserDetails();</span><br><span class="line"><span class="keyword">if</span>(userDetails <span class="keyword">instanceof</span> CustomerUser)&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = ((CustomerUser) userDetails).getMap();</span><br><span class="line">    <span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">        Object value = map.get(key);</span><br><span class="line">        <span class="keyword">if</span> (value != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value <span class="keyword">instanceof</span> List) &#123;</span><br><span class="line">                List list = (List) value;</span><br><span class="line">                Iterator iterator = list.iterator();</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">                    Object object = iterator.next();</span><br><span class="line">                    System.out.println(<span class="string">&quot;key:&quot;</span> + key + <span class="string">&quot;,values[&quot;</span> + i + <span class="string">&quot;]:&quot;</span> + object.toString());</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;key:&quot;</span> + key + <span class="string">&quot;,value:&quot;</span> + value.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CAS服务端基于cas-overlay-template-5.3.14，已实现基于jdbc的自定义登录策略、验证码、动态service配置、多属性返回，等等&lt;/li&gt;
&lt;li&gt;CAS客户端基于spring-boot-2.3.3.RELEASE，spring-security-cas-5.3.4.RELEASE&lt;/li&gt;
&lt;li&gt;本文代码地址：&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter36&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter36&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;其重点是client的UserDetailsService的实现类要继承自AbstractCasAssertionUserDetailsService&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="cas" scheme="https://blog.hanqunfeng.com/tags/cas/"/>
    
  </entry>
  
  <entry>
    <title>AAAAOrder2020-0000001之面试题</title>
    <link href="https://blog.hanqunfeng.com/2020/09/03/mysql100w-delete2/"/>
    <id>https://blog.hanqunfeng.com/2020/09/03/mysql100w-delete2/</id>
    <published>2020-09-03T10:30:05.000Z</published>
    <updated>2020-09-06T02:20:37.006Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>本文内容基于10.4.8-MariaDB</li></ul><div class="note info"><p>Q: 假设一个订单的编号规则是AAAAOrder2020-0000001，AAAAOrder2020-0000002…后面的数字是自增长，如果订单号码达到AAAAOrder2020-1000000(100万)，数据库中应该有100万条数据，此时我随机删除2条数据（物理删除，且不考虑日志和备份），请问怎么找到删掉的数据的编号？给出解题思路即可，答案需要在1秒内运行得到。</p></div><span id="more"></span><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><div class="note info"><ol><li>其实查找丢失数据方法有很多，不过这里重点强调1秒内运行得到，就限制成了只能在数据库层面完成，实现方法基本上就是sql或者存储过程，而且要尽量减少表的扫描次数和扫描范围、尽可能的使用索引。</li><li>订单编号的序号是自增长，所以可以认为数据是按照编号自增的顺序插入数据表的,如果数据表存在单独的自增主键Id，则可以基于错位法得到缺失的主键Id，这样可以使用主键索引，而且主键自增索引的查询效率是最高的。</li><li>如果没有独立的主键Id，而是使用的orderId作为主键，则需要对orderId截断后进行比较，查询条件一定要使用完整的orderId，以便使用索引，也可以使用行号和截断后的订单编号进行比较的方法。具体实现见下文。</li></ol></div><h2 id="参考答案，作者水平有限，仅供学习交流"><a href="#参考答案，作者水平有限，仅供学习交流" class="headerlink" title="参考答案，作者水平有限，仅供学习交流"></a>参考答案，作者水平有限，仅供学习交流</h2><div class="note info"><ol><li>存在自增主键Id，与orderId序号一致，可以通过错位法计算不存在的Id值。<br>运行时间基本符合要求。</li></ol></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id<span class="number">-1</span> <span class="keyword">as</span> id_del <span class="keyword">from</span> test_order <span class="keyword">where</span> id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> id<span class="operator">+</span><span class="number">1</span> <span class="keyword">from</span> test_order);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> id_del <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">233490</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">943220</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">0</span> <span class="operator">|</span>  #这里去除<span class="number">0</span>号记录，因为不存在id为<span class="number">0</span>的记录</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">1.063</span> sec)</span><br></pre></td></tr></table></figure><div class="note info"><ol start="2"><li>如果不存在自增主键ID，而是使用orderId作为主键，则也可以通过错位法计算不存在的Id值，主要比较时一定要用完整的orderId，否则不能使用索引。<br>运行时间超过要求。</li></ol></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">RIGHT</span>(orderId, <span class="number">7</span>) <span class="operator">-</span> <span class="number">1</span> <span class="keyword">AS</span> id_del <span class="keyword">FROM</span> test_order</span><br><span class="line">  <span class="keyword">WHERE</span> orderId <span class="keyword">NOT</span> <span class="keyword">in</span>(</span><br><span class="line">    <span class="keyword">SELECT</span> concat( <span class="keyword">left</span>(orderId, <span class="number">14</span>), LPAD( <span class="keyword">RIGHT</span>(orderId, <span class="number">7</span>) <span class="operator">+</span> <span class="number">1</span>, <span class="number">7</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="keyword">FROM</span> test_order);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> id_del <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">0</span> <span class="operator">|</span>   #这里去除<span class="number">0</span>号记录，因为不存在id为<span class="number">0</span>的记录</span><br><span class="line"><span class="operator">|</span> <span class="number">233490</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">943220</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">2.999</span> sec)</span><br></pre></td></tr></table></figure><div class="note info"><ol start="3"><li>如果不存在自增主键ID，而是使用orderId作为主键，也可以比较orderId的序号与行号，获取到不一致的第一条记录，然后在从该记录开始继续比较获得下一条不一致的记录，也可以通过存储过程实现。<br>运行时间符合要求。</li></ol></div><h3 id="sql示例1"><a href="#sql示例1" class="headerlink" title="sql示例1"></a>sql示例1</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询第一条丢失记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>)<span class="number">-1</span> <span class="keyword">as</span> orderId <span class="keyword">from</span> (</span><br><span class="line">     <span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="variable">@rownum</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> rownum, test_order.orderId  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="number">0</span>) r, test_order</span><br><span class="line">     ) a <span class="keyword">where</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>) <span class="operator">!=</span> a.rownum limit <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span> orderId <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">233490</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.341</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将上面查询结果作为第二条sql的参数，这里上一条查询结果为 233490，所以下面手工填写对应的值，</span></span><br><span class="line"><span class="comment">-- 这里因为limit不能写变量，所以需要手工填写，如果希望一次执行，可以参考后面的sql示例2和存储过程示例</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>)<span class="number">-1</span> <span class="keyword">as</span> orderId <span class="keyword">from</span> (</span><br><span class="line">     <span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="variable">@rownum</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> rownum, test_order.orderId  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="number">0</span>) r, test_order</span><br><span class="line">     limit <span class="number">233489</span>,<span class="number">1000000</span></span><br><span class="line">     ) a <span class="keyword">where</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>)<span class="number">-233490</span> <span class="operator">!=</span> a.rownum limit <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span> orderId <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">943220</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.372</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 验证是否准确</span></span><br><span class="line"><span class="keyword">select</span> orderId <span class="keyword">from</span> test_order limit <span class="number">233488</span>,<span class="number">2</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+</span></span><br><span class="line"><span class="operator">|</span> orderId              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+</span></span><br><span class="line"><span class="operator">|</span> aaaaorder2020<span class="number">-233489</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> aaaaorder2020<span class="number">-233491</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.036</span> sec)</span><br></pre></td></tr></table></figure><h3 id="sql示例2"><a href="#sql示例2" class="headerlink" title="sql示例2"></a>sql示例2</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 可以直接粘贴到mysql终端执行，也可以保存到文件，然后在mysql终端执行source /xx/xx/xx.sql</span></span><br><span class="line"><span class="comment">-- 这里修改定界符，就是为了方便看到一个总的执行时间</span></span><br><span class="line">delimiter ;;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>)<span class="number">-1</span> <span class="keyword">as</span> orderId <span class="keyword">into</span> <span class="variable">@first</span>_order_id <span class="keyword">from</span> (</span><br><span class="line">     <span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="variable">@rownum</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> rownum, test_order.orderId  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="number">0</span>) r, test_order</span><br><span class="line">     ) a <span class="keyword">where</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>) <span class="operator">!=</span> a.rownum limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@second</span>_limit <span class="operator">=</span> <span class="variable">@first</span>_order_id <span class="operator">-</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@limitsql</span> <span class="operator">=</span> CONCAT( <span class="string">&#x27;SELECT @rownum:=@rownum+1 AS rownum, test_order.orderId  FROM (SELECT @rownum:=0) r, test_order</span></span><br><span class="line"><span class="string">limit &#x27;</span>, <span class="variable">@second</span>_limit, <span class="string">&#x27;,1000000&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@SQL</span> <span class="operator">=</span> CONCAT( <span class="string">&#x27;select substring(a.orderId,15)-1 as orderId into @second_order_id from (&#x27;</span>, <span class="variable">@limitsql</span>, <span class="string">&#x27;</span></span><br><span class="line"><span class="string">) a where substring(a.orderId,15)-&#x27;</span>, <span class="variable">@first</span>_order_id, <span class="string">&#x27; != a.rownum limit 1&#x27;</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">PREPARE</span> stmt <span class="keyword">FROM</span> <span class="variable">@SQL</span>;</span><br><span class="line"><span class="keyword">EXECUTE</span> stmt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@del</span>_ids <span class="operator">=</span> concat( <span class="variable">@first</span>_order_id, <span class="string">&#x27;,&#x27;</span>, <span class="variable">@second</span>_order_id );</span><br><span class="line">;;</span><br><span class="line">delimiter ;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@del</span>_ids;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">source <span class="operator">/</span>Users<span class="operator">/</span>hanqf<span class="operator">/</span>Desktop<span class="operator">/</span>exec.sql</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.710</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.710</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.710</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.710</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.710</span> sec)</span><br><span class="line">Statement prepared</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.710</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.710</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="variable">@del</span>_ids      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">233490</span>,<span class="number">943220</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure><h3 id="存储过程示例"><a href="#存储过程示例" class="headerlink" title="存储过程示例"></a>存储过程示例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> IF <span class="keyword">EXISTS</span> find_delete_order_id;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> `find_delete_order_id`(<span class="keyword">OUT</span> del_ids <span class="type">varchar</span>(<span class="number">255</span>))</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> first_order_id <span class="type">INT</span>;</span><br><span class="line">  <span class="keyword">DECLARE</span> second_order_id <span class="type">INT</span>;</span><br><span class="line">  <span class="keyword">DECLARE</span> second_limit <span class="type">INT</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">select</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>)<span class="number">-1</span> <span class="keyword">as</span> orderId <span class="keyword">into</span> first_order_id <span class="keyword">from</span> (</span><br><span class="line">     <span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="variable">@rownum</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> rownum, test_order.orderId  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="number">0</span>) r, test_order</span><br><span class="line">     ) a <span class="keyword">where</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>) <span class="operator">!=</span> a.rownum limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">set</span> second_limit <span class="operator">=</span> first_order_id<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">select</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>)<span class="number">-1</span> <span class="keyword">as</span> orderId <span class="keyword">into</span> second_order_id <span class="keyword">from</span> (</span><br><span class="line">     <span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="variable">@rownum</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> rownum, test_order.orderId  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="number">0</span>) r, test_order</span><br><span class="line">     limit second_limit,<span class="number">1000000</span></span><br><span class="line">     ) a <span class="keyword">where</span> <span class="built_in">substring</span>(a.orderId,<span class="number">15</span>)<span class="operator">-</span>first_order_id <span class="operator">!=</span> a.rownum limit <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">set</span> del_ids <span class="operator">=</span> concat(first_order_id,<span class="string">&#x27;,&#x27;</span>,second_order_id);</span><br><span class="line">  <span class="comment">-- 此处为了方便测试，所以在存储过程中就打印了结果</span></span><br><span class="line">  <span class="keyword">select</span> del_ids;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CALL</span> `find_delete_order_id`(<span class="variable">@del</span>_ids);</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> del_ids       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">233490</span>,<span class="number">943220</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.704</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected (<span class="number">0.704</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@del</span>_ids;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="variable">@del</span>_ids      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">233490</span>,<span class="number">943220</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure><h2 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `test_order`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test_order` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `orderId` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `index_order_id` (`orderId`) <span class="keyword">USING</span> HASH</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><h2 id="数据初始化"><a href="#数据初始化" class="headerlink" title="数据初始化"></a>数据初始化</h2><div class="note info"><p>说明：</p><ol><li><p>直接将100w的数据插入数据表有点慢，实测130多秒吧，这里可以先将数据初始化到内存表中，然后再从内存表导入即可，总时间大概只需要12秒左右。</p></li><li><p>因为数据都是写入内存中，所以写入数据时可能会报内存不足，解决方法如下：<br>a.永久修改，在my.cnf中增加如下配置:<br> tmp_table_size=1G<br> max_heap_table_size=1G</p><p>b.临时修改,mysql终端执行：<br> set tmp_table_size = 1073741824;<br> set max_heap_table_size = 1073741824;<br> show variables like “%table_size%”;</p></li></ol></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建内存表，重启数据库后，内存表中的数据会被清空，但是表结构依旧存在，不需要时可以drop掉</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `test_order_memory`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `test_order_memory` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `orderId` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `index_order_id` (`orderId`) <span class="keyword">USING</span> HASH</span><br><span class="line">) ENGINE<span class="operator">=</span>MEMORY AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 初始化内存表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> IF <span class="keyword">EXISTS</span> add_test_order_memory;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> `add_test_order_memory`(<span class="keyword">IN</span> n <span class="type">int</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>;</span><br><span class="line">    WHILE (i <span class="operator">&lt;=</span> n ) DO</span><br><span class="line">      <span class="keyword">INSERT</span> <span class="keyword">INTO</span> test_order_memory (orderId) <span class="keyword">VALUES</span> (concat(<span class="string">&#x27;aaaaorder2020-&#x27;</span>,LPAD(i, <span class="number">7</span>, <span class="number">0</span>)));</span><br><span class="line">      <span class="keyword">set</span> i<span class="operator">=</span>i<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> WHILE;</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建1000000条数据</span></span><br><span class="line"><span class="keyword">call</span> add_test_order_memory(<span class="number">1000000</span>);</span><br><span class="line">Query OK, <span class="number">1000000</span> <span class="keyword">rows</span> affected (<span class="number">7.354</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将内存表中数据导入实际表中</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">into</span> test_order <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span>  test_order_memory;</span><br><span class="line">Query OK, <span class="number">1000000</span> <span class="keyword">rows</span> affected (<span class="number">5.035</span> sec)</span><br><span class="line">Records: <span class="number">1000000</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看结果</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_order limit <span class="number">5</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> orderId               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-----------------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> aaaaorder2020<span class="number">-0000001</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> aaaaorder2020<span class="number">-0000002</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> aaaaorder2020<span class="number">-0000003</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> aaaaorder2020<span class="number">-0000004</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> aaaaorder2020<span class="number">-0000005</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-----------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除两条数据，这里就随便填两个id号</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> test_order <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="number">233490</span>,<span class="number">943220</span>);</span><br><span class="line">Query OK, <span class="number">2</span> <span class="keyword">rows</span> affected (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本文内容基于10.4.8-MariaDB&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;Q: 假设一个订单的编号规则是AAAAOrder2020-0000001，AAAAOrder2020-0000002…后面的数字是自增长，如果订单号码达到AAAAOrder2020-1000000(100万)，数据库中应该有100万条数据，此时我随机删除2条数据（物理删除，且不考虑日志和备份），请问怎么找到删掉的数据的编号？给出解题思路即可，答案需要在1秒内运行得到。&lt;/p&gt;
&lt;/div&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>HttpClient、OkHttp、RestTemplate、WebClient的基本使用</title>
    <link href="https://blog.hanqunfeng.com/2020/04/18/http-utils/"/>
    <id>https://blog.hanqunfeng.com/2020/04/18/http-utils/</id>
    <published>2020-04-18T15:20:15.000Z</published>
    <updated>2020-05-02T12:43:19.449Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>本文内容基于org.apache.httpcomponents:httpclient:4.5.12，com.squareup.okhttp3:okhttp:4.5.0，springboot:2.2.6.RELEASE，spring-boot-starter-webflux:2.2.6.RELEASE</li><li>工具类，实现get/post[参数，json，输入流，文件，gzip]等方法</li><li>提供了测试用例及服务端demo</li><li>github：<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter26">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter26</a></li></ul><span id="more"></span><h2 id="HttpClientUtil"><a href="#HttpClientUtil" class="headerlink" title="HttpClientUtil"></a>HttpClientUtil</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.Header;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpRequestBase;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.utils.URIBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.concurrent.FutureCallback;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.ByteArrayEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.ContentType;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.mime.MultipartEntityBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.DefaultHttpRequestRetryHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClientBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.nio.client.CloseableHttpAsyncClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.nio.client.HttpAsyncClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.GZIPInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.GZIPOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;HttpClient工具类&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/4/18 14:54.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> RequestConfig requestConfig = RequestConfig.custom()</span><br><span class="line">            <span class="comment">// 设置连接超时时间(单位毫秒)</span></span><br><span class="line">            .setConnectTimeout(<span class="number">5000</span>)</span><br><span class="line">            <span class="comment">// 设置请求超时时间(单位毫秒)</span></span><br><span class="line">            .setConnectionRequestTimeout(<span class="number">5000</span>)</span><br><span class="line">            <span class="comment">// socket读写超时时间(单位毫秒)</span></span><br><span class="line">            .setSocketTimeout(<span class="number">5000</span>)</span><br><span class="line">            <span class="comment">// 设置是否允许重定向(默认为true)</span></span><br><span class="line">            .setRedirectsEnabled(<span class="keyword">true</span>)</span><br><span class="line">            <span class="comment">//是否启用内容压缩，默认true</span></span><br><span class="line">            .setContentCompressionEnabled(<span class="keyword">true</span>)</span><br><span class="line">            .build();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得Http客户端</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> CloseableHttpClient HTTP_CLIENT = HttpClientBuilder.create()</span><br><span class="line">            .setRetryHandler(<span class="keyword">new</span> DefaultHttpRequestRetryHandler()) <span class="comment">//失败重试，默认3次</span></span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异步Http客户端</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> CloseableHttpAsyncClient HTTP_ASYNC_CLIENT = HttpAsyncClients.custom()</span><br><span class="line">            .setDefaultRequestConfig(requestConfig)</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;异步请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> httpRequestBase</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/22 21:16</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">executeAsync</span><span class="params">(HttpRequestBase httpRequestBase)</span> </span>&#123;</span><br><span class="line">        HTTP_ASYNC_CLIENT.start();</span><br><span class="line">        HTTP_ASYNC_CLIENT.execute(httpRequestBase, <span class="keyword">new</span> FutureCallback&lt;HttpResponse&gt;() &#123;</span><br><span class="line">            <span class="meta">@SneakyThrows</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">completed</span><span class="params">(HttpResponse httpResponse)</span> </span>&#123;</span><br><span class="line">                log.info(<span class="string">&quot; callback thread id is : &quot;</span> + Thread.currentThread().getId());</span><br><span class="line">                log.info(httpRequestBase.getRequestLine() + <span class="string">&quot;-&gt;&quot;</span> + httpResponse.getStatusLine());</span><br><span class="line"></span><br><span class="line">                StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">                <span class="keyword">for</span> (Header header : httpRequestBase.getAllHeaders()) &#123;</span><br><span class="line">                    stringBuffer.append(header.toString()).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                log.info(String.format(<span class="string">&quot;请求头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                String responseResult = <span class="keyword">null</span>;</span><br><span class="line">                HttpEntity responseEntity = httpResponse.getEntity();</span><br><span class="line">                log.debug(<span class="string">&quot;响应状态为:&quot;</span> + httpResponse.getStatusLine());</span><br><span class="line">                <span class="keyword">if</span> (responseEntity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    responseResult = EntityUtils.toString(responseEntity, StandardCharsets.UTF_8);</span><br><span class="line">                    log.info(<span class="string">&quot;响应内容为:&quot;</span> + responseResult);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">                <span class="keyword">for</span> (Header header : httpResponse.getAllHeaders()) &#123;</span><br><span class="line">                    stringBuffer.append(header.toString()).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                log.info(String.format(<span class="string">&quot;响应头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">failed</span><span class="params">(Exception e)</span> </span>&#123;</span><br><span class="line">                log.info(<span class="string">&quot; callback thread id is : &quot;</span> + Thread.currentThread().getId());</span><br><span class="line">                log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                log.info(httpRequestBase.getRequestLine() + <span class="string">&quot; cancelled&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;请求的执行方法，需要提前封装好httpRequestBase对象，如请求url和请求参数&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> httpRequestBase</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 22:08</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">execute</span><span class="params">(HttpRequestBase httpRequestBase)</span> </span>&#123;</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求地址: [%s]&quot;</span>, httpRequestBase.getURI().toString()));</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求类型: [%s]&quot;</span>, httpRequestBase.getMethod()));</span><br><span class="line"></span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (Header header : httpRequestBase.getAllHeaders()) &#123;</span><br><span class="line">            stringBuffer.append(header.toString()).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求参数: [%s]&quot;</span>, httpRequestBase.getURI().getQuery()));</span><br><span class="line"></span><br><span class="line">        String responseResult = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 响应模型</span></span><br><span class="line">        CloseableHttpResponse response = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 将上面的配置信息 运用到这个Get请求里</span></span><br><span class="line">            httpRequestBase.setConfig(requestConfig);</span><br><span class="line">            <span class="keyword">long</span> t1 = System.nanoTime();<span class="comment">//请求发起的时间</span></span><br><span class="line">            response = HTTP_CLIENT.execute(httpRequestBase);</span><br><span class="line">            <span class="comment">// 从响应模型中获取响应实体</span></span><br><span class="line">            HttpEntity responseEntity = response.getEntity();</span><br><span class="line">            log.debug(<span class="string">&quot;响应状态为:&quot;</span> + response.getStatusLine());</span><br><span class="line">            <span class="keyword">long</span> t2 = System.nanoTime();<span class="comment">//收到响应的时间</span></span><br><span class="line">            <span class="keyword">if</span> (responseEntity != <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">                responseResult = EntityUtils.toString(responseEntity, StandardCharsets.UTF_8);</span><br><span class="line"></span><br><span class="line">                log.debug(<span class="string">&quot;响应内容为:&quot;</span> + responseResult);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            <span class="keyword">for</span> (Header header : response.getAllHeaders()) &#123;</span><br><span class="line">                stringBuffer.append(header.toString()).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(String.format(<span class="string">&quot;响应头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line"></span><br><span class="line">            log.info(String.format(<span class="string">&quot;执行时间: [%.1fms]&quot;</span>, (t2 - t1) / <span class="number">1e6d</span>));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    response.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;请求的执行方法，需要提前封装好httpRequestBase对象，如请求url和请求参数&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> httpRequestBase</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> byte[]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/29 13:33</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] executeBytes(HttpRequestBase httpRequestBase) &#123;</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求地址: [%s]&quot;</span>, httpRequestBase.getURI().toString()));</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求类型: [%s]&quot;</span>, httpRequestBase.getMethod()));</span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (Header header : httpRequestBase.getAllHeaders()) &#123;</span><br><span class="line">            stringBuffer.append(header.toString()).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求参数: [%s]&quot;</span>, httpRequestBase.getURI().getQuery()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 响应模型</span></span><br><span class="line">        CloseableHttpResponse response = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 将上面的配置信息 运用到这个Get请求里</span></span><br><span class="line">            httpRequestBase.setConfig(requestConfig);</span><br><span class="line">            <span class="keyword">long</span> t1 = System.nanoTime();<span class="comment">//请求发起的时间</span></span><br><span class="line">            response = HTTP_CLIENT.execute(httpRequestBase);</span><br><span class="line">            <span class="comment">// 从响应模型中获取响应实体</span></span><br><span class="line">            HttpEntity responseEntity = response.getEntity();</span><br><span class="line">            log.debug(<span class="string">&quot;响应状态为:&quot;</span> + response.getStatusLine());</span><br><span class="line">            <span class="keyword">long</span> t2 = System.nanoTime();<span class="comment">//收到响应的时间</span></span><br><span class="line">            <span class="keyword">if</span> (responseEntity != <span class="keyword">null</span>) &#123;</span><br><span class="line">                bytes = EntityUtils.toByteArray(responseEntity);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--start</span></span><br><span class="line">                Header responseHeader = response.getFirstHeader(<span class="string">&quot;Content-Encoding&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (responseHeader != <span class="keyword">null</span> &amp;&amp; responseHeader.getValue().contains(<span class="string">&quot;gzip&quot;</span>)) &#123;</span><br><span class="line">                    GZIPInputStream gzipInputStream = <span class="keyword">null</span>;</span><br><span class="line">                    ByteArrayOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        gzipInputStream = <span class="keyword">new</span> GZIPInputStream(<span class="keyword">new</span> ByteArrayInputStream(bytes));</span><br><span class="line">                        out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                        <span class="keyword">int</span> offset = -<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">while</span> ((offset = gzipInputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                            out.write(buffer, <span class="number">0</span>, offset);</span><br><span class="line">                        &#125;</span><br><span class="line">                        bytes = out.toByteArray();</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            gzipInputStream.close();</span><br><span class="line">                            out.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--end</span></span><br><span class="line"></span><br><span class="line">                log.debug(<span class="string">&quot;响应byte长度:&quot;</span> + bytes.length);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            <span class="keyword">for</span> (Header header : response.getAllHeaders()) &#123;</span><br><span class="line">                stringBuffer.append(header.toString()).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(String.format(<span class="string">&quot;响应头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line"></span><br><span class="line">            log.info(String.format(<span class="string">&quot;执行时间: [%.1fms]&quot;</span>, (t2 - t1) / <span class="number">1e6d</span>));</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    response.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;get请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String 响应结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 15:57</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(url, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;get请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String 响应结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 15:49</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        HttpGet httpGet = <span class="keyword">null</span>;</span><br><span class="line">        List&lt;NameValuePair&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> BasicNameValuePair(key, params.get(key).toString()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 由客户端执行(发送)Get请求</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URI uri = <span class="keyword">new</span> URIBuilder(url).addParameters(list).build();</span><br><span class="line">            <span class="comment">// 创建Get请求</span></span><br><span class="line">            httpGet = <span class="keyword">new</span> HttpGet(uri);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute(httpGet);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;get请求，返回字节数组&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> byte[]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/29 13:35</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getBytes(String url, Map&lt;String, Object&gt; params) &#123;</span><br><span class="line">        HttpGet httpGet = <span class="keyword">null</span>;</span><br><span class="line">        List&lt;NameValuePair&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> BasicNameValuePair(key, params.get(key).toString()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 由客户端执行(发送)Get请求</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URI uri = <span class="keyword">new</span> URIBuilder(url).addParameters(list).build();</span><br><span class="line">            <span class="comment">// 创建Get请求</span></span><br><span class="line">            httpGet = <span class="keyword">new</span> HttpGet(uri);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> executeBytes(httpGet);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url 请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String 响应结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 15:54</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> post(url, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url    请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params 请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String 响应结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 15:50</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        HttpPost httpPost = <span class="keyword">null</span>;</span><br><span class="line">        List&lt;NameValuePair&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> BasicNameValuePair(key, params.get(key).toString()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URI uri = <span class="keyword">new</span> URIBuilder(url).addParameters(list).build();</span><br><span class="line">            httpPost = <span class="keyword">new</span> HttpPost(uri);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> execute(httpPost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，返回字节数组&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> byte[]</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/29 13:35</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] postBytes(String url, Map&lt;String, Object&gt; params) &#123;</span><br><span class="line">        HttpPost httpPost = <span class="keyword">null</span>;</span><br><span class="line">        List&lt;NameValuePair&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> BasicNameValuePair(key, params.get(key).toString()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URI uri = <span class="keyword">new</span> URIBuilder(url).addParameters(list).build();</span><br><span class="line">            httpPost = <span class="keyword">new</span> HttpPost(uri);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> executeBytes(httpPost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，请求体为json&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url  请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json 请求json</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String 响应结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 16:02</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postJson</span><span class="params">(String url, String json)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postJson(url, json, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，请求体为json&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url  请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json 请求json</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gzip 是否开启gzip压缩</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String 响应结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 16:02</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postJson</span><span class="params">(String url, String json, <span class="keyword">boolean</span> gzip)</span> </span>&#123;</span><br><span class="line">        HttpPost httpPost = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URI uri = <span class="keyword">new</span> URIBuilder(url).build();</span><br><span class="line">            httpPost = <span class="keyword">new</span> HttpPost(uri);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// post请求是将参数放在请求体里面传过去的,这里将entity放入post请求体中</span></span><br><span class="line"></span><br><span class="line">            httpPost.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json;charset=utf8&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (gzip) &#123;</span><br><span class="line">                httpPost.setHeader(<span class="string">&quot;Content-Encoding&quot;</span>, <span class="string">&quot;gzip&quot;</span>);</span><br><span class="line">                ByteArrayOutputStream originalContent = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                originalContent.write(json.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">                ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                GZIPOutputStream gzipOut = <span class="keyword">new</span> GZIPOutputStream(baos);</span><br><span class="line">                originalContent.writeTo(gzipOut);</span><br><span class="line">                gzipOut.finish();</span><br><span class="line">                httpPost.setEntity(<span class="keyword">new</span> ByteArrayEntity(baos</span><br><span class="line">                        .toByteArray(), ContentType.create(<span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;utf-8&quot;</span>)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                StringEntity entity = <span class="keyword">new</span> StringEntity(json, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                httpPost.setEntity(entity);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> execute(httpPost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，请求参数中有中文的话可以使用这个请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url    请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params 请求参数，只可以为中文</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 16:30</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postForm</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        HttpPost httpPost = <span class="keyword">null</span>;</span><br><span class="line">        List&lt;NameValuePair&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> BasicNameValuePair(key, params.get(key).toString()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            UrlEncodedFormEntity urlEncodedFormEntity = <span class="keyword">new</span> UrlEncodedFormEntity(list, StandardCharsets.UTF_8);</span><br><span class="line">            URI uri = <span class="keyword">new</span> URIBuilder(url).build();</span><br><span class="line">            httpPost = <span class="keyword">new</span> HttpPost(uri);</span><br><span class="line">            httpPost.setHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">            httpPost.setEntity(urlEncodedFormEntity);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> execute(httpPost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，输入流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url   请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes 请求输入流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 16:37</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postInputBytes</span><span class="params">(String url, <span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postInputBytes(url, bytes, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，输入流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url   请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes 请求输入流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gzip  是否开启gzip压缩</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 16:37</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postInputBytes</span><span class="params">(String url, <span class="keyword">byte</span>[] bytes, <span class="keyword">boolean</span> gzip)</span> </span>&#123;</span><br><span class="line">        HttpPost httpPost = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URI uri = <span class="keyword">new</span> URIBuilder(url).build();</span><br><span class="line">            httpPost = <span class="keyword">new</span> HttpPost(uri);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// post请求是将参数放在请求体里面传过去的,这里将entity放入post请求体中</span></span><br><span class="line">            <span class="keyword">if</span> (gzip) &#123;</span><br><span class="line">                httpPost.setHeader(<span class="string">&quot;Content-Encoding&quot;</span>, <span class="string">&quot;gzip&quot;</span>);</span><br><span class="line">                ByteArrayOutputStream originalContent = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                originalContent.write(bytes);</span><br><span class="line">                ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                GZIPOutputStream gzipOut = <span class="keyword">new</span> GZIPOutputStream(baos);</span><br><span class="line">                originalContent.writeTo(gzipOut);</span><br><span class="line">                gzipOut.finish();</span><br><span class="line">                httpPost.setEntity(<span class="keyword">new</span> ByteArrayEntity(baos</span><br><span class="line">                        .toByteArray(), ContentType.create(<span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;utf-8&quot;</span>)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ByteArrayEntity entity = <span class="keyword">new</span> ByteArrayEntity(bytes, ContentType.create(<span class="string">&quot;text/plain&quot;</span>, <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">                httpPost.setEntity(entity);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> execute(httpPost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> is</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/21 22:24</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postInputStream</span><span class="params">(String url, InputStream is)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postInputStream(url, is, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> is</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gzip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/21 22:24</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postInputStream</span><span class="params">(String url, InputStream is, <span class="keyword">boolean</span> gzip)</span> </span>&#123;</span><br><span class="line">        ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> ch;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> ((ch = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                byteArrayOutputStream.write(buffer, <span class="number">0</span>, ch);</span><br><span class="line">            &#125;</span><br><span class="line">            bytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">            byteArrayOutputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> postInputBytes(url, bytes, gzip);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，传输附件&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url   请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> files 文件列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 16:52</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postFile</span><span class="params">(String url, File[] files)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postFile(url, <span class="keyword">new</span> HashMap&lt;&gt;(), files);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，传输附件&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url    请求地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params 其它参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> files  文件列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 16:50</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postFile</span><span class="params">(String url, Map&lt;String, Object&gt; params, File[] files)</span> </span>&#123;</span><br><span class="line">        HttpPost httpPost = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URI uri = <span class="keyword">new</span> URIBuilder(url).build();</span><br><span class="line">            httpPost = <span class="keyword">new</span> HttpPost(uri);</span><br><span class="line"></span><br><span class="line">            MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();</span><br><span class="line">            String filesKey = <span class="string">&quot;files&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">                <span class="comment">//multipartEntityBuilder.addPart(filesKey,new FileBody(file)); //与下面的语句作用相同</span></span><br><span class="line">                <span class="comment">//multipartEntityBuilder.addBinaryBody(filesKey, file);</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 防止服务端收到的文件名乱码。 我们这里可以先将文件名URLEncode，然后服务端拿到文件名时在URLDecode。就能避免乱码问题。</span></span><br><span class="line">                <span class="comment">// 文件名其实是放在请求头的Content-Disposition里面进行传输的，如其值为form-data; name=&quot;files&quot;; filename=&quot;头像.jpg&quot;</span></span><br><span class="line">                multipartEntityBuilder.addBinaryBody(filesKey, file, ContentType.DEFAULT_BINARY, URLEncoder.encode(file.getName(), <span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 其它参数(注:自定义contentType，设置UTF-8是为了防止服务端拿到的参数出现乱码)</span></span><br><span class="line">            ContentType contentType = ContentType.create(<span class="string">&quot;text/plain&quot;</span>, StandardCharsets.UTF_8);</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                multipartEntityBuilder.addTextBody(key, params.get(key).toString(), contentType);</span><br><span class="line">            &#125;</span><br><span class="line">            HttpEntity entity = multipartEntityBuilder.build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// post请求是将参数放在请求体里面传过去的,这里将entity放入post请求体中</span></span><br><span class="line">            httpPost.setEntity(entity);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> execute(httpPost);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="OkHttpUtil"><a href="#OkHttpUtil" class="headerlink" title="OkHttpUtil"></a>OkHttpUtil</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> okhttp3.*;</span><br><span class="line"><span class="keyword">import</span> okio.BufferedSink;</span><br><span class="line"><span class="keyword">import</span> okio.GzipSink;</span><br><span class="line"><span class="keyword">import</span> okio.Okio;</span><br><span class="line"><span class="keyword">import</span> org.jetbrains.annotations.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.GZIPInputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;OkHttp工具类&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/4/18 21:54.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OkHttpUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得OkHttpClient客户端</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> OkHttpClient client = <span class="keyword">new</span> OkHttpClient.Builder()</span><br><span class="line">            .connectTimeout(<span class="number">5L</span>, TimeUnit.SECONDS) <span class="comment">//连接超时时间，5秒</span></span><br><span class="line">            .readTimeout(<span class="number">5L</span>, TimeUnit.SECONDS) <span class="comment">//读超时时间，5秒</span></span><br><span class="line">            .writeTimeout(<span class="number">5L</span>, TimeUnit.SECONDS) <span class="comment">//写超时时间，5秒</span></span><br><span class="line">            .followRedirects(<span class="keyword">true</span>) <span class="comment">//设置是否允许重定向，默认true</span></span><br><span class="line">            <span class="comment">//注意拦截器的顺序</span></span><br><span class="line">            .addInterceptor(<span class="keyword">new</span> GzipRequestInterceptor()) <span class="comment">//开启gzip压缩，支持对流或Json进行gzip压缩，服务端需要支持解压缩</span></span><br><span class="line">            .addInterceptor(<span class="keyword">new</span> RetryIntercepter()) <span class="comment">//重试拦截器，默认3次</span></span><br><span class="line">            .addInterceptor(<span class="keyword">new</span> HeadersLoggingInterceper()) <span class="comment">//header拦截器</span></span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;异步调用&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/22 20:37</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">executeAsync</span><span class="params">(Request request)</span></span>&#123;</span><br><span class="line">        Call call = client.newCall(request);</span><br><span class="line">        call.enqueue(<span class="keyword">new</span> Callback() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="meta">@NotNull</span> Call call, <span class="meta">@NotNull</span> IOException e)</span> </span>&#123;</span><br><span class="line">                log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onResponse</span><span class="params">(<span class="meta">@NotNull</span> Call call, <span class="meta">@NotNull</span> Response response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                String responseResult = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">if</span> (response.isSuccessful()) &#123;</span><br><span class="line">                    responseResult = Objects.requireNonNull(response.body()).string();</span><br><span class="line">                &#125;</span><br><span class="line">                Headers headers = response.headers();</span><br><span class="line">                StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;headers.size();i++)&#123;</span><br><span class="line">                    stringBuffer.append(headers.name(i)).append(<span class="string">&quot;:&quot;</span>).append(headers.value(i)).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                log.info(String.format(<span class="string">&quot;响应头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line">                log.info(String.format(<span class="string">&quot;响应结果：%s&quot;</span>,responseResult));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;请求的执行方法，需要提前封装好Request对象，如请求url和请求参数&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 23:47</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">execute</span><span class="params">(Request request)</span> </span>&#123;</span><br><span class="line">        String responseResult = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">long</span> t1 = System.nanoTime();<span class="comment">//请求发起的时间</span></span><br><span class="line">            Response response = client.newCall(request).execute();</span><br><span class="line">            <span class="keyword">if</span> (response.isSuccessful()) &#123;</span><br><span class="line">                responseResult = Objects.requireNonNull(response.body()).string();</span><br><span class="line">                <span class="comment">//byte[] bytes = response.body().bytes();</span></span><br><span class="line">                <span class="comment">//responseResult = new String(bytes,&quot;utf-8&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">long</span> t2 = System.nanoTime();<span class="comment">//收到响应的时间</span></span><br><span class="line">            Headers headers = response.headers();</span><br><span class="line"></span><br><span class="line">            StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;headers.size();i++)&#123;</span><br><span class="line">                stringBuffer.append(headers.name(i)).append(<span class="string">&quot;:&quot;</span>).append(headers.value(i)).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(String.format(<span class="string">&quot;响应头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line"></span><br><span class="line">            log.info(String.format(<span class="string">&quot;执行时间: [%.1fms]&quot;</span>, (t2 - t1) / <span class="number">1e6d</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] executeBytes(Request request) &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">long</span> t1 = System.nanoTime();<span class="comment">//请求发起的时间</span></span><br><span class="line">            Response response = client.newCall(request).execute();</span><br><span class="line">            <span class="keyword">if</span> (response.isSuccessful()) &#123;</span><br><span class="line">                bytes = Objects.requireNonNull(response.body()).bytes();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--start</span></span><br><span class="line">                String responseHeader = response.header(<span class="string">&quot;Content-Encoding&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (responseHeader != <span class="keyword">null</span> &amp;&amp; responseHeader.contains(<span class="string">&quot;gzip&quot;</span>)) &#123;</span><br><span class="line">                    GZIPInputStream gzipInputStream = <span class="keyword">null</span>;</span><br><span class="line">                    ByteArrayOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        gzipInputStream = <span class="keyword">new</span> GZIPInputStream(<span class="keyword">new</span> ByteArrayInputStream(bytes));</span><br><span class="line">                        out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                        <span class="keyword">int</span> offset = -<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">while</span> ((offset = gzipInputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                            out.write(buffer, <span class="number">0</span>, offset);</span><br><span class="line">                        &#125;</span><br><span class="line">                        bytes = out.toByteArray();</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            gzipInputStream.close();</span><br><span class="line">                            out.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--end</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">long</span> t2 = System.nanoTime();<span class="comment">//收到响应的时间</span></span><br><span class="line">            Headers headers = response.headers();</span><br><span class="line">            StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;headers.size();i++)&#123;</span><br><span class="line">                stringBuffer.append(headers.name(i)).append(<span class="string">&quot;:&quot;</span>).append(headers.value(i)).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(String.format(<span class="string">&quot;响应头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line"></span><br><span class="line">            log.info(String.format(<span class="string">&quot;执行时间: [%.1fms]&quot;</span>, (t2 - t1) / <span class="number">1e6d</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;Get responseResult：&quot;</span>, e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;get请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url 请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 23:48</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(url, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;get请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/20 16:40</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            stringBuffer.append(url);</span><br><span class="line">            <span class="keyword">if</span> (url.contains(<span class="string">&quot;?&quot;</span>)) &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                stringBuffer.append(key).append(<span class="string">&quot;=&quot;</span>).append(params.get(key).toString()).append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            url = stringBuffer.toString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .get()</span><br><span class="line">                .build();</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求地址: [%s]&quot;</span>, request.url()));</span><br><span class="line">        <span class="keyword">if</span> (params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            JSONArray jArray = <span class="keyword">new</span> JSONArray();</span><br><span class="line">            jArray.add(params);</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求参数: %s&quot;</span>, jArray.toJSONString()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//executeAsync(request);</span></span><br><span class="line">        <span class="keyword">return</span> execute(request);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getBytes(String url, Map&lt;String, Object&gt; params) &#123;</span><br><span class="line">        <span class="keyword">if</span> (params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            stringBuffer.append(url);</span><br><span class="line">            <span class="keyword">if</span> (url.contains(<span class="string">&quot;?&quot;</span>)) &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                stringBuffer.append(key).append(<span class="string">&quot;=&quot;</span>).append(params.get(key).toString()).append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            url = stringBuffer.toString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .get()</span><br><span class="line">                .build();</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求地址: [%s]&quot;</span>, request.url()));</span><br><span class="line">        <span class="keyword">if</span> (params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            JSONArray jArray = <span class="keyword">new</span> JSONArray();</span><br><span class="line">            jArray.add(params);</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求参数: %s&quot;</span>, jArray.toJSONString()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> executeBytes(request);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url 请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 23:48</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> post(url, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * form请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url    请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params 请求参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 23:49</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//请求头会加入：application/x-www-form-urlencoded</span></span><br><span class="line">        FormBody.Builder builder = <span class="keyword">new</span> FormBody.Builder();</span><br><span class="line">        <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">            builder.add(key, params.get(key).toString());</span><br><span class="line">        &#125;</span><br><span class="line">        RequestBody requestBody = builder.build();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(requestBody)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求地址: [%s]&quot;</span>, request.url()));</span><br><span class="line">        <span class="keyword">if</span> (params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            JSONArray jArray = <span class="keyword">new</span> JSONArray();</span><br><span class="line">            jArray.add(params);</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求参数: %s&quot;</span>, jArray.toJSONString()));</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求类型: %s&quot;</span>, Objects.requireNonNull(Objects.requireNonNull(request.body()).contentType()).toString()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> execute(request);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] postBytes(String url, Map&lt;String, Object&gt; params) &#123;</span><br><span class="line">        <span class="comment">//请求头会加入：application/x-www-form-urlencoded</span></span><br><span class="line">        FormBody.Builder builder = <span class="keyword">new</span> FormBody.Builder();</span><br><span class="line">        <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">            builder.add(key, params.get(key).toString());</span><br><span class="line">        &#125;</span><br><span class="line">        RequestBody requestBody = builder.build();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(requestBody)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求地址: [%s]&quot;</span>, request.url()));</span><br><span class="line">        <span class="keyword">if</span> (params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            JSONArray jArray = <span class="keyword">new</span> JSONArray();</span><br><span class="line">            jArray.add(params);</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求参数: %s&quot;</span>, jArray.toJSONString()));</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求类型: %s&quot;</span>, Objects.requireNonNull(Objects.requireNonNull(request.body()).contentType()).toString()));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> executeBytes(request);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，json请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url  请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json json数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 23:50</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, String json)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        MediaType mediaType = MediaType.parse(<span class="string">&quot;application/json; charset=utf8&quot;</span>);</span><br><span class="line">        RequestBody requestBody = RequestBody.create(json, mediaType);</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(requestBody)</span><br><span class="line">                .build();</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求地址: [%s]&quot;</span>, request.url()));</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求参数: %s&quot;</span>, json));</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求类型: %s&quot;</span>, Objects.requireNonNull(Objects.requireNonNull(request.body()).contentType()).toString()));</span><br><span class="line">        <span class="keyword">return</span> execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，字节流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url   请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes 字节数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 23:51</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, <span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        MediaType mediaType = MediaType.parse(<span class="string">&quot;application/octet-stream&quot;</span>);</span><br><span class="line">        RequestBody requestBody = <span class="keyword">null</span>;</span><br><span class="line">        requestBody = RequestBody.create(bytes, mediaType);</span><br><span class="line"></span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(requestBody)</span><br><span class="line">                .build();</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求地址: [%s]&quot;</span>, request.url()));</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求类型: %s&quot;</span>, Objects.requireNonNull(Objects.requireNonNull(request.body()).contentType()).toString()));</span><br><span class="line">        <span class="keyword">return</span> execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，字节流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> is</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/21 22:45</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, InputStream is)</span> </span>&#123;</span><br><span class="line">        ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> ch;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> ((ch = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                byteArrayOutputStream.write(buffer, <span class="number">0</span>, ch);</span><br><span class="line">            &#125;</span><br><span class="line">            bytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">            byteArrayOutputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> post(url, bytes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，文件传输&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url   请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> files 文件列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 23:52</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, File[] files)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> post(url, <span class="keyword">new</span> HashMap&lt;&gt;(), files);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，文件传输&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url    请求url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params 参数map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> files  文件列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/18 23:52</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, Map&lt;String, Object&gt; params, File[] files)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        MultipartBody.Builder builder = <span class="keyword">new</span> MultipartBody.Builder()</span><br><span class="line">                .setType(MultipartBody.FORM);</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String filesKey = <span class="string">&quot;files&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">                <span class="comment">//URLEncoder.encode(file.getName(), &quot;utf-8&quot;) //中文文件名使用encode，服务端使用decode解析</span></span><br><span class="line">                builder.addFormDataPart(filesKey, URLEncoder.encode(file.getName(), <span class="string">&quot;utf-8&quot;</span>),</span><br><span class="line">                        RequestBody.create(file, MediaType.parse(<span class="string">&quot;multipart/form-data&quot;</span>)));</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                builder.addFormDataPart(key, params.get(key).toString());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        RequestBody requestBody = builder.build();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .url(url)</span><br><span class="line">                .post(requestBody)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求地址: [%s]&quot;</span>, request.url()));</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            JSONArray jArray = <span class="keyword">new</span> JSONArray();</span><br><span class="line">            jArray.add(params);</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求参数: %s&quot;</span>, jArray.toJSONString()));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (files != <span class="keyword">null</span> &amp;&amp; files.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            JSONArray jArray = <span class="keyword">new</span> JSONArray();</span><br><span class="line">            jArray.add(files);</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求参数: %s&quot;</span>, jArray.toJSONString()));</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(String.format(<span class="string">&quot;请求类型: %s&quot;</span>, Objects.requireNonNull(Objects.requireNonNull(request.body()).contentType()).toString()));</span><br><span class="line">        <span class="keyword">return</span> execute(request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * This interceptor compresses the HTTP request body. Many webservers can&#x27;t handle this!</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">GzipRequestInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line">        <span class="meta">@NotNull</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            Request originalRequest = chain.request();</span><br><span class="line">            <span class="keyword">if</span> (originalRequest.body() == <span class="keyword">null</span> || originalRequest.header(<span class="string">&quot;Content-Encoding&quot;</span>) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> chain.proceed(originalRequest);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            MediaType mediaType = Objects.requireNonNull(originalRequest.body()).contentType();</span><br><span class="line">            <span class="comment">//对流和json开启压缩</span></span><br><span class="line">            <span class="keyword">if</span> (mediaType != <span class="keyword">null</span> &amp;&amp; (<span class="string">&quot;application/octet-stream&quot;</span>.equals(mediaType.toString()) || <span class="string">&quot;application/json; charset=utf8&quot;</span>.equals(mediaType.toString()))) &#123;</span><br><span class="line">                Request compressedRequest = originalRequest.newBuilder()</span><br><span class="line">                        .header(<span class="string">&quot;Content-Encoding&quot;</span>, <span class="string">&quot;gzip&quot;</span>)</span><br><span class="line">                        .method(originalRequest.method(), gzip(originalRequest.body()))</span><br><span class="line">                        .build();</span><br><span class="line">                <span class="keyword">return</span> chain.proceed(compressedRequest);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> chain.proceed(originalRequest);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> RequestBody <span class="title">gzip</span><span class="params">(<span class="keyword">final</span> RequestBody body)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> RequestBody() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> MediaType <span class="title">contentType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> body.contentType();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">contentLength</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span>; <span class="comment">// We don&#x27;t know the compressed length in advance!</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeTo</span><span class="params">(<span class="meta">@NotNull</span> BufferedSink sink)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">                    BufferedSink gzipSink = Okio.buffer(<span class="keyword">new</span> GzipSink(sink));</span><br><span class="line">                    body.writeTo(gzipSink);</span><br><span class="line">                    gzipSink.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;重试拦截器&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">RetryIntercepter</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> maxRetry = <span class="number">3</span>;<span class="comment">//最大重试次数，默认3次</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> retryNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">RetryIntercepter</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">RetryIntercepter</span><span class="params">(<span class="keyword">int</span> maxRetry)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.maxRetry = maxRetry;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@NotNull</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            Request request = chain.request();</span><br><span class="line">            Response response = chain.proceed(request);</span><br><span class="line">            <span class="keyword">while</span> (!response.isSuccessful() &amp;&amp; retryNum &lt; maxRetry) &#123;</span><br><span class="line">                retryNum++;</span><br><span class="line">                response = chain.proceed(request);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Headers拦截器&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">HeadersLoggingInterceper</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>&#123;</span><br><span class="line">        <span class="meta">@NotNull</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(<span class="meta">@NotNull</span> Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            Request request = chain.request();</span><br><span class="line">            Headers headers = request.headers();</span><br><span class="line">            StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;headers.size();i++)&#123;</span><br><span class="line">                stringBuffer.append(headers.name(i)).append(<span class="string">&quot;:&quot;</span>).append(headers.value(i)).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求头信息: [%s]&quot;</span>, stringBuffer.toString()));</span><br><span class="line">            <span class="keyword">return</span> chain.proceed(request);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="RestTemplateUtil"><a href="#RestTemplateUtil" class="headerlink" title="RestTemplateUtil"></a>RestTemplateUtil</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.FileSystemResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.ClientHttpRequestExecution;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.ClientHttpRequestInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.ClientHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.SimpleClientHttpRequestFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.LinkedMultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.MultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.GZIPInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.GZIPOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;RestTemplate工具类&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/4/22 16:54.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SimpleClientHttpRequestFactory factory = <span class="keyword">new</span> SimpleClientHttpRequestFactory();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        factory.setReadTimeout(<span class="number">5000</span>);<span class="comment">//单位为ms</span></span><br><span class="line">        factory.setConnectTimeout(<span class="number">5000</span>);<span class="comment">//单位为ms</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//拦截器</span></span><br><span class="line">        List&lt;ClientHttpRequestInterceptor&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> RetryIntercepter()); <span class="comment">//重试拦截器</span></span><br><span class="line">        list.add(<span class="keyword">new</span> HeadersLoggingInterceper()); <span class="comment">//header拦截器</span></span><br><span class="line"></span><br><span class="line">        restTemplate = <span class="keyword">new</span> RestTemplate(factory);</span><br><span class="line">        restTemplate.setInterceptors(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(url, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;get请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/22 16:57</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url, Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            stringBuffer.append(url);</span><br><span class="line">            <span class="keyword">if</span> (url.contains(<span class="string">&quot;?&quot;</span>)) &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">                stringBuffer.append(key).append(<span class="string">&quot;=&quot;</span>).append(map.get(key).toString()).append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            url = stringBuffer.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(url, String.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getBytes(String url, Map&lt;String, Object&gt; map) &#123;</span><br><span class="line">        <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            stringBuffer.append(url);</span><br><span class="line">            <span class="keyword">if</span> (url.contains(<span class="string">&quot;?&quot;</span>)) &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">                stringBuffer.append(key).append(<span class="string">&quot;=&quot;</span>).append(map.get(key).toString()).append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            url = stringBuffer.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//return restTemplate.getForObject(url, byte[].class);</span></span><br><span class="line">        ResponseEntity&lt;<span class="keyword">byte</span>[]&gt; exchange = restTemplate.exchange(url, HttpMethod.GET, <span class="keyword">null</span>, <span class="keyword">byte</span>[].class);</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = exchange.getBody();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--start</span></span><br><span class="line">        List&lt;String&gt; strings = exchange.getHeaders().get(<span class="string">&quot;Content-Encoding&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (strings != <span class="keyword">null</span> &amp;&amp; strings.contains(<span class="string">&quot;gzip&quot;</span>)) &#123;</span><br><span class="line">            GZIPInputStream gzipInputStream = <span class="keyword">null</span>;</span><br><span class="line">            ByteArrayOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                gzipInputStream = <span class="keyword">new</span> GZIPInputStream(<span class="keyword">new</span> ByteArrayInputStream(bytes));</span><br><span class="line">                out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> offset = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> ((offset = gzipInputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                    out.write(buffer, <span class="number">0</span>, offset);</span><br><span class="line">                &#125;</span><br><span class="line">                bytes = out.toByteArray();</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    gzipInputStream.close();</span><br><span class="line">                    out.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> post(url, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/22 16:59</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        MultiValueMap&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            map.setAll(params);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);</span><br><span class="line">        HttpEntity&lt;MultiValueMap&lt;String, Object&gt;&gt; httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(map, headers);</span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(url, httpEntity, String.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] postBytes(String url, Map&lt;String, Object&gt; params) &#123;</span><br><span class="line"></span><br><span class="line">        MultiValueMap&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            map.setAll(params);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);</span><br><span class="line">        HttpEntity&lt;MultiValueMap&lt;String, Object&gt;&gt; httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(map, headers);</span><br><span class="line">        <span class="comment">//byte[] bytes = restTemplate.postForObject(url, httpEntity, byte[].class);</span></span><br><span class="line"></span><br><span class="line">        ResponseEntity&lt;<span class="keyword">byte</span>[]&gt; exchange = restTemplate.exchange(url, HttpMethod.POST, httpEntity, <span class="keyword">byte</span>[].class);</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = exchange.getBody();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--start</span></span><br><span class="line">        List&lt;String&gt; strings = exchange.getHeaders().get(<span class="string">&quot;Content-Encoding&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (strings != <span class="keyword">null</span> &amp;&amp; strings.contains(<span class="string">&quot;gzip&quot;</span>)) &#123;</span><br><span class="line">            GZIPInputStream gzipInputStream = <span class="keyword">null</span>;</span><br><span class="line">            ByteArrayOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                gzipInputStream = <span class="keyword">new</span> GZIPInputStream(<span class="keyword">new</span> ByteArrayInputStream(bytes));</span><br><span class="line">                out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> offset = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> ((offset = gzipInputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                    out.write(buffer, <span class="number">0</span>, offset);</span><br><span class="line">                &#125;</span><br><span class="line">                bytes = out.toByteArray();</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    gzipInputStream.close();</span><br><span class="line">                    out.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--end</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postJson</span><span class="params">(String url, String json)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postJson(url, json, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求json&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/22 17:04</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postJson</span><span class="params">(String url, String json, <span class="keyword">boolean</span> gzip)</span> </span>&#123;</span><br><span class="line">        HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (gzip) &#123;</span><br><span class="line">            headers.setContentType(<span class="keyword">new</span> MediaType(<span class="string">&quot;application&quot;</span>, <span class="string">&quot;octet-stream&quot;</span>));</span><br><span class="line">            HttpEntity&lt;<span class="keyword">byte</span>[]&gt; httpEntity = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                headers.add(<span class="string">&quot;Content-Encoding&quot;</span>, <span class="string">&quot;gzip&quot;</span>);</span><br><span class="line">                ByteArrayOutputStream originalContent = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                originalContent.write(json.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">                ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                GZIPOutputStream gzipOut = <span class="keyword">new</span> GZIPOutputStream(baos);</span><br><span class="line">                originalContent.writeTo(gzipOut);</span><br><span class="line">                gzipOut.finish();</span><br><span class="line">                httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(baos.toByteArray(), headers);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> restTemplate.postForObject(url, httpEntity, String.class);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            headers.setContentType(<span class="keyword">new</span> MediaType(<span class="string">&quot;application&quot;</span>, <span class="string">&quot;json&quot;</span>, StandardCharsets.UTF_8));</span><br><span class="line">            <span class="comment">//headers.add(&quot;Content-Type&quot;, &quot;application/json;charset=utf8&quot;);</span></span><br><span class="line">            HttpEntity&lt;String&gt; httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(json, headers);</span><br><span class="line">            <span class="keyword">return</span> restTemplate.postForObject(url, httpEntity, String.class);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postBytes</span><span class="params">(String url, <span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postBytes(url, bytes, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post字节流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gzip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/22 17:10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postBytes</span><span class="params">(String url, <span class="keyword">byte</span>[] bytes, <span class="keyword">boolean</span> gzip)</span> </span>&#123;</span><br><span class="line">        HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">        headers.setContentType(<span class="keyword">new</span> MediaType(<span class="string">&quot;application&quot;</span>, <span class="string">&quot;octet-stream&quot;</span>));</span><br><span class="line">        HttpEntity&lt;<span class="keyword">byte</span>[]&gt; httpEntity = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (gzip) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                headers.add(<span class="string">&quot;Content-Encoding&quot;</span>, <span class="string">&quot;gzip&quot;</span>);</span><br><span class="line">                ByteArrayOutputStream originalContent = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                originalContent.write(bytes);</span><br><span class="line">                ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                GZIPOutputStream gzipOut = <span class="keyword">new</span> GZIPOutputStream(baos);</span><br><span class="line">                originalContent.writeTo(gzipOut);</span><br><span class="line">                gzipOut.finish();</span><br><span class="line">                httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(baos.toByteArray(), headers);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(bytes, headers);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(url, httpEntity, String.class);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postStream</span><span class="params">(String url, InputStream is)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postStream(url, is, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> is</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gzip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/22 17:12</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postStream</span><span class="params">(String url, InputStream is, <span class="keyword">boolean</span> gzip)</span> </span>&#123;</span><br><span class="line">        ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> ch;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> ((ch = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                byteArrayOutputStream.write(buffer, <span class="number">0</span>, ch);</span><br><span class="line">            &#125;</span><br><span class="line">            bytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">            byteArrayOutputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> postBytes(url, bytes, gzip);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postFiles</span><span class="params">(String url, File[] files)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postFiles(url, <span class="keyword">new</span> HashMap&lt;&gt;(), files);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，传输文件&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> files</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/22 17:16</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postFiles</span><span class="params">(String url, Map&lt;String, Object&gt; params, File[] files)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        MultiValueMap&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            map.setAll(params);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">            map.add(<span class="string">&quot;files&quot;</span>, <span class="keyword">new</span> FileSystemResource(file));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(url, map, String.class);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;重试拦截器&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">RetryIntercepter</span> <span class="keyword">implements</span> <span class="title">ClientHttpRequestInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> maxRetry = <span class="number">3</span>;<span class="comment">//最大重试次数，默认3次</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> retryNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">RetryIntercepter</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">RetryIntercepter</span><span class="params">(<span class="keyword">int</span> maxRetry)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.maxRetry = maxRetry;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ClientHttpResponse <span class="title">intercept</span><span class="params">(HttpRequest httpRequest, <span class="keyword">byte</span>[] bytes, ClientHttpRequestExecution clientHttpRequestExecution)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            ClientHttpResponse response = clientHttpRequestExecution.execute(httpRequest, bytes);</span><br><span class="line">            <span class="keyword">if</span> (!response.getStatusCode().equals(HttpStatus.OK) &amp;&amp; retryNum &lt; maxRetry) &#123;</span><br><span class="line">                retryNum++;</span><br><span class="line">                response = clientHttpRequestExecution.execute(httpRequest, bytes);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;Headers拦截器&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">HeadersLoggingInterceper</span> <span class="keyword">implements</span> <span class="title">ClientHttpRequestInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ClientHttpResponse <span class="title">intercept</span><span class="params">(HttpRequest httpRequest, <span class="keyword">byte</span>[] bytes, ClientHttpRequestExecution clientHttpRequestExecution)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求地址: %s&quot;</span>, httpRequest.getURI()));</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求头信息: %s&quot;</span>, httpRequest.getHeaders()));</span><br><span class="line">            ClientHttpResponse response = clientHttpRequestExecution.execute(httpRequest, bytes);</span><br><span class="line">            log.info(String.format(<span class="string">&quot;响应头信息: %s&quot;</span>, response.getHeaders()));</span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="WebClientUtil"><a href="#WebClientUtil" class="headerlink" title="WebClientUtil"></a>WebClientUtil</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelOption;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.timeout.ReadTimeoutHandler;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.timeout.WriteTimeoutHandler;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.FileSystemResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.reactive.ClientHttpConnector;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.reactive.ReactorClientHttpConnector;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.reactive.ReactorResourceFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.LinkedMultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.MultiValueMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.client.ClientResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.client.WebClient;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"><span class="keyword">import</span> reactor.netty.http.client.HttpClient;</span><br><span class="line"><span class="keyword">import</span> reactor.netty.resources.ConnectionProvider;</span><br><span class="line"><span class="keyword">import</span> reactor.netty.resources.LoopResources;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.GZIPInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.GZIPOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/4/23 21:33.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebClientUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ReactorResourceFactory factory = <span class="keyword">new</span> ReactorResourceFactory();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> WebClient webClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        factory.setUseGlobalResources(<span class="keyword">false</span>);</span><br><span class="line">        factory.setConnectionProvider(ConnectionProvider.create(<span class="string">&quot;httpClient&quot;</span>, <span class="number">50</span>));</span><br><span class="line">        factory.setLoopResources(LoopResources.create(<span class="string">&quot;httpClient&quot;</span>, <span class="number">50</span>, <span class="keyword">true</span>));</span><br><span class="line"></span><br><span class="line">        Function&lt;HttpClient, HttpClient&gt; mapper = client -&gt;</span><br><span class="line">                client.tcpConfiguration(c -&gt;</span><br><span class="line">                        c.option(ChannelOption.CONNECT_TIMEOUT_MILLIS, <span class="number">5000</span>)</span><br><span class="line">                                .option(ChannelOption.TCP_NODELAY, <span class="keyword">true</span>)</span><br><span class="line">                                .doOnConnected(conn -&gt; &#123;</span><br><span class="line">                                    conn.addHandlerLast(<span class="keyword">new</span> ReadTimeoutHandler(<span class="number">10</span>));</span><br><span class="line">                                    conn.addHandlerLast(<span class="keyword">new</span> WriteTimeoutHandler(<span class="number">10</span>));</span><br><span class="line">                                &#125;));</span><br><span class="line"></span><br><span class="line">        ClientHttpConnector connector =</span><br><span class="line">                <span class="keyword">new</span> ReactorClientHttpConnector(factory, mapper);</span><br><span class="line"></span><br><span class="line">        webClient = WebClient.builder()</span><br><span class="line">                .filter((request, next) -&gt; &#123;  <span class="comment">//过滤器，3次重试，header打印</span></span><br><span class="line">                    log.info(String.format(<span class="string">&quot;请求地址: %s&quot;</span>, request.url()));</span><br><span class="line">                    log.info(String.format(<span class="string">&quot;请求头信息: %s&quot;</span>, request.headers()));</span><br><span class="line">                    Mono&lt;ClientResponse&gt; exchange = next.exchange(request).retry(<span class="number">3</span>);</span><br><span class="line">                    ClientResponse clientResponse = exchange.block();</span><br><span class="line">                    log.info(String.format(<span class="string">&quot;响应头信息: %s&quot;</span>, clientResponse.headers().asHttpHeaders()));</span><br><span class="line">                    <span class="keyword">return</span> exchange;</span><br><span class="line">                &#125;)</span><br><span class="line">                .clientConnector(connector).build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(url, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;get请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/24 14:44</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url, Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            stringBuffer.append(url);</span><br><span class="line">            <span class="keyword">if</span> (url.contains(<span class="string">&quot;?&quot;</span>)) &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">                stringBuffer.append(key).append(<span class="string">&quot;=&quot;</span>).append(map.get(key).toString()).append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            url = stringBuffer.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        String responseResult = <span class="keyword">null</span>;</span><br><span class="line">        Mono&lt;String&gt; mono = webClient.get().uri(url).retrieve().bodyToMono(String.class);</span><br><span class="line">        responseResult = mono.block();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getBytes(String url, Map&lt;String, Object&gt; map) &#123;</span><br><span class="line">        <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            StringBuilder stringBuffer = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            stringBuffer.append(url);</span><br><span class="line">            <span class="keyword">if</span> (url.contains(<span class="string">&quot;?&quot;</span>)) &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (String key : map.keySet()) &#123;</span><br><span class="line">                stringBuffer.append(key).append(<span class="string">&quot;=&quot;</span>).append(map.get(key).toString()).append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            url = stringBuffer.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        Mono&lt;ClientResponse&gt; exchange = webClient.get().uri(url).exchange();</span><br><span class="line">        ClientResponse response = exchange.block();</span><br><span class="line">        <span class="keyword">if</span> (response.statusCode() == HttpStatus.OK) &#123;</span><br><span class="line">            Mono&lt;<span class="keyword">byte</span>[]&gt; mono =  response.bodyToMono(<span class="keyword">byte</span>[].class);</span><br><span class="line">            bytes = mono.block();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--start</span></span><br><span class="line">            List&lt;String&gt; header = response.headers().header(<span class="string">&quot;Content-Encoding&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (header.contains(<span class="string">&quot;gzip&quot;</span>)) &#123;</span><br><span class="line">                GZIPInputStream gzipInputStream = <span class="keyword">null</span>;</span><br><span class="line">                ByteArrayOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    gzipInputStream = <span class="keyword">new</span> GZIPInputStream(<span class="keyword">new</span> ByteArrayInputStream(bytes));</span><br><span class="line">                    out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                    <span class="keyword">int</span> offset = -<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">while</span> ((offset = gzipInputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                        out.write(buffer, <span class="number">0</span>, offset);</span><br><span class="line">                    &#125;</span><br><span class="line">                    bytes = out.toByteArray();</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        gzipInputStream.close();</span><br><span class="line">                        out.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--end</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> post(url, <span class="keyword">new</span> HashMap&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/24 14:43</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        MultiValueMap&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            map.setAll(params);</span><br><span class="line">        &#125;</span><br><span class="line">        String responseResult = <span class="keyword">null</span>;</span><br><span class="line">        Mono&lt;String&gt; mono = webClient.post().uri(url).bodyValue(map).retrieve().bodyToMono(String.class);</span><br><span class="line">        responseResult = mono.block();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] postBytes(String url, Map&lt;String, Object&gt; params) &#123;</span><br><span class="line">        MultiValueMap&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            map.setAll(params);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        Mono&lt;ClientResponse&gt; exchange = webClient.post().uri(url).bodyValue(map).exchange();</span><br><span class="line">        ClientResponse response = exchange.block();</span><br><span class="line">        <span class="keyword">if</span> (response.statusCode() == HttpStatus.OK) &#123;</span><br><span class="line">            Mono&lt;<span class="keyword">byte</span>[]&gt; mono =  response.bodyToMono(<span class="keyword">byte</span>[].class);</span><br><span class="line">            bytes = mono.block();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--start</span></span><br><span class="line">            List&lt;String&gt; header = response.headers().header(<span class="string">&quot;Content-Encoding&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (header.contains(<span class="string">&quot;gzip&quot;</span>)) &#123;</span><br><span class="line">                GZIPInputStream gzipInputStream = <span class="keyword">null</span>;</span><br><span class="line">                ByteArrayOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    gzipInputStream = <span class="keyword">new</span> GZIPInputStream(<span class="keyword">new</span> ByteArrayInputStream(bytes));</span><br><span class="line">                    out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                    <span class="keyword">int</span> offset;</span><br><span class="line">                    <span class="keyword">while</span> ((offset = gzipInputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                        out.write(buffer, <span class="number">0</span>, offset);</span><br><span class="line">                    &#125;</span><br><span class="line">                    bytes = out.toByteArray();</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        gzipInputStream.close();</span><br><span class="line">                        out.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断是否需要解压，即服务器返回是否经过了gzip压缩--end</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，form表单提交&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params 这里要注意将参数值转为字符串，否则会报类型错误</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/24 14:43</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postForm</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">        MultiValueMap&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                map.add(key, params.get(key).toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        String responseResult;</span><br><span class="line">        Mono&lt;String&gt; mono = webClient.post().uri(url).contentType(MediaType.APPLICATION_FORM_URLENCODED).bodyValue(map).retrieve().bodyToMono(String.class);</span><br><span class="line">        responseResult = mono.block();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postJson</span><span class="params">(String url, String json)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postJson(url, json, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，json&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> json</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gzip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/24 15:45</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postJson</span><span class="params">(String url, String json, <span class="keyword">boolean</span> gzip)</span> </span>&#123;</span><br><span class="line">        String responseResult;</span><br><span class="line">        <span class="keyword">if</span> (gzip) &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = json.getBytes(StandardCharsets.UTF_8);</span><br><span class="line">            <span class="keyword">return</span> postBytes(url, bytes, <span class="keyword">true</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Mono&lt;String&gt; mono = webClient.post().uri(url).contentType(MediaType.APPLICATION_JSON).bodyValue(json).retrieve().bodyToMono(String.class);</span><br><span class="line">            responseResult = mono.block();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postBytes</span><span class="params">(String url, <span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postBytes(url, bytes, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，字节流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gzip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/24 15:45</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postBytes</span><span class="params">(String url, <span class="keyword">byte</span>[] bytes, <span class="keyword">boolean</span> gzip)</span> </span>&#123;</span><br><span class="line">        String responseResult;</span><br><span class="line">        Mono&lt;String&gt; mono = <span class="keyword">null</span>;</span><br><span class="line">        WebClient.RequestBodySpec requestBodySpec = webClient.post().uri(url).contentType(MediaType.APPLICATION_OCTET_STREAM);</span><br><span class="line">        <span class="keyword">if</span> (gzip) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//headers.add(&quot;Content-Encoding&quot;, &quot;gzip&quot;);</span></span><br><span class="line">                ByteArrayOutputStream originalContent = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                originalContent.write(bytes);</span><br><span class="line">                ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                GZIPOutputStream gzipOut = <span class="keyword">new</span> GZIPOutputStream(baos);</span><br><span class="line">                originalContent.writeTo(gzipOut);</span><br><span class="line">                gzipOut.finish();</span><br><span class="line">                bytes = baos.toByteArray();</span><br><span class="line">                mono = requestBodySpec.header(<span class="string">&quot;Content-Encoding&quot;</span>, <span class="string">&quot;gzip&quot;</span>).bodyValue(bytes).retrieve().bodyToMono(String.class);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mono = requestBodySpec.bodyValue(bytes).retrieve().bodyToMono(String.class);</span><br><span class="line">        &#125;</span><br><span class="line">        responseResult = mono.block();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postStream</span><span class="params">(String url, InputStream is)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postStream(url, is, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，流&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> is</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gzip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/22 17:12</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postStream</span><span class="params">(String url, InputStream is, <span class="keyword">boolean</span> gzip)</span> </span>&#123;</span><br><span class="line">        ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> ch;</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> ((ch = is.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                byteArrayOutputStream.write(buffer, <span class="number">0</span>, ch);</span><br><span class="line">            &#125;</span><br><span class="line">            bytes = byteArrayOutputStream.toByteArray();</span><br><span class="line">            byteArrayOutputStream.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> postBytes(url, bytes, gzip);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postFiles</span><span class="params">(String url, File[] files)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> postFiles(url, <span class="keyword">new</span> HashMap&lt;&gt;(), files);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;post请求，文件&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> files</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * 2020/4/24 15:46</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">postFiles</span><span class="params">(String url, Map&lt;String, Object&gt; params, File[] files)</span> </span>&#123;</span><br><span class="line">        String responseResult;</span><br><span class="line">        MultiValueMap&lt;String, Object&gt; map = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            map.setAll(params);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">            map.add(<span class="string">&quot;files&quot;</span>, <span class="keyword">new</span> FileSystemResource(file));</span><br><span class="line">        &#125;</span><br><span class="line">        Mono&lt;String&gt; mono = webClient.post().uri(url).contentType(MediaType.MULTIPART_FORM_DATA).bodyValue(map).retrieve().bodyToMono(String.class);</span><br><span class="line">        responseResult = mono.block();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本文内容基于org.apache.httpcomponents:httpclient:4.5.12，com.squareup.okhttp3:okhttp:4.5.0，springboot:2.2.6.RELEASE，spring-boot-starter-webflux:2.2.6.RELEASE&lt;/li&gt;
&lt;li&gt;工具类，实现get/post[参数，json，输入流，文件，gzip]等方法&lt;/li&gt;
&lt;li&gt;提供了测试用例及服务端demo&lt;/li&gt;
&lt;li&gt;github：&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter26&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter26&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="http" scheme="https://blog.hanqunfeng.com/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot动态更新外部属性文件</title>
    <link href="https://blog.hanqunfeng.com/2020/04/17/spring-boot-ExternalPropertiesRefresh/"/>
    <id>https://blog.hanqunfeng.com/2020/04/17/spring-boot-ExternalPropertiesRefresh/</id>
    <published>2020-04-17T15:30:05.000Z</published>
    <updated>2021-05-27T07:41:36.390Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>本文内容基于springboot2.2.6</li><li>SpringBoot可以通过<code>@PropertySource(value = &quot;file:demo.properties&quot;)</code>的方式加载外部配置文件，这样打好jar包后只要将这个属性文件放到相同路径即可</li><li>如果能够在不重启服务的情况下就可以重新加载这个属性文件，就可以很方便的实现动态更新，那么要怎么做呢？</li><li>github：<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter27">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter27</a></li></ul><span id="more"></span><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><div class="note info"><p>SpringCloud可以通过config组件实现配置的动态加载，我们也可以将数据存在数据库或者缓存中，可是如果只是一个小项目，不想依赖任何中间件，那么就可以通过如下的方式实现。</p></div><ul><li>获取所有注解了<code>@PropertySource</code>的对象，并且获取其value属性数组中是以<code>file:</code>开头的文件路径</li><li>判断是否同时注解了<code>@ConfigurationProperties</code>，并且获取其<code>prefix</code>的值</li><li>对每个属性文件进行遍历，通过反射找到对象的field名称（去除<code>prefix</code>后的名字），并将属性值赋值给该field</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><div class="note info"><p>这个类要注册到spring上下文，并在需要的地方调用该对象的refresh方法即可重新加载所有外部属性文件。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.config.ConfigurableListableBeanFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.FileSystemResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.support.PropertiesLoaderUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Annotation;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;动态加载外部属性处理类&lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExternalPropertiesRefresh</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConfigurableListableBeanFactory configurableListableBeanFactory;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;根据属性名获取属性值&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fieldName bean的属性名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object    bean对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.Object get方法返回值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Object <span class="title">getFieldValueByName</span><span class="params">(String fieldName, Object object)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String firstLetter = fieldName.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase();</span><br><span class="line">            String getter = <span class="string">&quot;get&quot;</span> + firstLetter + fieldName.substring(<span class="number">1</span>);</span><br><span class="line">            Method method = object.getClass().getMethod(getter, <span class="keyword">new</span> Class[]&#123;&#125;);</span><br><span class="line">            Object value = method.invoke(object, <span class="keyword">new</span> Object[]&#123;&#125;);</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(e.getMessage(), e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;根据属性名设置属性值&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fieldName  bean的属性名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object     bean对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> paramTypes set方法参数类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> params     set方法参数值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setFieldValueByName</span><span class="params">(String fieldName, Object object, Class[] paramTypes, Object[] params)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String firstLetter = fieldName.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase();</span><br><span class="line">            String setter = <span class="string">&quot;set&quot;</span> + firstLetter + fieldName.substring(<span class="number">1</span>);</span><br><span class="line">            Method method = object.getClass().getMethod(setter, paramTypes);</span><br><span class="line">            method.invoke(object, params);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(e.getMessage(), e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;获取属性名称，去除前缀&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key   属性key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> prefix 属性key前缀</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">fieldName</span><span class="params">(String key, String prefix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(prefix)) &#123;</span><br><span class="line">            <span class="keyword">return</span> key.replace(prefix + <span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> key;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;将属性文件值绑定到bean对象&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> properties</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> prefix</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Object <span class="title">bind</span><span class="params">(Object bean, Properties[] properties, String prefix)</span> </span>&#123;</span><br><span class="line">        String fieldName = <span class="string">&quot;&quot;</span>;<span class="comment">//属性名称</span></span><br><span class="line">        String pValue = <span class="string">&quot;&quot;</span>;<span class="comment">//属性值</span></span><br><span class="line">        String[] sp = <span class="keyword">null</span>; <span class="comment">//map属性分割key和value</span></span><br><span class="line">        <span class="keyword">for</span> (Properties pro : properties) &#123;</span><br><span class="line">            Map&lt;String, Map&lt;String, String&gt;&gt; fidleMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            Map&lt;String, Set&lt;String&gt;&gt; fidleSet = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            Map&lt;String, List&lt;String&gt;&gt; fidleList = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            <span class="comment">//遍历属性</span></span><br><span class="line">            <span class="keyword">for</span> (Object key : pro.keySet()) &#123;</span><br><span class="line">                pValue = (String) (pro.get(key));</span><br><span class="line">                fieldName = fieldName((String) key, prefix);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//map</span></span><br><span class="line">                sp = fieldName.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (sp.length == <span class="number">2</span>) &#123;</span><br><span class="line">                    fieldName = sp[<span class="number">0</span>];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//list&amp;&amp;set</span></span><br><span class="line">                <span class="keyword">if</span> (fieldName.indexOf(<span class="string">&quot;[&quot;</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    fieldName = fieldName.substring(<span class="number">0</span>, fieldName.indexOf(<span class="string">&quot;[&quot;</span>));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//属性类型</span></span><br><span class="line">                Object object = getFieldValueByName(fieldName, bean);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//类型匹配</span></span><br><span class="line">                <span class="keyword">if</span> (object <span class="keyword">instanceof</span> Map) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (fidleMap.get(fieldName) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        object = fidleMap.get(fieldName);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        object = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (sp.length == <span class="number">2</span>) &#123;</span><br><span class="line">                        ((Map) object).put(sp[<span class="number">1</span>], pValue);</span><br><span class="line">                        fidleMap.put(fieldName, (Map&lt;String, String&gt;) object);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (object <span class="keyword">instanceof</span> Set) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (fidleSet.get(fieldName) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        object = fidleSet.get(fieldName);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        object = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">                    &#125;</span><br><span class="line">                    ((Set) object).add(pValue);</span><br><span class="line">                    fidleSet.put(fieldName, (Set&lt;String&gt;) object);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (object <span class="keyword">instanceof</span> List) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (fidleList.get(fieldName) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        object = fidleList.get(fieldName);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        object = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">                    &#125;</span><br><span class="line">                    ((List) object).add(pValue);</span><br><span class="line">                    fidleList.put(fieldName, (List&lt;String&gt;) object);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (object <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">                    setFieldValueByName(fieldName, bean, <span class="keyword">new</span> Class[]&#123;String.class&#125;, <span class="keyword">new</span> Object[]&#123;pValue&#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (object <span class="keyword">instanceof</span> Integer) &#123;</span><br><span class="line">                    setFieldValueByName(fieldName, bean, <span class="keyword">new</span> Class[]&#123;Integer.class&#125;, <span class="keyword">new</span> Object[]&#123;Integer.valueOf(pValue)&#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (object <span class="keyword">instanceof</span> Long) &#123;</span><br><span class="line">                    setFieldValueByName(fieldName, bean, <span class="keyword">new</span> Class[]&#123;Long.class&#125;, <span class="keyword">new</span> Object[]&#123;Long.valueOf(pValue)&#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (object <span class="keyword">instanceof</span> Double) &#123;</span><br><span class="line">                    setFieldValueByName(fieldName, bean, <span class="keyword">new</span> Class[]&#123;Double.class&#125;, <span class="keyword">new</span> Object[]&#123;Double.valueOf(pValue)&#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (object <span class="keyword">instanceof</span> Float) &#123;</span><br><span class="line">                    setFieldValueByName(fieldName, bean, <span class="keyword">new</span> Class[]&#123;Float.class&#125;, <span class="keyword">new</span> Object[]&#123;Float.valueOf(pValue)&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//map类型赋值</span></span><br><span class="line">            <span class="keyword">if</span> (fidleMap.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String fname : fidleMap.keySet()) &#123;</span><br><span class="line">                    setFieldValueByName(fname, bean, <span class="keyword">new</span> Class[]&#123;Map.class&#125;, <span class="keyword">new</span> Object[]&#123;fidleMap.get(fname)&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//set类型赋值</span></span><br><span class="line">            <span class="keyword">if</span> (fidleSet.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String fname : fidleSet.keySet()) &#123;</span><br><span class="line">                    setFieldValueByName(fname, bean, <span class="keyword">new</span> Class[]&#123;Set.class&#125;, <span class="keyword">new</span> Object[]&#123;fidleSet.get(fname)&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//list类型赋值</span></span><br><span class="line">            <span class="keyword">if</span> (fidleList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String fname : fidleList.keySet()) &#123;</span><br><span class="line">                    setFieldValueByName(fname, bean, <span class="keyword">new</span> Class[]&#123;List.class&#125;, <span class="keyword">new</span> Object[]&#123;fidleList.get(fname)&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;刷新指定属性类&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> beanName bean的注册名称，默认类名称首字母小写</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refresh</span><span class="params">(String beanName)</span></span>&#123;</span><br><span class="line">        Class&lt;?&gt; cls = configurableListableBeanFactory.getType(beanName);</span><br><span class="line">        Object bean = configurableListableBeanFactory.getBean(cls);</span><br><span class="line">        Properties[] propertiesArray = <span class="keyword">null</span>;</span><br><span class="line">        String prefix = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (cls.getAnnotations() != <span class="keyword">null</span> &amp;&amp; cls.getAnnotations().length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Annotation annotation : cls.getAnnotations()) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (annotation <span class="keyword">instanceof</span> PropertySource) &#123;</span><br><span class="line">                    PropertySource propertySource = (PropertySource) annotation;</span><br><span class="line">                    String[] values = propertySource.value();</span><br><span class="line">                    <span class="keyword">if</span> (values.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        propertiesArray = <span class="keyword">new</span> Properties[values.length];</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; values.length; i++) &#123;</span><br><span class="line">                            <span class="comment">//如果引用的是外部文件，则重新加载</span></span><br><span class="line">                            <span class="keyword">if</span> (values[i].startsWith(<span class="string">&quot;file:&quot;</span>)) &#123;</span><br><span class="line">                                String path = values[i].replace(<span class="string">&quot;file:&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                                Properties properties = PropertiesLoaderUtils.loadProperties(<span class="keyword">new</span> FileSystemResource(path));</span><br><span class="line">                                propertiesArray[i] = properties;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (annotation <span class="keyword">instanceof</span> ConfigurationProperties) &#123;</span><br><span class="line">                    ConfigurationProperties configurationProperties = (ConfigurationProperties) annotation;</span><br><span class="line">                    prefix = configurationProperties.prefix();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (propertiesArray != <span class="keyword">null</span> &amp;&amp; propertiesArray.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//将属性绑定到对象</span></span><br><span class="line">            bind(bean, propertiesArray, prefix);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;重新加载属性文件&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String[] ary = configurableListableBeanFactory.getBeanNamesForAnnotation(PropertySource.class);</span><br><span class="line">        <span class="keyword">if</span> (ary != <span class="keyword">null</span> &amp;&amp; ary.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String beanName : ary) &#123;</span><br><span class="line">                <span class="comment">//通过Spring的beanName获取bean的类型</span></span><br><span class="line">                refresh(beanName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="下面通过http请求刷新配置文件"><a href="#下面通过http请求刷新配置文件" class="headerlink" title="下面通过http请求刷新配置文件"></a>下面通过http请求刷新配置文件</h2><div class="note info"><p>启动服务器后，任意修改属性文件的值，然后请求/refresh，即可重新加载全部属性文件，然后请求/demo查看是否生效，也可以请求/propertiesDemo/refresh，指定要刷新的对象。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ExternalPropertiesRefresh externalPropertiesRefresh;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PropertiesDemo propertiesDemo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/refresh&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">refreshpro</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        externalPropertiesRefresh.refresh();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;refresh properties success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&#123;beanName&#125;/refresh&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">refreshProByBeanName</span><span class="params">(<span class="meta">@PathVariable</span> String beanName)</span> </span>&#123;</span><br><span class="line">        externalPropertiesRefresh.refresh(beanName);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;refresh properties success for &quot;</span> + beanName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/demo&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PropertiesDemo <span class="title">demo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> propertiesDemo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PropertiesDemo-java"><a href="#PropertiesDemo-java" class="headerlink" title="PropertiesDemo.java"></a>PropertiesDemo.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@PropertySource(value = &quot;file:demo.properties&quot;,encoding = &quot;utf-8&quot;)</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;demo.data&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PropertiesDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, String&gt; map2 = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; set2 = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; list2 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Double salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="demo-properties"><a href="#demo-properties" class="headerlink" title="demo.properties"></a>demo.properties</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">demo.data.map.client=client</span><br><span class="line">demo.data.map.token=token</span><br><span class="line"></span><br><span class="line">demo.data.map2.client=client</span><br><span class="line">demo.data.map2.token=token</span><br><span class="line"></span><br><span class="line">demo.data.name=张三</span><br><span class="line">demo.data.age=<span class="number">20</span></span><br><span class="line">demo.data.salary=<span class="number">12345.67</span></span><br><span class="line"></span><br><span class="line">demo.data.set[<span class="number">0</span>]=beijing</span><br><span class="line">demo.data.set[<span class="number">1</span>]=shanghai</span><br><span class="line">demo.data.set[<span class="number">2</span>]=tianjin</span><br><span class="line"></span><br><span class="line">demo.data.set2[<span class="number">0</span>]=guangzhou</span><br><span class="line">demo.data.set2[<span class="number">1</span>]=shenzheng</span><br><span class="line">demo.data.set2[<span class="number">2</span>]=hangzhou</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">demo.data.list[<span class="number">0</span>]=南极</span><br><span class="line">demo.data.list[<span class="number">1</span>]=北极</span><br><span class="line">demo.data.list[<span class="number">2</span>]=赤道</span><br><span class="line"></span><br><span class="line">demo.data.list2[<span class="number">0</span>]=喜马拉雅山</span><br><span class="line">demo.data.list2[<span class="number">1</span>]=噶麦斯山</span><br><span class="line">demo.data.list2[<span class="number">2</span>]=阿尔卑斯山</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本文内容基于springboot2.2.6&lt;/li&gt;
&lt;li&gt;SpringBoot可以通过&lt;code&gt;@PropertySource(value = &amp;quot;file:demo.properties&amp;quot;)&lt;/code&gt;的方式加载外部配置文件，这样打好jar包后只要将这个属性文件放到相同路径即可&lt;/li&gt;
&lt;li&gt;如果能够在不重启服务的情况下就可以重新加载这个属性文件，就可以很方便的实现动态更新，那么要怎么做呢？&lt;/li&gt;
&lt;li&gt;github：&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter27&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter27&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 分片集群搭建</title>
    <link href="https://blog.hanqunfeng.com/2020/03/19/mongodb-mongos/"/>
    <id>https://blog.hanqunfeng.com/2020/03/19/mongodb-mongos/</id>
    <published>2020-03-19T08:30:05.000Z</published>
    <updated>2020-04-17T05:05:28.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul><li>本文内容基于mongodb4.2.3</li><li>本文基于本地安装，也就是ip相同，端口不同</li><li>3个shard复制集(3台)，1个config复制集(3台)，2个router</li></ul><span id="more"></span><h2 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装MongoDB</h2><p>下载地址 ： <a href="https://www.mongodb.com/download-center">https://www.mongodb.com/download-center</a></p><p>下载后解压即可，可以将bin目录配置到$PATH中</p><h2 id="目录设计"><a href="#目录设计" class="headerlink" title="目录设计"></a>目录设计</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">├── config</span><br><span class="line">│  ├── node1</span><br><span class="line">│  │  ├── db</span><br><span class="line">│  │  ├── logs</span><br><span class="line">│  │  └── mongod.conf</span><br><span class="line">│  ├── node2</span><br><span class="line">│  │  ├── db</span><br><span class="line">│  │  ├── logs</span><br><span class="line">│  │  └── mongod.conf</span><br><span class="line">│  └── node3</span><br><span class="line">│     ├── db</span><br><span class="line">│     ├── logs</span><br><span class="line">│     └── mongod.conf</span><br><span class="line">├── keyfile.key</span><br><span class="line">├── router</span><br><span class="line">│  ├── node1</span><br><span class="line">│  │  ├── logs</span><br><span class="line">│  │  └── mongos.conf</span><br><span class="line">│  └── node2</span><br><span class="line">│     ├── logs</span><br><span class="line">│     └── mongos.conf</span><br><span class="line">├── shard1</span><br><span class="line">│  ├── node1</span><br><span class="line">│  │  ├── db</span><br><span class="line">│  │  ├── logs</span><br><span class="line">│  │  └── mongod.conf</span><br><span class="line">│  ├── node2</span><br><span class="line">│  │  ├── db</span><br><span class="line">│  │  ├── logs</span><br><span class="line">│  │  └── mongod.conf</span><br><span class="line">│  └── node3</span><br><span class="line">│     ├── db</span><br><span class="line">│     ├── logs</span><br><span class="line">│     └── mongod.conf</span><br><span class="line">├── shard2</span><br><span class="line">│  ├── node1</span><br><span class="line">│  │  ├── db</span><br><span class="line">│  │  ├── logs</span><br><span class="line">│  │  └── mongod.conf</span><br><span class="line">│  ├── node2</span><br><span class="line">│  │  ├── db</span><br><span class="line">│  │  ├── logs</span><br><span class="line">│  │  └── mongod.conf</span><br><span class="line">│  └── node3</span><br><span class="line">│     ├── db</span><br><span class="line">│     ├── logs</span><br><span class="line">│     └── mongod.conf</span><br><span class="line">└── shard3</span><br><span class="line">   ├── node1</span><br><span class="line">   │  ├── db</span><br><span class="line">   │  ├── logs</span><br><span class="line">   │  └── mongod.conf</span><br><span class="line">   ├── node2</span><br><span class="line">   │  ├── db</span><br><span class="line">   │  ├── logs</span><br><span class="line">   │  └── mongod.conf</span><br><span class="line">   └── node3</span><br><span class="line">      ├── db</span><br><span class="line">      ├── logs</span><br><span class="line">      └── mongod.conf</span><br></pre></td></tr></table></figure><h2 id="端口分配"><a href="#端口分配" class="headerlink" title="端口分配"></a>端口分配</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">shard1 28011~28013</span><br><span class="line">shard2 28021~28023</span><br><span class="line">shard3 28031~28033</span><br><span class="line">config 29011~29013</span><br><span class="line">router 29021~29022</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="shard"><a href="#shard" class="headerlink" title="shard"></a>shard</h3><p>以shard1为例，三个node下都有mongod.conf，要注意替换文件路径和端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">   destination: file</span><br><span class="line">   path: <span class="string">&quot;/Users/hanqf/myservice_dir/mongodb-mongos/shard1/node1/logs/mongo.log&quot;</span> <span class="comment">#注意修改路径</span></span><br><span class="line">   logAppend: <span class="literal">true</span></span><br><span class="line">storage:</span><br><span class="line">   journal:</span><br><span class="line">      enabled: <span class="literal">true</span></span><br><span class="line">   dbPath: <span class="string">&quot;/Users/hanqf/myservice_dir/mongodb-mongos/shard1/node1/db&quot;</span> <span class="comment">#注意修改路径</span></span><br><span class="line">processManagement:</span><br><span class="line">   fork: <span class="literal">true</span></span><br><span class="line">net:</span><br><span class="line">   bindIp: 0.0.0.0</span><br><span class="line">   port: 28011   <span class="comment">#注意修改端口</span></span><br><span class="line">setParameter:</span><br><span class="line">   enableLocalhostAuthBypass: <span class="literal">true</span></span><br><span class="line">replication:</span><br><span class="line">   replSetName: <span class="string">&quot;shard1&quot;</span> <span class="comment">#复制集名称</span></span><br><span class="line">sharding:</span><br><span class="line">   clusterRole: shardsvr <span class="comment">#作为分片服务</span></span><br><span class="line">security:</span><br><span class="line">    authorization: <span class="string">&quot;enabled&quot;</span></span><br><span class="line">    keyFile: /Users/hanqf/myservice_dir/mongodb-mongos/keyFile.key <span class="comment">#密钥文件，用于集群内部认证</span></span><br></pre></td></tr></table></figure><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">   destination: file</span><br><span class="line">   path: <span class="string">&quot;/Users/hanqf/myservice_dir/mongodb-mongos/config/node1/logs/mongo.log&quot;</span> <span class="comment">#注意修改路径</span></span><br><span class="line">   logAppend: <span class="literal">true</span></span><br><span class="line">storage:</span><br><span class="line">   journal:</span><br><span class="line">      enabled: <span class="literal">true</span></span><br><span class="line">   dbPath: <span class="string">&quot;/Users/hanqf/myservice_dir/mongodb-mongos/config/node1/db&quot;</span> <span class="comment">#注意修改路径</span></span><br><span class="line">processManagement:</span><br><span class="line">   fork: <span class="literal">true</span></span><br><span class="line">net:</span><br><span class="line">   bindIp: 0.0.0.0</span><br><span class="line">   port: 29011  <span class="comment">#注意修改端口</span></span><br><span class="line">setParameter:</span><br><span class="line">   enableLocalhostAuthBypass: <span class="literal">true</span></span><br><span class="line">replication:</span><br><span class="line">   replSetName: <span class="string">&quot;config&quot;</span> <span class="comment">#复制集名称</span></span><br><span class="line">sharding:</span><br><span class="line">   clusterRole: configsvr <span class="comment">#作为配置服务</span></span><br><span class="line">security:</span><br><span class="line">  authorization: <span class="string">&quot;enabled&quot;</span></span><br><span class="line">  keyFile: /Users/hanqf/myservice_dir/mongodb-mongos/keyFile.key <span class="comment">#密钥文件，用于集群内部认证</span></span><br></pre></td></tr></table></figure><h3 id="router"><a href="#router" class="headerlink" title="router"></a>router</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">systemLog:</span><br><span class="line">   destination: file</span><br><span class="line">   path: <span class="string">&quot;/Users/hanqf/myservice_dir/mongodb-mongos/router/node1/logs/mongos.log&quot;</span> <span class="comment">#注意修改路径</span></span><br><span class="line">   logAppend: <span class="literal">true</span></span><br><span class="line">processManagement:</span><br><span class="line">   fork: <span class="literal">true</span></span><br><span class="line">net:</span><br><span class="line">   bindIp: 0.0.0.0</span><br><span class="line">   port: 29021   <span class="comment">#注意修改端口</span></span><br><span class="line">setParameter:</span><br><span class="line">   enableLocalhostAuthBypass: <span class="literal">true</span></span><br><span class="line">replication:</span><br><span class="line">   localPingThresholdMs: 15</span><br><span class="line">sharding:</span><br><span class="line">   configDB: config/127.0.0.1:29011,127.0.0.1:29012,127.0.0.1:29013 <span class="comment">#关联配置服务</span></span><br><span class="line">security:</span><br><span class="line">    keyFile: /Users/hanqf/myservice_dir/mongodb-mongos/keyFile.key <span class="comment">#密钥文件，用于集群内部认证</span></span><br></pre></td></tr></table></figure><h3 id="keyFile"><a href="#keyFile" class="headerlink" title="keyFile"></a>keyFile</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /Users/hanqf/myservice_dir/mongodb-mongos</span><br><span class="line">openssl rand -base64 741 &gt; keyFile.key</span><br><span class="line">chmod 400 mongodb-keyfile</span><br></pre></td></tr></table></figure><h2 id="配置config复制集"><a href="#配置config复制集" class="headerlink" title="配置config复制集"></a>配置config复制集</h2><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/config/node1/mongod.conf</span><br><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/config/node2/mongod.conf</span><br><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/config/node3/mongod.conf</span><br></pre></td></tr></table></figure><h3 id="登录及配置"><a href="#登录及配置" class="headerlink" title="登录及配置"></a>登录及配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#登录任意一台config</span></span><br><span class="line">mongo --host 127.0.0.1:29011</span><br><span class="line"></span><br><span class="line">&gt;rs.initiate(</span><br><span class="line">  &#123;</span><br><span class="line">    _id: <span class="string">&quot;config&quot;</span>,</span><br><span class="line">    configsvr: <span class="literal">true</span>,</span><br><span class="line">    members: [</span><br><span class="line">      &#123; _id : 0, host : <span class="string">&quot;127.0.0.1:29011&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 1, host : <span class="string">&quot;127.0.0.1:29012&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 2, host : <span class="string">&quot;127.0.0.1:29013&quot;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建超级管理员，此时要求登录的是主库</span></span><br><span class="line">&gt;rs.isMaster() <span class="comment">#验证是否主库</span></span><br><span class="line">&gt;use admin</span><br><span class="line">&gt;db.createUser(</span><br><span class="line">   &#123;</span><br><span class="line">     user: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">     <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line">     roles: [ &#123; role: <span class="string">&quot;root&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ]</span><br><span class="line">   &#125;</span><br><span class="line"> );</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>验证用户是否可以登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongo --host 127.0.0.1:29011</span><br><span class="line">&gt;use admin</span><br><span class="line">&gt;db.auth(<span class="string">&quot;root&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="配置shard复制集"><a href="#配置shard复制集" class="headerlink" title="配置shard复制集"></a>配置shard复制集</h2><h3 id="启动shard1服务"><a href="#启动shard1服务" class="headerlink" title="启动shard1服务"></a>启动shard1服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/shard1/node1/mongod.conf</span><br><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/shard1/node2/mongod.conf</span><br><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/shard1/node3/mongod.conf</span><br></pre></td></tr></table></figure><h3 id="登录及配置-1"><a href="#登录及配置-1" class="headerlink" title="登录及配置"></a>登录及配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#登录任意一台config</span></span><br><span class="line">mongo --host 127.0.0.1:28011</span><br><span class="line"></span><br><span class="line">&gt;rs.initiate(</span><br><span class="line">  &#123;</span><br><span class="line">    _id: <span class="string">&quot;shard1&quot;</span>,</span><br><span class="line">    members: [</span><br><span class="line">      &#123; _id : 0, host : <span class="string">&quot;127.0.0.1:28011&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 1, host : <span class="string">&quot;127.0.0.1:28012&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 2, host : <span class="string">&quot;127.0.0.1:28013&quot;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建超级管理员，此时要求登录的是主库</span></span><br><span class="line">&gt;rs.isMaster() <span class="comment">#验证是否主库</span></span><br><span class="line">&gt;use admin</span><br><span class="line">&gt;db.createUser(</span><br><span class="line">   &#123;</span><br><span class="line">     user: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">     <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line">     roles: [ &#123; role: <span class="string">&quot;root&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ]</span><br><span class="line">   &#125;</span><br><span class="line"> );</span><br></pre></td></tr></table></figure><h3 id="启动shard2服务"><a href="#启动shard2服务" class="headerlink" title="启动shard2服务"></a>启动shard2服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/shard2/node1/mongod.conf</span><br><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/shard2/node2/mongod.conf</span><br><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/shard2/node3/mongod.conf</span><br></pre></td></tr></table></figure><h3 id="登录及配置-2"><a href="#登录及配置-2" class="headerlink" title="登录及配置"></a>登录及配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#登录任意一台config</span></span><br><span class="line">mongo --host 127.0.0.1:28021</span><br><span class="line"></span><br><span class="line">&gt;rs.initiate(</span><br><span class="line">  &#123;</span><br><span class="line">    _id: <span class="string">&quot;shard2&quot;</span>,</span><br><span class="line">    members: [</span><br><span class="line">      &#123; _id : 0, host : <span class="string">&quot;127.0.0.1:28021&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 1, host : <span class="string">&quot;127.0.0.1:28022&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 2, host : <span class="string">&quot;127.0.0.1:28023&quot;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建超级管理员，此时要求登录的是主库</span></span><br><span class="line">&gt;rs.isMaster() <span class="comment">#验证是否主库</span></span><br><span class="line">&gt;use admin</span><br><span class="line">&gt;db.createUser(</span><br><span class="line">   &#123;</span><br><span class="line">     user: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">     <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line">     roles: [ &#123; role: <span class="string">&quot;root&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ]</span><br><span class="line">   &#125;</span><br><span class="line"> );</span><br></pre></td></tr></table></figure><h3 id="启动shard3服务"><a href="#启动shard3服务" class="headerlink" title="启动shard3服务"></a>启动shard3服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/shard3/node1/mongod.conf</span><br><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/shard3/node2/mongod.conf</span><br><span class="line">mongod --config /Users/hanqf/myservice_dir/mongodb-mongos/shard3/node3/mongod.conf</span><br></pre></td></tr></table></figure><h3 id="登录及配置-3"><a href="#登录及配置-3" class="headerlink" title="登录及配置"></a>登录及配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#登录任意一台config</span></span><br><span class="line">mongo --host 127.0.0.1:28031</span><br><span class="line"></span><br><span class="line">&gt;rs.initiate(</span><br><span class="line">  &#123;</span><br><span class="line">    _id: <span class="string">&quot;shard3&quot;</span>,</span><br><span class="line">    members: [</span><br><span class="line">      &#123; _id : 0, host : <span class="string">&quot;127.0.0.1:28031&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 1, host : <span class="string">&quot;127.0.0.1:28032&quot;</span> &#125;,</span><br><span class="line">      &#123; _id : 2, host : <span class="string">&quot;127.0.0.1:28033&quot;</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建超级管理员，此时要求登录的是主库</span></span><br><span class="line">&gt;rs.isMaster() <span class="comment">#验证是否主库</span></span><br><span class="line">&gt;use admin</span><br><span class="line">&gt;db.createUser(</span><br><span class="line">   &#123;</span><br><span class="line">     user: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">     <span class="built_in">pwd</span>: <span class="string">&quot;password&quot;</span>,</span><br><span class="line">     roles: [ &#123; role: <span class="string">&quot;root&quot;</span>, db: <span class="string">&quot;admin&quot;</span> &#125; ]</span><br><span class="line">   &#125;</span><br><span class="line"> );</span><br></pre></td></tr></table></figure><h2 id="重启router服务"><a href="#重启router服务" class="headerlink" title="重启router服务"></a>重启router服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongos --config /Users/hanqf/myservice_dir/mongodb-mongos/router/node1/mongos.conf</span><br><span class="line">mongos --config /Users/hanqf/myservice_dir/mongodb-mongos/router/node2/mongos.conf</span><br></pre></td></tr></table></figure><h2 id="分片配置"><a href="#分片配置" class="headerlink" title="分片配置"></a>分片配置</h2><p>登录任意router</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mongo --host 127.0.0.1:29021</span><br><span class="line">&gt;use admin</span><br><span class="line">&gt;db.auth(<span class="string">&quot;root&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line"></span><br><span class="line">&gt;sh.addShard( <span class="string">&quot;shard1/127.0.0.1:28011,127.0.0.1:28012,127.0.0.1:28013&quot;</span>)</span><br><span class="line">&gt;sh.addShard( <span class="string">&quot;shard2/127.0.0.1:28021,127.0.0.1:28022,127.0.0.1:28023&quot;</span>)</span><br><span class="line">&gt;sh.addShard( <span class="string">&quot;shard3/127.0.0.1:28031,127.0.0.1:28032,127.0.0.1:28033&quot;</span>)</span><br><span class="line"><span class="comment">#查看集群状态</span></span><br><span class="line">&gt;sh.status()</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建数据库用户，客户端可以使用该用户连接mongo路由</span></span><br><span class="line">&gt;use springboot</span><br><span class="line">&gt;db.createUser(</span><br><span class="line">   &#123;</span><br><span class="line">     user: <span class="string">&quot;springboot&quot;</span>,</span><br><span class="line">     <span class="built_in">pwd</span>: <span class="string">&quot;123456&quot;</span>,</span><br><span class="line">     roles: [ &#123; role: <span class="string">&quot;dbOwner&quot;</span>, db: <span class="string">&quot;springboot&quot;</span> &#125; ]</span><br><span class="line">   &#125;</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定要分片的数据库</span></span><br><span class="line">&gt;sh.enableSharding(<span class="string">&quot;springboot&quot;</span>)</span><br><span class="line"><span class="comment">#指定集合的分片规则</span></span><br><span class="line"><span class="comment">#这里表示指定springboot库下的user集合的_id字段（也就是主键，每个集合都有这个字段）按hash散列进行分片，&#123; id : 1 &#125;表示按字段id进度范围分片，这里id必须是整型</span></span><br><span class="line"><span class="comment">#要分片存储的集合都需要指定分片规则，分片规则一经创建不可修改，只能删除集合再重新设置</span></span><br><span class="line">&gt;sh.shardCollection(<span class="string">&quot;springboot.user&quot;</span>, &#123; _id : <span class="string">&quot;hashed&quot;</span> &#125; )</span><br><span class="line"></span><br><span class="line">&gt;use springboot</span><br><span class="line"><span class="comment">#查询user的集合状态</span></span><br><span class="line">&gt;db.user.stats()</span><br></pre></td></tr></table></figure><!--这是一个注释，可以写很多内容，哈哈--><blockquote class="blockquote-center"><h3 id="小贴士"><a href="#小贴士" class="headerlink" title="小贴士"></a>小贴士</h3></blockquote><div class="note info"><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>正式环境注意权限控制，使客户端只能连接router</li><li>可以创建任意多个router</li><li>springboot连接方式：<br><code>spring.data.mongodb.uri=mongodb://springboot:123456@127.0.0.1:29021,127.0.0.1:29022/springboot?authSource=springboot</code></li></ul></div>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本文内容基于mongodb4.2.3&lt;/li&gt;
&lt;li&gt;本文基于本地安装，也就是ip相同，端口不同&lt;/li&gt;
&lt;li&gt;3个shard复制集(3台)，1个config复制集(3台)，2个router&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="mongo" scheme="https://blog.hanqunfeng.com/tags/mongo/"/>
    
  </entry>
  
  <entry>
    <title>Redis集群</title>
    <link href="https://blog.hanqunfeng.com/2018/12/27/redis-cluster/"/>
    <id>https://blog.hanqunfeng.com/2018/12/27/redis-cluster/</id>
    <published>2018-12-27T10:24:04.000Z</published>
    <updated>2020-04-17T05:06:02.431Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、摘要"><a href="#一、摘要" class="headerlink" title="一、摘要"></a>一、摘要</h2><p>看完本文你将掌握如下知识点：</p><ul><li>redis集群的构建方法【redis-5.0.2】</li><li>redis早期的版本中使用基于ruby的<code>redis-trib.rb</code>命令进行集群创建，新版本推荐使用 <code>redis-cli --cluster</code>，本文就是通过<code>redis-cli --cluster</code>命令实现集群构建。</li></ul><span id="more"></span><h2 id="二、快速创建集群"><a href="#二、快速创建集群" class="headerlink" title="二、快速创建集群"></a>二、快速创建集群</h2><p>redis为我们提供了快速创建集群的工具，安装好redis后，在其<code>/redis-5.0.2/utils/create-cluster/</code>目录下存在一个<code>create-cluster</code>命令，通过该命令可以快速创建一个基于本机端口30001~30006的三主三从的redis集群，可以通过修改端口号及服务数量来改变集群的配置。<br>1.启动6个redis服务，<code>./create-cluster start</code><br>2.创建集群，<code>./create-cluster create</code><br>3.关闭集群服务，<code>./create-cluster stop</code><br>4.清除数据及日志文件，<code>./create-cluster clean</code></p><h2 id="三、源码分析"><a href="#三、源码分析" class="headerlink" title="三、源码分析"></a>三、源码分析</h2><p>通过看源码可以很清楚其创建过程<br>1.启动6个reids服务，通过参数的方式进行启动，在生产环境中建议通过配置文件启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if [ &quot;$1&quot; == &quot;start&quot; ]</span><br><span class="line">then</span><br><span class="line">    while [ $((PORT &lt; ENDPORT)) != &quot;0&quot; ]; do</span><br><span class="line">        PORT=$((PORT+1))</span><br><span class="line">        echo &quot;Starting $PORT&quot;</span><br><span class="line">        ../../src/redis-server --port $PORT --cluster-enabled yes --cluster-config-file nodes-$&#123;PORT&#125;.conf --cluster-node-timeout $TIMEOUT --appendonly yes --appendfilename appendonly-$&#123;PORT&#125;.aof --dbfilename dump</span><br><span class="line">-$&#123;PORT&#125;.rdb --logfile $&#123;PORT&#125;.log --daemonize yes</span><br><span class="line">    done</span><br><span class="line">    exit 0</span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#端口：</span><br><span class="line">port $PORT</span><br><span class="line">#是否启用集群：</span><br><span class="line">cluster-enabled yes</span><br><span class="line">#集群关联文件路径，创建redis集群时自动创建</span><br><span class="line">cluster-config-file nodes-$&#123;PORT&#125;.conf</span><br><span class="line">#集群节点间通信的超时时间，毫秒，建议2000，默认15000</span><br><span class="line">cluster-node-timeout $TIMEOUT</span><br><span class="line">#开启aof</span><br><span class="line">appendonly yes</span><br><span class="line">#aof文件名称，注意这里只能是文件名称，若要修改路径需要设置dir属性 ，如dir /home/hanqf/redis-dir/redis-5.0.2/cluster-conf/files/</span><br><span class="line">appendfilename appendonly-$&#123;PORT&#125;.aof</span><br><span class="line">#rdb文件名称，同样只能是文件名称，同上路径共用dir属性</span><br><span class="line">dbfilename dump-$&#123;PORT&#125;.rdb</span><br><span class="line">#日志文件路径</span><br><span class="line">logfile $&#123;PORT&#125;.log</span><br><span class="line">#后台运行模式启动</span><br><span class="line">daemonize yes</span><br></pre></td></tr></table></figure><p>2.构建集群，这里使用的就是<code>redis-cli --cluster</code>命令，可以看出与<code>redis-trib.rb</code>命令类似</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">if [ &quot;$1&quot; == &quot;create&quot; ]</span><br><span class="line">then</span><br><span class="line">    HOSTS=&quot;&quot;</span><br><span class="line">    while [ $((PORT &lt; ENDPORT)) != &quot;0&quot; ]; do</span><br><span class="line">        PORT=$((PORT+1))</span><br><span class="line">        HOSTS=&quot;$HOSTS 127.0.0.1:$PORT&quot;</span><br><span class="line">    done</span><br><span class="line">    ../../src/redis-cli --cluster create $HOSTS --cluster-replicas $REPLICAS</span><br><span class="line">    exit 0</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><code>create</code>后根的<code>$HOSTS</code>就是redis服务列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:30001 127.0.0.1:30002 127.0.0.1:30003 127.0.0.1:30004 127.0.0.1:30005 127.0.0.1:30006</span><br></pre></td></tr></table></figure><p><code>--cluster-replicas $REPLICAS</code>，这里$REPLICAS值为1，表示为每一个master节点分配一个slave节点</p><h2 id="四、实际应用"><a href="#四、实际应用" class="headerlink" title="四、实际应用"></a>四、实际应用</h2><p>这里我们使用2台服务器，分别启动3个redis服务，来构建一个三主三从的redis集群。</p><h3 id="1-服务器IP"><a href="#1-服务器IP" class="headerlink" title="1.服务器IP"></a>1.服务器IP</h3><ul><li>10.211.55.15</li><li>10.211.55.16</li></ul><h3 id="2-端口设置"><a href="#2-端口设置" class="headerlink" title="2.端口设置"></a>2.端口设置</h3><p>分别开启俩台服务器的如下端口，前面是redis服务端口，后面是集群通信端口（默认服务端口+10000）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6379，16379</span><br><span class="line">6380，16380</span><br><span class="line">6381，16381</span><br></pre></td></tr></table></figure><h3 id="3-redis-port-conf"><a href="#3-redis-port-conf" class="headerlink" title="3.redis-{port}.conf"></a>3.redis-{port}.conf</h3><p>这里需要按照上面的参数说明进行配置，如我们配置号redis-6379.conf后，可以通过如下命令进行复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more redis-6379.conf | sed &#x27;s/6379/6380/g&#x27; &gt; redis-6380.conf</span><br><span class="line">more redis-6379.conf | sed &#x27;s/6379/6381/g&#x27; &gt; redis-6381.conf</span><br></pre></td></tr></table></figure><h3 id="4-启动服务"><a href="#4-启动服务" class="headerlink" title="4.启动服务"></a>4.启动服务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#10.211.55.15</span><br><span class="line">./redis-server redis-6379.conf</span><br><span class="line">./redis-server redis-6380.conf</span><br><span class="line">./redis-server redis-6381.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#10.211.55.16</span><br><span class="line">./redis-server redis-6379.conf</span><br><span class="line">./redis-server redis-6380.conf</span><br><span class="line">./redis-server redis-6381.conf</span><br></pre></td></tr></table></figure><h3 id="5-构建集群"><a href="#5-构建集群" class="headerlink" title="5.构建集群"></a>5.构建集群</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster create 10.211.55.15:6379 10.211.55.15:6380 10.211.55.15:6381 10.211.55.16:6379 10.211.55.16:6380 10.211.55.16:6381  --cluster-replicas 1</span><br></pre></td></tr></table></figure><h2 id="五、集群相关命令"><a href="#五、集群相关命令" class="headerlink" title="五、集群相关命令"></a>五、集群相关命令</h2><h3 id="1-健康检查"><a href="#1-健康检查" class="headerlink" title="1.健康检查"></a>1.健康检查</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 后面可以是集群中任意节点</span><br><span class="line">./redis-cli --cluster check 10.211.55.15:6380</span><br></pre></td></tr></table></figure><p>输出如下，可以看到集群中的主从关系，以及每个master中含有key的数量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">10.211.55.15:6380 (c39c1e8a...) -&gt; 2 keys | 5461 slots | 1 slaves.</span><br><span class="line">10.211.55.16:6380 (3edc1dae...) -&gt; 5 keys | 5461 slots | 1 slaves.</span><br><span class="line">10.211.55.16:6379 (4dd31f17...) -&gt; 2 keys | 5462 slots | 1 slaves.</span><br><span class="line">[OK] 9 keys in 3 masters.</span><br><span class="line">0.00 keys per slot on average.</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 10.211.55.15:6380)</span><br><span class="line">M: c39c1e8aa6e07e337aaab03eab3727f739201cd2 10.211.55.15:6380</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: a83903f50621d7627f3ce59f1210af4938b8acc4 10.211.55.15:6381</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 4dd31f17e83ef7aa6c7a36474f7f54d842e0ed64</span><br><span class="line">M: 3edc1daeaf3a848156ad8cc601b1374dd0459d9c 10.211.55.16:6380</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 4dd31f17e83ef7aa6c7a36474f7f54d842e0ed64 10.211.55.16:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: cb6a94201d6f5a4e016b1549afc8c976a1a3dda4 10.211.55.15:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 3edc1daeaf3a848156ad8cc601b1374dd0459d9c</span><br><span class="line">S: 3f41a95296cb2681ea599f47aaff9c662b3338ad 10.211.55.16:6381</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates c39c1e8aa6e07e337aaab03eab3727f739201cd2</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure><p>说明：此时如果关闭其中一个master节点，那么其对应的从节点就会升级为主节点，当重新启动原master节点后，则该节点会自动加入集群，并作为从节点。</p><h3 id="2-集群扩容，即为集群添加新的主机和从机"><a href="#2-集群扩容，即为集群添加新的主机和从机" class="headerlink" title="2.集群扩容，即为集群添加新的主机和从机"></a>2.集群扩容，即为集群添加新的主机和从机</h3><h4 id="2-1通过如下命令添加新的node"><a href="#2-1通过如下命令添加新的node" class="headerlink" title="2.1通过如下命令添加新的node"></a>2.1通过如下命令添加新的node</h4><p>说明：10.211.55.15:6382 是新的服务地址，10.211.55.16:6380 是集群中任意一个的服务地址,添加后的服务类型为master。</p><p>此时我们通过健康检查可以看到新加入的服务没有分配槽点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster check 10.211.55.15:6380</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">Could not connect to Redis at 10.211.55.15:6379: Connection refused</span><br><span class="line">10.211.55.15:6380 (a5f63b8e...) -&gt; 2 keys | 5461 slots | 1 slaves.</span><br><span class="line">10.211.55.16:6379 (15506850...) -&gt; 2 keys | 5462 slots | 1 slaves.</span><br><span class="line">10.211.55.15:6382 (316e068f...) -&gt; 0 keys | 0 slots | 0 slaves.   #注意，这里新添加的主机没有分配槽（slot），需要先进行分配才能使用</span><br><span class="line">10.211.55.16:6380 (d944c0b1...) -&gt; 5 keys | 5461 slots | 0 slaves.</span><br><span class="line">[OK] 9 keys in 4 masters.</span><br><span class="line">0.00 keys per slot on average.</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 10.211.55.15:6380)</span><br><span class="line">M: a5f63b8e4f24a73d36da9e0bbf84988d7c5558d3 10.211.55.15:6380</span><br><span class="line">  slots:[10923-16383] (5461 slots) master</span><br><span class="line">  1 additional replica(s)</span><br><span class="line">M: 15506850b235f4277306368533cacf4a5ec1bbd1 10.211.55.16:6379</span><br><span class="line">  slots:[5461-10922] (5462 slots) master</span><br><span class="line">  1 additional replica(s)</span><br><span class="line">M: 316e068fd71ee228299198a271efd839d3493835 10.211.55.15:6382</span><br><span class="line">  slots: (0 slots) master</span><br><span class="line">S: b3c0e06da5b5d694c3a68408fb4c8f7607d7e9e0 10.211.55.16:6381</span><br><span class="line">  slots: (0 slots) slave</span><br><span class="line">  replicates a5f63b8e4f24a73d36da9e0bbf84988d7c5558d3</span><br><span class="line">M: d944c0b19e92af325b882e3a86ff09c2b6b53f47 10.211.55.16:6380</span><br><span class="line">  slots:[0-5460] (5461 slots) master</span><br><span class="line">S: 4bce4c24959bda55d087296e86f58ec03186d3ae 10.211.55.15:6381</span><br><span class="line">  slots: (0 slots) slave</span><br><span class="line">  replicates 15506850b235f4277306368533cacf4a5ec1bbd1</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure><h4 id="2-2分配槽"><a href="#2-2分配槽" class="headerlink" title="2.2分配槽"></a>2.2分配槽</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster reshard 10.211.55.15:6382</span><br></pre></td></tr></table></figure><p>执行命令后会有如下设置：<br>  1.问你是否从原有的1-16384个槽中分配多少到新的主节点，我们这里分配4000为例，回车<br>    2：然后紧接着会询问你给id为谁的主节点分配，这里就是新加的节点10.211.55.15:6382，其对应的Id为:316e068fd71ee228299198a271efd839d3493835<br>    3：询问你是从所有的空间去给这个节点分配空间还是从某一个节点分配，我这里输入all  回车继续<br>    4：然后会给你分配出一个分配计划，输入yes开始分配。完成ok</p><p>此时再次运行健康检查可以看到槽点已经分配成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster check localhost:6380</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">localhost:6380 (a5f63b8e...) -&gt; 1 keys | 4128 slots | 1 slaves.</span><br><span class="line">10.211.55.16:6379 (15506850...) -&gt; 2 keys | 4128 slots | 1 slaves.</span><br><span class="line">10.211.55.15:6382 (316e068f...) -&gt; 2 keys | 4000 slots | 0 slaves.</span><br><span class="line">10.211.55.16:6380 (d944c0b1...) -&gt; 4 keys | 4128 slots | 1 slaves.</span><br><span class="line">[OK] 9 keys in 4 masters.</span><br><span class="line">0.00 keys per slot on average.</span><br><span class="line">………………………………</span><br></pre></td></tr></table></figure><h4 id="2-3平衡槽，就是均匀分配集群中的所有槽到所有的节点，该步非必须，只是看着好看点"><a href="#2-3平衡槽，就是均匀分配集群中的所有槽到所有的节点，该步非必须，只是看着好看点" class="headerlink" title="2.3平衡槽，就是均匀分配集群中的所有槽到所有的节点，该步非必须，只是看着好看点"></a>2.3平衡槽，就是均匀分配集群中的所有槽到所有的节点，该步非必须，只是看着好看点</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster rebalance --cluster-threshold 1 10.211.55.15:6382</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster info localhost:6380</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">localhost:6380 (a5f63b8e...) -&gt; 1 keys | 4096 slots | 1 slaves.</span><br><span class="line">10.211.55.16:6379 (15506850...) -&gt; 2 keys | 4096 slots | 1 slaves.</span><br><span class="line">10.211.55.15:6382 (316e068f...) -&gt; 2 keys | 4096 slots | 0 slaves.</span><br><span class="line">10.211.55.16:6380 (d944c0b1...) -&gt; 4 keys | 4096 slots | 1 slaves.</span><br><span class="line">[OK] 9 keys in 4 masters.</span><br><span class="line">0.00 keys per slot on average.</span><br></pre></td></tr></table></figure><h4 id="2-4为新加入的master添加slave"><a href="#2-4为新加入的master添加slave" class="headerlink" title="2.4为新加入的master添加slave"></a>2.4为新加入的master添加slave</h4><p>同样需要先加入集群</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster add-node 10.211.55.16:6382 10.211.55.16:6380</span><br></pre></td></tr></table></figure><p>之后不需要做分配和平衡槽的操作<br>登录这个redis， <code>./redis-cli -h 10.211.55.16 -p 6382</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6382&gt; cluster replicate 316e068fd71ee228299198a271efd839d3493835 #主节点的id</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h3 id="3-删除节点"><a href="#3-删除节点" class="headerlink" title="3.删除节点"></a>3.删除节点</h3><h4 id="3-1删除主节点"><a href="#3-1删除主节点" class="headerlink" title="3.1删除主节点"></a>3.1删除主节点</h4><p>删除节点前，节点上的槽要被清空</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster reshard 10.211.55.15:6382 #集群中任意ip即可</span><br></pre></td></tr></table></figure><p>  1.问你是否从原有的1-16384个槽中分配多少到新的主节点我们这里分配4096，即该节点上的槽数<br>    2：然后紧接着会询问你给id为谁的主节点分配，这里我们分配给10.211.55.16:6379，即15506850b235f4277306368533cacf4a5ec1bbd1<br>    3：询问你是从所有的空间去给这个节点分配空间还是从某一个节点分配<br>    我这里输入要移出的节点ID ,即316e068fd71ee228299198a271efd839d3493835 回车继续 输入 done<br>    4：然后会给你分配出一个分配计划，输入yes开始分配。完成ok</p><p>执行删除节点命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster del-node 10.211.55.16:6379 316e068fd71ee228299198a271efd839d3493835</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">&gt;&gt;&gt; Removing node 316e068fd71ee228299198a271efd839d3493835 from cluster 10.211.55.16:6379</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER FORGET messages to the cluster...</span><br><span class="line">&gt;&gt;&gt; SHUTDOWN the node.</span><br></pre></td></tr></table></figure><p>说明：<br>删除节点会自动关闭被移出的redis服务，此时，该主节点的从节点会自动转为其它主节点的从节点，而不会升级为主节点</p><h4 id="3-2删除从节点"><a href="#3-2删除从节点" class="headerlink" title="3.2删除从节点"></a>3.2删除从节点</h4><p>直接执行节点删除命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli --cluster del-node 10.211.55.16:6379 从节点ID</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;一、摘要&quot;&gt;&lt;a href=&quot;#一、摘要&quot; class=&quot;headerlink&quot; title=&quot;一、摘要&quot;&gt;&lt;/a&gt;一、摘要&lt;/h2&gt;&lt;p&gt;看完本文你将掌握如下知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;redis集群的构建方法【redis-5.0.2】&lt;/li&gt;
&lt;li&gt;redis早期的版本中使用基于ruby的&lt;code&gt;redis-trib.rb&lt;/code&gt;命令进行集群创建，新版本推荐使用 &lt;code&gt;redis-cli --cluster&lt;/code&gt;，本文就是通过&lt;code&gt;redis-cli --cluster&lt;/code&gt;命令实现集群构建。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="redis" scheme="https://blog.hanqunfeng.com/tags/redis/"/>
    
  </entry>
  
</feed>
