<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>飘逸峰的博客</title>
  
  <subtitle>Spring--Java程序员的春天</subtitle>
  <link href="https://blog.hanqunfeng.com/atom.xml" rel="self"/>
  
  <link href="https://blog.hanqunfeng.com/"/>
  <updated>2022-10-26T10:24:03.566Z</updated>
  <id>https://blog.hanqunfeng.com/</id>
  
  <author>
    <name>飘逸峰</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySql--sql语句与常用函数</title>
    <link href="https://blog.hanqunfeng.com/2022/10/26/mysql-sql-function/"/>
    <id>https://blog.hanqunfeng.com/2022/10/26/mysql-sql-function/</id>
    <published>2022-10-26T13:30:05.000Z</published>
    <updated>2022-10-26T10:24:03.566Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>sql语句与常用函数介绍</p></li><li class="lvl-2"><p>本文基于<code>mysql-8.0.30</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/">https://dev.mysql.com/doc/refman/8.0/en/</a></p></li></ul><span id="more"></span><h2 id="Mysql关键字执行顺序">Mysql关键字执行顺序</h2><table><thead><tr><th style="text-align:left">Mysql关键字语法顺序</th><th style="text-align:left">Mysql关键字执行顺序</th></tr></thead><tbody><tr><td style="text-align:left">select[distinct]</td><td style="text-align:left">from &lt;left_table&gt;</td></tr><tr><td style="text-align:left">from</td><td style="text-align:left">on &lt;join_condition&gt;</td></tr><tr><td style="text-align:left">join(left join)</td><td style="text-align:left">&lt;join_type&gt; join &lt;right_table&gt;</td></tr><tr><td style="text-align:left">on</td><td style="text-align:left">where &lt;where_condition&gt;</td></tr><tr><td style="text-align:left">where</td><td style="text-align:left">group by &lt;grout_by_list&gt; [with rollup]</td></tr><tr><td style="text-align:left">group by[with rollup]</td><td style="text-align:left">having &lt;having_condition&gt;</td></tr><tr><td style="text-align:left">having</td><td style="text-align:left">select[distinct] &lt;select_list&gt;</td></tr><tr><td style="text-align:left">union(union all)</td><td style="text-align:left">union(union all)</td></tr><tr><td style="text-align:left">order by</td><td style="text-align:left">order by &lt;order_by_list&gt; [asc</td></tr><tr><td style="text-align:left">limit</td><td style="text-align:left">limit &lt;limit_number&gt;</td></tr></tbody></table><div class="note info"><p>FROM：组装来自不同数据源的记录<br>WHERE：根据指定的条件过滤上一步检索出的记录<br>GROUP BY：对上面过滤后的记录按指定条件分组<br>SUM/AVG/COUNT：使用聚合函数进行计算<br>HAVING：对所有分组根据指定条件进行过滤<br>SELECT：从上一步过滤后的各个分组记录中提取指定查询的字段列表（包括聚合字段、计算字段、表达式字段等）<br>ORDER BY：对上一步查询得到的结果集按照排序字段列表进行排序，并输出排序结果<br>DISTINCT和GROUP BY：都可以实现去重，DISTINCT是筛选去重，GROUP BY是分组去重<br>WHERE与HAVING的区别：WHERE是对记录进行筛选；而HAVING是对按GROUP BY进行分组后的组进行筛选。HAVING只有在使用GROUP BY 后才能使用。</p></div><h2 id="distinct-去重">distinct:去重</h2><ul class="lvl-0"><li class="lvl-2"><p>distinct关键字用于去重，distinct必须写在所有要查询字段的前面</p></li><li class="lvl-2"><p>distinct后面有几个字段，就代表修饰几个字段，而不是紧随distinct的字段（类似于联合唯一索引），例如以下两个语句效果相同</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># name<span class="operator">+</span>age去重</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> name,age <span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> (name),age <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>distinct + order by</code> 是无法保证排序结果的，此时要使用 <code>group by + order by</code></p><ul class="lvl-2"><li class="lvl-6">distinct执行顺序先于order by，而distinct去重时不确定其选取的是哪条记录，而且distinct本身的排序结果也是乱序，所以其根本无法保证基于其它字段的排序顺序</li><li class="lvl-6">group by也可以达到去重的目的，并可以基于聚合函数实现排序的目的</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 错误方式</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(t.search) <span class="keyword">FROM</span> tbl_search_history t <span class="keyword">where</span> t.user_id <span class="operator">=</span> :userId <span class="keyword">ORDER</span> <span class="keyword">BY</span> t.id <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"># 正确方式</span><br><span class="line"><span class="keyword">SELECT</span> t.search <span class="keyword">FROM</span> tbl_search_history t <span class="keyword">WHERE</span> t.user_id <span class="operator">=</span> :userId <span class="keyword">GROUP</span> <span class="keyword">BY</span> t.search <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">MAX</span>(t.id) <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h2 id="with-rollup-分组后聚合">with rollup:分组后聚合</h2><ul class="lvl-0"><li class="lvl-2"><p>with rollup出现在group by后面，用于对分组结果中的聚合数据再次进行汇总</p></li><li class="lvl-2"><p>比如下面这个sql用于统计各个部门员工的年龄平均值、最大值和最小值</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,<span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">32.2500</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> depName,groupName,<span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName,groupName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">25.0000</span>  <span class="operator">|</span> <span class="number">28</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">35.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">34</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>    <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">29.0000</span>  <span class="operator">|</span> <span class="number">34</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">32.0000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">26</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>    <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34.0000</span>  <span class="operator">|</span> <span class="number">44</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">42.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>    <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>    <span class="operator">|</span> <span class="number">32.2500</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>with rollup会为分组字段自动填充null值，我们可以使用<code>GROUPING</code>函数判断是否为with rollup自动填充的来设置想要的内容，比如</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(depName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;总计&#x27;</span> <span class="keyword">ELSE</span> depName <span class="keyword">END</span> depName,<span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age)</span><br><span class="line"><span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 总计    <span class="operator">|</span> <span class="number">32.2500</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(depName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="keyword">GROUPING</span>(groupName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;总计&#x27;</span> <span class="keyword">ELSE</span> depName <span class="keyword">END</span> depName,</span><br><span class="line"><span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(depName)<span class="operator">=</span><span class="number">0</span> <span class="keyword">and</span> <span class="keyword">GROUPING</span>(groupName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;小计&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(depName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="keyword">GROUPING</span>(groupName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;总计&#x27;</span> <span class="keyword">ELSE</span> groupName <span class="keyword">END</span> groupName,</span><br><span class="line"><span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName,groupName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">25.0000</span>  <span class="operator">|</span> <span class="number">28</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">35.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">34</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 小计      <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">29.0000</span>  <span class="operator">|</span> <span class="number">34</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">32.0000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">26</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> 小计      <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34.0000</span>  <span class="operator">|</span> <span class="number">44</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">42.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> 小计      <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 总计    <span class="operator">|</span> 总计      <span class="operator">|</span> <span class="number">32.2500</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br></pre></td></tr></table></figure><h2 id="group-concat-分组连接，将分组下的全部column用分隔符连接">group_concat(): 分组连接，将分组下的全部column用分隔符连接</h2><ul class="lvl-0"><li class="lvl-2"><p>语法：<code>group_concat([DISTINCT] column [Order BY column ASC/DESC] [SEPARATOR '分隔符'])</code></p></li><li class="lvl-2"><p>默认逗号连接，不去重，不排序</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,group_concat(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(age)       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> depName,group_concat(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(age)                               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span>                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span>,<span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>,<span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>默认连接符为&quot;,“，如果要使用”:&quot;连接，可以使用<code>SEPARATOR ':'</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,group_concat(age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">34</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">38</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">44</span>:<span class="number">24</span>:<span class="number">46</span>:<span class="number">38</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+---------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> depName,group_concat(age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(age SEPARATOR <span class="string">&#x27;:&#x27;</span>)                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">34</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">38</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">44</span>:<span class="number">24</span>:<span class="number">46</span>:<span class="number">38</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>:<span class="number">34</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">38</span>:<span class="number">44</span>:<span class="number">24</span>:<span class="number">46</span>:<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>默认连接全部数据，如果要去掉重复的数据，可以使用<code>DISTINCT</code>关键字，其结果是排好序的</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,group_concat(<span class="keyword">DISTINCT</span> age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(<span class="keyword">DISTINCT</span> age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">24</span>:<span class="number">26</span>:<span class="number">34</span>:<span class="number">38</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">24</span>:<span class="number">38</span>:<span class="number">44</span>:<span class="number">46</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> depName,group_concat(<span class="keyword">DISTINCT</span> age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(<span class="keyword">DISTINCT</span> age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">24</span>:<span class="number">26</span>:<span class="number">34</span>:<span class="number">38</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">24</span>:<span class="number">38</span>:<span class="number">44</span>:<span class="number">46</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>:<span class="number">44</span>:<span class="number">46</span>               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>排序<code>Order BY columnName ASC/DESC</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,group_concat(<span class="keyword">DISTINCT</span> age <span class="keyword">Order</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span> SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(<span class="keyword">DISTINCT</span> age <span class="keyword">Order</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span> SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">38</span>:<span class="number">36</span>:<span class="number">34</span>:<span class="number">28</span>:<span class="number">26</span>:<span class="number">24</span>:<span class="number">22</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">38</span>:<span class="number">34</span>:<span class="number">26</span>:<span class="number">24</span>                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">46</span>:<span class="number">44</span>:<span class="number">38</span>:<span class="number">24</span>                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">46</span>:<span class="number">44</span>:<span class="number">38</span>:<span class="number">36</span>:<span class="number">34</span>:<span class="number">28</span>:<span class="number">26</span>:<span class="number">24</span>:<span class="number">22</span>                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure><h2 id="over-开窗函数">over(): 开窗函数</h2><ul class="lvl-0"><li class="lvl-2"><p>语法：over（partition by columnname1 order by columnname2）</p></li><li class="lvl-2"><p>含义：按columname1指定的字段进行分组排序，按字段columnname2的值进行排序</p></li><li class="lvl-2"><p>over函数只能出现在select中，不能出现在过滤条件中</p></li><li class="lvl-2"><p>over()意思就是所有的数据都在窗口中，不能单独使用，要和分析函数如：sum(),avg(),row_number()等等一块使用，这么说貌似不好理解，直接看示例吧</p></li><li class="lvl-2"><p>将年龄的平均值显示在每行</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>() <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>将每个部门的年龄平均值显示在每行</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> depName) <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">30.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">30.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">30.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">30.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>将每个部门下每个分组的年龄平均值显示在每行</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> depName,groupName) <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">29.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">29.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">34.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">34.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">42.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">42.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>每个部门每个分组下按年龄倒序并显示每组的平均年龄</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> depName,groupName <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>) <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">28.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">27.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">26.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">37.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">34.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">29.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">44.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">34.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">46.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">42.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line">注意，这里是先分组，然后逐行求平均值的，比如前<span class="number">4</span>条记录是一组，第一行数据和自己比，平均值就是<span class="number">28</span>，第二行数据和第一行数据比，平均值是(<span class="number">26</span><span class="operator">+</span><span class="number">28</span>)<span class="operator">/</span><span class="number">2</span>，第三行数据和前两行比，平均值就是(<span class="number">28</span><span class="operator">+</span><span class="number">26</span><span class="operator">+</span><span class="number">24</span>)<span class="operator">/</span><span class="number">3</span>，以此类推，第四行就是(<span class="number">28</span><span class="operator">+</span><span class="number">26</span><span class="operator">+</span><span class="number">24</span><span class="operator">+</span><span class="number">22</span>)<span class="operator">/</span><span class="number">4</span>，第五行是另一个分组了，依旧是按行计算。这里需要说一下第<span class="number">7</span>行和第<span class="number">8</span>行，因为这两行是同一个分组，且年龄相同，都是<span class="number">34</span>，其平均值计算方法是相同年龄行相加后一起求平均值，所以我们看到这两行的平均值是一样的，所以<span class="keyword">over</span>按哪个字段排序，如果其值相同，调用分析函数时要一起计算。每个分组的最后一条记录的显示的平均值才是该组的真实平均值</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>不分组直接排序，这里按年龄倒序</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>) <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">46.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">45.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">40.8000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">40.8000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">40.8000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">40.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">37.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">35.1667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">35.1667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.9333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.9333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.9333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line">这里的计算方法与上面分组的情况类似，按行计算平均值，遇到排序字段值相同时，要一起计算。最后一条记录显示的平均值就是所有记录的平均值。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查询每个员工年龄与全体平均年龄的差值</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,groupName,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>() <span class="keyword">as</span> avgAge,age<span class="operator">-</span><span class="built_in">avg</span>(age)<span class="keyword">over</span>() <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span> age<span class="operator">-</span><span class="built_in">avg</span>(age)<span class="keyword">over</span>() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-10.2500</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-8.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-6.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-4.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">1.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">1.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">3.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">5.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">1.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-8.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-6.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">5.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">11.7500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-8.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">13.7500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">5.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+--------------------+</span></span><br></pre></td></tr></table></figure><h2 id="查询行号">查询行号</h2><ul class="lvl-0"><li class="lvl-2"><p>mysql没有提供可供计算行号的方法，不过我们可以通过两种方式来实现</p></li><li class="lvl-2"><p>第一种方法，自定义行号变量<code>@rownum</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="variable">@rownum</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> rownum, t.depName,t.groupName,t.age  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="number">0</span>) r, tbl_employees t</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"># 年龄倒序显示</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="variable">@rownum</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> rownum, t.depName,t.groupName,t.age  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="number">0</span>) r, tbl_employees t <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>第二种方法，使用<code>row_number()over()</code>函数</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">row_number</span>()<span class="keyword">over</span>() <span class="keyword">as</span> rownum,depName,groupName,age <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line">此时如果要按年龄排序，则排序规则可以写在最后，也可以写在<span class="keyword">over</span>函数内，效果是一样的</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">row_number</span>()<span class="keyword">over</span>() <span class="keyword">as</span> rownum,depName,groupName,age <span class="keyword">from</span> tbl_employees <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>) <span class="keyword">as</span> rownum,depName,groupName,age <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br></pre></td></tr></table></figure><h2 id="Mysql常用函数">Mysql常用函数</h2><h3 id="数学函数">数学函数</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">ABS(x)</td><td style="text-align:left">返回x的绝对值</td></tr><tr><td style="text-align:left">BIN(x)</td><td style="text-align:left">返回x的二进制（OCT(x)返回八进制，HEX(x)返回十六进制）</td></tr><tr><td style="text-align:left">CEILING(x)</td><td style="text-align:left">返回&gt;=x的最小整数值，可以简写为 ceil(x)</td></tr><tr><td style="text-align:left">FLOOR(x)</td><td style="text-align:left">返回&lt;=x的最大整数值</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">ABS</span>(<span class="number">10</span>),<span class="built_in">ABS</span>(<span class="number">-10</span>),BIN(<span class="number">10</span>),OCT(<span class="number">10</span>),HEX(<span class="number">10</span>),<span class="built_in">CEILING</span>(<span class="number">10.2</span>),<span class="built_in">EXP</span>(<span class="number">1</span>),<span class="built_in">FLOOR</span>(<span class="number">10.2</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+---------+---------+---------+---------------+-------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">ABS</span>(<span class="number">10</span>) <span class="operator">|</span> <span class="built_in">ABS</span>(<span class="number">-10</span>) <span class="operator">|</span> BIN(<span class="number">10</span>) <span class="operator">|</span> OCT(<span class="number">10</span>) <span class="operator">|</span> HEX(<span class="number">10</span>) <span class="operator">|</span> <span class="built_in">CEILING</span>(<span class="number">10.2</span>) <span class="operator">|</span> <span class="built_in">EXP</span>(<span class="number">1</span>)            <span class="operator">|</span> <span class="built_in">FLOOR</span>(<span class="number">10.2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+---------+---------+---------+---------------+-------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>      <span class="operator">|</span> <span class="number">10</span>       <span class="operator">|</span> <span class="number">1010</span>    <span class="operator">|</span> <span class="number">12</span>      <span class="operator">|</span> A       <span class="operator">|</span> <span class="number">11</span>            <span class="operator">|</span> <span class="number">2.718281828459045</span> <span class="operator">|</span> <span class="number">10</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+---------+---------+---------+---------------+-------------------+-------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">GREATEST(x1,x2,…,xn)</td><td style="text-align:left">返回集合中最大的值</td></tr><tr><td style="text-align:left">LEAST(x1,x2,…,xn)</td><td style="text-align:left">返回集合中最小的值</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 按照数字顺序，字符顺序，首字母顺序比较</span><br><span class="line"><span class="keyword">select</span> GREATEST(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>),LEAST(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>),GREATEST(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>),LEAST(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>),GREATEST(<span class="string">&#x27;MySQL&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="string">&#x27;Redis&#x27;</span>),LEAST(<span class="string">&#x27;MySQL&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="string">&#x27;Redis&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+</span></span><br><span class="line"><span class="operator">|</span> GREATEST(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>) <span class="operator">|</span> LEAST(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>) <span class="operator">|</span> GREATEST(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>) <span class="operator">|</span> LEAST(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>) <span class="operator">|</span> GREATEST(<span class="string">&#x27;MySQL&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="string">&#x27;Redis&#x27;</span>) <span class="operator">|</span> LEAST(<span class="string">&#x27;MySQL&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="string">&#x27;Redis&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>                 <span class="operator">|</span> <span class="number">1</span>              <span class="operator">|</span> D                         <span class="operator">|</span> A                      <span class="operator">|</span> Redis                            <span class="operator">|</span> Java                          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 这里要注意，只要集合中含有<span class="keyword">NULL</span>，返回值都是<span class="keyword">null</span></span><br><span class="line"><span class="keyword">select</span> GREATEST(<span class="number">10</span>, <span class="number">20</span>, <span class="keyword">NULL</span>),LEAST(<span class="number">10</span>, <span class="number">20</span>, <span class="keyword">NULL</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> GREATEST(<span class="number">10</span>, <span class="number">20</span>, <span class="keyword">NULL</span>) <span class="operator">|</span> LEAST(<span class="number">10</span>, <span class="number">20</span>, <span class="keyword">NULL</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+---------------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">EXP(x)</td><td style="text-align:left">返回值e（自然对数的底）的x次方，自然对数e其值约等于2.71828</td></tr><tr><td style="text-align:left">LN(x)</td><td style="text-align:left">返回x的自然对数</td></tr><tr><td style="text-align:left">LOG(x,y)</td><td style="text-align:left">返回x的以y为底的对数</td></tr><tr><td style="text-align:left">MOD(x,y)</td><td style="text-align:left">返回x/y的模（余数）,当被除数为正数，结果就是正数，当被除数为负数，结果就是负数。</td></tr><tr><td style="text-align:left">PI()</td><td style="text-align:left">返回pi的值（圆周率）</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">EXP</span>(<span class="number">1</span>),<span class="built_in">LN</span>(<span class="number">2.718281828459045</span>),<span class="built_in">LOG</span>(<span class="number">2</span>,<span class="number">16</span>),<span class="built_in">MOD</span>(<span class="number">10</span>,<span class="number">3</span>),<span class="built_in">MOD</span>(<span class="number">-10</span>,<span class="number">3</span>),PI()</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-----------------------+-----------+-----------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">EXP</span>(<span class="number">1</span>)            <span class="operator">|</span> <span class="built_in">LN</span>(<span class="number">2.718281828459045</span>) <span class="operator">|</span> <span class="built_in">LOG</span>(<span class="number">2</span>,<span class="number">16</span>) <span class="operator">|</span> <span class="built_in">MOD</span>(<span class="number">10</span>,<span class="number">3</span>) <span class="operator">|</span> <span class="built_in">MOD</span>(<span class="number">-10</span>,<span class="number">3</span>) <span class="operator">|</span> PI()     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-----------------------+-----------+-----------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2.718281828459045</span> <span class="operator">|</span> <span class="number">1.0</span>                   <span class="operator">|</span> <span class="number">4.0</span>       <span class="operator">|</span> <span class="number">1</span>         <span class="operator">|</span> <span class="number">-1</span>         <span class="operator">|</span> <span class="number">3.141593</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-----------------------+-----------+-----------+------------+----------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">RAND()</td><td style="text-align:left">返回０到１内的随机值,可以通过提供一个参数(种子)使RAND()随机数生成器生成一个指定的值。</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 相同的种子，返回值相同</span><br><span class="line"><span class="keyword">select</span> RAND(),RAND(<span class="number">2</span>),RAND(<span class="number">2</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> RAND()              <span class="operator">|</span> RAND(<span class="number">2</span>)            <span class="operator">|</span> RAND(<span class="number">2</span>)            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0.10167000452212059</span> <span class="operator">|</span> <span class="number">0.6555866465490187</span> <span class="operator">|</span> <span class="number">0.6555866465490187</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+</span></span><br><span class="line"></span><br><span class="line"># 获得介于[i，j)之间的随机值，<span class="built_in">FLOOR</span>(i <span class="operator">+</span> RAND() <span class="operator">*</span>(j − i))，比如[<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">1</span> <span class="operator">+</span> RAND()<span class="operator">*</span>(<span class="number">10</span> <span class="operator">-</span> <span class="number">1</span>)) <span class="keyword">AS</span> Random_Number;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> Random_Number <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6.0</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"></span><br><span class="line"># 获得介于[i，j]之间的随机值，<span class="built_in">FLOOR</span>(i <span class="operator">+</span> RAND() <span class="operator">*</span>(j − i <span class="operator">+</span> <span class="number">1</span>))，比如[<span class="number">1</span>,<span class="number">10</span>]</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">1</span> <span class="operator">+</span> RAND()<span class="operator">*</span>(<span class="number">10</span> <span class="operator">-</span> <span class="number">1</span> <span class="operator">+</span> <span class="number">1</span>)) <span class="keyword">AS</span> Random_Number;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> Random_Number <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10.0</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">ROUND(x,y)</td><td style="text-align:left">返回参数x的四舍五入的有y位小数的值</td></tr><tr><td style="text-align:left">SIGN(x)</td><td style="text-align:left">返回代表数字x的符号的值</td></tr><tr><td style="text-align:left">SQRT(x)</td><td style="text-align:left">返回一个数的平方根</td></tr><tr><td style="text-align:left">POW(x,y)</td><td style="text-align:left">指数函数，x为底，y为指数</td></tr><tr><td style="text-align:left">TRUNCATE(x,y)</td><td style="text-align:left">返回数字x截短为y位小数的结果，y为负数时整数部分替换为0</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ROUND(<span class="number">3.147</span>,<span class="number">2</span>),SIGN(<span class="number">5</span>),SIGN(<span class="number">-5</span>),<span class="built_in">SQRT</span>(<span class="number">16</span>),POW(<span class="number">4</span>,<span class="number">2</span>),<span class="keyword">TRUNCATE</span>(<span class="number">3.147</span>,<span class="number">2</span>),<span class="keyword">TRUNCATE</span>(<span class="number">3.147</span>,<span class="number">0</span>),<span class="keyword">TRUNCATE</span>(<span class="number">123.147</span>,<span class="number">-2</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> ROUND(<span class="number">3.147</span>,<span class="number">2</span>) <span class="operator">|</span> SIGN(<span class="number">5</span>) <span class="operator">|</span> SIGN(<span class="number">-5</span>) <span class="operator">|</span> <span class="built_in">SQRT</span>(<span class="number">16</span>) <span class="operator">|</span> POW(<span class="number">4</span>,<span class="number">2</span>) <span class="operator">|</span> <span class="keyword">TRUNCATE</span>(<span class="number">3.147</span>,<span class="number">2</span>) <span class="operator">|</span> <span class="keyword">TRUNCATE</span>(<span class="number">3.147</span>,<span class="number">0</span>) <span class="operator">|</span> <span class="keyword">TRUNCATE</span>(<span class="number">123.147</span>,<span class="number">-2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3.15</span>           <span class="operator">|</span> <span class="number">1</span>       <span class="operator">|</span> <span class="number">-1</span>       <span class="operator">|</span> <span class="number">4.0</span>      <span class="operator">|</span> <span class="number">16.0</span>     <span class="operator">|</span> <span class="number">3.14</span>              <span class="operator">|</span> <span class="number">3</span>                 <span class="operator">|</span> <span class="number">100</span>                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+</span></span><br></pre></td></tr></table></figure><h3 id="聚合函数-常用于GROUP-BY从句的SELECT查询中">聚合函数(常用于GROUP BY从句的SELECT查询中)</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">AVG(col)</td><td style="text-align:left">返回指定列的平均值</td></tr><tr><td style="text-align:left">COUNT(col)</td><td style="text-align:left">返回指定列中非NULL值的个数，注意count(*)不会跳过NULL值行</td></tr><tr><td style="text-align:left">MIN(col)</td><td style="text-align:left">返回指定列的最小值</td></tr><tr><td style="text-align:left">MAX(col)</td><td style="text-align:left">返回指定列的最大值</td></tr><tr><td style="text-align:left">SUM(col)</td><td style="text-align:left">返回指定列的所有值之和</td></tr><tr><td style="text-align:left">GROUP_CONCAT(col)</td><td style="text-align:left">返回由属于一组的列值连接组合而成的结果</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,<span class="built_in">count</span>(<span class="operator">*</span>),<span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age),<span class="built_in">sum</span>(age),group_concat(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+----------+----------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span> <span class="built_in">sum</span>(age) <span class="operator">|</span> group_concat(age)       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+----------+----------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">8</span>        <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span> <span class="number">242</span>      <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">4</span>        <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span> <span class="number">122</span>      <span class="operator">|</span> <span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">4</span>        <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span> <span class="number">152</span>      <span class="operator">|</span> <span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+----------+----------+-------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="字符串函数">字符串函数</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">ASCII(char)</td><td style="text-align:left">返回字符的ASCII码值</td></tr><tr><td style="text-align:left">LENGTH(s)</td><td style="text-align:left">返回字符串str中的字符数</td></tr><tr><td style="text-align:left">BIT_LENGTH(str)</td><td style="text-align:left">返回字符串的比特长度</td></tr><tr><td style="text-align:left">CONCAT(s1,s2…,sn)</td><td style="text-align:left">将s1,s2…,sn连接成字符串</td></tr><tr><td style="text-align:left">CONCAT_WS(sep,s1,s2…,sn)</td><td style="text-align:left">将s1,s2…,sn连接成字符串，并用sep字符间隔</td></tr><tr><td style="text-align:left">INSERT(str,x,y,instr)</td><td style="text-align:left">将字符串str从第x位置开始，y个字符长的子串替换为字符串instr，返回结果</td></tr><tr><td style="text-align:left">REPLACE(str,substr,otherstr)</td><td style="text-align:left">在str中查找substr，并使用otherstr替换</td></tr><tr><td style="text-align:left">FIND_IN_SET(str,list)</td><td style="text-align:left">分析逗号分隔的list列表，如果发现str，返回str在list中的位置，位置从1开始计算</td></tr><tr><td style="text-align:left">REPEAT(str,x)</td><td style="text-align:left">返回字符串str重复x次的结果</td></tr><tr><td style="text-align:left">REVERSE(str)</td><td style="text-align:left">返回颠倒字符串str的结果</td></tr><tr><td style="text-align:left">STRCMP(s1,s2)</td><td style="text-align:left">比较字符串s1和s2,如果两个字符串相同，则返回0，如果根据定义的顺序第一个参数小于第二个参数，则返回-1，而当第二个参数小于第一个参数时，返回1。</td></tr><tr><td style="text-align:left">LEFT(str,x)</td><td style="text-align:left">返回字符串str中最左边的x个字符</td></tr><tr><td style="text-align:left">RIGHT(str,x)</td><td style="text-align:left">返回字符串str中最右边的x个字符</td></tr><tr><td style="text-align:left">SUBSTRING(str,x,y)或者SUBSTR(str,x,y)</td><td style="text-align:left">返回字符串str从第x个字符开始，截取y个字符长度，y不填写则表示截取到字符串末尾</td></tr><tr><td style="text-align:left">TRIM(str)</td><td style="text-align:left">去除字符串首部和尾部的所有空格</td></tr><tr><td style="text-align:left">RTRIM(str)</td><td style="text-align:left">返回字符串str尾部的空格</td></tr><tr><td style="text-align:left">LTRIM(str)</td><td style="text-align:left">从字符串str中切掉开头的空格</td></tr><tr><td style="text-align:left">UCASE(str)或UPPER(str)</td><td style="text-align:left">返回将字符串str中所有字符转变为大写后的结果</td></tr><tr><td style="text-align:left">LCASE(str)或LOWER(str)</td><td style="text-align:left">返回将字符串str中所有字符改变为小写后的结果</td></tr><tr><td style="text-align:left">LPAD(str,x,y)</td><td style="text-align:left">将str长度为设置为x，不足部分用y在前面补齐</td></tr><tr><td style="text-align:left">RPAD(str,x,y)</td><td style="text-align:left">将str长度为设置为x，不足部分用y在后面补齐</td></tr><tr><td style="text-align:left">SPACE(x)</td><td style="text-align:left">返回指定数量的空格，x必须大于0</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"># 字符串替换</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">INSERT</span>(<span class="string">&#x27;abcdefgh&#x27;</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;ufo&#x27;</span>),REVERSE(<span class="string">&#x27;abcdefgh&#x27;</span>),REPEAT(<span class="string">&#x27;MySQL&#x27;</span>, <span class="number">3</span>),REPLACE(<span class="string">&#x27;abcdefgh&#x27;</span>,<span class="string">&#x27;de&#x27;</span>,<span class="string">&#x27;ufo&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+---------------------+--------------------+--------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">INSERT</span>(<span class="string">&#x27;abcdefgh&#x27;</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;ufo&#x27;</span>) <span class="operator">|</span> REVERSE(<span class="string">&#x27;abcdefgh&#x27;</span>) <span class="operator">|</span> REPEAT(<span class="string">&#x27;MySQL&#x27;</span>, <span class="number">3</span>) <span class="operator">|</span> REPLACE(<span class="string">&#x27;abcdefgh&#x27;</span>,<span class="string">&#x27;de&#x27;</span>,<span class="string">&#x27;ufo&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+---------------------+--------------------+--------------------------------+</span></span><br><span class="line"><span class="operator">|</span> abufoh                       <span class="operator">|</span> hgfedcba            <span class="operator">|</span> MySQLMySQLMySQL    <span class="operator">|</span> abcufofgh                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+---------------------+--------------------+--------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 计算字符串长度，中文占<span class="number">3</span>个字符，每个字符<span class="number">8</span>个字节</span><br><span class="line"><span class="keyword">select</span> ASCII(<span class="string">&#x27;A&#x27;</span>),LENGTH(<span class="string">&#x27;中华人民共和国&#x27;</span>),BIT_LENGTH(<span class="string">&#x27;中华人民共和国&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+--------------------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> ASCII(<span class="string">&#x27;A&#x27;</span>) <span class="operator">|</span> LENGTH(<span class="string">&#x27;中华人民共和国&#x27;</span>) <span class="operator">|</span> BIT_LENGTH(<span class="string">&#x27;中华人民共和国&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+--------------------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">65</span>         <span class="operator">|</span> <span class="number">21</span>                       <span class="operator">|</span> <span class="number">168</span>                          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+--------------------------+------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 字符串连接</span><br><span class="line"><span class="keyword">select</span> CONCAT(<span class="string">&#x27;中华&#x27;</span>,<span class="string">&#x27;人民&#x27;</span>,<span class="string">&#x27;共和国&#x27;</span>),CONCAT_WS(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;中华&#x27;</span>,<span class="string">&#x27;人民&#x27;</span>,<span class="string">&#x27;共和国&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> CONCAT(<span class="string">&#x27;中华&#x27;</span>,<span class="string">&#x27;人民&#x27;</span>,<span class="string">&#x27;共和国&#x27;</span>) <span class="operator">|</span> CONCAT_WS(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;中华&#x27;</span>,<span class="string">&#x27;人民&#x27;</span>,<span class="string">&#x27;共和国&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 中华人民共和国                 <span class="operator">|</span> 中华_人民_共和国                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 字符串截取</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">LEFT</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">5</span>),<span class="keyword">RIGHT</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">5</span>),<span class="built_in">SUBSTRING</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">3</span>),<span class="built_in">SUBSTRING</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------------------------+-------------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">LEFT</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">5</span>) <span class="operator">|</span> <span class="keyword">RIGHT</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">5</span>) <span class="operator">|</span> <span class="built_in">SUBSTRING</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">3</span>) <span class="operator">|</span> <span class="built_in">SUBSTRING</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">3</span>,<span class="number">2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------------------------+-------------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 中华人民共               <span class="operator">|</span> 人民共和国                <span class="operator">|</span> 人民共和国                    <span class="operator">|</span> 人民                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------------------------+-------------------------------+---------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 字符串补齐</span><br><span class="line"><span class="keyword">select</span> LPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="string">&#x27;a&#x27;</span>),LPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="number">0</span>),RPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="string">&#x27;a&#x27;</span>),RPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="number">0</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------+---------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> LPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="string">&#x27;a&#x27;</span>) <span class="operator">|</span> LPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="number">0</span>) <span class="operator">|</span> RPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="string">&#x27;a&#x27;</span>) <span class="operator">|</span> RPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="number">0</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------+---------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> aahello             <span class="operator">|</span> <span class="number">00</span>hello           <span class="operator">|</span> helloaa             <span class="operator">|</span> hello00           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------+---------------------+-------------------+</span></span><br><span class="line"></span><br><span class="line"># 列表中查找指定的字符串</span><br><span class="line"><span class="keyword">SELECT</span> FIND_IN_SET(<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a,b,c,d&#x27;</span>),FIND_IN_SET(<span class="string">&#x27;bb&#x27;</span>, <span class="string">&#x27;ab,bb,cb,db&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> FIND_IN_SET(<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a,b,c,d&#x27;</span>) <span class="operator">|</span> FIND_IN_SET(<span class="string">&#x27;bb&#x27;</span>, <span class="string">&#x27;ab,bb,cb,db&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>                           <span class="operator">|</span> <span class="number">2</span>                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+----------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 字符串比较，按字母顺序逐个比较</span><br><span class="line"><span class="keyword">Select</span> STRCMP(<span class="string">&#x27;Geeks&#x27;</span>, <span class="string">&#x27;Geeks&#x27;</span>),STRCMP(<span class="string">&#x27;Geeks&#x27;</span>, <span class="string">&#x27;Geek&#x27;</span>),STRCMP(<span class="string">&#x27;Geek&#x27;</span>, <span class="string">&#x27;Geeks&#x27;</span>),STRCMP(<span class="string">&#x27;Geek&#x27;</span>, <span class="keyword">NULL</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------------------------+-------------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> STRCMP(<span class="string">&#x27;Geeks&#x27;</span>, <span class="string">&#x27;Geeks&#x27;</span>) <span class="operator">|</span> STRCMP(<span class="string">&#x27;Geeks&#x27;</span>, <span class="string">&#x27;Geek&#x27;</span>) <span class="operator">|</span> STRCMP(<span class="string">&#x27;Geek&#x27;</span>, <span class="string">&#x27;Geeks&#x27;</span>) <span class="operator">|</span> STRCMP(<span class="string">&#x27;Geek&#x27;</span>, <span class="keyword">NULL</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------------------------+-------------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0</span>                        <span class="operator">|</span> <span class="number">1</span>                       <span class="operator">|</span> <span class="number">-1</span>                      <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------------------------+-------------------------+----------------------+</span></span><br><span class="line"><span class="keyword">select</span> STRCMP(<span class="string">&#x27;ae&#x27;</span>,<span class="string">&#x27;abcd&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> STRCMP(<span class="string">&#x27;ae&#x27;</span>,<span class="string">&#x27;abcd&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"></span><br><span class="line"># 大小写转换</span><br><span class="line"><span class="keyword">select</span> UCASE(<span class="string">&#x27;abc&#x27;</span>),<span class="built_in">UPPER</span>(<span class="string">&#x27;abc&#x27;</span>),LCASE(<span class="string">&#x27;ABC&#x27;</span>),<span class="built_in">LOWER</span>(<span class="string">&#x27;ABC&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------+--------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> UCASE(<span class="string">&#x27;abc&#x27;</span>) <span class="operator">|</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;abc&#x27;</span>) <span class="operator">|</span> LCASE(<span class="string">&#x27;ABC&#x27;</span>) <span class="operator">|</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;ABC&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------+--------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> ABC          <span class="operator">|</span> ABC          <span class="operator">|</span> abc          <span class="operator">|</span> abc          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------+--------------+--------------+</span></span><br><span class="line"></span><br><span class="line"># 去除左右空格</span><br><span class="line"><span class="keyword">select</span> LENGTH(<span class="built_in">TRIM</span>(<span class="string">&#x27;  abc  &#x27;</span>)),LENGTH(LTRIM(<span class="string">&#x27;  abc  &#x27;</span>)),LENGTH(RTRIM(<span class="string">&#x27;  abc  &#x27;</span>))</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+--------------------------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> LENGTH(<span class="built_in">TRIM</span>(<span class="string">&#x27;  abc  &#x27;</span>)) <span class="operator">|</span> LENGTH(LTRIM(<span class="string">&#x27;  abc  &#x27;</span>)) <span class="operator">|</span> LENGTH(RTRIM(<span class="string">&#x27;  abc  &#x27;</span>)) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+--------------------------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>                       <span class="operator">|</span> <span class="number">5</span>                        <span class="operator">|</span> <span class="number">5</span>                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+--------------------------+--------------------------+</span></span><br><span class="line"></span><br><span class="line"># 返回指定数量的空格</span><br><span class="line"><span class="keyword">select</span> SPACE(<span class="number">100</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> SPACE(<span class="number">100</span>)                                                                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                                                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="日期和时间函数">日期和时间函数</h3><ul class="lvl-0"><li class="lvl-2"><p>时间格式符含义</p></li></ul><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">格式符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">%Y</td><td style="text-align:left">四位的年份</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">%y</td><td style="text-align:left">2位的年份</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">%m</td><td style="text-align:left">月份（01,02，…11,12）</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">%c</td><td style="text-align:left">月份（1,2,3…11,12）</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">%d</td><td style="text-align:left">日（01,02，…）</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">%H</td><td style="text-align:left">小时（24小时）</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">%h</td><td style="text-align:left">小时（12小时）</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">%i</td><td style="text-align:left">分钟（00,01，…59）</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">%s</td><td style="text-align:left">秒（00,01，…59）</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>获取当前日期和时间</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">CURDATE()或CURRENT_DATE()或CURRENT_DATE</td><td style="text-align:left">返回当前的日期</td></tr><tr><td style="text-align:left">CURTIME()或CURRENT_TIME()或CURTIME</td><td style="text-align:left">返回当前的时间</td></tr><tr><td style="text-align:left">NOW()</td><td style="text-align:left">返回当前的日期和时间,%Y-%m-%d %H:%i:%s</td></tr><tr><td style="text-align:left">current_timestamp()或current_timestamp或localtime或localtimestamp</td><td style="text-align:left">返回当前的日期和时间,%Y-%m-%d %H:%i:%s</td></tr><tr><td style="text-align:left">sysdate()</td><td style="text-align:left">返回当前的日期和时间,%Y-%m-%d %H:%i:%s</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> CURDATE(),<span class="built_in">CURRENT_DATE</span>(),CURTIME(),<span class="built_in">CURRENT_TIME</span>(),NOW(),<span class="built_in">current_timestamp</span>()</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+----------------+-----------+----------------+---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> CURDATE()  <span class="operator">|</span> <span class="built_in">CURRENT_DATE</span>() <span class="operator">|</span> CURTIME() <span class="operator">|</span> <span class="built_in">CURRENT_TIME</span>() <span class="operator">|</span> NOW()               <span class="operator">|</span> <span class="built_in">current_timestamp</span>() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+----------------+-----------+----------------+---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span>     <span class="operator">|</span> <span class="number">6</span>:<span class="number">44</span>:<span class="number">49</span>   <span class="operator">|</span> <span class="number">6</span>:<span class="number">44</span>:<span class="number">49</span>        <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">06</span>:<span class="number">44</span>:<span class="number">49</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">06</span>:<span class="number">44</span>:<span class="number">49</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+----------------+-----------+----------------+---------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"># 也可以使用名称获取时间</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">current_timestamp</span>,<span class="built_in">CURRENT_DATE</span>,<span class="built_in">CURRENT_TIME</span>,<span class="built_in">localtime</span>,<span class="built_in">localtimestamp</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------+--------------+---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">current_timestamp</span>   <span class="operator">|</span> <span class="built_in">CURRENT_DATE</span> <span class="operator">|</span> <span class="built_in">CURRENT_TIME</span> <span class="operator">|</span> <span class="built_in">localtime</span>           <span class="operator">|</span> <span class="built_in">localtimestamp</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------+--------------+---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">11</span>:<span class="number">54</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span>   <span class="operator">|</span> <span class="number">7</span>:<span class="number">11</span>:<span class="number">54</span>      <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">11</span>:<span class="number">54</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">11</span>:<span class="number">54</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------+--------------+---------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"># 获得当前 UTC 日期时间函数，now()调用的是系统本地时间，因为我国位于东八时区，所以本地时间 <span class="operator">=</span> UTC 时间 <span class="operator">+</span> <span class="number">8</span> 小时</span><br><span class="line"><span class="keyword">select</span> utc_timestamp(), utc_date(), utc_time(),now();</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------+------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> utc_timestamp()     <span class="operator">|</span> utc_date() <span class="operator">|</span> utc_time() <span class="operator">|</span> now()               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------+------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">16</span>:<span class="number">43</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="operator">|</span> <span class="number">7</span>:<span class="number">16</span>:<span class="number">43</span>    <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">15</span>:<span class="number">16</span>:<span class="number">43</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------+------------+---------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>日期增加或减少</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">DATE_ADD(date,INTERVAL int keyword)</td><td style="text-align:left">返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH);</td></tr><tr><td style="text-align:left">DATE_SUB(date,INTERVAL int keyword)</td><td style="text-align:left">返回日期date减去间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH);</td></tr></tbody></table><blockquote><p>keyword: YEAR,MONTH,DAY,HOUR,MINUTE,SECOND,WEEK,QUARTER,MICROSECOND</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">YEAR</span>),DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">MONTH</span>),DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span>),DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">YEAR</span>),DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">MONTH</span>),DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">YEAR</span>) <span class="operator">|</span> DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">MONTH</span>) <span class="operator">|</span> DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span>) <span class="operator">|</span> DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">YEAR</span>) <span class="operator">|</span> DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">MONTH</span>) <span class="operator">|</span> DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2028</span><span class="number">-10</span><span class="number">-26</span>                             <span class="operator">|</span> <span class="number">2023</span><span class="number">-04</span><span class="number">-26</span>                              <span class="operator">|</span> <span class="number">2022</span><span class="number">-11</span><span class="number">-01</span>                            <span class="operator">|</span> <span class="number">2016</span><span class="number">-10</span><span class="number">-26</span>                             <span class="operator">|</span> <span class="number">2022</span><span class="number">-04</span><span class="number">-26</span>                              <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-20</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>两个日期比较</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">datediff(date1,date2)</td><td style="text-align:left">两个日期相减</td></tr><tr><td style="text-align:left">timediff(time1,time2)</td><td style="text-align:left">两个时间相减</td></tr><tr><td style="text-align:left">timestampdiff(unit,datetime1,datetime2)</td><td style="text-align:left">两个时间相差的unit声明的间隔</td></tr></tbody></table><blockquote><p>unit: year,month,day,hour,minute,second,week,QUARTER</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> datediff(<span class="string">&#x27;2022-08-08&#x27;</span>, <span class="string">&#x27;2022-08-01&#x27;</span>),timediff(<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>),timediff(<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-07 00:00:00&#x27;</span>),timediff(<span class="string">&#x27;08:08:0&#x27;</span>, <span class="string">&#x27;00:00:00&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> datediff(<span class="string">&#x27;2022-08-08&#x27;</span>, <span class="string">&#x27;2022-08-01&#x27;</span>) <span class="operator">|</span> timediff(<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class="operator">|</span> timediff(<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-07 00:00:00&#x27;</span>) <span class="operator">|</span> timediff(<span class="string">&#x27;08:08:0&#x27;</span>, <span class="string">&#x27;00:00:00&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>                                    <span class="operator">|</span> <span class="number">8</span>:<span class="number">08</span>:<span class="number">00</span>                                               <span class="operator">|</span> <span class="number">1</span> <span class="keyword">day</span>, <span class="number">8</span>:<span class="number">08</span>:<span class="number">00</span>                                        <span class="operator">|</span> <span class="number">8</span>:<span class="number">08</span>:<span class="number">00</span>                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> timestampdiff(<span class="keyword">year</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>),timestampdiff(<span class="keyword">month</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>),timestampdiff(<span class="keyword">day</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+------------------------------------------------+----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> timestampdiff(<span class="keyword">year</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>) <span class="operator">|</span> timestampdiff(<span class="keyword">month</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>) <span class="operator">|</span> timestampdiff(<span class="keyword">day</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+------------------------------------------------+----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">-1</span>                                            <span class="operator">|</span> <span class="number">-12</span>                                            <span class="operator">|</span> <span class="number">-365</span>                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+------------------------------------------------+----------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> timestampdiff(<span class="keyword">hour</span>,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>),timestampdiff(<span class="keyword">minute</span>,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>),timestampdiff(<span class="keyword">second</span>,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> timestampdiff(<span class="keyword">hour</span>,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class="operator">|</span> timestampdiff(<span class="keyword">minute</span>,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class="operator">|</span> timestampdiff(<span class="keyword">second</span>,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">-8</span>                                                              <span class="operator">|</span> <span class="number">-488</span>                                                              <span class="operator">|</span> <span class="number">-29280</span>                                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> timestampdiff(week,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-01 00:00:00&#x27;</span>),timestampdiff(QUARTER,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-05-01 00:00:00&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> timestampdiff(week,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-01 00:00:00&#x27;</span>) <span class="operator">|</span> timestampdiff(QUARTER,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-05-01 00:00:00&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">-1</span>                                                              <span class="operator">|</span> <span class="number">-1</span>                                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+--------------------------------------------------------------------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>日期或时间切割</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">DAYOFWEEK(date)</td><td style="text-align:left">返回date所代表的一星期中的第几天(1~7)</td></tr><tr><td style="text-align:left">DAYOFMONTH(date)或者DAY(date)</td><td style="text-align:left">返回date是一个月的第几天(1~31)</td></tr><tr><td style="text-align:left">DAYOFYEAR(date)</td><td style="text-align:left">返回date是一年的第几天(1~366)</td></tr><tr><td style="text-align:left">DAYNAME(date)</td><td style="text-align:left">返回date的星期名，如：SELECT DAYNAME(CURRENT_DATE);</td></tr><tr><td style="text-align:left">MONTHNAME(date)</td><td style="text-align:left">返回date的月份名，如：SELECT MONTHNAME(CURRENT_DATE);</td></tr><tr><td style="text-align:left">QUARTER(date)</td><td style="text-align:left">返回date在一年中的季度(1~4)，如SELECT QUARTER(CURRENT_DATE);</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>(),DAYOFWEEK(<span class="built_in">CURRENT_DATE</span>),DAYOFMONTH(<span class="built_in">CURRENT_DATE</span>),DAYOFYEAR(<span class="built_in">CURRENT_DATE</span>),DAYNAME(<span class="built_in">CURRENT_DATE</span>),QUARTER(<span class="built_in">CURRENT_DATE</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">CURRENT_DATE</span>() <span class="operator">|</span> DAYOFWEEK(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> DAYOFMONTH(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> DAYOFYEAR(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> DAYNAME(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> QUARTER(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span>     <span class="operator">|</span> <span class="number">4</span>                       <span class="operator">|</span> <span class="number">26</span>                       <span class="operator">|</span> <span class="number">299</span>                     <span class="operator">|</span> Wednesday             <span class="operator">|</span> <span class="number">4</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">WEEK(date)或weekofyear(date)</td><td style="text-align:left">返回日期date为一年中第几周(0~53)</td></tr><tr><td style="text-align:left">YEAR(date)</td><td style="text-align:left">返回日期date的年份(1000~9999)</td></tr><tr><td style="text-align:left">MONTH(date)</td><td style="text-align:left">返回date的月份值(1~12)</td></tr><tr><td style="text-align:left">DAY(date)</td><td style="text-align:left">返回date是一个月的第几天(1~31)</td></tr><tr><td style="text-align:left">dayofweek(date)</td><td style="text-align:left">返回date是一周的第几天(1~7)，（1 = Sunday, 2 = Monday, …, 7 = Saturday）</td></tr><tr><td style="text-align:left">weekday()</td><td style="text-align:left">返回date是一周的第几天(0~6)，(0 = Monday, 1 = Tuesday, …, 6 = Sunday)</td></tr><tr><td style="text-align:left">HOUR(time)</td><td style="text-align:left">返回time的小时值(0~23)</td></tr><tr><td style="text-align:left">MINUTE(time)</td><td style="text-align:left">返回time的分钟值(0~59)</td></tr><tr><td style="text-align:left">SECOND(time)</td><td style="text-align:left">返回time的秒数值(0~59)</td></tr><tr><td style="text-align:left">microsecond(time)</td><td style="text-align:left">返回微秒</td></tr><tr><td style="text-align:left">LAST_DAY(date)</td><td style="text-align:left">返回date所属月份的最后一天</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> now(),WEEK(<span class="built_in">CURRENT_DATE</span>),<span class="keyword">YEAR</span>(<span class="built_in">CURRENT_DATE</span>),<span class="keyword">MONTH</span>(<span class="built_in">CURRENT_DATE</span>),<span class="keyword">DAY</span>(<span class="built_in">CURRENT_DATE</span>),<span class="keyword">HOUR</span>(<span class="built_in">CURRENT_TIME</span>),<span class="keyword">MINUTE</span>(<span class="built_in">CURRENT_TIME</span>),<span class="keyword">SECOND</span>(<span class="built_in">CURRENT_TIME</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span> WEEK(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> <span class="keyword">YEAR</span>(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> <span class="keyword">MONTH</span>(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> <span class="keyword">DAY</span>(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> <span class="keyword">HOUR</span>(<span class="built_in">CURRENT_TIME</span>) <span class="operator">|</span> <span class="keyword">MINUTE</span>(<span class="built_in">CURRENT_TIME</span>) <span class="operator">|</span> <span class="keyword">SECOND</span>(<span class="built_in">CURRENT_TIME</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">31</span>:<span class="number">03</span> <span class="operator">|</span> <span class="number">43</span>                 <span class="operator">|</span> <span class="number">2022</span>               <span class="operator">|</span> <span class="number">10</span>                  <span class="operator">|</span> <span class="number">26</span>                <span class="operator">|</span> <span class="number">7</span>                  <span class="operator">|</span> <span class="number">31</span>                   <span class="operator">|</span> <span class="number">3</span>                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> microsecond(<span class="string">&#x27;2022-10-22 07:15:30.123456&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> microsecond(<span class="string">&#x27;2022-10-22 07:15:30.123456&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">123456</span>                                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> MONTHNAME(<span class="built_in">CURRENT_DATE</span>),DAYNAME(<span class="built_in">CURRENT_DATE</span>),LAST_DAY(<span class="built_in">CURRENT_DATE</span>),LAST_DAY(<span class="string">&#x27;2022-02-01&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+-----------------------+------------------------+------------------------+</span></span><br><span class="line"><span class="operator">|</span> MONTHNAME(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> DAYNAME(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> LAST_DAY(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> LAST_DAY(<span class="string">&#x27;2022-02-01&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+-----------------------+------------------------+------------------------+</span></span><br><span class="line"><span class="operator">|</span> October                 <span class="operator">|</span> Wednesday             <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-31</span>             <span class="operator">|</span> <span class="number">2022</span><span class="number">-02</span><span class="number">-28</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+-----------------------+------------------------+------------------------+</span></span><br><span class="line"></span><br><span class="line"># 返回当前月份有多少天</span><br><span class="line"><span class="keyword">select</span> now(), <span class="keyword">day</span>(last_day(now())) <span class="keyword">as</span> days;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span> days <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">34</span>:<span class="number">22</span> <span class="operator">|</span> <span class="number">31</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+</span></span><br><span class="line"></span><br><span class="line"># 返回当天是一周中的第几天，注意dayofweek与weekday的区别</span><br><span class="line"><span class="keyword">select</span> now(),dayofweek(now()),weekday(now()),DAYNAME(now())</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------------+----------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span> dayofweek(now()) <span class="operator">|</span> weekday(now()) <span class="operator">|</span> DAYNAME(now()) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------------+----------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">48</span>:<span class="number">48</span> <span class="operator">|</span> <span class="number">4</span>                <span class="operator">|</span> <span class="number">2</span>              <span class="operator">|</span> Wednesday      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------------+----------------+----------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>日期和时间的格式化</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">DATE_FORMAT(date,fmt)</td><td style="text-align:left">依照指定的fmt格式格式化日期date值</td></tr><tr><td style="text-align:left">TIME_FORMAT(time,fmt)</td><td style="text-align:left">依照字符串fmt格式化时间time值</td></tr><tr><td style="text-align:left">STR_TO_DATE(str, fmt)</td><td style="text-align:left">将某种格式的日期字符串转换为标准格式 %Y-%m-%d %H:%i:%s</td></tr><tr><td style="text-align:left">unix_timestamp()</td><td style="text-align:left">获取当前日期的unix时间戳</td></tr><tr><td style="text-align:left">unix_timestamp(date)</td><td style="text-align:left">获取指定日期的unix时间戳</td></tr><tr><td style="text-align:left">FROM_UNIXTIME(ts)</td><td style="text-align:left">使用标准格式 %Y-%m-%d %H:%i:%s格式化UNIX时间戳ts</td></tr><tr><td style="text-align:left">FROM_UNIXTIME(ts,fmt)</td><td style="text-align:left">根据指定的fmt格式，格式化UNIX时间戳ts</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> DATE_FORMAT(now(),<span class="string">&#x27;%Y/%m/%d %H:%i:%s&#x27;</span>),DATE_FORMAT(<span class="string">&#x27;2022-10-22&#x27;</span>,<span class="string">&#x27;%Y年%m月%d日&#x27;</span>),TIME_FORMAT(<span class="string">&#x27;12:23:24&#x27;</span>,<span class="string">&#x27;%H_%i_%s&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+------------------------------------------+------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> DATE_FORMAT(now(),<span class="string">&#x27;%Y/%m/%d %H:%i:%s&#x27;</span>) <span class="operator">|</span> DATE_FORMAT(<span class="string">&#x27;2022-10-22&#x27;</span>,<span class="string">&#x27;%Y年%m月%d日&#x27;</span>) <span class="operator">|</span> TIME_FORMAT(<span class="string">&#x27;12:23:24&#x27;</span>,<span class="string">&#x27;%H_%i_%s&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+------------------------------------------+------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="operator">/</span><span class="number">10</span><span class="operator">/</span><span class="number">26</span> <span class="number">10</span>:<span class="number">03</span>:<span class="number">00</span>                    <span class="operator">|</span> <span class="number">2022</span>年<span class="number">10</span>月<span class="number">22</span>日                           <span class="operator">|</span> <span class="number">12</span>_23_24                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+------------------------------------------+------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> STR_TO_DATE(<span class="string">&#x27;08/09/2022&#x27;</span>, <span class="string">&#x27;%m/%d/%Y&#x27;</span>),str_to_date(<span class="string">&#x27;08.09.2022 08:09:30&#x27;</span>, <span class="string">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+---------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> STR_TO_DATE(<span class="string">&#x27;08/09/2022&#x27;</span>, <span class="string">&#x27;%m/%d/%Y&#x27;</span>) <span class="operator">|</span> str_to_date(<span class="string">&#x27;08.09.2022 08:09:30&#x27;</span>, <span class="string">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+---------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-08</span><span class="number">-09</span>                            <span class="operator">|</span> <span class="number">2022</span><span class="number">-08</span><span class="number">-09</span> <span class="number">08</span>:<span class="number">09</span>:<span class="number">30</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+---------------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> unix_timestamp(),unix_timestamp(now()),unix_timestamp(<span class="string">&#x27;2022-08-09 08:09:30&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> unix_timestamp() <span class="operator">|</span> unix_timestamp(now()) <span class="operator">|</span> unix_timestamp(<span class="string">&#x27;2022-08-09 08:09:30&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1666773064</span>       <span class="operator">|</span> <span class="number">1666773064</span>            <span class="operator">|</span> <span class="number">1660032570</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------------------+---------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> FROM_UNIXTIME(<span class="number">1666773064</span>),FROM_UNIXTIME(<span class="number">1666773064</span>,<span class="string">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> FROM_UNIXTIME(<span class="number">1666773064</span>) <span class="operator">|</span> FROM_UNIXTIME(<span class="number">1666773064</span>,<span class="string">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">08</span>:<span class="number">31</span>:<span class="number">04</span>       <span class="operator">|</span> <span class="number">10.26</span><span class="number">.2022</span> <span class="number">08</span>:<span class="number">31</span>:<span class="number">04</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-----------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>时区转换</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">convert_tz(date,from_timezone,to_timezone)</td><td style="text-align:left">将date从from_timezone转换为to_timezone</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> convert_tz(<span class="string">&#x27;2022-08-08 12:00:00&#x27;</span>, <span class="string">&#x27;+08:00&#x27;</span>, <span class="string">&#x27;+00:00&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> convert_tz(<span class="string">&#x27;2022-08-08 12:00:00&#x27;</span>, <span class="string">&#x27;+08:00&#x27;</span>, <span class="string">&#x27;+00:00&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span> <span class="number">04</span>:<span class="number">00</span>:<span class="number">00</span>                                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="加密函数">加密函数</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">AES_ENCRYPT(str,key)</td><td style="text-align:left">返回用密钥key对字符串str利用高级加密标准算法加密后的结果，调用AES_ENCRYPT的结果是一个二进制字符串，以BLOB类型存储</td></tr><tr><td style="text-align:left">AES_DECRYPT(str,key)</td><td style="text-align:left">返回用密钥key对字符串str利用高级加密标准算法解密后的结果</td></tr><tr><td style="text-align:left">MD5()</td><td style="text-align:left">计算字符串str的MD5校验和</td></tr><tr><td style="text-align:left">SHA()</td><td style="text-align:left">计算字符串str的安全散列算法(SHA)校验和</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> AES_ENCRYPT(<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>),AES_DECRYPT(AES_ENCRYPT(<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>),<span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------+------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> AES_ENCRYPT(<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>)        <span class="operator">|</span> AES_DECRYPT(AES_ENCRYPT(<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>),<span class="string">&#x27;abc&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------+------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0xe46cef3cb055471402ea4dfb7249cb32</span> <span class="operator">|</span> <span class="number">123456</span>                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------+------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 不可逆</span><br><span class="line"><span class="keyword">select</span> MD5(<span class="string">&#x27;123456&#x27;</span>),SHA(<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> MD5(<span class="string">&#x27;123456&#x27;</span>)                    <span class="operator">|</span> SHA(<span class="string">&#x27;123456&#x27;</span>)                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="operator">|</span> <span class="number">7</span>c4a8d09ca3762af61e59520943dc26494f8941b <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+------------------------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="其它函数">其它函数</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">INET_ATON(ip)</td><td style="text-align:left">返回IP地址的数字表示</td></tr><tr><td style="text-align:left">INET_NTOA(num)</td><td style="text-align:left">返回数字所代表的IP地址</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> INET_ATON(<span class="string">&#x27;10.122.89.47&#x27;</span>),INET_NTOA(<span class="number">175790383</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> INET_ATON(<span class="string">&#x27;10.122.89.47&#x27;</span>) <span class="operator">|</span> INET_NTOA(<span class="number">175790383</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">175790383</span>                 <span class="operator">|</span> <span class="number">10.122</span><span class="number">.89</span><span class="number">.47</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+----------------------+</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;sql语句与常用函数介绍&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;，&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySql一些有用的知识点[2]</title>
    <link href="https://blog.hanqunfeng.com/2022/10/14/mysql-senior-command2/"/>
    <id>https://blog.hanqunfeng.com/2022/10/14/mysql-senior-command2/</id>
    <published>2022-10-14T13:30:05.000Z</published>
    <updated>2022-10-14T04:11:25.488Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++ --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>MySql知识点介绍: binlog相关、事务及其ACID属性、并发事务处理带来的问题、事务隔离级别、MVCC多版本并发控制机制、InnoDB Buffer Pool、MyISAM Key Buffer、InnoDB记录存储结构和索引页结构、InnoDB表空间(TableSpace)、InnoDB元数据表、redo log 和 undo log、数据库锁、慢查询，等等</p></li><li class="lvl-2"><p>本文基于<code>mysql-8.0.30</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/">https://dev.mysql.com/doc/refman/8.0/en/</a></p></li></ul><span id="more"></span><h2 id="binlog相关">binlog相关</h2><p>MySQL的二进制日志binlog可以说是MySQL最重要的日志，它记录了所有的DDL和DML语句（除了数据查询语句select）,其以事件形式记录，还包含语句所执行的消耗的时间，MySQL的二进制日志是事务安全型的，所以binlog内记录的是事务提交成功后的内容。</p><ul class="lvl-0"><li class="lvl-2"><p>查看binlog状态</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># 查看bin‐log是否开启</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%log_bin%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+----------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                   <span class="operator">|</span> <span class="keyword">Value</span>                                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+----------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> log_bin                         <span class="operator">|</span> <span class="keyword">ON</span>                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_basename                <span class="operator">|</span> <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>soft<span class="operator">/</span>mysql8<span class="operator">/</span>datas<span class="operator">/</span>mysql<span class="operator">/</span>mysql<span class="operator">-</span>bin       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_index                   <span class="operator">|</span> <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>soft<span class="operator">/</span>mysql8<span class="operator">/</span>datas<span class="operator">/</span>mysql<span class="operator">/</span>mysql<span class="operator">-</span>bin.index <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_trust_function_creators <span class="operator">|</span> OFF                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_use_v1_row_events       <span class="operator">|</span> OFF                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sql_log_bin                     <span class="operator">|</span> <span class="keyword">ON</span>                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+----------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 查看最后一个bin‐log日志的相关信息</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> master status;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> File             <span class="operator">|</span> Position <span class="operator">|</span> Binlog_Do_DB <span class="operator">|</span> Binlog_Ignore_DB <span class="operator">|</span> Executed_Gtid_Set <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000012</span> <span class="operator">|</span>   <span class="number">138605</span> <span class="operator">|</span>              <span class="operator">|</span>                  <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"></span><br><span class="line"># 会多一个最新的bin‐log日志</span><br><span class="line">mysql<span class="operator">&gt;</span> flush logs;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> master status;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> File             <span class="operator">|</span> Position <span class="operator">|</span> Binlog_Do_DB <span class="operator">|</span> Binlog_Ignore_DB <span class="operator">|</span> Executed_Gtid_Set <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000013</span> <span class="operator">|</span>      <span class="number">157</span> <span class="operator">|</span>              <span class="operator">|</span>                  <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"># 清空所有的bin‐log日志</span><br><span class="line">mysql<span class="operator">&gt;</span> reset master;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> master status;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> File             <span class="operator">|</span> Position <span class="operator">|</span> Binlog_Do_DB <span class="operator">|</span> Binlog_Ignore_DB <span class="operator">|</span> Executed_Gtid_Set <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000001</span> <span class="operator">|</span>      <span class="number">157</span> <span class="operator">|</span>              <span class="operator">|</span>                  <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>binlog数据恢复</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看binlog日志，重点关注<span class="keyword">begin</span>和<span class="keyword">commit</span>之间的内容，</span><br><span class="line">mysqlbinlog ‐‐<span class="keyword">no</span>‐defaults <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>soft<span class="operator">/</span>mysql8<span class="operator">/</span>datas<span class="operator">/</span>mysql<span class="operator">/</span>mysql<span class="operator">-</span>bin<span class="number">.000001</span></span><br></pre></td></tr></table></figure><blockquote><p>如下为查看binlog日志的内容片段，<code>end_log_pos</code>后面的就是Position的值</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 311</span></span><br><span class="line"><span class="comment">#220928  8:22:15 server id 3306  end_log_pos 367 CRC32 0x4f3bcf2a Table_map: `test`.`film` mapped to number 186</span></span><br><span class="line"><span class="comment"># at 367</span></span><br><span class="line"><span class="comment">#220928  8:22:15 server id 3306  end_log_pos 412 CRC32 0x3fc87530 Write_rows: table id 186 flags: STMT_END_F</span></span><br><span class="line"></span><br><span class="line">BINLOG <span class="string">&#x27;</span></span><br><span class="line"><span class="string">NwQ0YxPqDAAAOAAAAG8BAAAAALoAAAAAAAEABHRlc3QABGZpbG0AAgMPAh4AAgEBAAIBISrPO08=</span></span><br><span class="line"><span class="string">NwQ0Yx7qDAAALQAAAJwBAAAAALoAAAAAAAEAAgAC/wAEAAAABHRlc3Qwdcg/</span></span><br><span class="line"><span class="string">&#x27;</span>/*!*/;</span><br><span class="line"><span class="comment"># at 412</span></span><br><span class="line"><span class="comment">#220928  8:22:15 server id 3306  end_log_pos 443 CRC32 0x0712832c Xid = 17662</span></span><br><span class="line">COMMIT/*!*/;</span><br></pre></td></tr></table></figure><blockquote><p>常用的恢复方法</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 恢复全部数据</span><br><span class="line">mysqlbinlog ‐‐<span class="keyword">no</span>‐defaults mysql‐bin<span class="number">.000001</span> <span class="operator">|</span> mysql ‐uroot ‐p test(数据库名)</span><br><span class="line"></span><br><span class="line"># 恢复指定位置数据</span><br><span class="line">mysqlbinlog ‐‐<span class="keyword">no</span>‐defaults ‐‐<span class="keyword">start</span>‐position<span class="operator">=</span>&quot;367&quot; ‐‐stop‐position<span class="operator">=</span>&quot;443&quot; mysql‐bin<span class="number">.000001</span> <span class="operator">|</span> mysql ‐uroot ‐p test(数据库)</span><br><span class="line"></span><br><span class="line"># 恢复指定时间段数据</span><br><span class="line">mysqlbinlog ‐‐<span class="keyword">no</span>‐defaults ‐‐stop‐<span class="type">date</span><span class="operator">=</span> &quot;2022‐09‐28 08:22:15&quot; ‐‐<span class="keyword">start</span>‐<span class="type">date</span><span class="operator">=</span> &quot;2022‐09‐28 08:22:15&quot; mysql‐bin<span class="number">.000001</span> <span class="operator">|</span> mysql ‐uroot ‐p test(数据库)</span><br></pre></td></tr></table></figure><h2 id="事务及其ACID属性">事务及其ACID属性</h2><p>事务是由一组SQL语句组成的逻辑处理单元,事务具有以下4个属性,通常简称为事务的ACID属性。</p><ul class="lvl-0"><li class="lvl-2"><p>原子性(Atomicity) ：事务是一个原子操作单元,其对数据的修改,要么全都执行,要么全都不执行。</p></li><li class="lvl-2"><p>一致性(Consistent) ：指的是数据库总是从一个一致性的状态转换到另外一个一致性的状态。在事务开始和完成时,数据都必须保持一致状态。这意味着所有相关的数据规则都必须应用于事务的修改,以保持数据的完整性。事务内查询的数据在当前事务内必须保持一致而不会受到其它事务对数据修改的影响。</p></li><li class="lvl-2"><p>隔离性(Isolation) ：数据库系统提供一定的隔离机制,保证事务在不受外部并发操作影响的“独立”环境执行。这意味着事务处理过程中的中间状态对外部是不可见的,反之亦然。</p></li><li class="lvl-2"><p>持久性(Durable) ：事务完成之后,它对于数据的修改是永久性的,即使出现系统故障也能够保持。</p></li></ul><div class="tips"><p><strong>提示</strong><br>总的来说，MySQL中事务的原子性是通过<code>undo log</code>来实现的，事务的持久性性是通过<code>redo log</code>来实现的，事务的隔离性是通过<code>读写锁+MVCC</code>来实现的。事务的一致性通过原子性、隔离性、持久性来保证。</p><p>也就是说 ACID 四大特性之中，C(一致性)是目的，A(原子性)、I(隔离性)、D(持久性)是手段，是为了保证一致性，数据库提供的手段。数据库必须要实现 AID 三大特性，才有可能实现一致性。</p><p>同时一致性也需要应用程序的支持，应用程序在事务里故意写出违反约束的代码，一致性还是无法保证的，例如，转账代码里从 A 账户扣钱而不给 B 账户加钱，那一致性还是无法保证。</p><p>在事务的具体实现机制上，MySQL采用的是<code>WAL(Write-ahead logging，预写式日志)</code>机制来实现的。这也是是当今的主流方案。</p><p>在使用 WAL 的系统中，所有的修改都先被写入到日志中，然后再被应用到系统中。通常包含 redo 和 undo 两部分信息。关于redo日志 和 undo日志，下文有介绍。</p></div><ul class="lvl-0"><li class="lvl-2"><p>开启只读事务：<code>START TRANSACTION READ ONLY</code></p><ul class="lvl-2"><li class="lvl-4">在只读事务中不可以对普通的表（其他事务也能访问到的表）进行增、删、改操作，但可以对用户临时表做增、删、改操作。</li><li class="lvl-4">对于只读事务来说，只有在它第一次对某个用户创建的临时表<code>CREATE TEMPORARY TABLE</code>执行增、删、改操作时才会为这个事务分配一个事务id，否则的话是不分配事务id。</li></ul></li><li class="lvl-2"><p>开启读写事务：<code>START TRANSACTION READ WRITE</code>或者 <code>BEGIN</code>、<code>START TRANSACTION</code></p><ul class="lvl-2"><li class="lvl-4">在读写事务中可以对表执行增删改查操作。</li><li class="lvl-4">对于读写事务来说，只有在它第一次对某个表（包括用户创建的临时表）执行增、删、改操作时才会为这个事务分配一个事务id，否则的话也是不分配事务id的</li><li class="lvl-4">有的时候虽然我们开启了一个读写事务，但是在这个事务中全是查询语句，并没有执行增、删、改的语句，那也就意味着这个事务并不会被分配一个事务id</li></ul></li></ul><div class="tips"><p><strong>事务Id分配策略</strong><br>服务器会在内存中维护一个全局变量，每当需要为某个事务分配一个事务id时，就会把该变量的值当作事务id分配给该事务，并且把该变量自增 1。<br>每当这个变量的值为 256 的倍数时，就会将该变量的值刷新到系统表空间的页号为 5 的页面中一个称之为 Max Trx ID 的属性处，这个属性占用 8 个字节的存储空间。<br>当系统下一次重新启动时，会将上边提到的 Max Trx ID 属性加载到内存中，将该值加上 256 之后赋值给我们前边提到的全局变量（因为在上次关机时该全局变量的值可能大于 Max Trx ID 属性值）。<br>这样就可以保证整个系统中分配的事务id值是一个递增的数字。先被分配id的事务得到的是较小的事务id，后被分配id的事务得到的是较大的事务id。</p></div><h2 id="并发事务处理带来的问题">并发事务处理带来的问题</h2><ul class="lvl-0"><li class="lvl-2"><p>更新丢失(Lost Update)或脏写</p></li></ul><blockquote><p>当两个或多个事务选择同一行，然后基于最初选定的值更新该行时，由于每个事务都不知道其他事务的存在，就会发生丢失更新问题–最后的更新覆盖了由其他事务所做的更新。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>脏读（Dirty Reads）</p></li></ul><blockquote><p>一个事务正在对一条记录做修改，在这个事务完成并提交前，这条记录的数据就处于不一致的状态；<br>这时，另一个事务也来读取同一条记录，如果不加控制，第二个事务读取了这些“脏”数据，并据此作进一步的处理，就会产生未提交的数据依赖关系。这种现象被形象的叫做“脏读”。<br>一句话：事务A读取到了事务B已经修改但尚未提交的数据，还在这个数据基础上做了操作。此时，如果B事务回滚，A读取的数据无效，不符合一致性要求。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>不可重读（Non-Repeatable Reads）</p></li></ul><blockquote><p>一个事务在读取某些数据后的某个时间，再次读取以前读过的数据，却发现其读出的数据已经发生了改变、或某些记录已经被删除了！这种现象就叫做“不可重复读”。<br>一句话：事务A内部的相同查询语句在不同时刻读出的结果不一致，不符合隔离性</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>幻读（Phantom Reads）</p></li></ul><blockquote><p>一个事务按相同的查询条件重新读取以前检索过的数据，却发现其他事务插入了满足其查询条件的新数据，这种现象就称为“幻读”。<br>一句话：事务A读取到了事务B提交的新增数据，不符合隔离性</p></blockquote><h2 id="事务隔离级别">事务隔离级别</h2><ul class="lvl-0"><li class="lvl-2"><p><code>脏读</code>、<code>不可重复读</code>和<code>幻读</code>,其实都是数据库读一致性问题,必须由数据库提供一定的事务隔离机制来解决。</p></li></ul><table><thead><tr><th style="text-align:left">隔离级别</th><th style="text-align:left">脏读</th><th style="text-align:left">不可重复读</th><th style="text-align:left">幻读</th></tr></thead><tbody><tr><td style="text-align:left">读未提交(READ-UNCOMMITTED)</td><td style="text-align:left">可能</td><td style="text-align:left">可能</td><td style="text-align:left">可能</td></tr><tr><td style="text-align:left">读已提交(READ-COMMITTED)</td><td style="text-align:left">不可能</td><td style="text-align:left">可能</td><td style="text-align:left">可能</td></tr><tr><td style="text-align:left">可重复读(REPEATABLE-READ)</td><td style="text-align:left">不可能</td><td style="text-align:left">不可能</td><td style="text-align:left">可能</td></tr><tr><td style="text-align:left">可串行化(SERIALIZABLE)</td><td style="text-align:left">不可能</td><td style="text-align:left">不可能</td><td style="text-align:left">不可能</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>数据库的事务隔离越严格,并发副作用越小,但付出的代价也就越大,因为事务隔离实质上就是使事务在一定程度上“串行化”进行,这显然与“并发”是矛盾的。</p></li><li class="lvl-2"><p>不同的应用对读一致性和事务隔离程度的要求也是不同的,比如许多应用对“不可重复读&quot;和“幻读”并不敏感,可能更关心数据并发访问的能力。</p></li><li class="lvl-2"><p>Mysql默认的事务隔离级别是<code>可重复读(REPEATABLE-READ)</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前数据库的事务隔离级别，mysql8之前使用`tx_isolation`</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;transaction_isolation&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name         <span class="operator">|</span> <span class="keyword">Value</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> transaction_isolation <span class="operator">|</span> REPEATABLE<span class="operator">-</span>READ <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+----------------+</span></span><br><span class="line"># 设置事务隔离级别</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> transaction_isolation<span class="operator">=</span><span class="string">&#x27;READ-COMMITTED&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="MVCC多版本并发控制机制">MVCC多版本并发控制机制</h2><ul class="lvl-0"><li class="lvl-2"><p>Mysql在读已提交和可重复读隔离级别下都实现了MVCC机制</p></li><li class="lvl-2"><p>保证了事务的隔离性</p></li><li class="lvl-2"><p>MVCC机制的实现就是通过read-view机制与undo版本链比对机制，使得不同的事务会根据数据版本链对比规则读取同一条数据在版本链上的不同版本数据。</p></li></ul><h3 id="undo日志版本链">undo日志版本链</h3><p>undo日志版本链是指一行数据被多个事务依次修改过后，在每个事务修改完后，Mysql会保留修改前的数据undo回滚日志，并且用两个隐藏字段trx_id和roll_pointer把这些undo日志串联起来形成一个历史记录版本链</p><h3 id="read-view">read-view</h3><p>在可重复读隔离级别，当事务开启，执行任何查询sql时会生成当前事务的一致性视图read-view，该视图在事务结束之前都不会变化(如果是读已提交隔离级别在每次执行查询sql时都会重新生成)，这个视图由执行查询时所有未提交事务id数组（数组里最小的id为min_id）和已创建的最大事务id（max_id）组成，事务里的任何sql查询结果需要从对应版本链里的最新数据开始逐条跟read-view做比对从而得到最终的快照结果。</p><blockquote><p>注意：begin/start transaction 命令并不是一个事务的起点，在执行到它们之后的第一个修改操作InnoDB表的语句， 事务才真正启动，才会向mysql申请事务id，mysql内部是严格按照事务的启动顺序来分配事务id的。</p></blockquote><h3 id="版本链比对规则">版本链比对规则</h3><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/mvcc.png" alt="" width="900" height="600"></p><ul class="lvl-0"><li class="lvl-2"><ol><li class="lvl-5">如果查询结果中row的 trx_id&lt;min_id，表示这个版本是已提交的事务生成的，这个数据是可见的</li></ol></li><li class="lvl-2"><ol start="2"><li class="lvl-5">如果查询结果中row的 trx_id&gt;max_id，表示这个版本是由将来启动的事务生成的，是不可见的(若 row 的 trx_id 就是当前自己的事务是可见的）</li></ol></li><li class="lvl-2"><ol start="3"><li class="lvl-5">如果查询结果中row的 min_id &lt;=trx_id&lt;= max_id，那就包括两种情况</li></ol></li></ul><blockquote><p>a. 若 row 的 trx_id 在read-view视图数组中，表示这个版本是由还没提交的事务生成的，不可见(若 row 的 trx_id 就是当前自己的事务是可见的)；<br>b. 若 row 的 trx_id 不在read-view视图数组中，表示这个版本是已经提交了的事务生成的，可见。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><ol start="4"><li class="lvl-5">对于删除的情况可以认为是update的特殊情况，会将版本链上最新的数据复制一份，然后将trx_id修改成删除操作的 trx_id，同时在该条记录的头信息（record header）里的（deleted_flag）标记位写上true，来表示当前记录已经被删除，在查询时按照上面的规则查到对应的记录如果delete_flag标记位为true，意味着记录已被删除，则不返回数据。</li></ol></li></ul><h2 id="InnoDB-Buffer-Pool">InnoDB Buffer Pool</h2><ul class="lvl-0"><li class="lvl-2"><p>InnoDB为了缓存磁盘中的页，在MySQL服务器启动的时候就向操作系统申请了一片连续的内存，这片内存叫做Buffer Pool（中文名是缓冲池）,默认情况下Buffer Pool只有128M大小。</p></li><li class="lvl-2"><p><code>innodb_buffer_pool_size</code>规定了系统将多少内存用作InnoDB的索引缓存</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 查看buffer pool设置大小，推荐设置为内存的<span class="number">60</span><span class="operator">%</span>，最大不要超过<span class="number">75</span><span class="operator">%</span>，比如这里设置了<span class="number">1</span>G，单位是字节</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_buffer_pool_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name           <span class="operator">|</span> <span class="keyword">Value</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+------------+</span></span><br><span class="line"><span class="operator">|</span> innodb_buffer_pool_size <span class="operator">|</span> <span class="number">1073741824</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Buffer Pool中默认的缓存页大小和在磁盘上默认的页大小是一样的，都是16KB。</p></li><li class="lvl-2"><p>为了更好的管理这些在Buffer Pool中的缓存页，InnoDB为每一个缓存页都创建了一些所谓的控制信息，这些控制信息包括该页所属的表空间编号、页号、缓存页在Buffer Pool中的地址、链表节点信息、一些锁信息以及LSN信息，当然还有一些别的控制信息。</p></li><li class="lvl-2"><p>每个缓存页对应的控制信息占用的内存大小是相同的，我们称为控制块。控制块和缓存页是一一对应的，它们都被存放到 Buffer Pool 中，Buffer Pool的初始化过程，就是把申请到的Buffer Pool的内存空间划分成若干对控制块和缓存页的过程。其中控制块被存放到 Buffer Pool 的前边，缓存页被存放到 Buffer Pool 后边<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/buffer_pool.png" alt="" width="600" height="100"></p></li><li class="lvl-2"><p><code>free</code>链表：与空闲的缓存页一一对应的控制块会组成一个<code>free</code>链表，用于表示哪些缓冲页可用，每当需要从磁盘中加载一个页到Buffer Pool中时，就从free链表中取一个空闲的缓存页，并且把该缓存页对应的控制块的信息填上（就是该页所在的表空间、页号之类的信息），然后把该缓存页对应的free链表节点从链表中移除，表示该缓存页已经被使用了。<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/free.png" alt="" width="600" height="270"></p></li></ul><div class="note success"><ul class="lvl-0"><li class="lvl-2"><p>缓存页的哈希处理</p><ul class="lvl-2"><li class="lvl-4">当我们需要访问某个页中的数据时，就会把该页从磁盘加载到Buffer Pool中，如果该页已经在Buffer Pool中的话直接使用就可以了。</li><li class="lvl-4">那么问题也就来了，我们怎么知道该页在不在Buffer Pool中呢？难不成需要依次遍历Buffer Pool中各个缓存页么？</li><li class="lvl-4">可以用<code>表空间号 + 页号</code>作为key，<code>缓存页</code>作为value创建一个哈希表，在需要访问某个页的数据时，先从哈希表中根据表<code>空间号 + 页号</code>看看有没有对应的缓存页，如果有，直接使用该缓存页就好，如果没有，那就从free链表中选一个空闲的缓存页，然后把 磁盘中对应的页加载到该缓存页的位置。</li></ul></li></ul></div><ul class="lvl-0"><li class="lvl-2"><p><code>flush</code>链表：因为频繁的往磁盘中写数据会严重的影响程序的性能，所以并不是修改了某个页面的数据就立刻刷新到磁盘上，凡是修改过的缓存页对应的控制块都会作为一个节点加入到一个链表中，因为这个链表节点对应的缓存页都是需要在未来某个时间被刷新到磁盘上的，所以也叫flush链表。链表的构造和free链表差不多。</p></li><li class="lvl-2"><p><code>LRU</code>链表：Buffer Pool没有多于的空间时，需要基于LRU算法将旧的缓存页从Buffer Pool中移除，然后再把新的页放进来。当我们需要访问某个页时，如果该页不在Buffer Pool中，在把该页从磁盘加载到Buffer Pool中的缓存页时，就把该缓存页对应的控制块作为节点塞到LRU链表的头部。如果该页已经缓存在Buffer Pool中，则直接把该页对应的控制块移动到LRU链表的头部。所以当Buffer Pool中的空闲缓存页使用完时，到LRU链表的尾部找些缓存页淘汰就行了。</p><div class="note success"><ul class="lvl-0"><li class="lvl-2"><p>实际上LRU链表的规则并不是这么简单，因为mysql支持预读，即读取一个数据页时会同时读取其附近的多个页面（这些页可能用不到），或者执行了大表的扫描全表的查询语句（使用频率偏低），这样就有可能淘汰掉Buffer Pool中那些高频访问的页。</p></li><li class="lvl-2"><p>解决方法是把这个LRU链表按照一定比例分成两截</p><ul class="lvl-2"><li class="lvl-4">一部分存储使用频率非常高的缓存页，所以这一部分链表也叫做热数据，或者称young区域。</li><li class="lvl-4">另一部分存储使用频率不是很高的缓存页，所以这一部分链表也叫做冷数据，或者称old区域。</li><li class="lvl-4">可以通过查看系统变量<code>innodb_old_blocks_pct</code>的值来确定old区域在LRU链表中所占的比例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;innodb_old_blocks_pct&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name         <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_old_blocks_pct <span class="operator">|</span> <span class="number">37</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------+</span></span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>InnoDB规定，当磁盘上的某个页面在初次加载到Buffer Pool中的某个缓存页时，该缓存页对应的控制块会被放到old区域的头部，该缓存页再次被访问到时才会把该页放到young区域的头部，前提是这两次访问的时间间隔大于系统变量<code>innodb_old_blocks_time</code>设置的时间间隔，默认1000毫秒</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;innodb_old_blocks_time&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name          <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_old_blocks_time <span class="operator">|</span> <span class="number">1000</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">对于young区域的缓存页来说，我们每次访问一个缓存页就要把它移动到LRU链表的头部，这样频繁的对LRU链表进行节点移动操作也会拖慢速度？为了解决这个问题，MySQL规定只有被访问的缓存页位于young区域的1/4的后边，才会被移动到LRU链表头部，这样就 可以降低调整LRU链表的频率，从而提升性能。</li></ul></div><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/lru.png" alt="" width="600" height="100"></p></li></ul><div class="note success"><p><strong>刷新脏页到磁盘</strong><br>mysql后台有专门的线程每隔一段时间负责把脏页刷新到磁盘，这样可以不影响用户线程处理正常的请求。主要有两种刷新路径：</p><ul class="lvl-0"><li class="lvl-4">1、从LRU链表的冷数据中刷新一部分页面到磁盘。</li><li class="lvl-4">2、从flush链表中刷新一部分页面到磁盘。</li></ul></div><ul class="lvl-0"><li class="lvl-2"><p>每个控制块大约占用缓存页大小的5%，而我们设置的<code>innodb_buffer_pool_size</code>并不包含这部分控制块占用的内存空间大小，也就是说InnoDB在为Buffer Pool向操作系统申请连续的内存空间时，这片连续的内存空间一般会比innodb_buffer_pool_size的值大5%左右，这也是为什么不建议设置<code>innodb_buffer_pool_size</code>超过内存的75%。</p></li><li class="lvl-2"><p>InnoDB增删改查都是直接操作这个<code>buffer pool</code>，并顺序写入<code>undo log</code>和<code>redo log</code>，如果直接操作硬盘就是随机写，效率会非常低</p></li><li class="lvl-2"><p>InnoDB引擎数据更新执行顺序</p></li></ul><blockquote><p>1.加载要查询或修改的硬盘数据所在的页到buffer pool，加载时可能会同时加载相邻的页<br>2.将要修改的数据旧值写入<code>undo log</code>文件，如果事务提交失败，可以用undo日志里的数据进行回滚<br>3.更新<code>buffer pool</code>内存中的数据<br>4.写入<code>redo log buffer</code>(内存)<br>5.提交事务时写入<code>redo log</code>文件，用于在异常情况（如事务提交成功，但buffer pool里的数据尚未写入磁盘，此时宕机）下恢复<code>buffer pool</code>内存中的数据<br>6.写入<code>bin log</code>文件，主要用于恢复数据库磁盘里的数据<br>7.<code>bin log</code>文件记录成功后写入<code>commit</code>标记到<code>redo log</code>文件，保证redo与binlog数据一致性<br>8.<code>buffer pool</code>内存中的数据随机写入磁盘，独立线程每隔一段时间就会刷盘，如果<code>buffer pool</code>写满了也会采用LRU等算法将内存数据写入磁盘</p></blockquote><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png" alt="" width="900" height="600"></p><h3 id="多个Buffer-Pool实例">多个Buffer Pool实例</h3><ul class="lvl-0"><li class="lvl-2"><p>Buffer Pool本质是InnoDB向操作系统申请的一块连续的内存空间，在多线程环境下，访问Buffer Pool中的各种链表都需要加锁处理，在Buffer Pool特别大而且多线程并发访问特别高的情况下，单一的Buffer Pool可能会影响请求的处理速度。<br>所以在Buffer Pool特别大的时候，我们可以把它们拆分成若干个小的Buffer Pool，每个Buffer Pool都称为一个实例，它们都是独立的，独立的去申请内存空间，独立的管理各种链表，所以在多线程并发访问时并不会相互影响，从而提高并发处理能力。</p></li><li class="lvl-2"><p>我们可以在服务器启动的时候通过设置<code>innodb_buffer_pool_instances</code>的值来修改Buffer Pool实例的个数，默认8，最大值是64。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_buffer_pool_instances&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_buffer_pool_instances <span class="operator">|</span> <span class="number">8</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+-------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>每个Buffer Pool实例实际占内存空间: <code>innodb_buffer_pool_size/innodb_buffer_pool_instances</code></p></li><li class="lvl-2"><p>innodb_buffer_pool_size（默认128M）的值小于1G的时候设置多个实例是无效的，InnoDB会默认把innodb_buffer_pool_instances的值修改为1。</p></li><li class="lvl-2"><p>最佳的innodb_buffer_pool_instances的数量是，innodb_buffer_pool_size除以innodb_buffer_pool_instances，可以让每个Buffer Pool实例达到<code>1个G</code></p></li><li class="lvl-2"><p>mysql服务启动时（故障后重启），会先将<code>redo log</code>中的内容加载到<code>Buffer Pool</code>中，然后在读取<code>undo log</code>进行事务回滚，以此达到重启前的状态</p></li></ul><h3 id="查看Buffer-Pool的状态信息">查看Buffer Pool的状态信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> ENGINE INNODB STATUS\G</span><br><span class="line">………………</span><br><span class="line"><span class="comment">----------------------</span></span><br><span class="line">BUFFER POOL <span class="keyword">AND</span> MEMORY</span><br><span class="line"><span class="comment">----------------------</span></span><br><span class="line">Total <span class="keyword">large</span> memory allocated <span class="number">0</span></span><br><span class="line">Dictionary memory allocated <span class="number">1009326</span></span><br><span class="line">Buffer pool size   <span class="number">65530</span></span><br><span class="line"><span class="keyword">Free</span> buffers       <span class="number">63832</span></span><br><span class="line">Database pages     <span class="number">1689</span></span><br><span class="line"><span class="keyword">Old</span> database pages <span class="number">0</span></span><br><span class="line">Modified db pages  <span class="number">0</span></span><br><span class="line">Pending <span class="keyword">reads</span>      <span class="number">0</span></span><br><span class="line">Pending writes: LRU <span class="number">0</span>, flush list <span class="number">0</span>, single page <span class="number">0</span></span><br><span class="line">Pages made young <span class="number">0</span>, <span class="keyword">not</span> young <span class="number">0</span></span><br><span class="line"><span class="number">0.00</span> youngs<span class="operator">/</span>s, <span class="number">0.00</span> non<span class="operator">-</span>youngs<span class="operator">/</span>s</span><br><span class="line">Pages read <span class="number">1542</span>, created <span class="number">161</span>, written <span class="number">352</span></span><br><span class="line"><span class="number">0.00</span> <span class="keyword">reads</span><span class="operator">/</span>s, <span class="number">0.00</span> creates<span class="operator">/</span>s, <span class="number">0.00</span> writes<span class="operator">/</span>s</span><br><span class="line"><span class="keyword">No</span> buffer pool page gets since the <span class="keyword">last</span> printout</span><br><span class="line">Pages read ahead <span class="number">0.00</span><span class="operator">/</span>s, evicted <span class="keyword">without</span> access <span class="number">0.00</span><span class="operator">/</span>s, Random read ahead <span class="number">0.00</span><span class="operator">/</span>s</span><br><span class="line">LRU len: <span class="number">1689</span>, unzip_LRU len: <span class="number">0</span></span><br><span class="line">I<span class="operator">/</span>O sum[<span class="number">0</span>]:cur[<span class="number">0</span>], unzip sum[<span class="number">0</span>]:cur[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><div class="note success"><p><strong>返回值说明</strong><br>Total memory allocated：代表Buffer Pool向操作系统申请的连续内存空间大小，包括全部控制块、缓存页、以及碎片的大小。<br>Dictionary memory allocated：为数据字典信息分配的内存空间大小，注意这个内存空间和Buffer Pool没啥关系，不包括在Total memory allocated中。<br>Buffer pool size：代表该Buffer Pool可以容纳多少缓存页，注意，单位是页！<br>Free buffers：代表当前Buffer Pool还有多少空闲缓存页，也就是free链表中还有多少个节点。<br>Database pages：代表LRU链表中的页的数量，包含young和old两个区域的节点数量。<br>Old database pages：代表LRU链表old区域的节点数量。<br>Modified db pages：代表脏页数量，也就是flush链表中节点的数量。<br>Pending reads：正在等待从磁盘上加载到Buffer Pool中的页面数量。<br>当准备从磁盘中加载某个页面时，会先为这个页面在Buffer Pool中分配一个缓存页以及它对应的控制块，然后把这个控制块添加到LRU的old区域的头部，但是这个时候真正的磁盘页并没有被加载进来，Pending reads的值会跟着加1。<br>Pending writes LRU：即将从LRU链表中刷新到磁盘中的页面数量。<br>Pending writes flush list：即将从flush链表中刷新到磁盘中的页面数量。<br>Pending writes single page：即将以单个页面的形式刷新到磁盘中的页面数量。<br>Pages made young：代表LRU链表中曾经从old区域移动到young区域头部的节点数量。<br>Page made not young：在将innodb_old_blocks_time设置的值大于0时，首次访问或者后续访问某个处在old区域的节点时由于不符合时间间隔的限制而不能将其移动到young区域头部时，Page made not young的值会加1。<br>youngs/s：代表每秒从old区域被移动到young区域头部的节点数量。<br>non-youngs/s：代表每秒由于不满足时间限制而不能从old区域移动到young区域头部的节点数量。<br>Pages read、created、written：代表读取，创建，写入了多少页。后边跟着读取、创建、写入的速率。<br>Buffer pool hit rate：表示在过去某段时间，平均访问1000次页面，有多少次该页面已经被缓存到Buffer Pool了。<br>young-making rate：表示在过去某段时间，平均访问1000次页面，有多少次访问使页面移动到young区域的头部了。<br>not (young-making rate)：表示在过去某段时间，平均访问1000次页面，有多少次访问没有使页面移动到young区域的头部。<br>LRU len：代表LRU链表中节点的数量。<br>unzip_LRU：代表unzip_LRU链表中节点的数量。<br>I/O sum：最近50s读取磁盘页的总数。<br>I/O cur：现在正在读取的磁盘页数量。<br>I/O unzip sum：最近50s解压的页面数量。<br>I/O unzip cur：正在解压的页面数量。</p></div><h2 id="MyISAM-Key-Buffer">MyISAM Key Buffer</h2><ul class="lvl-0"><li class="lvl-2"><p><code>key_buffer_size</code>规定了系统将多少内存用作MyISAM的索引缓存</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看key buffer设置大小</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;key_buffer_size&#x27;</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>MyISAM增删改成都是直接操作这个<code>Key Buffer</code></p></li><li class="lvl-2"><p>Key Buffer只存放索引，对于数据是读取数据文件</p></li><li class="lvl-2"><p>如果一个读请求到达，能从Key Buffer中找到数据，那么就不再访问myi文件，直接根据data域去找对应的数据</p></li><li class="lvl-2"><p>如果在Key Buffer中找不到，则读取myi中的对应File Block放入Key Buffer的LRU链的头部，并从Key Buffer返回数据</p></li><li class="lvl-2"><p>当我们从“.MYI〞文件中读入File Block到Key Buffer中的Cache Block时候，如果整个Key Buffer中己经没有空闲的Cache Block可以使用的话，将会通过Mysql实现的LRU相关算法将某些Cache Blocl清除出夫，让新进来的File Block有地方待。</p></li></ul><h2 id="InnoDB记录存储结构和索引页结构">InnoDB记录存储结构和索引页结构</h2><p>InnoDB是一个将表中的数据存储到磁盘上的存储引擎，而真正处理数据的过程是发生在内存中的，所以需要把磁盘中的数据加载到内存中，如果是处理写入或修改请求的话，还需要把内存中的内容刷新到磁盘上。<br><br>而我们知道读写磁盘的速度非常慢，和内存读写差了几个数量级，所以当我们想从表中获取某些记录时，InnoDB存储引擎需要一条一条的把记录从磁盘上读出来么？<br>InnoDB采取的方式是：将数据划分为若干个页，以页作为磁盘和内存之间交互的基本单位，InnoDB中页的大小一般为16KB。也就是在一般情况下，一次最少从磁盘中读取16KB的内容到内存中，一次最少把内存中的16KB内容刷新到磁盘中。<br><br>我们平时是以记录为单位来向表中插入数据的，这些记录在磁盘上的存放方式也被称为行格式或者记录格式。<br>InnoDB存储引擎设计了4种不同类型的行格式，分别是Compact、Redundant、Dynamic和Compressed行格式，MySQL5.7以后的默认行格式是Dynamic。<br><br>我们可以在创建或修改表的语句中指定行格式： <code>CREATE TABLE 表名 (列的信息) ROW_FORMAT=行格式名称</code><br>查看行格式<code>SHOW TABLE STATUS LIKE 'table_name'\G</code></p><h3 id="记录行格式">记录行格式</h3><ul class="lvl-0"><li class="lvl-2"><p>Redundant: MySQL5.0之前用的一种行格式，不予深究</p></li><li class="lvl-2"><p>Compact: MySQL 5.1 开始，默认的行记录格式为 Compact<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/row_format.png" alt="" width="1200"></p><ul class="lvl-2"><li class="lvl-4">变长字段长度列表: 存储当前记录中所有变成字段的长度<ul class="lvl-4"><li class="lvl-6">VARCHAR(M)、VARBINARY(M)、各种TEXT类型，各种BLOB类型，拥有这些数据类型的字段称为变长字段，变长字段中存储多少字节的数据是不固定的，所以在存储真实数据的时候需要顺便把这些数据占用的字节数也存起来。</li><li class="lvl-6">如果该可变字段允许存储的最大字节数超过255字节并且真实存储的字节数超过127字节，则使用2个字节，否则使用1个字节。</li></ul></li><li class="lvl-4">NULL值列表: 记录当前记录中允许值为NULL的字段是否为NULL<ul class="lvl-4"><li class="lvl-6">表中的某些列可能存储NULL值，如果把这些NULL值都放到记录的真实数据中存储会很占地方，所以Compact行格式把这些值为NULL的列统一管理起来，存储到NULL值列表。</li><li class="lvl-6">每个允许存储NULL的列对应一个二进制位，二进制位的值为1时，代表该列的值为NULL。二进制位的值为0时，代表该列的值不为NULL。</li></ul></li><li class="lvl-4">记录头信息: 由固定的5个字节组成。5个字节也就是40个二进制位，不同的位代表不同的意思。<ul class="lvl-4"><li class="lvl-6">预留位1 1 没有使用</li><li class="lvl-6">预留位2 1 没有使用</li><li class="lvl-6">delete_mask 1 标记该记录是否被删除</li><li class="lvl-6">min_rec_mask 1 B+树的每层非叶子节点中的最小记录都会添加该标记</li><li class="lvl-6">n_owned 4 表示当前记录拥有的记录数</li><li class="lvl-6">heap_no 13 表示当前记录在页的位置信息</li><li class="lvl-6">record_type 3 表示当前记录的类型，0表示普通记录，1表示B+树非叶子节点记录，2表示最小记录，3表示最大记录</li><li class="lvl-6">next_record 16 表示下一条记录的相对位置</li></ul></li><li class="lvl-4">DB_ROW_ID(row_id)：非必须，6字节，表示行ID，唯一标识一条记录（在没有自定义主键以及Unique键的情况下才会添加该列）</li><li class="lvl-4">DB_TRX_ID：必须，6字节，表示事务ID</li><li class="lvl-4">DB_ROLL_PTR：必须，7字节，表示回滚指针，指向记录对应的 undo 日志位置</li></ul></li><li class="lvl-2"><p>Dynamic: MySQL5.7以后的默认行格式，和Compact行格式挺像，只不过在处理行溢出数据时有所不同</p></li><li class="lvl-2"><p>Compressed: 与Dynamic很像，不同的一点是Compressed行格式会采用压缩算法对页面进行压缩，以节省空间</p></li></ul><div class="note success"><h3 id="数据溢出">数据溢出</h3><p>如果我们定义一个表，表中只有一个VARCHAR字段，如下： CREATE TABLE test_varchar( c VARCHAR(60000) ) 然后往这个字段插入60000个字符，会发生什么？<br><br>前边说过，MySQL中磁盘和内存交互的基本单位是页，也就是说MySQL是以页为基本单位来管理存储空间的，我们的记录都会被分配到某个页中存储。<br><br>而一个页的大小一般是16KB，也就是16384字节，而一个VARCHAR(M)类型的列就最多可以存储65532个字节，这样就可能造成一个页存放不了一条记录的情况。<br><br>在Compact和Redundant行格式中，对于占用存储空间非常大的列，在记录的真实数据处只会存储该列的该列的前768个字节的数据，然后把剩余的数据分散存储在几个其他的页中，<br><br>记录的真实数据处用20个字节存储指向这些页的地址。这个过程也叫做行溢出，存储超出768字节的那些页面也被称为溢出页。<br>Dynamic和Compressed行格式，不会在记录的真实数据处存储字段真实数据的前768个字节，而是把所有的字节都存储到其他页面中，只在记录的真实数据处存储其他页面的地址。</p></div><h3 id="索引页格式">索引页格式</h3><ul class="lvl-0"><li class="lvl-2"><p>Mysql把存放记录的页称为索引页，也可以理解为是数据页。<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/index_page.png" alt="" width="200" height="400"></p></li><li class="lvl-2"><p>一个InnoDB数据页的存储空间大致被划分成了7个部分</p></li></ul><table><thead><tr><th style="text-align:left">英文名称</th><th style="text-align:left">中文含义</th><th style="text-align:left">所占空间</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">File Header</td><td style="text-align:left">文件头部</td><td style="text-align:left">38字节</td><td style="text-align:left">页的一些通用信息</td></tr><tr><td style="text-align:left">Page Header</td><td style="text-align:left">页面头部</td><td style="text-align:left">56字节</td><td style="text-align:left">数据页专有的一些信息</td></tr><tr><td style="text-align:left">Infimum + Supremum</td><td style="text-align:left">最小记录和最大记录</td><td style="text-align:left">26字节</td><td style="text-align:left">两个虚拟的行记录</td></tr><tr><td style="text-align:left">User Records</td><td style="text-align:left">用户记录</td><td style="text-align:left">大小不确定</td><td style="text-align:left">实际存储的行记录内容</td></tr><tr><td style="text-align:left">Free Space</td><td style="text-align:left">空闲空间</td><td style="text-align:left">大小不确定</td><td style="text-align:left">页中尚未使用的空间</td></tr><tr><td style="text-align:left">Page Directory</td><td style="text-align:left">页面目录</td><td style="text-align:left">大小不确定</td><td style="text-align:left">页中的某些记录的相对位置</td></tr><tr><td style="text-align:left">File Trailer</td><td style="text-align:left">文件尾部</td><td style="text-align:left">8字节</td><td style="text-align:left">校验页是否完整</td></tr></tbody></table><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/page_directory.png" alt="" width="800" height="600"></p><ul class="lvl-0"><li class="lvl-2"><p>User Records</p><div class="note info"><ul class="lvl-0"><li class="lvl-2"><p>我们自己存储的记录会按照我们指定的行格式存储到User Records部分。</p></li><li class="lvl-2"><p>但是在一开始生成页的时候，其实并没有User Records这个部分，每当我们插入一条记录，都会从Free Space部分，也就是尚未使用的存储空间中申请一个记录大小的空间划分到User Records部分，</p></li><li class="lvl-2"><p>当Free Space部分的空间全部被User Records部分替代掉之后，也就意味着这个页使用完了，如果还有新的记录插入的话，就需要去申请新的页了。</p></li><li class="lvl-2"><p>当前记录被删除时，则会修改记录头信息中的delete_mask为1，也就是说被删除的记录还在页中，还在真实的磁盘上。</p></li><li class="lvl-2"><p>这些被删除的记录之所以不立即从磁盘上移除，是因为移除它们之后把其他的记录在磁盘上重新排列需要性能消耗。</p></li><li class="lvl-2"><p>所以只是打一个删除标记而已，所有被删除掉的记录都会组成一个所谓的垃圾链表，在这个链表中的记录占用的空间称之为所谓的可重用空间，之后如果有新记录插入到表中的话，可能把这些被删除的记录占用的存储空间覆盖掉。</p></li><li class="lvl-2"><p>同时我们插入的记录在会记录自己在本页中的位置，写入了记录头信息中heap_no部分。 heap_no值为0和1的记录是InnoDB自动给每个页增加的两个记录，称为伪记录或者虚拟记录。</p></li><li class="lvl-2"><p>这两个伪记录一个代表最小记录，一个代表最大记录，这两条存放在页的User Records部分，他们被单独放在一个称为Infimum + Supremum的部分。</p></li><li class="lvl-2"><p>记录头信息中next_record记录了从当前记录的真实数据到下一条记录的真实数据的地址偏移量。这其实是个链表，可以通过一条记录找到它的下一条记录。</p></li><li class="lvl-2"><p>但是需要注意注意再注意的一点是，下一条记录指得并不是按照我们插入顺序的下一条记录，而是按照主键值由小到大的顺序的下一条记录。</p></li><li class="lvl-2"><p>而且规定 Infimum记录（也就是最小记录）的下一条记录就是本页中主键值最小的用户记录，而本页中主键值最大的用户记录的下一条记录就是Supremum记录（也就是最大记录）。</p></li></ul></div></li><li class="lvl-2"><p>Page Directory</p><div class="note info"><ul class="lvl-0"><li class="lvl-2"><p>Page Directory主要是解决记录链表的查找问题。如果我们想根据主键值查找页中的某条记录该咋办？</p></li><li class="lvl-2"><p>按链表查找的办法：从Infimum记录（最小记录）开始，沿着链表一直往后找，总会找到或者找不到。但是时间复杂度不低。</p></li><li class="lvl-2"><p>InnoDB的改进是，为页中的记录再制作了一个目录，他们的制作过程是这样的：</p><ul class="lvl-2"><li class="lvl-4">1、将所有正常的记录（包括最大和最小记录，不包括标记为已删除的记录）划分为几个组。</li><li class="lvl-4">2、每个组的最后一条记录（也就是组内最大的那条记录）的头信息中的n_owned属性表示该记录拥有多少条记录，也就是该组内共有几条记录。</li><li class="lvl-4">3、将每个组的最后一条记录的地址偏移量单独提取出来按顺序存储到靠近页的尾部的地方，这个地方就是所谓的Page Directory，也就是页目录，页面目录中的这些地址偏移量被称为槽（英文名：Slot），所以这个页面目录就是由槽组成的。</li><li class="lvl-4">4、每个分组中的记录条数是有规定的：对于最小记录所在的分组只能有 1 条记录，最大记录所在的分组拥有的记录条数只能在 1~8 条之间，剩下的分组中记录的条数范围只能在是 4~8 条之间。</li></ul></li><li class="lvl-2"><p>这样，一个数据页中查找指定主键值的记录的过程分为两步：</p><ul class="lvl-2"><li class="lvl-4">通过二分法确定该记录所在的槽，并找到该槽所在分组中主键值最小的那条记录。</li><li class="lvl-4">通过记录的next_record属性遍历该槽所在的组中的各个记录。</li></ul></li></ul></div></li><li class="lvl-2"><p>Page Header</p><div class="note info"><p>InnoDB为了能得到一个数据页中存储的记录的状态信息，比如本页中已经存储了多少条记录，第一条记录的地址是什么，页目录中存储了多少个槽等等，特意在页中定义了一个叫Page Header的部分，它是页结构的第二部分，这个部分占用固定的56个字节，专门存储各种状态信息。</p></div></li><li class="lvl-2"><p>File Header</p><div class="note info"><ul class="lvl-0"><li class="lvl-2"><p>File Header针对各种类型的页都通用，也就是说不同类型的页都会以File Header作为第一个组成部分，它描述了一些针对各种页都通用的一些信息，</p></li><li class="lvl-2"><p>比方说页的类型，这个页的编号是多少，它的上一个页、下一个页是谁，页的校验和等等，这个部分占用固定的38个字节。</p></li><li class="lvl-2"><p>页的类型有很多种，包括Undo日志页、段信息节点、Insert Buffer空闲列表、Insert Buffer位图、系统页、事务系统数据、表空间头部信息、扩展描述页、溢出页(存储变长字段的大数据)、以及我们正在讲的索引页，等等。</p></li><li class="lvl-2"><p>同时通过上一个页、下一个页建立一个双向链表把许许多多的页就串联起来，而无需这些页在物理上真正连着。</p></li><li class="lvl-2"><p>但是并不是所有类型的页都有上一个和下一个页的属性，数据页是有这两个属性的，所以所有的数据页其实是一个双向链表。</p></li></ul></div></li><li class="lvl-2"><p>File Trailer</p><div class="note info"><ul class="lvl-0"><li class="lvl-2"><p>InnoDB存储引擎会把数据存储到磁盘上，但是磁盘速度太慢，需要以页为单位把数据加载到内存中处理，如果该页中的数据在内存中被修改了，那么在修改后的某个时间需要把数据同步到磁盘中。</p></li><li class="lvl-2"><p>但是在同步了一半的时候断电了咋办？为了检测一个页是否完整（也就是在同步的时候有没有发生只同步一半的尴尬情况），InnoDB每个页的尾部都加了一个File Trailer部分，这个部分由8个字节组成，可以分成2个小部分：</p><ul class="lvl-2"><li class="lvl-4">前4个字节代表页的校验和<ul class="lvl-4"><li class="lvl-6">这个部分是和File Header中的校验和相对应的。每当一个页面在内存中修改了，在同步之前就要把它的校验和算出来，因为File Header在页面的前边，所以校验和会被首先同步到磁盘，当完全写完时，校验和也会被写到页的尾部，如果完全同步成功，则页的首部和尾部的校验和应该是一致的。如果写了一半儿断电了，那么在File Header中的校验和就代表着已经修改过的页，而在File Trailer中的校验和代表着原先的页，二者不同则意味着同步中间出了错。</li></ul></li><li class="lvl-4">后4个字节代表页面被最后修改时对应的日志序列位置（LSN），这个也和校验页的完整性有关。</li></ul></li><li class="lvl-2"><p>这个File Trailer与File Header类似，都是所有类型的页通用的。</p></li></ul></div></li></ul><h2 id="InnoDB表空间-TableSpace">InnoDB表空间(TableSpace)</h2><ul class="lvl-0"><li class="lvl-2"><p>系统表空间(System Tablespace): 对应着文件系统中一个或多个实际文件，一般是<code>ibdata1</code>，表空间 ID（Space ID）是0</p></li><li class="lvl-2"><p>独立表空间(File-Per-Table Tablespaces): 对应着文件系统中一个名称为<code>dbname/tablename.ibd</code>的实际文件</p></li><li class="lvl-2"><p>临时表空间(Temporary Tablespaces): 对应着文件系统中一个或多个实际文件，一般是<code>ibtmp1</code>和<code>#innodb_temp/temp_数字.ibt</code></p></li><li class="lvl-2"><p>通用表空间(General Tablespaces): 允许多个表存储数据的共享表空间</p></li><li class="lvl-2"><p>Undo Tablespaces: 对应着文件系统中的<code>undo_001</code>和<code>undo_002</code></p></li><li class="lvl-2"><p>关于表空间的详细说明可以参考<a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-tablespace.html">mysql官方文档</a></p></li></ul><blockquote><p>可以查看<code>information_schema.INNODB_TABLESPACES</code>获取表空间信息,<code>information_schema.INNODB_DATAFILES</code>获取表空间对应文件系统的文件路径信息</p></blockquote><h3 id="表空间与页的关系">表空间与页的关系</h3><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/tablespace.png" alt="" width="800" height="500"></p><h3 id="双写缓冲区-双写机制">双写缓冲区/双写机制</h3><ul class="lvl-0"><li class="lvl-2"><p>双写缓冲区/双写机制是InnoDB的三大特性之一，还有两个是Buffer Pool、自适应Hash索引。</p></li><li class="lvl-2"><p>它是一种特殊文件flush技术，带给InnoDB存储引擎的是数据页的可靠性。它的作用是，在把页写到数据文件之前，InnoDB先把它们写到一个叫doublewrite buffer（双写缓冲 区）的连续区域内，在写doublewrite buffer完成后，InnoDB才会把页写到数据文件的适当的位置。如果在写页的过程中发生意外崩溃，InnoDB在稍后的恢复过程中在doublewrite buffer中找到完好的page副本用于恢复。</p></li><li class="lvl-2"><p>所以，虽然叫双写缓冲区，但是这个缓冲区不仅在内存中有，更多的是属于MySQL的系统表空间，属于磁盘文件的一部分。</p></li><li class="lvl-2"><p>正常的情况下, MySQL写数据页时，会写两遍到磁盘上，第一遍是写到doublewrite buffer，第二遍是写到真正的数据文件中。如果发生了极端情况（断电），InnoDB再次启动后，发现了一个页数据已经损坏，那么此时就可以从doublewrite buffer中进行数据恢复了。</p></li><li class="lvl-2"><p>doublewrite buffer的作用有两个:</p><ul class="lvl-2"><li class="lvl-4">提高innodb把缓存的数据写到硬盘这个过程的安全性；</li><li class="lvl-4">innodb的事务日志不需要包含所有数据的前后映像,而是二进制变化量，这可以节省大量的IO。</li></ul></li><li class="lvl-2"><p>doublewrite buffer与Redo Log的区别: Redo Log日志中记录的是对页的物理操作，而doublewrite buffer记录的是页面的全量记录</p></li></ul><h2 id="InnoDB元数据表">InnoDB元数据表</h2><ul class="lvl-0"><li class="lvl-2"><p>information_schema数据库</p></li></ul><table><thead><tr><th style="text-align:left">mysql8</th><th style="text-align:left">mysql5</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">INNODB_TABLES</td><td style="text-align:left">INNODB_SYS_TABLES</td><td style="text-align:left">整个InnoDB存储引擎中所有的表的信息</td></tr><tr><td style="text-align:left">INNODB_COLUMNS</td><td style="text-align:left">INNODB_SYS_COLUMNS</td><td style="text-align:left">整个InnoDB存储引擎中所有的列的信息</td></tr><tr><td style="text-align:left">INNODB_INDEXES</td><td style="text-align:left">INNODB_SYS_INDEXES</td><td style="text-align:left">整个InnoDB存储引擎中所有的索引的信息</td></tr><tr><td style="text-align:left">INNODB_FIELDS</td><td style="text-align:left">INNODB_SYS_FIELDS</td><td style="text-align:left">整个InnoDB存储引擎中所有的索引对应的列的信息</td></tr><tr><td style="text-align:left">INNODB_FOREIGN</td><td style="text-align:left">INNODB_SYS_FOREIGN</td><td style="text-align:left">整个InnoDB存储引擎中所有的外键的信息</td></tr><tr><td style="text-align:left">INNODB_FOREIGN_COLS</td><td style="text-align:left">INNODB_SYS_FOREIGN_COLS</td><td style="text-align:left">整个InnoDB存储引擎中所有的外键对应列的信息</td></tr><tr><td style="text-align:left">INNODB_TABLESPACES</td><td style="text-align:left">INNODB_SYS_TABLESPACES</td><td style="text-align:left">整个InnoDB存储引擎中所有的表空间信息</td></tr><tr><td style="text-align:left">INNODB_DATAFILES</td><td style="text-align:left">INNODB_SYS_DATAFILES</td><td style="text-align:left">整个InnoDB存储引擎中所有的表空间对应文件系统的文件路径信息</td></tr><tr><td style="text-align:left">INNODB_VIRTUAL</td><td style="text-align:left">INNODB_SYS_VIRTUAL</td><td style="text-align:left">整个InnoDB存储引擎中所有的虚拟生成列的信息</td></tr></tbody></table><h2 id="redo-log-和-undo-log"><em>redo log</em> 和 <em>undo log</em></h2><ul class="lvl-0"><li class="lvl-2"><p>前文关于事务的介绍中，我们提到过，mysql的Innodb引擎在事务的具体实现机制上采用的是WAL(Write-ahead logging，预写 式日志)机制来实现的，具体来说就是 <em><code>redo log</code></em> 和 <em><code>undo log</code></em>。</p></li><li class="lvl-2"><p>在机器掉电重启之后Mysql系统需要知道之前的操作是成功了，还是只有部分成功或者是失败了(为了恢复状态)。如果使用了WAL，那么在重启之后系统可以通过比较日志和系统状态来决定是继续完成操作还是撤销操作。</p></li></ul><h3 id="redo-log"><em>redo log</em></h3><p><em><code>redo log</code></em> 称为重做日志，每当有操作时，在数据变更之前（此时事务并没有提交，所以可能需要回滚，回滚是通过<code>undo log</code>记录的）将操作写入 <strong>redo log</strong>， 这样当发生掉电之类的情况时系统可以在重启后继续操作。<br><strong>redo log</strong> 用来在系统 Crash 重启之类的情况时修复数据，以此来保证事务的持久性<br><strong>binlog</strong> 记录完成后会在 <strong>redo log</strong>中加入一个<code>commit</code>标记，表示redo与binlog数据一致</p><div class="tips"><p><em><strong><code>redo log</code>的作用</strong></em><br>我们知道，InnoDB的增删改查都是在<code>Buffer Pool</code>完成的，如果我们只在内存的 Buffer Pool 中修改了页面，假设在事务提交后突然发生了某个故障，导致内存中的数据都失效了，那么这个已经提交了的事务对数据库中所做的更改也就跟着丢失了，这是我们所不能忍受的。那么如何保证这个持久性呢？</p><p>我们只是想让已经提交了的事务对数据库中数据所做的修改永久生效，即使后来系统崩溃，在重启后也能把这种修改恢复出来。<br>所以我们其实没有必要在每次事务提交时就把该事务在内存中修改过的全部页面刷新到磁盘，因为这样做效率太低(还是那个原则，把随机写改为顺序写)，我们只需要把修改了哪些东西记录一下就好，<br>比方说某个事务将系统表空间中的第 100号 页面中偏移量为 1000 处的那个字节的值 1 改成 2 ，我们只需要记录一下：<br><em><strong>将第 0 号表空间的 100 号页面的偏移量为 1000 处的值更新为 2。</strong></em><br>这样我们在事务提交时，把上述内容刷新到磁盘中，即使之后系统崩溃了，重启之后只要按照上述内容所记录的步骤重新更新一下数据页，那么该事务对数据库中所做的修改又可以被恢复出来，也就意味着满足持久性的要求。</p><p>理论上，<strong>redo log</strong>的容量足够恢复因掉电等原因导致<code>Buffer Pool</code>没有及时刷入磁盘的内容。否则<strong>redo log</strong>因容量不够而被覆盖，而此时<code>Buffer Pool</code>尚未刷入磁盘，就不能保证事务的持久性了</p><p>这样做与如下好处：<br>1、redo 日志占用的空间非常小，存储<em>表空间ID</em>、<em>页号</em>、<em>偏移量</em> 以及 <em>需要更新的值</em> 所需的存储空间是很小的。<br>2、redo 日志是顺序写入磁盘的，在执行事务的过程中，每执行一条语句，就可能产生若干条 redo 日志，这些日志是按照产生的顺序写入磁盘的，也就是使用 <em>顺序IO</em>。</p></div><h3 id="redo日志格式">redo日志格式</h3><p>InnoDB 们针对事务对数据库的不同修改场景定义了多种类型的redo日志，但是绝大部分类型的 redo 日志都有下边这种通用的结构：<br>type：该条 redo 日志的类型，redo 日志设计大约有 53 种不同的类型日志。<br>space ID：表空间 ID。<br>page number：页号。<br>data：该条 redo 日志的具体内容。</p><ul class="lvl-0"><li class="lvl-2"><p>type类型有很多种，根据type的不同，redo日志格式中还会增加其它结构</p><ul class="lvl-2"><li class="lvl-4">比如简单的类型中会包含修改位置的偏移量或者修改数据的长度，等等，如修改单条记录</li><li class="lvl-4">复杂一些的类型，如表中包含多少个索引，那么执行一条insert语句就会修改非常多的页面(聚簇索引和二级索引对应的B+树)，针对某一棵 B+树来说，既可能更新叶子节点页面，也可能更新非叶子节点页面，也可能创建新的页面（在该记录插入的叶子节点的剩余空间比较少，不足以存放该记录时，会进行页面的分裂，在非叶子节点页面中添加目录项记录）。在语句执行过程中，INSERT 语句对所有页面的修改都得保存到 redo 日志中去。这个实现起来是非常麻烦的，我们这里不做详细说明。</li></ul></li><li class="lvl-2"><p>redo日志格式类型非常多，如果不是为了写一个解析 redo 日志的工具或者自己开发一套 redo 日志系统的话，那就不需要去研究 InnoDB 中的 redo 日志具体格式。只要记住：redo 日志会把事务在执行过程中对数据库所做的所有修改都记录下来，在之后系统崩溃重启后可以把事务所做的任何修改都恢复出来。</p></li></ul><h3 id="redo-log-buffer">redo log buffer</h3><p>写入 redo 日志时也不能直接直接写到磁盘上，<br>实际上在服务器启动时就向操作系统申请了一大片称之为 redo log buffer 的连续内存空间，翻译成中文就是 redo 日志缓冲区，<br>我们也可以简称为 log buffer。</p><p>我们可以通过启动参数 <code>innodb_log_buffer_size</code> 来指定 log buffer 的大小，该启动参数的默认值为 16MB。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_log_buffer_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name          <span class="operator">|</span> <span class="keyword">Value</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> innodb_log_buffer_size <span class="operator">|</span> <span class="number">16777216</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+----------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><strong><code>redo log buffer</code></strong> 何时刷入磁盘</p><ul class="lvl-2"><li class="lvl-4"><p>1、log buffer 空间不足时</p><blockquote><p>log buffer 的大小是有限的（通过系统变量innodb_log_buffer_size 指定），如果不停的往这个有限大小的 log buffer 里塞入日志，很快它就会被填满。InnoDB 认为如果当前写入 log buffer 的 redo 日志量已经占满了 log buffer 总容量的大约一半左右，就需要把这些日志刷新到磁盘上。</p></blockquote></li><li class="lvl-4"><p>2、事务提交时</p><blockquote><p>我们前边说过之所以使用 redo 日志主要是因为它占用的空间少，还是顺序写，在事务提交时可以不把修改过的 Buffer Pool 页面刷新到磁盘，但是为了保证持久性，必须要把修改这些页面对应的 redo 日志刷新到磁盘。</p></blockquote></li><li class="lvl-4"><p>3、后台有一个线程，大约每秒都会刷新一次 log buffer 中的 redo 日志到磁盘。</p></li><li class="lvl-4"><p>4、正常关闭服务器时等等。</p></li><li class="lvl-4"><p>5、MySQL8.0.30之前的版本，redo日志的大小由两个变量控制</p><ul class="lvl-4"><li class="lvl-6">1）<code>innodb_log_files_in_group</code>：REDO 日志磁盘上的文件个数，默认为2。文件名称：ib_logfile0,ib_logfile1</li><li class="lvl-6">2）<code>innodb_log_file_size</code>：REDO 日志磁盘上单个文件的大小，默认为48M。</li><li class="lvl-6">3）当前的日志大小为单个48M，两个组，也就是一共96M。</li></ul></li><li class="lvl-4"><p>6、MySQL8.0.30引入了一个新特性：动态调整redo日志的大小，默认redo日志文件位于datadir下的一个目录<code>#innodb_redo</code>下，redo log 文件存放的位置由参数 <code>innodb_log_group_home_dir</code> 控制，这里要注意，该目录下必须创建<code>#innodb_redo</code>目录，否则会启动失败</p><ul class="lvl-4"><li class="lvl-6">redo动态日志总大小通过参数<code>innodb_redo_log_capacity</code>设置，默认100M，最大重做日志容量为 128GB，InnoDB维护了32个redo日志文件，每个文件的大小是<code>1/32 * innodb_redo_log_capacity</code></li><li class="lvl-6">该版本以及之后的版本，参数 <code>innodb_log_file_size</code> 和 <code>innodb_log_files_in_group</code> 已经被废弃</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_redo_log_capacity&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name            <span class="operator">|</span> <span class="keyword">Value</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> innodb_redo_log_capacity <span class="operator">|</span> <span class="number">104857600</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------+</span></span><br><span class="line"></span><br><span class="line"># 设置为<span class="number">2</span>G</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist innodb_redo_log_capacity<span class="operator">=</span><span class="number">2</span><span class="operator">*</span><span class="number">1024</span><span class="operator">*</span><span class="number">1024</span><span class="operator">*</span><span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line"># 查看redo log是否resize成功</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> STATUS <span class="keyword">LIKE</span> <span class="string">&#x27;Innodb_redo_log_resize_status&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                 <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Innodb_redo_log_resize_status <span class="operator">|</span> OK    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 查看redo log resize后的值</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> STATUS <span class="keyword">LIKE</span> <span class="string">&#x27;Innodb_redo_log_capacity_resized&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                    <span class="operator">|</span> <span class="keyword">Value</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Innodb_redo_log_capacity_resized <span class="operator">|</span> <span class="number">2147483648</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-----------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-4"><li class="lvl-6"><p>有两种类型的redo日志文件：</p><ul class="lvl-6"><li class="lvl-8">ordinary：指被使用的redo日志文件，命名规则是：#ib_redoN，这里的N是日志文件号</li><li class="lvl-8">spare：指等待被使用的redo日志文件，命名规则是：#ib_redoN_tmp，这里的N是日志文件号</li></ul></li><li class="lvl-6"><p>可以通过查询 <code>performance_schema.innodb_redo_log_files</code> 来查看有关活动重做日志文件的信息</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> FILE_ID, START_LSN, END_LSN, SIZE_IN_BYTES, IS_FULL, CONSUMER_LEVEL  <span class="keyword">FROM</span> performance_schema.innodb_redo_log_files;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----------+---------------+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> FILE_ID <span class="operator">|</span> START_LSN <span class="operator">|</span> END_LSN   <span class="operator">|</span> SIZE_IN_BYTES <span class="operator">|</span> IS_FULL <span class="operator">|</span> CONSUMER_LEVEL <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----------+---------------+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">21</span> <span class="operator">|</span> <span class="number">348829696</span> <span class="operator">|</span> <span class="number">352104448</span> <span class="operator">|</span>       <span class="number">3276800</span> <span class="operator">|</span>       <span class="number">0</span> <span class="operator">|</span>              <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----------+---------------+---------+----------------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-214 <span class="comment">#innodb_redo]# ll</span></span><br><span class="line">总用量 102400</span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo21</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo22_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo23_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo24_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo25_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo26_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo27_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo28_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo29_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo30_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo31_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo32_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo33_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo34_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo35_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo36_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo37_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo38_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo39_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo40_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo41_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo42_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo43_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo44_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo45_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo46_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo47_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo48_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo49_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo50_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo51_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo52_tmp</span></span><br></pre></td></tr></table></figure></li></ul></li><li class="lvl-2"><p><strong><code>innodb_flush_log_at_trx_commit</code></strong> 该变量有 3 个可选的值：<br>0：当该系统变量值为0时，表示在事务提交时不立即向磁盘中同步redo日志，这个任务是交给后台线程做的。这样很明显会加快请求处理速度，但是如果事务提交后服务器挂了，后台线程没有及时将 redo 日志刷新到磁盘，那么该事务对页面的修改会丢失。<br>1：当该系统变量值为 1 时，表示在事务提交时需要将 redo 日志同步到磁盘，可以保证事务的持久性。1 也是 innodb_flush_log_at_trx_commit 的默认值。<br>2：当该系统变量值为 2 时，表示在事务提交时需要将 redo 日志写到操作系统的缓冲区中，但并不需要保证将日志真正的刷新到磁盘。这种情况下如果数据库挂了，操作系统没挂的话，事务的持久性还是可以保证的，但是操作系统也挂了的话，那就不能保证持久性了</p></li><li class="lvl-2"><p>崩溃后的恢复为什么不用 binlog？</p><div class="tips"><p>1、这两者使用方式不一样<br>binlog 会记录表所有更改操作，包括更新删除数据，更改表结构等等，主要用于人工恢复数据，而 redo log 对于我们是不可见的，它是 InnoDB 用于保证crash-safe 能力的，也就是在事务提交后 MySQL 崩溃的话，可以保证事务的持久性，即事务提交后其更改是永久性的。<br>一句话概括：binlog 是用作人工恢复数据，redo log 是 MySQL 自己使用，用于保证在数据库崩溃时的事务持久性。<br>2、redo log 是 InnoDB 引擎特有的，binlog 是 MySQL 的 Server 层实现的,所有引擎都可以使用。<br>3、redo log 是物理日志，记录的是“在某个数据页上做了什么修改”，恢复的速度更快；binlog 是逻辑日志，记录的是这个语句的原始逻辑，比如“给 ID=2这的 c 字段加 1 ” ；<br>4、redo log 是“循环写”的日志文件，redo log 只会记录未刷盘的日志，已经刷入磁盘的数据都会从 redo log 这个有限大小的日志文件里删除。binlog 是追加日志，保存的是全量的日志。<br>5、最重要的是，当数据库 crash 后，想要恢复未刷盘但已经写入 redo log 和 binlog 的数据到内存时，binlog 是无法恢复的。虽然 binlog 拥有全量的日志，但没有一个标志让 innoDB 判断哪些数据已经入表(写入磁盘)，哪些数据还没有。<br><br>比如，binlog 记录了两条日志：<br><br>给 ID=2 这一行的 c 字段加 1<br>给 ID=2 这一行的 c 字段加 1<br>在记录 1 入表后，记录 2 未入表时，数据库 crash。重启后，只通过 binlog 数据库无法判断这两条记录哪条已经写入磁盘，哪条没有写入磁盘，不管是两条都恢复至内存，还是都不恢复，对 ID=2 这行数据来说，都不对。<br><br>但 redo log 不一样，只要刷入磁盘的数据，都会从 redo log 中抹掉，数据库重启后，直接把 redo log 中的数据都恢复至内存就可以了。</p></div></li></ul><h3 id="undo-log"><em>undo log</em></h3><p><em><code>undo log</code></em> 称为撤销日志，当一些变更执行到一半无法完成时，可以根据撤销日志恢复到变更之间的状态。<br><strong>undo log</strong> 用来保证事务的原子性</p><div class="tips"><p>为了实现事务的原子性，InnoDB 存储引擎在实际进行增、删、改一条记录时，都需要先把对应的 undo 日志记下来。一般每对一条记录做一次改动，就对应着一条 undo 日志，但在某些更新记录的操作中，也可能会对应着 2 条 undo 日志。</p><p>一个事务在执行过程中可能新增、删除、更新若干条记录，也就是说需要记录很多条对应的 undo 日志，这些 undo 日志会被从 0 开始编号，也就是说根据生成的顺序分别被称为第 0 号 undo 日志、第 1 号 undo 日志、…、第 n 号 undo日志等，这个编号也被称之为 undo NO。</p><p>我们前边说明表空间的时候说过，表空间其实是由许许多多的页面构成的，页面默认大小为 16KB。这些页面有不同的类型，其中有一种称之为FIL_PAGE_UNDO_LOG 类型的页面是专门用来存储 undo 日志的。也就是说 Undo page 跟储存的数据和索引的页等是类似的。<br>FIL_PAGE_UNDO_LOG 页面可以从系统表空间中分配，也可以从一种专门存放undo日志的表空间，也就是所谓的 undo tablespace 中分配。</p></div><ul class="lvl-0"><li class="lvl-2"><p><em><code>undo log</code></em> 与更新操作对应的日志记录条数</p><ul class="lvl-2"><li class="lvl-4">insert: 记录1条日志，主要是把这条记录的主键信息记上，回滚这个插入操作时把这条记录删除就好了</li><li class="lvl-4">delete: 记录1条日志，undo log日志类型为 <code>TRX_UNDO_DEL_MARK_REC</code> ，将记录的 delete_mask 值被设置为 1，回滚这个删除操作时改回0就好了</li><li class="lvl-4">update: 分两种情况，更新记录主键与不更新记录主键<ul class="lvl-4"><li class="lvl-6">更新记录主键: 在对该记录进行 delete mark 操作前，会记录一条类型为 <code>TRX_UNDO_DEL_MARK_REC</code> 的 undo 日志；之后插入新记录时，会记录一条类型为 <code>TRX_UNDO_INSERT_REC</code> 的 undo 日志，也就是说每对一条记录的主键值做改动时，会记录 2 条 undo 日志。</li><li class="lvl-6">不更新记录主键: 记录1条日志，类型为 <code>TRX_UNDO_UPD_EXIST_REC</code></li></ul></li></ul></li></ul><h3 id="Redo-日志和-Undo-日志的关系">Redo 日志和 Undo 日志的关系</h3><p>数据库崩溃重启后，需要先从 redo log 中把未落盘的脏页数据恢复回来，重新写入磁盘，保证用户的数据不丢失。当然，在崩溃恢复中还需要把未提交的事务进行回滚操作。由于回滚操作需要 undo log 日志支持，undo log 日志的完整性和可靠性需要 redo log 日志来保证，所以数据库崩溃需要先做 redo log 数据恢复，然后做 undo log 回滚。</p><p>事务进行过程中，每次 sql 语句执行，都会记录 undo log 和 redo log，然后更新数据形成脏页。事务执行 COMMIT 操作时，会将本事务相关的所有 redo log 进行落盘，只有所有的 redo log 落盘成功，才算 COMMIT 成功。然后内存中的 undo log 和脏页按照同样的规则进行落盘。如果此时发生崩溃，则只使用 redo log 恢复数据。</p><div class="tips"><p><strong>知识面拓展</strong><br><em>Commit Logging</em> 和 <em>Shadow Paging</em><br>事务的日志类型的实现除了 WAL(Write-ahead logging，预写式日志)外，还有<code>Commit Logging</code>(提交日志)，这种方式只有在日志记录全部都安全落盘，数据库在日志中看到代表事务成功提交的“提交记录”(Commit Record)后，才会根据日志上的信息对真正的数据进行修改，修改完成后，再在日志中加入一条“结束记录”(End Record)表示事务已完成持久化。两者的区别是，WAL 允许在事务提交之前，提前写入变动数据，而 Commit Logging 则不行。阿里的 OceanBase 则是使用的 Commit Logging 来实现事务。</p><p>实现事务的原子性和持久性除日志外，还有另外一种称为<code>Shadow Paging”</code>(有中文资料翻译为“影子分页”)的事务实现机制，常用的轻量级数据库 SQLite Version 3 采用的事务机制就是 Shadow Paging。<br>Shadow Paging 的大体思路是对数据的变动会写到硬盘的数据中，但并不是直接就地修改原先的数据，而是先将数据复制一份副本，保留原数据，修改副本数据。在事务过程中，被修改的数据会同时存在两份，一份是修改前的数据，一份是修改后的数据，这也是“影子”(Shadow)这个名字的由来。当事务成功提交，所有数据的修改都成功持久化之后，最后一步是去修改数据的引用指针，将引用从原数据改为新复制出来修改后的副本，最后的“修改指针”这个操作将被 认为是原子操作，现代磁盘的写操作可以认为在硬件上保证了不会出现“改了半个值”的现象。所以 Shadow Paging 也可以保证原子性和持久性。Shadow Paging 实现事务要比 Commit Logging 更加简单，但涉及隔离性与并发锁时，Shadow Paging 实现的事务并发能力就相对有限，因此在高性能的数据库中应用不多。</p></div><h2 id="数据库锁">数据库锁</h2><ul class="lvl-0"><li class="lvl-2"><p>从性能上分为<code>乐观锁</code>(用版本对比来实现)和<code>悲观锁</code></p></li><li class="lvl-2"><p>从对数据库操作的类型分，分为<code>读锁</code>和<code>写锁</code>(都属于悲观锁)</p></li></ul><blockquote><p>读锁（共享锁，S锁[Shared]）：针对同一份数据，多个读操作可以同时进行而不会互相影响。读锁可以认为没有加锁，可读但不可写，当写锁锁住数据时，读锁也会不可获取。<br>写锁（排它锁，X锁[eXclusive]）：当前写操作没有完成前，它会阻断其他写锁和读锁</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 给表加读锁</span><br><span class="line"># 当前session和其他session都可以读该表,当前session中插入或者更新锁定的表都会报错，其他session插入或更新则会等待</span><br><span class="line">mysql<span class="operator">&gt;</span> lock <span class="keyword">table</span> actor read;</span><br><span class="line"></span><br><span class="line"># 给表加写锁</span><br><span class="line"># 当前session对该表的增删改查都没有问题，其他session对该表的所有操作被阻塞</span><br><span class="line">mysql<span class="operator">&gt;</span> lock <span class="keyword">table</span> actor write;</span><br><span class="line"></span><br><span class="line"># 查看哪些表上加了锁</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">open</span> tables;</span><br><span class="line"># 查看指定表</span><br><span class="line"># In_use<span class="operator">=</span><span class="number">1</span>表示被加了写锁</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">open</span> tables <span class="keyword">like</span> <span class="string">&#x27;actor&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> Database <span class="operator">|</span> <span class="keyword">Table</span> <span class="operator">|</span> In_use <span class="operator">|</span> Name_locked <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> test     <span class="operator">|</span> actor <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------+--------+-------------+</span></span><br><span class="line"></span><br><span class="line"># 解锁</span><br><span class="line">mysql<span class="operator">&gt;</span> unlock tables;</span><br></pre></td></tr></table></figure><blockquote><p>对MyISAM表的读操作(加读锁) ,不会阻寒其他进程对同一表的读请求,但会阻赛对同一表的写请求。只有当读锁释放后,才会执行其它进程的写操作。<br>对MylSAM表的写操作(加写锁) ,会阻塞其他进程对同一表的读和写操作,只有当写锁释放后,才会执行其它进程的读写操作</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>从对数据操作的粒度分，分为<code>表锁</code>和<code>行锁</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 行锁<span class="keyword">for</span> <span class="keyword">update</span>，这样其他session只能读这行数据，修改则会被阻塞，直到锁定行的session提交</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">10</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br></pre></td></tr></table></figure><blockquote><p>注意行锁的查询条件必须走索引，否则会升级为表锁<br>尽可能让所有数据检索都通过索引来完成，避免无索引行锁升级为表锁<br>合理设计索引，尽量缩小锁的范围<br>尽量控制事务大小，减少锁定资源量和时间长度，涉及事务加锁的sql尽量放在事务最后执行</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>行锁分析</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> status <span class="keyword">like</span> <span class="string">&#x27;innodb_row_lock%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                 <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_current_waits <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_time          <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_time_avg      <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_time_max      <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_waits         <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line">Innodb_row_lock_current_waits: 当前正在等待锁定的数量</span><br><span class="line">Innodb_row_lock_time: 从系统启动到现在锁定总时间长度（等待总时长）</span><br><span class="line">Innodb_row_lock_time_avg: 每次等待所花平均时间（等待平均时长）</span><br><span class="line">Innodb_row_lock_time_max: 从系统启动到现在等待最长的一次所花时间</span><br><span class="line">Innodb_row_lock_waits: 系统启动后到现在总共等待的次数（等待总次数）</span><br></pre></td></tr></table></figure><div class="note success"><ul class="lvl-0"><li class="lvl-2"><p>MyISAM不支持事务且只支持表锁，在执行查询语句SELECT前，会自动给涉及的所有表加读锁,在执行update、insert、delete操作会自动给涉及的表加写锁。</p></li><li class="lvl-2"><p>InnoDB支持事务和行锁，在执行查询语句SELECT时(非串行隔离级别)，不会加锁。但是update、insert、delete操作会加行锁。</p></li><li class="lvl-2"><p>读锁会阻塞写，但是不会阻塞读。而写锁则会把读和写都阻塞。</p></li></ul></div><ul class="lvl-0"><li class="lvl-2"><p><code>间隙锁</code>(Gap Lock): 锁的就是两个值之间的空隙，用于解决幻读。间隙锁是在可重复读隔离级别下才会生效。</p></li></ul><blockquote><p>如account表的主键id是不连续的（1，2，3，10，20），那么间隙就有id为 (3,10)，(10,20)，(20,正无穷) 这三个区间<br>在Session_1下面执行 <code>update account set age = 10 where id &gt; 8 and id &lt;18;</code><br>则其他Session没法在这个范围所包含的所有行记录(包括间隙行记录)以及行记录所在的间隙里插入或修改任何数据，即id在 (3,20]区间都无法修改数据，注意最后那个20也是包含在内的。<br>注意这里锁住的最后一条记录不是id=18，而是18所在的间隙区间都会锁住。<br>尽可能减少检索条件范围，避免间隙锁</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>临键锁</code>(Next-key Locks): 是行锁与间隙锁的组合。像上面那个例子里的这个(3,20]的整个区间可以叫做临键锁。</p></li><li class="lvl-2"><p>查看锁等待详细信息</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> engine innodb status\G;</span><br></pre></td></tr></table></figure><h2 id="慢查询">慢查询</h2><ul class="lvl-0"><li class="lvl-2"><p>什么是慢查询<br>慢查询日志，顾名思义，就是查询花费大量时间的日志，是指mysql记录所有执行超过<code>long_query_time</code>参数设定的时间阈值的SQL语句的日志。该日志能为SQL语句的优化带来很好的帮助。默认情况下，慢查询日志是关闭的，要使用慢查询日志功能，首先要开启慢查询日志功能。</p></li><li class="lvl-2"><p>开启慢查询</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;slow_query_log&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name  <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------+</span></span><br><span class="line"><span class="operator">|</span> slow_query_log <span class="operator">|</span> OFF   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 开启慢查询日志</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">GLOBAL</span> slow_query_log<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"># 默认阈值是<span class="number">10</span>秒，超过这个阈值就会记录慢查询日志，可以根据需要进行修改</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;long_query_time&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name   <span class="operator">|</span> <span class="keyword">Value</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> long_query_time <span class="operator">|</span> <span class="number">10.000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------+</span></span><br><span class="line"></span><br><span class="line"># 如果运行的<span class="keyword">SQL</span>语句没有使用索引，则MySQL数据库也可以将这条<span class="keyword">SQL</span>语句记录到慢查询日志文件，默认关闭</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;log_queries_not_using_indexes&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                 <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> log_queries_not_using_indexes <span class="operator">|</span> OFF   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 产生的慢查询日志，可以指定输出的位置，通过参数log_output来控制，可以输出到[<span class="keyword">TABLE</span>][FILE][FILE,<span class="keyword">TABLE</span>]，默认FILE，如果指定<span class="keyword">TABLE</span>，则会记录在mysql.slow_log表中</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;log_output&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> log_output    <span class="operator">|</span> FILE  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 生成的日志文件默认在datadir指定的目录下，也可以自己设置</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;slow_query_log_file&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name       <span class="operator">|</span> <span class="keyword">Value</span>                                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> slow_query_log_file <span class="operator">|</span> <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>soft<span class="operator">/</span>mysql8<span class="operator">/</span>datas<span class="operator">/</span>mysql<span class="operator">/</span>ip<span class="number">-10</span><span class="number">-250</span><span class="number">-0</span><span class="number">-214</span><span class="operator">-</span>slow.log <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>慢查询日志格式</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">“Time: 2021-04-05T07:50:53.243703Z”：查询执行时间</span><br><span class="line">“User@Host: root[root] @ localhost [] Id: 3”：用户名 、用户的IP信息、线程ID号</span><br><span class="line">“Query_time: 0.000495”：执行花费的时长【单位：秒】</span><br><span class="line">“Lock_time: 0.000170”：执行获得锁的时长</span><br><span class="line">“Rows_sent”：获得的结果行数</span><br><span class="line">“Rows_examined”：扫描的数据行数</span><br><span class="line">“SET timestamp”：这SQL执行的具体时间</span><br><span class="line">最后一行：执行的SQL语句</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>慢查询分析<code>mysqldumpslow</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysqldumpslow <span class="operator">-</span>s r <span class="operator">-</span>t <span class="number">10</span> <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>soft<span class="operator">/</span>mysql8<span class="operator">/</span>datas<span class="operator">/</span>mysql<span class="operator">/</span>ip<span class="number">-10</span><span class="number">-250</span><span class="number">-0</span><span class="number">-214</span><span class="operator">-</span>slow.log</span><br><span class="line"></span><br><span class="line"># 参数说明：</span><br><span class="line"><span class="operator">-</span>s 对结果进行排序，怎么排，根据后面所带的 (c,t,l,r,<span class="keyword">at</span>,al,ar)，缺省为<span class="keyword">at</span></span><br><span class="line">  c:总次数 t:总时间 l:锁的时间 r:获得的结果行数</span><br><span class="line">  <span class="keyword">at</span>,al,ar :指t,l,r平均数 【例如：<span class="keyword">at</span> <span class="operator">=</span> 总时间<span class="operator">/</span>总次数】</span><br><span class="line"><span class="operator">-</span>t NUM just <span class="keyword">show</span> the top n queries：仅显示前n条查询</span><br><span class="line"><span class="operator">-</span>g <span class="keyword">PATTERN</span> grep: <span class="keyword">only</span> consider stmts that include this string：通过grep来筛选语句。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MySql知识点介绍: binlog相关、事务及其ACID属性、并发事务处理带来的问题、事务隔离级别、MVCC多版本并发控制机制、InnoDB Buffer Pool、MyISAM Key Buffer、InnoDB记录存储结构和索引页结构、InnoDB表空间(TableSpace)、InnoDB元数据表、redo log 和 undo log、数据库锁、慢查询，等等&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;，&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySql一些有用的知识点[1]</title>
    <link href="https://blog.hanqunfeng.com/2022/09/26/mysql-senior-command1/"/>
    <id>https://blog.hanqunfeng.com/2022/09/26/mysql-senior-command1/</id>
    <published>2022-09-26T13:30:05.000Z</published>
    <updated>2022-10-26T09:03:32.062Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++ --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>MySql知识点介绍:执行计划相关、索引相关、用户管理、线程状态、常用操作、表信息相关、系统变量、mysql中的数据类型对应java实体数据类型、数据库导出与导入，等等</p></li><li class="lvl-2"><p>本文基于<code>mysql-8.0.30</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/">https://dev.mysql.com/doc/refman/8.0/en/</a></p></li></ul><span id="more"></span><h2 id="执行计划相关">执行计划相关</h2><ul class="lvl-0"><li class="lvl-2"><p><strong>什么是执行计划</strong></p></li></ul><blockquote><p>一条查询语句在经过MySQL查询优化器的各种基于成本和规则的优化会后生成一个所谓的执行计划，这个执行计划展示了接下来具体执行查询的方式，比如多表连接的顺序是什么，对于每个表采用什么访问方法来具体执行查询等等。<code>EXPLAIN</code>语句来帮助我们查看某个查询语句的具体执行计划，我们需要搞懂<code>EXPLAIN</code>的各个输出项都是干嘛使的，从而可以有针对性的提升我们查询语句的性能。<br>通过使用<code>EXPLAIN</code>关键字可以模拟优化器执行SQL查询语句，从而知道MySQL是如何处理你的SQL语句的，分析查询语句或是表结构的性能瓶颈。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><strong>通过<code>EXPLAIN</code>我们可以知道：</strong><br>⚫ 表的读取顺序<br>⚫ 数据读取操作的操作类型<br>⚫ 哪些索引可以使用<br>⚫ 哪些索引被实际使用<br>⚫ 表之间的引用<br>⚫ 每张表有多少行被优化器查询</p></li><li class="lvl-2"><p><strong>查看执行计划</strong></p></li></ul><blockquote><p>执行计划的语法其实非常简单：在SQL查询的前面加上<code>EXPLAIN</code>关键字就行</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="keyword">NULL</span>       <span class="operator">|</span> const <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span>   <span class="number">100.00</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><strong>重点属性说明</strong></p></li></ul><blockquote><p>id</p></blockquote><div class="note success"><p>id列的编号是 select 的序列号，每个SELECT关键字都对应一个唯一的 id，有几个select就有几个id，并且id的顺序是按select出现的顺序增长的。<br>id列越大执行优先级越高，id相同则从上往下执行，id为NULL最后执行。</p></div><blockquote><p>select_type</p></blockquote><div class="note success"><p>select_type 查询的类型，表示对应行是简单还是复杂的查询。<br>1）simple：简单查询。查询不包含子查询和union<br>2）primary：复杂查询中最外层的 select<br>3）subquery：包含在 select 中的子查询（不在 from 子句中），不依赖于外部查询的结果集<br>4）derived：包含在 from 子句中的子查询。MySQL会将结果存放在一个临时表中，也称为派生表（derived的英文含义）<br>5）union：在 union 中的第二个和随后的 select查询,不依赖于外部查询的结果集<br>6）UNION RESULT：UNION 结果集<br>7）DEPENDENT UNION：UNION 中的第二个或随后的 select 查询,依赖于外部查询的结果集<br>8）DEPENDENT SUBQUERY：子查询中的第一个 select 查询,依赖于外部查询的结果集<br>9）MATERIALIZED：物化子查询<br>10）UNCACHEABLE SUBQUERY： 结果集不能被缓存的子查询,必须重新为外层查询的每一行进行评估，出现极少。<br>11）UNCACHEABLE UNION：UNION 中的第二个或随后的 select 查询,属于不可缓存的子查询，出现极少。</p></div><blockquote><p>table</p></blockquote><div class="note success"><p>table列表示 explain 的一行正在访问哪个表。<br>当 from 子句中有子查询时，table列是 <derivenN> 格式，表示当前查询依赖 id=N 的查询，于是先执行 id=N 的查 询。<br>当有 union 时，UNION RESULT 的 table 列的值为&lt;union1,2&gt;，1和2表示参与 union 的 select 行id。</p></div><blockquote><p>type</p></blockquote><div class="note success"><p>type表示关联类型或访问类型，从最优到最差分别为：<br>system &gt; const &gt; eq_ref &gt; ref &gt; fulltext &gt; ref_or_null &gt; index_merge &gt; unique_subquery &gt; index_subquery &gt; range &gt; index &gt; ALL<br>出现比较多的是: system &gt; const &gt; eq_ref &gt; ref &gt; range &gt; index &gt; ALL，一般来说，得保证查询达到range级别，最好达到ref。<br>NULL表示mysql能够在优化阶段分解查询语句，在执行阶段用不着再访问表或索引。</p><blockquote><p>类型说明</p></blockquote><ul class="lvl-0"><li class="lvl-2">const, system: 常量查询</li><li class="lvl-2">eq_ref: 主键索引或唯一索引查询</li><li class="lvl-2">ref: 相比 eq_ref，不使用唯一索引，而是使用普通索引或者唯一性索引的部分前缀</li><li class="lvl-2">range: 范围扫描，如 in(), between ,&gt; ,&lt;, &gt;=</li><li class="lvl-2">index: 扫描全索引，一般扫描的是某个二级索引，二级索引一般比较小，所以这种通常比ALL快一些。</li><li class="lvl-2">ALL: 即全表扫描，扫描你的聚簇索引的所有叶子节点。</li></ul><blockquote><p>其它不常出现的也做简单说明</p></blockquote><ul class="lvl-0"><li class="lvl-2">fulltext: 全文索引，不推荐使用</li><li class="lvl-2">ref_or_null: 不仅想找出某个二级索引列的值等于某个常数的记录，还想把该列的值为NULL的记录也找出来，如<code>WHERE order_no= 'abc' OR order_no IS NULL;</code></li><li class="lvl-2">index_merge: 一般情况下对于某个表的查询只能使用到一个索引，在某些场景下可以使用索引合并的方式来执行查询</li><li class="lvl-2">unique_subquery: 是针对在一些包含IN子查询的查询语句中，如果查询优化器决定将IN子查询转换为EXISTS子查询，而且子查询可以使用到主键进行等值匹配</li><li class="lvl-2">index_subquery:  与unique_subquery类似，只不过访问⼦查询中的表时使⽤的是普通的索引</li></ul></div><blockquote><p>possible_keys</p></blockquote><div class="note success"><p>possible_keys列显示查询可能使用哪些索引来查找。<br>explain 时可能出现 possible_keys 有值，而 key 显示 NULL 的情况，这种情况是因为表中数据不多，mysql认为索引对此查询帮助不大，选择了全表查询。<br>如果该列是NULL，则没有相关的索引。</p></div><blockquote><p>key</p></blockquote><div class="note success"><p>key列显示mysql实际采用哪个索引来优化对该表的访问。<br>如果没有使用索引，则该列是 NULL。</p></div><blockquote><p>key_len</p></blockquote><div class="note success"><p>这一列显示了mysql在索引里使用的字节数，通过这个值可以算出具体使用了索引中的哪些列。<br>key_len计算规则如下：</p><ol><li class="lvl-3">字符串，char(n)和varchar(n)，5.0.3以后版本中，n均代表字符数，而不是字节数，如果是utf-8，一个数字 或字母占1个字节，一个汉字占3个字节<br>char(n)：如果存汉字长度就是 3n 字节<br>varchar(n)：如果存汉字则长度是 3n + 2 字节，加的2字节用来存储字符串长度，因为 varchar是变长字符串</li><li class="lvl-3">数值类型<br>tinyint：1字节<br>smallint：2字节<br>int：4字节<br>bigint：8字节</li><li class="lvl-3">时间类型<br>date：3字节<br>timestamp：4字节<br>datetime：8字节<br>如果字段允许为 NULL，需要1字节记录是否为 NULL。<br>索引最大长度是768字节，当字符串过长时，mysql会做一个类似左前缀索引的处理，将前半部分的字符提取出来做索引。</li></ol></div><blockquote><p>ref</p></blockquote><div class="note success"><p>ref列显示了在key列记录的索引中，表查找值所用到的列或常量，常见的有：const（常量），字段名（例：<a href="http://film.id">film.id</a>）</p></div><blockquote><p>rows</p></blockquote><div class="note success"><p>rows列是mysql估计要读取并检测的行数，注意这个不是结果集里的行数。</p></div><blockquote><p>Extra</p></blockquote><div class="note success"><p>Extra列展示的是额外信息，常见信息如下：<br>1）Using index：使用覆盖索引，索引排序<br>2）Using where：使用 where 语句来处理结果，并且查询的列未被索引覆盖<br>3）Using index condition：查询的列不完全被索引覆盖，where条件中是一个前导列的范围<br>4）Using temporary：mysql需要创建一张临时表来处理查询，比如去重、排序之类的，需要使用索引优化<br>5）Using filesort：将用外部排序而不是索引排序，数据较小时从内存排序，否则需要在磁盘完成排序，需要使用索引优化<br>6）Select tables optimized away：使用某些聚合函数（比如 max、min）来访问存在索引的某个字段</p></div><ul class="lvl-0"><li class="lvl-2"><p>filesort文件排序方式</p></li></ul><blockquote><p>单路排序：是一次性取出满足条件行的所有字段，然后在sort buffer中进行排序；<br>双路排序（又叫回表排序模式）：是首先根据相应的条件取出相应的排序字段和可以直接定位行数据的行ID，然后在 sort buffer 中进行排序，排序完后需要再次取回其它需要的字段；<br>MySQL通过比较系统变量 max_length_for_sort_data(默认1024字节)的大小和需要查询的字段总大小来判断使用哪种排序模式。<br>如果字段的总长度小于max_length_for_sort_data ，那么使用单路排序模式；<br>如果字段的总长度大于max_length_for_sort_data ，那么使用双路排序模式;<br>如果全部使用sort_buffer内存排序一般情况下效率会高于磁盘文件排序，但不能因为这个就随便增大sort_buffer(默认1M)，mysql很多参数设置都是做过优化的，不要轻易调整。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># mysql8是<span class="number">4</span>k，mysql5是<span class="number">1</span>k</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;max_length_for_sort_data&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name            <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> max_length_for_sort_data <span class="operator">|</span> <span class="number">4096</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 这里设置的<span class="number">4</span>M</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;sort_buffer_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+---------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+---------+</span></span><br><span class="line"><span class="operator">|</span> sort_buffer_size <span class="operator">|</span> <span class="number">4194304</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+---------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>优化总结</p></li></ul><div class="note success"><p>1、MySQL支持两种方式的排序filesort和index，Using index是指MySQL扫描索引本身完成排序。index 效率高，filesort效率低。<br>2、order by满足两种情况会使用Using index:</p><blockquote><ol><li class="lvl-3">order by语句使用索引最左前列。</li><li class="lvl-3">使用where子句与order by子句条件列组合满足索引最左前列。</li></ol></blockquote><p>3、尽量在索引列上完成排序，遵循索引建立（索引创建的顺序）时的最左前缀法则。<br>4、如果order by的条件不在索引列上，就会产生Using filesort。<br>5、能用覆盖索引尽量用覆盖索引<br>6、group by与order by很类似，其实质是先排序后分组，遵照索引创建顺序的最左前缀法则。对于group by的优化如果不需要排序的可以加上order by null禁止排序。注意，where高于having，能写在where中 的限定条件就不要去having限定了。</p></div><ul class="lvl-0"><li class="lvl-2"><p>查看优化后的sql</p></li></ul><blockquote><p>mysql8.0以前的版本需要explain extended select * from actor where id = 1;</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"># 显示优化后的<span class="keyword">sql</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> warnings;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Level <span class="operator">|</span> Code <span class="operator">|</span> Message                                                                                                               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Note  <span class="operator">|</span> <span class="number">1003</span> <span class="operator">|</span> <span class="comment">/* select#1 */</span> <span class="keyword">select</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">AS</span> `id`,<span class="string">&#x27;a&#x27;</span> <span class="keyword">AS</span> `name`,<span class="string">&#x27;2017-12-22 15:27:18&#x27;</span> <span class="keyword">AS</span> `update_time` <span class="keyword">from</span> `test`.`actor` <span class="keyword">where</span> <span class="literal">true</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="关联查询inner-join之显式连接-VS-隐式连接，从执行计划上看两者是一回事，推荐带on的显示查询">关联查询<code>inner join</code>之<code>显式连接</code> VS <code>隐式连接</code>，从执行计划上看两者是一回事，推荐带on的显示查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 显式连接<span class="number">1</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">inner</span> <span class="keyword">join</span> film <span class="keyword">on</span> film_actor.film_id <span class="operator">=</span> film.id;</span><br><span class="line"># 显式连接<span class="number">2</span>，有<span class="keyword">on</span>会先执行<span class="keyword">on</span>的关联，之后在进行<span class="keyword">where</span>过滤，推荐关联关系放到<span class="keyword">on</span>里面</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">inner</span> <span class="keyword">join</span> film <span class="keyword">where</span> film_actor.film_id <span class="operator">=</span> film.id;</span><br><span class="line"></span><br><span class="line"># 隐式链接</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor,film <span class="keyword">where</span> film_actor.film_id <span class="operator">=</span> film.id;</span><br></pre></td></tr></table></figure><h2 id="索引相关">索引相关</h2><h3 id="B-Tree-B-Tree变种">B+Tree(B-Tree变种)</h3><ul class="lvl-0"><li class="lvl-2"><p>非叶子节点不存储data，只存储索引(冗余)，目的是为了放更多的索引，减少树的高度，提高查询效率，非叶子结点由主键值和一个指向下一层的地址的指针组成。</p></li><li class="lvl-2"><p>叶子节点包含所有索引字段，聚集索引包含全部字段，非聚集索引包含索引中的字段，叶子结点中由一组键值对和一个指向该层下一页的指针组成，键值对存储的主键值和数据</p></li><li class="lvl-2"><p>叶节点之间通过双向链表链接，提高区间访问的性能</p></li><li class="lvl-2"><p>在B+树中，一个结点就是一页，MySQL中InnoDB页的大小默认是16k，Innodb的所有数据文件（后缀为 ibd 的文件），其大小始终都是 16384（16k）的整数倍。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;innodb_page_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_page_size <span class="operator">|</span> <span class="number">16384</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br></pre></td></tr></table></figure><blockquote><p>计算机在存储数据的时候，最小存储单元是扇区，一个扇区的大小是 512 字节，而文件系统（例如 XFS/EXT4）最小单元是块，一个块的大小是 4KB。InnoDB 引擎存储数据的时候，是以页为单位的，每个数据页的大小默认是 16KB，即四个块。</p></blockquote><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/b%2Btree.png" alt=""></p><div class="note success"><h3 id="B-Tree可以存放多少条数据，为什么是2000万？">B+Tree可以存放多少条数据，为什么是2000万？</h3><ul class="lvl-0"><li class="lvl-2">指针在InnoDB中为6字节，设主键的类型是bigint，占8字节。一组就是14字节。</li><li class="lvl-2">计算出一个非叶子结点可以存储16 * 1024 / 14 = 1170个索引指针。</li><li class="lvl-2">假设一条数据的大小是1KB，那么一个叶子结点可以存储16条数据。</li><li class="lvl-2">两层B+树可以存储<code>1170 x 16 = 18720</code>条数据。</li><li class="lvl-2">三层B+树可以存储<code>1170 x 1170 x 16 = 21902400</code>条数据，约为2000万。</li><li class="lvl-2">四层B+树可以存储<code>1170 x 1170 x 1170 x 16 = 25625808000</code>条数据，约为256亿。</li><li class="lvl-2">如不考虑磁盘IO，B+树的查找与其层数（树的高度）和阶数（节点的最大分支数）有关，因为数据都在叶子节点，所以查找数据必须从树的根节点开始，通过2分法定位其所在的分支，一层一层的查找（每层都是2分法定位其所在的分支），直到最后一层的叶子节点定位数据。</li><li class="lvl-2">在查找不超过3层的B+Tree中的数据时，一次页的查找代表一次IO，所以通过主键索引查询通常只需要1-3次IO操作即可查找到数据。</li><li class="lvl-2">一般不建议单表的数据量超过2000万，因为每查找一个页，都要进行一次IO，而磁盘的速度相比内存而言是非常的慢的，比如常见的7200RPM的硬盘，摇臂转一圈需要60/7200≈8.33ms,换句话说，让磁盘完整的旋转一圈找到所需要的数据需要8.33ms,这比内存常见的100ns慢100000倍左右，这还不包括移动摇臂的时间。所以在这里制约查找速度的不是比较次数，而是IO操作的次数。</li></ul><h3 id="B-Tree查找的时间复杂度（比较次数）计算方法">B+Tree查找的时间复杂度（比较次数）计算方法</h3><ul class="lvl-0"><li class="lvl-2"><p>B+Tree的查找时间复杂度的计算方法是<code>每层通过2分法查找的次数M * 树的高度H</code></p></li><li class="lvl-2"><p>假设B+Tree中总的数据量为N，阶数为R，则 M = log<sub>2</sub>R，H = log<sub>R</sub>N，则M * H = log<sub>2</sub>R * log<sub>R</sub>N = log<sub>2</sub>N</p></li><li class="lvl-2"><p>举例，比如有一课B+Tree的总的数据量是65536，最大分支为16，则N=65536，R=16，M = log<sub>2</sub>R = log<sub>2</sub>16 = 4，H = log<sub>R</sub>N = log<sub>16</sub>65536 = 4，则 M * H = log<sub>2</sub>N = log<sub>2</sub>65536 = 16，即最多查找16次就可以找到对应的数据</p></li><li class="lvl-2"><p>注意这里仅是计算内存中查找的比较次数，而没有考虑每次加载数据页到内存的IO成本，而实际上IO成本才是制约mysql查找快慢的关键因素，所以mysql每次IO都会将查询页附近的几个页一并加载到内存，以此减少IO次数</p></li></ul></div><h3 id="索引分类">索引分类</h3><ul class="lvl-0"><li class="lvl-2"><p>聚集索引/聚簇索引/密集索引<br>InnoDB中使用了聚集索引，就是将表的主键用来构造一棵B+树，并且将整张表的行记录数据存放在该B+树的叶子节点中。也就是所谓的索引即数据，数据即索引。<br>由于聚集索引是利用表的主键构建的，所以每张表只能拥有一个聚集索引。<br>聚集索引的叶子节点就是数据页。换句话说，数据页上存放的是完整的每行记录。<br>因此聚集索引的一个优点就是：通过聚集索引能获取完整的整行数据。<br>另一个优点是：对于主键的排序查找和范围查找速度非常快。<br>如果我们没有定义主键呢？MySQL会使用唯一性索引，没有唯一性索引，MySQL也会创建一个隐含列RowID来做主键，然后用这个主键来建立聚集索引。</p></li><li class="lvl-2"><p>辅助索引/二级索引/非聚集索引/稀疏索引<br>上边介绍的聚簇索引只能在搜索条件是主键值时才能发挥作用，因为B+树中的数据都是按照主键进行排序的,那如果我们想以别的列作为搜索条件怎么办？<br>我们一般会建立多个索引，这些索引被称为辅助索引/二级索引，辅助索引也是一颗B+树。<br>对于辅助索引(Secondary Index，也称二级索引、非聚集索引)，叶子节点并不包含行记录的全部数据。<br>叶子节点除了包含键值以外，每个叶子节点中的索引行中还包含了相应行数据的聚集索引主键，用于回表查询。<br>辅助索引的存在并不影响数据在聚集索引中的组织，因此每张表上可以有多个辅助索引，有几个辅助索引就会创建几颗B+树。<br>MyISAM存储引擎，不管是主键索引，唯一键索引还是普通索引都是非聚集索引。</p></li></ul><div class="note success"><p>当通过辅助索引来寻找数据时，InnoDB存储引擎会遍历辅助索引并通过叶级别的指针获得指向主键索引的主键，然后再通过主键索引（聚集索引）来找到一个完整的行记录。这个过程也被称为回表。<br>也就是根据辅助索引的值查询一条完整的用户记录需要使用到2棵B+树–一次辅助索引，一次聚集索引。</p></div><ul class="lvl-0"><li class="lvl-2"><p>联合索引/复合索引<br>前面我们对索引的描述，隐含了一个条件，那就是构建索引的字段只有一个，但实践工作中构建索引的完全可以是多个字段。<br>所以，将表上的多个列组合起来进行索引我们称之为联合索引或者复合索引，比如index(a,b)就是将a,b两个列组合起来构成一个索引。<br>联合索引只会建立1棵B+树。</p></li><li class="lvl-2"><p>自适应哈希索引(Adaptive Hash Index,AHI)<br>由mysql自己维护，对于经常被访问的索引，mysql会创建一个hash索引，下次查询这个索引时直接定位到记录的地址，而不需要去B+树中查询。<br>AHI默认开启，由<code>innodb_adaptive_hash_index</code>变量控制，默认8个分区,最大设置为512。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_adaptive_hash_index&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name              <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_adaptive_hash_index <span class="operator">|</span> <span class="keyword">ON</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+-------+</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_adaptive_hash_index_parts&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                    <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_adaptive_hash_index_parts <span class="operator">|</span> <span class="number">8</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-------+</span></span><br></pre></td></tr></table></figure><p>通过<code>show engine innodb status\G</code>命令可以查看AHI的使用情况</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> engine innodb status\G</span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> BUFFER <span class="keyword">AND</span> ADAPTIVE HASH INDEX</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">Ibuf: size <span class="number">1</span>, <span class="keyword">free</span> list len <span class="number">0</span>, seg size <span class="number">2</span>, <span class="number">0</span> merges</span><br><span class="line">merged operations:</span><br><span class="line"> <span class="keyword">insert</span> <span class="number">0</span>, <span class="keyword">delete</span> mark <span class="number">0</span>, <span class="keyword">delete</span> <span class="number">0</span></span><br><span class="line">discarded operations:</span><br><span class="line"> <span class="keyword">insert</span> <span class="number">0</span>, <span class="keyword">delete</span> mark <span class="number">0</span>, <span class="keyword">delete</span> <span class="number">0</span></span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">4</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">1</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">1</span> buffer(s)</span><br><span class="line"><span class="number">0.00</span> hash searches<span class="operator">/</span>s, <span class="number">0.00</span> non<span class="operator">-</span>hash searches<span class="operator">/</span>s</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>全文检索之倒排索引(FULLTEXT)<br>数据类型为 char、varchar、text 及其系列才可以建全文索引。<br>每张表只能有一个全文检索的索引<br>不支持没有单词界定符(delimiter）的语言，如中文、日语、韩语等。<br>由于mysql的全文索引功能很弱，这里不做详细介绍，推荐使用ES等专业的搜索引擎。</p></li></ul><div class="note success"><h3 id="MySQL有哪些索引类型">MySQL有哪些索引类型?</h3><ul class="lvl-0"><li class="lvl-2">从数据结构角度可分为B+树索引、哈希索引、以及FULLTEXT索引（现在MyISAM和InnoDB 引擎都支持了）和R-Tree索引（用于对GIS数据类型创建SPATIAL索引）；</li><li class="lvl-2">从物理存储角度可分为聚集索引（clustered index）、非聚集索引（non-clustered index）；</li><li class="lvl-2">从逻辑角度可分为主键索引、普通索引，或者单列索引、多列索引、唯一索引、非唯一索引等等。</li></ul><h3 id="覆盖索引-索引覆盖">覆盖索引/索引覆盖</h3><ul class="lvl-0"><li class="lvl-2"><p>InnoDB存储引擎支持覆盖索引(covering index，或称索引覆盖)，即从辅助索引中就可以得到查询的记录，而不需要查询聚集索引中的记录。</p></li><li class="lvl-2"><p>使用覆盖索引的一个好处是辅助索引不包含整行记录的所有信息，故其大小要远小于聚集索引，因此可以减少大量的IO操作。</p></li><li class="lvl-2"><p>覆盖索引可以视为索引优化的一种方式，而并不是索引类型的一种。</p></li><li class="lvl-2"><p>除了覆盖索引这个概念外，在索引优化的范围内，还有前缀索引、三星索引等。</p></li></ul><h3 id="前缀索引">前缀索引</h3><p>如果索引的字段类型很长，如varchar(255)，此时创建的索引就会非常大，而且维护起来也非常慢，此时建议使用前缀索引，就是只对该字段的前面一些字符进行索引。<br>阿里的Java编程规范中也提到，在varchar上建立索引时，必须指定索引长度，没必要对全字段建立索引，建议索引的长度不超过20。<br>可以使用<code>select count(distinct left(列名, 索引长度))/count(*) from tableName</code>的区分度来确定，一般大于90%即可。</p><h3 id="三星索引">三星索引</h3><ul class="lvl-0"><li class="lvl-2"><p>一星(缩小查询范围): 索引将相关的记录放到一起则获得一星，即索引的扫描范围越小越好；</p></li><li class="lvl-2"><p>二星(排序): 如果索引中的数据顺序和查找中的排列顺序一致则获得二星，即当查询需要排序，group by、 order by，查询所需的顺序与索引是一致的（索引本身是有序的）；</p></li><li class="lvl-2"><p>三星(覆盖索引): 如果索引中的列包含了查询中需要的全部列则获得三星，即索引中所包含了这个查询所需的所有列（包括 where 子句 和 select 子句中所需的列，也就是覆盖索引）。</p></li></ul><blockquote><p>注意</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>一个索引就是一个B+树，索引让我们的查询可以快速定位和扫描到我们需要的数据记录上，加快查询的速度。</p></li><li class="lvl-2"><p>一个select查询语句在执行过程中一般最多能使用一个二级索引来加快查询，即使在where条件中用了多个二级索引。</p></li></ul></div><h3 id="索引的代价">索引的代价</h3><ul class="lvl-0"><li class="lvl-2"><p>空间上的代价<br>这个是显而易见的，每建立一个索引都要为它建立一棵B+树，每一棵B+树的每一个节点都是一个数据页，一个页默认会占用16KB的存储空间，一棵很大的B+树由许多数据页组成会占据很多的存储空间。</p></li><li class="lvl-2"><p>时间上的代价<br>每次对表中的数据进行增、删、改操作时，都需要去修改各个B+树索引。B+树每层节点都是按照索引列的值从小到大的顺序排序而组成了双向链表。<br>不论是叶子节点中的记录，还是非叶子内节点中的记录都是按照索引列的值从小到大的顺序而形成了一个单向链表。<br>而增、删、改操作可能会对节点和记录的排序造成破坏，所以存储引擎需要额外的时间进行一些记录移位，页面分裂、页面回收的操作来维护好节点和记录的排序。<br>如果我们建了许多索引，每个索引对应的B+树都要进行相关的维护操作，这必然会对性能造成影响。</p></li></ul><blockquote><p>所以，索引虽然可以加快我们的查询效率，但也不是创建的越多越好，一般来说，一张表不要超过7个索引为宜。</p></blockquote><h3 id="索引的创建与删除">索引的创建与删除</h3><ul class="lvl-0"><li class="lvl-2"><p>查看索引</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> actor;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field       <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> id          <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name        <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">45</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> update_time <span class="operator">|</span> datetime    <span class="operator">|</span> YES  <span class="operator">|</span> MUL <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------+------+-----+---------+-------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> index <span class="keyword">from</span> actor;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Table</span> <span class="operator">|</span> Non_unique <span class="operator">|</span> Key_name               <span class="operator">|</span> Seq_in_index <span class="operator">|</span> Column_name <span class="operator">|</span> <span class="keyword">Collation</span> <span class="operator">|</span> <span class="keyword">Cardinality</span> <span class="operator">|</span> Sub_part <span class="operator">|</span> Packed <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Index_type <span class="operator">|</span> Comment <span class="operator">|</span> Index_comment <span class="operator">|</span> Visible <span class="operator">|</span> Expression <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">0</span>          <span class="operator">|</span> <span class="keyword">PRIMARY</span>                <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> id          <span class="operator">|</span> A         <span class="operator">|</span> <span class="number">2</span>           <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>   <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span>      <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">0</span>          <span class="operator">|</span> unique_name_time_order <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> name        <span class="operator">|</span> D         <span class="operator">|</span> <span class="number">3</span>           <span class="operator">|</span> <span class="number">15</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">0</span>          <span class="operator">|</span> unique_name_time_order <span class="operator">|</span> <span class="number">2</span>            <span class="operator">|</span> update_time <span class="operator">|</span> A         <span class="operator">|</span> <span class="number">3</span>           <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>   <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">1</span>          <span class="operator">|</span> index_update_time      <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> update_time <span class="operator">|</span> A         <span class="operator">|</span> <span class="number">1</span>           <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>   <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">1</span>          <span class="operator">|</span> index_name             <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> name        <span class="operator">|</span> A         <span class="operator">|</span> <span class="number">3</span>           <span class="operator">|</span> <span class="number">15</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">1</span>          <span class="operator">|</span> index_name_desc        <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> name        <span class="operator">|</span> D         <span class="operator">|</span> <span class="number">3</span>           <span class="operator">|</span> <span class="number">15</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span></span><br><span class="line">参数说明：</span><br><span class="line"><span class="keyword">Table</span>: 表名称</span><br><span class="line">Non_unique: 是否为唯一索引，<span class="number">0</span>表示唯一索引，<span class="number">1</span>表示非唯一索引</span><br><span class="line">Key_name: 索引名称</span><br><span class="line">Seq_in_index: 联合索引中的字段顺序，从<span class="number">1</span>开始计算</span><br><span class="line">Column_name: 字段名称</span><br><span class="line"><span class="keyword">Collation</span>: 表示索引是升序还是降序，默认创建索引是升序A，降序为D</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>已有表索引维护</p></li></ul><blockquote><p>创建索引</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 方式<span class="number">1</span></span><br><span class="line"><span class="keyword">create</span> index index_name <span class="keyword">on</span> actor (name(<span class="number">15</span>));</span><br><span class="line"># 创建降序索引，默认升序</span><br><span class="line"><span class="keyword">create</span> index index_name_desc <span class="keyword">on</span> actor (name(<span class="number">15</span>) <span class="keyword">desc</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index unique_name <span class="keyword">on</span> actor (name(<span class="number">15</span>));</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index unique_name_time <span class="keyword">on</span> actor (name(<span class="number">15</span>),update_time);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index unique_name_time_order <span class="keyword">on</span> actor (name(<span class="number">15</span>) <span class="keyword">desc</span>,update_time <span class="keyword">asc</span>);</span><br><span class="line"></span><br><span class="line"># 方式<span class="number">2</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index_name(name(<span class="number">15</span>));</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index_name(name(<span class="number">15</span>) <span class="keyword">desc</span>);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> <span class="keyword">unique</span> index unique_name(name(<span class="number">15</span>));</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> <span class="keyword">unique</span> index unique_name_time(name(<span class="number">15</span>),update_time);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> <span class="keyword">unique</span> index unique_name_time_order(name(<span class="number">15</span>) <span class="keyword">desc</span>,update_time <span class="keyword">asc</span>);</span><br></pre></td></tr></table></figure><blockquote><p>删除索引</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 方式<span class="number">1</span></span><br><span class="line"><span class="keyword">drop</span> index index_name <span class="keyword">on</span> actor;</span><br><span class="line"><span class="keyword">drop</span> index unique_name <span class="keyword">on</span> actor;</span><br><span class="line"><span class="keyword">drop</span> index unique_name_time <span class="keyword">on</span> actor;</span><br><span class="line"></span><br><span class="line"># 方式<span class="number">2</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">drop</span> index index_name;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">drop</span> index unique_name;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">drop</span> index unique_name_time;</span><br><span class="line"># 同时删除多个索引</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">drop</span> index index1,<span class="keyword">drop</span> index index2,<span class="keyword">drop</span> index index3;</span><br></pre></td></tr></table></figure><h3 id="函数索引">函数索引</h3><ul class="lvl-0"><li class="lvl-4"><p>mysql8.0.13及以后的版本开始支持函数式索引，即创建索引的时候可以使用mysql提供的函数（不支持自定义函数）</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 注意，创建函数索引时，要在外层有一对括号，表示表达式</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index1((<span class="built_in">upper</span>(name)));</span><br><span class="line"># 前缀</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index1((<span class="built_in">upper</span>(<span class="keyword">left</span>(name,<span class="number">15</span>))));</span><br><span class="line"># 排序</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index2((<span class="built_in">upper</span>(name)) <span class="keyword">desc</span>);</span><br><span class="line"># 联合索引，函数索引<span class="operator">+</span>普通索引</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index3((<span class="built_in">upper</span>(name)) <span class="keyword">desc</span>,update_time <span class="keyword">asc</span>);</span><br><span class="line"># 联合索引，函数索引<span class="operator">+</span>函数索引</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index4((<span class="built_in">upper</span>(name)) <span class="keyword">desc</span>,(<span class="keyword">year</span>(update_time)) <span class="keyword">asc</span>);</span><br></pre></td></tr></table></figure><p><em><strong>注意查询时也要使用函数才能使用索引</strong></em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> <span class="built_in">upper</span>(name) <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key    <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> index3        <span class="operator">|</span> index3 <span class="operator">|</span> <span class="number">138</span>     <span class="operator">|</span> const <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+--------+</span></span><br></pre></td></tr></table></figure><div class="tips"><p><strong>函数索引的限制条件</strong></p><ul class="lvl-1"><li class="lvl-2">函数索引实际上是作为一个隐藏的虚拟列实现的，因此其很多限制与虚拟列相同，如下：</li><li class="lvl-2">函数索引的字段数量受到表的字段总数限制</li><li class="lvl-2">函数索引能够使用的函数与虚拟列上能够使用的函数相同</li><li class="lvl-2">子查询，参数，变量，存储过程，用户定义的函数不允许在函数索引上使用</li><li class="lvl-2">虚拟列本身不需要存储，函数索引和其他索引一样需要占用存储空间</li><li class="lvl-2">函数索引可以使用 UNIQUE  标识，但是主键不能使用函数索引，主键要求被存储，但是函数索引由于其使用的虚拟列不能被存储，因此主键不能使用函数索引</li><li class="lvl-2">如果表中没有主键，那么 InnoDB 将会使其非空的唯一索引作为主键，因此该唯一索引不能定义为函数索引</li><li class="lvl-2">函数索引不允许在外键中使用</li><li class="lvl-2">空间索引和全文索引不能定义为函数索引</li><li class="lvl-2">对于非函数的索引，如果创建相同的索引，将会有一个告警信息，而函数索引则不会</li><li class="lvl-2">如果一个字段被用于函数索引，那么删除该字段前，需要先删除该函数索引，否则删除该字段会报错</li></ul></div><ul class="lvl-0"><li class="lvl-2"><p>函数索引实际上就是mysql帮我们在表上创建了一个隐藏的虚拟列，我们也可以通过自建虚拟列，然后在该虚拟列上创建普通索引来实现相同的效果</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> actor <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> upper_name <span class="type">varchar</span>(<span class="number">15</span>) GENERATED ALWAYS <span class="keyword">AS</span> ((<span class="built_in">upper</span>(<span class="keyword">left</span>(name,<span class="number">15</span>)))) VIRTUAL;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index virtual_upper(upper_name <span class="keyword">desc</span>);</span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> upper_name <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key           <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> virtual_upper <span class="operator">|</span> virtual_upper <span class="operator">|</span> <span class="number">48</span>      <span class="operator">|</span> const <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+--------+</span></span><br><span class="line"></span><br><span class="line"># 删除虚拟列前要先删除其对应的索引</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> actor <span class="keyword">DROP</span> INDEX virtual_upper;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> actor <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> upper_name;</span><br></pre></td></tr></table></figure><h3 id="索引条件下推">索引条件下推</h3><p>什么是索引条件下推，这里举例说明:<br><code>SELECT * FROM s1 WHERE order_no &gt; 'z' AND order_no LIKE '%a';</code><br>其中的<code>order_no &gt; 'z'</code>可以使用到索引，但是 <code>order_no LIKE '%a'</code>却无法使用到索引</p><ul class="lvl-0"><li class="lvl-2"><p>在MySQL5.6之前的版本中，是按照下边步骤来执行这个查询的：<br>1、先根据 <code>order_no&gt; 'z'</code>这个条件，从二级索引 idx_order_no 中获取到对应的二级索引记录。<br>2、根据上一步骤得到的二级索引记录中的主键值进行回表(因为是 select *)，找到完整的用户记录再检测该记录是否符合 <code>key1 LIKE '%a'</code>这个条件，将符合条件的记录加入到最后的结果集。</p></li><li class="lvl-2"><p>MySQL5.6之后的版本开始支持索引下推，其执行步骤如下：<br>1、先根据 <code>order_no&gt; 'z'</code>这个条件，定位到二级索引 idx_order_no 中对应的二级索引记录。<br>2、对于指定的二级索引记录，先不着急回表，而是先检测一下该记录是否满足 <code>order_no LIKE '%a'</code>这个条件，如果这个条件不满足，则该二级索引记录压根儿就没必要回表。<br>3、对于满足 <code>order_no LIKE '%a'</code>这个条件的二级索引记录执行回表操作。</p></li><li class="lvl-2"><p>回表操作其实是一个随机 IO，比较耗时，所以上述修改可以省去很多回表操作的成本。这个改进称之为索引条件下推（英文名：ICP ，Index Condition Pushdown）。</p></li><li class="lvl-2"><p>如果在查询语句的执行过程中将要使用索引条件下推这个特性，在执行计划的 Extra 列中将会显示Using index condition</p></li></ul><h3 id="索引合并">索引合并</h3><p>过MySQL在一般情况下执行一个查询时最多只会用到单个二级索引，但存在有特殊情况下也可能在一个查询中使用到多个二级索引，MySQL中这种使用到多个索引来完成一次查询的执行方法称之为：索引合并/index merge。</p><ul class="lvl-0"><li class="lvl-2"><p>索引合并算法有如下三种：</p><ul class="lvl-2"><li class="lvl-4"><p>1.Intersection合并: 将从多个二级索引中查询到的结果取交集，某些特定的情况下才可能会使用到Intersection索引合并</p><ul class="lvl-4"><li class="lvl-6">情况一：等值匹配</li><li class="lvl-6">情况二：主键列可以是范围匹配</li></ul></li><li class="lvl-4"><p>2.Union合并: 使用不同索引的搜索条件之间使用OR连接起来的情况，某些特定的情况下才可能会使用到Union索引合并</p><ul class="lvl-4"><li class="lvl-6">情况一：等值匹配</li><li class="lvl-6">情况二：主键列可以是范围匹配</li><li class="lvl-6">情况三：使用Intersection索引合并的搜索条件</li></ul><blockquote><p>就是搜索条件的某些部分使用Intersection索引合并的方式得到的主键集合和其他方式得到的主键集合取交集，比方说这个查询： SELECT * FROM order_exp WHERE insert_time = ‘a’ AND order_status = ‘b’ AND expire_time = ‘c’ OR (order_no = ‘a’ AND expire_time = ‘b’);</p></blockquote></li><li class="lvl-4"><p>3.Sort-Union合并: 先按照二级索引记录的主键值进行排序，之后按照Union索引合并方式执行的方式称之为Sort-Union索引合并，很显然，这种Sort-Union索引合并比单纯的Union索引合并多了一步对二级索引记录的主键值排序的过程</p></li></ul></li></ul><h2 id="ONLY-FULL-GROUP-BY">ONLY_FULL_GROUP_BY</h2><ul class="lvl-0"><li class="lvl-2"><p>MySql5.7.5及以上版本将<code>sql_mode</code>的<code>ONLY_FULL_GROUP_BY</code>模式默认设置为打开状态，会导致一些错误</p></li><li class="lvl-2"><p>当使用GROUP BY查询时，出现在SELECT字段后面的只能是GROUP BY后面的分组字段，或使用聚合函数包裹着的字段，否则会报错如下信息:</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column &#x27;database.table.column&#x27; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>当使用ORDER BY查询时，不能使用SELECT DISTINCT去重查询。否则会报错如下信息:</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Expression #1 of ORDER BY clause is not in SELECT list, references column &#x27;database.table.column&#x27; which is not in SELECT list; this is incompatible with DISTINCT</span><br></pre></td></tr></table></figure><h3 id="关闭ONLY-FULL-GROUP-BY">关闭<code>ONLY_FULL_GROUP_BY</code></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"># 查询</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> version(), @<span class="variable">@sql</span>_mode;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> version() <span class="operator">|</span> @<span class="variable">@sql</span>_mode                                                                                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8.0</span><span class="number">.30</span>    <span class="operator">|</span> ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># name 不在<span class="keyword">group</span> <span class="keyword">by</span> 中，则报错</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> update_time,name,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> actor <span class="keyword">group</span> <span class="keyword">by</span> update_time;</span><br><span class="line">ERROR <span class="number">1055</span> (<span class="number">42000</span>): Expression #<span class="number">2</span> <span class="keyword">of</span> <span class="keyword">SELECT</span> list <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> clause <span class="keyword">and</span> <span class="keyword">contains</span> nonaggregated <span class="keyword">column</span> <span class="string">&#x27;test.actor.name&#x27;</span> which <span class="keyword">is</span> <span class="keyword">not</span> functionally dependent <span class="keyword">on</span> columns <span class="keyword">in</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> clause; this <span class="keyword">is</span> incompatible <span class="keyword">with</span> sql_mode<span class="operator">=</span>only_full_group_by</span><br><span class="line"></span><br><span class="line"># name 在<span class="keyword">group</span> <span class="keyword">by</span>中时，查询正常</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> update_time,name,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> actor <span class="keyword">group</span> <span class="keyword">by</span> update_time,name;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"><span class="operator">|</span> update_time         <span class="operator">|</span> name <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2017</span><span class="number">-12</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">27</span>:<span class="number">18</span> <span class="operator">|</span> a    <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2017</span><span class="number">-12</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">27</span>:<span class="number">18</span> <span class="operator">|</span> b    <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2017</span><span class="number">-12</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">27</span>:<span class="number">18</span> <span class="operator">|</span> c    <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">DISTINCT</span> 和 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 查询时报错</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">DISTINCT</span>(t.name) <span class="keyword">FROM</span> tbl_test t <span class="keyword">where</span> t.id <span class="operator">=</span> <span class="number">28</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> t.create_time <span class="keyword">desc</span> LIMIT <span class="number">6</span>;</span><br><span class="line">(<span class="number">3065</span>, &quot;Expression #1 of ORDER BY clause is not in SELECT list, references column &#x27;testdb.t.create_time&#x27; which is not in SELECT list; this is incompatible with DISTINCT&quot;)</span><br><span class="line"></span><br><span class="line"># 关闭ONLY_FULL_GROUP_BY</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> sql_mode<span class="operator">=</span>(<span class="keyword">SELECT</span> REPLACE(@<span class="variable">@sql</span>_mode,<span class="string">&#x27;ONLY_FULL_GROUP_BY&#x27;</span>,<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"></span><br><span class="line"># 再次查询，结果正常，注意这里name只会保留分组结果中第一条记录的值</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> update_time,name,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> actor <span class="keyword">group</span> <span class="keyword">by</span> update_time;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"><span class="operator">|</span> update_time         <span class="operator">|</span> name <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2017</span><span class="number">-12</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">27</span>:<span class="number">18</span> <span class="operator">|</span> a    <span class="operator">|</span>        <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"></span><br><span class="line"># 永久关闭</span><br><span class="line">my.cnf中[mysqld]中添加</span><br><span class="line">sql_mode <span class="operator">=</span> STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><blockquote><p>以下为sql_mode常用值的含义</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ONLY_FULL_GROUP_BY：对于GROUP BY聚合操作，如果在SELECT中的列，没有在GROUP BY中出现，那么这个SQL是不合法的，因为列不在GROUP BY从句中</span><br><span class="line">NO_AUTO_VALUE_ON_ZERO：该值影响自增长列的插入。默认设置下，插入0或NULL代表生成下一个自增长值。如果用户希望插入的值为0，而该列又是自增长的，那么这个选项就有用了。</span><br><span class="line">STRICT_TRANS_TABLES：在该模式下，如果一个值不能插入到一个事务表中，则中断当前的操作，对非事务表不做限制</span><br><span class="line">NO_ZERO_IN_DATE：在严格模式下，不允许日期和月份为零</span><br><span class="line">NO_ZERO_DATE：设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告。</span><br><span class="line">ERROR_FOR_DIVISION_BY_ZERO：在INSERT或UPDATE过程中，如果数据被零除，则产生错误而非警告。如果未给出该模式，那么数据被零除时MySQL返回NULL</span><br><span class="line">NO_AUTO_CREATE_USER：禁止GRANT创建密码为空的用户</span><br><span class="line">NO_ENGINE_SUBSTITUTION：如果需要的存储引擎被禁用或未编译，那么抛出错误。不设置此值时，用默认的存储引擎替代，并抛出一个异常</span><br><span class="line">PIPES_AS_CONCAT：将”||”视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似</span><br><span class="line">ANSI_QUOTES：启用ANSI_QUOTES后，不能用双引号来引用字符串，因为它被解释为识别符</span><br></pre></td></tr></table></figure><h2 id="用户管理">用户管理</h2><ul class="lvl-0"><li class="lvl-2"><p>创建用户并授权</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 创建用户并初始密码</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"># 修改密码</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"># 授权</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">all</span> privileges <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"># 刷新数据库</span><br><span class="line">mysql<span class="operator">&gt;</span> FLUSH PRIVILEGES;</span><br><span class="line"># 查询用户权限</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> grants <span class="keyword">for</span> username@&quot;%&quot;\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Grants <span class="keyword">for</span> username@<span class="operator">%</span>: <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span>, <span class="keyword">CREATE</span>, <span class="keyword">DROP</span>, RELOAD, SHUTDOWN, PROCESS, FILE, <span class="keyword">REFERENCES</span>, INDEX, <span class="keyword">ALTER</span>, <span class="keyword">SHOW</span> DATABASES, SUPER, <span class="keyword">CREATE</span> TEMPORARY TABLES, LOCK TABLES, <span class="keyword">EXECUTE</span>, REPLICATION SLAVE, REPLICATION CLIENT, <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>, <span class="keyword">SHOW</span> <span class="keyword">VIEW</span>, <span class="keyword">CREATE</span> ROUTINE, <span class="keyword">ALTER</span> ROUTINE, <span class="keyword">CREATE</span> <span class="keyword">USER</span>, EVENT, <span class="keyword">TRIGGER</span>, <span class="keyword">CREATE</span> <span class="keyword">TABLE</span>SPACE, <span class="keyword">CREATE</span> ROLE, <span class="keyword">DROP</span> ROLE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> `username`@`<span class="operator">%</span>`</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Grants <span class="keyword">for</span> username@<span class="operator">%</span>: <span class="keyword">GRANT</span> APPLICATION_PASSWORD_ADMIN,AUDIT_ABORT_EXEMPT,AUDIT_ADMIN,AUTHENTICATION_POLICY_ADMIN,BACKUP_ADMIN,BINLOG_ADMIN,BINLOG_ENCRYPTION_ADMIN,CLONE_ADMIN,CONNECTION_ADMIN,ENCRYPTION_KEY_ADMIN,FIREWALL_EXEMPT,FLUSH_OPTIMIZER_COSTS,FLUSH_STATUS,FLUSH_TABLES,FLUSH_USER_RESOURCES,GROUP_REPLICATION_ADMIN,GROUP_REPLICATION_STREAM,INNODB_REDO_LOG_ARCHIVE,INNODB_REDO_LOG_ENABLE,PASSWORDLESS_USER_ADMIN,PERSIST_RO_VARIABLES_ADMIN,REPLICATION_APPLIER,REPLICATION_SLAVE_ADMIN,RESOURCE_GROUP_ADMIN,RESOURCE_GROUP_USER,ROLE_ADMIN,SENSITIVE_VARIABLES_OBSERVER,SERVICE_CONNECTION_ADMIN,SESSION_VARIABLES_ADMIN,SET_USER_ID,SHOW_ROUTINE,<span class="built_in">SYSTEM_USER</span>,SYSTEM_VARIABLES_ADMIN,TABLE_ENCRYPTION_ADMIN,XA_RECOVER_ADMIN <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> `username`@`<span class="operator">%</span>`</span><br><span class="line"></span><br><span class="line"># 查询当前系统用户</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.user;</span><br><span class="line"></span><br><span class="line"># 允许远程访问</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">update</span> mysql.user <span class="keyword">set</span> host<span class="operator">=</span><span class="string">&#x27;%&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;username&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>删除用户</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 方式<span class="number">1</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;username&#x27;</span> <span class="keyword">and</span> host<span class="operator">=</span><span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> FLUSH PRIVILEGES;</span><br><span class="line"># 方式<span class="number">2</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>授予root用户<code>system_user</code>权限，否则在做一些授权操作时会提示没有权限</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="built_in">system_user</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看当前登录的用户</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">USER</span>();</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">USER</span>()         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> root<span class="variable">@localhost</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br></pre></td></tr></table></figure><h2 id="查看线程状态">查看线程状态</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 会显示用户，客户端ip，访问的数据库，执行的命令及其状态等信息</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> processlist;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----------------+--------------------+----------+---------+--------+------------------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> Id  <span class="operator">|</span> <span class="keyword">User</span>            <span class="operator">|</span> Host               <span class="operator">|</span> db       <span class="operator">|</span> Command <span class="operator">|</span> <span class="type">Time</span>   <span class="operator">|</span> State                  <span class="operator">|</span> Info             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----------------+--------------------+----------+---------+--------+------------------------+------------------+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">5</span> <span class="operator">|</span> event_scheduler <span class="operator">|</span> localhost          <span class="operator">|</span> <span class="keyword">NULL</span>     <span class="operator">|</span> Daemon  <span class="operator">|</span> <span class="number">628889</span> <span class="operator">|</span> Waiting <span class="keyword">on</span> <span class="keyword">empty</span> queue <span class="operator">|</span> <span class="keyword">NULL</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">438</span> <span class="operator">|</span> root            <span class="operator">|</span> localhost:<span class="number">56114</span>    <span class="operator">|</span> mysql    <span class="operator">|</span> Query   <span class="operator">|</span>      <span class="number">0</span> <span class="operator">|</span> init                   <span class="operator">|</span> <span class="keyword">show</span> processlist <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">439</span> <span class="operator">|</span> root            <span class="operator">|</span> <span class="number">1.119</span><span class="number">.161</span><span class="number">.30</span>:<span class="number">53840</span> <span class="operator">|</span> novel_db <span class="operator">|</span> Sleep   <span class="operator">|</span>      <span class="number">5</span> <span class="operator">|</span>                        <span class="operator">|</span> <span class="keyword">NULL</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">440</span> <span class="operator">|</span> root            <span class="operator">|</span> <span class="number">1.119</span><span class="number">.161</span><span class="number">.30</span>:<span class="number">53849</span> <span class="operator">|</span> <span class="keyword">NULL</span>     <span class="operator">|</span> Sleep   <span class="operator">|</span>      <span class="number">5</span> <span class="operator">|</span>                        <span class="operator">|</span> <span class="keyword">NULL</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----------------+--------------------+----------+---------+--------+------------------------+------------------+</span></span><br><span class="line"># 或者，两者等价</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.processlist;</span><br><span class="line"></span><br><span class="line"># 查看每个客户端连接数</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> id,client_ip,<span class="built_in">count</span>(client_ip) <span class="keyword">as</span> client_num <span class="keyword">from</span> (<span class="keyword">select</span> substring_index(host,<span class="string">&#x27;:&#x27;</span> ,<span class="number">1</span>) <span class="keyword">as</span> client_ip,id <span class="keyword">from</span> information_schema.processlist ) <span class="keyword">as</span> connect_info <span class="keyword">group</span> <span class="keyword">by</span> client_ip <span class="keyword">order</span> <span class="keyword">by</span> client_num <span class="keyword">desc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+--------------+------------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> client_ip    <span class="operator">|</span> client_num <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+--------------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">440</span> <span class="operator">|</span> <span class="number">1.119</span><span class="number">.161</span><span class="number">.30</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">5</span> <span class="operator">|</span> localhost    <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+--------------+------------+</span></span><br><span class="line"></span><br><span class="line"># 找出所有执行时间超过 <span class="number">5</span> 分钟的线程，拼凑出 kill 语句，方便后面查杀</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> concat(<span class="string">&#x27;kill &#x27;</span>, id, <span class="string">&#x27;;&#x27;</span>) <span class="keyword">from</span> information_schema.processlist <span class="keyword">where</span> Command <span class="operator">!=</span> <span class="string">&#x27;Sleep&#x27;</span> <span class="keyword">and</span> <span class="type">Time</span> <span class="operator">&gt;</span> <span class="number">300</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="type">Time</span> <span class="keyword">desc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="operator">|</span> concat(<span class="string">&#x27;kill &#x27;</span>, id, <span class="string">&#x27;;&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="operator">|</span> kill <span class="number">5</span>;                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"></span><br><span class="line"># 关闭连接，注意kill只能关闭当前正在执行DML的操作，DDL不能关闭</span><br><span class="line">mysql<span class="operator">&gt;</span> kill <span class="number">440</span>;</span><br></pre></td></tr></table></figure><div class="note success"><p><strong>State说明</strong><br>通过<code>show processlist;</code>查看线程状态非常有用,这可以让我们很快地了解当前MySQL在进行的线程,包括线程的状态、是否锁表等，可以实时地查看SQL的执行情况，同时对一些锁表操作进行优化。<br>在一个繁忙的服务器上，可能会看到大量的不正常的状态，例如statistics正占用大量的时间。这通常表示，某个地方有异常了。<br>线程常见的状态有很多，比如:</p><ul class="lvl-0"><li class="lvl-2">statistics: 服务器正在计算统计信息以研究一个查询执行计划。如果线程长时间处于此状态，则服 务器可能是磁盘绑定执行其他工作。</li><li class="lvl-2">Creating tmp table: 该线程正在内存或磁盘上创建临时表。如果表在内存中创建但稍后转换为磁盘表，则该操作期间的状态将为 Copying to tmp table on disk</li><li class="lvl-2">Sending data: 线程正在读取和处理SELECT语句的行，并将数据发送到客户端。由于在此状态期间发生的操作往往会执行大量磁盘访问（读取），因此它通常是给定查询生命周期中运行时间最长的状态。</li><li class="lvl-2">其它状态参考：<a href="https://dev.mysql.com/doc/refman/8.0/en/general-thread-states.html">https://dev.mysql.com/doc/refman/8.0/en/general-thread-states.html</a></li></ul></div><h2 id="常用操作">常用操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> databases; 显示所有数据库</span><br><span class="line">mysql<span class="operator">&gt;</span> use dbname; 打开dbname数据库</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> tables; 显示数据库dbname中所有的表；</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">describe</span> tablename; 显示表mysql数据库中tablename表的列信息，也可以简写为 <span class="keyword">desc</span> tablename;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> tablename; 同上</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> version(); 查看数据库版本号</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> database(); 查看当前选中的数据库</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> now(); 查看数据库当前时间</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">user</span>(); 查看当前登录用户</span><br></pre></td></tr></table></figure><h2 id="表信息相关">表信息相关</h2><h3 id="查看建表语句（包括之后对表的修改）">查看建表语句（包括之后对表的修改）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> actor\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: actor</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `actor` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">45</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"># 只查看字段信息</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> actor;</span><br></pre></td></tr></table></figure><h3 id="查看表信息">查看表信息</h3><blockquote><p>方式1</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA<span class="operator">=</span><span class="string">&#x27;test_db&#x27;</span> <span class="keyword">and</span> TABLE_NAME<span class="operator">=</span><span class="string">&#x27;tbl_test_info&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">  TABLE_CATALOG: def</span><br><span class="line">   TABLE_SCHEMA: test_db</span><br><span class="line">     TABLE_NAME: tbl_test_info</span><br><span class="line">     TABLE_TYPE: BASE <span class="keyword">TABLE</span></span><br><span class="line">         ENGINE: InnoDB</span><br><span class="line">        VERSION: <span class="number">10</span></span><br><span class="line">     ROW_FORMAT: <span class="keyword">Dynamic</span></span><br><span class="line">     TABLE_ROWS: <span class="number">199</span></span><br><span class="line"> AVG_ROW_LENGTH: <span class="number">7986</span></span><br><span class="line">    DATA_LENGTH: <span class="number">1589248</span></span><br><span class="line">MAX_DATA_LENGTH: <span class="number">0</span></span><br><span class="line">   INDEX_LENGTH: <span class="number">49152</span></span><br><span class="line">      DATA_FREE: <span class="number">4194304</span></span><br><span class="line"> AUTO_INCREMENT: <span class="number">394</span></span><br><span class="line">    CREATE_TIME: <span class="number">2022</span><span class="number">-09</span><span class="number">-08</span> <span class="number">03</span>:<span class="number">52</span>:<span class="number">27</span></span><br><span class="line">    UPDATE_TIME: <span class="keyword">NULL</span></span><br><span class="line">     CHECK_TIME: <span class="keyword">NULL</span></span><br><span class="line">TABLE_COLLATION: utf8mb4_bin</span><br><span class="line">       CHECKSUM: <span class="keyword">NULL</span></span><br><span class="line"> CREATE_OPTIONS:</span><br><span class="line">  TABLE_COMMENT: 测试表</span><br></pre></td></tr></table></figure><blockquote><p>方式2</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> use test_db;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">table</span> status <span class="keyword">like</span> <span class="string">&#x27;tbl_test_info&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           Name: tbl_test_info</span><br><span class="line">         Engine: InnoDB</span><br><span class="line">        Version: <span class="number">10</span></span><br><span class="line">     Row_format: <span class="keyword">Dynamic</span></span><br><span class="line">           <span class="keyword">Rows</span>: <span class="number">199</span></span><br><span class="line"> Avg_row_length: <span class="number">7986</span></span><br><span class="line">    Data_length: <span class="number">1589248</span></span><br><span class="line">Max_data_length: <span class="number">0</span></span><br><span class="line">   Index_length: <span class="number">49152</span></span><br><span class="line">      Data_free: <span class="number">4194304</span></span><br><span class="line"> Auto_increment: <span class="number">394</span></span><br><span class="line">    Create_time: <span class="number">2022</span><span class="number">-09</span><span class="number">-08</span> <span class="number">03</span>:<span class="number">52</span>:<span class="number">27</span></span><br><span class="line">    Update_time: <span class="keyword">NULL</span></span><br><span class="line">     Check_time: <span class="keyword">NULL</span></span><br><span class="line">      <span class="keyword">Collation</span>: utf8mb4_bin</span><br><span class="line">       Checksum: <span class="keyword">NULL</span></span><br><span class="line"> Create_options:</span><br><span class="line">        Comment: 测试表</span><br></pre></td></tr></table></figure><h3 id="查看表字段信息">查看表字段信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 方式<span class="number">1</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">full</span> columns <span class="keyword">from</span> test_db.tbl_test_info;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+-------------+------+-----+-------------------+-----------------------------------------------+---------------------------------+-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> Field       <span class="operator">|</span> Type         <span class="operator">|</span> <span class="keyword">Collation</span>   <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span>           <span class="operator">|</span> Extra                                         <span class="operator">|</span> Privileges                      <span class="operator">|</span> Comment                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+-------------+------+-----+-------------------+-----------------------------------------------+---------------------------------+-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> id          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> auto_increment                                <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 主键                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> source_id   <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> MUL <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 来源id                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> source      <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 来源，<span class="number">1</span>：百度           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name        <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> utf8mb4_bin <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 分类                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name_cn     <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> utf8mb4_bin <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 分类<span class="operator">-</span>中文                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> age         <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> utf8mb4_bin <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 适合的年龄段                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bookNum     <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>                 <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 该分类下小说的数量          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> create_time <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> DEFAULT_GENERATED                             <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 创建时间                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> update_time <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> DEFAULT_GENERATED <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 更新时间                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+-------------+------+-----+-------------------+-----------------------------------------------+---------------------------------+-----------------------------+</span></span><br><span class="line"></span><br><span class="line"># 方式<span class="number">2</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> COLUMN_NAME 列名, COLUMN_TYPE 数据类型,DATA_TYPE 字段类型,CHARACTER_MAXIMUM_LENGTH 长度,IS_NULLABLE 是否为空,COLUMN_DEFAULT 默认值,COLUMN_COMMENT 备注 ,column_key 约束 <span class="keyword">from</span> information_schema.columns  <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;test_db&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;tbl_test_info&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+--------------+--------+--------------+-------------------+-----------------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> 列名        <span class="operator">|</span> 数据类型     <span class="operator">|</span> 字段类型     <span class="operator">|</span> 长度   <span class="operator">|</span> 是否为空     <span class="operator">|</span> 默认值            <span class="operator">|</span> 备注                        <span class="operator">|</span> 约束   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+--------------+--------+--------------+-------------------+-----------------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> id          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 主键                        <span class="operator">|</span> PRI    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> source_id   <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 来源id                      <span class="operator">|</span> MUL    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> source      <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 来源，<span class="number">1</span>：百度           <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name        <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> <span class="type">varchar</span>      <span class="operator">|</span>    <span class="number">100</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 分类                        <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name_cn     <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> <span class="type">varchar</span>      <span class="operator">|</span>    <span class="number">100</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 分类<span class="operator">-</span>中文                   <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> age         <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> <span class="type">varchar</span>      <span class="operator">|</span>    <span class="number">100</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 适合的年龄段                <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bookNum     <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> YES          <span class="operator">|</span> <span class="number">0</span>                 <span class="operator">|</span> 该分类下小说的数量          <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> create_time <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> 创建时间                    <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> update_time <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> 更新时间                    <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+--------------+--------+--------------+-------------------+-----------------------------+--------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="基于其它表创建新的表">基于其它表创建新的表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 只创建表结构，完整表结构</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> table_new <span class="keyword">like</span> table_old;</span><br><span class="line"># 将老表数据导入新表，要求新表和老表的表结构必须一模一样</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> table_new <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_old;</span><br><span class="line"># 将老表数据导入新表，自己关联新表和老表的字段</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> table_new(字段<span class="number">1</span>,字段<span class="number">2</span>,…….) <span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2</span>,…….  <span class="keyword">from</span> table_old;</span><br><span class="line"># 清空表数据</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">truncate</span> <span class="keyword">table</span> table_new;</span><br><span class="line"># 删除表</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> table_new;</span><br><span class="line"></span><br><span class="line"># 创建新表的同时将老表数据导入，这种建表方式不会创建索引，不推荐使用</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> table_new <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_old;</span><br><span class="line"># 只会创建表结构，同样不会创建索引等信息</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> table_new <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_old <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="系统变量">系统变量</h2><p>可以设置在配置文件中，也可以通过set命令进行设置</p><div class="note success"><p>mysql配置文件中大部分变量都可以通过set命令设置，注意重启mysql后会失效，要及时更新配置文件</p></div><ul class="lvl-0"><li class="lvl-2"><p>设置变量示例</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 查看全部全局变量</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables\G</span><br><span class="line"></span><br><span class="line"># 查看指定变量，如wait_timeout，也可以使用<span class="operator">%</span>进行模糊匹配</span><br><span class="line"># 默认<span class="number">8</span>小时，客户端超过这个时间没有向服务端发送命令，服务器端会自动断开连接</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> &quot;wait_timeout&quot;;</span><br><span class="line"># 定值查询可以使用如下<span class="keyword">sql</span>形式</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@wait</span>_timeout;</span><br><span class="line"># 模糊匹配</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%log_bin%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># 设置全局变量，只要mysql不重启就会一直有效，注意，客户端需要重新连接才能生效</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">global</span> wait_timeout<span class="operator">=</span><span class="number">288000</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> @<span class="variable">@global</span>.wait_timeout<span class="operator">=</span><span class="number">288000</span>;</span><br><span class="line"></span><br><span class="line"># 当前会话有效</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> session wait_timeout<span class="operator">=</span><span class="number">288000</span>;</span><br><span class="line"># 当前会话可简写为如下形式</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> wait_timeout<span class="operator">=</span><span class="number">288000</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>MySQL 8.0 版本支持在线修改全局参数持久化，通过加上 <code>PERSIST</code> 关键字，可以将调整持久化到新的配置文件中，再次重启 db 还可以应用到最新的参数。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist max_connections<span class="operator">=</span><span class="number">300</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>这种方式并不会修改mysql的配置文件，而是在datadir路径下创建一个<code>mysqld-auto.cnf</code>文件，在数据库启动时，会首先读取它配置文件，最后才读取mysqld-auto.cnf文件。不要手工修改这个文件。</p></li></ul>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more mysqld-auto.cnf</span><br><span class="line">&#123;<span class="string">&quot;Version&quot;</span>: 2, <span class="string">&quot;mysql_dynamic_parse_early_variables&quot;</span>: &#123;<span class="string">&quot;max_connections&quot;</span>: &#123;<span class="string">&quot;Value&quot;</span>: <span class="string">&quot;300&quot;</span>, <span class="string">&quot;Metadata&quot;</span>: &#123;<span class="string">&quot;Host&quot;</span>: <span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;User&quot;</span>: <span class="string">&quot;root&quot;</span>, <span class="string">&quot;Timestamp&quot;</span>: 1665567597776824&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>可手动删除mysqld-auto.cnf文件或将<code>persisted_globals_load</code>变量设置为off来避免该文件的加载。</p></li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;persisted_globals_load&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name          <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> persisted_globals_load <span class="operator">|</span> <span class="keyword">ON</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>持久化为默认值: 全局变量持久化为默认值。注意，是默认值，而不是修改前的值</p></li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist max_connections<span class="operator">=</span><span class="keyword">default</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>清空持久化变量: 只会清空mysqld-auto.cnf中的配置，不会改变已经持久化的变量值</p></li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> reset persist;</span><br></pre></td></tr></table></figure>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more mysqld-auto.cnf</span><br><span class="line">&#123;<span class="string">&quot;Version&quot;</span>: 2&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>修改只读变量，对于read only的参数，修改参数后需要重启才能生效</p></li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist innodb_log_file_size<span class="operator">=</span><span class="number">2073741824</span>;</span><br><span class="line">ERROR <span class="number">1238</span> (HY000): Variable <span class="string">&#x27;innodb_log_file_size&#x27;</span> <span class="keyword">is</span> a read <span class="keyword">only</span> variable</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist_only innodb_log_file_size<span class="operator">=</span><span class="number">2073741824</span>;</span><br><span class="line">ERROR <span class="number">3630</span> (<span class="number">42000</span>): Access denied; you need SYSTEM_VARIABLES_ADMIN <span class="keyword">and</span> PERSIST_RO_VARIABLES_ADMIN privileges <span class="keyword">for</span> this operation</span><br><span class="line"># 先授权</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> SYSTEM_VARIABLES_ADMIN,PERSIST_RO_VARIABLES_ADMIN <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist_only innodb_log_file_size<span class="operator">=</span><span class="number">2073741824</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_log_file_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name        <span class="operator">|</span> <span class="keyword">Value</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> innodb_log_file_size <span class="operator">|</span> <span class="number">268435456</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-----------+</span></span><br></pre></td></tr></table></figure>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more mysqld-auto.cnf</span><br><span class="line">&#123;<span class="string">&quot;Version&quot;</span>: 2, <span class="string">&quot;mysql_static_variables&quot;</span>: &#123;<span class="string">&quot;innodb_log_file_size&quot;</span>: &#123;<span class="string">&quot;Value&quot;</span>: <span class="string">&quot;2073741824&quot;</span>, <span class="string">&quot;Metadata&quot;</span>: &#123;<span class="string">&quot;Host&quot;</span>: <span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;User&quot;</span>: <span class="string">&quot;root&quot;</span>, <span class="string">&quot;Timestamp&quot;</span>: 1665568764002942&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="mysql中的数据类型对应java实体数据类型">mysql中的数据类型对应java实体数据类型</h2><ul class="lvl-0"><li class="lvl-2"><p>数值类型</p></li></ul><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">java类型</th><th style="text-align:left">大小</th><th style="text-align:left">范围（有符号）</th><th style="text-align:left">范围（无符号）</th><th style="text-align:left">用途</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">TINYINT</td><td style="text-align:left">Boolean/int/Integer</td><td style="text-align:left">1 字节</td><td style="text-align:left">(-128, 127)</td><td style="text-align:left">(0, 255)</td><td style="text-align:left">小整数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">SMALLINT</td><td style="text-align:left">int/Integer</td><td style="text-align:left">2 字节</td><td style="text-align:left">(-32768, 32767)</td><td style="text-align:left">(0, 65535)</td><td style="text-align:left">大整数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">MEDIUMINT</td><td style="text-align:left">int/Integer</td><td style="text-align:left">3 字节</td><td style="text-align:left">(-8388608, 8388607)</td><td style="text-align:left">(0, 16777215)</td><td style="text-align:left">大整数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">INT或 INTEGER</td><td style="text-align:left">int/Integer/Long</td><td style="text-align:left">4 字节</td><td style="text-align:left">(-2147483648, 2147483647)</td><td style="text-align:left">(0, 4294967295)</td><td style="text-align:left">大整数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">BIGINT</td><td style="text-align:left">int/Integer/Long/BigInteger</td><td style="text-align:left">8 字节</td><td style="text-align:left">(-9233372036854775808, 9223372036854775807)</td><td style="text-align:left">(0, 18446744073709551615)</td><td style="text-align:left">极大整数值</td><td style="text-align:left">BigInteger最大值没有限制，内部是int[]数组，缺点是速度慢</td></tr><tr><td style="text-align:left">FLOAT</td><td style="text-align:left">float/Float</td><td style="text-align:left">4 字节</td><td style="text-align:left">(-3.402823466E+38, -1.175494351E-38)，0，(1.175494351E-38，3.402823466351E+38)</td><td style="text-align:left">0, (1.175494351E-38, 3.402823466E+38)</td><td style="text-align:left">单精度 浮点数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DOUBLE</td><td style="text-align:left">double/Double</td><td style="text-align:left">8 字节</td><td style="text-align:left">(-1.7976931348623157E+308, -2.2250738585072014E-308), 0, (2.2250738585072014E-308, 1.7976931348623157E+308)</td><td style="text-align:left">0, (2.2250738585072014E-308, 1.7976931348623157E+308)</td><td style="text-align:left">双精度 浮点数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DECIMAL</td><td style="text-align:left">BigDecimal</td><td style="text-align:left">对DECIMAL(M,D)如果M&gt;D,为M+2否则为D+2</td><td style="text-align:left">依赖于M和D的值</td><td style="text-align:left">依赖于M和D的值</td><td style="text-align:left">高精度小数值</td><td style="text-align:left">用于货币计算等高精度场景</td></tr></tbody></table><blockquote><p>优化建议</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果整形数据没有负数，如ID号，建议指定为UNSIGNED无符号类型，容量可以扩大一倍。</span><br><span class="line">建议使用TINYINT代替ENUM、BITENUM、SET。</span><br><span class="line">避免使用整数的显示宽度，也就是说，不要用INT(10)类似的方法指定字段显示宽度，直接用INT。</span><br><span class="line">DECIMAL最适合保存准确度要求高，而且用于计算的数据，比如价格。但是在使用DECIMAL类型的时候，注意长度设置。</span><br><span class="line">建议使用整形类型来运算和存储实数，方法是，实数乘以相应的倍数后再操作。</span><br><span class="line">整数通常是最佳的数据类型，因为它速度快，并且能使用AUTO_INCREMENT。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>日期和时间</p></li></ul><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">java类型</th><th style="text-align:left">大小</th><th style="text-align:left">范围（有符号）</th><th style="text-align:left">范围（无符号）</th><th style="text-align:left">用途</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">DATE</td><td style="text-align:left">Date/LocalDate</td><td style="text-align:left">3</td><td style="text-align:left">1000-01-01 到 9999-12-31</td><td style="text-align:left">YYYY-MM-DD</td><td style="text-align:left">日期值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">TIME</td><td style="text-align:left">Date/LocalDateTime</td><td style="text-align:left">3</td><td style="text-align:left">‘-838:59:59’ 到 ‘838:59:59’</td><td style="text-align:left">HH:MM:SS</td><td style="text-align:left">时间值或持续时间</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">YEAR</td><td style="text-align:left">Date</td><td style="text-align:left">1</td><td style="text-align:left">1901 到 2155</td><td style="text-align:left">YYYY</td><td style="text-align:left">年份值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DATETIME</td><td style="text-align:left">Date/LocalDateTime</td><td style="text-align:left">8</td><td style="text-align:left">1000-01-01 00:00:00 到 9999-12-31 23:59:59</td><td style="text-align:left">YYYY-MM-DD HH:MM:SS</td><td style="text-align:left">混合日期和时间值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">TIMESTAMP</td><td style="text-align:left">Date/LocalDateTime</td><td style="text-align:left">4</td><td style="text-align:left">1970-01-01 00:00:00 到 2038-01-19 03:14:07</td><td style="text-align:left">YYYYMMDDhhmmss</td><td style="text-align:left">混合日期和时间值，时间戳</td><td style="text-align:left"></td></tr></tbody></table><blockquote><p>优化建议</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TIME 类型的取值范围为 -838：59：59～838：59：59，小时部分如此大的原因是TIME类型不仅可以用于表示一天的时间，还可能是某个事件过去的时间或两个事件之间的时间间隔（可大于 24 小时，或者甚至为负）。</span><br><span class="line">MySQL能存储的最小时间粒度为秒。</span><br><span class="line">建议用DATE数据类型来保存日期。MySQL中默认的日期格式是yyyy-mm-dd。</span><br><span class="line">用MySQL的内建类型DATE、TIME、DATETIME来存储时间，而不是使用字符串。</span><br><span class="line">当数据格式为TIMESTAMP和DATETIME时，可以用CURRENT_TIMESTAMP作为默认（MySQL5.6以后）， MySQL会自动返回记录插入的确切时间。</span><br><span class="line">TIMESTAMP是UTC时间戳，与时区相关。</span><br><span class="line">DATETIME的存储格式是一个YYYYMMDD HH:MM:SS的整数，与时区无关，你存了什么，读出来就是什么。</span><br><span class="line">除非有特殊需求，一般的公司建议使用TIMESTAMP，它比DATETIME更节约空间，但是像阿里这样的公司一般 会用DATETIME，因为不用考虑TIMESTAMP将来的时间上限问题。</span><br><span class="line">有时人们把Unix的时间戳保存为整数值，但是这通常没有任何好处，这种格式处理起来不太方便，我们并不推荐 它。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>字符串–String</p></li></ul><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">java类型</th><th style="text-align:left">大小</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left">CHAR</td><td style="text-align:left">String</td><td style="text-align:left">0-255字节</td><td style="text-align:left">定长字符串，char(n)当插入的字符串实际长度不足n时， 插入空格进行补充保存。在进行检索时，尾部的空格会被 去掉。</td></tr><tr><td style="text-align:left">VARCHAR</td><td style="text-align:left">String</td><td style="text-align:left">0-65535字节</td><td style="text-align:left">变长字符串，varchar(n)中的n代表最大列长度，插入的字符串实际长度不足n时不会补充空格</td></tr><tr><td style="text-align:left">TINYBLOB</td><td style="text-align:left">byte[]</td><td style="text-align:left">0-255字节</td><td style="text-align:left">不超过 255 个字符的二进制字符串</td></tr><tr><td style="text-align:left">TINYTEXT</td><td style="text-align:left">String</td><td style="text-align:left">0-255字节</td><td style="text-align:left">短文本字符串</td></tr><tr><td style="text-align:left">BLOB</td><td style="text-align:left">byte[]</td><td style="text-align:left">0-65535字节</td><td style="text-align:left">二进制形式的长文本数据</td></tr><tr><td style="text-align:left">TEXT</td><td style="text-align:left">String</td><td style="text-align:left">0-65535字节</td><td style="text-align:left">长文本数据</td></tr><tr><td style="text-align:left">MEDIUMBLOB</td><td style="text-align:left">byte[]</td><td style="text-align:left">0-16777215字节</td><td style="text-align:left">二进制形式的中等长度文本数据</td></tr><tr><td style="text-align:left">MEDIUMTEXT</td><td style="text-align:left">String</td><td style="text-align:left">0-16777215字节</td><td style="text-align:left">中等长度文本数据</td></tr><tr><td style="text-align:left">LONGBLOB</td><td style="text-align:left">byte[]</td><td style="text-align:left">0-4294967295字节</td><td style="text-align:left">二进制形式的极大文本数据</td></tr><tr><td style="text-align:left">LONGTEXT</td><td style="text-align:left">String</td><td style="text-align:left">0-4294967295字节</td><td style="text-align:left">极大文本数据</td></tr></tbody></table><blockquote><p>优化建议</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">字符串的长度相差较大用VARCHAR；字符串短，且所有值都接近一个长度用CHAR。</span><br><span class="line">CHAR和VARCHAR适用于包括人名、邮政编码、电话号码和不超过255个字符长度的任意字母数字组合。</span><br><span class="line">那些要用来计算的数字不要用VARCHAR类型保存，因为可能会导致一些与计算相关的问题。换句话说，可能影响到计算的准确性和完整性。</span><br><span class="line">尽量少用BLOB和TEXT，如果实在要用可以考虑将BLOB和TEXT字段单独存一张表，用id关联。</span><br><span class="line">BLOB系列存储二进制字符串，与字符集无关。TEXT系列存储非二进制字符串，与字符集相关。</span><br><span class="line">BLOB和TEXT都不能有默认值。</span><br></pre></td></tr></table></figure><h2 id="数据库导出与导入">数据库导出与导入</h2><h3 id="全量导出">全量导出</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建库、建表和数据语句</span></span><br><span class="line">mysqldump -uroot --all-databases --triggers --routines --events -p &gt; all_databases.sql</span><br></pre></td></tr></table></figure><h3 id="导出指定数据库">导出指定数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建表和数据语句</span></span><br><span class="line">mysqldump -uroot -p DB1 &gt; DB1.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包含建库、建表和数据语句</span></span><br><span class="line">mysqldump -uroot -p --databases DB1 DB2 &gt; databases.sql</span><br></pre></td></tr></table></figure><h3 id="导出指定数据库的指定表">导出指定数据库的指定表</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建表和数据语句</span></span><br><span class="line">mysqldump -uroot -p DB1 --tables table1 table2 &gt; tables.sql</span><br></pre></td></tr></table></figure><h3 id="导出指定数据库时排除某些表">导出指定数据库时排除某些表</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建库、建表和数据语句</span></span><br><span class="line">mysqldump -uroot -p --databases DB1 DB2 --ignore-table=DB1.table1 --ignore-table=DB2.table2 &gt; tables.sql</span><br></pre></td></tr></table></figure><h3 id="导出结构不导出数据-d">导出结构不导出数据 <code>-d</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建表语句</span></span><br><span class="line">mysqldump -uroot -p -d DB1 --tables table1 table2 &gt; tables.sql</span><br></pre></td></tr></table></figure><h3 id="导出数据不导出结构-t">导出数据不导出结构 <code>-t</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含数据语句</span></span><br><span class="line">mysqldump -uroot -p -t DB1 --tables table1 table2 &gt; tables.sql</span><br></pre></td></tr></table></figure><h3 id="导入数据">导入数据</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p &lt; all_databases.sql</span><br><span class="line">mysql -uroot -p &lt; databases.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># -D指定要导入的数据库，此时数据库必须先创建好</span></span><br><span class="line">mysql -uroot -p -Dbdname &lt; DB1.sql</span><br><span class="line">mysql -uroot -p -Dbdname &lt; tables.sql</span><br></pre></td></tr></table></figure><h2 id="导入导出CSV">导入导出CSV</h2><h3 id="导出CSV">导出CSV</h3><ul class="lvl-0"><li class="lvl-2"><p>需要先开通导出权限，默认关闭</p><ul class="lvl-2"><li class="lvl-4"><code>secure_file_prive=null</code> 限制mysql不允许导出，默认值</li><li class="lvl-4"><code>secure_file_priv=/path/</code> 限制mysql的导出只能发生在默认的/path/目录下</li><li class="lvl-4"><code>secure_file_priv=&quot;&quot;</code> 不对mysql的导出做限制，可以导出到任意目录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;secure_file_priv&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> secure_file_priv <span class="operator">|</span>  <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-4">这是一个只读变量，需要修改mysql的配置文件，这里我们设置为<code>secure_file_priv=&quot;&quot;</code></li></ul></li><li class="lvl-2"><p>命令行执行导出</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p DBName tableName --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> --tab=/mysqldump_dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明：</span></span><br><span class="line">--fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span>：每个字段以空字符结尾。</span><br><span class="line">--fields-terminated-by=<span class="string">&#x27;,&#x27;</span>：字段间以逗号分隔。</span><br><span class="line">--lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span>：以回车符为每行的结束。</span><br><span class="line">--tab=/mysqldump_dir：生成文件的路径，确保有写权限</span><br><span class="line">生成的文件包含两个，一个是数据文件：tableName.txt，一个是建表语句：tableName.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果同时导出多张表，则也会分别生成相应的2个文件。</span></span><br><span class="line">mysqldump -uroot -p DBName table1 table2 --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> --tab=/mysqldump_dir</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>sql执行导出</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 导出全部字段</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tableName <span class="keyword">into</span> outfile <span class="string">&#x27;/mysqldump_dir/tableName.csv&#x27;</span> fields terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span>  ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;&quot;&#x27;</span> lines terminated <span class="keyword">by</span> <span class="string">&#x27;\r\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># 导出部分字段</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2</span> <span class="keyword">from</span> tableName <span class="keyword">into</span> outfile <span class="string">&#x27;/mysqldump_dir/tableName.csv&#x27;</span> fields terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span>  ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;&quot;&#x27;</span> lines terminated <span class="keyword">by</span> <span class="string">&#x27;\r\n&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这种方式只会导出数据文件，同时可以指定要导出的字段</p><h3 id="导入CSV">导入CSV</h3><ul class="lvl-0"><li class="lvl-2"><p>需要先开通导入权限，默认关闭</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;local_infile&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> local_infile  <span class="operator">|</span> OFF   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"># 开通</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">GLOBAL</span> local_infile<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>mysql</code>和<code>mysqld</code>都需要配置开通，不要配置到<code>client</code>下，因为只有<code>mysql</code>命令支持该参数</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">local_infile=ON</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">local_infile=ON</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>命令行导入<br><strong>此方法要求文件名称&quot;table1.csv&quot;必须为表名称&quot;table1&quot;</strong></p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysqlimport --<span class="built_in">local</span> -uroot -p DBName -i --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> ./table1.csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line">-L, --<span class="built_in">local</span> : 读取的所有文件都是基于执行命令时所在的客户端。</span><br><span class="line">-i, --ignore  :如果唯一索引重复则忽略后面的数据， 如果希望覆盖前面的数据，需要使用 -r 参数，两个参数不能同时出现。</span><br><span class="line">--fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span>：每个字段以空字符结尾。</span><br><span class="line">--fields-terminated-by=<span class="string">&#x27;,&#x27;</span>：字段间以逗号分隔。</span><br><span class="line">--lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span>：以回车符为每行的结束。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时由于没有指定数据与字段对应方式，所以默认按表中字段顺序导入，如果要指定导入的字段，需要增加 --columns 参数，逗号分隔</span></span><br><span class="line">mysqlimport --<span class="built_in">local</span> -uroot -p DBName -i --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> --columns=字段1,字段2,字段3 ./table1.csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果数据文件中的头部有title，可以指定忽略掉头部的几行，--ignore-lines=1：忽略掉第一行。</span></span><br><span class="line">mysqlimport --<span class="built_in">local</span> -uroot -p DBName -i --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> --ignore-lines=1 ./table1.csv</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>sql执行导入<br><strong>此方法不要求文件名称与表名称一致</strong></p></li></ul><div class="warning"><p><strong>警告⚠️</strong><br>明明配置文件中已经配置了<code>local_infile=ON</code>，但是通过sql执行<code>load data local infile</code>时还是会报错呢？<br>这就说明客户端运行时没有找到默认的配置文件，所以还是建议把<code>my.cnf</code>放到<code>/etc</code>目录下吧<br><em><strong>也可以在登录时加上<code>--local-infile</code></strong></em></p></div><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p --local-infile</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; load data local infile &#x27;~/file.csv&#x27; ignore into table table1 FIELDS TERMINATED BY &#x27;,&#x27; ENCLOSED BY &#x27;&quot;&#x27; LINES TERMINATED BY &#x27;\r\n&#x27;;</span><br><span class="line"></span><br><span class="line"># 跳过表头</span><br><span class="line">mysql&gt; load data local infile &#x27;~/file.csv&#x27; ignore into table table1 FIELDS TERMINATED BY &#x27;,&#x27; ENCLOSED BY &#x27;&quot;&#x27; LINES TERMINATED BY &#x27;\r\n&#x27; ignore 1 lines;</span><br><span class="line"></span><br><span class="line"># 指定字段</span><br><span class="line">mysql&gt; load data local infile &#x27;~/file.csv&#x27; ignore into table table1 FIELDS TERMINATED BY &#x27;,&#x27; ENCLOSED BY &#x27;&quot;&#x27; LINES TERMINATED BY &#x27;\r\n&#x27; ignore 1 lines (字段1,字段2,字段3);</span><br><span class="line"></span><br><span class="line">#参数说明：</span><br><span class="line">ignore : 如果唯一索引重复则忽略后面的数据， 如果希望覆盖前面的数据，需要使用 replace 参数，两个参数不能同时出现。</span><br><span class="line">ignore 1 lines : 忽略开头的行数</span><br><span class="line">(字段1,字段2,字段3) : 关联的字段顺序</span><br></pre></td></tr></table></figure><h2 id="mysql时区">mysql时区</h2><ul class="lvl-0"><li class="lvl-2"><p>查看当前mysql时区</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">SYSTEM</span>表示使用系统时区</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@global</span>.time_zone, @<span class="variable">@session</span>.time_zone;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@global</span>.time_zone <span class="operator">|</span> @<span class="variable">@session</span>.time_zone <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">SYSTEM</span>             <span class="operator">|</span> <span class="keyword">SYSTEM</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%time_zone%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> system_time_zone <span class="operator">|</span> UTC    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> time_zone        <span class="operator">|</span> <span class="keyword">SYSTEM</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>查看系统时区</p></li></ul>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜ <span class="built_in">date</span> +<span class="string">&quot;%Z %z&quot;</span></span><br><span class="line">UTC +0000</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>设置时区</p><ul class="lvl-2"><li class="lvl-4">临时设置</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> now()</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">08</span>:<span class="number">38</span>:<span class="number">03</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> time_zone<span class="operator">=</span><span class="string">&#x27;+08:00&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@global</span>.time_zone, @<span class="variable">@session</span>.time_zone;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@global</span>.time_zone <span class="operator">|</span> @<span class="variable">@session</span>.time_zone <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">SYSTEM</span>             <span class="operator">|</span> <span class="operator">+</span><span class="number">08</span>:<span class="number">00</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%time_zone%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> system_time_zone <span class="operator">|</span> UTC    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> time_zone        <span class="operator">|</span> <span class="operator">+</span><span class="number">08</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> now()</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">16</span>:<span class="number">38</span>:<span class="number">29</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-4">永久设置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">修改配置文件 /etc/my.cnf</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># 设置时区，默认系统时区</span></span><br><span class="line">default-time-zone=<span class="string">&#x27;+08:00&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT @@global.time_zone, @@session.time_zone;</span><br><span class="line">+--------------------+---------------------+</span><br><span class="line">| @@global.time_zone | @@session.time_zone |</span><br><span class="line">+--------------------+---------------------+</span><br><span class="line">| +08:00             | +08:00              |</span><br><span class="line">+--------------------+---------------------+</span><br><span class="line"></span><br><span class="line">show variables like <span class="string">&#x27;%time_zone%&#x27;</span>;</span><br><span class="line">+------------------+--------+</span><br><span class="line">| Variable_name    | Value  |</span><br><span class="line">+------------------+--------+</span><br><span class="line">| system_time_zone | UTC    |</span><br><span class="line">| time_zone        | +08:00 |</span><br><span class="line">+------------------+--------+</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>客户端连接时也要设置时区<code>serverTimezone=Asia/Shanghai</code></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MySql知识点介绍:执行计划相关、索引相关、用户管理、线程状态、常用操作、表信息相关、系统变量、mysql中的数据类型对应java实体数据类型、数据库导出与导入，等等&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;，&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Springboot-JPA之AOP保存历史记录</title>
    <link href="https://blog.hanqunfeng.com/2022/09/23/springboot-data-jpa-aop-history/"/>
    <id>https://blog.hanqunfeng.com/2022/09/23/springboot-data-jpa-aop-history/</id>
    <published>2022-09-23T13:30:05.000Z</published>
    <updated>2022-09-26T07:27:29.555Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">业务中有这么个需求，就是需要记录每条记录的历史，并要记录该记录变更的时间和操作人，即每条记录的新增、修改和删除都要记录</li></ul><span id="more"></span><h2 id="业务分析">业务分析</h2><ul class="lvl-0"><li class="lvl-2"><p>1.业务系统架构基于springboot，并采用springboot-jpa的方式处理数据</p></li><li class="lvl-2"><p>2.业务系统中部分表设计之初并没有变更时间和操作人字段</p></li><li class="lvl-2"><p>3.业务系统已经运行一段时间，很多功能已经开发完成，不适合采用侵入代码的形式进行修改</p></li><li class="lvl-2"><p>4.系统并发量不大</p></li></ul><h2 id="解决方案">解决方案</h2><ul class="lvl-0"><li class="lvl-2"><p>基于对业务系统的分析，决定采用AOP的方式在每次记录变更的同时保存记录流水</p></li><li class="lvl-2"><p>因为采用springboot-jpa的方式处理数据，所以可以将切入点设置在类似<code>CrudRepository</code>的修改记录的方法上</p></li></ul><h2 id="具体实现">具体实现</h2><ul class="lvl-0"><li class="lvl-2"><p><code>DataHistoryAspect.java</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqf.support;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.hanqf.utils.CP_ClassUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.ArrayUtils;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.AfterReturning;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.StreamSupport;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;历史数据保存拦截器&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2022/9/20 16:11.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 说明：</span></span><br><span class="line"><span class="comment"> *   1.以关系型数据库为例</span></span><br><span class="line"><span class="comment"> *   2.所有Entity都要有唯一主键<span class="doctag">@Id</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataHistoryAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不需要保存历史数据的表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] IGNORE_TABLES = &#123;<span class="string">&quot;tbl_cp_logger&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增和修改</span></span><br><span class="line"><span class="comment">     * CrudRepository 针对关系型数据库（mysql,oracle等），Mongo，ES等等</span></span><br><span class="line"><span class="comment">     * JpaRepository  只针对关系型数据库（mysql,oracle等）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * &lt;S extends T&gt; S save(S entity);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.save(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">savePointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * &lt;S extends T&gt; S saveAndFlush(S entity);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.saveAndFlush(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAndFlushPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * &lt;S extends T&gt; List&lt;S&gt; saveAll(Iterable&lt;S&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.saveAll(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAllPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * &lt;S extends T&gt; List&lt;S&gt; saveAllAndFlush(Iterable&lt;S&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.saveAllAndFlush(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAllAndFlushPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     * CrudRepository 针对关系型数据库（mysql,oracle等），Mongo，ES等等</span></span><br><span class="line"><span class="comment">     * JpaRepository  只针对关系型数据库（mysql,oracle等）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void deleteById(ID id);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteById(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteByIdPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void deleteAllById(Iterable&lt;? extends ID&gt; ids);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAllById(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllByIdPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void deleteAll(Iterable&lt;? extends T&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAll(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllIterablePointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void delete();</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.delete(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deletePointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void deleteAll();</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAll())&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * void deleteAllInBatch();</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAllInBatch())&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllInBatchPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * void deleteAllInBatch(Iterable&lt;T&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAllInBatch(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllInBatchIterablePointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * void deleteAllInBatch(Iterable&lt;T&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAllByIdInBatch(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllByIdInBatchPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;savePointCut() || saveAndFlushPointCut()&quot;, returning = &quot;result&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAfterReturning</span><span class="params">(JoinPoint joinPoint, Object result)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect afterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">model</span> <span class="operator">=</span> result;</span><br><span class="line">            Class&lt;?&gt; modelClass = model.getClass();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">dataId</span> <span class="operator">=</span> String.valueOf(CP_ClassUtil.getFieldValue(model, CP_ClassUtil.getField(modelClass, Id.class)));</span><br><span class="line">                makeHistory(methodName, objectMapper.writeValueAsString(model), table.name(), dataId);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;saveAllPointCut() || saveAllAndFlushPointCut()&quot;, returning = &quot;result&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAllAfterReturning</span><span class="params">(JoinPoint joinPoint, List result)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect saveAllAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">            <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                result.stream().forEach(entity -&gt; &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">dataId</span> <span class="operator">=</span> String.valueOf(CP_ClassUtil.getFieldValue(entity, CP_ClassUtil.getField(modelClass, Id.class)));</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        makeHistory(methodName, objectMapper.writeValueAsString(entity), table.name(), dataId);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;(deleteAllIterablePointCut() || deleteAllInBatchIterablePointCut()) &amp;&amp; args(entities)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllIterablePointCut</span><span class="params">(JoinPoint joinPoint, Iterable entities)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteByIdAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line">            <span class="keyword">if</span> (modelClass != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">                <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                    StreamSupport.stream(entities.spliterator(), <span class="literal">true</span>)</span><br><span class="line">                            .forEach(entity -&gt; &#123;</span><br><span class="line">                                <span class="keyword">try</span> &#123;</span><br><span class="line">                                    <span class="type">String</span> <span class="variable">dataId</span> <span class="operator">=</span> String.valueOf(CP_ClassUtil.getFieldValue(entity, CP_ClassUtil.getField(entity.getClass(), Id.class)));</span><br><span class="line">                                    makeHistory(methodName, objectMapper.writeValueAsString(entity), table.name(), dataId);</span><br><span class="line">                                &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;(deleteAllByIdPointCut() || deleteAllByIdInBatchPointCut()) &amp;&amp; args(ids)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllByIdPointCutAfterReturning</span><span class="params">(JoinPoint joinPoint, Iterable ids)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteAllByIdPointCutAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (modelClass != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">                <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                    StreamSupport.stream(ids.spliterator(), <span class="literal">true</span>)</span><br><span class="line">                            .forEach(id -&gt; makeHistory(methodName, String.valueOf(id), table.name(), String.valueOf(id)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;deleteByIdPointCut() &amp;&amp; args(id)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteByIdAfterReturning</span><span class="params">(JoinPoint joinPoint, Object id)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteByIdAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (modelClass != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">                <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                    makeHistory(methodName, String.valueOf(id), table.name(), String.valueOf(id));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;deletePointCut() &amp;&amp; args(entity)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAfterReturning</span><span class="params">(JoinPoint joinPoint, Object entity)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (modelClass != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">                <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">dataId</span> <span class="operator">=</span> String.valueOf(CP_ClassUtil.getFieldValue(entity, CP_ClassUtil.getField(modelClass, Id.class)));</span><br><span class="line">                    makeHistory(methodName, objectMapper.writeValueAsString(entity), table.name(), dataId);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;deleteAllPointCut() || deleteAllInBatchPointCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllAfterReturning</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteAllAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">            <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                makeHistory(methodName, <span class="string">&quot;deleteAll&quot;</span>, table.name(), <span class="literal">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> methodName 执行的方法名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data       操作的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName  操作的表名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataId     记录Id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeHistory</span><span class="params">(String methodName, String data, String tableName, String dataId)</span> &#123;</span><br><span class="line">       <span class="comment">//TODO</span></span><br><span class="line">       <span class="comment">//可以保存到文件，数据库或者ES</span></span><br><span class="line">       <span class="comment">//此处可以保存操作人和操作时间</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>工具类<code>CP_ClassUtil.java</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqf.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AdvisedSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AopProxy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.support.AopUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.ReflectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;类工具&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2022/9/21 10:55.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CP_ClassUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证class是否存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">classIsAvailable</span><span class="params">(String className)</span> &#123;</span><br><span class="line">        Assert.notNull(className, <span class="string">&quot;className must not be null&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> result;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = <span class="literal">null</span> != Class.forName(className);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">            result = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断类中是否包含指定的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">hasMethod</span><span class="params">(Class clazz, String methodName, Class... argsType)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(methodName, <span class="string">&quot;methodName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> ReflectionUtils.findMethod(clazz, methodName, argsType);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != method) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定类的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Method <span class="title function_">getMethod</span><span class="params">(Class clazz, String methodName, Class... argsType)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(methodName, <span class="string">&quot;methodName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> ReflectionUtils.findMethod(clazz, methodName, argsType);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != method) &#123;</span><br><span class="line">            <span class="keyword">return</span> method;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定类的指定方法的返回类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title function_">getMethodReturnType</span><span class="params">(Class clazz, String methodName, Class... argsType)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(methodName, <span class="string">&quot;methodName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> ReflectionUtils.findMethod(clazz, methodName, argsType);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != method) &#123;</span><br><span class="line">            <span class="keyword">return</span> method.getReturnType();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断类中是否包含指定的字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">hasField</span><span class="params">(Class clazz, String fieldName)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(fieldName, <span class="string">&quot;fieldName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> ReflectionUtils.findField(clazz, fieldName);</span><br><span class="line">        <span class="keyword">if</span> (field != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取类中指定的字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(Class clazz, String fieldName)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(fieldName, <span class="string">&quot;fieldName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> ReflectionUtils.findField(clazz, fieldName);</span><br><span class="line">        <span class="keyword">if</span> (field != <span class="literal">null</span>) &#123;</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> field;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取声明了某个注解的字段，这里只返回获取到的第一个字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(Class clazz, Class annotationClass)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(annotationClass, <span class="string">&quot;annotationClass must not be null&quot;</span>);</span><br><span class="line">        Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="keyword">if</span> (field.getAnnotation(annotationClass) != <span class="literal">null</span>) &#123;</span><br><span class="line">                field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">return</span> field;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取声明了指定注解的全部字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field[] getFields(Class clazz, Class annotationClass) &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(annotationClass, <span class="string">&quot;annotationClass must not be null&quot;</span>);</span><br><span class="line">        List&lt;Field&gt; annotationList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="keyword">if</span> (field.getAnnotation(annotationClass) != <span class="literal">null</span>) &#123;</span><br><span class="line">                field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                annotationList.add(field);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> annotationList.toArray(<span class="keyword">new</span> <span class="title class_">Field</span>[annotationList.size()]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取字段的返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getFieldValue</span><span class="params">(Class clazz, String fieldName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getFieldValue(clazz, getField(clazz, fieldName));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getFieldValue</span><span class="params">(Object entity, Field field)</span> &#123;</span><br><span class="line">        Assert.notNull(entity, <span class="string">&quot;entity must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(field, <span class="string">&quot;field must not be null&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> field.get(entity);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;h2&gt;获得定义当前`类`的类型时在其父类上的声明的泛型真实类型&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">     * 示例：</span></span><br><span class="line"><span class="comment">     * public class BookInfoGrap extends MustLoginGrap&lt;BookInfoParam, BookInfoResult&gt;</span></span><br><span class="line"><span class="comment">     * 这里当前Class就是 BookInfoGrap.class</span></span><br><span class="line"><span class="comment">     * 其父类上声明的泛型真实类型就是 0:BookInfoParam 1:BookInfoResult</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz 当前`类`的类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   第一个泛型类型，从0开始算，如BookInfoParam就是第0个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.Class 泛型真实类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title function_">getTClass</span><span class="params">(Class clazz, <span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">tClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Type</span> <span class="variable">genericSuperclass</span> <span class="operator">=</span> clazz.getGenericSuperclass();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;java.lang.reflect.Proxy&quot;</span>.equals(genericSuperclass.getTypeName())) &#123;</span><br><span class="line">            <span class="comment">//获取第二个泛型类型，这里是按实际需要，只需获取第二个泛型类型，这里就是获取&lt;T extends BaseResult&gt;的实际类型</span></span><br><span class="line">            <span class="type">Type</span> <span class="variable">actualTypeArgument</span> <span class="operator">=</span> ((ParameterizedType) genericSuperclass).getActualTypeArguments()[num];</span><br><span class="line">            <span class="comment">//判断T是否依旧包含泛型，如果包含泛型，则只取出外层类型</span></span><br><span class="line">            <span class="comment">//这里因为为每个BaseResult都创建的实现类，而且其实现类都是不包含泛型的，所以不会执行这个逻辑</span></span><br><span class="line">            <span class="keyword">if</span> (actualTypeArgument <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">                tClass = (Class) ((ParameterizedType) actualTypeArgument).getRawType();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;<span class="comment">//直接返回BaseResult的实现类类型，</span></span><br><span class="line">                tClass = (Class) actualTypeArgument;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;h2&gt;获得定义当前`类`或`接口`时在其父接口上的声明的泛型真实类型&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">     * 示例：</span></span><br><span class="line"><span class="comment">     * public interface BookInfoJpaRepository extends BaseJpaRepository&lt;BookInfo, Long&gt;</span></span><br><span class="line"><span class="comment">     * 这里当前Interface就是 BookInfoJpaRepository.class</span></span><br><span class="line"><span class="comment">     * 其父类上声明的泛型真实类型就是 0:BookInfo 1:Long</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz        当前`类`或`接口`的类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> interfaceNum 要获取第几个接口，从0开始计算，如BaseJpaRepository就是第0个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num          接口中第几个泛型类型，从0开始算，如BookInfo就是第0个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.Class 泛型真实类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title function_">getTIClass</span><span class="params">(Class clazz, <span class="type">int</span> interfaceNum, <span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">tClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">final</span> Type[] genericInterfaces = clazz.getGenericInterfaces();</span><br><span class="line">        <span class="type">Type</span> <span class="variable">genericSuperclass</span> <span class="operator">=</span> genericInterfaces[interfaceNum];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;java.lang.reflect.Proxy&quot;</span>.equals(genericSuperclass.getTypeName())) &#123;</span><br><span class="line">            <span class="comment">//获取第二个泛型类型，这里是按实际需要，只需获取第二个泛型类型，这里就是获取&lt;T extends BaseResult&gt;的实际类型</span></span><br><span class="line">            <span class="type">Type</span> <span class="variable">actualTypeArgument</span> <span class="operator">=</span> ((ParameterizedType) genericSuperclass).getActualTypeArguments()[num];</span><br><span class="line">            <span class="comment">//判断T是否依旧包含泛型，如果包含泛型，则只取出外层类型</span></span><br><span class="line">            <span class="comment">//这里因为为每个BaseResult都创建的实现类，而且其实现类都是不包含泛型的，所以不会执行这个逻辑</span></span><br><span class="line">            <span class="keyword">if</span> (actualTypeArgument <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">                tClass = (Class) ((ParameterizedType) actualTypeArgument).getRawType();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;<span class="comment">//直接返回BaseResult的实现类类型，</span></span><br><span class="line">                tClass = (Class) actualTypeArgument;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前代理对象的真实目标对象，即实现类</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getProxyTarget</span><span class="params">(Object proxy)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (!AopUtils.isAopProxy(proxy)) &#123;</span><br><span class="line">            <span class="keyword">return</span> proxy;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断是jdk还是cglib代理</span></span><br><span class="line">        <span class="keyword">if</span> (AopUtils.isJdkDynamicProxy(proxy)) &#123;</span><br><span class="line">            proxy = getJdkDynamicProxyTargetObject(proxy);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            proxy = getCglibProxyTargetObject(proxy);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getProxyTarget(proxy);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取Cglib代理对象的真实目标对象，即实现类</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">getCglibProxyTargetObject</span><span class="params">(Object proxy)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">h</span> <span class="operator">=</span> proxy.getClass().getDeclaredField(<span class="string">&quot;CGLIB$CALLBACK_0&quot;</span>);</span><br><span class="line">        h.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">dynamicAdvisedInterceptor</span> <span class="operator">=</span> h.get(proxy);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">advised</span> <span class="operator">=</span> dynamicAdvisedInterceptor.getClass().getDeclaredField(<span class="string">&quot;advised&quot;</span>);</span><br><span class="line">        advised.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">target</span> <span class="operator">=</span> ((AdvisedSupport) advised.get(dynamicAdvisedInterceptor)).getTargetSource().getTarget();</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取JdkDynamic代理对象的真实目标对象，即实现类</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">getJdkDynamicProxyTargetObject</span><span class="params">(Object proxy)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">h</span> <span class="operator">=</span> proxy.getClass().getSuperclass().getDeclaredField(<span class="string">&quot;h&quot;</span>);</span><br><span class="line">        h.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">AopProxy</span> <span class="variable">aopProxy</span> <span class="operator">=</span> (AopProxy) h.get(proxy);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">advised</span> <span class="operator">=</span> aopProxy.getClass().getDeclaredField(<span class="string">&quot;advised&quot;</span>);</span><br><span class="line">        advised.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">target</span> <span class="operator">=</span> ((AdvisedSupport) advised.get(aopProxy)).getTargetSource().getTarget();</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;h2&gt;获取当前代理对象的真实目标接口类型，即接口&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   第几个接口，从0开始计算</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.Class  接口类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title function_">getProxyTargetInterface</span><span class="params">(Object proxy, <span class="type">int</span> num)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (!AopUtils.isAopProxy(proxy)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断是jdk还是cglib代理</span></span><br><span class="line">        <span class="keyword">if</span> (AopUtils.isJdkDynamicProxy(proxy)) &#123;</span><br><span class="line">            <span class="keyword">return</span> getJdkDynamicProxyTargetInterface(proxy, num);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> getCglibProxyTargetInterface(proxy, num);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取CGLIB动态代理对象的目标接口</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   第几个接口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标接口类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Class <span class="title function_">getCglibProxyTargetInterface</span><span class="params">(Object proxy, <span class="type">int</span> num)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">h</span> <span class="operator">=</span> proxy.getClass().getDeclaredField(<span class="string">&quot;CGLIB$CALLBACK_0&quot;</span>);</span><br><span class="line">        h.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">dynamicAdvisedInterceptor</span> <span class="operator">=</span> h.get(proxy);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">advised</span> <span class="operator">=</span> dynamicAdvisedInterceptor.getClass().getDeclaredField(<span class="string">&quot;advised&quot;</span>);</span><br><span class="line">        advised.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">final</span> Class&lt;?&gt;[] proxiedInterfaces = ((AdvisedSupport) advised.get(dynamicAdvisedInterceptor)).getProxiedInterfaces();</span><br><span class="line">        <span class="keyword">return</span> proxiedInterfaces[num];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取Jdk动态代理对象的目标接口</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   第几个接口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标接口类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Class <span class="title function_">getJdkDynamicProxyTargetInterface</span><span class="params">(Object proxy, <span class="type">int</span> num)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">h</span> <span class="operator">=</span> proxy.getClass().getSuperclass().getDeclaredField(<span class="string">&quot;h&quot;</span>);</span><br><span class="line">        h.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">AopProxy</span> <span class="variable">aopProxy</span> <span class="operator">=</span> (AopProxy) h.get(proxy);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">advised</span> <span class="operator">=</span> aopProxy.getClass().getDeclaredField(<span class="string">&quot;advised&quot;</span>);</span><br><span class="line">        advised.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">final</span> Class&lt;?&gt;[] proxiedInterfaces = ((AdvisedSupport) advised.get(aopProxy)).getProxiedInterfaces();</span><br><span class="line">        <span class="keyword">return</span> proxiedInterfaces[num];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后记">后记</h2><ul class="lvl-0"><li class="lvl-2"><p>mybatis可以参考<a href="https://gitee.com/geekidea/update-record">https://gitee.com/geekidea/update-record</a></p></li><li class="lvl-2"><p><a href="https://github.com/alibaba/canal/wiki">Canal</a>也是一个不错的选择，对项目代码没有侵入性。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;业务中有这么个需求，就是需要记录每条记录的历史，并要记录该记录变更的时间和操作人，即每条记录的新增、修改和删除都要记录&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="data-jpa" scheme="https://blog.hanqunfeng.com/tags/data-jpa/"/>
    
    <category term="aop" scheme="https://blog.hanqunfeng.com/tags/aop/"/>
    
  </entry>
  
  <entry>
    <title>MySql-MHA的构建方法</title>
    <link href="https://blog.hanqunfeng.com/2022/09/15/mysql8-mha/"/>
    <id>https://blog.hanqunfeng.com/2022/09/15/mysql8-mha/</id>
    <published>2022-09-15T13:30:05.000Z</published>
    <updated>2022-10-11T03:30:54.657Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">MySql-MHA的构建过程</li><li class="lvl-2">本文基于<code>mysql-8.0.30</code>,<code>mha4mysql-0.58-0.el7.centos</code></li></ul><span id="more"></span><h2 id="1-节点规划">1.节点规划</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mha-manager:    10.250.0.91      MHA控制器，用于监控管理</span><br><span class="line">mysql-master:   10.250.0.118     Mysql主服务器</span><br><span class="line">mysql-slave1:   10.250.0.186     Mysql从服务器</span><br><span class="line">mysql-slave2:   10.250.0.102     Mysql从服务器</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>可以在4台服务器的hosts中创建ip与域名的映射，方便后面的配置</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line">10.250.0.91      node1</span><br><span class="line">10.250.0.118     node2</span><br><span class="line">10.250.0.186     node3</span><br><span class="line">10.250.0.102     node4</span><br></pre></td></tr></table></figure><h2 id="2-免密登录">2.免密登录</h2><ul class="lvl-0"><li class="lvl-2"><p>先在mha-manager主机上创建密钥对</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建密钥对，生成私钥和公钥文件，创建密钥时可以不设置密码，一路回车就好</span></span><br><span class="line">[root@ip-10-250-0-91 .ssh]<span class="comment"># ssh-keygen -t rsa</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:C8JdDpbsQP+NeLSPFvHz3BkLigak3fQusApbrPNL9tw root@ip-10-250-0-91.cn-northwest-1.compute.internal</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|    .            |</span></span><br><span class="line"><span class="string">|   . o .         |</span></span><br><span class="line"><span class="string">|    . B =        |</span></span><br><span class="line"><span class="string">|   . O X B       |</span></span><br><span class="line"><span class="string">|    + O S = . .  |</span></span><br><span class="line"><span class="string">|   . . * B = o + |</span></span><br><span class="line"><span class="string">|  . = . B + o +  |</span></span><br><span class="line"><span class="string">|  .B + + .       |</span></span><br><span class="line"><span class="string">|  oo+.o E        |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时会在.ssh目录下生成密钥对文件id_rsa和id_rsa.pub</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 .ssh]<span class="comment"># ls</span></span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>将公钥导入全部服务器，导入时需要输入对应服务器的root密码</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 .ssh]# ssh-copy-id -i id_rsa.pub root@node1</span><br><span class="line">[root@ip-10-250-0-91 .ssh]# ssh-copy-id -i id_rsa.pub root@node2</span><br><span class="line">[root@ip-10-250-0-91 .ssh]# ssh-copy-id -i id_rsa.pub root@node3</span><br><span class="line">[root@ip-10-250-0-91 .ssh]# ssh-copy-id -i id_rsa.pub root@node4</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>向服务器中导入公钥时遇到的问题</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Permission denied (publickey,gssapi-keyex,gssapi-with-mic).</span><br></pre></td></tr></table></figure><blockquote><p>这是由于没有开放密码登录权限导致的，解决方法如下:</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分别在4台服务器上设置root用户的密码</span></span><br><span class="line">passwd root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分别在4台服务器上开放密码登录权限</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># 将PasswordAuthentication设置为yes</span></span><br><span class="line">PasswordAuthentication <span class="built_in">yes</span></span><br><span class="line"><span class="comment"># 重启sshd服务</span></span><br><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>密钥导入成功</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 .ssh]<span class="comment"># ssh-copy-id -i id_rsa.pub root@node4</span></span><br><span class="line">/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">&quot;id_rsa.pub&quot;</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;node4 (10.250.0.102)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:aXIII+S5nOVy6pqP1fuaW6fYFsVIN9TBFVP/Xaf8Pds.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:1f:07:2f:04:75:77:68:8d:f0:20:96:f1:0b:90:ac:61.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span></span><br><span class="line"><span class="string">/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span></span><br><span class="line"><span class="string">root@node4&#x27;</span>s password:</span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   <span class="string">&quot;ssh &#x27;root@node4&#x27;&quot;</span></span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>按照上面的方式分别在其余3台服务器上执行密钥对的创建操作，过程一样，在此不再赘述。</p></li><li class="lvl-2"><p>测试免密登录，在任意服务器上登录其它服务器都不需要输入密码</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh node3</span><br></pre></td></tr></table></figure><h2 id="3-下载及安装MHA安装包">3.下载及安装MHA安装包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有节点都需要安装node安装包</span></span><br><span class="line">wget https://github.com/yoshinorim/mha4mysql-node/releases/download/v0.58/mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install -y mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只有manager节点需要安装manager安装包</span></span><br><span class="line">wget https://github.com/yoshinorim/mha4mysql-manager/releases/download/v0.58/mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install -y mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>安装manager时可能会提示缺少<code>epel</code>相关依赖</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">错误：软件包：mha4mysql-manager-0.58-0.el7.centos.noarch (/mha4mysql-manager-0.58-0.el7.centos.noarch)</span><br><span class="line">          需要：perl(Log::Dispatch::File)</span><br><span class="line">错误：软件包：mha4mysql-manager-0.58-0.el7.centos.noarch (/mha4mysql-manager-0.58-0.el7.centos.noarch)</span><br><span class="line">          需要：perl(Parallel::ForkManager)</span><br><span class="line">错误：软件包：mha4mysql-manager-0.58-0.el7.centos.noarch (/mha4mysql-manager-0.58-0.el7.centos.noarch)</span><br><span class="line">          需要：perl(Log::Dispatch)</span><br><span class="line">错误：软件包：mha4mysql-manager-0.58-0.el7.centos.noarch (/mha4mysql-manager-0.58-0.el7.centos.noarch)</span><br><span class="line">          需要：perl(Log::Dispatch::Screen)</span><br></pre></td></tr></table></figure><blockquote><p>解决方法是先安装<code>epel-release</code>依赖</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br></pre></td></tr></table></figure><blockquote><p>如果使用aws云服务器则通过下面的命令安装<code>epel</code></p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo amazon-linux-extras install epel -y</span><br></pre></td></tr></table></figure><h2 id="4-mysql主从复制搭建">4.mysql主从复制搭建</h2><ul class="lvl-0"><li class="lvl-2"><p>参照<a href="/2022/09/14/mysql8-config/" title="MySql单节点、主从、双主的构建方法">MySql单节点、主从、双主的构建方法</a>中的说明搭建主从复制，这里不再赘述。</p></li><li class="lvl-2"><p>需要说明如下几点：</p></li></ul><blockquote><p>1.所有mysql的<code>server-id</code>不能相同<br>2.所有mysql打开binlog日志和中继日志，且<code>relay_log_purge=0</code><br>3.从节点开启只读，<code>read_only=1</code><br>4.云服务通过镜像创建的mysql要注意所有mysql的uuid不能相同。</p></blockquote><h2 id="5-从节点也要创建同步帐号">5.从节点也要创建同步帐号</h2><ul class="lvl-0"><li class="lvl-2"><p>因为slave节点有可能升级为master节点，所以每个slave上也要需要拥有同步帐号，在每个slave上执行如下命令</p></li></ul><div class="note danger"><p>注意：<br>这个方式是错误的，会导致主从切换后，slave不能与新的master实现数据同步，<br>因为此时两个从库的GTID事务和binlog记录的位置已经不一致了。<br>这个错误的结果在下文&quot;11.测试 MHA 故障转移&quot;有说明。</p><p>正确的做法是，将master的数据库导入到两个slave中，主从一旦建立，从库就不要写入任何数据。</p></div><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止同步</span></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line"><span class="comment"># &#x27;10.250.%.%&#x27; 表示只能局域网段内的ip才能访问，如果不限制ip，可以配置为&#x27;%&#x27;</span></span><br><span class="line">mysql&gt; CREATE USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment"># 开启同步</span></span><br><span class="line">mysql&gt; start slave;</span><br></pre></td></tr></table></figure><div class="note success"><p>正确的做法是，将master的数据库导入到两个slave中，然后在开启主从同步。<br>注意：主从一旦建立，从库就不要写入任何数据。</p></div><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两个从库中分别执行master数据库导出</span></span><br><span class="line">mysqldump -uroot --all-databases --triggers --routines --events -p -h node2 &gt; all_databases.sql</span><br><span class="line"><span class="comment"># 从库执行导入数据</span></span><br><span class="line">mysql -uroot -p &lt; all_databases.sql</span><br></pre></td></tr></table></figure><blockquote><p>因为开启了GTID，导入数据库时会报如下错误：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@@GLOBAL.GTID_PURGED cannot be changed: the added gtid <span class="built_in">set</span> must not overlap with @@GLOBAL.GTID_EXECUTED</span><br></pre></td></tr></table></figure><blockquote><p>解决方法是在从库中执行如下命令后再导入：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; reset slave all;</span><br><span class="line">mysql&gt; reset master;</span><br></pre></td></tr></table></figure><h3 id="从节点设置同步">从节点设置同步</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看主节点master状态信息，记录File和Position两个信息</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000012 |      197 |              |                  | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1-9 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从节点设置同步信息，关联master中查询到的File和Position两个信息</span></span><br><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;10.250.0.118&#x27;</span>,</span><br><span class="line">    MASTER_PORT=3306,</span><br><span class="line">    MASTER_USER=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_PASSWORD=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000012&#x27;</span>,</span><br><span class="line">    MASTER_LOG_POS=197;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动从库的复制线程</span></span><br><span class="line">mysql&gt; START slave;</span><br><span class="line"><span class="comment"># 查看从库同步状态</span></span><br><span class="line">mysql&gt; SHOW slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: 10.250.0.118</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000012</span><br><span class="line">          Read_Master_Log_Pos: 197</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 326</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000012</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><h2 id="6-MHA需要一个拥有管理员权限的mysql用户">6.MHA需要一个拥有管理员权限的mysql用户</h2><ul class="lvl-0"><li class="lvl-2"><p>如果开启了root用户远程登录，可以使用root用户</p></li><li class="lvl-2"><p>也可以在master上创建一个拥有管理员权限的用户，因为建立了主从，所以从库会自动同步</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE USER <span class="string">&#x27;mhaadmin&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;mhapass&#x27;</span>;</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;mhaadmin&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;mhapass&#x27;</span>;</span><br><span class="line">mysql&gt; GRANT ALL ON *.* TO <span class="string">&#x27;mhaadmin&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h2 id="7-在mha-manager节点上编写MHA管理配置文件">7.在mha-manager节点上编写MHA管理配置文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /etc/mha_master</span><br><span class="line">vim /etc/mha_master/mha.cnf</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[server default]</span><br><span class="line"><span class="comment"># mha访问数据库的账号与密码</span></span><br><span class="line">user=mhaadmin</span><br><span class="line">password=mhapass</span><br><span class="line">port=3306</span><br><span class="line"><span class="comment"># 指定mha的工作目录</span></span><br><span class="line">manager_workdir=/etc/mha_master</span><br><span class="line"><span class="comment"># 指定管理日志路径</span></span><br><span class="line">manager_log=/etc/mha_master/manager.log</span><br><span class="line"><span class="comment"># 指定mha在远程节点上的工作目录，所有mysql节点都需要创建该目录</span></span><br><span class="line">remote_workdir=/mydata/mha_master</span><br><span class="line"><span class="comment"># ssh登录用户</span></span><br><span class="line">ssh_user=root</span><br><span class="line"><span class="comment"># 指定主从复制的mysql用户和密码</span></span><br><span class="line">repl_user=vagrant</span><br><span class="line">repl_password=vagrant</span><br><span class="line"><span class="comment"># 指定多久执行一次检测master的状态，检测间隔时间，单位秒</span></span><br><span class="line">ping_interval=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认情况下，mha检查master的状态是否正常是直接连接master节点</span></span><br><span class="line"><span class="comment"># 也可以指定用于二次检查master节点状态的脚本，这里使用mha自带的masterha_secondary_check命令</span></span><br><span class="line"><span class="comment"># 不要配置master节点的ip，可以配置从节点的ip，它的连接逻辑是 manager-(A)-&gt;这里指定的ip-(B)-&gt;master，</span></span><br><span class="line"><span class="comment"># 只有A成功，B失败时才会进行故障转移，其余情况都会认为master正常。所以必须保证这里的ip所在服务器正常运行。</span></span><br><span class="line"><span class="comment"># secondary_check_script=/bin/masterha_secondary_check -s 10.250.0.186 -s 10.250.0.102</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本文件，用于故障切换的时候将虚拟ip漂移到新的master上</span></span><br><span class="line"><span class="comment">#master_ip_failover_script=/etc/mha_master/master_ip_failover_script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本文件，用于故障切换的时候发送告警信息</span></span><br><span class="line"><span class="comment">#report_script=/etc/mha_master/report_script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 故障发生后关闭故障主机的脚本，其主要作用是防止发生脑裂</span></span><br><span class="line"><span class="comment">#shutdown_script=/etc/mha_master/shutdown_script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql主从服务器信息</span></span><br><span class="line">[server1]</span><br><span class="line">hostname=10.250.0.118</span><br><span class="line">ssh_port=22</span><br><span class="line"><span class="comment"># 将来可不可以成为master候选节点/主节点</span></span><br><span class="line">candidate_master=1</span><br><span class="line"><span class="comment"># 不参与master候选</span></span><br><span class="line"><span class="comment">#no_master=1</span></span><br><span class="line">[server2]</span><br><span class="line">hostname=10.250.0.186</span><br><span class="line">ssh_port=22</span><br><span class="line">candidate_master=1</span><br><span class="line">[server3]</span><br><span class="line">hostname=10.250.0.102</span><br><span class="line">ssh_port=22</span><br><span class="line">candidate_master=1</span><br></pre></td></tr></table></figure><blockquote><p>注意，所有mysql节点都需要创建该目录<code>/mydata/mha_master</code></p></blockquote><h2 id="8-检测各节点间ssh互信通信配置是否正确">8.检测各节点间ssh互信通信配置是否正确</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_ssh --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">Thu Sep 15 10:13:08 2022 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [info] Reading application default configuration from /etc/mha_master/mha.cnf..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [info] Reading server configuration from /etc/mha_master/mha.cnf..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [info] Starting SSH connection tests..</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]  Connecting via SSH from root@10.250.0.118(10.250.0.118:22) to root@10.250.0.186(10.250.0.186:22)..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]  Connecting via SSH from root@10.250.0.118(10.250.0.118:22) to root@10.250.0.102(10.250.0.102:22)..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]  Connecting via SSH from root@10.250.0.186(10.250.0.186:22) to root@10.250.0.118(10.250.0.118:22)..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]  Connecting via SSH from root@10.250.0.186(10.250.0.186:22) to root@10.250.0.102(10.250.0.102:22)..</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:10 2022 - [debug]</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]  Connecting via SSH from root@10.250.0.102(10.250.0.102:22) to root@10.250.0.118(10.250.0.118:22)..</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]  Connecting via SSH from root@10.250.0.102(10.250.0.102:22) to root@10.250.0.186(10.250.0.186:22)..</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:10 2022 - [info] All SSH connection tests passed successfully.</span><br></pre></td></tr></table></figure><blockquote><p>看到<code>All SSH connection tests passed successfully.</code>说明通信成功</p></blockquote><h2 id="9-检查管理的MySQL复制集群的连接配置参数是否OK">9.检查管理的MySQL复制集群的连接配置参数是否OK</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_repl --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">Thu Sep 15 10:16:35 2022 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Thu Sep 15 10:16:35 2022 - [info] Reading application default configuration from /etc/mha_master/mha.cnf..</span><br><span class="line">Thu Sep 15 10:16:35 2022 - [info] Reading server configuration from /etc/mha_master/mha.cnf..</span><br><span class="line">Thu Sep 15 10:16:35 2022 - [info] MHA::MasterMonitor version 0.58.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] GTID failover mode = 1</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Dead Servers:</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Alive Servers:</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.186(10.250.0.186:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.102(10.250.0.102:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Alive Slaves:</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.186(10.250.0.186:3306)  Version=8.0.30 (oldest major version between slaves) log-bin:enabled</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     GTID ON</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     Replicating from 10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     Primary candidate <span class="keyword">for</span> the new Master (candidate_master is <span class="built_in">set</span>)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.102(10.250.0.102:3306)  Version=8.0.30 (oldest major version between slaves) log-bin:enabled</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     GTID ON</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     Replicating from 10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     Primary candidate <span class="keyword">for</span> the new Master (candidate_master is <span class="built_in">set</span>)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Current Alive Master: 10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking slave configurations..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication filtering settings..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  binlog_do_db= , binlog_ignore_db=</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  Replication filtering check ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] GTID (with auto-pos) is supported. Skipping all SSH and Node package checking.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking SSH publickey authentication settings on the current master..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] HealthCheck: SSH to 10.250.0.118 is reachable.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]</span><br><span class="line">10.250.0.118(10.250.0.118:3306) (current master)</span><br><span class="line"> +--10.250.0.186(10.250.0.186:3306)</span><br><span class="line"> +--10.250.0.102(10.250.0.102:3306)</span><br><span class="line"></span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication health on 10.250.0.186..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication health on 10.250.0.102..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [warning] master_ip_failover_script is not defined.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [warning] shutdown_script is not defined.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Got <span class="built_in">exit</span> code 0 (Not master dead).</span><br><span class="line"></span><br><span class="line">MySQL Replication Health is OK.</span><br></pre></td></tr></table></figure><blockquote><p>看到<code>MySQL Replication Health is OK.</code>说明成功</p></blockquote><h2 id="10-管理MHA">10.管理MHA</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先检查MHA工作目录下是否存在mha.failover.complete文件，如果存在则先删除</span></span><br><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># rm -rf /etc/mha_master/mha.failover.complete</span></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># nohup masterha_manager --conf=/etc/mha_master/mha.cnf &amp;&gt; /etc/mha_master/manager.log &amp;</span></span><br></pre></td></tr></table></figure><blockquote><p>查看master的状态</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看master状态</span></span><br><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_status --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">mha (pid:9696) is running(0:PING_OK), master:10.250.0.118</span><br></pre></td></tr></table></figure><blockquote><p>上面的信息中“mha (pid:9696) is running(0:PING_OK)”表示MHA服务运行 OK，否则， 则会显示为类似“mha is stopped(1:NOT_RUNNING).”</p></blockquote><blockquote><p>停止MHA</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#停止</span></span><br><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_stop --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">Stopped mha successfully.</span><br><span class="line">[1]+  退出 1                <span class="built_in">nohup</span> masterha_manager --conf=/etc/mha_master/mha.cnf &amp;&gt;/etc/mha_master/manager.log</span><br></pre></td></tr></table></figure><h2 id="11-测试-MHA-故障转移">11.测试 MHA 故障转移</h2><h3 id="我们先按-5-从节点也要创建同步帐号-中的错误方式进行测试">我们先按&quot;5.从节点也要创建同步帐号&quot;中的错误方式进行测试</h3><ul class="lvl-0"><li class="lvl-2"><p>启动MHA</p></li><li class="lvl-2"><p>关闭mysql-master数据库服务</p></li><li class="lvl-2"><p>监控mha-manager的日志</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># tail -f manager.log</span></span><br><span class="line">………………………………</span><br><span class="line">Started automated(non-interactive) failover.</span><br><span class="line">Selected 10.250.0.186(10.250.0.186:3306) as a new master.</span><br><span class="line">10.250.0.186(10.250.0.186:3306): OK: Applying all logs succeeded.</span><br><span class="line">10.250.0.102(10.250.0.102:3306): ERROR: Failed on waiting gtid <span class="built_in">exec</span> <span class="built_in">set</span> on master.</span><br><span class="line">Master failover to 10.250.0.186(10.250.0.186:3306) <span class="keyword">done</span>, but recovery on slave partially failed.</span><br></pre></td></tr></table></figure><blockquote><p>可以看到mha监测到master挂掉后，会进行重新选主，并且选主成功，但是为其挂载从库失败。</p></blockquote><h3 id="我们来分析一下这个失败的原因">我们来分析一下这个失败的原因</h3><ul class="lvl-0"><li class="lvl-2"><p>查看新的master状态</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">             File: mysql-bin.000013</span><br><span class="line">         Position: 2466</span><br><span class="line">     Binlog_Do_DB:</span><br><span class="line"> Binlog_Ignore_DB:</span><br><span class="line">Executed_Gtid_Set: 6e9a571e-330e-11ed-a3f8-0a53e7cced42:5-9,</span><br><span class="line">6e9a571e-330e-11ed-a3f8-0a53e7cced43:1-4</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查询新的主库的read_only已经关闭，但这个只是在当前进程中有效，重新启动mysql还是会读取配置文件的设置，所以主从一旦切换后一定要注意修改这个配置文件</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">&quot;%read_only%&quot;</span>;</span><br><span class="line">+-----------------------+-------+</span><br><span class="line">| Variable_name         | Value |</span><br><span class="line">+-----------------------+-------+</span><br><span class="line">| innodb_read_only      | OFF   |</span><br><span class="line">| read_only             | OFF   |</span><br><span class="line">| super_read_only       | OFF   |</span><br><span class="line">| transaction_read_only | OFF   |</span><br><span class="line">+-----------------------+-------+</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看slave状态，获取报错信息</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: 10.250.0.186</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000013</span><br><span class="line">          Read_Master_Log_Pos: 2466</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 420</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000013</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: No</span><br><span class="line">              Replicate_Do_DB:</span><br><span class="line">          Replicate_Ignore_DB:</span><br><span class="line">           Replicate_Do_Table:</span><br><span class="line">       Replicate_Ignore_Table:</span><br><span class="line">      Replicate_Wild_Do_Table:</span><br><span class="line">  Replicate_Wild_Ignore_Table:</span><br><span class="line">                   Last_Errno: 1396</span><br><span class="line">                   Last_Error: Coordinator stopped because there were error(s) <span class="keyword">in</span> the worker(s). The most recent failure being: Worker 1 failed executing transaction <span class="string">&#x27;6e9a571e-330e-11ed-a3f8-0a53e7cced43:1&#x27;</span> at master <span class="built_in">log</span> mysql-bin.000013, end_log_pos 1465. See error <span class="built_in">log</span> and/or performance_schema.replication_applier_status_by_worker table <span class="keyword">for</span> more details about this failure or others, <span class="keyword">if</span> any.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>按照提示在从库中查询<code>performance_schema.replication_applier_status_by_worker</code>表的数据</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from performance_schema.replication_applier_status_by_worker\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">    CHANNEL_NAME:</span><br><span class="line">        WORKER_ID: 1</span><br><span class="line">        THREAD_ID: NULL</span><br><span class="line">    SERVICE_STATE: OFF</span><br><span class="line">LAST_ERROR_NUMBER: 1396</span><br><span class="line">LAST_ERROR_MESSAGE: Worker 1 failed executing transaction <span class="string">&#x27;6e9a571e-330e-11ed-a3f8-0a53e7cced43:1&#x27;</span> at master <span class="built_in">log</span> mysql-bin.000013, end_log_pos 1465; Error <span class="string">&#x27;Operation CREATE USER failed for &#x27;</span>vagrant<span class="string">&#x27;@&#x27;</span>10.250.%.%<span class="string">&#x27;&#x27;</span> on query. Default database: <span class="string">&#x27;mysql&#x27;</span>. Query: <span class="string">&#x27;CREATE USER &#x27;</span>vagrant<span class="string">&#x27;@&#x27;</span>10.250.%.%<span class="string">&#x27; IDENTIFIED WITH &#x27;</span>mysql_native_password<span class="string">&#x27; AS &#x27;</span>*04E6E1273D1783DF7D57DC5479FE01CFFDFD0058<span class="string">&#x27;&#x27;</span></span><br><span class="line">…………</span><br></pre></td></tr></table></figure><blockquote><p>这里提示的比较清楚，意思是从库在同步新的主库数据时，执行创建同步帐号的<code>CREATE USER</code>语句时报错<br>思考我们的构建过程，从库创建同步帐号是分别创建在自己的数据库里的，所以两个从库GTID事务和binlog日志实际上数据并不一致，导致主从切换后，从库要从新的master同步数据时，就会同步这个创建帐号的语句，但是此时从库已经有这个帐号了，所以创建帐号失败，从而导致主从复制失败。<br>此时的解决方法就是将master的数据库全量导入到slave中，然后重新建立主从，参照下文。</p></blockquote><h3 id="我们再按-5-从节点也要创建同步帐号-中的正确方式搭建好主从后进行测试">我们再按&quot;5.从节点也要创建同步帐号&quot;中的正确方式搭建好主从后进行测试</h3><ul class="lvl-0"><li class="lvl-2"><p>搭建步骤参看&quot;5.从节点也要创建同步帐号&quot;中的正确方式</p></li><li class="lvl-2"><p>启动MHA</p></li><li class="lvl-2"><p>关闭mysql-master数据库服务</p></li><li class="lvl-2"><p>监控mha-manager的日志</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">…………</span><br><span class="line">Started automated(non-interactive) failover.</span><br><span class="line">Selected 10.250.0.186(10.250.0.186:3306) as a new master.</span><br><span class="line">10.250.0.186(10.250.0.186:3306): OK: Applying all logs succeeded.</span><br><span class="line">10.250.0.102(10.250.0.102:3306): OK: Slave started, replicating from 10.250.0.186(10.250.0.186:3306)</span><br><span class="line">10.250.0.186(10.250.0.186:3306): Resetting slave info succeeded.</span><br><span class="line">Master failover to 10.250.0.186(10.250.0.186:3306) completed successfully.</span><br></pre></td></tr></table></figure><blockquote><p>此时说明新的master切换成功，并且成功建立了主从。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>检查master和slave状态是否正常</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主库</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000001 |      157 |              |                  | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1-9 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库</span></span><br><span class="line">mysql&gt; show slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: 10.250.0.186</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000001</span><br><span class="line">          Read_Master_Log_Pos: 157</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 373</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><blockquote><p>此时说明MHA搭建及测试成功。</p></blockquote><div class="note warning"><p>知识点：关于MHA有几点内容需要说明：</p><blockquote><p>1.MHA监控主从一旦完成切换，MHA服务进程就会停止，需要mysql集群修复完成后手工重新启动<br>2.挂掉的mysql完成修复后可以作为slave加入mysql主从集群，注意修改其mysql配置文件，加入时必须重新全量导入master的数据库<br>3.新加入mysql时要注意ip是否发生变更，如果变更要及时修改MHA的配置文件<br>4.MHA切换主从后，新的master配置文件中的<code>read_only</code>不会被修改，需要手工修改，否则重启服务器后不能写入数据<br>5.MHA只会监控master，slave挂掉时不会触发MHA做任何操作，此时只要从库的ip没有变化，修复后可以直接启动即可。<br>6.故障转移发生后，MHA工作目录会生成<code>mha.failover.complete</code>文件，如果要在故障发生后8小时内重新启动MHA，则重新启动MHA前一定要查看工作目录下是否存在<code>mha.failover.complete</code>文件，如果存在要先删除，否则不能完成新一轮的主从切换，或者在启动MHA时加上<code>--ignore_last_failover</code>。</p></blockquote></div><div class="note info"><p>新的问题：</p><blockquote><p>1.MHA可以帮助我们实现master的监控，当其监测到master不可用时会在slave中进行选主，从而实现主从切换。<br>2.但是这里有个问题，主从切换后，新的master的ip就会发生变化，所以客户端连接时需要改变为新的ip地址。<br>3.那有什么办法可以在不改变客户端连接mysql的地址情况下，自动完成切换呢，答案就是VIP(虚拟IP).</p></blockquote></div><h2 id="MHA脚本扩展">MHA脚本扩展</h2><ul class="lvl-0"><li class="lvl-2"><p>我们在使用MHA检查mysql集群的连接配置参数时，会看到打印如下信息</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_repl --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">………………</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication health on 10.250.0.186..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication health on 10.250.0.102..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [warning] master_ip_failover_script is not defined.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [warning] shutdown_script is not defined.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Got <span class="built_in">exit</span> code 0 (Not master dead).</span><br><span class="line"></span><br><span class="line">MySQL Replication Health is OK.</span><br></pre></td></tr></table></figure><blockquote><p>这里有两个警告，<code>master_ip_failover_script is not defined.</code>和<code>shutdown_script is not defined.</code><br><code>shutdown_script</code>脚本用于指定故障发生后关闭故障主机的脚本，而<code>master_ip_failover_script</code>脚本用于指定故障转移时需要做的操作。</p></blockquote><div class="note info"><blockquote><p>实际上，MHA支持多种脚本扩展</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">secondary_check_script：用于检查来自多个网络路由的master可用性</span><br><span class="line">master_ip_failover_script：用于更新应用程序使用的master的ip地址</span><br><span class="line">shutdown_script：为了强制关机master</span><br><span class="line">report_script：用于发送报告</span><br><span class="line">init_conf_load_script：用于加载初始配置参数</span><br><span class="line">master_ip_online_change_script：用于更新masterIP地址。这不用于主故障转移，而是用于在线主交换机</span><br></pre></td></tr></table></figure></div><ul class="lvl-0"><li class="lvl-2"><p>MHA的配置文件中可以指定<code>master_ip_failover_script</code>，其值是个脚本文件，从名称上我们也能看出来其作用是当发生故障转移时要执行的脚本，一般我们使用这个脚本进行虚拟IP的重新绑定。</p></li><li class="lvl-2"><p>MHA并没有实现这个脚本，这个脚本需要我们自己编写，这里参考网上给出的一个示例，<code>vim /etc/mha_master/master_ip_failover_script</code></p></li></ul><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings <span class="string">FATAL =&gt;</span> <span class="string">&#x27;all&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> Getopt::Long;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> (</span><br><span class="line">    $command, $orig_master_host, $orig_master_ip,$ssh_user,</span><br><span class="line">    $orig_master_port, $new_master_host, $new_master_ip,$new_master_port,</span><br><span class="line">    $orig_master_ssh_port,$new_master_ssh_port,$new_master_user,$new_master_password</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里定义的虚拟IP配置要注意，这个ip必须要与你自己的集群在同一个网段，否则无效</span></span><br><span class="line"><span class="keyword">my</span> $vip = <span class="string">&#x27;10.250.0.199&#x27;</span>;</span><br><span class="line"><span class="keyword">my</span> $key = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="comment"># 这里的网卡名称 “eth0” 需要根据你机器的网卡名称进行修改</span></span><br><span class="line"><span class="keyword">my</span> $ssh_start_vip = <span class="string">&quot;sudo /sbin/ifconfig eth0:$key $vip up&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_stop_vip = <span class="string">&quot;sudo /sbin/ifconfig eth0:$key down&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_Bcast_arp= <span class="string">&quot;sudo /sbin/arping -I eth0 -c 3 -A $vip&quot;</span>;</span><br><span class="line"></span><br><span class="line">GetOptions(</span><br><span class="line">    <span class="string">&#x27;command=s&#x27;</span>          =&gt; \$command,</span><br><span class="line">    <span class="string">&#x27;ssh_user=s&#x27;</span>         =&gt; \$ssh_user,</span><br><span class="line">    <span class="string">&#x27;orig_master_host=s&#x27;</span> =&gt; \$orig_master_host,</span><br><span class="line">    <span class="string">&#x27;orig_master_ip=s&#x27;</span>   =&gt; \$orig_master_ip,</span><br><span class="line">    <span class="string">&#x27;orig_master_port=i&#x27;</span> =&gt; \$orig_master_port,</span><br><span class="line">    <span class="string">&#x27;orig_master_ssh_port=i&#x27;</span> =&gt; \$orig_master_ssh_port,</span><br><span class="line">    <span class="string">&#x27;new_master_host=s&#x27;</span>  =&gt; \$new_master_host,</span><br><span class="line">    <span class="string">&#x27;new_master_ip=s&#x27;</span>    =&gt; \$new_master_ip,</span><br><span class="line">    <span class="string">&#x27;new_master_port=i&#x27;</span>  =&gt; \$new_master_port,</span><br><span class="line">    <span class="string">&#x27;new_master_ssh_port&#x27;</span> =&gt; \$new_master_ssh_port,</span><br><span class="line">    <span class="string">&#x27;new_master_user&#x27;</span> =&gt; \$new_master_user,</span><br><span class="line">    <span class="string">&#x27;new_master_password&#x27;</span> =&gt; \$new_master_password</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span> &amp;main();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    $ssh_user = <span class="keyword">defined</span> $ssh_user ? $ssh_user : <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;\n\n SCRIPT START \[$ssh_user|$ssh_start_vip\]&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;\n SCRIPT STOP \[$ssh_user|$ssh_stop_vip\]\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( $command eq <span class="string">&quot;stop&quot;</span> || $command eq <span class="string">&quot;stopssh&quot;</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;Disabling the VIP on old master: $orig_master_host \n&quot;</span>;</span><br><span class="line">            &amp;stop_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> <span class="string">&quot;Got Error: $@\n&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">&quot;start&quot;</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;Enabling the VIP - $vip on the new master - $new_master_host \n&quot;</span>;</span><br><span class="line">            &amp;start_vip();</span><br><span class="line">        &amp;start_arp();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> $@;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">&quot;status&quot;</span> ) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Checking the Status of the script.. OK \n&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        &amp;usage();</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">start_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$new_master_host \&quot; $ssh_start_vip \&quot;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">stop_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$orig_master_host \&quot; $ssh_stop_vip \&quot;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">start_arp</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$new_master_host \&quot; $ssh_Bcast_arp \&quot;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">usage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    <span class="string">&quot;Usage: master_ip_failover --command=start|stop|stopssh|status --ssh_user=user --orig_master_host=host --orig_master_ip=ip --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>chmod a+x /etc/mha_master/master_ip_failover_script</code></p></li><li class="lvl-2"><p><code>vim /etc/mha_master/mha.cnf</code>，添加<code>master_ip_failover_script</code>配置</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">…………</span><br><span class="line"><span class="comment">#指定检测间隔时间</span></span><br><span class="line">ping_interval=1</span><br><span class="line"><span class="comment">#指定一个脚本，该脚本实现了在主从切换之后，将虚拟ip漂移到新的master上</span></span><br><span class="line">master_ip_failover_script=/etc/mha_master/master_ip_failover_script</span><br><span class="line"><span class="comment"># mysql主从服务器信息</span></span><br><span class="line">…………</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>虚拟IP为<code>10.250.0.199</code>，将其绑定到mysql-master上</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-118 mha_master]<span class="comment"># ifconfig eth0:1 10.250.0.199/24</span></span><br><span class="line">[root@ip-10-250-0-118 mha_master]<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 9001</span><br><span class="line">        inet 10.250.0.118  netmask 255.255.255.0  broadcast 10.250.0.255</span><br><span class="line">        inet6 fe80::803:41ff:fe19:356a  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 0a:03:41:19:35:6a  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 12260  bytes 2511078 (2.3 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 10202  bytes 5216046 (4.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0:1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 9001</span><br><span class="line">        inet 10.250.0.199  netmask 255.255.255.0  broadcast 10.250.0.255</span><br><span class="line">        ether 0a:03:41:19:35:6a  txqueuelen 1000  (Ethernet)</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 43  bytes 9386 (9.1 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 43  bytes 9386 (9.1 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>再次检查配置参数</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_repl --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">………………</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info] Checking replication health on 10.250.0.186..</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info]  ok.</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info] Checking replication health on 10.250.0.102..</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info]  ok.</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info] Checking master_ip_failover_script status:</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info]   /etc/mha_master/master_ip_failover_script --<span class="built_in">command</span>=status --ssh_user=root --orig_master_host=10.250.0.118 --orig_master_ip=10.250.0.118 --orig_master_port=3306</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> SCRIPT START [root|sudo /sbin/ifconfig eth0:1 10.250.0.199 up]</span><br><span class="line"> SCRIPT STOP [root|sudo /sbin/ifconfig eth0:1 down]</span><br><span class="line"></span><br><span class="line">Checking the Status of the script.. OK</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info]  OK.</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [warning] shutdown_script is not defined.</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info] Got <span class="built_in">exit</span> code 0 (Not master dead).</span><br><span class="line"></span><br><span class="line">MySQL Replication Health is OK.</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>重新启动MHA</p></li><li class="lvl-2"><p>停止mysql-master服务</p></li><li class="lvl-2"><p>查看MHA日志</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">----- Failover Report -----</span><br><span class="line"></span><br><span class="line">mha: MySQL Master failover 10.250.0.118(10.250.0.118:3306) to 10.250.0.186(10.250.0.186:3306) succeeded</span><br><span class="line"></span><br><span class="line">Master 10.250.0.118(10.250.0.118:3306) is down!</span><br><span class="line"></span><br><span class="line">Check MHA Manager logs at ip-10-250-0-91.cn-northwest-1.compute.internal:/etc/mha_master/manager.log <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">Started automated(non-interactive) failover.</span><br><span class="line">Invalidated master IP address on 10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Selected 10.250.0.186(10.250.0.186:3306) as a new master.</span><br><span class="line">10.250.0.186(10.250.0.186:3306): OK: Applying all logs succeeded.</span><br><span class="line">10.250.0.186(10.250.0.186:3306): OK: Activated master IP address.</span><br><span class="line">10.250.0.102(10.250.0.102:3306): OK: Slave started, replicating from 10.250.0.186(10.250.0.186:3306)</span><br><span class="line">10.250.0.186(10.250.0.186:3306): Resetting slave info succeeded.</span><br><span class="line">Master failover to 10.250.0.186(10.250.0.186:3306) completed successfully.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时查看新的master的ip</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-186 mysql8]<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 9001</span><br><span class="line">        inet 10.250.0.186  netmask 255.255.255.0  broadcast 10.250.0.255</span><br><span class="line">        inet6 fe80::895:fcff:fe7f:ee0c  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 0a:95:<span class="built_in">fc</span>:7f:ee:0c  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 12284  bytes 3862460 (3.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 10558  bytes 2559446 (2.4 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0:1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 9001</span><br><span class="line">        inet 10.250.0.199  netmask 255.0.0.0  broadcast 10.255.255.255</span><br><span class="line">        ether 0a:95:<span class="built_in">fc</span>:7f:ee:0c  txqueuelen 1000  (Ethernet)</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 41  bytes 9270 (9.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 41  bytes 9270 (9.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><blockquote><p>另外查询原master，其也已经解除了虚拟IP的绑定，此时说明虚拟IP迁移成功，故障转移成功！</p></blockquote><div class="note danger"><p>AWS不支持在EC2上开启VIP，需要使用其它解决方案，这个不在这里讨论。</p></div><div class="note info"><p>可以在MHA配置文件中配置<code>report_script</code>，其对应一个脚本文件，用于故障转移时发出告警信息。<br>可以发送邮件，也可以调用企业微信或者钉钉的接口实现，这里不再赘述。</p></div>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;MySql-MHA的构建过程&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;,&lt;code&gt;mha4mysql-0.58-0.el7.centos&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySql单节点、主从、双主的构建方法</title>
    <link href="https://blog.hanqunfeng.com/2022/09/14/mysql8-config/"/>
    <id>https://blog.hanqunfeng.com/2022/09/14/mysql8-config/</id>
    <published>2022-09-14T13:30:05.000Z</published>
    <updated>2022-10-19T13:50:27.099Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">MySql单节点、主从、双主的构建过程，及其配置文件的说明</li><li class="lvl-2">本文基于<code>mysql-8.0.30</code></li></ul><span id="more"></span><h2 id="1-单节点">1.单节点</h2><h3 id="安装">安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.下载</span></span><br><span class="line">wget https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.30-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.解压</span></span><br><span class="line">tar -Jxvf mysql-8.0.30-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.重命名</span></span><br><span class="line"><span class="built_in">mv</span> mysql-8.0.30-linux-glibc2.12-x86_64 mysql8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.切换到root</span></span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.创建mysql用户和mysql组</span></span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql -s /bin/false mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.创建数据目录并赋予权限</span></span><br><span class="line"><span class="built_in">cd</span> mysql8</span><br><span class="line"><span class="built_in">mkdir</span> -p datas/mysql</span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql datas</span><br><span class="line"><span class="built_in">chmod</span> -R 750 datas</span><br><span class="line"><span class="built_in">mkdir</span> sock</span><br><span class="line"><span class="built_in">chmod</span> 777 sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.设置环境变量</span></span><br><span class="line">vim /etc/bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/soft/mysql8/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.创建配置文件</span></span><br><span class="line"><span class="built_in">touch</span> my.cnf</span><br></pre></td></tr></table></figure><div class="warning"><p><strong>警告⚠️</strong><br><strong>默认情况下，mysql按照下面的文件顺序加载配置，后面的配置会覆盖前面的配置</strong><br><code>/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf</code><br>建议将配置文件创建到<code>/etc/my.cnf</code>，这样所有用户都可以使用，特殊配置可以创建在当前用户的<code>~/.my.cnf</code>中</p></div><h3 id="配置">配置</h3><div class="tips"><p><strong>配置段说明</strong></p><ul class="lvl-1"><li class="lvl-2">[mysql] 和 [client] 都是针对客户端的配置，后面的配置会覆盖前面的相同配置</li><li class="lvl-2">[mysql] 只针对 <code>mysql</code> 命令</li><li class="lvl-2">[client] 针对 <code>mysql</code>、<code>mysqldump</code>、<code>mysqlimport</code>、<code>mysqladmin</code>, 等等，所有的客户端命令</li><li class="lvl-2">[mysqld] 只是针对服务器端的配置，针对 <code>mysqld</code> 命令</li></ul></div><ul class="lvl-0"><li class="lvl-2"><p>配置文件示例</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">vim my.cnf</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line"><span class="comment"># 默认字符集，utf8mb4每个中文占四个字节，可以存入表情符号</span></span><br><span class="line"><span class="comment"># varchar(255)所表示的单位是字符，而一个汉字一个字母都是一字符。所以这里可以存储255个汉字或者255个字母。</span></span><br><span class="line"><span class="comment"># varchar的存储上限是65535字节，所以utf8mb4的varchar(16383)是上限(65535/4)</span></span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"><span class="comment"># mysqlimport和 load data local infile 导入文件开关，mysql和mysqld都要开通，默认关闭</span></span><br><span class="line">local_infile=ON</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">port       = 3306</span><br><span class="line"><span class="comment"># 本机socket保存路径，执行命令的用户要对该路径有访问权限</span></span><br><span class="line">socket     = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># 关闭mysql服务端对客户端的DNS解析，可以加快连接效率，mysql主机查询DNS很慢或是有很多客户端主机时会导致连接很慢时可以配置这个选项</span></span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用MySQL outfile导出文件，mysqldump</span></span><br><span class="line"><span class="comment"># 限制mysql不允许导出，默认值</span></span><br><span class="line"><span class="comment"># secure_file_prive=null</span></span><br><span class="line"><span class="comment"># 限制mysql的导出只能发生在默认的/path/目录下</span></span><br><span class="line"><span class="comment"># secure_file_priv=/path/</span></span><br><span class="line"><span class="comment"># 不对mysql的导出做限制，可以导出到任意目录</span></span><br><span class="line">secure_file_priv=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysqlimport和 load data local infile 导入文件开关，mysql和mysqld都要开通，默认关闭</span></span><br><span class="line">local_infile=ON</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认使用mysql_native_password插件认证</span></span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口号</span></span><br><span class="line">port       = 3306</span><br><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id  = 1001</span><br><span class="line"><span class="comment"># 执行用户</span></span><br><span class="line">user       = mysql</span><br><span class="line"><span class="comment"># 本机socket保存路径</span></span><br><span class="line">socket     = /tmp/mysql.sock</span><br><span class="line"><span class="comment"># 安装目录</span></span><br><span class="line">basedir    = /usr/local/soft/mysql8</span><br><span class="line"><span class="comment"># 数据存放目录</span></span><br><span class="line">datadir    = /usr/local/soft/mysql8/datas/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启binlog日志，定义日志存储路径</span></span><br><span class="line">log-bin    = /usr/local/soft/mysql8/datas/mysql/mysql-bin</span><br><span class="line"><span class="comment"># binlog格式，有3种，statement,row,mixed，</span></span><br><span class="line"><span class="comment"># 推荐row，存储的每个sql的执行结果，安全性高，但是比较占磁盘空间</span></span><br><span class="line"><span class="comment"># statement存储的是sql语句，执行效率高，但是可能主从执行结果不一致</span></span><br><span class="line"><span class="comment"># mixed，statement和row都会存，主从同步时由从库的优化器决定具体的执行内容</span></span><br><span class="line">binlog-format = ROW</span><br><span class="line"><span class="comment"># binlog日志过期时间，单位秒，过期的binlog日志会被删除，保证磁盘空间，这里设置为10天，mysql8以前的版本这个参数是expire-logs-days，单位是天</span></span><br><span class="line">binlog_expire_logs_seconds =864000</span><br><span class="line"><span class="comment"># 1：每次写入都会与磁盘同步，会影响性能，0：事务提交时mysql不做磁盘操作，由系统决定</span></span><br><span class="line">sync-binlog=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># innodb数据存储目录</span></span><br><span class="line">innodb_data_home_dir      =/usr/local/soft/mysql8/datas/mysql</span><br><span class="line">innodb_log_group_home_dir =/usr/local/soft/mysql8/datas/mysql</span><br><span class="line"><span class="comment">#日志及进程数据的存放目录</span></span><br><span class="line">log-error =/usr/local/soft/mysql8/datas/mysql/mysql.log</span><br><span class="line">pid-file  =/usr/local/soft/mysql8/datas/mysql/mysql.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码</span></span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line"><span class="comment"># 不区分表名称大小写</span></span><br><span class="line">lower_case_table_names=1</span><br><span class="line"><span class="comment"># 默认就是1，是否自动提交，如果有事务，则跟着事务提交</span></span><br><span class="line">autocommit =1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 慢查询分析工具</span></span><br><span class="line"><span class="comment"># 1.mysqldumpslow，mysql自带</span></span><br><span class="line"><span class="comment"># 2.pt-query-digest，第三方:https://www.percona.com/downloads/percona-toolkit/LATEST/ß</span></span><br><span class="line"><span class="comment"># 开启慢查询日志，默认关闭</span></span><br><span class="line">slow_query_log=1</span><br><span class="line"><span class="comment"># 慢查询日志存放路径</span></span><br><span class="line">slow_query_log_file=/usr/local/soft/mysql8/datas/mysql/db_slow.log</span><br><span class="line"><span class="comment"># 超过5秒就认为是慢查询语句，默认10秒</span></span><br><span class="line">long_query_time=5</span><br><span class="line"><span class="comment"># 输出类型为文件类型，支持TABLE和FILE类型，如果是TABLE，select * from mysql.slow_log;</span></span><br><span class="line"><span class="comment">#log_output=FILE,TABLE</span></span><br><span class="line"><span class="comment"># 默认就是文件</span></span><br><span class="line">log_output=FILE</span><br><span class="line"><span class="comment"># 记录没有使用索引的查询语句，默认关闭</span></span><br><span class="line">log_queries_not_using_indexes=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳过外部锁定，默认配置。External-locking用于多进程条件下为MyISAM数据表进行锁定</span></span><br><span class="line"><span class="comment"># 当外部锁定（external-locking）起作用时，每个进程若要访问数据表，则必须等待之前的进程完成操作并解除锁定。</span></span><br><span class="line">skip-external-locking</span><br><span class="line"><span class="comment"># 索引块的缓冲区的大小</span></span><br><span class="line">key_buffer_size = 256M</span><br><span class="line"><span class="comment"># 指mysql服务器端和客户端在一次传送数据包的过程当中最大允许的数据包大小</span></span><br><span class="line">max_allowed_packet = 64M</span><br><span class="line"><span class="comment"># 数据库打开表的缓存数量，即表的高速缓存</span></span><br><span class="line"><span class="comment"># 每个连接进来，都会至少打开一个表缓存。例如，对于 200 个并行运行的连接，应该让表的缓存至少有 200 × N ，这里 N 是应用可以执行的SQL语句中所需要表的最大数量。</span></span><br><span class="line">table_open_cache = 1024</span><br><span class="line"><span class="comment"># 排序缓冲区大小</span></span><br><span class="line">sort_buffer_size = 4M</span><br><span class="line">net_buffer_length = 8K</span><br><span class="line">read_buffer_size = 4M</span><br><span class="line">read_rnd_buffer_size = 512K</span><br><span class="line">myisam_sort_buffer_size = 64M</span><br><span class="line"><span class="comment"># 线程缓存的数量，当客户端断开之后，服务器处理此客户的线程将会缓存起来以响应下一个客户而不是销毁(前提是缓存数未达上限)</span></span><br><span class="line">thread_cache_size = 64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时表的内存缓存大小</span></span><br><span class="line">tmp_table_size = 128M</span><br><span class="line"><span class="comment"># 数据行更新时，timestamp类型字段不更新为当前时间</span></span><br><span class="line">explicit_defaults_for_timestamp = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 最大连接数</span></span><br><span class="line">max_connections = 500</span><br><span class="line"><span class="comment"># 某一客户端尝试连接服务器端，允许最大的失败次数，超过这个设置，则服务端会强制阻止该客户端的连接</span></span><br><span class="line">max_connect_errors = 100</span><br><span class="line"><span class="comment"># 使用的最大文件描述(FD)符数量，这个值不一定是这个设置的值，与操作系统设置以及最大连接数等有关</span></span><br><span class="line">open_files_limit = 65535</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line">innodb_data_file_path = ibdata1:10M:autoextend</span><br><span class="line"><span class="comment"># buffer_pool缓冲区大小，默认128M</span></span><br><span class="line">innodb_buffer_pool_size = 1024M</span><br><span class="line"><span class="comment"># redo log 文件大小，默认48M ,该参数已经过期，MySQL8.0.30引入了一个新特性：动态调整redo日志的大小</span></span><br><span class="line"><span class="comment"># innodb_log_file_size = 256M</span></span><br><span class="line"><span class="comment"># redo log buffer缓冲区大小，默认16M</span></span><br><span class="line">innodb_log_buffer_size = 16M</span><br><span class="line">innodb_flush_log_at_trx_commit = 1</span><br><span class="line">innodb_lock_wait_timeout = 50</span><br><span class="line"><span class="comment"># 修改默认的事务隔离级别，默认为REPEATABLE-READ</span></span><br><span class="line"><span class="comment"># transaction-isolation=READ-COMMITTED</span></span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 256M</span><br><span class="line">sort_buffer_size = 4M</span><br><span class="line">read_buffer = 2M</span><br><span class="line">write_buffer = 2M</span><br><span class="line"></span><br><span class="line">[mysqlhotcopy]</span><br><span class="line">interactive-timeout</span><br></pre></td></tr></table></figure><h3 id="数据库初始化">数据库初始化</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 说明：--initialize-insecure 初始化时无密码</span></span><br><span class="line"><span class="comment"># 从默认位置查找配置文件</span></span><br><span class="line">sudo mysqld --user=mysql --initialize-insecure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以指定配置文件的位置</span></span><br><span class="line">sudo mysqld --defaults-file=/usr/local/soft/mysql8/my.cnf --user=mysql --initialize-insecure</span><br></pre></td></tr></table></figure><h3 id="启动数据库">启动数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后台启动</span></span><br><span class="line"><span class="comment"># 从默认位置查找配置文件</span></span><br><span class="line">sudo mysqld_safe --user=mysql &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以指定配置文件的位置</span></span><br><span class="line">sudo mysqld_safe --defaults-file=/usr/local/soft/mysql8/my.cnf --user=mysql &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否启动成功</span></span><br><span class="line">ps -ef|grep mysql</span><br></pre></td></tr></table></figure><h3 id="开机启动">开机启动</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /etc/rc.d/rc.local</span><br><span class="line">sudo vim /etc/rc.local</span><br><span class="line"></span><br><span class="line"><span class="comment"># start mysql8</span></span><br><span class="line"><span class="comment"># 从默认位置查找配置文件</span></span><br><span class="line">sudo /usr/local/soft/mysql8/bin/mysqld_safe --user=mysql &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以指定配置文件的位置</span></span><br><span class="line">sudo /usr/local/soft/mysql8/bin/mysqld_safe --defaults-file=/usr/local/soft/mysql8/my.cnf --user=mysql &amp;</span><br></pre></td></tr></table></figure><h3 id="登录">登录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 无密码登录，第一次登录没有密码，所以使用这种方式登录</span></span><br><span class="line">mysql -uroot --skip-password</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码登录</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程登录</span></span><br><span class="line">mysql -uroot -p -hxxx.xxx.xxx.xxx -P3306</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>遇到的问题</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error <span class="keyword">while</span> loading shared libraries:libtinfo.so.5: cannot open shared object file : No such file or directory</span><br></pre></td></tr></table></figure><blockquote><p>解决方法</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s /usr/lib64/libtinfo.so.6.0 /usr/lib64/libtinfo.so.5</span><br><span class="line"><span class="comment"># 注意：不同系统的版本可能这个文件名称后缀不一样，总之找到类似libtinfo.so.6.x的就行</span></span><br></pre></td></tr></table></figure><h3 id="修改密码">修改密码</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="comment"># 刷新权限</span></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h3 id="授予root用户system-user权限">授予root用户<code>system_user</code>权限</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant system_user on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h3 id="开启远程访问">开启远程访问</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许远程访问</span></span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; update user <span class="built_in">set</span> user.Host=<span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user.User=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; select user,host from user;</span><br></pre></td></tr></table></figure><h3 id="关闭mysql">关闭mysql</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysqladmin -uroot -p shutdown</span><br></pre></td></tr></table></figure><h2 id="2-主从">2.主从</h2><ul class="lvl-0"><li class="lvl-2"><p>参照单节点的构建方式搭建好两台mysql，主从计划如下:</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">master: 10.250.0.243</span><br><span class="line">slave:  10.250.0.82</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>master和slave的<code>server-id</code>不能相同</p></li><li class="lvl-2"><p>master必须开启binlog功能</p></li><li class="lvl-2"><p>slave必须开启中继日志</p></li><li class="lvl-2"><p>在云环境中，如果slave是通过master的镜像创建的，要修改slave的<code>datadir</code>中auto.cnf文件中的uuid的值，master和salve是不能相同的。</p></li></ul><blockquote><p>auto.cnf</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[auto]</span><br><span class="line">server-uuid=6e9a571e-330e-11ed-a3f8-0a53e7cced43</span><br></pre></td></tr></table></figure><h3 id="master配置文件">master配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id = 1001</span><br><span class="line"><span class="comment"># 开启binlog日志</span></span><br><span class="line">log-bin    = mysql-bin</span><br></pre></td></tr></table></figure><h3 id="slave配置文件">slave配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id = 1002</span><br><span class="line"><span class="comment"># 打开mysql中继日志，从库必须打开</span></span><br><span class="line">relay-log-index=slave-relay-bin.index</span><br><span class="line">relay-log=slave-relay-bin</span><br><span class="line"><span class="comment"># 是否自动清空不再需要中继日志，默认1：自动清空，0：不清空</span></span><br><span class="line">relay_log_purge=1</span><br><span class="line"><span class="comment"># 默认从库同步主库的数据时，是不会写入从库的binlog日志的，所以要想同步数据也记录binlog，则需要开启该参数</span></span><br><span class="line"><span class="comment"># 如果从库作为其它库的主库时，必须开启该参数</span></span><br><span class="line">log_slave_updates=1</span><br></pre></td></tr></table></figure><h3 id="主库创建同步帐号">主库创建同步帐号</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x27;10.250.%.%&#x27; 表示只能局域网段内的ip才能访问，如果不限制ip，可以配置为&#x27;%&#x27;</span></span><br><span class="line">mysql&gt; CREATE USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><blockquote><p>如果此时主库已经有数据，则需要先将主库数据导入到从库后再开启主从复制</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主库执行导出数据</span></span><br><span class="line">mysqldump -uroot --all-databases --triggers --routines --events -p &gt; all_databases.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出数据时，为了防止数据变化可以先锁表</span></span><br><span class="line"><span class="comment"># 锁</span></span><br><span class="line">mysql&gt; FLUSH TABLES WITH READ LOCK;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解锁</span></span><br><span class="line">mysql&gt; UNLOCK TABLES;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库执行导入数据</span></span><br><span class="line">mysql -uroot -p &lt; all_databases.sql</span><br></pre></td></tr></table></figure><h3 id="从节点设置同步">从节点设置同步</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看主节点master状态信息，记录File和Position两个信息</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000008 |     1140 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从节点设置同步信息，关联master中查询到的File和Position两个信息</span></span><br><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;10.250.0.243&#x27;</span>,</span><br><span class="line">    MASTER_PORT=3306,</span><br><span class="line">    MASTER_USER=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_PASSWORD=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000008&#x27;</span>,</span><br><span class="line">    MASTER_LOG_POS=1140;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动从库的复制线程</span></span><br><span class="line">mysql&gt; START slave;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看从库同步状态</span></span><br><span class="line">mysql&gt; SHOW slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State:</span><br><span class="line">                  Master_Host: 10.250.0.243</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000008</span><br><span class="line">          Read_Master_Log_Pos: 1140</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000001</span><br><span class="line">                Relay_Log_Pos: 4</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000008</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><blockquote><p>如果<code>Slave_IO_Running</code>和<code>Slave_SQL_Running</code>都是<code>Yes</code>，则说明主从复制配置成功。</p></blockquote><blockquote><p>此时在master中执行<code>SHOW PROCESSLIST;</code>可以查看到同步信息</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  SHOW PROCESSLIST;</span><br><span class="line">+----+-----------------+-------------------+------+-------------+------+-----------------------------------------------------------------+------------------+</span><br><span class="line">| Id | User            | Host              | db   | Command     | Time | State                                                           | Info             |</span><br><span class="line">+----+-----------------+-------------------+------+-------------+------+-----------------------------------------------------------------+------------------+</span><br><span class="line">|  5 | event_scheduler | localhost         | NULL | Daemon      |   49 | Waiting on empty queue                                          | NULL             |</span><br><span class="line">|  8 | vagrant         | 10.250.0.82:33924 | NULL | Binlog Dump |   49 | Source has sent all binlog to replica; waiting <span class="keyword">for</span> more updates | NULL             |</span><br><span class="line">|  9 | root            | 127.0.0.1:42410   | NULL | Query       |    0 | init                                                            | SHOW PROCESSLIST |</span><br><span class="line">+----+-----------------+-------------------+------+-------------+------+-----------------------------------------------------------------+------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><blockquote><p>主从架构，从库应该是禁止写操作的，否则有可能会导致主从同步失败（如主键冲突），所以为了保证数据的一致性，应该禁止从库写操作。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从库的配置文件增加如下内容，并重启从库</span></span><br><span class="line"><span class="comment"># 开启普通用户只读</span></span><br><span class="line">read_only=1</span><br><span class="line"><span class="comment"># 开启root用户只读</span></span><br><span class="line">super_read_only=1</span><br></pre></td></tr></table></figure><blockquote><p>开启GTID（全局事务ID）主从复制模式</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master和slave的my.cnf中分别加入，并重启mysql服务</span></span><br><span class="line">gtid_mode=on</span><br><span class="line">enforce_gtid_consistency=on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当有数据更新后查询master状态，可以看到Executed_Gtid_Set 中有值了，这个值会随着数据更新不断更新</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                      |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| mysql-bin.000014 |     1183 |              |                  | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1 |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SHOW VARIABLES like <span class="string">&quot;%gtid%&quot;</span>;</span><br><span class="line">+----------------------------------+----------------------------------------+</span><br><span class="line">| Variable_name                    | Value                                  |</span><br><span class="line">+----------------------------------+----------------------------------------+</span><br><span class="line">| binlog_gtid_simple_recovery      | ON                                     |</span><br><span class="line">| enforce_gtid_consistency         | ON                                     |</span><br><span class="line">| gtid_executed                    | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1 |</span><br><span class="line">| gtid_executed_compression_period | 0                                      |</span><br><span class="line">| gtid_mode                        | ON                                     |</span><br><span class="line">| gtid_next                        | AUTOMATIC                              |</span><br><span class="line">| gtid_owned                       |                                        |</span><br><span class="line">| gtid_purged                      |                                        |</span><br><span class="line">| session_track_gtids              | OFF                                    |</span><br><span class="line">+----------------------------------+----------------------------------------+</span><br><span class="line">9 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><blockquote><p>主从架构，一个master可以配置多个slave。</p></blockquote><h3 id="主从模式高可用架构，MHA-Master-High-Availability-Manager-and-Tools-for-MySQL">主从模式高可用架构，MHA(Master High Availability Manager and Tools for MySQL)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">是由日本人开发的一个基于Perl脚本写的工具。这个工具专门用于监控主库的状态，</span><br><span class="line">当发现master节点故障时，会提升其中拥有新数据的slave节点成为新的master节点，</span><br><span class="line">在此期间，MHA会通过其他从节点获取额外的信息来避免数据一致性方面的问题。</span><br><span class="line">MHA还提供了mater节点的在线切换功能，即按需切换master-slave节点。</span><br><span class="line">MHA能够在30秒内实现故障切换，并能在故障切换过程中，最大程度的保证数据一致性。</span><br><span class="line">MHA是需要单独部署的，分为Manager节点和Node节点，两种节点。</span><br><span class="line">其中Manager节点一般是单独部署的一台机器。而Node节点一般是部署在每台MySQL机器上的。</span><br><span class="line">Node节点得通过解析各个MySQL的日志来进行一些操作。</span><br><span class="line">Manager节点会通过探测集群里的Node节点去判断各个Node所在机器上的MySQL运行是否正常，</span><br><span class="line">如果发现某个Master故障了，就直接把他的一个Slave提升为Master，然后让其他Slave都挂到新的Master上去，完全透明。</span><br></pre></td></tr></table></figure><blockquote><p>MHA安装包下载地址：<a href="https://github.com/yoshinorim/mha4mysql-manager/releases">https://github.com/yoshinorim/mha4mysql-manager/releases</a><br>MHA使用说明：<a href="https://github.com/yoshinorim/mha4mysql-manager/wiki">https://github.com/yoshinorim/mha4mysql-manager/wiki</a></p></blockquote><h2 id="3-双主">3.双主</h2><ul class="lvl-0"><li class="lvl-2"><p>双主模式就是两个mysql互为主从</p></li><li class="lvl-2"><p>两个master都不能设置只读</p></li><li class="lvl-2"><p>以上面主从为例，我们继续搭建双主架构</p></li></ul><h3 id="从库关闭只读并开启binlog">从库关闭只读并开启binlog</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启普通用户只读</span></span><br><span class="line"><span class="comment"># read_only=1</span></span><br><span class="line"><span class="comment"># 开启root用户只读</span></span><br><span class="line"><span class="comment"># super_read_only=1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id = 1002</span><br><span class="line"><span class="comment"># 开启binlog日志</span></span><br><span class="line">log-bin    = mysql-bin</span><br></pre></td></tr></table></figure><h3 id="主库也要开启中继日志">主库也要开启中继日志</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id = 1001</span><br><span class="line"><span class="comment"># 打开mysql中继日志，从库必须打开</span></span><br><span class="line">relay-log-index=slave-relay-bin.index</span><br><span class="line">relay-log=slave-relay-bin</span><br><span class="line"><span class="comment"># 是否自动清空不再需要中继日志，默认1：自动清空，0：不清空</span></span><br><span class="line">relay_log_purge=1</span><br><span class="line"><span class="comment"># 默认从库同步主库的数据时，是不会写入从库的binlog日志的，所以要想同步数据也记录binlog，则需要开启该参数</span></span><br><span class="line"><span class="comment"># 如果从库作为其它库的主库时，必须开启该参数</span></span><br><span class="line">log_slave_updates=1</span><br></pre></td></tr></table></figure><h3 id="从库上创建同步帐号">从库上创建同步帐号</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x27;10.250.%.%&#x27; 表示只能局域网段内的ip才能访问，如果不限制ip，可以配置为&#x27;%&#x27;</span></span><br><span class="line">mysql&gt; CREATE USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h3 id="查看从库的master状态">查看从库的master状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  SHOW master status;</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                      |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| mysql-bin.000014 |     1183 |              |                  | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1 |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="主库上配置主从信息">主库上配置主从信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;10.250.0.82&#x27;</span>,</span><br><span class="line">    MASTER_PORT=3306,</span><br><span class="line">    MASTER_USER=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_PASSWORD=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000014&#x27;</span>,</span><br><span class="line">    MASTER_LOG_POS=1183;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动复制线程</span></span><br><span class="line">mysql&gt; START slave;</span><br><span class="line"></span><br><span class="line">mysql&gt; SHOW slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: 10.250.0.82</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000014</span><br><span class="line">          Read_Master_Log_Pos: 1183</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 326</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000014</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><blockquote><p>此时双主架构搭建完成。<br>双主架构下，每个master还可以配置多个slave用于数据备份。</p></blockquote><h3 id="双主架构自增主键冲突问题解决方法">双主架构自增主键冲突问题解决方法</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master1</span></span><br><span class="line"><span class="comment"># auto_increment字段产生的数值是：1, 3, 5, 7, …等奇数ID了</span></span><br><span class="line">auto_increment_offset = 1</span><br><span class="line">auto_increment_increment = 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># master2</span></span><br><span class="line"><span class="comment"># auto_increment字段产生的数值是：2, 4, 6, 8, …等偶数ID了</span></span><br><span class="line">auto_increment_offset = 2</span><br><span class="line">auto_increment_increment = 2</span><br></pre></td></tr></table></figure><h3 id="双主高可用架构：MMM-Master-Master-replication-managerfor-Mysql，Mysql主主复制管理器">双主高可用架构：MMM(Master-Master replication managerfor Mysql，Mysql主主复制管理器)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">是一套由Perl语言实现的脚本程序，可以对mysql集群进行监控和故障迁移。</span><br><span class="line">他需要两个Master，同一时间只有一个Master对外提供服务，可以说是主备模式。</span><br><span class="line">他是通过一个VIP(虚拟IP)的机制来保证集群的高可用。</span><br><span class="line">整个集群中，在主节点上会通过一个VIP地址来提供数据读写服务，</span><br><span class="line">而当出现故障时，VIP就会从原来的主节点漂移到其他节点，由其他节点提供服务。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>MMM官网：<a href="https://www.mysql-mmm.org">https://www.mysql-mmm.org</a></p></li></ul><h2 id="4-半同步复制">4.半同步复制</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">无论是主从复制还是双主复制，默认数据同步都是异步进行，主服务在向客户端反馈执行结果时，是不知道binlog是否同步成功了的。</span><br><span class="line">这时候如果主服务宕机了，而从服务还没有备份到新执行的binlog，那就有可能会丢数据。</span><br><span class="line">那怎么解决这个问题呢，这就要靠MySQL的半同步复制机制来保证数据安全。</span><br><span class="line">半同步复制机制是一种介于异步复制和全同步复制之前的机制。</span><br><span class="line">主库在执行完客户端提交的事务后，并不是立即返回客户端响应，而是等待至少一个从库接收并写到relay log中，才会返回给客户端。</span><br><span class="line">MySQL在等待确认时，默认会等10秒，如果超过10秒没有收到ack，就会降级成为异步复制。</span><br></pre></td></tr></table></figure><h3 id="安装半同步复制插件">安装半同步复制插件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master需要安装</span></span><br><span class="line">mysql&gt; install plugin rpl_semi_sync_master soname <span class="string">&#x27;semisync_master.so&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.02 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库需要安装</span></span><br><span class="line">mysql&gt; install plugin rpl_semi_sync_slave soname <span class="string">&#x27;semisync_slave.so&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure><blockquote><p>如果是双主架构，则都需要安装两个插件</p></blockquote><blockquote><p>开启配置</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启半同步复制，binlog至少传送到一个从节点，但不保证从节点一定应用了这个binlog，开启这个服务性能会有所下降</span></span><br><span class="line"><span class="comment"># master设置，需要安装插件install plugin rpl_semi_sync_master soname &#x27;semisync_master.so&#x27;;</span></span><br><span class="line">rpl_semi_sync_master_enabled=1</span><br><span class="line"><span class="comment"># slave设置，需要安装插件install plugin rpl_semi_sync_slave soname &#x27;semisync_slave.so&#x27;;</span></span><br><span class="line">rpl_semi_sync_slave_enabled=1</span><br></pre></td></tr></table></figure><blockquote><p>重启mysql后查看是否配置成功</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show global variables like <span class="string">&#x27;rpl_semi%&#x27;</span>;</span><br><span class="line">+-------------------------------------------+------------+</span><br><span class="line">| Variable_name                             | Value      |</span><br><span class="line">+-------------------------------------------+------------+</span><br><span class="line">| rpl_semi_sync_master_enabled              | ON         |</span><br><span class="line">| rpl_semi_sync_master_timeout              | 10000      |</span><br><span class="line">| rpl_semi_sync_master_trace_level          | 32         |</span><br><span class="line">| rpl_semi_sync_master_wait_for_slave_count | 1          |</span><br><span class="line">| rpl_semi_sync_master_wait_no_slave        | ON         |</span><br><span class="line">| rpl_semi_sync_master_wait_point           | AFTER_SYNC |</span><br><span class="line">| rpl_semi_sync_slave_enabled               | ON         |</span><br><span class="line">| rpl_semi_sync_slave_trace_level           | 32         |</span><br><span class="line">+-------------------------------------------+------------+</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;MySql单节点、主从、双主的构建过程，及其配置文件的说明&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Redis单节点、主从、哨兵、集群构建方法</title>
    <link href="https://blog.hanqunfeng.com/2022/09/09/redis5-config/"/>
    <id>https://blog.hanqunfeng.com/2022/09/09/redis5-config/</id>
    <published>2022-09-09T13:30:05.000Z</published>
    <updated>2022-10-11T03:37:10.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">redis单节点、主从、哨兵、集群的构建过程，及其配置文件的说明</li><li class="lvl-2">本文基于<code>redis-5.0.14</code></li></ul><span id="more"></span><h2 id="redis安装">redis安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://download.redis.io/releases/redis-5.0.14.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf redis-5.0.14.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">sudo yum install gcc</span><br><span class="line"><span class="built_in">cd</span> redis-5.0.14</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line"><span class="built_in">mv</span> redis.conf redis-6379.conf</span><br><span class="line">vim redis-6379.conf <span class="comment">#见下面的配置信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动redis</span></span><br><span class="line"><span class="comment"># 启动前要先创建好相关目录结构</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/soft/dir-redis5/6379</span><br><span class="line">src/redis-server redis-6379.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入环境变量 /etc/bashrc</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/soft/redis-5.0.14/src</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快捷命令</span></span><br><span class="line"><span class="built_in">alias</span> redis-start=<span class="string">&quot;redis-server /usr/local/soft/redis-5.0.14/redis-6379.conf&quot;</span></span><br><span class="line"><span class="built_in">alias</span> redis-stop=<span class="string">&quot;pkill redis-server&quot;</span></span><br></pre></td></tr></table></figure><h2 id="config命令设置">config命令设置</h2><ul class="lvl-0"><li class="lvl-2"><p>对于已经启动的redis服务，如果不想修改配置文件重启服务的话，也可以通过命令对部分参数进行设置，比如慢查询日志设置</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询</span></span><br><span class="line">127.0.0.1:6379&gt; config get slow*</span><br><span class="line">1) <span class="string">&quot;slowlog-log-slower-than&quot;</span></span><br><span class="line">2) <span class="string">&quot;10000&quot;</span></span><br><span class="line">3) <span class="string">&quot;slowlog-max-len&quot;</span></span><br><span class="line">4) <span class="string">&quot;128&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置</span></span><br><span class="line">127.0.0.1:6379&gt; config <span class="built_in">set</span> slowlog-max-len 1024</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入redis.conf</span></span><br><span class="line">127.0.0.1:6379&gt; config rewrite</span><br><span class="line">OK</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="单节点">单节点</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口</span></span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台启动</span></span><br><span class="line">daemonize <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不设置密码，需要关闭保护模式，开启的话只有本机能够访问，建议开启密码保护</span></span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释掉bind，绑定的是自己机器网卡的ip，如果有多块网卡可以配多个ip,代表允许客户端通过机器的哪些网卡ip去访问，内网一般可以不配置</span></span><br><span class="line"><span class="comment">#bind 127.0.0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释掉，因为会启用混合持久化，所以不需要开启rdb快照</span></span><br><span class="line"><span class="comment"># save xx xxx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置dir路径，redis日志、aof和rdb文件都会生成在这个路径下</span></span><br><span class="line"><span class="built_in">dir</span> /usr/local/soft/dir-redis5/6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启aof，实际上只需要开启这个配置，以下aof相关配置默认即可</span></span><br><span class="line">appendonly <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># aof文件名称</span></span><br><span class="line">appendfilename <span class="string">&quot;6379-appendonly.aof&quot;</span></span><br><span class="line"><span class="comment"># aof将数据fsync到磁盘的策略，默认即可，表示每秒一次，故障时最多会丢失一秒的数据</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"><span class="comment"># aof文件至少要达到64M才会自动重写，文件太小恢复速度本来就很快，重写的意义不大，默认即可</span></span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"><span class="comment"># aof文件自上一次重写后文件大小增长了100%则再次触发重写，默认即可</span></span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启混合持久化，4.0以后版本支持，需要先开启aof</span></span><br><span class="line">aof-use-rdb-preamble <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pid文件路径</span></span><br><span class="line">pidfile /usr/local/soft/dir-redis5/6379/redis_6379.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件名称</span></span><br><span class="line">logfile <span class="string">&quot;6379.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定最大内存，单位bytes，这里设置4G</span></span><br><span class="line"><span class="comment"># 如果不设置最大内存，redis会默认为物理内存，达到上限时会频繁与磁盘发生交换，使redis性能急剧下降</span></span><br><span class="line">maxmemory 4294967296</span><br><span class="line"><span class="comment"># 达到最大内存时的清除策略，推荐volatile-lru，淘汰很久没被访问过的数据，基于最近一次的访问时间</span></span><br><span class="line">maxmemory-policy volatile-lru</span><br><span class="line"></span><br><span class="line"><span class="comment"># 慢查询日志</span></span><br><span class="line"><span class="comment"># 单位微妙，这里表示10毫秒，即超过10毫秒的操作都会记录下来</span></span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置慢查询日志记录保存数量，如果数量已满会删除最早的记录</span></span><br><span class="line">slowlog-max-len 1024</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启密码</span></span><br><span class="line">requirepass <span class="string">&quot;password&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果主节点开启了密码认证，则从节点需要设置主节点的密码，哨兵和集群模式时都要设置</span></span><br><span class="line">masterauth <span class="string">&quot;password&quot;</span></span><br></pre></td></tr></table></figure><h3 id="单节点优点">单节点优点</h3><ul class="lvl-0"><li class="lvl-2"><p>单机部署简单方便</p></li></ul><h3 id="单节点缺点">单节点缺点</h3><ul class="lvl-0"><li class="lvl-2"><p>不保证数据的可靠性，不适用于数据可靠性要求高的场景</p></li><li class="lvl-2"><p>单点故障导致无法提供服务，或者硬盘损坏导致数据丢失</p></li><li class="lvl-2"><p>redis单节点最大qps为10w(取决于单核cpu的处理能力)，超过这个qps就需要做前端限流</p></li></ul><h2 id="主从">主从</h2><ul class="lvl-0"><li class="lvl-2"><p>主从配置时，主节点不需要做任何修改，以上面单节点配置为例，其作为主节点</p></li><li class="lvl-2"><p>从节点参照主节点的配置文件进行配置，如果在同一台机器上，需要修改端口号和相关文件路径，如下</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口</span></span><br><span class="line">port 6380</span><br><span class="line"></span><br><span class="line"><span class="comment"># pid文件路径</span></span><br><span class="line">pidfile /usr/local/soft/dir-redis5/6380/redis_6380.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件名称</span></span><br><span class="line">logfile <span class="string">&quot;6380.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置dir路径，redis日志、aof和rdb文件都会生成在这个路径下</span></span><br><span class="line"><span class="built_in">dir</span> /usr/local/soft/dir-redis5/6380</span><br><span class="line"></span><br><span class="line"><span class="comment"># aof文件名称</span></span><br><span class="line">appendfilename <span class="string">&quot;6380-appendonly.aof&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>从节点配置文件增加同步主节点信息</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定主节点，从节点会从主节点同步数据，这里10.250.0.103 6379是主节点的ip和端口号</span></span><br><span class="line">replicaof 10.250.0.103 6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置从节点只读，默认开启，避免数据写入从节点导致主从数据不一致</span></span><br><span class="line">replica-read-only <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果主节点开启了密码认证，则从节点需要设置主节点的密码</span></span><br><span class="line">masterauth <span class="string">&quot;password&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时启动从节点<code>src/redis-server redis-6379.conf</code>，会自动从主节点同步数据，同步前如果从节点已经有数据，则会先清除原有数据再进行同步</p></li><li class="lvl-2"><p>主节点接收到从节点的同步请求后，会通过bgsave将内存数据dump到rdb文件中并传递给从节点</p></li><li class="lvl-2"><p>主节点生成rdb文件并传递给从节点期间会继续处理客户端的请求，并将这部分数据缓存到内存中，待从节点接收到主节点发过来的rdb文件并完成内存加载后，主节点会将这部分缓存在内存中的数据发送给从节点</p></li><li class="lvl-2"><p>从节点相当于主节点的备份，主节点挂了，从节点不能自动切换为主节点，如果需要自动切换，可以使用哨兵或者集群部署方式</p></li><li class="lvl-2"><p>此时登录redis执行<code>info</code>命令可以在<code>Replication</code>中查看到主从配置信息</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">master:</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=10.250.0.217,port=6379,state=online,offset=770728,lag=1</span><br><span class="line">master_replid:23d3f04c39a91dbef52f03c57179932b6d189719</span><br><span class="line">master_replid2:0af821e669f22c03e624d91f6bb88671c9085591</span><br><span class="line">master_repl_offset:770728</span><br><span class="line">second_repl_offset:147042</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:114822</span><br><span class="line">repl_backlog_histlen:655907</span><br><span class="line"></span><br><span class="line">slave:</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:slave</span><br><span class="line">master_host:10.250.0.103</span><br><span class="line">master_port:6379</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:1</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_repl_offset:788994</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_replid:23d3f04c39a91dbef52f03c57179932b6d189719</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:788994</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:149845</span><br><span class="line">repl_backlog_histlen:639150</span><br></pre></td></tr></table></figure></li></ul><h3 id="主从优点">主从优点</h3><ul class="lvl-0"><li class="lvl-2"><p>对请求进行读写分离，提高处理效率</p></li><li class="lvl-2"><p>可以提供多个副本，提高数据安全性</p></li></ul><h3 id="主从缺点">主从缺点</h3><ul class="lvl-0"><li class="lvl-2"><p>不具备自动容错和恢复功能，主节点故障，集群则无法进行工作，可用性比较低，从节点升主节点需要人工手动干预</p></li></ul><h2 id="哨兵">哨兵</h2><ul class="lvl-0"><li class="lvl-2"><p>创建三个哨兵</p></li><li class="lvl-2"><p>哨兵模式时，主节点如果开启了密码认证则从节点也要开启密码认证，且密码一致，另外主节点也要配置<code>masterauth &quot;password&quot;</code>，否则主节点挂了重启后不能与从节点进行数据同步</p></li><li class="lvl-2"><p>编辑sentinel.conf</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口号</span></span><br><span class="line">port 26379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台启动</span></span><br><span class="line">daemonize <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pid文件路径</span></span><br><span class="line">pidfile /usr/local/soft/dir-redis5/redis-sentinel.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件名称</span></span><br><span class="line">logfile <span class="string">&quot;sentinel.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dir</span></span><br><span class="line"><span class="built_in">dir</span> /usr/local/soft/dir-redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置监听的主节点地址和端口，mymaster为自定义的名称，最后的2表示，只要有2个哨兵节点认为主节点挂了就会进行重新选主，一般设置为sentinel总数/2+1</span></span><br><span class="line">sentinel monitor mymaster 10.250.0.103 6379 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主节点密码</span></span><br><span class="line">sentinel auth-pass mymaster <span class="string">&quot;password&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>分别启动三个哨兵节点<code>redis-sentinel sentinel.conf</code>，此时登录哨兵节点<code>redis-cli -p 26379</code>，并执行<code>info</code>命令，可以在<code>Sentinel</code>查看到其是否正确识别了主从</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sentinel</span></span><br><span class="line">sentinel_masters:1</span><br><span class="line">sentinel_tilt:0</span><br><span class="line">sentinel_running_scripts:0</span><br><span class="line">sentinel_scripts_queue_length:0</span><br><span class="line">sentinel_simulate_failure_flags:0</span><br><span class="line">master0:name=mymaster,status=ok,address=10.250.0.103:6379,slaves=1,sentinels=2</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时查看<code>sentinel.conf</code>可以在文件最后看到从节点信息和其它的哨兵节点信息，如下</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sentinel known-replica mymaster 10.250.0.217 6379</span><br><span class="line">sentinel known-sentinel mymaster 10.250.0.189 26379 228936dfc6bb7a0fafb6a1503330887a94fff478</span><br><span class="line">sentinel known-sentinel mymaster 10.250.0.190 26379 228936dfc6bb7a0fafb6a1503330887a94fff478</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时关闭master节点，然后登录哨兵节点或者从节点查看<code>info</code>，都会发现从节点已经变成了master节点</p></li><li class="lvl-2"><p>此时再次开启原master节点，会发现其变成了从节点，相应的配置文件也发生了变更</p></li></ul><h3 id="哨兵优点">哨兵优点</h3><ul class="lvl-0"><li class="lvl-2"><p>主节点故障，可以自动在从节点中重新选主</p></li></ul><h3 id="哨兵缺点">哨兵缺点</h3><ul class="lvl-0"><li class="lvl-2"><p>哨兵单点故障，则集群无法访问，所以需要对哨兵集群部署</p></li><li class="lvl-2"><p>从节点仅作为备份不提供对外服务，只有当master出现故障时其晋升为master后才能提供服务，所以不支持读写分离</p></li></ul><h2 id="集群">集群</h2><ul class="lvl-0"><li class="lvl-2"><p>还是基于单节点配置文件，注意如果开启了密码认证，则也要配置<code>masterauth &quot;password&quot;</code></p></li><li class="lvl-2"><p>搭建6个redis的集群，3主3从，如果一台服务器上有多个redis，注意修改端口号和dir路径</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">port 6379</span><br><span class="line"><span class="built_in">dir</span> /usr/local/soft/dir-redis5/6379</span><br><span class="line">requirepass <span class="string">&quot;password&quot;</span></span><br><span class="line">masterauth <span class="string">&quot;password&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动集群模式</span></span><br><span class="line">cluster-enabled <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群节点信息文件，这里最好和port对应上</span></span><br><span class="line">cluster-config-file nodes-6379.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群节点间通信的超时时间，单位毫秒，默认15000，这个时间别设置太短，避免网络抖动等原因干扰</span></span><br><span class="line">cluster-node-timeout 15000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写数据成功最少同步的slave数量，默认数据写入master就返回给client了，加上这个配置，就需要数据同步到指定数量的slave后才能返回，</span></span><br><span class="line"><span class="comment"># 注意这个配置不仅会延长client的等待时间，而且可能会影响集群的可用性，比如这里配置至少同步1个slave，但是如果此时master对应可用的slave不足1个，集群就不能提供服务了，所以建议每个master至少配置了2个以上的slave时才开启这个配置</span></span><br><span class="line"><span class="comment"># 开启这个配置可以预防集群脑裂问题</span></span><br><span class="line">min-replicas-to-write 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果集群中某个master/slave全部挂掉，整个集群的其它master/slave是否还可以对外提供服务，默认yes，不能</span></span><br><span class="line"><span class="comment"># 如果设置为no，则表示依旧可以提供服务，不过如果有key落在了挂掉的主从上就会失败</span></span><br><span class="line">cluster-require-full-coverage <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>分别启动6个redis服务</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src/redis-server redis.conf</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>创建集群，3主3从，注意创建集群前所有redis不能有数据，如果有需要先清空</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -a password --cluster create --cluster-replicas 1 10.250.0.67:6379 10.250.0.170:6379 10.250.0.114:6379 10.250.0.110:6379 10.250.0.244:6379 10.250.0.206:6379</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时会列出集群内主从和槽位的分配方案，输入<code>yes</code>即可</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; Performing <span class="built_in">hash</span> slots allocation on 6 nodes...</span><br><span class="line">Master[0] -&gt; Slots 0 - 5460</span><br><span class="line">Master[1] -&gt; Slots 5461 - 10922</span><br><span class="line">Master[2] -&gt; Slots 10923 - 16383</span><br><span class="line">Adding replica 10.250.0.244:6379 to 10.250.0.67:6379</span><br><span class="line">Adding replica 10.250.0.206:6379 to 10.250.0.170:6379</span><br><span class="line">Adding replica 10.250.0.110:6379 to 10.250.0.114:6379</span><br><span class="line">M: df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">M: 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">M: 35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">S: 87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379</span><br><span class="line">   replicates 35ca216e53df5fac37c3996059b19b443ed19e78</span><br><span class="line">S: 812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379</span><br><span class="line">   replicates df05843701533a368831b4d414a867e8350e8ad6</span><br><span class="line">S: 80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379</span><br><span class="line">   replicates 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b</span><br><span class="line">Can I <span class="built_in">set</span> the above configuration? (<span class="built_in">type</span> <span class="string">&#x27;yes&#x27;</span> to accept): <span class="built_in">yes</span></span><br><span class="line">&gt;&gt;&gt; Nodes configuration updated</span><br><span class="line">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER MEET messages to <span class="built_in">join</span> the cluster</span><br><span class="line">Waiting <span class="keyword">for</span> the cluster to <span class="built_in">join</span></span><br><span class="line">..</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 10.250.0.67:6379)</span><br><span class="line">M: df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b</span><br><span class="line">M: 35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates df05843701533a368831b4d414a867e8350e8ad6</span><br><span class="line">S: 87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 35ca216e53df5fac37c3996059b19b443ed19e78</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check <span class="keyword">for</span> open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>登录集群并查询集群配置信息</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -c 表示以集群模式登录，-h 集群内任意ip</span></span><br><span class="line">src/redis-cli -c -h 10.250.0.67 -p 6379 -a password</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看集群信息</p></li></ul><blockquote><p>cluster info</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cluster_state:ok</span><br><span class="line">cluster_slots_assigned:16384</span><br><span class="line">cluster_slots_ok:16384</span><br><span class="line">cluster_slots_pfail:0</span><br><span class="line">cluster_slots_fail:0</span><br><span class="line">cluster_known_nodes:6</span><br><span class="line">cluster_size:3</span><br><span class="line">cluster_current_epoch:6</span><br><span class="line">cluster_my_epoch:1</span><br><span class="line">cluster_stats_messages_ping_sent:147</span><br><span class="line">cluster_stats_messages_pong_sent:156</span><br><span class="line">cluster_stats_messages_sent:303</span><br><span class="line">cluster_stats_messages_ping_received:151</span><br><span class="line">cluster_stats_messages_pong_received:147</span><br><span class="line">cluster_stats_messages_meet_received:5</span><br><span class="line">cluster_stats_messages_received:303</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看节点列表</p></li></ul><blockquote><p>cluster nodes</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379@16379 master - 0 1662724614912 2 connected 5461-10922</span><br><span class="line">80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379@16379 slave 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 0 1662724615000 6 connected</span><br><span class="line">35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379@16379 master - 0 1662724613000 3 connected 10923-16383</span><br><span class="line">df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379@16379 myself,master - 0 1662724614000 1 connected 0-5460</span><br><span class="line">812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379@16379 slave df05843701533a368831b4d414a867e8350e8ad6 0 1662724613910 5 connected</span><br><span class="line">87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379@16379 slave 35ca216e53df5fac37c3996059b19b443ed19e78 0 1662724615914 4 connected</span><br></pre></td></tr></table></figure><blockquote><p>此时查看<code>nodes-6379.conf</code>也会看到和上面一样的节点信息</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>此时关闭其中一个master节点，比如<code>10.250.0.67</code>，则其对以的slave节点<code>10.250.0.244</code>会切换为新的master节点，此时<code>10.250.0.67</code>的状态为<code>fail</code></p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">10.250.0.206:6379&gt; cluster nodes</span><br><span class="line">87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379@16379 slave 35ca216e53df5fac37c3996059b19b443ed19e78 0 1662780661815 4 connected</span><br><span class="line">80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379@16379 myself,slave 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 0 1662780661000 6 connected</span><br><span class="line">df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379@16379 master,fail - 1662780649679 1662780648000 1 connected</span><br><span class="line">812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379@16379 master - 0 1662780661000 7 connected 0-5460</span><br><span class="line">0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379@16379 master - 0 1662780661000 2 connected 5461-10922</span><br><span class="line">35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379@16379 master - 0 1662780662000 3 connected 10923-16383</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>再次启动<code>10.250.0.67</code>，其会变成<code>10.250.0.244</code>的slave节点</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">10.250.0.206:6379&gt; cluster nodes</span><br><span class="line">87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379@16379 slave 35ca216e53df5fac37c3996059b19b443ed19e78 0 1662781012000 4 connected</span><br><span class="line">80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379@16379 myself,slave 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 0 1662781012000 6 connected</span><br><span class="line">df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379@16379 slave 812b99df229ca9143ae72c4447ab4e889f1af113 0 1662781013708 7 connected</span><br><span class="line">812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379@16379 master - 0 1662781011000 7 connected 0-5460</span><br><span class="line">0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379@16379 master - 0 1662781012706 2 connected 5461-10922</span><br><span class="line">35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379@16379 master - 0 1662781012000 3 connected 10923-16383</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>redis集群会将2的14次幂(16384)的soft平均分配到所有master上，然后对key进行hash后计算应该存储到那个soft</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HASH_SLOT=CRC16(key) mod 16384</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳转重定位</span></span><br><span class="line">10.250.0.206:6379&gt; <span class="built_in">set</span> name zhangsan</span><br><span class="line">-&gt; Redirected to slot [5798] located at 10.250.0.170:6379</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>关闭集群，6个redis分别关闭</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src/redis-cli -c -h 10.250.0.67 -p 6379 -a password shutdown</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>重启集群，6个redis分别启动即可</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src/redis-server redis.conf</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>mset/mget要求key都落在同一个soft上，每个key都加上前缀<code>&#123;prefix&#125;</code></p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">10.250.0.170:6379&gt; mset name1 lisi name2 wangwu</span><br><span class="line">(error) CROSSSLOT Keys <span class="keyword">in</span> request don<span class="string">&#x27;t hash to the same slot</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">10.250.0.170:6379&gt; mset &#123;user&#125;:name1 lisi &#123;user&#125;:name2 wangwu</span></span><br><span class="line"><span class="string">OK</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">10.250.0.206:6379&gt; mget &#123;user&#125;:name1 &#123;user&#125;:name2</span></span><br><span class="line"><span class="string">-&gt; Redirected to slot [5474] located at 10.250.0.170:6379</span></span><br><span class="line"><span class="string">1) &quot;lisi&quot;</span></span><br><span class="line"><span class="string">2) &quot;wangwu&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>集群推举新的master时要求至少一半的master同意，所以一个集群至少需要3个master，官方推荐master节点数为奇数，比如3个和4个master节点，都至多允许一个master节点挂掉时进行选主，但是3个master可以节省资源</p></li><li class="lvl-2"><p>集群通过<code>10000+port</code>这个端口号进行集群间通信，所以除了要开放<code>prot</code>这个端口，还要开放<code>10000+port</code>这个端口</p></li><li class="lvl-2"><p>有关redis集群及其水平扩展的进一步说明，可以参看<a href="/2018/12/27/redis-cluster/" title="Redis集群">Redis集群</a></p></li></ul><h3 id="集群优点">集群优点</h3><ul class="lvl-0"><li class="lvl-2"><p>无中心架构，集群内部自行维护数据的分片和主从的切换</p></li><li class="lvl-2"><p>数据分片存储，提供很高的访问效率</p></li><li class="lvl-2"><p>高可用性，可实现部分节点不可用时，集群仍可用</p></li><li class="lvl-2"><p>高扩展性，可以横向扩展1000个节点后依旧保证访问效率，扩容缩容都支持</p></li></ul><h3 id="集群缺点">集群缺点</h3><ul class="lvl-0"><li class="lvl-2"><p>数据通过异步复制，不保证数据的强一致性</p></li><li class="lvl-2"><p>不支持多数据库空间，单机下的redis可以支持到16个数据库，集群模式下只能使用1个数据库空间，即db 0</p></li><li class="lvl-2"><p>不支持跨slot操作，如使用mset、mget目前只支持具有相同slot值的Key执行批量操作</p></li><li class="lvl-2"><p>Key作为数据分区的最小粒度，不能将一个很大的键值对象如hash、list等映射到不同的节点</p></li><li class="lvl-2"><p>Key事务操作支持有限，只支持多key在同一节点上的事务操作，当多个Key分布于不同的节点上时无法使用事务功能</p></li><li class="lvl-2"><p>不建议使用pipeline和multi-keys操作</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;redis单节点、主从、哨兵、集群的构建过程，及其配置文件的说明&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于&lt;code&gt;redis-5.0.14&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="redis" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/redis/"/>
    
    
    <category term="redis" scheme="https://blog.hanqunfeng.com/tags/redis/"/>
    
    <category term="redis cluster" scheme="https://blog.hanqunfeng.com/tags/redis-cluster/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot2学习笔记--thymeleaf</title>
    <link href="https://blog.hanqunfeng.com/2022/05/19/thymeleaf_study/"/>
    <id>https://blog.hanqunfeng.com/2022/05/19/thymeleaf_study/</id>
    <published>2022-05-19T06:24:04.000Z</published>
    <updated>2022-08-17T07:34:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>看完本文你将掌握如下知识点：</p><ul class="lvl-0"><li class="lvl-2">Spring Boot(2.4.4)中使用<a href="https://www.thymeleaf.org">thymeleaf(3.0.12)</a>的常用语法</li></ul><span id="more"></span><h2 id="项目准备">项目准备</h2><h3 id="依赖">依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring对thymeleaf的支持--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="开启spring-boot对thymeleaf的支持">开启spring boot对thymeleaf的支持</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##thymeleaf</span></span><br><span class="line"><span class="attr">spring.thymeleaf.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">spring.thymeleaf.prefix</span>=<span class="string">classpath:/templates/</span></span><br><span class="line"><span class="attr">spring.thymeleaf.suffix</span>=<span class="string">.html</span></span><br><span class="line"><span class="attr">spring.thymeleaf.encoding</span>=<span class="string">UTF-8</span></span><br><span class="line"><span class="attr">spring.thymeleaf.mode</span>=<span class="string">HTML</span></span><br><span class="line"><span class="comment">#关闭页面缓存</span></span><br><span class="line"><span class="attr">spring.thymeleaf.cache</span>=<span class="string">false</span></span><br><span class="line"><span class="attr">spring.thymeleaf.servlet.content-type</span>=<span class="string">text/html</span></span><br></pre></td></tr></table></figure><p>也可以通过@Bean的方式开启支持</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> ThymeleafViewResolver <span class="title function_">thymeleafViewResolver</span><span class="params">()</span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;thymeleafViewResolver&quot;</span>);</span><br><span class="line">    <span class="type">ThymeleafViewResolver</span> <span class="variable">viewResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThymeleafViewResolver</span>();</span><br><span class="line">    viewResolver.setTemplateEngine(templateEngine());</span><br><span class="line">    viewResolver.setOrder(<span class="number">1</span>);</span><br><span class="line">    viewResolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    viewResolver.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">    viewResolver.setCache(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> viewResolver;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> SpringResourceTemplateResolver <span class="title function_">templateResolver</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SpringResourceTemplateResolver</span> <span class="variable">templateResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringResourceTemplateResolver</span>();</span><br><span class="line">    templateResolver.setApplicationContext(<span class="built_in">this</span>.applicationContext);</span><br><span class="line">    templateResolver.setPrefix(<span class="string">&quot;classpath:/templates/&quot;</span>);</span><br><span class="line">    templateResolver.setSuffix(<span class="string">&quot;.html&quot;</span>);</span><br><span class="line">    templateResolver.setTemplateMode(TemplateMode.HTML);</span><br><span class="line">    templateResolver.setCacheable(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> templateResolver;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> SpringTemplateEngine <span class="title function_">templateEngine</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SpringTemplateEngine</span> <span class="variable">templateEngine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringTemplateEngine</span>();</span><br><span class="line">    templateEngine.setTemplateResolver(templateResolver());</span><br><span class="line">    templateEngine.setEnableSpringELCompiler(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> templateEngine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="开启html页面对thymeleaf语法的支持">开启html页面对thymeleaf语法的支持</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="语法">语法</h2><h3 id="各种表达式语法">各种表达式语法</h3><ol><li class="lvl-3"><p>${…} 变量表达式，用于展示后台传递过来的变量（request和session中的值）</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;modify&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;modify&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;dataObj.id&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span>  <span class="attr">name</span>=<span class="string">&quot;logParamData&quot;</span> <span class="attr">id</span>=<span class="string">&quot;logParamData&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;dataObj.logParamData&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">以下两种方式效果一致</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;dataObj.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>[[$&#123;dataObj.name&#125;]]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">字符串拼接，可以使用加号，也可以使用竖线，以下两种方式效果一致</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;accessTypes&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;+&#x27;_&#x27;+$&#123;type.id&#125;&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span> [[$&#123;type.name&#125;]</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;accessTypes&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;|$&#123;item.id&#125;_$&#123;type.id&#125;|&#125;&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span> [[$&#123;type.name&#125;]</span><br><span class="line"></span><br><span class="line">#dates与java.util.Date对象的方法对应，格式化、日期组件抽取等等</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(item.logTime, &#x27;yyyy-MM-dd&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;#dates.format(item.logTime, &#x27;yyyy-MM-dd&#x27;)&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li class="lvl-3"><p>#{…} 国际化消息表达式，用于展示message.properties等国际化资源文件中的内容</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.choose&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">消息中需要传递变量的情况，多个变量逗号分割</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.page.summary($&#123;_pageBean.pageCount&#125;,$&#123;_pageBean.total&#125;)&#125;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">以下两种方式效果一致</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.operate&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>[[#&#123;common.operate&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li class="lvl-3"><p>@{…} 链接url表达式，用于封装url，如contextPath补全</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/resource/css/netqin.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line">用两个竖线来拼接带表达式的字符串</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;|/resource/js/i18n/list.#&#123;locale&#125;.js|&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">带请求参数的url，多个用逗号分割</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/auth/systemLogger/edit.do(id=$&#123;item.id&#125;,flag=$&#123;flag&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.edit&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li class="lvl-3"><p>js和css中用到表达式时使用双中括号的方式</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取服务器完整地址</span></span><br><span class="line"><span class="keyword">var</span> systemAddress = <span class="string">&quot;[[$&#123;#httpServletRequest.getScheme() + &#x27;://&#x27; + #httpServletRequest.getServerName() + &#x27;:&#x27; + #request.getServerPort()&#125;]]&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取contextPath</span></span><br><span class="line"><span class="keyword">var</span> ctxPath  = <span class="string">&quot;[[@&#123;/&#125;]]&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 完整的请求路径前缀，注意后面跟的地址不要以`/`开头</span></span><br><span class="line"><span class="keyword">var</span> serverPath = systemAddress + ctxPath;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取变量</span></span><br><span class="line"><span class="keyword">var</span> modify = <span class="string">&quot;[[$&#123;modify&#125;]]&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(modify != <span class="string">&quot;add&quot;</span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;#password&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;placeholder&quot;</span>,<span class="string">&quot;[[#&#123;user.detail.changeNotice&#125;]]&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li class="lvl-3"><p>*{…} 选择变量表达式，用于简写变量名称，需要配合th:object一起使用</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:object</span>=<span class="string">&quot;$&#123;user&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>firstName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;firstName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>lastName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;lastName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">相当于</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>firstName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.firstName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>lastName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.lastName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li class="lvl-3"><p><code>~&#123;...&#125;</code> 代码块表达式，用于在html中复用相同的结构<br>语法：<code>~&#123;templatename::fragmentname&#125;</code><br>示例：<br>common/model.html，<code>th:fragment=&quot;header&quot;</code>指定代码块名称</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span> <span class="attr">th:fragment</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">META</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Pragma&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">META</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Cache-Control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">META</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Expire&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/resource/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/resource/css/ace.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/resource/css/font-awesome.min.css&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/resource/js/jquery-1.11.0.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>demo.html，<code>th:replace=&quot;common/model::header&quot;</code>，模板名称::代码块名称</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">th:replace</span>=<span class="string">&quot;common/model::header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>说明：代码块表达式需要配合th属性（th:insert，th:replace，th:include）一起使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">th:insert：将代码块片段整个插入到使用了th:insert的HTML标签中，</span><br><span class="line">th:replace：将代码块片段整个替换使用了th:replace的HTML标签中，</span><br><span class="line">th:include：将代码块片段包含的内容插入到使用了th:include的HTML标签中，</span><br></pre></td></tr></table></figure><h3 id="遍历">遍历</h3><h4 id="简单示例">简单示例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;item:$&#123;results&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;noborder&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    [[$&#123;#dates.format(item.logTime, &#x27;yyyy-MM-dd&#x27;)&#125;]]</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.logDesc&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.logUser&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="带遍历状态的示例">带遍历状态的示例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;item,status:$&#123;results&#125;&quot;</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;status.odd&#125;? &#x27;odd&#x27;:&#x27;even&#x27;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;noborder&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    [[$&#123;#dates.format(item.logTime, &#x27;yyyy-MM-dd&#x27;)&#125;]]</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.logDesc&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.logUser&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>状态说明</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">index：当前遍历索引，从0开始</span><br><span class="line">count：当前遍历索引，从1开始</span><br><span class="line">size：总元素数量</span><br><span class="line">current：每一次遍历的iter变量</span><br><span class="line">even/odd：当前遍历是even还是odd，布尔属性</span><br><span class="line">first：当前遍历是第一个，布尔属性</span><br><span class="line">last：当前遍历是最后一个，布尔属性</span><br></pre></td></tr></table></figure><h4 id="遍历时可以自定义变量">遍历时可以自定义变量</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">th:with：用于定义变量，多个使用逗号分割</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:each</span>=<span class="string">&quot;type,status:$&#123;accessTypes&#125;&quot;</span> <span class="attr">th:with</span>=<span class="string">&quot;shwoName=$&#123;item.id&#125;+&#x27;_&#x27;+$&#123;item.name&#125;&quot;</span>&gt;</span></span><br><span class="line">[[$&#123;shwoName&#125;]]</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not status.last&#125;&quot;</span>&gt;</span>,<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="条件判断">条件判断</h3><h4 id="th-if">th:if</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">判断为true时才会显示div，authorities为Set类型，所以判断是否包含时可以使用#sets.contains()方法，测试时发现使用#arrays.contains()方法时也可以</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;dataObj.reserved&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;item:$&#123;dataObj.authorities&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;authorities&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">th:if</span>=<span class="string">&quot;$&#123;dataObj.authorities ==null or not #sets.contains(dataObj.authorities,item)&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;authorities&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;dataObj.authorities !=null and #sets.contains(dataObj.authorities,item)&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">如果要判断为false时才会显示div，可以判断值是否等于false，或者使用th:unless</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;dataObj.reserved==false&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;item:$&#123;dataObj.authorities&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;authorities&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:unless</span>=<span class="string">&quot;$&#123;dataObj.reserved&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;item:$&#123;dataObj.authorities&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;authorities&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>th:if 以下情况运算为true</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">值不为null</span><br><span class="line">值为boolean且为true</span><br><span class="line">值为数字且非0</span><br><span class="line">值为字符且非0</span><br><span class="line">值是字符串且不是：“false”，“off”，“no”</span><br><span class="line">值是object,但不为null</span><br></pre></td></tr></table></figure><h4 id="th-switch-和-th-case">th:switch 和 th:case</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bool匹配</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;dataObj.reserved&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;true&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;false&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">字符串匹配，要加单引号</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;&#x27;admin&#x27;&quot;</span>&gt;</span>administrator<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;&#x27;manager&#x27;&quot;</span>&gt;</span>manager<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;&#x27;admin&#x27;&quot;</span>&gt;</span>administrator<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;&#x27;manager&#x27;&quot;</span>&gt;</span>manager<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;*&quot;</span>&gt;</span>unknow<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>说明：th:case=“*” 表示没有匹配成功时显示的内容</p></li></ul><h3 id="运算符">运算符</h3><ul class="lvl-0"><li class="lvl-2"><p>字符串连接</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　+ : $&#123;item.id&#125;+&#x27;_&#x27;+$&#123;type.id&#125;</span><br><span class="line">　　|xxxx| : |The name is $&#123;name&#125;|</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>算术运算</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　+ , - , * , / , %  (二元运算符)</span><br><span class="line">　　-  :负号（一元运算符）</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>布尔操作</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　and :且,or :或 (二元运算符)</span><br><span class="line">　　!,not :非（一元操作符）</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>关系操作符</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　&gt; , &lt; , &gt;= , &lt;= (gt , lt , ge , le)</span><br><span class="line">　　== , != (eq, ne)</span><br></pre></td></tr></table></figure><h3 id="表达式工具对象">表达式工具对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#dates 与java.util.Date对象的方法对应，格式化、日期组件抽取等等，如：$&#123;#dates.format(item.lastupdate, &#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;</span><br><span class="line">#temporals 支持jdk8中新增的LocalDate,LocalDateTime的格式化，如：$&#123;#temporals.format(item.updateTime, &#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;，新版本的spring-boot-starter-thymeleaf中已经默认加入了thymeleaf-extras-java8time依赖</span><br><span class="line">#calendars 类似#dates，与java.util.Calendar对象对应</span><br><span class="line">#numbers 格式化数字对象的工具方法</span><br><span class="line">#strings 与java.lang.String对应的工具方法：contains、startsWith、prepending/appending等等</span><br><span class="line">#objects 用于对象的工具方法</span><br><span class="line">#bools 用于布尔运算的工具方法</span><br><span class="line">#arrays 用于数组的工具方法</span><br><span class="line">#lists 用于列表的工具方法</span><br><span class="line">#sets 用于set的工具方法</span><br><span class="line">#maps 用于map的工具方法</span><br><span class="line">#aggregates 用于创建数组或集合的聚合的工具方法</span><br><span class="line">#messages 用于在变量表达式内部获取外化消息的工具方法，与#&#123;…&#125;语法获取的方式相同</span><br><span class="line">#ids 用于处理可能重复出现（例如，作为遍历的结果）的id属性的工具方法</span><br></pre></td></tr></table></figure><h2 id="获取环境变量和application-properties中的值">获取环境变量和application.properties中的值</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- @environment可以获取环境变量中的属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;@environment.getProperty(&#x27;image.path&#x27;) + item.path&#125;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;90px&quot;</span> <span class="attr">style</span>=<span class="string">&quot;cursor: pointer&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用springsecurity权限标签的方法">使用springsecurity权限标签的方法</h2><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--如果项目中使用到了springsecurity， 则要加入下面的依赖来使用权限标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>开启命名空间支持</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">xmlns:sec</span>=<span class="string">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">使用方式与jsp标签类似：</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/auth/systemLogger/edit.do&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success btn-xs no-hover&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.create&#125;&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;LOGGER_ADD&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger btn-xs&quot;</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.delete&#125;&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;LOGGER_DELETE&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="调用spring管理的bean的方法，以及获取HttpSession对象和HttpServletRequest对象">调用spring管理的bean的方法，以及获取HttpSession对象和HttpServletRequest对象</h2><p>语法：${@beanName.methodName(param,…)}<br>说明：beanName就是注册时的名称<br>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#httpSession就是javax.servlet.http.HttpSession对象，可以简写为session</span><br><span class="line">#httpServletRequest就是javax.servlet.http.HttpServletRequest对象，可以简写为request</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;@commonService.clearSessionMessage(#httpServletRequest)&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="调用类的静态方法">调用类的静态方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:with</span>=<span class="string">&quot;authoritysString=$&#123;T(com.example.function.auth.util.AuthUtil).getAuthoritysHtmlString(dataObj.authorities)&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考资料">参考资料</h2><ul class="lvl-0"><li class="lvl-2"><p><a href="https://www.cnblogs.com/itdragon/archive/2018/04/13/8724291.html">https://www.cnblogs.com/itdragon/archive/2018/04/13/8724291.html</a></p></li><li class="lvl-2"><p><a href="https://blog.csdn.net/abap_brave/article/details/53009149">https://blog.csdn.net/abap_brave/article/details/53009149</a></p></li><li class="lvl-2"><p><a href="https://blog.csdn.net/u014748504/article/details/108691712">https://blog.csdn.net/u014748504/article/details/108691712</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;p&gt;看完本文你将掌握如下知识点：&lt;/p&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;Spring Boot(2.4.4)中使用&lt;a href=&quot;https://www.thymeleaf.org&quot;&gt;thymeleaf(3.0.12)&lt;/a&gt;的常用语法&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.hanqunfeng.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Maven仓库及镜像配置</title>
    <link href="https://blog.hanqunfeng.com/2021/12/02/maven-setting/"/>
    <id>https://blog.hanqunfeng.com/2021/12/02/maven-setting/</id>
    <published>2021-12-02T10:30:05.000Z</published>
    <updated>2021-12-28T03:01:46.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">maven仓库和镜像的配置及其关联方式</li></ul><span id="more"></span><h2 id="依赖查找顺序-按优先级排序，由高到低">依赖查找顺序(按优先级排序，由高到低)</h2><ul class="lvl-0"><li class="lvl-2"><p>本地仓库，setting.xml中<code>settings.localRepository</code>的配置地址</p></li><li class="lvl-2"><p>settings.xml中profile.repositories配置的仓库，<code>settings.profiles.profile.repositories.repository</code>，注意要激活对应的profile</p></li><li class="lvl-2"><p>pom.xml中profile.repositories配置的仓库，<code>project.profiles.profile.repositories.repository</code>,注意要在settings.xml中激活对应的profile</p></li><li class="lvl-2"><p>pom.xml中repositories配置的仓库，<code>project.repositories.repository</code></p></li><li class="lvl-2"><p>maven默认的中央仓库:<a href="https://repo.maven.apache.org/maven2">https://repo.maven.apache.org/maven2</a></p></li></ul><h3 id="说明，仓库的查找顺序实际上就是最终的pom-xml中仓库的声明顺序，所以可以通过如下命令导出最终的pom信息进行查看">说明，仓库的查找顺序实际上就是最终的pom.xml中仓库的声明顺序，所以可以通过如下命令导出最终的pom信息进行查看</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn help:effective-pom -Doutput=EffectivePom.xml</span><br></pre></td></tr></table></figure><h2 id="仓库配置–repository">仓库配置–repository</h2><ul class="lvl-0"><li class="lvl-2"><p>可以将仓库信息配置在<code>settings.xml</code>或<code>pom.xml</code>中，如下可以配置多个，按顺序依次查找，注意这里的id必须唯一，<code>repository</code>和<code>pluginRepository</code>的id可以相同:</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus.my.local:8080/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus.my.local:8080/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="镜像代理–mirror">镜像代理–mirror</h2><h3 id="说明">说明</h3><ul class="lvl-0"><li class="lvl-2"><p>由于网络等原因导致我们不能很顺利的从仓库下载到对应的依赖，此时我们可以为仓库配置镜像代理，加快下载速度，国内一般会使用阿里云作为镜像代理</p></li><li class="lvl-2"><p>mirror镜像可以配置多个，每个mirrorOf里可以配置如下内容：</p></li></ul><ol><li class="lvl-3"><p><code>*</code> : 匹配所有仓库，一般我们搭建了自己的私服时推荐这样设置</p></li><li class="lvl-3"><p><code>repo1Id</code>  : 匹配仓库id为repo1Id的仓库</p></li><li class="lvl-3"><p><code>repo1Id,repo2Id</code>  : 匹配仓库id为repo1Id和repo2Id的仓库</p></li><li class="lvl-3"><p><code>*,!repo1Id</code>  : 匹配所有仓库，但不包含repo1Id</p></li><li class="lvl-3"><p><code>external:*</code> : 匹配所有不在本机上的远程仓库，也就是说，如果仓库的url里配置的是<code>localhost</code>或者<code>file://</code>则不进行代理</p></li></ol><h3 id="镜像代理需要配置在setting-xml中">镜像代理需要配置在setting.xml中</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-mirror<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun-mirror<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mirrorOf 里配置要代理的仓库id，这样当请求该仓库时就会走这个镜像代理 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- maven默认配置的仓库id就是central，此时就是使用阿里云作为默认仓库的代理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-mirror<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>nexus-mirror<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mirrorOf 里配置要代理的仓库id，这样当请求该仓库时就会走这个镜像代理 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此时就是使用nexus私服代理所有仓库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus.my.local:8080/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="maven3-8-1以后的配置中会禁止http协议的仓库地址，该如何处理？">maven3.8.1以后的配置中会禁止http协议的仓库地址，该如何处理？</h3><ul class="lvl-0"><li class="lvl-2"><p>我们可以看到setting.xml中的镜像配置里默认增加了如下配置，其会禁止所有http协议的仓库被请求，目的是推荐使用https协议</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven-default-http-blocker<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>external:http:*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Pseudo repository to mirror external repositories initially using HTTP.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://0.0.0.0/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">blocked</span>&gt;</span>true<span class="tag">&lt;/<span class="name">blocked</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时执行mvn时会报告如下错误：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">maven-default-http-blocker (http://0.0.0.0/): Blocked mirror for repositories</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>但是很多公司的私服都没有配置证书，我们可以修改其配置如下，即可解决</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;mirrorOf&gt;external:*&lt;/mirrorOf&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>external:http:*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus.my.local:8081/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">blocked</span>&gt;</span>false<span class="tag">&lt;/<span class="name">blocked</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;maven仓库和镜像的配置及其关联方式&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="maven" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/maven/"/>
    
    
    <category term="maven" scheme="https://blog.hanqunfeng.com/tags/maven/"/>
    
    <category term="mvn" scheme="https://blog.hanqunfeng.com/tags/mvn/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="https://blog.hanqunfeng.com/2021/10/29/git-command/"/>
    <id>https://blog.hanqunfeng.com/2021/10/29/git-command/</id>
    <published>2021-10-29T13:30:05.000Z</published>
    <updated>2022-01-20T09:25:24.911Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">一起来了解一些git常用命令吧</li><li class="lvl-2">推荐一个学习git命令的网站：<a href="https://learngitbranching.js.org/?locale=zh_CN">https://learngitbranching.js.org/?locale=zh_CN</a><br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/git.png" alt=""></li></ul><span id="more"></span><h2 id="基本概念">基本概念</h2><h3 id="Git的5种工作区域">Git的5种工作区域</h3><ul class="lvl-0"><li class="lvl-2"><p>工作目录：用于新增、修改、删除文件，实际我们用于编写代码的目录</p></li><li class="lvl-2"><p>暂存区：执行<code>add</code>命令可以将工作目录对应的文件提交到暂存区，只有加入到暂存区的文件才会参与版本控制，其实际为一堆索引文件，保存在<code>.git/objects</code>目录下，记录每个文件的快照（hash）</p></li><li class="lvl-2"><p>本地版本库：执行<code>commit</code>命令可以将暂存区的文件提交到本地版本库，每一次提交都会记录版本日志，其实际保存位置也是<code>.git/objects</code>目录下的快照文件，每一次<code>commit</code>如果文件发生变化都会生成新的快照，<code>.git/refs/heads/</code>下记录每个分支的最新一次commit的版本号</p></li><li class="lvl-2"><p>远程跟踪区：<code>.git/refs/remotes/origin/</code>下记录每个分支的最新一次更新后的远程版本号，执行<code>fetch\pull\push</code>时都会更新为最新的远程版本号。如果只执行<code>fetch</code>仅仅会更新远程跟踪区，并不会更新本地目录，执行<code>pull</code>命令会同时更新远程跟踪区和本地目录</p></li><li class="lvl-2"><p>远程版本库：例如github</p></li></ul><h3 id="文件的状态">文件的状态</h3><ul class="lvl-0"><li class="lvl-2"><p>Untracked:未跟踪的文件，尚未加入过暂存区的文件</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) <span class="built_in">touch</span> a.txt</span><br><span class="line">➜  git:(release) ✗ git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支与上游分支 <span class="string">&#x27;origin/release&#x27;</span> 一致。</span><br><span class="line"></span><br><span class="line">未跟踪的文件:</span><br><span class="line">  （使用 <span class="string">&quot;git add &lt;文件&gt;...&quot;</span> 以包含要提交的内容）</span><br><span class="line">a.txt</span><br><span class="line"></span><br><span class="line">提交为空，但是存在尚未跟踪的文件（使用 <span class="string">&quot;git add&quot;</span> 建立跟踪）</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>要提交的变更[新增]，加入暂存区</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) ✗ git add .</span><br><span class="line">➜  git:(release) ✗ git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支与上游分支 <span class="string">&#x27;origin/release&#x27;</span> 一致。</span><br><span class="line"></span><br><span class="line">要提交的变更：</span><br><span class="line">  （使用 <span class="string">&quot;git restore --staged &lt;文件&gt;...&quot;</span> 以取消暂存）</span><br><span class="line">新文件：   a.txt</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>已提交版本库待发布到远端，将暂存区的文件加入本地版本库</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) ✗ git commit -m <span class="string">&#x27;add a.txt&#x27;</span></span><br><span class="line">[release 9292bb2] add a.txt</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 a.txt</span><br><span class="line">➜  git:(release) git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支领先 <span class="string">&#x27;origin/release&#x27;</span> 共 1 个提交。</span><br><span class="line">  （使用 <span class="string">&quot;git push&quot;</span> 来发布您的本地提交）</span><br><span class="line"></span><br><span class="line">无文件要提交，干净的工作区</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>尚未暂存以备提交的变更，加入过暂存区的文件发生修改</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) <span class="built_in">echo</span> <span class="string">&quot;hello&quot;</span> &gt;&gt; a.txt</span><br><span class="line">➜  git:(release) ✗ git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支领先 <span class="string">&#x27;origin/release&#x27;</span> 共 1 个提交。</span><br><span class="line">  （使用 <span class="string">&quot;git push&quot;</span> 来发布您的本地提交）</span><br><span class="line"></span><br><span class="line">尚未暂存以备提交的变更：</span><br><span class="line">  （使用 <span class="string">&quot;git add &lt;文件&gt;...&quot;</span> 更新要提交的内容）</span><br><span class="line">  （使用 <span class="string">&quot;git restore &lt;文件&gt;...&quot;</span> 丢弃工作区的改动）</span><br><span class="line">修改：     a.txt</span><br><span class="line"></span><br><span class="line">修改尚未加入提交（使用 <span class="string">&quot;git add&quot;</span> 和/或 <span class="string">&quot;git commit -a&quot;</span>）</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>要提交的变更[修改]，加入过暂存区的文件重新加入暂存区</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) ✗ git add .</span><br><span class="line">➜  git:(release) ✗ git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支领先 <span class="string">&#x27;origin/release&#x27;</span> 共 1 个提交。</span><br><span class="line">  （使用 <span class="string">&quot;git push&quot;</span> 来发布您的本地提交）</span><br><span class="line"></span><br><span class="line">要提交的变更：</span><br><span class="line">  （使用 <span class="string">&quot;git restore --staged &lt;文件&gt;...&quot;</span> 以取消暂存）</span><br><span class="line">修改：     a.txt</span><br></pre></td></tr></table></figure><h3 id="切换分支时值得注意的地方">切换分支时值得注意的地方</h3><ul class="lvl-0"><li class="lvl-2"><p>只要文件没有被commit，无论是新增还是修改，切换分支时，文件的状态都会被带到切换后的分支</p></li><li class="lvl-2"><p>所以切换分支前，一定要执行commit</p></li></ul><h3 id="HEAD指针和分支指针">HEAD指针和分支指针</h3><ul class="lvl-0"><li class="lvl-2"><p>我们在查看git的log时会看到类似于<code>* 6d93a15 (HEAD -&gt; master) message</code>这样的信息，6d93a15就是commit时的版本号，master是分支名称，HEAD就是<code>HEAD指针</code>，实际上这里的master也是一个指针，他就是<code>分支指针</code></p></li><li class="lvl-2"><p><code>分支指针</code>永远指向当前分支最新的一次提交版本，分支指针对应版本号保存在<code>.git/refs/heads/</code>目录下对应的分支文件中</p></li><li class="lvl-2"><p><code>HEAD指针</code>表示我们当前的工作目录是基于哪个版本checkout出来的，通常情况下<code>HEAD指针</code>指向<code>分支指针</code>，但当我们通过命令<code>git checkout &lt;commit号&gt;</code>切换到某个版本时，<code>HEAD指针</code>就不再指向<code>分支指针</code>，这个情况有个名字叫作<code>detached HEAD(头分离)</code>，<code>HEAD指针</code>对应的版本号保存在<code>.git/HEAD</code>文件中，这也是为什么我们每次进入项目，git都知道我们当前所在分支或版本号是什么。</p></li><li class="lvl-2"><p>参考资料：<a href="https://www.zsythink.net/archives/3412/">https://www.zsythink.net/archives/3412/</a></p></li></ul><h2 id="问题与方法">问题与方法</h2><h3 id="1-别人在远程仓库中创建了新的branch，我本地执行git-branch-a却看不到，如何才能看到并checkout呢？">1.别人在远程仓库中创建了新的branch，我本地执行<code>git branch -a</code>却看不到，如何才能看到并checkout呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先要获取远端全部信息</span></span><br><span class="line">git fetch origin</span><br><span class="line"><span class="comment"># git fetch 远程名称，通过git remote查看，一般就是origin。</span></span><br><span class="line">git fetch <span class="comment"># 也可以不加远程名称</span></span><br><span class="line"><span class="comment"># 该命令无论在哪个分支上执行，都会更新本地所有的远程分支</span></span><br><span class="line"><span class="comment"># git fetch 完成了仅有的但是很重要的两步:</span></span><br><span class="line"><span class="comment"># 1.从远程仓库下载本地仓库中缺失的提交记录</span></span><br><span class="line"><span class="comment"># 2.更新远程分支指针(如 o/master)</span></span><br><span class="line"><span class="comment"># git fetch 实际上将本地仓库中的远程分支更新成了远程仓库相应分支最新的状态。</span></span><br><span class="line"><span class="comment"># git fetch 并不会改变你本地仓库的状态。它不会更新你的 本地 分支，也不会修改你磁盘上的文件。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.再查看分支信息</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.checkout到本地并切换到新创建的分支</span></span><br><span class="line">git checkout -b release（本地分支名） origin/release（远程分支名）</span><br><span class="line">控制台输出：</span><br><span class="line">分支 <span class="string">&#x27;release&#x27;</span> 设置为跟踪来自 <span class="string">&#x27;origin&#x27;</span> 的远程分支 <span class="string">&#x27;release&#x27;</span>。</span><br><span class="line">切换到一个新分支 <span class="string">&#x27;release&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看当前分支跟踪的远程分支</span></span><br><span class="line">git rev-parse --abbrev-ref --symbolic-full-name @&#123;u&#125;  <span class="comment"># @&#123;u&#125; 是 @&#123;upstream&#125; 的简写</span></span><br><span class="line">控制台输出：</span><br><span class="line">origin/release</span><br></pre></td></tr></table></figure><h3 id="2-如何查看本地分支与远程分支的区别？">2.如何查看本地分支与远程分支的区别？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先要获取远端全部信息</span></span><br><span class="line">git fetch origin</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git fetch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.切换到待比较的本地分支，如master</span></span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.比较当前分支与origin/master之间的不同，--stat只显示哪些文件有不同，如果要查看每个文件不同的详细信息就去掉--stat</span></span><br><span class="line">git diff origin/master --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.比较任意两个分支的不同，--stat只显示哪些文件有不同，如果要查看每个文件不同的详细信息就去掉--stat</span></span><br><span class="line">git diff origin/master..master --<span class="built_in">stat</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-如何查看本地两个分支之间的区别？">3.如何查看本地两个分支之间的区别？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.比较任意两个分支的区别</span></span><br><span class="line">git diff master..dev --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.比较当前分支与master分支的区别</span></span><br><span class="line">git diff master --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h3 id="4-如何查看本地的发生了哪些更改？">4.如何查看本地的发生了哪些更改？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前工作目录的索引和上次提交索引之间的差异，只有已经被commit过的文件才会被比较，如果是新增的文件则看不到</span></span><br><span class="line">git diff --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过`git status`命令查看本地都有哪些变化，包含新增未加入暂存区的，新增已加入暂存区的，已提交过但有改动的，等等</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看下次执行`git commit`时会被提交的文件</span></span><br><span class="line">git diff --cached --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看下次执行`git commit -a` 时会被提交的文件，-a表示先add再commit</span></span><br><span class="line">git diff HEAD --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h3 id="5-如何提交本地仓库？">5.如何提交本地仓库？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地无论是新增文件或修改文件，都要add后才能commit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.先add再commit</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;message&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.add同时commit，注意，如果存在尚未跟踪的文件，需要使用 &quot;git add&quot; 建立跟踪</span></span><br><span class="line"> git commit -a -m <span class="string">&#x27;message&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="6-git-reset–如何回滚到指定版本或分支">6.<code>git reset</code>–如何回滚到指定版本或分支?</h3><ul class="lvl-0"><li class="lvl-2"><p>git reset的作用是修改HEAD的位置，即将HEAD指向的位置改变为之前存在的某个版本，如果想恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了，就可以用这种方法。</p></li><li class="lvl-2"><p>注意，如果reset包含了已经发布（<code>git push</code>）的的版本，此时如果用<code>git push</code>会报错，因为我们本地库HEAD指向的版本比远程库的要旧，需要执行命令<code>git push -f</code>强制更新远程</p></li><li class="lvl-2"><p>注意参数<code>--hard</code>有和没有的区别，有–hard，则完全回退到上一版本，丢弃所有其它修改，清空暂存区，同步工作目录到指定版本。没有–hard，则该版本之后的变化会变为Modified状态保留在工作目录，只清空暂存区。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.回滚到上一个版本</span></span><br><span class="line">git reset --hard HEAD^ <span class="comment"># 完全回退到上一个版本，丢弃所有其它修改，清空暂存区，同步工作目录到指定版本，也就是说，上一次提交之后新增或修改的文件内容都没有了</span></span><br><span class="line">git reset HEAD~1 <span class="comment"># 则该版本之后的变化会变为Modified状态保留在工作目录，只清空暂存区，也就是说，上一次提交之后新增或修改的文件内容得以保留</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.回滚到上上个版本</span></span><br><span class="line">git reset --hard HEAD^^</span><br><span class="line">git reset HEAD~2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.回滚到指定版本的分支</span></span><br><span class="line">git reset --hard 版本号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.1 查看版本号</span></span><br><span class="line">git <span class="built_in">log</span> --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.回滚到指定分支</span></span><br><span class="line">git reset --hard 分支名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.1 回滚到与本地远程分支一样的状态，一般本地仓库搞坏了会这么做</span></span><br><span class="line">git reset --hard origin/master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. `git log`看不到reset的历史，可以通过如下命令查看</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h3 id="7-gitignore–在git中如果想忽略掉某个文件，不让这个文件提交到版本库中，要怎么做呢？">7.<code>.gitignore</code>–在git中如果想忽略掉某个文件，不让这个文件提交到版本库中，要怎么做呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在工作目录下创建 .gitignore 文件</span></span><br><span class="line"><span class="comment"># 其格式为：</span></span><br><span class="line"><span class="comment"># 此为注释 – 将被 Git 忽略</span></span><br><span class="line">*.a       <span class="comment"># 忽略所有 .a 结尾的文件</span></span><br><span class="line">!lib.a    <span class="comment"># 但 lib.a 除外</span></span><br><span class="line">/TODO     <span class="comment"># 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span></span><br><span class="line">build/    <span class="comment"># 忽略 build/ 目录下的所有文件</span></span><br><span class="line">doc/*.txt <span class="comment"># 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略文件默认为当前项目目录下的.gitignore文件，也可以通过如下命令指定文件路径和名称</span></span><br><span class="line">git config core.excludesfile .gitignore_dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可配置为全局文件，这样就不需要为每个项目都创建.gitignore 文件</span></span><br><span class="line">git config --global core.excludesfile ~/.gitignore_global</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># .gitignore 文件 只对git add起作用，如果有文件在被加入到.gitignore 文件前就已经被commit了可以使用如下方法</span></span><br><span class="line"><span class="comment"># 1.删除暂存区、分支上内容，本地保留。解除该文件的追踪关系，脱离版本控制。</span></span><br><span class="line">git <span class="built_in">rm</span> --cached 文件名   <span class="comment"># 删除文件</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached 文件夹   <span class="comment"># 删除文件夹  -r 表示允许递归删除</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached .  <span class="comment"># 删除当前目录下全部文件的暂存区</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">rm</span> -r 文件夹/文件名  <span class="comment">#删除本地、暂存区、分支上内容，如果该文件不需要在本地保留，就可以测底删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.重新加入暂存区</span></span><br><span class="line">git add . <span class="comment"># 将当前目录下所有文件加入暂存区</span></span><br><span class="line">git add file/dir <span class="comment">#将指定文件或目录加入暂存区，支持通配符</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.查看暂存区内容</span></span><br><span class="line">git diff --cached</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.提交</span></span><br><span class="line">git commit -m <span class="string">&quot;message&quot;</span> <span class="comment"># 将暂存区内容提交到本地版本库</span></span><br><span class="line">git commit -am <span class="string">&quot;message&quot;</span> <span class="comment"># 先提交暂存区再提交到本地版本库</span></span><br></pre></td></tr></table></figure><h3 id="8-git-commit-amend–commit后发现有内容要修改或者注释写错了，但是不想创建新的一次commit，要怎么办呢？">8.<code>git commit --amend</code>–commit后发现有内容要修改或者注释写错了，但是不想创建新的一次commit，要怎么办呢？</h3><ul class="lvl-0"><li class="lvl-2"><p>以下命令如果直接合并到已经push过的版本，再次git push时会提示&quot;更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支&quot;，此时可以执行<code>git push -f</code>强行发布即可。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 覆盖上一次提交，这样不会产生新的提交</span></span><br><span class="line">git commit --amend  -am <span class="string">&quot;注释&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在上次提交中附加一些内容，保持提交日志不变</span></span><br><span class="line">git commit -a --amend --no-edit</span><br></pre></td></tr></table></figure><h3 id="9-git-log–如何查看提交日志">9.<code>git log</code>–如何查看提交日志?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示版本历史，如果有用git reset --hard xxxxx回退操作，则只会显示到xxx之前的历史</span></span><br><span class="line">git <span class="built_in">log</span>  <span class="comment"># 显示当前分支之前的全部日志</span></span><br><span class="line">git <span class="built_in">log</span>  --all <span class="comment">#  --all 显示全部分支</span></span><br><span class="line">git <span class="built_in">log</span> --oneline <span class="comment"># 单行显示</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --oneline --all --graph <span class="comment"># 图形化显示全部分支log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在所有提交日志中搜索包含「homepage」的提交</span></span><br><span class="line">git <span class="built_in">log</span> --all --grep=<span class="string">&#x27;homepage&#x27;</span> <span class="comment">#模糊匹配</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取某人的提交日志</span></span><br><span class="line">git <span class="built_in">log</span> --author=<span class="string">&quot;hanqf&quot;</span>  <span class="comment">#模糊匹配</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看完整版本历史，也就是说即便有git reset也会显示</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h3 id="10-如何创建本地仓库并绑定到远程仓库">10.如何创建本地仓库并绑定到远程仓库?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.首先要在对应的git服务器创建一个新的仓库，一般的git服务器创建新仓库后都会提示你如何绑定该仓库的</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 创建本地仓库</span></span><br><span class="line">git init <span class="comment">#将当前目录加入版本控制</span></span><br><span class="line">git init <span class="built_in">dir</span> <span class="comment">#将dir加入版本控制</span></span><br><span class="line"><span class="comment"># 默认使用 &#x27;master&#x27; 作为初始分支的名称，如果要修改分支名称，可以执行如下命令：</span></span><br><span class="line">git branch -m &lt;name&gt;</span><br><span class="line"><span class="comment"># 也可以通过设置git config来配置默认的名称，除了 &#x27;master&#x27; 之外，通常选定的名字有 &#x27;main&#x27;、&#x27;trunk&#x27; 和 &#x27;development&#x27;。</span></span><br><span class="line">git config --global init.defaultBranch &lt;名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 创建新的文件后提交到本地仓库</span></span><br><span class="line">git add . &amp;&amp; git commit -m <span class="string">&#x27;message&#x27;</span></span><br><span class="line">git commit -am <span class="string">&quot;备注&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.绑定远程仓库</span></span><br><span class="line">git remote add origin https://xxxxx (远程仓库地址)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.提交本地仓库的变更到远程仓库，这里要注意github的主分支名称已经变更为main，所以提交github时要将master替换为main</span></span><br><span class="line">git pull --rebase origin master <span class="comment">#获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</span></span><br><span class="line">git push -u origin master <span class="comment">#提交master到其远程仓库，第一次提交加上-u，以后就不用了</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git push <span class="comment"># 将当前分支提交到其对应的远程仓库</span></span><br></pre></td></tr></table></figure><h3 id="11-远程仓库地址变更后如何更新？">11.远程仓库地址变更后如何更新？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.命令行修改</span></span><br><span class="line">git remote set-url origin [NEW_URL]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.手工编辑.git目录下的config文件</span></span><br><span class="line">[remote <span class="string">&quot;origin&quot;</span>]</span><br><span class="line">    url = https://xxxxxx (修改为新的地址)</span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.查看修改后的地址</span></span><br><span class="line">git remote get-url origin   <span class="comment">#只会显示可以fetch的地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看远程仓库地址</span></span><br><span class="line">git remote -v  <span class="comment"># 会显示push和fetch的地址</span></span><br></pre></td></tr></table></figure><h3 id="12-如何将本地仓库同时绑定到多个远程仓库？">12.如何将本地仓库同时绑定到多个远程仓库？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.按照`10.如何创建本地仓库并绑定到远程仓库?`中的步骤完成第一个仓库的绑定</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.手工编辑.git目录下的config文件</span></span><br><span class="line">[remote <span class="string">&quot;origin&quot;</span>]</span><br><span class="line">    url = https://xxxxxxxx1  <span class="comment"># 此处为第一个远程仓库的地址，即可以push又可以fetch</span></span><br><span class="line">    url = https://xxxxxxxx2  <span class="comment"># 在此添加第二个仓库的地址，以此类推，可以添加多个，只可以push，只能备份使用</span></span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.保存后再次执行，这里要注意github的主分支名称已经变更为main，所以提交github时要将master替换为main</span></span><br><span class="line">git push -u origin master  <span class="comment"># 提交master到其远程仓库，只有第一次执行时需要加上 -u ，以后只需要：git push  origin master</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git push <span class="comment"># 将当前分支提交到其对应的远程仓库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看远程仓库地址</span></span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h3 id="13-如何在git-pull时不用每次都输入密码？">13.如何在<code>git pull</code>时不用每次都输入密码？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入项目目录</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行 git pull 并输入密码，此时当前项目就会记住密码了，下次再执行时就不用密码了</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h3 id="14-如果文件已经git-add到暂存区，但是尚未commit，此时如何将文件从暂存区中移除？">14.如果文件已经<code>git add</code>到暂存区，但是尚未commit，此时如何将文件从暂存区中移除？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 如果文件还没有放入暂存区</span></span><br><span class="line">git checkout -- &lt;文件名&gt; <span class="comment">#放弃对某一个文件已经做出的修改，回到head版本的该文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果文件已经`git add`到暂存区，但是尚未commit</span></span><br><span class="line"><span class="comment"># 移出单个文件</span></span><br><span class="line">git restore --staged &lt;文件路径&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移出本次全都add到暂存区的文件</span></span><br><span class="line">git reset .  <span class="comment"># 重置本次全部索引，.代表当前目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过git status查看文件路径</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果已经commit，可以通过如下方式移除</span></span><br><span class="line"><span class="comment"># 删除暂存区、分支上内容，本地保留。解除该文件的追踪关系，脱离版本控制。</span></span><br><span class="line">git <span class="built_in">rm</span> --cached &lt;文件名&gt;   <span class="comment"># 删除文件</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached &lt;文件夹&gt;   <span class="comment"># 删除文件夹  -r 表示允许递归删除</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached .  <span class="comment"># 删除当前目录下全部文件的暂存区，.代表当前目录</span></span><br></pre></td></tr></table></figure><h3 id="15-git-config–如何设置和查看git配置信息？">15.<code>git config</code>–如何设置和查看git配置信息？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用git config命令进行设置和查看</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局设置用户名和邮箱，全局配置是保存在 ~/.gitconfig中的</span></span><br><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只对当前项目有效，项目根目录下执行，去掉--global，项目配置优先级更高，项目配置保存在.git/config中，可以直接修改</span></span><br><span class="line">git config user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改你的用户名和邮箱</span></span><br><span class="line">git config --global --replace-all user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global --replace-all user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看配置</span></span><br><span class="line">git config --list  <span class="comment"># 此时项目配置和全局配置都会显示</span></span><br><span class="line"></span><br><span class="line">git config --global --list <span class="comment"># 只显示全局配置，全局配置是保存在 ~/.gitconfig中的</span></span><br><span class="line"></span><br><span class="line">git config user.name <span class="comment"># 查看某个配置的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改全局配置的值，--replace-all会匹配所有行，也可以直接在~/.gitconfig中修改</span></span><br><span class="line">git config --global --replace-all user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global --replace-all user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改项目配置的值，--replace-all会匹配所有行，也可以直接在.git/config中修改</span></span><br><span class="line">git config --replace-all user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --replace-all user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><h3 id="16-提交的文件太大-默认是1M-，导致push失败怎么办？">16.提交的文件太大(默认是1M)，导致push失败怎么办？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加大缓冲区大小（http.postBuffer的参数）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 524288000 的单位代表 B，524288000B 也就是 500MB。</span></span><br><span class="line">git config http.postBuffer 524288000</span><br><span class="line"><span class="comment"># 或全局设置</span></span><br><span class="line">git config --global http.postBuffer 524288000</span><br></pre></td></tr></table></figure><h3 id="17-clone代码最简单的方式是通过https的形式，不过一般这样做需要输入用户名和密码，如果不想输入用户名和密码可以使用git-xxxx的形式，如何实现呢？">17.clone代码最简单的方式是通过https的形式，不过一般这样做需要输入用户名和密码，如果不想输入用户名和密码可以使用<code>git@xxxx</code>的形式，如何实现呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这种方式就是基于ssh的密钥证书来实现</span></span><br><span class="line"><span class="comment"># 生成本地ssh密钥对，按照提示完成三次回车，即可生成 ssh key。此时会在~/.ssh/下创建id_rsa.pub(公钥)和id_rsa(私钥)</span></span><br><span class="line">ssh-keygen -b 4096 -t rsa <span class="comment"># -t 指定生成密钥的算法类型，生成的文件名称就是以其开头的，如这里就是id_rsa</span></span><br><span class="line"><span class="comment"># 支持的密钥算法类型包含：rsa,ed25519,等等，具体参见各个git服务器的配置说明</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时cat id_rsa.pub 可以看到公钥的内容</span></span><br><span class="line"><span class="comment"># 形式为:sshkey的算法+密文+sshkey的标签，此时sshkey算法为ssh-rsa，sshkey标签为机器名称，若要指定sshkey标签可以通过-C指定</span></span><br><span class="line">ssh-keygen -b 4096 -t rsa -C <span class="string">&quot;xxxxxxx&quot;</span></span><br><span class="line"><span class="comment"># 注意这里-C可以指定任意值，网上说必须指定邮箱其初衷仅仅是为了便于辨识</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将公钥文件内容复制到对应的git服务器配置ssh-key的地方，具体使用方式可以参见各个git服务器的说明。</span></span><br><span class="line"><span class="comment"># Github: settings--SSH and GPG keys--SSH keys--New SSH key</span></span><br><span class="line"><span class="comment"># 测试连接是否正常</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># Coding: 个人帐号设置--个人设置--SSH 公钥--新增公钥</span></span><br><span class="line"><span class="comment"># 测试连接是否正常</span></span><br><span class="line">ssh -T git@e.coding.net</span><br><span class="line"></span><br><span class="line"><span class="comment"># Gitee: 设置--安全设置--SSH公钥</span></span><br><span class="line"><span class="comment"># 测试连接是否正常</span></span><br><span class="line">ssh -T git@gitee.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># clone代码示例</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git</span><br></pre></td></tr></table></figure><h3 id="18-git-branch–如何创建分支-切换分支-查看分支-删除分支-发布分支？">18.<code>git branch</code>–如何创建分支\切换分支\查看分支\删除分支\发布分支？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从当前分支创建release分支，但是不切换</span></span><br><span class="line">git branch release</span><br><span class="line"></span><br><span class="line">git checkout release <span class="comment"># 从当前分支切换到release分支</span></span><br><span class="line">git checkout &lt;commit号&gt; <span class="comment"># 从当前分支切换到commit号对应的版本</span></span><br><span class="line"><span class="comment"># 注意，当切换到某个版本号对应的版本时就会发生“头分离”，即HEAD指针不会再指向分支指针，而是指向了那个版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从当前分支创建并切换到release分支，相当于执行git branch release &amp;&amp; git checkout release两个命令</span></span><br><span class="line">git checkout -b release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从dev分支创建release分支，但是不切换</span></span><br><span class="line">git branch release dev</span><br><span class="line"><span class="comment"># 从dev分支创建release分支,并切换</span></span><br><span class="line">git checkout -b release dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从指定版本创建release分支，版本号通过git log --oneline查看</span></span><br><span class="line">git branch release 799fb04</span><br><span class="line">git checkout -b release 799fb04</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从远程分支origin/release创建release分支，并切换</span></span><br><span class="line">git checkout -b release origin/release</span><br><span class="line"></span><br><span class="line"><span class="comment">#跳到上一个分支，比如当前是master分支，是从dev分支通过git checkout master命令切换过来的，那么该命令会重新回到dev分支</span></span><br><span class="line">git checkout -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line">git branch  <span class="comment">#列出所有本地分支，标*的就是当前所在的分支，.git/HEAD 文件中存放的就是当前分支信息</span></span><br><span class="line">git branch --remote   <span class="comment">#列出远程仓库中的所有分支</span></span><br><span class="line">git branch -a  <span class="comment">#同时显示本地和远程的所有分支</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> .git/HEAD  <span class="comment">#查看当前所在分支</span></span><br><span class="line">git symbolic-ref HEAD <span class="comment">#查看当前所在分支，本地分支</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line"><span class="comment"># 删除release分支，不能在release下删除自己</span></span><br><span class="line">git branch -d release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设我们通过master创建了release分支，此时release分支发生了变更并执行了commit，但是并没有将更改merge回master，此时删除release分支需要执行如下命令</span></span><br><span class="line">git branch -D release  <span class="comment"># -D 强制删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布分支</span></span><br><span class="line">git push --set-upstream origin &lt;new branch name&gt; <span class="comment">#推新分支到远程仓库并在本地分支和远程分支之间建立关联</span></span><br><span class="line"><span class="comment"># 也可以分两步完成，但推荐上面的方式</span></span><br><span class="line">git push origin &lt;new branch name&gt; <span class="comment">#推新分支到远程仓库</span></span><br><span class="line">git branch --set-upstream-to=origin/&lt;new branch name&gt; &lt;new branch name&gt; <span class="comment">#关联本地分支到远程分支，否则每一次pull或push的时候都需要明确指定本地和远端分支。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前分支跟踪的远程分支</span></span><br><span class="line">git rev-parse --abbrev-ref --symbolic-full-name @&#123;u&#125;  <span class="comment"># @&#123;u&#125; 是 @&#123;upstream&#125; 的简写</span></span><br></pre></td></tr></table></figure><h3 id="19-merge还是rebase-如何合并分支">19.merge还是rebase? 如何合并分支?</h3><p>一般开发流程：</p><ol><li class="lvl-3"><p>更新主分支 git pull</p></li><li class="lvl-3"><p>从主分支创建一个开发分支 git checkout -b dev，每个开发人员都会创建一个自己的开发分支</p></li><li class="lvl-3"><p>开发分支完成测试后合并回主分支，这里推荐使用git rebase，开发分支的log会被移动到主分支的顶端，这样主分支始终是一条线</p></li><li class="lvl-3"><p>这样主分支在保持干净的同时还保留了每一次commit的log，便于开发人员追溯历史</p></li><li class="lvl-3"><p>也可以使用<code>git merge --no-ff</code>，其也会保留每次的log到主分支上</p></li></ol><p>一般发布流程：</p><ol><li class="lvl-3"><p>将主分支测试完成后合并到发布分支，一般都是由一个专门的人员进行合并，此时推荐使用git merge，这样每次一发布的版本都会产生一个新的节点，而主分支上的多次commit的log不会被记录到发布分支上</p></li><li class="lvl-3"><p>这样发布分支看起来就是每一次大的发布才会合并一次并记录log，log中可以编辑本次发布的内容。</p></li></ol><h4 id="示例准备，初始化一个待合并的目录">示例准备，初始化一个待合并的目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">➜ <span class="built_in">mkdir</span> git_test</span><br><span class="line">➜ <span class="built_in">cd</span> git_test</span><br><span class="line">➜ <span class="built_in">touch</span> 1.txt</span><br><span class="line">➜ git init</span><br><span class="line">[master（根提交） 5b91fc1] init...</span><br><span class="line"> 1 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 1.txt</span><br><span class="line">➜ git:(master) git add . &amp;&amp; git commit -m <span class="string">&#x27;init...&#x27;</span></span><br><span class="line">➜ git:(master) git checkout -b dev</span><br><span class="line">➜ git:(dev) <span class="built_in">echo</span> <span class="string">&quot;dev1&quot;</span> &gt;&gt; a.txt</span><br><span class="line">➜ git:(dev) ✗ git add . &amp;&amp; git commit -m <span class="string">&#x27;dev1&#x27;</span></span><br><span class="line">[dev 8d57739] dev1</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 a.txt</span><br><span class="line">➜ git:(dev) ✗ git checkout master</span><br><span class="line">切换到分支 <span class="string">&#x27;master&#x27;</span></span><br><span class="line">➜ git:(master) ✗ <span class="built_in">echo</span> <span class="string">&quot;master1&quot;</span> &gt;&gt; a.txt</span><br><span class="line">➜ git:(master) ✗ git add . &amp;&amp; git commit -m <span class="string">&#x27;master1&#x27;</span></span><br><span class="line">[master fa2400a] master1</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 a.txt</span><br><span class="line">➜ git:(master) ✗ git checkout dev</span><br><span class="line">切换到分支 <span class="string">&#x27;dev&#x27;</span></span><br><span class="line">➜ git:(dev) ✗ <span class="built_in">echo</span> <span class="string">&quot;dev2&quot;</span> &gt;&gt; a.txt</span><br><span class="line">➜ git:(dev) ✗ git add . &amp;&amp; git commit -m <span class="string">&#x27;dev2&#x27;</span></span><br><span class="line">[dev 0006560] dev2</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">➜ git:(dev) ✗ git checkout master</span><br><span class="line">切换到分支 <span class="string">&#x27;master&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="merge">merge</h4><p>将dev分支merge到当前分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge dev</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>merge会将dev分支和当前分支合并后创建一个新的节点放到当前分支最顶端，所以解决完冲突，需要执行如下命令创建一个新的commit</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . &amp;&amp; git commit -m <span class="string">&#x27;merge dev&#x27;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>merge的log会按照时间顺序显示</p></li><li class="lvl-2"><p>merge后如果删除了dev分支，则在log中就看不到这个分支信息了，但是日志内容还在</p></li></ul><h5 id="merge示例">merge示例</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜ git:(master) ✗ git merge dev</span><br><span class="line">冲突（add/add）：合并冲突于 a.txt</span><br><span class="line">自动合并 a.txt</span><br><span class="line">自动合并失败，修正冲突然后提交修正的结果。</span><br><span class="line">➜ git:(master) ✗ vim a.txt</span><br><span class="line">➜ git:(master) ✗ git add . &amp;&amp; git commit -m <span class="string">&#x27;master merge release&#x27;</span></span><br><span class="line">➜ git:(master) git <span class="built_in">log</span> --oneline   <span class="comment"># 此时才能看到日志</span></span><br><span class="line">➜ git:(master) git branch -D dev</span><br><span class="line">已删除分支 dev（曾为 0006560）。</span><br></pre></td></tr></table></figure><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/merge1.png" alt=""><br>删除dev分支后<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/merge2.png" alt=""></p><h4 id="rebase">rebase</h4><p>将dev分支rebase到当前分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase dev</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>rebase会将dev分支的每一个节点转移到当前分支最顶端，而不会产生一个新的节点，这样rebase后的分支节点看起来就是一条线</p></li><li class="lvl-2"><p>解决完冲突，执行<code>git add .</code>和<code>git rebase --continue</code>，不会产生额外的commit</p></li><li class="lvl-2"><p>rebase后如果删除了dev分支，则在log中就看不到这个分支信息了，但是日志内容还在，这样看起来就是主分支自己的节点，没有产生过新的分支</p></li><li class="lvl-2"><p>如果要放弃本次合并，可以运行<code>git rebase --abort</code></p></li></ul><h5 id="rebase示例">rebase示例</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(master) git rebase dev</span><br><span class="line">冲突（add/add）：合并冲突于 a.txt</span><br><span class="line">自动合并 a.txt</span><br><span class="line">error: 不能应用 0657382... master1</span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">&quot;git add/rm &lt;conflicted_files&gt;&quot;</span>, <span class="keyword">then</span> run <span class="string">&quot;git rebase --continue&quot;</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">&quot;git rebase --skip&quot;</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">&quot;git rebase&quot;</span>, run <span class="string">&quot;git rebase --abort&quot;</span>.</span><br><span class="line">不能应用 0657382... master1</span><br><span class="line">➜  git:(e4410b4) ✗ vim a.txt</span><br><span class="line">➜  git:(e4410b4) ✗ git add .</span><br><span class="line">➜  git:(e4410b4) ✗ git rebase --<span class="built_in">continue</span></span><br><span class="line">[分离头指针 bd01ea0] master1</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">成功变基并更新 refs/heads/master。</span><br><span class="line">➜  git:(master) git <span class="built_in">log</span> --oneline</span><br><span class="line">➜  git:(master) git branch -D dev</span><br><span class="line">已删除分支 dev（曾为 e4410b4）。</span><br></pre></td></tr></table></figure><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase1.png" alt=""><br>删除dev分支后<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase2.png" alt=""></p><h3 id="20-git-rebase-i–我commit了很多次，发现都是干的一件事，此时如果直接rebase到主分支会有很多没必要的log，是否可以合并这些commit为一个呢？">20.<code>git rebase -i</code>–我commit了很多次，发现都是干的一件事，此时如果直接rebase到主分支会有很多没必要的log，是否可以合并这些commit为一个呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git rebase -i 即可以合并多次提交，也可以合并分支，-i表示可以编辑提交过程，编辑过程中将后面的提交命令修改为s即可，保存后会提示你是否重新编辑log内容，按需编写即可。</span></span><br><span class="line">git rebase -i  commit号 <span class="comment">#将commit号到最新的提交合并为一个提交，需要在弹出的交互页面中编辑合并过程</span></span><br><span class="line">git rebase -i  start_commit号 end_commit号  <span class="comment">#合并指定commit号之间的的提交</span></span><br><span class="line">git rebase -i HEAD~3   <span class="comment">#合并最新的三次提交，编辑页面将后两次命令修改为s，wq后编辑新的commit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 该命令也可以合并分支</span></span><br><span class="line">git rebase -i  分支名称 <span class="comment">#将指定分支合并到当前分支，合并时将指定分支的多个提交合并为一次提交，需要在弹出的交互页面中编辑合并过程</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>如果修改的提交节点距离结束的提交节点中间有多个节点，而上一次和下一次都需要合并文件，这个过程就要进行多次。个人感觉这个过程虽然可以重新整理提交节点，使节点更准确清晰，但是如果修改的点比较远，文件内容变化复杂，这个多次合并的过程还是比较痛苦的，不推荐在这种情况下使用。</p></li><li class="lvl-2"><p>推荐的使用场景为，针对同一个功能进行修改，在commit后尚未进行pushsa时发现有些内容需要变化，如果此时没有进行commit，可以执行<code>git commit --amend  -am &quot;注释&quot;</code>,如果已经执行了commit，则可以执行<code>git rebase -i HEAD~2</code>。</p></li></ul><h4 id="示例">示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i HEAD~3</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>注意这里会进入两次编辑页面，一次是多个提交的处理方式，按提示进行修改即可，一般保留第一行的命令pick，后面的行命令修改为s，然后wq保存。</p></li><li class="lvl-2"><p>注意合并多个分支时如果包含已经发布过的分支，就要调整顺序，将已经发布的最后一个分支放到第一行，否则再次发布时会提示需要先执行<code>git pull</code>，这是因为按照上面的逻辑只有第一行的是提交操作，后面的不会产生新的提交，所以版本号就会落后于远端分支，但是即便调整顺序，也会提示版本偏离，还是要先执行<code>git pull</code>，待手工合并冲突后再次提交一个新的commit，所以，最好的方法就是不要包含已经发布过的分支，只针对未发布的分支进行合并。<br>编辑后的：<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase3.png" alt=""></p></li><li class="lvl-2"><p>第二个页面是要求你编辑本次合并的log说明，此时每次的log都会显示在这个页面，去掉不需要的，重新编辑一下保存即可。<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase4.png" alt=""><br>编辑后的：<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase5.png" alt=""></p></li></ul><!-- <div><img src="/images_glob/git-command/rebase5.png" width="60%"></div> --><p>查看日志：git log --oneline<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase6.png" alt=""></p><h3 id="21-git-revert–如何撤销指定的提交呢，就是把这次提交回滚到其前一次提交的状态，但是又不影响其之后的提交？">21.<code>git revert</code>–如何撤销指定的提交呢，就是把这次提交回滚到其前一次提交的状态，但是又不影响其之后的提交？</h3><ul class="lvl-0"><li class="lvl-2"><p><code>git revert</code> 是回滚某个commit ，不是回滚“到”某个</p></li><li class="lvl-2"><p><code>git revert</code>是用一次新的commit来回滚之前的commit，<code>git reset</code>是直接删除指定的commit。</p></li><li class="lvl-2"><p><code>git reset</code> 撤销到某次提交, <code>git revert</code> 撤销某次提交，撤销并不意味着删除本次提交，其log里仍然会有这次提交，只不过revert后会产生一个新的节点用于提交，而reset是会删除之前的log。</p></li><li class="lvl-2"><p>需要回滚到上一个版本时，可以通过<code>git reset HEAD~1</code>实现，也可以通过执行<code>git revert HEAD</code>实现。区别就是reset后再次发布需要<code>git push -f</code>，而revert不需要-f参数，因为revert时会在顶端产生一个新的节点，其版本号一定比远端新的。</p></li><li class="lvl-2"><p>还有一点需要注意，例如dev是从 master checkout出来的分支，然后针对dev执行reset时，如果reset的版本master里也包含，此时再将dev merge 回 master时，则master里会保留本应该被reset的内容，而执行revert则不会出现这个问题，因为revert是用一次逆向的commit“中和”之前的提交。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 撤销并commit一次新的提交</span></span><br><span class="line">git revert HEAD        <span class="comment">#撤销前一次 commit</span></span><br><span class="line">git revert HEAD^       <span class="comment">#撤销前前一次 commit</span></span><br><span class="line">git revert HEAD~3      <span class="comment">#撤销倒数第四次提交</span></span><br><span class="line">git revert commit号    <span class="comment">#撤销指定的版本，撤销也会作为一次提交进行保存。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果只撤销，即只改变本地目录和索引，但不执行commit，可以加上-n参数，然后手工执行commit操作</span></span><br><span class="line">git revert -n HEAD~3</span><br><span class="line">git revert -n &lt;commit1&gt;..&lt;commit2&gt; <span class="comment"># 撤销多个版本，commit1 &gt; x &gt;= commit2，此时要加上-n参数，否则每个撤销都会创建一个新的commit号</span></span><br></pre></td></tr></table></figure><h3 id="22-如何打tag">22.如何打tag</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git tag -a <span class="string">&quot;prod_x.x.x&quot;</span> -m <span class="string">&quot;message&quot;</span> <span class="comment">#打标签, -a是标签名 -m注释</span></span><br><span class="line">git push origin <span class="string">&quot;prod_x.x.x&quot;</span> <span class="comment">#将这个新标签推送到远程仓库</span></span><br><span class="line"></span><br><span class="line">git tag <span class="comment">#查看标签信息</span></span><br><span class="line">git show prod_x.x.x <span class="comment">#显示被打标签的commit的详细信息</span></span><br><span class="line"></span><br><span class="line">git checkout -b hotfix_x.x.x prod_x.x.x <span class="comment">#从prod_x.x.x标签的版本上开一个新的修复分支</span></span><br><span class="line">git push origin hotfix_x.x.x <span class="comment">#将hotfix_x.x.x分支推送到远程仓库</span></span><br><span class="line">git branch --set-upstream-to=origin/hotfix_x.x.x hotfix_x.x.x <span class="comment">#关联本地分支到远程分支</span></span><br></pre></td></tr></table></figure><h3 id="23-git-pull-git-fetch-git-merge这种说法对吗？">23.<code>git pull</code> = <code>git fetch</code> + <code>git merge</code>这种说法对吗？</h3><ul class="lvl-0"><li class="lvl-2"><p>先说答案，<code>git pull</code> != <code>git fetch</code> + <code>git merge</code>，但是确实很像。</p></li><li class="lvl-2"><p>其实更好的比较是<code>git pull --rebase</code> 与 <code>git fetch</code> + <code>git merge</code>的区别，其相当于<code>git fetch</code> + <code>git rebase</code></p></li></ul><p>为了说清楚这个问题，我们需要先明白git的三个仓库：</p><ol><li class="lvl-3"><p>本地仓库：如master，修改代码，提交暂存区，然后commit到的就是本地仓库</p></li><li class="lvl-3"><p>本地远程跟踪仓库：如orign/master，这个仓库不能用来直接提交代码，其用来保存上一次从远程仓库拉取到的最新版本，如果不主动执行git fetch，git pull，git push等，是不会更新这个版本的。</p></li><li class="lvl-3"><p>远程仓库：git服务器，如github。执行git push时会将本地仓库的版本发布到远程仓库。</p></li></ol><ul class="lvl-0"><li class="lvl-2"><p><code>git fetch</code>的作用是将远程仓库(如github)的版本与本地远程跟踪仓库(如orign/master)的版本保持一致。之后我们在master分支下执行<code>git merge orign/master</code>就会将远程仓库的代码合并到本地仓库，所以合并后会产出一个新的版本，我们可以发布这个版本到远程仓库。</p></li><li class="lvl-2"><p><code>git pull</code>的作用很像<code>git fetch</code> + <code>git merge</code>，区别就是，<code>git pull</code>时如果没有冲突，就不会产生新的版本。</p></li></ul><h3 id="24-如何确定开发–-测试–-发布流程？">24.如何确定开发–&gt;测试–&gt;发布流程？</h3><h4 id="开发A模型：基于master的主分支开发模型">开发A模型：基于master的主分支开发模型</h4><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/A-git-dev.png" alt=""></p><ul class="lvl-0"><li class="lvl-2"><p>使用git rebase orign将远程分支内容合并到当前master主分支，保证本地master始终是一条线</p></li><li class="lvl-2"><p>模型结构简单，始终记住使用<code>git fetch</code> + <code>git rebase</code>或者<code>git pull --rebase</code>更新主分支版本</p></li></ul><h4 id="开发B模型：基于dev的子分支开发模型">开发B模型：基于dev的子分支开发模型</h4><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/B-git-dev.png" alt=""></p><ul class="lvl-0"><li class="lvl-2"><p>增加了一个dev子分支，合并回master主分支时可以通过<code>git rebase -i</code>的方式合并多个commit为一个commit，减少版本号数量</p></li><li class="lvl-2"><p>每次开发时要创建新的分支，开发完成后删除该分支，虽略显反锁，但也更加灵活，比如上一次的开发任务还没有完成，有一个紧急的任务需要马上处理，此时只需要从master分支checkout出一个子分支进行开发即可。</p></li><li class="lvl-2"><p>使用<code>git pull --rebase</code>更新远程版本，使用<code>git rebase dev</code>合并子分支，总的目标依旧是保证本地master始终是一条线</p></li></ul><h4 id="测试模型：基于A-B模型的master的主分支">测试模型：基于A\B模型的master的主分支</h4><ul class="lvl-0"><li class="lvl-2"><p>开发完成后，从master分支中checkout出一个release分支用于测试</p></li><li class="lvl-2"><p>测试过程中如果有bug，则由开发人员通过开发模型进行修复，修复后merge到release中</p></li><li class="lvl-2"><p>测试通过后，将release分支内容merge到prod分支中（prod表示生产分支，第一次时从release中checkout创建）</p></li><li class="lvl-2"><p>release分支仅仅为了本次发布内容而创建的测试分支，所以发布后可以删除release分支</p></li></ul><h4 id="发布模型">发布模型</h4><ul class="lvl-0"><li class="lvl-2"><p>release分支测试通过够会merge到prod生产分支，此时代码可以发布上线，上线前需要为prod打tag</p></li><li class="lvl-2"><p>只有打了tag的代码才能部署上线，如果线上代码发现bug，则从对应的tag中checkout一个hotfix分支，用于bug修复</p></li><li class="lvl-2"><p>bug修复后从hotfix分支checkout出hotfix_release分支进行测试，测试过程按照<code>测试模型</code>进行</p></li><li class="lvl-2"><p>测试通过后按照<code>发布模型</code>进行</p></li><li class="lvl-2"><p>发布后需要将hotfix_release分支merge到master开发主分支，之后可以删除本次hotfix分支和hotfix_release分支</p></li></ul><h4 id="说明">说明</h4><ul class="lvl-0"><li class="lvl-2"><p>本地和远程始终存在的分支是master开发主分支和prod发布主分支</p></li><li class="lvl-2"><p>每次上线前一定要打tag，tag对应的就是当前生产环境</p></li><li class="lvl-2"><p>测试分支和修复分支根据需要进行创建，用后可以删除。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;一起来了解一些git常用命令吧&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;推荐一个学习git命令的网站：&lt;a href=&quot;https://learngitbranching.js.org/?locale=zh_CN&quot;&gt;https://learngitbranching.js.org/?locale=zh_CN&lt;/a&gt;&lt;br&gt;
&lt;img src=&quot;https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/git.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="git" scheme="https://blog.hanqunfeng.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot的@Query注解</title>
    <link href="https://blog.hanqunfeng.com/2021/09/08/springboot-query/"/>
    <id>https://blog.hanqunfeng.com/2021/09/08/springboot-query/</id>
    <published>2021-09-08T12:33:15.000Z</published>
    <updated>2022-08-17T07:11:46.240Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">聊聊Spring Boot的@Query注解</li><li class="lvl-2">参考：<a href="/2021/09/06/spring-boot-JpaRepository/" title="Spring Boot自定义JpaRepository基类">Spring Boot自定义JpaRepository基类</a></li></ul><span id="more"></span><h2 id="Query说明">@Query说明</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD, ElementType.ANNOTATION_TYPE&#125;)</span></span><br><span class="line"><span class="meta">@QueryAnnotation</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Query &#123;</span><br><span class="line">    <span class="comment">// 指定JPA Query语句,当nativeQuery=true时是原生的sql语句</span></span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//指定count的JPA Query语句,不指定则自动生成,当nativeQuery=true时是原生的sql语句,countQuery主要用来配合 value实现分页功能</span></span><br><span class="line">    String <span class="title function_">countQuery</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//依据哪个字段来count,如果未配置countQuery（）或countProjection（），将从原始查询派生count查询</span></span><br><span class="line">    String <span class="title function_">countProjection</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// 默认是false，表示value 里面是不是原生的Sql 语句</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">nativeQuery</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//指定一个query 的名字，必须是唯一的。 如果不指定，默认的生成规则是：&#123;$domainClass&#125;.$&#123;queryMethodName&#125;。使用命名查询时会用到。</span></span><br><span class="line">    String <span class="title function_">name</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//指定一个count 的query 名字，必须是唯一的。如果不指定，默认的生成规则是：&#123;$domainClass&#125;.$&#123;queryMethodName&#125;.count</span></span><br><span class="line">    String <span class="title function_">countName</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本用法示例">基本用法示例</h2><ul class="lvl-0"><li class="lvl-2"><p>@Entity</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_country&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Country</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 主键自增</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line"><span class="meta">@Column(name=&quot;id&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 中文简称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;name_zh&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nameZh;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 英文简称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;name_en&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nameEn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 英文全称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;name_en_full&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nameEnFull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 两字母代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;code_two&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String codeTwo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 三字母代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;code_three&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String codeThree;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 数字代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;num_code&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String numCode;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 备注</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;remark&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Country</span><span class="params">(Long id, String nameZh, String nameEn)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.nameZh = nameZh;</span><br><span class="line"><span class="built_in">this</span>.nameEn = nameEn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Country</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Dto</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CountryDto</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 主键自增</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 中文简称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nameZh;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 英文简称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nameEn;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 英文全称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nameEnFull;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 两字母代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String codeTwo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 三字母代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String codeThree;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 数字代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String numCode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 备注</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CountryDto</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CountryDto</span><span class="params">(Long id, String nameZh, String nameEn)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.nameZh = nameZh;</span><br><span class="line">        <span class="built_in">this</span>.nameEn = nameEn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Jpa</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title class_">BaseJpaRepository</span>&lt;Country, Long&gt; &#123;</span><br><span class="line">    <span class="comment">//sql查询，只有SELECT * 时才可以直接返回@Entity对象，但要有无参构造方法，page要指定countQuery</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT * FROM tbl_country WHERE id &gt; ?1&quot;, countQuery = &quot;SELECT count(*) FROM tbl_country WHERE id &gt; ?1&quot;, nativeQuery = true)</span></span><br><span class="line">    Page&lt;Country&gt; <span class="title function_">findByIdAfter</span><span class="params">(Long id, Pageable pageable)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql查询，只有SELECT * 时才可以直接返回@Entity对象</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT * FROM tbl_country  WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">    Country <span class="title function_">findCountrySqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//hql查询部分属性时，返回@Entity对象，要在@Entity中创建对应的构造方法</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT new Country(id,nameZh,nameEn) FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">    Country <span class="title function_">findCountryHqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//hql查询部分属性时，返回非@Entity对象，要创建对应的构造方法，且必须使用全路径</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT new com.example.demo.CountryDto(id,nameZh,nameEn) FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">    CountryDto <span class="title function_">findCountryDtoNewHqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="说明">说明</h3><ul class="lvl-0"><li class="lvl-2"><p>返回@Entity对象，查询全部属性时，sql和hql都支持直接转换</p></li><li class="lvl-2"><p>返回@Entity对象，查询部分属性时，sql不支持直接转换，hql时，实体要有对应的构造方法</p></li><li class="lvl-2"><p>hql也可以返回Dto对象，查询部分属性时，同样需要Dto有对应的构造方法，注意Dto必须使用全路径</p></li></ul><h3 id="sql查询部分属性直接转换成对象的方法">sql查询部分属性直接转换成对象的方法</h3><ul class="lvl-0"><li class="lvl-2"><p>方法1，前一篇文章<a href="/2021/09/06/spring-boot-JpaRepository/" title="Spring Boot自定义JpaRepository基类">Spring Boot自定义JpaRepository基类</a>中通过自定义JpaRepository基类，转换@Entity对象和Dto对象都支持</p></li><li class="lvl-2"><p>方法2，注入自定义的结果转换器，只能转换为Dto对象，下面说明如何实现</p></li></ul><h2 id="注入自定义的结果转换器">注入自定义的结果转换器</h2><ul class="lvl-0"><li class="lvl-2"><p>无论是sql还是hql，查询部分属性时，jpa输出的结果都会被转化为Map对象，我们只需要注入一个能将Map转换为指定对象的转换器就可以了</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;注入自定义查询结果转换器&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JpaDtoConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里用到了上文“Spring Boot自定义JpaRepository基类”中介绍过的JpaUtil，通过json作为中间媒介</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JpaUtil jpaUtil;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化注入<span class="doctag">@JpaDto</span>对应的Converter</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = applicationContext.getBeansWithAnnotation(JpaDto.class);</span><br><span class="line">        <span class="keyword">for</span> (Object o : map.values()) &#123;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> o.getClass();</span><br><span class="line">            log.info(<span class="string">&quot;Jpa添加Converter,class=&#123;&#125;&quot;</span>, c.getName());</span><br><span class="line">            <span class="type">DefaultConversionService</span> <span class="variable">defaultConversionService</span> <span class="operator">=</span> ((DefaultConversionService) DefaultConversionService.getSharedInstance());</span><br><span class="line">            <span class="comment">//添加Map对象的转换器，将Map对象转换为指定的对象类型</span></span><br><span class="line">            defaultConversionService.addConverter(Map.class, c, m -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> jpaUtil.mapToObject(m, c, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FatalBeanException</span>(<span class="string">&quot;Jpa结果转换出错,class=&quot;</span> + c.getName(), e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>定义标记注解</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;注解标记，声明在Dto对象上，表示该对象作为结果对象时，可以被自定义结果转换器转化&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Target(value = &#123;ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> JpaDto &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时Dto对象上要加上@JpaDto注解</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JpaDto</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CountryDto</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    …………………………</span><br><span class="line">    …………………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>JpaRepository示例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title class_">BaseJpaRepository</span>&lt;Country, Long&gt; &#123;</span><br><span class="line">    <span class="comment">//hql查询部分属性时，一定有使用as别名，这里返回值不能是@Entity，并且其要标注@JpaDto注解</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id as id,nameZh as nameZh,nameEn as nameEn FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">    CountryDto <span class="title function_">findCountryDtoHqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql查询部分属性时，一定有使用as别名，这里返回值不能是@Entity，并且其要标注@JpaDto注解</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">    CountryDto <span class="title function_">findCountryDtoSqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql查询部分属性时，一定有使用as别名，这里返回值不能是@Entity，并且其要标注@JpaDto注解，page要指定countQuery</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE id &gt; ?1&quot;, countQuery = &quot;SELECT count(*) FROM tbl_country WHERE id &gt; ?1&quot;, nativeQuery = true)</span></span><br><span class="line">    Page&lt;CountryDto&gt; <span class="title function_">findByIdAfterDto</span><span class="params">(Long id, Pageable pageable)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="说明-2">说明</h3><ul class="lvl-0"><li class="lvl-2"><p>返回注解了@JpaDto注解的对象时，hql和sql都支持部分字段查询，但要注意字段要加as别名，别名与Dto对象属性名称要一致；</p></li><li class="lvl-2"><p>部分字段查询时，Dto对象中不必创建对应的构造方法；</p></li><li class="lvl-2"><p>查询部分属性时，不支持返回@Entity对象，即使在@Entity类上增加@JpaDto注解也不好使，说明其返回的不是Map对象</p></li><li class="lvl-2"><p>hql返回部分属性时，如果直接返回@Entity对象，会抛异常<code>Failed to convert from type [java.lang.Object[]] to type [com.example.demo.Country]</code>，提示类型转换失败，因其返回类型是java.lang.Object[]，所以也说明为什么要用构造方法的形式接收返回数据，就是要与数组位置一一对应上，所以hql返回部分属性，就要使用构造方法的形式；</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id as id,nameZh as nameZh,nameEn as nameEn FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">Country <span class="title function_">findCountryHqlByNameError</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT new Country(id,nameZh,nameEn) FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">Country <span class="title function_">findCountryHqlByNameOk</span><span class="params">(String name)</span>;</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>sql返回部分属性时，如果直接返回@Entity对象，会抛异常<code>No such column: 'code_three'.</code>，提示缺少字段。说明该形式在封装@Entity对象时需要遍历其所有@Column字段并为其赋值，此时可以返回Dto或者Map，也可以使用自定义JpaRepository的方式，还有一种方法就是使用命名查询，就是@NamedNativeQuery和@SqlResultSetMapping；</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">Country <span class="title function_">findCountrySqlByNameError</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确，之后可以将map转换为@Entity对象，如通过json的方式</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">Map <span class="title function_">findCountrySqlByNameOk</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">Object[] findCountrySqlByNameOk2(String name);</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确，CountryDto要加上@JpaDto注解</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">CountryDto <span class="title function_">findCountrySqlByNameOk3</span><span class="params">(String name)</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="命名查询">命名查询</h2><ul class="lvl-0"><li class="lvl-2"><p>@NamedQuery，用于执行hql</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NamedQueries(&#123;</span></span><br><span class="line"><span class="meta">        @NamedQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;HQL_FIND_ALL_COUNTRY&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的hql</span></span><br><span class="line"><span class="meta">                query = &quot;from Country&quot;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_country&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Country</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    …………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>@NamedNativeQuery和@SqlResultSetMapping，用于执行sql，可以指定结果类型，不指定结果类型时返回java.lang.Object[]</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NamedNativeQueries(&#123;</span></span><br><span class="line"><span class="meta">        @NamedNativeQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_FIND_ALL_COUNTRY&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的sql</span></span><br><span class="line"><span class="meta">                query = &quot;select * from tbl_country&quot;,</span></span><br><span class="line"><span class="meta">                //指定返回类型</span></span><br><span class="line"><span class="meta">                resultClass = Country.class</span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @NamedNativeQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_FIND_ALL_COUNTRY2&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的sql</span></span><br><span class="line"><span class="meta">                query = &quot;select * from tbl_country&quot;,</span></span><br><span class="line"><span class="meta">                //通过@SqlResultSetMapping封装返回类型，这里是@SqlResultSetMapping的名称</span></span><br><span class="line"><span class="meta">                resultSetMapping = &quot;SQL_RESULT_COUNTRY_ALL&quot;</span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @NamedNativeQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_FIND_SOME_FIELD_COUNTRY&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的sql</span></span><br><span class="line"><span class="meta">                query = &quot;select id,name_zh as nameZh,name_en as nameEn from tbl_country&quot;,</span></span><br><span class="line"><span class="meta">                //通过@SqlResultSetMapping封装返回类型，这里是@SqlResultSetMapping的名称</span></span><br><span class="line"><span class="meta">                resultSetMapping = &quot;SQL_RESULT_COUNTRY_SOME_FIELD&quot;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@SqlResultSetMappings(&#123;</span></span><br><span class="line"><span class="meta">        @SqlResultSetMapping(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_RESULT_COUNTRY_ALL&quot;,</span></span><br><span class="line"><span class="meta">                //指定返回类的@Entity类型</span></span><br><span class="line"><span class="meta">                entities = &#123;</span></span><br><span class="line"><span class="meta">                        @EntityResult(</span></span><br><span class="line"><span class="meta">                                //指定返回类的@Entity类型</span></span><br><span class="line"><span class="meta">                                entityClass = Country.class</span></span><br><span class="line"><span class="meta">                        )</span></span><br><span class="line"><span class="meta">                &#125;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @SqlResultSetMapping(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_RESULT_COUNTRY_SOME_FIELD&quot;,</span></span><br><span class="line"><span class="meta">                //查询部分属性时，可以通过构造方法封装结果数据</span></span><br><span class="line"><span class="meta">                classes = &#123;</span></span><br><span class="line"><span class="meta">                        @ConstructorResult(</span></span><br><span class="line"><span class="meta">                                //指定返回类的@Entity类型</span></span><br><span class="line"><span class="meta">                                targetClass = Country.class,</span></span><br><span class="line"><span class="meta">                                //指定调用的构造方法</span></span><br><span class="line"><span class="meta">                                columns = &#123;</span></span><br><span class="line"><span class="meta">                                        @ColumnResult(name = &quot;id&quot;, type = Long.class),</span></span><br><span class="line"><span class="meta">                                        @ColumnResult(name = &quot;nameZh&quot;),</span></span><br><span class="line"><span class="meta">                                        @ColumnResult(name = &quot;nameEn&quot;)</span></span><br><span class="line"><span class="meta">                                &#125;</span></span><br><span class="line"><span class="meta">                        )</span></span><br><span class="line"><span class="meta">                &#125;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_country&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Country</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    …………</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Country</span><span class="params">(Long id, String nameZh, String nameEn)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.nameZh = nameZh;</span><br><span class="line">        <span class="built_in">this</span>.nameEn = nameEn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Country</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="说明-3">说明</h3><ul class="lvl-0"><li class="lvl-2"><p>命名查询的注解只能声明在对应的@Entity类型上</p></li><li class="lvl-2"><p>@NamedNativeQuery名称必须全局唯一，可以通过<code>entityManager.createNamedQuery(String queryName)</code>进行调用</p></li><li class="lvl-2"><p>sql查询部分字段时@Entity一定要有对应的构造方法</p></li><li class="lvl-2"><p>返回类型必须是@Entity对象</p></li><li class="lvl-2"><p>@SqlResultSetMapping可以单独使用，其功能就是将sql的查询结果转换为指定的类型,<code>entityManager.createNativeQuery(String sqlString, String resultSetMapping)</code></p></li></ul><h3 id="使用方法">使用方法</h3><ul class="lvl-0"><li class="lvl-2"><p>通过entityManager的方法进行调用</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> entityManager.createNamedQuery(<span class="string">&quot;SQL_FIND_ALL_COUNTRY&quot;</span>).getResultList();</span><br><span class="line"></span><br><span class="line"><span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> entityManager.createNativeQuery(<span class="string">&quot;select id,name_zh as nameZh,name_en as nameEn from tbl_country&quot;</span>,<span class="string">&quot;SQL_RESULT_COUNTRY_SOME_FIELD&quot;</span>).getResultList();</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>通过在JpaRepository声明指定的@Query方法，并指定其name属性为对应的@NamedNativeQuery的name值</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title class_">BaseJpaRepository</span>&lt;Country, Long&gt; &#123;</span><br><span class="line">    <span class="meta">@Query(name = &quot;HQL_FIND_ALL_COUNTRY&quot;)</span></span><br><span class="line">    List&lt;Country&gt; <span class="title function_">nameHqlFindAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(name = &quot;SQL_FIND_ALL_COUNTRY&quot;)</span></span><br><span class="line">    List&lt;Country&gt; <span class="title function_">nameSqlFindAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(name = &quot;SQL_FIND_ALL_COUNTRY2&quot;)</span></span><br><span class="line">    List&lt;Country&gt; <span class="title function_">nameSqlFindAll2</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(name = &quot;SQL_FIND_SOME_FIELD_COUNTRY&quot;)</span></span><br><span class="line">    List&lt;Country&gt; <span class="title function_">nameSqlFindSomeField</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="关于在-Query注解中使用Mysql的原生sql时的一些小技巧">关于在@Query注解中使用Mysql的原生sql时的一些小技巧</h2><ul class="lvl-0"><li class="lvl-2"><p>动态sql通过mysql的if语句实现</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query(value = &quot;SELECT * FROM tbl_country WHERE if(?1!=&#x27;&#x27;, name_zh = ?1, 1=1)&quot;,nativeQuery = true)</span></span><br><span class="line">Country <span class="title function_">findCountrySqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT * FROM tbl_country WHERE if(:name!=&#x27;&#x27;, name_zh = :name, 1=1)&quot;,nativeQuery = true)</span></span><br><span class="line">Country <span class="title function_">findCountrySqlByName</span><span class="params">(<span class="meta">@Param(&quot;name&quot;)</span> String name)</span>;</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>拼接like使用mysql的CONCAT语句</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query(value = &quot;SELECT * FROM tbl_country WHERE name like CONCAT(&#x27;%&#x27;,?1,&#x27;%&#x27;))</span><span class="string">&quot;,nativeQuery = true)</span></span><br><span class="line"><span class="string">Country findCountrySqlByName(String name);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Query(value = &quot;</span>SELECT * FROM tbl_country WHERE name like <span class="title function_">CONCAT</span><span class="params">(<span class="string">&#x27;%&#x27;</span>,:name,<span class="string">&#x27;%&#x27;</span>)</span><span class="string">&quot;,nativeQuery = true)</span></span><br><span class="line"><span class="string">Country findCountrySqlByName(@Param(&quot;</span>name<span class="string">&quot;) String name);</span></span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>日期比较时可以直接使用<code>&gt;</code>和<code>&lt;</code>等比较符号，参数为Date、LocalDate和LocalDateTime</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query(value = &quot;SELECT count(*) from tbl_country r where r.update_time &gt; :lastTime&quot;, nativeQuery = true)</span></span><br><span class="line">Long <span class="title function_">countCountryByDate</span><span class="params">(<span class="meta">@Param(&quot;lastTime&quot;)</span> LocalDateTime lastTime)</span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;聊聊Spring Boot的@Query注解&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;参考：&lt;a href=&quot;/2021/09/06/spring-boot-JpaRepository/&quot; title=&quot;Spring Boot自定义JpaRepository基类&quot;&gt;Spring Boot自定义JpaRepository基类&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.hanqunfeng.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot自定义JpaRepository基类</title>
    <link href="https://blog.hanqunfeng.com/2021/09/06/spring-boot-JpaRepository/"/>
    <id>https://blog.hanqunfeng.com/2021/09/06/spring-boot-JpaRepository/</id>
    <published>2021-09-06T12:33:15.000Z</published>
    <updated>2021-09-08T08:42:28.315Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">SpringBoot基于JPA的数据操作非常方便，我们只需继承JpaRepository就可以拥有强大的数据操控能力，但是偶尔我们需要进行复杂的操作，比如批量插入与更新，或者是复杂sql等等，此时就需要我们对JpaRepository进行一些扩展。</li><li class="lvl-2">@Query注解也可以直接执行sql，但是其有一些局限，比如只有<code>select * </code>时才能直接封装为对象，只查询部分属性时就只能封装为Object[]或Map。如果希望@Query查询部分属性时也可以直接转换为对象，可以查看下一篇内容 <a href="/2021/09/08/springboot-query/" title="Spring Boot的@Query注解">Spring Boot的@Query注解</a></li></ul><span id="more"></span><h2 id="自定义JpaRepository接口">自定义JpaRepository接口</h2><ul class="lvl-0"><li class="lvl-2"><p>包含一些常用操作，可以按需扩展</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jpa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.repository.NoRepositoryBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NoRepositoryBean</span> <span class="comment">//接口不参与jpa的代理</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BaseJpaRepository</span>&lt;T, ID <span class="keyword">extends</span> <span class="title class_">Serializable</span>&gt; <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;T, ID&gt;, JpaSpecificationExecutor&lt;T&gt;, Serializable &#123;</span><br><span class="line"></span><br><span class="line">    EntityManager <span class="title function_">getEntityManager</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; List&lt;E&gt; <span class="title function_">findByHql</span><span class="params">(String hql)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql)</span>;</span><br><span class="line">    List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Object[] params)</span>;</span><br><span class="line">    List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql)</span>;</span><br><span class="line">    Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Object[] params)</span>;</span><br><span class="line">    Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * basic == true 表示基本数据类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic)</span>;</span><br><span class="line">    &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span>;</span><br><span class="line">    &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * basic == true 表示基本数据类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic)</span>;</span><br><span class="line">    &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span>;</span><br><span class="line">    &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    T <span class="title function_">findByIdNew</span><span class="params">(ID id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量插入</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;S <span class="keyword">extends</span> <span class="title class_">T</span>&gt; Iterable&lt;S&gt; <span class="title function_">batchSave</span><span class="params">(Iterable&lt;S&gt; iterable)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量更新</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;S <span class="keyword">extends</span> <span class="title class_">T</span>&gt; Iterable&lt;S&gt; <span class="title function_">batchUpdate</span><span class="params">(Iterable&lt;S&gt; iterable)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自定义JpaRepository接口的实现类">自定义JpaRepository接口的实现类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jpa;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.context.ApplicationContextProvider;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.query.internal.NativeQueryImpl;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.transform.Transformers;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.support.JpaEntityInformation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.support.SimpleJpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Query;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseJpaRepositoryImpl</span>&lt;T, ID <span class="keyword">extends</span> <span class="title class_">Serializable</span>&gt; <span class="keyword">extends</span> <span class="title class_">SimpleJpaRepository</span>&lt;T, ID&gt; <span class="keyword">implements</span> <span class="title class_">BaseJpaRepository</span>&lt;T, ID&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//批量更新时的阀值，每500条数据commit一次</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">BATCH_SIZE</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过构造方法初始化EntityManager</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> EntityManager entityManager;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseJpaRepositoryImpl</span><span class="params">(JpaEntityInformation&lt;T, ID&gt; entityInformation, EntityManager entityManager)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(entityInformation, entityManager);</span><br><span class="line">        <span class="built_in">this</span>.entityManager = entityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> EntityManager <span class="title function_">getEntityManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> entityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">findByHql</span><span class="params">(String hql)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (List&lt;E&gt;) entityManager.createQuery(hql)</span><br><span class="line">                .getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findBySql(sql, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Object[] params)</span> &#123;</span><br><span class="line">        <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                nativeQuery.setParameter(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nativeQuery.setParameter(key, params.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findBySql(sql, clazz, basic, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapListToObjectList(findBySql(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapListToObjectList(findBySql(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, pageable, clazz, basic, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, countSql, pageable, clazz, basic, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, <span class="literal">null</span>, pageable, clazz, basic, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!sql.toLowerCase().contains(<span class="string">&quot;order by&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(sql);</span><br><span class="line">            stringBuilder.append(<span class="string">&quot; order by &quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Sort</span> <span class="variable">sort</span> <span class="operator">=</span> pageable.getSort();</span><br><span class="line">            <span class="keyword">final</span> List&lt;Sort.Order&gt; orders = sort.toList();</span><br><span class="line">            <span class="keyword">for</span> (Sort.Order order : orders) &#123;</span><br><span class="line">                stringBuilder.append(order.getProperty())</span><br><span class="line">                        .append(<span class="string">&quot; &quot;</span>)</span><br><span class="line">                        .append(order.getDirection().name())</span><br><span class="line">                        .append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sql = stringBuilder.toString();</span><br><span class="line">            sql = sql.substring(<span class="number">0</span>, sql.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        nativeQuery.setFirstResult(pageable.getPageNumber() * pageable.getPageSize());</span><br><span class="line">        nativeQuery.setMaxResults(pageable.getPageSize());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                nativeQuery.setParameter(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Map&gt; resultList = nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).getResultList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List&lt;E&gt; objectList = getJpaUtil().mapListToObjectList(resultList, clazz, basic);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(countSql)) &#123;</span><br><span class="line">            countSql = <span class="string">&quot;select count(*) from ( &quot;</span> + sql + <span class="string">&quot; ) a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">BigInteger</span> <span class="variable">count</span> <span class="operator">=</span> findBySqlFirst(countSql, BigInteger.class, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        Page&lt;E&gt; page = <span class="keyword">new</span> <span class="title class_">PageImpl</span>&lt;&gt;(objectList, pageable, count.longValue());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, <span class="literal">null</span>, pageable, clazz, basic, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!sql.toLowerCase().contains(<span class="string">&quot;order by&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(sql);</span><br><span class="line">            stringBuilder.append(<span class="string">&quot; order by &quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Sort</span> <span class="variable">sort</span> <span class="operator">=</span> pageable.getSort();</span><br><span class="line">            <span class="keyword">final</span> List&lt;Sort.Order&gt; orders = sort.toList();</span><br><span class="line">            <span class="keyword">for</span> (Sort.Order order : orders) &#123;</span><br><span class="line">                stringBuilder.append(order.getProperty())</span><br><span class="line">                        .append(<span class="string">&quot; &quot;</span>)</span><br><span class="line">                        .append(order.getDirection().name())</span><br><span class="line">                        .append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sql = stringBuilder.toString();</span><br><span class="line">            sql = sql.substring(<span class="number">0</span>, sql.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        nativeQuery.setFirstResult(pageable.getPageNumber() * pageable.getPageSize());</span><br><span class="line">        nativeQuery.setMaxResults(pageable.getPageSize());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nativeQuery.setParameter(key, params.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Map&gt; resultList = nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).getResultList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List&lt;E&gt; objectList = getJpaUtil().mapListToObjectList(resultList, clazz, basic);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(countSql)) &#123;</span><br><span class="line">            countSql = <span class="string">&quot;select count(*) from ( &quot;</span> + sql + <span class="string">&quot; ) a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">BigInteger</span> <span class="variable">count</span> <span class="operator">=</span> findBySqlFirst(countSql, BigInteger.class, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        Page&lt;E&gt; page = <span class="keyword">new</span> <span class="title class_">PageImpl</span>&lt;&gt;(objectList, pageable, count.longValue());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findBySqlFirst(sql, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Object[] params)</span> &#123;</span><br><span class="line">        <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                nativeQuery.setParameter(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Optional</span> <span class="variable">first</span> <span class="operator">=</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .stream().findFirst();</span><br><span class="line">        <span class="keyword">if</span> (first.isPresent()) &#123;</span><br><span class="line">            <span class="keyword">return</span> (Map) first.get();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nativeQuery.setParameter(key, params.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Optional</span> <span class="variable">first</span> <span class="operator">=</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .stream().findFirst();</span><br><span class="line">        <span class="keyword">if</span> (first.isPresent()) &#123;</span><br><span class="line">            <span class="keyword">return</span> (Map) first.get();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findBySqlFirst(sql, clazz, basic, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapToObject(findBySqlFirst(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapToObject(findBySqlFirst(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">findByIdNew</span><span class="params">(ID id)</span> &#123;</span><br><span class="line">        <span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        Optional&lt;T&gt; optional = <span class="built_in">this</span>.findById(id);</span><br><span class="line">        <span class="keyword">if</span> (optional.isPresent()) &#123;</span><br><span class="line">            t = optional.get();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> &lt;S <span class="keyword">extends</span> <span class="title class_">T</span>&gt; Iterable&lt;S&gt; <span class="title function_">batchSave</span><span class="params">(Iterable&lt;S&gt; iterable)</span> &#123;</span><br><span class="line">        Iterator&lt;S&gt; iterator = iterable.iterator();</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            entityManager.persist(iterator.next());</span><br><span class="line">            index++;</span><br><span class="line">            <span class="keyword">if</span> (index % BATCH_SIZE == <span class="number">0</span>) &#123;</span><br><span class="line">                entityManager.flush();</span><br><span class="line">                entityManager.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index % BATCH_SIZE != <span class="number">0</span>) &#123;</span><br><span class="line">            entityManager.flush();</span><br><span class="line">            entityManager.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> iterable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> &lt;S <span class="keyword">extends</span> <span class="title class_">T</span>&gt; Iterable&lt;S&gt; <span class="title function_">batchUpdate</span><span class="params">(Iterable&lt;S&gt; iterable)</span> &#123;</span><br><span class="line">        Iterator&lt;S&gt; iterator = iterable.iterator();</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            entityManager.merge(iterator.next());</span><br><span class="line">            index++;</span><br><span class="line">            <span class="keyword">if</span> (index % BATCH_SIZE == <span class="number">0</span>) &#123;</span><br><span class="line">                entityManager.flush();</span><br><span class="line">                entityManager.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index % BATCH_SIZE != <span class="number">0</span>) &#123;</span><br><span class="line">            entityManager.flush();</span><br><span class="line">            entityManager.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> iterable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JpaUtil <span class="title function_">getJpaUtil</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">JpaUtil</span> <span class="variable">objectUtil</span> <span class="operator">=</span> (JpaUtil) ApplicationContextProvider.getBean(<span class="string">&quot;jpaUtil&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> objectUtil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="工具类JpaUtil">工具类JpaUtil</h2><ul class="lvl-0"><li class="lvl-2"><p>其功能就是将Map对象通过json转换成指定对象</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jpa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component(&quot;jpaUtil&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JpaUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询结果为List&lt;Map&gt;时，可以通过该方法转换为对象List，注意Map中key要与对象属性匹配，或者对象属性标注了<span class="doctag">@JsonProperty</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">mapListToObjectList</span><span class="params">(List&lt;Map&gt; mapList, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line"></span><br><span class="line">        List&lt;E&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Map map : mapList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (basic) &#123;</span><br><span class="line">                list.add((E) map.values().stream().findFirst().get());</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">valueAsString</span> <span class="operator">=</span> objectMapper.writeValueAsString(map);</span><br><span class="line">                    <span class="type">E</span> <span class="variable">newInstance</span> <span class="operator">=</span> (E) objectMapper.readValue(valueAsString, clazz);</span><br><span class="line">                    list.add(newInstance);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询结果为Map时，可以通过该方法转换为对象，注意Map中key要与对象属性匹配，或者对象属性标注了<span class="doctag">@JsonProperty</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; E <span class="title function_">mapToObject</span><span class="params">(Map map, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(map == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">E</span> <span class="variable">newInstance</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//基本类型，说明返回值只有一列</span></span><br><span class="line">        <span class="keyword">if</span> (basic) &#123;</span><br><span class="line">            newInstance = (E) map.values().stream().findFirst().get();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">String</span> <span class="variable">valueAsString</span> <span class="operator">=</span> objectMapper.writeValueAsString(map);</span><br><span class="line">                newInstance = (E) objectMapper.readValue(valueAsString, clazz);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ApplicationContextProvider">ApplicationContextProvider</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.common.support;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.i18n.LocaleContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApplicationContextProvider</span></span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上下文对象实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取applicationContext</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ApplicationContext <span class="title function_">getApplicationContext</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        ApplicationContextProvider.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过name获取 Bean.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getBean</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过class获取Bean.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">getBean</span><span class="params">(Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过name,以及Clazz返回指定的Bean</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">getBean</span><span class="params">(String name, Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(name, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述 : &lt;获得多语言的资源内容&gt;. &lt;br&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;使用方法说明&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getMessage</span><span class="params">(String code, Object[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getMessage(code, args, LocaleContextHolder.getLocale());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述 : &lt;获得多语言的资源内容&gt;. &lt;br&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;使用方法说明&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> defaultMessage</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getMessage</span><span class="params">(String code, Object[] args,</span></span><br><span class="line"><span class="params">                                    String defaultMessage)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getMessage(code, args, defaultMessage,</span><br><span class="line">                LocaleContextHolder.getLocale());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置类上增加-EnableJpaRepositories-repositoryBaseClass-BaseJpaRepositoryImpl-class">配置类上增加 @EnableJpaRepositories(repositoryBaseClass = BaseJpaRepositoryImpl.class)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories(repositoryBaseClass = BaseJpaRepositoryImpl.class, basePackages = &quot;com.example.demo&quot;)</span></span><br><span class="line"><span class="meta">@EntityScan(basePackages = &quot;com.example.demo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JpaConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="业务Jpa对象继承BaseJpaRepository">业务Jpa对象继承BaseJpaRepository</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title class_">BaseJpaRepository</span>&lt;Country, Long&gt; &#123;</span><br><span class="line">    <span class="comment">//这种SELECT * 的形式也可以转换成对象，但是如果只查询某几个属性时，就会转换失败</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT * FROM tbl_country&quot;, countQuery = &quot;SELECT count(*) FROM tbl_country&quot;, nativeQuery = true)</span></span><br><span class="line">    Page&lt;Country&gt; <span class="title function_">findAll</span><span class="params">(Pageable pageable)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//失败</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id,name_zh FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">    Country <span class="title function_">findByName</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="示例">示例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查询总数，注意count求和返回的对象是BigInteger类型</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BigInteger</span> <span class="variable">size</span> <span class="operator">=</span> countryJpaRepository.findBySqlFirst(<span class="string">&quot;SELECT count(*) as count FROM tbl_country&quot;</span>, BigInteger.class, <span class="literal">true</span>);</span><br><span class="line">        map.put(<span class="string">&quot;size&quot;</span>, size);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//分页查询</span></span><br><span class="line">        <span class="type">Pageable</span> <span class="variable">pageable</span> <span class="operator">=</span> PageRequest.of(<span class="number">1</span>, <span class="number">20</span>, Sort.by(Sort.Direction.DESC, <span class="string">&quot;id&quot;</span>).and(Sort.by(Sort.Direction.ASC, <span class="string">&quot;name_zh&quot;</span>)));</span><br><span class="line">        <span class="keyword">final</span> Page&lt;Country&gt; pages = countryJpaRepository.findPageBySql(<span class="string">&quot;SELECT id,name_zh as nameZh ,name_en as nameEn FROM tbl_country&quot;</span>, pageable, Country.class, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">&quot;pages&quot;</span>, pages);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//批量新增</span></span><br><span class="line">        List&lt;DemoEntity&gt; entityList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="type">DemoEntity</span> <span class="variable">demoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DemoEntity</span>();</span><br><span class="line">            demoEntity.setName(<span class="string">&quot;测试&quot;</span> + i);</span><br><span class="line">            demoEntity.initInsert();</span><br><span class="line">            entityList.add(demoEntity);</span><br><span class="line">        &#125;</span><br><span class="line">        demoEntityJpaRepository.batchSave(entityList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Page&lt;DemoEntity&gt; demoEntities = demoEntityJpaRepository.findAll(PageRequest.of(<span class="number">1</span>, <span class="number">100</span>, Sort.by(Sort.Direction.DESC, <span class="string">&quot;name&quot;</span>)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//批量删除</span></span><br><span class="line">        demoEntityJpaRepository.deleteAllInBatch(demoEntities.getContent());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;SpringBoot基于JPA的数据操作非常方便，我们只需继承JpaRepository就可以拥有强大的数据操控能力，但是偶尔我们需要进行复杂的操作，比如批量插入与更新，或者是复杂sql等等，此时就需要我们对JpaRepository进行一些扩展。&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;@Query注解也可以直接执行sql，但是其有一些局限，比如只有&lt;code&gt;select * &lt;/code&gt;时才能直接封装为对象，只查询部分属性时就只能封装为Object[]或Map。如果希望@Query查询部分属性时也可以直接转换为对象，可以查看下一篇内容 &lt;a href=&quot;/2021/09/08/springboot-query/&quot; title=&quot;Spring Boot的@Query注解&quot;&gt;Spring Boot的@Query注解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.hanqunfeng.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>RocketMQ Docker安装方式</title>
    <link href="https://blog.hanqunfeng.com/2021/06/24/rocketmq-docker/"/>
    <id>https://blog.hanqunfeng.com/2021/06/24/rocketmq-docker/</id>
    <published>2021-06-24T10:24:04.000Z</published>
    <updated>2022-09-14T09:08:28.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>看完本文你将掌握如下知识点：</p><ul class="lvl-0"><li class="lvl-2">docker[20.10.7]安装rocketmq[4.8.0]的方法</li></ul><span id="more"></span><h3 id="server-有日志目录映射">server 有日志目录映射</h3><ul class="lvl-0"><li class="lvl-2"><p>设置目录权限</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 777 $(<span class="built_in">pwd</span>)/logs</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>启动</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -v $(<span class="built_in">pwd</span>)/logs:/home/rocketmq/logs \</span><br><span class="line">-v $(<span class="built_in">pwd</span>)/logs:/home/rocketmq/logs \</span><br><span class="line">--name rmqnamesrv \</span><br><span class="line">-e <span class="string">&quot;JAVA_OPT_EXT=-Xms512M -Xmx512M -Xmn128m&quot;</span> \</span><br><span class="line">-p 9876:9876 \</span><br><span class="line">foxiswho/rocketmq:4.8.0 \</span><br><span class="line">sh mqnamesrv</span><br></pre></td></tr></table></figure><h3 id="broker-目录映射">broker 目录映射</h3><ul class="lvl-0"><li class="lvl-2"><p>设置目录权限</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 777 $(<span class="built_in">pwd</span>)/logs</span><br><span class="line"><span class="built_in">chmod</span> 777 $(<span class="built_in">pwd</span>)/store</span><br><span class="line"><span class="built_in">chmod</span> 777 $(<span class="built_in">pwd</span>)/conf</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>添加文件：$(pwd)/conf/broker.conf</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">brokerClusterName = DefaultCluster</span><br><span class="line">brokerName = broker-a</span><br><span class="line">brokerId = 0</span><br><span class="line">deleteWhen = 04</span><br><span class="line">fileReservedTime = 48</span><br><span class="line">brokerRole = ASYNC_MASTER</span><br><span class="line">flushDiskType = ASYNC_FLUSH</span><br><span class="line">brokerIP1 = &#123;宿主机 IP&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>启动</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d</span><br><span class="line">-v $(<span class="built_in">pwd</span>)/logs:/home/rocketmq/logs</span><br><span class="line">-v $(<span class="built_in">pwd</span>)/store:/home/rocketmq/store \</span><br><span class="line">-v $(<span class="built_in">pwd</span>)/conf:/home/rocketmq/conf \</span><br><span class="line">--name rmqbroker --<span class="built_in">link</span> rmqnamesrv:rmqnamesrv \</span><br><span class="line">-e <span class="string">&quot;NAMESRV_ADDR=rmqnamesrv:9876&quot;</span> \</span><br><span class="line">-e <span class="string">&quot;JAVA_OPT_EXT=-Xms512M -Xmx512M -Xmn128m&quot;</span> \</span><br><span class="line">-p 10911:10911 -p 10912:10912 -p 10909:10909 \</span><br><span class="line">foxiswho/rocketmq:4.8.0 \</span><br><span class="line">sh mqbroker -c /home/rocketmq/conf/broker.conf</span><br></pre></td></tr></table></figure><h3 id="console">console</h3><ul class="lvl-0"><li class="lvl-2"><p>启动</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run --name rmqconsole --<span class="built_in">link</span> rmqnamesrv:rmqnamesrv \</span><br><span class="line">-e <span class="string">&quot;JAVA_OPTS=-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false&quot;</span> \</span><br><span class="line">-p 8180:8080 -t styletang/rocketmq-console-ng</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>访问地址<br><a href="http://localhost:8180/">http://localhost:8180/</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;p&gt;看完本文你将掌握如下知识点：&lt;/p&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;docker[20.10.7]安装rocketmq[4.8.0]的方法&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Docker" scheme="https://blog.hanqunfeng.com/categories/Docker/"/>
    
    
    <category term="rocketmq" scheme="https://blog.hanqunfeng.com/tags/rocketmq/"/>
    
    <category term="docker" scheme="https://blog.hanqunfeng.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>vim配置</title>
    <link href="https://blog.hanqunfeng.com/2021/01/23/vimrc/"/>
    <id>https://blog.hanqunfeng.com/2021/01/23/vimrc/</id>
    <published>2021-01-23T14:30:05.000Z</published>
    <updated>2021-02-02T08:35:35.074Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">vim常用配置</li><li class="lvl-2">基于<a href="https://github.com/junegunn/vim-plug">vim-plug</a>进行插件管理</li></ul><span id="more"></span><h2 id="vimrc">.vimrc</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; :set all  查看所有可以设置的命令</span></span><br><span class="line"><span class="comment">&quot; :set command?  查看该命令当前状态，比如:set nu?</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; :map      查看所有键盘映射，参考：http://yyq123.github.io/learn-vim/learn-vi-51-KeyMapping.html</span></span><br><span class="line"><span class="comment">&quot; :autocmd  查看所有自动命令，参考：http://yyq123.github.io/learn-vim/learn-vi-49-01-autocmd.html</span></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 开启行号</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">nu</span></span><br><span class="line"><span class="comment">&quot; 语法高亮</span></span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"><span class="comment">&quot; 设置自动缩进的宽度为4个空格</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">ts</span>=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">sw</span>=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 设置vim编码，默认就是utf-8</span></span><br><span class="line"><span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line"><span class="comment">&quot; 设置vim自动识别的文件编码列表，按顺序进行匹配</span></span><br><span class="line"><span class="keyword">set</span> fileencodings=utf-<span class="number">8</span>,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936,utf-<span class="number">16</span>,big5,euc-jp,latin1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 搜索时忽略大小写，默认是精确匹配，noignorecase</span></span><br><span class="line"><span class="comment">&quot; 如果想在搜索时精确匹配，可以加上&#x27;\C&#x27;前缀，比如搜索plug，:/\Cplug</span></span><br><span class="line"><span class="comment">&quot; &#x27;\c&#x27;就是忽略大小写</span></span><br><span class="line"><span class="keyword">set</span> ignorecase</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 翻页</span></span><br><span class="line"><span class="comment">&quot; Ctrl + f         向下翻整页</span></span><br><span class="line"><span class="comment">&quot; Ctrl + b         向上翻整页</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; Ctrl + d         向下翻半页</span></span><br><span class="line"><span class="comment">&quot; Ctrl + u         向上翻半页</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 窗口</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + w          光标在 nerdtree 和 vim 编辑窗口 之间切换</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + (h/j/k/l)  即h左、j下、k上、l右，表示窗口切换的方向</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + n          新建水平窗口并开始编辑新文件，上方</span></span><br><span class="line"><span class="comment">&quot; :vnew                 新建垂直窗口并开始编辑新文件，右侧</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + s          新建水平窗口并显示当前文件，右侧</span></span><br><span class="line"><span class="comment">&quot; Ctrl + w + v          新建垂直窗口并显示当前文件，上方</span></span><br><span class="line"><span class="comment">&quot; :term                 新建终端窗口，上方，关闭使用exit</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; vim -o file1 file2 file3   水平分割窗口</span></span><br><span class="line"><span class="comment">&quot; vim -O file1 file2 file3   垂直分割窗口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; Tab页，标签页，注意：tab不适buffer</span></span><br><span class="line"><span class="comment">&quot; :tabnew               新建tab页，打开一个新的为文件</span></span><br><span class="line"><span class="comment">&quot; :tabedit file         新建tab页，打开指定的文件</span></span><br><span class="line"><span class="comment">&quot; gt/gT                 向后/向前切换tab页，可以循环</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 标记marks</span></span><br><span class="line"><span class="comment">&quot; :marks         查看全部可以跳转到的标记</span></span><br><span class="line"><span class="comment">&quot; 快捷键：m/     这个快捷键只会列出当前文件的标记</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 为当前行添加一个标记: 同一行可以添加多个标记</span></span><br><span class="line"><span class="comment">&quot; m+英文字母</span></span><br><span class="line"><span class="comment">&quot; 小写字母只能在当前文件内部跳转，大写字母可以在其它文件中跳转，如：ma，mA</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 跳转到指定标记:</span></span><br><span class="line"><span class="comment">&quot; &#x27;+英文字母     移动到标记的文本行首，如：&#x27;a，&#x27;A</span></span><br><span class="line"><span class="comment">&quot; `+英文字母     移动到标记的光标位置，如：`a，`A</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 删除标记:</span></span><br><span class="line"><span class="comment">&quot; :delmarks a A  删除一个或多个指定标记，快捷键：dmx :x is a-zA-Z</span></span><br><span class="line"><span class="comment">&quot; :delmarks!     删除所有标记    快捷键：m&lt;Space&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 不生产wrap文件,warp文件是vim意外退出时用于恢复文件时使用的</span></span><br><span class="line"><span class="comment">&quot; set nowrap</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 不生产备份文件</span></span><br><span class="line"><span class="comment">&quot; set nobackup</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 快速跳转到指定行</span></span><br><span class="line"><span class="comment">&quot; 1.查看模式下numgg，比如30gg，跳转到30行</span></span><br><span class="line"><span class="comment">&quot; 2.命令行模式下:num，比如:30，跳转到30行</span></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 撤销：u       :undo</span></span><br><span class="line"><span class="comment">&quot; 恢复：ctrl-r  :redo</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 命令行模式下，通过上下方向键就可以显示历史命令</span></span><br><span class="line"><span class="comment">&quot; 命令行模式下，ctrl-f，会打开历史命令窗口，上下方向键选择</span></span><br><span class="line"><span class="comment">&quot; 普通模式下，q: ，也可以打开历史命令窗口</span></span><br><span class="line"><span class="comment">&quot; 打开历史命令行窗口后，可以像在普通窗口一样键入&#x27;\key&#x27;进行关键字搜索</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; =============================================================</span></span><br><span class="line"><span class="comment">&quot; 大小写转换:</span></span><br><span class="line"><span class="comment">&quot; gUU：将整行转换为大写</span></span><br><span class="line"><span class="comment">&quot; guu：将整行转换为小写</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; v模式下，选择要转换的字符，然后按 ~，则会进行大小写间的转换</span></span><br><span class="line"><span class="comment">&quot; 这里要注意，~ 转换时，原先是大写就转小写，小写就转大写，</span></span><br><span class="line"><span class="comment">&quot; 所以如果单词中是大小写混合时，要全部转为大写或小写可以使用：U(大写)、u(小写)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;==============================================================</span></span><br><span class="line"><span class="comment">&quot; 代码格式化整个文档：</span></span><br><span class="line"><span class="comment">&quot; (1) 按两下小写g，即gg，定位光标到第一行。</span></span><br><span class="line"><span class="comment">&quot; (2) 按住Shift+v，即大写V，进入可视化编辑的行编辑模式。</span></span><br><span class="line"><span class="comment">&quot; (3) Shift+g，即大写G，选中整个代码。</span></span><br><span class="line"><span class="comment">&quot; (4) 按下等号=，格式化所有代码。</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 也可以在normal模式下，连续输入 gg=G ，也可以格式化整个文档</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 代码格式化部分行：</span></span><br><span class="line"><span class="comment">&quot; (1) 光标定位到开始的行；</span></span><br><span class="line"><span class="comment">&quot; (2) 按住Shift+v，即大写V，进入可视化编辑的行编辑模式。</span></span><br><span class="line"><span class="comment">&quot; (3) 按向下方向键选择要参与格式化的行。</span></span><br><span class="line"><span class="comment">&quot; (4) 按下等号=，格式化所选行代码。</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 也可以在normal模式下，连续输入 5gg=8G ，也可以格式化5~8行的文档</span></span><br><span class="line"><span class="comment">&quot;==============================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 当我们并不知道确切的命令名称时，可以只输入开头的几个字母，然后按下Tab键，就将在底部显示可能匹配的命令。</span></span><br><span class="line"><span class="comment">&quot; 继续按Tab键，可以在这些命令列表间移动，左右方向键也可以移动，没有找到命令时可以按esc退出选择窗口</span></span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"><span class="comment">&quot; 第一次按tab键时会先打印所有匹配的命令名称，再次按tab才会在命令中进行</span></span><br><span class="line"><span class="keyword">set</span> wildmode=lis<span class="variable">t:longest</span>,full</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; autocmd 自动执行指令，参考：http://yyq123.github.io/learn-vim/learn-vi-49-01-autocmd.html</span></span><br><span class="line"><span class="comment">&quot; 快速跳转到上次退出时光标所在行: &#x27;0 不好用啊，会打开buffer</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&quot;autocmd&quot;</span>)</span><br><span class="line">  <span class="comment">&quot; autocmd可以简写为au</span></span><br><span class="line">  <span class="keyword">au</span> BufReadPost * <span class="keyword">if</span> <span class="built_in">line</span>(<span class="string">&quot;&#x27;\&quot;&quot;</span>) &gt; <span class="number">1</span> &amp;&amp; <span class="built_in">line</span>(<span class="string">&quot;&#x27;\&quot;&quot;</span>) &lt;= <span class="built_in">line</span>(<span class="string">&quot;$&quot;</span>) | <span class="keyword">exe</span> <span class="string">&quot;normal! g&#x27;\&quot;&quot;</span> | <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 查看用&lt;&gt;括起来的快捷键的含义  :help keycodes</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span>kk :<span class="keyword">help</span> keycodes<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 设置&lt;leader&gt;的字符，默认为: \</span></span><br><span class="line"><span class="string">&quot; let mapleader=&quot;</span>,<span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; 按\w保存文件</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">w</span> :<span class="keyword">w</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; 按\wq保存退出</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">wq</span> :<span class="keyword">wq</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; 按\qq不保存退出</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span>qq :q!<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; \ev，在新tab中打开vimrc配置文件，按\tn在多个tab中切换,按\tc关闭当前tab</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span>ev :<span class="keyword">tabe</span><span class="symbol">&lt;Space&gt;</span>$MYVIMRC<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; 让配置变更保存时就立即生效，:w，这里只针对.vimrc文件保存时生效，其它文件需要重新打开才生效</span></span><br><span class="line"><span class="keyword">autocmd</span> BufWritePost $MYVIMRC <span class="keyword">source</span> $MYVIMRC</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;高亮显示当前行</span></span><br><span class="line"><span class="keyword">set</span> cursorline</span><br><span class="line"><span class="comment">&quot;高亮显示当前列</span></span><br><span class="line"><span class="keyword">set</span> cursorcolumn</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 颜色模式</span></span><br><span class="line"><span class="comment">&quot;https://github.com/tomasr/molokai</span></span><br><span class="line"><span class="keyword">colorscheme</span> molokai</span><br><span class="line"><span class="comment">&quot;-----------------molokai setting---------</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:molokai_original</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:rehash256</span> = <span class="number">1</span></span><br><span class="line"><span class="comment">&quot;-----------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;https://github.com/altercation/vim-colors-solarized</span></span><br><span class="line"><span class="comment">&quot;colorscheme solarized</span></span><br><span class="line"><span class="comment">&quot;--------------solarizded setting---------</span></span><br><span class="line"><span class="comment">&quot; 使用 termnal 背景</span></span><br><span class="line"><span class="comment">&quot;let g:solarized_termtrans  = 1</span></span><br><span class="line"><span class="comment">&quot;let g:solarized_termcolors=256</span></span><br><span class="line"><span class="comment">&quot; 使用 :set list 显示特殊字符时的高亮级别</span></span><br><span class="line"><span class="comment">&quot;let g:solarized_visibility = &#x27;high&#x27;</span></span><br><span class="line"><span class="comment">&quot;-----------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;https://github.com/morhetz/gruvbox</span></span><br><span class="line"><span class="comment">&quot;colorscheme gruvbox</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;https://github.com/rakr/vim-one</span></span><br><span class="line"><span class="comment">&quot;colorscheme one</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;macos 自带</span></span><br><span class="line"><span class="comment">&quot; colorscheme desert</span></span><br><span class="line"><span class="comment">&quot;colorscheme pablo</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> background=dark</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 高亮搜索结果</span></span><br><span class="line"><span class="keyword">set</span> hlsearch</span><br><span class="line"><span class="comment">&quot;取消搜索后高亮 &lt;silent&gt;表示静默执行，就是不打印命令</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span><span class="symbol">&lt;leader&gt;</span>h :<span class="keyword">noh</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 取消自动折行，一行内容超出屏幕时不进行折行显示</span></span><br><span class="line"><span class="keyword">set</span> nowrap</span><br><span class="line"><span class="comment">&quot; set wrap</span></span><br><span class="line"><span class="comment">&quot; 一行内容超出屏幕时，实现更加平滑的逐个字符扩展显示</span></span><br><span class="line"><span class="keyword">set</span> sidescroll=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 解决插入模式下delete/backspce键失效问题</span></span><br><span class="line"><span class="comment">&quot; https://www.cnblogs.com/shengulong/p/10530188.html</span></span><br><span class="line"><span class="keyword">set</span> backspace=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 括号和引号的自动补全</span></span><br><span class="line"><span class="keyword">inoremap</span> ( ()<span class="symbol">&lt;ESC&gt;</span>i</span><br><span class="line"><span class="keyword">inoremap</span> [ []<span class="symbol">&lt;ESC&gt;</span>i</span><br><span class="line"><span class="keyword">inoremap</span> &#123; &#123;&#125;<span class="symbol">&lt;ESC&gt;</span>i</span><br><span class="line"><span class="keyword">inoremap</span> <span class="string">&#x27; &#x27;</span><span class="string">&#x27;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 针对不同的文件类型采用不同的缩进格式</span></span><br><span class="line"><span class="string">filetype indent on</span></span><br><span class="line"><span class="string">&quot; 针对不同的文件类型加载对应的插件</span></span><br><span class="line"><span class="string">filetype plugin on</span></span><br><span class="line"><span class="string">&quot; 启用自动补全</span></span><br><span class="line"><span class="string">&quot;filetype plugin indent on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; set rtp+=/usr/local/opt/fzf</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;---------------------------------vim-plug setting------------------------------</span></span><br><span class="line"><span class="string">&quot; vim-plug插件管理器的声明及配置，具体配置参考： https://github.com/junegunn/vim-plug</span></span><br><span class="line"><span class="string">call plug#begin(&#x27;</span>~/.<span class="keyword">vim</span>/plugged<span class="string">&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; If installed using Homebrew</span></span><br><span class="line"><span class="string">&quot; 文件搜索</span></span><br><span class="line"><span class="string">Plug &#x27;</span>/usr/local/<span class="keyword">opt</span>/fzf<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/junegunn/vim-easy-align</span></span><br><span class="line"><span class="string">&quot; 文本对其</span></span><br><span class="line"><span class="string">Plug &#x27;</span>junegunn/<span class="keyword">vim</span>-easy-align<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/vim-airline/vim-airline</span></span><br><span class="line"><span class="string">&quot; 状态栏设置</span></span><br><span class="line"><span class="string">Plug &#x27;</span><span class="keyword">vim</span>-airline/<span class="keyword">vim</span>-airline<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; Plug &#x27;</span><span class="keyword">vim</span>-airline/<span class="keyword">vim</span>-airline-themes<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/ycm-core/YouCompleteMe#installation</span></span><br><span class="line"><span class="string">&quot; 代码提示</span></span><br><span class="line"><span class="string">Plug &#x27;</span>Valloric/YouCompleteMe<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/preservim/nerdtree</span></span><br><span class="line"><span class="string">&quot;目录树</span></span><br><span class="line"><span class="string">Plug &#x27;</span>preservim/nerdtree<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/preservim/tagbar</span></span><br><span class="line"><span class="string">&quot;将当前文件的内容分类展示，比如java代码中的package\method\field等等</span></span><br><span class="line"><span class="string">Plug &#x27;</span>preservim/tagbar<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/SirVer/ultisnips</span></span><br><span class="line"><span class="string">&quot;代码片段补全</span></span><br><span class="line"><span class="string">Plug &#x27;</span>SirVer/ultisnips<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 网友贡献的补全片段</span></span><br><span class="line"><span class="string">Plug &#x27;</span>honza/<span class="keyword">vim</span>-snippets<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/preservim/nerdcommenter</span></span><br><span class="line"><span class="string">&quot;注释插件</span></span><br><span class="line"><span class="string">Plug &#x27;</span>preservim/nerdcommenter<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;https://github.com/tpope/vim-surround</span></span><br><span class="line"><span class="string">&quot;引号、括号等的替换和删除</span></span><br><span class="line"><span class="string">Plug &#x27;</span>tpope/<span class="keyword">vim</span>-surround<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/mhinz/vim-signify</span></span><br><span class="line"><span class="string">&quot; svn\git插件，修改文件时状态栏会有记录</span></span><br><span class="line"><span class="string">if has(&#x27;</span>nvim<span class="string">&#x27;) || has(&#x27;</span>patch-<span class="number">8.0</span>.<span class="number">902</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">  Plug &#x27;</span>mhinz/<span class="keyword">vim</span>-signify<span class="string">&#x27;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  Plug &#x27;</span>mhinz/<span class="keyword">vim</span>-signify<span class="string">&#x27;, &#123; &#x27;</span>branch<span class="string">&#x27;: &#x27;</span>legacy<span class="string">&#x27; &#125;</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; https://github.com/kshenoy/vim-signature</span></span><br><span class="line"><span class="string">&quot; 窗口左侧显示标记</span></span><br><span class="line"><span class="string">Plug &#x27;</span>kshenoy/<span class="keyword">vim</span>-signature<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">call plug#end()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;---------------------------------vim-plug setting------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;###############以下是单个插件的特殊配置项#########################&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------vim-easy-align setting--------------------</span></span><br><span class="line"><span class="string">&quot; Start interactive EasyAlign in visual mode (e.g. vipga)</span></span><br><span class="line"><span class="string">&quot; vipga</span></span><br><span class="line"><span class="string">xmap ga &lt;Plug&gt;(EasyAlign)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; Start interactive EasyAlign for a motion/text object (e.g. gaip)</span></span><br><span class="line"><span class="string">&quot; gaip</span></span><br><span class="line"><span class="string">nmap ga &lt;Plug&gt;(EasyAlign)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------vim-easy-align setting--------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------vim-airline setting-----------------------</span></span><br><span class="line"><span class="string">if !exists(&#x27;</span><span class="variable">g:airline_symbols</span><span class="string">&#x27;)</span></span><br><span class="line"><span class="string">  let g:airline_symbols = &#123;&#125;</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; default theme is dark</span></span><br><span class="line"><span class="string">&quot; let g:airline_theme = &#x27;</span>dark<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; let g:airline_theme = &#x27;</span>luna<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let g:airline_left_sep = &#x27;</span>▶<span class="string">&#x27;</span></span><br><span class="line"><span class="string">let g:airline_left_alt_sep = &#x27;</span>❯<span class="string">&#x27;</span></span><br><span class="line"><span class="string">let g:airline_right_sep = &#x27;</span>◀<span class="string">&#x27;</span></span><br><span class="line"><span class="string">let g:airline_right_alt_sep = &#x27;</span>❮<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; let g:airline_symbols.linenr = &#x27;</span>¶<span class="string">&#x27;</span></span><br><span class="line"><span class="string">let g:airline_symbols.branch = &#x27;</span>⎇<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 缓冲区：http://yyq123.blogspot.com/2009/07/vim-buffer.html</span></span><br><span class="line"><span class="string">&quot; 是否打开tabline,打开后，tabline和tmuxline都可以得到增强</span></span><br><span class="line"><span class="string">&quot; let g:airline#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; tabline中当前buffer两端的分隔字符</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#left_sep = &#x27;</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; tabline中未激活buffer两端的分隔字符</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#left_alt_sep = &#x27;</span>|<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; tabline中buffer显示编号</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#buffer_nr_show = 1</span></span><br><span class="line"><span class="string">&quot; 映射切换buffer的键位</span></span><br><span class="line"><span class="string">nnoremap [b :bp&lt;CR&gt;</span></span><br><span class="line"><span class="string">nnoremap ]b :bn&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; 映射&lt;leader&gt;num到num buffer</span></span><br><span class="line"><span class="string">map &lt;leader&gt;1 :b 1&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;2 :b 2&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;3 :b 3&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;4 :b 4&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;5 :b 5&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;6 :b 6&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;7 :b 7&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;8 :b 8&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;9 :b 9&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; let g:airline#extensions#hunks#enabled=0</span></span><br><span class="line"><span class="string">&quot; let g:airline#extensions#branch#enabled=1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------vim-airline setting-----------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------YouCompleteMe setting---------------------</span></span><br><span class="line"><span class="string">&quot;---------------------简称：YCM--------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;打开vim时不再询问是否加载ycm_extra_conf.py配置</span></span><br><span class="line"><span class="string">let g:ycm_confirm_extra_conf=0</span></span><br><span class="line"><span class="string">&quot;让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)</span></span><br><span class="line"><span class="string">set completeopt=longest,menu</span></span><br><span class="line"><span class="string">&quot;python解释器路径</span></span><br><span class="line"><span class="string">&quot;let g:ycm_path_to_python_interpreter=&#x27;</span>/usr/bin/<span class="keyword">python</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot;是否开启语义补全</span></span><br><span class="line"><span class="string">let g:ycm_seed_identifiers_with_syntax=1</span></span><br><span class="line"><span class="string">&quot;是否在注释中也开启补全</span></span><br><span class="line"><span class="string">let g:ycm_complete_in_comments=1</span></span><br><span class="line"><span class="string">let g:ycm_collect_identifiers_from_comments_and_strings = 0</span></span><br><span class="line"><span class="string">&quot;开始补全的字符数</span></span><br><span class="line"><span class="string">let g:ycm_min_num_of_chars_for_completion=2</span></span><br><span class="line"><span class="string">&quot;补全后自动关闭预览窗口</span></span><br><span class="line"><span class="string">let g:ycm_autoclose_preview_window_after_completion=1</span></span><br><span class="line"><span class="string">let g:ycm_autoclose_preview_window_after_insertion=1</span></span><br><span class="line"><span class="string">&quot; 禁止缓存匹配项,每次都重新生成匹配项</span></span><br><span class="line"><span class="string">let g:ycm_cache_omnifunc=0</span></span><br><span class="line"><span class="string">&quot;字符串中也开启补全</span></span><br><span class="line"><span class="string">let g:ycm_complete_in_strings = 1</span></span><br><span class="line"><span class="string">&quot;离开插入模式后自动关闭预览窗口</span></span><br><span class="line"><span class="string">autocmd InsertLeave * if pumvisible() == 0|pclose|endif</span></span><br><span class="line"><span class="string">&quot; 空格键用于关闭补全窗口</span></span><br><span class="line"><span class="string">let g:ycm_key_list_stop_completion = [&#x27;</span><span class="symbol">&lt;space&gt;</span><span class="string">&#x27;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;默认关闭代码自动提示，目前只安装了c和python语言的代码提示，所以需要代码提示时，可以在NORMAL模式下输入&#x27;</span>\+<span class="keyword">y</span><span class="string">&#x27;开启代码提示</span></span><br><span class="line"><span class="string">let g:ycm_auto_trigger=0</span></span><br><span class="line"><span class="string">&quot;turn on YCM：</span></span><br><span class="line"><span class="string">&quot;\+y一起按，看到命令输出后回车即可，这里&lt;leader&gt;代表命令前缀，默认为\</span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;y :let g:ycm_auto_trigger=1&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;turn off YCM：\+y+y一起按</span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;yy :let g:ycm_auto_trigger=0&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------------------YouCompleteMe setting---------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;-------------NERDTree setting-----------------------</span></span><br><span class="line"><span class="string">&quot;######常用快捷键说明########</span></span><br><span class="line"><span class="string">&quot;Ctrl + t 打开/关闭nerdtree</span></span><br><span class="line"><span class="string">&quot;Ctrl + n 打开、回到最开始打开的文件目录</span></span><br><span class="line"><span class="string">&quot;Shift + f 打开上级目录</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;Ctrl + w + w光标在 nerdtree 和 vim 编辑窗口 之间切换</span></span><br><span class="line"><span class="string">&quot;Ctrl + w + (h/j/k/l)  即h左、j下、k上、l右，表示窗口切换的方向</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;q关闭 nerdtree</span></span><br><span class="line"><span class="string">&quot;o打开选中的文件； 折叠/展开选中的目录</span></span><br><span class="line"><span class="string">&quot;i打开选中的文件，与已打开文件纵向排布窗口，并跳转至该窗口</span></span><br><span class="line"><span class="string">&quot;gi打开选中的文件，与已打开文件纵向排布窗口，但不跳转至该窗口</span></span><br><span class="line"><span class="string">&quot;s打开选中的文件，与已打开文件横向排布窗口，并跳转至该窗口</span></span><br><span class="line"><span class="string">&quot;gs打开选中的文件，与已打开文件横向排布窗口，但不跳转至该窗口</span></span><br><span class="line"><span class="string">&quot;t在新 Tab 中打开选中文件/书签，并跳到新 Tab</span></span><br><span class="line"><span class="string">&quot;T在新 Tab 中打开选中文件/书签，但不跳到新 Tab</span></span><br><span class="line"><span class="string">&quot;x折叠选中结点的父目录</span></span><br><span class="line"><span class="string">&quot;X递归折叠选中结点下的所有目录</span></span><br><span class="line"><span class="string">&quot;k / j光标在 Neadtree 上下移动</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;tc:tabc   关闭当前的 tab</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;to:tabo   关闭所有其他 tab</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;ts:tabs   查看所有打开的 tab</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;tp:tabp   前一个 tab</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;tn:tabn   后一个 tab</span></span><br><span class="line"><span class="string">&quot;?显示菜单</span></span><br><span class="line"><span class="string">&quot;######常用快捷键说明########</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 高亮当前行</span></span><br><span class="line"><span class="string">let NERDTreeHighlightCursorline = 1</span></span><br><span class="line"><span class="string">&quot; 显示行号</span></span><br><span class="line"><span class="string">let NERDTreeShowLineNumbers     = 1</span></span><br><span class="line"><span class="string">&quot; 忽略列表中的文件</span></span><br><span class="line"><span class="string">let NERDTreeIgnore = [ &#x27;</span>\.pyc$<span class="string">&#x27;, &#x27;</span>\.pyo$<span class="string">&#x27;, &#x27;</span>\.obj$<span class="string">&#x27;, &#x27;</span>\.<span class="keyword">o</span>$<span class="string">&#x27;, &#x27;</span>\.egg$<span class="string">&#x27;, &#x27;</span>^\.git$<span class="string">&#x27;, &#x27;</span>^\.repo$<span class="string">&#x27;, &#x27;</span>^\.svn$<span class="string">&#x27;, &#x27;</span>^\.hg$<span class="string">&#x27; ]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;n :NERDTreeFocus&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;打开、回到最开始打开的文件目录</span></span><br><span class="line"><span class="string">nnoremap &lt;C-n&gt; :NERDTree&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;打开、关闭目录</span></span><br><span class="line"><span class="string">nnoremap &lt;C-t&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;打开上级目录</span></span><br><span class="line"><span class="string">nnoremap &lt;S-f&gt; :NERDTreeFind&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; \tc 关闭当前的 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;tc :tabc&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; \to 关闭所有其他的 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;to :tabo&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; \ts 查看所有打开的 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;ts :tabs&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; \tp 前一个 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;tp :tabp&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot; \tn 后一个 tab</span></span><br><span class="line"><span class="string">map &lt;leader&gt;tn :tabn&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; Exit Vim if NERDTree is the only window left.</span></span><br><span class="line"><span class="string">&quot; 关闭 NERDTree，当没有文件打开的时候</span></span><br><span class="line"><span class="string">autocmd BufEnter * if tabpagenr(&#x27;</span>$<span class="string">&#x27;) == 1 &amp;&amp; winnr(&#x27;</span>$<span class="string">&#x27;) == 1 &amp;&amp; exists(&#x27;</span><span class="variable">b:NERDTree</span><span class="string">&#x27;) &amp;&amp; b:NERDTree.isTabTree() |</span></span><br><span class="line"><span class="string">    \ quit | endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 启动 vim 时打开 NERDTree</span></span><br><span class="line"><span class="string">&quot;autocmd vimenter * NERDTree</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 当打开 VIM，没有指定文件时和打开一个目录时，打开 NERDTree</span></span><br><span class="line"><span class="string">autocmd StdinReadPre * let s:std_in=1</span></span><br><span class="line"><span class="string">autocmd VimEnter * if argc() == 1 &amp;&amp; isdirectory(argv()[0]) &amp;&amp; !exists(&#x27;</span><span class="variable">s:std_in</span><span class="string">&#x27;) |</span></span><br><span class="line"><span class="string">    \ execute &#x27;</span>NERDTree<span class="string">&#x27; argv()[0] | wincmd p | enew | execute &#x27;</span><span class="keyword">cd</span> <span class="string">&#x27;.argv()[0] | endif</span></span><br><span class="line"><span class="string">autocmd VimEnter * if argc() == 0 &amp;&amp; !exists(&#x27;</span><span class="variable">s:std_in</span><span class="string">&#x27;) | NERDTree | endif</span></span><br><span class="line"><span class="string">&quot;-------------NERDTree setting-----------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;-----------tagbar setting---------------------------</span></span><br><span class="line"><span class="string">&quot;Ctrl - w - w光标在 Tagbar 和 vim 编辑窗口 之间切换</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;tb打开 tagbar</span></span><br><span class="line"><span class="string">&quot;q关闭 tagbar</span></span><br><span class="line"><span class="string">&quot;o（+/-）折叠 / 展开标签集合</span></span><br><span class="line"><span class="string">&quot;p跳转到选中的标签，但光标仍停留在 Tagbar</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; tagbar 依赖 ctags 插件 brew install ctags</span></span><br><span class="line"><span class="string">let g:tagbar_ctags_bin = &#x27;</span>ctags<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 设置 tagbar 的宽度为 30 列，默认 40 列</span></span><br><span class="line"><span class="string">let g:tagbar_width     = 30</span></span><br><span class="line"><span class="string">&quot; 打开 tagbar 时光标在 tagbar 页面内，默认在 vim 打开的文件内</span></span><br><span class="line"><span class="string">let g:tagbar_autofocus = 1</span></span><br><span class="line"><span class="string">&quot; 让 tagbar 在页面左侧显示，默认右边</span></span><br><span class="line"><span class="string">let g:tagbar_left      = 1</span></span><br><span class="line"><span class="string">&quot; 标签不排序，默认排序</span></span><br><span class="line"><span class="string">&quot;let g:tagbar_sort      = 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; &lt;leader&gt;tb 打开 tagbar 窗口，在左侧栏显示</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;tb :TagbarToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;-----------tagbar setting---------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------ultisnips setting-------------------------</span></span><br><span class="line"><span class="string">&quot;:UltiSnipsEdit 显示帮助信息&quot;</span></span><br><span class="line"><span class="string">&quot; 片段信息寻找的文件夹名称，默认UltiSnips，多个逗号分隔</span></span><br><span class="line"><span class="string">&quot;let g:UltiSnipsSnippetDirectories = [&#x27;</span>UltiSnips<span class="string">&#x27;]</span></span><br><span class="line"><span class="string">&quot; :UltiSnipsEdit 显示帮助信的目录路径，默认~/.vim/UltiSnips</span></span><br><span class="line"><span class="string">let g:UltiSnipsSnippetStorageDirectoryForUltiSnipsEdit = &#x27;</span>~/.<span class="keyword">vim</span>/plugged/<span class="keyword">vim</span>-snippets/UltiSnips<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 代码片段补全触发，需要在编辑模式</span></span><br><span class="line"><span class="string">let g:UltiSnipsExpandTrigger       = &#x27;</span><span class="symbol">&lt;c-w&gt;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 列出补全可选列表，需要在编辑模式，可以在输入一些字符后调用，显示当前字符的代码片段提示</span></span><br><span class="line"><span class="string">let g:UltiSnipsListSnippets        = &#x27;</span>&lt;<span class="keyword">c</span>-\&gt;<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 下一条补全，需要在编辑模式，不好使</span></span><br><span class="line"><span class="string">let g:UltiSnipsJumpForwardTrigger  = &#x27;</span><span class="symbol">&lt;c-b&gt;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 上一条补全，需要在编辑模式，不好使</span></span><br><span class="line"><span class="string">let g:UltiSnipsJumpBackwardTrigger = &#x27;</span><span class="symbol">&lt;c-z&gt;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 帮助信息水平显示</span></span><br><span class="line"><span class="string">let g:UltiSnipsEditSplit           = &#x27;</span>horizontal<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; 帮助信息垂直显示</span></span><br><span class="line"><span class="string">&quot;let g:UltiSnipsEditSplit           = &#x27;</span><span class="keyword">vertical</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; python3</span></span><br><span class="line"><span class="string">&quot;let g:UltiSnipsUsePythonVersion = 3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;----------ultisnips setting--------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;------------nerdcommenter setting--------------------</span></span><br><span class="line"><span class="string">&quot; \c+空格</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cc注释当前行起始的 [count]行 或者 注释 visual mode 选中的文本</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cn注释方式同 &lt;leader&gt;cc，但是强制嵌套</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;c&lt;space&gt;这个是最重要的，记住这一个就行了。切换所选行的注释状态。 如果注释了最上面的选定行，则取消注释所有选定行，反之亦然。</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cm使用一组多行注释符注释选定行</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;ci单独切换所选行的各行注释状态</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cs使用块格式布局注释掉选定的行。</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;c$注释从光标到行尾的当前行。</span></span><br><span class="line"><span class="string">&quot;&lt;leader&gt;cA在行尾添加注释，并切换至插入模式，光标停留在注释符中间</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cl</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cb注释方式同 &lt;leader&gt;cc，注释符左对齐（&lt;leader&gt;cl）或者两边对齐（&lt;leader&gt;cb）</span></span><br><span class="line"><span class="string">&quot;[count]&lt;leader&gt;cu取消选定行的注释</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; 在注释符号后加一个空格</span></span><br><span class="line"><span class="string">let g:NERDSpaceDelims            = 1</span></span><br><span class="line"><span class="string">&quot; 紧凑排布多行注释</span></span><br><span class="line"><span class="string">let g:NERDCompactSexyComs        = 1</span></span><br><span class="line"><span class="string">&quot; 逐行注释左对齐</span></span><br><span class="line"><span class="string">let g:NERDDefaultAlign           = &#x27;</span><span class="keyword">left</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&quot; JAVA 语言使用默认的注释符号</span></span><br><span class="line"><span class="string">let g:NERDAltDelims_java         = 1</span></span><br><span class="line"><span class="string">&quot; C 语言注释符号</span></span><br><span class="line"><span class="string">let g:NERDCustomDelimiters       = &#123;&#x27;</span><span class="keyword">c</span><span class="string">&#x27;: &#123;&#x27;</span><span class="keyword">left</span><span class="string">&#x27;: &#x27;</span>/**<span class="string">&#x27;, &#x27;</span><span class="keyword">right</span><span class="string">&#x27;: &#x27;</span>*/<span class="string">&#x27;&#125;&#125;</span></span><br><span class="line"><span class="string">&quot; 允许空行注释</span></span><br><span class="line"><span class="string">let g:NERDCommentEmptyLines      = 1</span></span><br><span class="line"><span class="string">&quot; 取消注释时删除行尾空格</span></span><br><span class="line"><span class="string">let g:NERDTrimTrailingWhitespace = 1</span></span><br><span class="line"><span class="string">&quot; 检查选中的行操作是否成功</span></span><br><span class="line"><span class="string">let g:NERDToggleCheckAllLines    = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;------------nerdcommenter setting--------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;------------fzf setting------------------------------</span></span><br><span class="line"><span class="string">&quot; 在当前目录搜索文件</span></span><br><span class="line"><span class="string">nnoremap &lt;Leader&gt;f :FZF&lt;CR&gt;</span></span><br><span class="line"><span class="string">&quot;------------fzf setting------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; ----------tpope/vim-surround setting---------------</span></span><br><span class="line"><span class="string">&quot; normal模式下，光标所在航</span></span><br><span class="line"><span class="string">&quot; 替换：</span></span><br><span class="line"><span class="string">&quot; cs&quot;&#x27;</span>  : 将光标所在行中成对出现的双引号替换为单引号</span><br><span class="line"><span class="comment">&quot; cs([  : 将小括号替换为中括号</span></span><br><span class="line"><span class="string">&quot; cst&quot;</span>  : 将当前文本两边成对出现的引号或括号替换为双引号</span><br><span class="line"><span class="comment">&quot; 删除:</span></span><br><span class="line"><span class="string">&quot; ds&quot;</span>   : 删除双引号</span><br><span class="line"><span class="comment">&quot; 添加：</span></span><br><span class="line"><span class="string">&quot; ysiw&quot;</span>  : 将光标所在单词添加上双引号</span><br><span class="line"><span class="string">&quot; yss&quot;</span>   : 将当前行添加上双引号</span><br><span class="line"><span class="comment">&quot; ----------tpope/vim-surround setting---------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ----------mhinz/vim-signify setting----------------</span></span><br><span class="line"><span class="comment">&quot; default updatetime 4000ms is not good for async update</span></span><br><span class="line"><span class="keyword">set</span> updatetime=<span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ----------mhinz/vim-signify setting----------------</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;vim常用配置&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;基于&lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;vim-plug&lt;/a&gt;进行插件管理&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vim" scheme="https://blog.hanqunfeng.com/tags/vim/"/>
    
    <category term="vim-plug" scheme="https://blog.hanqunfeng.com/tags/vim-plug/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-OAuth2-JWT-WebFlux-ClientServer</title>
    <link href="https://blog.hanqunfeng.com/2020/12/02/springboot-oauth2-jwt-webflux-clientserver/"/>
    <id>https://blog.hanqunfeng.com/2020/12/02/springboot-oauth2-jwt-webflux-clientserver/</id>
    <published>2020-12-02T13:30:05.000Z</published>
    <updated>2021-05-27T07:43:32.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT-WebFlux的客户端服务器</li><li class="lvl-2">本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建</li><li class="lvl-2">本文基于<a href="https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-clientserver/">SpringBoot-OAuth2-JWT-ClientServer</a>并实现其功能，可以参考对比</li><li class="lvl-2">代码地址:<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48</a></li></ul><span id="more"></span><h2 id="依赖">依赖</h2><ul class="lvl-0"><li class="lvl-2"><p>springboot官方提供了支持</p></li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webflux</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-webflux&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-oauth2-client&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目使用了自定义授权页面，所以引入视图模板依赖和基于webjar的bootstrap，jquery</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-thymeleaf&#x27;</span></span><br><span class="line"><span class="comment">//webjars https://www.webjars.org</span></span><br><span class="line">implementation <span class="string">&#x27;org.webjars:bootstrap:4.5.3&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.webjars.bower:jquery:3.5.1&#x27;</span></span><br><span class="line"><span class="comment">// 可以在html中去掉webjars的版本号，这样升级的时候直接修改上面引入的webjars中的版本号即可，页面中不需要修改</span></span><br><span class="line">implementation <span class="string">&#x27;org.webjars:webjars-locator:0.40&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//r2dbc mysql 库</span></span><br><span class="line">implementation <span class="string">&#x27;dev.miku:r2dbc-mysql&#x27;</span></span><br><span class="line"><span class="comment">//Spring r2dbc 抽象层</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-data-r2dbc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目中使用了lombok减少代码量，非必须依赖</span></span><br><span class="line">compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="ReactiveSecurityConfig">ReactiveSecurityConfig</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientwebfluxdemo.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomReactiveAuthorizationManager;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerAuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerOAuth2AuthorizedClientRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableReactiveMethodSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.web.server.ServerHttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.SecurityWebFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authentication.logout.RedirectServerLogoutSuccessHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authentication.logout.ServerLogoutSuccessHandler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;安全认证配置&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/19 10:26.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebFluxSecurity</span> <span class="comment">//必要</span></span><br><span class="line"><span class="meta">@EnableReactiveMethodSecurity</span> <span class="comment">//启用@PreAuthorize注解配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReactiveSecurityConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;oauth2.server.logout&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String oauth2_server_logout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerAccessDeniedHandler customServerAccessDeniedHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerAuthenticationEntryPoint customServerAuthenticationEntryPoint;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomReactiveAuthorizationManager customReactiveAuthorizationManager;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerOAuth2AuthorizedClientRepository customServerOAuth2AuthorizedClientRepository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册安全验证规则</span></span><br><span class="line"><span class="comment">     * 配置方式与HttpSecurity基本一致</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    SecurityWebFilterChain <span class="title function_">springSecurityFilterChain</span><span class="params">(ServerHttpSecurity http)</span> &#123; <span class="comment">//定义SecurityWebFilterChain对安全进行控制，使用ServerHttpSecurity构造过滤器链；</span></span><br><span class="line">        <span class="keyword">return</span> http.authorizeExchange()</span><br><span class="line">                <span class="comment">//.anyExchange().authenticated() //所有请求都需要通过认证</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">//需要具备相应的角色才能访问</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/user/**&quot;</span>, <span class="string">&quot;/user2/**&quot;</span>).hasAuthority(<span class="string">&quot;SCOPE_any&quot;</span>)</span><br><span class="line">                <span class="comment">//不需要登录就可以访问</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/login&quot;</span>,<span class="string">&quot;/webjars/**&quot;</span>).permitAll()</span><br><span class="line"></span><br><span class="line">                <span class="comment">//其它路径需要根据指定的方法判断是否有权限访问，基于权限管理模型认证</span></span><br><span class="line">                .anyExchange().access(customReactiveAuthorizationManager)</span><br><span class="line">                <span class="comment">//.anyExchange().permitAll()</span></span><br><span class="line">                .and()</span><br><span class="line">                .csrf().disable() <span class="comment">//关闭CSRF（Cross-site request forgery）跨站请求伪造</span></span><br><span class="line">                <span class="comment">//必须post访问</span></span><br><span class="line">                .logout().logoutUrl(<span class="string">&quot;/logout&quot;</span>).logoutSuccessHandler(serverLogoutSuccessHandler())</span><br><span class="line">                .and()</span><br><span class="line"></span><br><span class="line">                <span class="comment">//开启oauth2登录认证</span></span><br><span class="line">                .oauth2Login()</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">//开启基于oauth2的客户端信息</span></span><br><span class="line">                .oauth2Client()</span><br><span class="line">                <span class="comment">//客户端信息基于数据库，基于内存去掉下面配置即可</span></span><br><span class="line">                .authorizedClientRepository(customServerOAuth2AuthorizedClientRepository)</span><br><span class="line">                .and().exceptionHandling()</span><br><span class="line">                .accessDeniedHandler(customServerAccessDeniedHandler)</span><br><span class="line">                .authenticationEntryPoint(customServerAuthenticationEntryPoint)</span><br><span class="line">                .and()</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 退出重定向到认证登录页面，默认&quot;/login?logout&quot;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> ServerLogoutSuccessHandler <span class="title function_">serverLogoutSuccessHandler</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">RedirectServerLogoutSuccessHandler</span> <span class="variable">redirectServerLogoutSuccessHandler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedirectServerLogoutSuccessHandler</span>();</span><br><span class="line">        redirectServerLogoutSuccessHandler.setLogoutSuccessUrl(URI.create(oauth2_server_logout));</span><br><span class="line">        <span class="keyword">return</span> redirectServerLogoutSuccessHandler;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomReactiveAuthorizationManager">CustomReactiveAuthorizationManager</h2><p>基于RBAC权限认证管理模型的认证方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authorization.AuthorizationDecision;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authorization.ReactiveAuthorizationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authorization.AuthorizationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.AntPathMatcher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ReactiveAuthorizationManager&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/30 12:05.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomReactiveAuthorizationManager</span> <span class="keyword">implements</span> <span class="title class_">ReactiveAuthorizationManager</span>&lt;AuthorizationContext&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;AuthorizationDecision&gt; <span class="title function_">check</span><span class="params">(Mono&lt;Authentication&gt; authentication, AuthorizationContext object)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> authentication.map(auth -&gt; &#123;</span><br><span class="line">            <span class="type">ServerHttpRequest</span> <span class="variable">request</span> <span class="operator">=</span> object.getExchange().getRequest();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">principal</span> <span class="operator">=</span> auth.getPrincipal();</span><br><span class="line">            String username;</span><br><span class="line">            <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> Jwt) &#123;</span><br><span class="line">                username = ((Jwt) principal).getClaimAsString(<span class="string">&quot;user_name&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                username = principal.toString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">hasPerssion</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.hasText(username) &amp;&amp; !<span class="string">&quot;anonymousUser&quot;</span>.equals(username)) &#123;</span><br><span class="line">                <span class="comment">//根据用户名查询用户资源权限，这里应该访问数据库查询</span></span><br><span class="line">                Set&lt;String&gt; uris = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">                <span class="keyword">for</span> (String uri : uris) &#123;</span><br><span class="line">                    <span class="comment">//验证用户拥有的资源权限是否与请求的资源相匹配</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">AntPathMatcher</span>().match(uri, request.getURI().toString())) &#123;</span><br><span class="line">                        hasPerssion = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//暂时全部返回true</span></span><br><span class="line">            hasPerssion = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AuthorizationDecision</span>(hasPerssion);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerAccessDeniedHandler">CustomServerAccessDeniedHandler</h2><p>没有权限时的处理方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.AccessDeniedException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authorization.ServerAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;没有权限时的处理方式&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/20 11:56.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomServerAccessDeniedHandler</span> <span class="keyword">implements</span> <span class="title class_">ServerAccessDeniedHandler</span> &#123;</span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Void&gt; <span class="title function_">handle</span><span class="params">(ServerWebExchange serverWebExchange, AccessDeniedException e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> setErrorResponse(serverWebExchange.getResponse(),e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Mono&lt;Void&gt; <span class="title function_">setErrorResponse</span><span class="params">(ServerHttpResponse response, String message)</span> <span class="keyword">throws</span> JsonProcessingException &#123;</span><br><span class="line">        response.getHeaders().setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        <span class="type">AjaxResponse</span> <span class="variable">ajaxResponse</span> <span class="operator">=</span> AjaxResponse.error(<span class="keyword">new</span> <span class="title class_">CustomException</span>(CustomExceptionType.USER_INPUT_ERROR, message));</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(response.bufferFactory().wrap(objectMapper.writeValueAsBytes(ajaxResponse))));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerAuthenticationEntryPoint">CustomServerAuthenticationEntryPoint</h2><p>token格式错误或过期时的处理方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.ServerAuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ServerAuthenticationEntryPoint&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/20 12:01.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * token格式错误或过期时的处理方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomServerAuthenticationEntryPoint</span> <span class="keyword">implements</span> <span class="title class_">ServerAuthenticationEntryPoint</span> &#123;</span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Void&gt; <span class="title function_">commence</span><span class="params">(ServerWebExchange serverWebExchange, AuthenticationException e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> setErrorResponse(serverWebExchange.getResponse(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Mono&lt;Void&gt; <span class="title function_">setErrorResponse</span><span class="params">(ServerHttpResponse response, String message)</span> <span class="keyword">throws</span> JsonProcessingException &#123;</span><br><span class="line">        response.getHeaders().setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        <span class="type">AjaxResponse</span> <span class="variable">ajaxResponse</span> <span class="operator">=</span> AjaxResponse.error(<span class="keyword">new</span> <span class="title class_">CustomException</span>(CustomExceptionType.USER_INPUT_ERROR, message));</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(response.bufferFactory().wrap(objectMapper.writeValueAsBytes(ajaxResponse))));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="WebFluxConfig">WebFluxConfig</h2><p>配置跨域</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.config.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.config.WebFluxConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;WebFlux配置类&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/18 17:43.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 我们若需要配置Spring WebFlux只需让配置配实现接口WebFluxConfigurer，</span></span><br><span class="line"><span class="comment"> * 这样我们既能保留Spring Boot给WebFlux配置又能添加我们的定制配置。</span></span><br><span class="line"><span class="comment"> * 若我们向完全控制WebFlux，则在配置类添加注解<span class="doctag">@EnableWebFlux</span></span></span><br><span class="line"><span class="comment"> * 配置方式和Spring MVC类似</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebFluxConfig</span> <span class="keyword">implements</span> <span class="title class_">WebFluxConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//跨域设置</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>) <span class="comment">//添加映射路径，“/**”表示对所有的路径实行全局跨域访问权限的设置</span></span><br><span class="line">                .allowedMethods(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>) <span class="comment">//开放哪些Http方法，允许跨域访问</span></span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>) <span class="comment">//允许HTTP请求中的携带哪些Header信息</span></span><br><span class="line">                <span class="comment">//When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot;since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header.</span></span><br><span class="line">                <span class="comment">// To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.</span></span><br><span class="line">                <span class="comment">//.allowedOrigins(&quot;*&quot;) //开放哪些ip、端口、域名的访问权限</span></span><br><span class="line">                .allowedOriginPatterns(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowCredentials(<span class="literal">true</span>); <span class="comment">//是否允许发送Cookie信息</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerOAuth2AuthorizedClientRepository">CustomServerOAuth2AuthorizedClientRepository</h2><p>基于jdbc存储token信。</p><p>这里有一个注意事项：查询时不要使用.fetch()方法，其会按照字段名称的字母排序进行赋值，导致结果中key和value匹配混乱</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.dao.DataRetrievalFailureException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.r2dbc.core.DatabaseClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.OAuth2AuthorizedClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ClientRegistration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.web.server.ServerOAuth2AuthorizedClientRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.core.OAuth2AccessToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.core.OAuth2RefreshToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ServerOAuth2AuthorizedClientRepository&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/12/1 09:58.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomServerOAuth2AuthorizedClientRepository</span> <span class="keyword">implements</span> <span class="title class_">ServerOAuth2AuthorizedClientRepository</span> &#123;</span><br><span class="line">    <span class="comment">// @formatter:off</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">COLUMN_NAMES</span> <span class="operator">=</span> <span class="string">&quot;client_registration_id, &quot;</span></span><br><span class="line">            + <span class="string">&quot;principal_name, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_type, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_value, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_issued_at, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_expires_at, &quot;</span></span><br><span class="line">            + <span class="string">&quot;access_token_scopes, &quot;</span></span><br><span class="line">            + <span class="string">&quot;refresh_token_value, &quot;</span></span><br><span class="line">            + <span class="string">&quot;refresh_token_issued_at&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_NAME</span> <span class="operator">=</span> <span class="string">&quot;oauth2_authorized_client&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PK_FILTER</span> <span class="operator">=</span> <span class="string">&quot;client_registration_id = ? AND principal_name = ?&quot;</span>;</span><br><span class="line">    <span class="comment">// @formatter:on</span></span><br><span class="line">    <span class="comment">// @formatter:off</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">LOAD_AUTHORIZED_CLIENT_SQL</span> <span class="operator">=</span> <span class="string">&quot;SELECT &quot;</span> + COLUMN_NAMES</span><br><span class="line">            + <span class="string">&quot; FROM &quot;</span> + TABLE_NAME</span><br><span class="line">            + <span class="string">&quot; WHERE &quot;</span> + PK_FILTER;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @formatter:off</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SAVE_AUTHORIZED_CLIENT_SQL</span> <span class="operator">=</span> <span class="string">&quot;INSERT INTO &quot;</span> + TABLE_NAME</span><br><span class="line">            + <span class="string">&quot; (&quot;</span> + COLUMN_NAMES + <span class="string">&quot;) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">REMOVE_AUTHORIZED_CLIENT_SQL</span> <span class="operator">=</span> <span class="string">&quot;DELETE FROM &quot;</span> + TABLE_NAME + <span class="string">&quot; WHERE &quot;</span> + PK_FILTER;</span><br><span class="line">    <span class="comment">// @formatter:on</span></span><br><span class="line">    <span class="comment">// @formatter:off</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">UPDATE_AUTHORIZED_CLIENT_SQL</span> <span class="operator">=</span> <span class="string">&quot;UPDATE &quot;</span> + TABLE_NAME</span><br><span class="line">            + <span class="string">&quot; SET access_token_type = ?, access_token_value = ?, access_token_issued_at = ?,&quot;</span></span><br><span class="line">            + <span class="string">&quot; access_token_expires_at = ?, access_token_scopes = ?,&quot;</span></span><br><span class="line">            + <span class="string">&quot; refresh_token_value = ?, refresh_token_issued_at = ?&quot;</span></span><br><span class="line">            + <span class="string">&quot; WHERE &quot;</span> + PK_FILTER;</span><br><span class="line">    <span class="comment">// @formatter:on</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DatabaseClient databaseClient;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ReactiveClientRegistrationRepository reactiveClientRegistrationRepository;</span><br><span class="line">    <span class="comment">// @formatter:on</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这里有一个注意事项：查询时不要使用.fetch()方法，其会按照字段名称的字母排序进行赋值，导致结果中key和value匹配混乱</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T <span class="keyword">extends</span> <span class="title class_">OAuth2AuthorizedClient</span>&gt; Mono&lt;T&gt; <span class="title function_">loadAuthorizedClient</span><span class="params">(String clientRegistrationId, Authentication principal, ServerWebExchange exchange)</span> &#123;</span><br><span class="line">        Assert.hasText(clientRegistrationId, <span class="string">&quot;clientRegistrationId cannot be empty&quot;</span>);</span><br><span class="line">        Assert.hasText(principal.getName(), <span class="string">&quot;principalName cannot be empty&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = databaseClient.sql(LOAD_AUTHORIZED_CLIENT_SQL)</span><br><span class="line">                .bind(<span class="number">0</span>, clientRegistrationId)</span><br><span class="line">                .bind(<span class="number">1</span>, principal.getName())</span><br><span class="line">                .map(row -&gt; &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">clientRegistrationId1</span> <span class="operator">=</span> row.get(<span class="string">&quot;client_registration_id&quot;</span>, String.class);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">access_token_type</span> <span class="operator">=</span> row.get(<span class="string">&quot;access_token_type&quot;</span>, String.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    OAuth2AccessToken.<span class="type">TokenType</span> <span class="variable">tokenType</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">if</span> (OAuth2AccessToken.TokenType.BEARER.getValue().equalsIgnoreCase(access_token_type)) &#123;</span><br><span class="line">                        tokenType = OAuth2AccessToken.TokenType.BEARER;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">String</span> <span class="variable">tokenValue</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(row.get(<span class="string">&quot;access_token_value&quot;</span>, <span class="type">byte</span>[].class), StandardCharsets.UTF_8);</span><br><span class="line">                    <span class="type">Instant</span> <span class="variable">issuedAt</span> <span class="operator">=</span> row.get(<span class="string">&quot;access_token_issued_at&quot;</span>, LocalDateTime.class).atZone(ZoneId.systemDefault()).toInstant();</span><br><span class="line">                    <span class="type">Instant</span> <span class="variable">expiresAt</span> <span class="operator">=</span> row.get(<span class="string">&quot;access_token_expires_at&quot;</span>, LocalDateTime.class).atZone(ZoneId.systemDefault()).toInstant();</span><br><span class="line">                    Set&lt;String&gt; scopes = Collections.emptySet();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">accessTokenScopes</span> <span class="operator">=</span> row.get(<span class="string">&quot;access_token_scopes&quot;</span>, String.class);</span><br><span class="line">                    <span class="keyword">if</span> (accessTokenScopes != <span class="literal">null</span>) &#123;</span><br><span class="line">                        scopes = StringUtils.commaDelimitedListToSet(accessTokenScopes);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">OAuth2AccessToken</span> <span class="variable">accessToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OAuth2AccessToken</span>(tokenType, tokenValue, issuedAt, expiresAt, scopes);</span><br><span class="line">                    <span class="type">OAuth2RefreshToken</span> <span class="variable">refreshToken</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="type">byte</span>[] refreshTokenValue = row.get(<span class="string">&quot;refresh_token_value&quot;</span>, <span class="type">byte</span>[].class);</span><br><span class="line">                    <span class="keyword">if</span> (refreshTokenValue != <span class="literal">null</span>) &#123;</span><br><span class="line">                        tokenValue = <span class="keyword">new</span> <span class="title class_">String</span>(refreshTokenValue, StandardCharsets.UTF_8);</span><br><span class="line">                        issuedAt = <span class="literal">null</span>;</span><br><span class="line">                        <span class="type">LocalDateTime</span> <span class="variable">refreshTokenIssuedAt</span> <span class="operator">=</span> row.get(<span class="string">&quot;refresh_token_issued_at&quot;</span>, LocalDateTime.class);</span><br><span class="line">                        <span class="keyword">if</span> (refreshTokenIssuedAt != <span class="literal">null</span>) &#123;</span><br><span class="line">                            issuedAt = refreshTokenIssuedAt.atZone(ZoneId.systemDefault()).toInstant();</span><br><span class="line">                        &#125;</span><br><span class="line">                        refreshToken = <span class="keyword">new</span> <span class="title class_">OAuth2RefreshToken</span>(tokenValue, issuedAt);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">principalName</span> <span class="operator">=</span> row.get(<span class="string">&quot;principal_name&quot;</span>, String.class);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">final</span> <span class="type">OAuth2RefreshToken</span> <span class="variable">refreshToken1</span> <span class="operator">=</span> refreshToken;</span><br><span class="line"></span><br><span class="line">                    Mono&lt;ClientRegistration&gt; clientRegistrationMono = reactiveClientRegistrationRepository</span><br><span class="line">                            .findByRegistrationId(clientRegistrationId1);</span><br><span class="line">                    <span class="keyword">return</span> clientRegistrationMono</span><br><span class="line">                            .switchIfEmpty(Mono.error(<span class="keyword">new</span> <span class="title class_">DataRetrievalFailureException</span>(</span><br><span class="line">                                    <span class="string">&quot;The ClientRegistration with id &#x27;&quot;</span> + clientRegistrationId1 + <span class="string">&quot;&#x27; exists in the data source, &quot;</span></span><br><span class="line">                                            + <span class="string">&quot;however, it was not found in the ClientRegistrationRepository.&quot;</span>)))</span><br><span class="line">                            .map(clientRegistration -&gt; <span class="keyword">new</span> <span class="title class_">OAuth2AuthorizedClient</span>(clientRegistration, principalName, accessToken, refreshToken1));</span><br><span class="line">                &#125;).first().flatMap(oAuth2AuthorizedClientMono1 -&gt; oAuth2AuthorizedClientMono1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (Mono&lt;T&gt;) oAuth2AuthorizedClientMono.doOnNext(unused -&gt; log.info(<span class="string">&quot;select client token info success!&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Void&gt; <span class="title function_">saveAuthorizedClient</span><span class="params">(OAuth2AuthorizedClient authorizedClient, Authentication principal, ServerWebExchange exchange)</span> &#123;</span><br><span class="line"></span><br><span class="line">        Assert.notNull(authorizedClient, <span class="string">&quot;authorizedClient cannot be null&quot;</span>);</span><br><span class="line">        Assert.notNull(principal, <span class="string">&quot;principal cannot be null&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.loadAuthorizedClient(authorizedClient.getClientRegistration().getRegistrationId(), principal, exchange)</span><br><span class="line">                 .flatMap((Function&lt;OAuth2AuthorizedClient, Mono&lt;Optional&lt;OAuth2AuthorizedClient&gt;&gt;&gt;) oAuth2AuthorizedClient -&gt; Mono.just(Optional.of(oAuth2AuthorizedClient)))</span><br><span class="line">                 .defaultIfEmpty(Optional.empty())</span><br><span class="line">                 .flatMap((Function&lt;Optional&lt;OAuth2AuthorizedClient&gt;, Mono&lt;Void&gt;&gt;) oAuth2AuthorizedClient -&gt; &#123;</span><br><span class="line">                     <span class="keyword">if</span>(!oAuth2AuthorizedClient.isPresent())&#123;</span><br><span class="line">                         <span class="keyword">return</span> insertAuthorizedClient(authorizedClient,principal);</span><br><span class="line">                     &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                         <span class="keyword">return</span> updateAuthorizedClient(authorizedClient, principal);</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Mono&lt;Void&gt; <span class="title function_">updateAuthorizedClient</span><span class="params">(OAuth2AuthorizedClient authorizedClient, Authentication principal)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> databaseClient.sql(UPDATE_AUTHORIZED_CLIENT_SQL)</span><br><span class="line">                .bind(<span class="number">0</span>, authorizedClient.getAccessToken().getTokenType().getValue())</span><br><span class="line">                .bind(<span class="number">1</span>, authorizedClient.getAccessToken().getTokenValue().getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                .bind(<span class="number">2</span>, timeFromInstant(authorizedClient.getAccessToken().getIssuedAt()))</span><br><span class="line">                .bind(<span class="number">3</span>, timeFromInstant(authorizedClient.getAccessToken().getExpiresAt()))</span><br><span class="line">                .bind(<span class="number">4</span>, StringUtils.collectionToCommaDelimitedString(authorizedClient.getAccessToken().getScopes()))</span><br><span class="line">                .bind(<span class="number">5</span>, authorizedClient.getRefreshToken().getTokenValue().getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                .bind(<span class="number">6</span>, timeFromInstant(authorizedClient.getRefreshToken().getIssuedAt()))</span><br><span class="line">                .bind(<span class="number">7</span>, authorizedClient.getClientRegistration().getRegistrationId())</span><br><span class="line">                .bind(<span class="number">8</span>, principal.getName())</span><br><span class="line">                .then()</span><br><span class="line">                .doOnNext(unused -&gt; log.info(<span class="string">&quot;update client token info success!&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Mono&lt;Void&gt; <span class="title function_">insertAuthorizedClient</span><span class="params">(OAuth2AuthorizedClient authorizedClient, Authentication principal)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> databaseClient.sql(SAVE_AUTHORIZED_CLIENT_SQL)</span><br><span class="line">                .bind(<span class="number">0</span>, authorizedClient.getClientRegistration().getRegistrationId())</span><br><span class="line">                .bind(<span class="number">1</span>, principal.getName())</span><br><span class="line">                .bind(<span class="number">2</span>, authorizedClient.getAccessToken().getTokenType().getValue())</span><br><span class="line">                .bind(<span class="number">3</span>, authorizedClient.getAccessToken().getTokenValue().getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                .bind(<span class="number">4</span>, timeFromInstant(authorizedClient.getAccessToken().getIssuedAt()))</span><br><span class="line">                .bind(<span class="number">5</span>, timeFromInstant(authorizedClient.getAccessToken().getExpiresAt()))</span><br><span class="line">                .bind(<span class="number">6</span>, StringUtils.collectionToCommaDelimitedString(authorizedClient.getAccessToken().getScopes()))</span><br><span class="line">                .bind(<span class="number">7</span>, authorizedClient.getRefreshToken().getTokenValue().getBytes(StandardCharsets.UTF_8))</span><br><span class="line">                .bind(<span class="number">8</span>, timeFromInstant(authorizedClient.getRefreshToken().getIssuedAt()))</span><br><span class="line">                .then()</span><br><span class="line">                .doOnNext(unused -&gt; log.info(<span class="string">&quot;insert client token info success!&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Void&gt; <span class="title function_">removeAuthorizedClient</span><span class="params">(String clientRegistrationId, Authentication principal, ServerWebExchange exchange)</span> &#123;</span><br><span class="line"></span><br><span class="line">        Assert.hasText(clientRegistrationId, <span class="string">&quot;clientRegistrationId cannot be empty&quot;</span>);</span><br><span class="line">        Assert.hasText(principal.getName(), <span class="string">&quot;principalName cannot be empty&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> databaseClient.sql(REMOVE_AUTHORIZED_CLIENT_SQL)</span><br><span class="line">                .bind(<span class="number">0</span>, clientRegistrationId)</span><br><span class="line">                .bind(<span class="number">1</span>, principal.getName())</span><br><span class="line">                .then()</span><br><span class="line">                .doOnNext(unused -&gt; log.info(<span class="string">&quot;remove client token info success!&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">timeFromInstant</span><span class="params">(Instant instant)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>).format(LocalDateTime.ofInstant(instant, ZoneId.systemDefault()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AuthController">AuthController</h2><p>自定义登录跳转页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientwebfluxdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerOAuth2AuthorizedClientRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.InMemoryReactiveClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;login&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/30 18:02.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ReactiveClientRegistrationRepository reactiveClientRegistrationRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (reactiveClientRegistrationRepository <span class="keyword">instanceof</span> InMemoryReactiveClientRegistrationRepository) &#123;</span><br><span class="line">            ((InMemoryReactiveClientRegistrationRepository) reactiveClientRegistrationRepository).forEach(registrations -&gt; &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">registrationId</span> <span class="operator">=</span> registrations.getRegistrationId();</span><br><span class="line">                <span class="type">String</span> <span class="variable">clientName</span> <span class="operator">=</span> registrations.getClientName();</span><br><span class="line">                System.out.println(registrationId + <span class="string">&quot;---&quot;</span> + clientName);</span><br><span class="line">                map.put(registrationId, clientName);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;registrations&quot;</span>, map);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;oauth2/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="login-html">login.html</h2><p>自定义登录页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/css/bootstrap.min.css&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/jquery/jquery.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/js/bootstrap.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;form-signin-heading&quot;</span>&gt;</span>Login with OAuth 2.0<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;registration: $&#123;registrations&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/oauth2/authorization/&#x27;+$&#123;registration.key&#125;&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;registration.value&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/logout&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Logout<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="application-yml">application.yml</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8099</span></span><br><span class="line"></span><br><span class="line"><span class="attr">oauth2:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://localhost:8080</span></span><br><span class="line">    <span class="attr">logout:</span> <span class="string">$&#123;oauth2.server.url&#125;/logout</span> <span class="comment">#认证服务器logout地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">oauth2-client-webflux</span></span><br><span class="line">  <span class="comment">#资源国际化</span></span><br><span class="line">  <span class="attr">messages:</span></span><br><span class="line">    <span class="attr">basename:</span> <span class="string">static/i18n/messages</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">utf-8</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#thymeleaf</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">HTML</span></span><br><span class="line">    <span class="attr">prefix:</span> <span class="string">classpath:/templates/</span></span><br><span class="line">    <span class="attr">servlet:</span></span><br><span class="line">      <span class="attr">content-type:</span> <span class="string">text/html</span></span><br><span class="line">    <span class="attr">suffix:</span> <span class="string">.html</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">#r2dbc mysql</span></span><br><span class="line">  <span class="attr">r2dbc:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">r2dbc:mysql://localhost:3306/springboot?useUnicode=true&amp;characterEncoding=utf-8&amp;useTimezone=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">newpwd</span></span><br><span class="line">    <span class="attr">pool:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">max-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">max-idle-time:</span> <span class="string">30m</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">#oauth2</span></span><br><span class="line">  <span class="comment"># 支持多客户端认证方式</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">client:</span></span><br><span class="line">        <span class="attr">registration:</span></span><br><span class="line">          <span class="comment"># /oauth2/authorization/flux-client # 认证地址</span></span><br><span class="line">          <span class="attr">flux-client:</span> <span class="comment"># 注册名称</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">postman</span> <span class="comment"># 客户端登录用户名称</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">postman</span> <span class="comment"># 客户端登录密码</span></span><br><span class="line">            <span class="attr">authorization-grant-type:</span> <span class="string">authorization_code</span> <span class="comment">#认证方式为code</span></span><br><span class="line">            <span class="comment">#回调地址，需要配置到认证服务器中</span></span><br><span class="line">            <span class="attr">redirect-uri:</span> <span class="string">http://localhost:8099/login/oauth2/code/flux-client</span></span><br><span class="line">            <span class="attr">scope:</span> <span class="string">any</span> <span class="comment">#授权范围</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">客户端1</span> <span class="comment">#显示名称</span></span><br><span class="line"><span class="comment">#          # /oauth2/authorization/flux-client2</span></span><br><span class="line">          <span class="attr">flux-client2:</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">demo-client</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">demo-client</span></span><br><span class="line">            <span class="attr">authorization-grant-type:</span> <span class="string">authorization_code</span></span><br><span class="line">            <span class="attr">redirect-uri:</span> <span class="string">http://localhost:8099/login/oauth2/code/flux-client2</span></span><br><span class="line">            <span class="attr">scope:</span> <span class="string">any</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">客户端2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="attr">google:</span> <span class="comment"># google</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Google认证</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="attr">facebook:</span> <span class="comment"># facebook</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Facebook认证</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="attr">github:</span> <span class="comment"># github</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Github认证</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">provider:</span></span><br><span class="line">          <span class="attr">flux-client:</span> <span class="comment"># 注册客户端的认证信息</span></span><br><span class="line">            <span class="attr">authorization-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/authorize</span> <span class="comment"># 认证服务器授权地址</span></span><br><span class="line">            <span class="attr">token-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/token</span> <span class="comment"># 认证服务器token地址</span></span><br><span class="line">            <span class="attr">user-info-uri:</span> <span class="string">http://localhost:8080/userInfo</span> <span class="comment"># 认证服务器用户信息地址</span></span><br><span class="line">            <span class="attr">userNameAttribute:</span> <span class="string">username</span> <span class="comment"># 指定user-info-uri返回map中的属性名称用于表示用户名</span></span><br><span class="line">          <span class="attr">flux-client2:</span></span><br><span class="line">            <span class="attr">authorization-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/authorize</span></span><br><span class="line">            <span class="attr">token-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/token</span></span><br><span class="line">            <span class="attr">user-info-uri:</span> <span class="string">http://localhost:8080/userInfo</span></span><br><span class="line">            <span class="attr">userNameAttribute:</span> <span class="string">username</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以打印sql</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">org.springframework.data.r2dbc:</span> <span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><h2 id="ResController">ResController</h2><p>请求资源服务示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientwebfluxdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientwebfluxdemo.security.CustomServerOAuth2AuthorizedClientRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpHeaders;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.OAuth2AuthorizedClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.function.client.WebClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;获取资源服务器数据&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/7 22:47.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/res&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">WebClient</span> <span class="variable">CLIENT</span> <span class="operator">=</span> WebClient.create(<span class="string">&quot;http://localhost:8083&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerOAuth2AuthorizedClientRepository customServerOAuth2AuthorizedClientRepository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取资源服务器的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/res1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title function_">getRes</span><span class="params">(Authentication principal, ServerWebExchange exchange)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> OAuth2AuthenticationToken) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">authorizedClientRegistrationId</span> <span class="operator">=</span> ((OAuth2AuthenticationToken) principal).getAuthorizedClientRegistrationId();</span><br><span class="line">            Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = customServerOAuth2AuthorizedClientRepository.loadAuthorizedClient(authorizedClientRegistrationId, principal, exchange);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> oAuth2AuthorizedClientMono.flatMap(client -&gt; &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">tokenValue</span> <span class="operator">=</span> client.getAccessToken().getTokenValue();</span><br><span class="line">                <span class="type">String</span> <span class="variable">tokenType</span> <span class="operator">=</span> client.getAccessToken().getTokenType().getValue();</span><br><span class="line">                <span class="keyword">return</span> CLIENT.get()</span><br><span class="line">                        .uri(<span class="string">&quot;/res/res1&quot;</span>)</span><br><span class="line">                        <span class="comment">//增加了Bearer安全认证，所以这里需要传递header认证信息</span></span><br><span class="line">                        .header(HttpHeaders.AUTHORIZATION,</span><br><span class="line">                                tokenType + <span class="string">&quot; &quot;</span> + tokenValue)</span><br><span class="line">                        .retrieve()<span class="comment">//异步接收服务端响应</span></span><br><span class="line">                        .bodyToMono(AjaxResponse.class)</span><br><span class="line">                        .retry(<span class="number">3</span>)</span><br><span class="line">                        .defaultIfEmpty(AjaxResponse.success(<span class="string">&quot;返回结果为Null&quot;</span>));</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.just(AjaxResponse.error(<span class="keyword">new</span> <span class="title class_">CustomException</span>(CustomExceptionType.SYSTEM_ERROR,<span class="string">&quot;Authentication类型转换异常&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title function_">getUser</span><span class="params">(Authentication principal, ServerWebExchange exchange)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> OAuth2AuthenticationToken) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">authorizedClientRegistrationId</span> <span class="operator">=</span> ((OAuth2AuthenticationToken) principal).getAuthorizedClientRegistrationId();</span><br><span class="line">            Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = customServerOAuth2AuthorizedClientRepository.loadAuthorizedClient(authorizedClientRegistrationId, principal, exchange);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> oAuth2AuthorizedClientMono.flatMap(client -&gt; &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">tokenValue</span> <span class="operator">=</span> client.getAccessToken().getTokenValue();</span><br><span class="line">                <span class="type">String</span> <span class="variable">tokenType</span> <span class="operator">=</span> client.getAccessToken().getTokenType().getValue();</span><br><span class="line">                <span class="keyword">return</span> CLIENT.post()</span><br><span class="line">                        .uri(<span class="string">&quot;/user&quot;</span>)</span><br><span class="line">                        <span class="comment">//增加了Bearer安全认证，所以这里需要传递header认证信息</span></span><br><span class="line">                        .header(HttpHeaders.AUTHORIZATION,</span><br><span class="line">                                tokenType + <span class="string">&quot; &quot;</span> + tokenValue)</span><br><span class="line">                        .retrieve()<span class="comment">//异步接收服务端响应</span></span><br><span class="line">                        .bodyToMono(AjaxResponse.class)</span><br><span class="line">                        .retry(<span class="number">3</span>)</span><br><span class="line">                        .defaultIfEmpty(AjaxResponse.success(<span class="string">&quot;返回结果为Null&quot;</span>));</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.just(AjaxResponse.error(<span class="keyword">new</span> <span class="title class_">CustomException</span>(CustomExceptionType.SYSTEM_ERROR,<span class="string">&quot;Authentication类型转换异常&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rbac&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title function_">getRbac</span><span class="params">(Authentication principal, ServerWebExchange exchange)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> OAuth2AuthenticationToken) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">authorizedClientRegistrationId</span> <span class="operator">=</span> ((OAuth2AuthenticationToken) principal).getAuthorizedClientRegistrationId();</span><br><span class="line">            Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = customServerOAuth2AuthorizedClientRepository.loadAuthorizedClient(authorizedClientRegistrationId, principal, exchange);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> oAuth2AuthorizedClientMono.flatMap(client -&gt; &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">tokenValue</span> <span class="operator">=</span> client.getAccessToken().getTokenValue();</span><br><span class="line">                <span class="type">String</span> <span class="variable">tokenType</span> <span class="operator">=</span> client.getAccessToken().getTokenType().getValue();</span><br><span class="line">                <span class="keyword">return</span> CLIENT.get()</span><br><span class="line">                        .uri(<span class="string">&quot;/rbac&quot;</span>)</span><br><span class="line">                        <span class="comment">//增加了Bearer安全认证，所以这里需要传递header认证信息</span></span><br><span class="line">                        .header(HttpHeaders.AUTHORIZATION,</span><br><span class="line">                                tokenType + <span class="string">&quot; &quot;</span> + tokenValue)</span><br><span class="line">                        .retrieve()<span class="comment">//异步接收服务端响应</span></span><br><span class="line">                        .bodyToMono(AjaxResponse.class)</span><br><span class="line">                        .retry(<span class="number">3</span>)</span><br><span class="line">                        .defaultIfEmpty(AjaxResponse.success(<span class="string">&quot;返回结果为Null&quot;</span>));</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.just(AjaxResponse.error(<span class="keyword">new</span> <span class="title class_">CustomException</span>(CustomExceptionType.SYSTEM_ERROR,<span class="string">&quot;Authentication类型转换异常&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Map&gt; <span class="title function_">getuserInfo</span><span class="params">(Authentication principal, ServerWebExchange exchange)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> OAuth2AuthenticationToken) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">authorizedClientRegistrationId</span> <span class="operator">=</span> ((OAuth2AuthenticationToken) principal).getAuthorizedClientRegistrationId();</span><br><span class="line">            Mono&lt;OAuth2AuthorizedClient&gt; oAuth2AuthorizedClientMono = customServerOAuth2AuthorizedClientRepository.loadAuthorizedClient(authorizedClientRegistrationId, principal, exchange);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> oAuth2AuthorizedClientMono.flatMap(client -&gt; &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">tokenValue</span> <span class="operator">=</span> client.getAccessToken().getTokenValue();</span><br><span class="line">                <span class="type">String</span> <span class="variable">tokenType</span> <span class="operator">=</span> client.getAccessToken().getTokenType().getValue();</span><br><span class="line">                <span class="keyword">return</span> CLIENT.get()</span><br><span class="line">                        .uri(<span class="string">&quot;/userInfo&quot;</span>)</span><br><span class="line">                        <span class="comment">//增加了Bearer安全认证，所以这里需要传递header认证信息</span></span><br><span class="line">                        .header(HttpHeaders.AUTHORIZATION,</span><br><span class="line">                                tokenType + <span class="string">&quot; &quot;</span> + tokenValue)</span><br><span class="line">                        .retrieve()<span class="comment">//异步接收服务端响应</span></span><br><span class="line">                        .bodyToMono(Map.class)</span><br><span class="line">                        .retry(<span class="number">3</span>)</span><br><span class="line">                        .defaultIfEmpty(<span class="keyword">new</span> <span class="title class_">HashMap</span>());</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Mono.error(<span class="keyword">new</span> <span class="title class_">CustomException</span>(CustomExceptionType.SYSTEM_ERROR,<span class="string">&quot;Authentication类型转换异常&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT-WebFlux的客户端服务器&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-clientserver/&quot;&gt;SpringBoot-OAuth2-JWT-ClientServer&lt;/a&gt;并实现其功能，可以参考对比&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="oauth2" scheme="https://blog.hanqunfeng.com/tags/oauth2/"/>
    
    <category term="springsecurity" scheme="https://blog.hanqunfeng.com/tags/springsecurity/"/>
    
    <category term="jwt" scheme="https://blog.hanqunfeng.com/tags/jwt/"/>
    
    <category term="webflux" scheme="https://blog.hanqunfeng.com/tags/webflux/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-OAuth2-JWT-WebFlux-ResourceServer</title>
    <link href="https://blog.hanqunfeng.com/2020/12/02/springboot-oauth2-jwt-webflux-resourceserver/"/>
    <id>https://blog.hanqunfeng.com/2020/12/02/springboot-oauth2-jwt-webflux-resourceserver/</id>
    <published>2020-12-02T12:30:05.000Z</published>
    <updated>2021-05-27T07:43:36.245Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT-WebFlux的资源服务器</li><li class="lvl-2">本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建</li><li class="lvl-2">本文基于<a href="https://blog.hanqunfeng.com/2020/11/15/springBoot-oauth2-jwt-resourcceserver/">SpringBoot-OAuth2-JWT-ResourceServer</a>并实现其功能，可以参考对比</li><li class="lvl-2">代码地址:<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48</a></li></ul><span id="more"></span><h2 id="依赖">依赖</h2><ul class="lvl-0"><li class="lvl-2"><p>springboot官方提供了支持</p></li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webflux</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-webflux&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-oauth2-resource-server&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目中使用了lombok减少代码量，非必须依赖</span></span><br><span class="line">compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="ReactiveSecurityConfig">ReactiveSecurityConfig</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.security.CustomReactiveAuthorizationManager;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.security.CustomServerAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.security.CustomServerAuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.method.configuration.EnableReactiveMethodSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.web.server.ServerHttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.authority.SimpleGrantedAuthority;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.server.resource.authentication.JwtAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.SecurityWebFilterChain;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;安全认证配置&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/19 10:26.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">//@EnableWebFluxSecurity //非必要</span></span><br><span class="line"><span class="meta">@EnableReactiveMethodSecurity</span> <span class="comment">//启用@PreAuthorize注解配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReactiveSecurityConfig</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerAccessDeniedHandler customServerAccessDeniedHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomServerAuthenticationEntryPoint customServerAuthenticationEntryPoint;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomReactiveAuthorizationManager customReactiveAuthorizationManager;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册安全验证规则</span></span><br><span class="line"><span class="comment">     * 配置方式与HttpSecurity基本一致</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    SecurityWebFilterChain <span class="title function_">springSecurityFilterChain</span><span class="params">(ServerHttpSecurity http)</span> &#123; <span class="comment">//定义SecurityWebFilterChain对安全进行控制，使用ServerHttpSecurity构造过滤器链；</span></span><br><span class="line">        <span class="keyword">return</span> http.authorizeExchange()</span><br><span class="line">                <span class="comment">//.anyExchange().authenticated() //所有请求都需要通过认证</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/res/**&quot;</span>, <span class="string">&quot;/userInfo/**&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">//需要具备相应的角色才能访问</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/user/**&quot;</span>).hasAnyRole(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;user&quot;</span>)</span><br><span class="line">                <span class="comment">//不需要登录就可以访问</span></span><br><span class="line">                .pathMatchers(<span class="string">&quot;/swagger-ui/**&quot;</span>, <span class="string">&quot;/v3/api-docs**&quot;</span>).permitAll()</span><br><span class="line"></span><br><span class="line">                <span class="comment">//其它路径需要根据指定的方法判断是否有权限访问，基于权限管理模型认证</span></span><br><span class="line">                .anyExchange().access(customReactiveAuthorizationManager)</span><br><span class="line">                .and()</span><br><span class="line">                .csrf().disable() <span class="comment">//关闭CSRF（Cross-site request forgery）跨站请求伪造</span></span><br><span class="line">                .httpBasic().disable() <span class="comment">//不支持HTTP Basic方式登录</span></span><br><span class="line">                .formLogin().disable()<span class="comment">//不支持login页面登录</span></span><br><span class="line">                .cors() <span class="comment">//开启跨域支持</span></span><br><span class="line">                .and()</span><br><span class="line"></span><br><span class="line">                <span class="comment">//鉴权时只支持Bearer Token的形式，不支持url后加参数access_token</span></span><br><span class="line">                .oauth2ResourceServer()<span class="comment">//开启oauth2资源认证</span></span><br><span class="line">                .jwt() <span class="comment">//token为jwt</span></span><br><span class="line">                <span class="comment">//默认情况下，权限是scope，而我们希望使用的是用户的角色，所以这里需要通过转换器进行处理</span></span><br><span class="line">                .jwtAuthenticationConverter(jwt -&gt; &#123; <span class="comment">//通过自定义Converter来指定权限，Converter是函数接口，当前上下问参数为JWT对象</span></span><br><span class="line">                    Collection&lt;SimpleGrantedAuthority&gt; authorities =</span><br><span class="line">                            ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                                    .get(<span class="string">&quot;authorities&quot;</span>)).stream() <span class="comment">//获取JWT中的authorities</span></span><br><span class="line">                                    .map(SimpleGrantedAuthority::<span class="keyword">new</span>)</span><br><span class="line">                                    .collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//如果希望保留scope的权限，可以取出scope数据然后合并到一起，这样因为不是以ROLE_开头，所以需要使用hasAuthority(&#x27;SCOPE_any&#x27;)的形式</span></span><br><span class="line">                    Collection&lt;SimpleGrantedAuthority&gt; scopes = ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                            .get(<span class="string">&quot;scope&quot;</span>)).stream().map(scope -&gt; <span class="keyword">new</span> <span class="title class_">SimpleGrantedAuthority</span>(<span class="string">&quot;SCOPE_&quot;</span> + scope))</span><br><span class="line">                            .collect(Collectors.toSet());</span><br><span class="line">                    <span class="comment">//合并权限</span></span><br><span class="line">                    authorities.addAll(scopes);</span><br><span class="line">                    <span class="keyword">return</span> Mono.just(<span class="keyword">new</span> <span class="title class_">JwtAuthenticationToken</span>(jwt, authorities));</span><br><span class="line">                &#125;)</span><br><span class="line">                .and()</span><br><span class="line">                .accessDeniedHandler(customServerAccessDeniedHandler)</span><br><span class="line">                .authenticationEntryPoint(customServerAuthenticationEntryPoint)</span><br><span class="line">                .and().build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="CustomReactiveAuthorizationManager">CustomReactiveAuthorizationManager</h2><p>基于RBAC权限认证管理模型的认证方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authorization.AuthorizationDecision;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authorization.ReactiveAuthorizationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authorization.AuthorizationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.AntPathMatcher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ReactiveAuthorizationManager&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/30 12:05.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomReactiveAuthorizationManager</span> <span class="keyword">implements</span> <span class="title class_">ReactiveAuthorizationManager</span>&lt;AuthorizationContext&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;AuthorizationDecision&gt; <span class="title function_">check</span><span class="params">(Mono&lt;Authentication&gt; authentication, AuthorizationContext object)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> authentication.map(auth -&gt; &#123;</span><br><span class="line">            <span class="type">ServerHttpRequest</span> <span class="variable">request</span> <span class="operator">=</span> object.getExchange().getRequest();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">principal</span> <span class="operator">=</span> auth.getPrincipal();</span><br><span class="line">            String username;</span><br><span class="line">            <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> Jwt) &#123;</span><br><span class="line">                username = ((Jwt) principal).getClaimAsString(<span class="string">&quot;user_name&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                username = principal.toString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">hasPerssion</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.hasText(username) &amp;&amp; !<span class="string">&quot;anonymousUser&quot;</span>.equals(username)) &#123;</span><br><span class="line">                <span class="comment">//根据用户名查询用户资源权限，这里应该访问数据库查询</span></span><br><span class="line">                Set&lt;String&gt; uris = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">                <span class="keyword">for</span> (String uri : uris) &#123;</span><br><span class="line">                    <span class="comment">//验证用户拥有的资源权限是否与请求的资源相匹配</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">AntPathMatcher</span>().match(uri, request.getURI().toString())) &#123;</span><br><span class="line">                        hasPerssion = <span class="literal">true</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//暂时全部返回true</span></span><br><span class="line">            hasPerssion = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AuthorizationDecision</span>(hasPerssion);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerAccessDeniedHandler">CustomServerAccessDeniedHandler</h2><p>没有权限时的处理方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.AccessDeniedException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.authorization.ServerAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;没有权限时的处理方式&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/20 11:56.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomServerAccessDeniedHandler</span> <span class="keyword">implements</span> <span class="title class_">ServerAccessDeniedHandler</span> &#123;</span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Void&gt; <span class="title function_">handle</span><span class="params">(ServerWebExchange serverWebExchange, AccessDeniedException e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> setErrorResponse(serverWebExchange.getResponse(),e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Mono&lt;Void&gt; <span class="title function_">setErrorResponse</span><span class="params">(ServerHttpResponse response, String message)</span> <span class="keyword">throws</span> JsonProcessingException &#123;</span><br><span class="line">        response.getHeaders().setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        <span class="type">AjaxResponse</span> <span class="variable">ajaxResponse</span> <span class="operator">=</span> AjaxResponse.error(<span class="keyword">new</span> <span class="title class_">CustomException</span>(CustomExceptionType.USER_INPUT_ERROR, message));</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(response.bufferFactory().wrap(objectMapper.writeValueAsBytes(ajaxResponse))));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CustomServerAuthenticationEntryPoint">CustomServerAuthenticationEntryPoint</h2><p>token格式错误或过期时的处理方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.security;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.CustomExceptionType;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> lombok.SneakyThrows;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.MediaType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.server.ServerAuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;ServerAuthenticationEntryPoint&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/20 12:01.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * token格式错误或过期时的处理方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomServerAuthenticationEntryPoint</span> <span class="keyword">implements</span> <span class="title class_">ServerAuthenticationEntryPoint</span> &#123;</span><br><span class="line">    <span class="meta">@SneakyThrows</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Void&gt; <span class="title function_">commence</span><span class="params">(ServerWebExchange serverWebExchange, AuthenticationException e)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> setErrorResponse(serverWebExchange.getResponse(), e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> Mono&lt;Void&gt; <span class="title function_">setErrorResponse</span><span class="params">(ServerHttpResponse response, String message)</span> <span class="keyword">throws</span> JsonProcessingException &#123;</span><br><span class="line">        response.getHeaders().setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        <span class="type">AjaxResponse</span> <span class="variable">ajaxResponse</span> <span class="operator">=</span> AjaxResponse.error(<span class="keyword">new</span> <span class="title class_">CustomException</span>(CustomExceptionType.USER_INPUT_ERROR, message));</span><br><span class="line">        <span class="keyword">return</span> response.writeWith(Mono.just(response.bufferFactory().wrap(objectMapper.writeValueAsBytes(ajaxResponse))));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="WebFluxConfig">WebFluxConfig</h2><p>配置跨域</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.config.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.reactive.config.WebFluxConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;WebFlux配置类&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/18 17:43.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 我们若需要配置Spring WebFlux只需让配置配实现接口WebFluxConfigurer，</span></span><br><span class="line"><span class="comment"> * 这样我们既能保留Spring Boot给WebFlux配置又能添加我们的定制配置。</span></span><br><span class="line"><span class="comment"> * 若我们向完全控制WebFlux，则在配置类添加注解<span class="doctag">@EnableWebFlux</span></span></span><br><span class="line"><span class="comment"> * 配置方式和Spring MVC类似</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebFluxConfig</span> <span class="keyword">implements</span> <span class="title class_">WebFluxConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//跨域设置</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>) <span class="comment">//添加映射路径，“/**”表示对所有的路径实行全局跨域访问权限的设置</span></span><br><span class="line">                .allowedMethods(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;DELETE&quot;</span>) <span class="comment">//开放哪些Http方法，允许跨域访问</span></span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>) <span class="comment">//允许HTTP请求中的携带哪些Header信息</span></span><br><span class="line">                <span class="comment">//When allowCredentials is true, allowedOrigins cannot contain the special value &quot;*&quot;since that cannot be set on the &quot;Access-Control-Allow-Origin&quot; response header.</span></span><br><span class="line">                <span class="comment">// To allow credentials to a set of origins, list them explicitly or consider using &quot;allowedOriginPatterns&quot; instead.</span></span><br><span class="line">                <span class="comment">//.allowedOrigins(&quot;*&quot;) //开放哪些ip、端口、域名的访问权限</span></span><br><span class="line">                .allowedOriginPatterns(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowCredentials(<span class="literal">true</span>); <span class="comment">//是否允许发送Cookie信息</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="application-yml">application.yml</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#资源服务器端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">oauth2-resource-server-webflux</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#oauth2 配置</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">resourceserver:</span></span><br><span class="line">        <span class="attr">jwt:</span></span><br><span class="line">          <span class="comment"># 公钥文件路径</span></span><br><span class="line">          <span class="comment"># public-key-location: classpath:oauth2_key.pub</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># 认证服务器提供的密钥验证路径，这种方式每次验证access_token都需要访问认证服务器</span></span><br><span class="line">          <span class="attr">jwk-set-uri:</span> <span class="string">http://localhost:8080/.well-known/jwks.json</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="资源接口示例">资源接口示例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2resourceserverwebfluxdemo.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2resourceserverwebfluxdemo.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.access.prepost.PreAuthorize;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.security.Principal;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;res&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/6 17:22.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意权限区分大小写</span></span><br><span class="line">    <span class="meta">@PreAuthorize(&quot;hasRole(&#x27;admin&#x27;) or hasRole(&#x27;user&#x27;)&quot;)</span></span><br><span class="line">    <span class="comment">//@PreAuthorize(&quot;#oauth2.hasScope(&#x27;any&#x27;)&quot;) //不支持oauth2表达式</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/user&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title function_">user</span><span class="params">(Principal principal)</span> &#123;</span><br><span class="line">        <span class="comment">//principal在经过security拦截后，是org.springframework.security.authentication.UsernamePasswordAuthenticationToken</span></span><br><span class="line">        <span class="comment">//在经OAuth2拦截后，是OAuth2Authentication</span></span><br><span class="line">        <span class="keyword">return</span> Mono.just(AjaxResponse.success(principal));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注意权限区分大小写</span></span><br><span class="line">    <span class="meta">@PreAuthorize(&quot;hasAuthority(&#x27;SCOPE_any&#x27;)&quot;)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/user2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;AjaxResponse&gt; <span class="title function_">user2</span><span class="params">(Principal principal)</span> &#123;</span><br><span class="line">        <span class="comment">//principal在经过security拦截后，是org.springframework.security.authentication.UsernamePasswordAuthenticationToken</span></span><br><span class="line">        <span class="comment">//在经OAuth2拦截后，是OAuth2Authentication</span></span><br><span class="line">        <span class="keyword">return</span> Mono.just(AjaxResponse.success(principal));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户的claim信息</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">userInfo</span><span class="params">(Authentication authentication)</span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">principal</span> <span class="operator">=</span> authentication.getPrincipal();</span><br><span class="line">        <span class="keyword">if</span>(principal <span class="keyword">instanceof</span> Jwt)&#123;</span><br><span class="line">            map.put(<span class="string">&quot;username&quot;</span>, ((Jwt) principal).getClaim(<span class="string">&quot;user_name&quot;</span>));</span><br><span class="line">            map.putAll(((Jwt) principal).getClaims());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Mono.just(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT-WebFlux的资源服务器&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/15/springBoot-oauth2-jwt-resourcceserver/&quot;&gt;SpringBoot-OAuth2-JWT-ResourceServer&lt;/a&gt;并实现其功能，可以参考对比&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="oauth2" scheme="https://blog.hanqunfeng.com/tags/oauth2/"/>
    
    <category term="springsecurity" scheme="https://blog.hanqunfeng.com/tags/springsecurity/"/>
    
    <category term="jwt" scheme="https://blog.hanqunfeng.com/tags/jwt/"/>
    
    <category term="webflux" scheme="https://blog.hanqunfeng.com/tags/webflux/"/>
    
  </entry>
  
  <entry>
    <title>发布Jar到Maven中央仓库--gradle</title>
    <link href="https://blog.hanqunfeng.com/2020/11/27/gradle-depoly-maven-center-repository/"/>
    <id>https://blog.hanqunfeng.com/2020/11/27/gradle-depoly-maven-center-repository/</id>
    <published>2020-11-27T13:30:05.000Z</published>
    <updated>2022-09-14T09:08:28.906Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">通过本文，你将知道如何将gradle构建的项目发布到Maven中央仓库</li><li class="lvl-2">maven构建请看<a href="https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more">发布Jar到Maven中央仓库–mvn</a>。</li><li class="lvl-2">前三个步骤与<a href="https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more">发布Jar到Maven中央仓库–mvn</a>相同，不在赘述。</li></ul><span id="more"></span><h2 id="一、将项目推送到远程仓库，如-Github或者Gitee">一、将项目推送到远程仓库，如 Github或者Gitee</h2><h2 id="二、注册-Sonatype-账户–就是一个JIRA">二、注册 Sonatype 账户–就是一个JIRA</h2><h2 id="三、登录-Sonatype-创建工单–每部署一个新项目就创建一个工单">三、登录 Sonatype 创建工单–每部署一个新项目就创建一个工单</h2><p>前三个步骤与<a href="https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more">发布Jar到Maven中央仓库–mvn</a>相同，不在赘述。</p><h2 id="四、发布">四、发布</h2><ul class="lvl-0"><li class="lvl-2"><p>1.签名<br>我是mac电脑，于是签名工具使用的是<a href="https://gpgtools.org">https://gpgtools.org</a>，gradle签名时需要使用到<code>.gpg</code>证书文件，这个工具不支持直接导出gpg，其导出的证书文件是<code>.asc</code>格式的，asc其实就是字符串，可以用记事本打开查看。</p><p>使用如下命令导出gpg格式的私钥证书：</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># qunfeng_han@126.com是创建证书时使用的邮箱，会要求你输入创建证书时的密码</span></span><br><span class="line">gpg --export-secret-keys qunfeng_han@126.com &gt; secret.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以使用创建证书的用户名，会要求你输入创建证书时的密码</span></span><br><span class="line">gpg --export-secret-keys hanqunfeng &gt; secret.gpg</span><br><span class="line"><span class="comment"># 导出私钥明文</span></span><br><span class="line">gpg --export-secret-keys --armor hanqunfeng &gt; secret.asc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前全部证书</span></span><br><span class="line">gpg -k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出公钥</span></span><br><span class="line">gpg --<span class="built_in">export</span> hanqunfeng &gt; public.gpg</span><br><span class="line"><span class="comment"># 导出公钥明文</span></span><br><span class="line">gpg --<span class="built_in">export</span> --armor hanqunfeng &gt; public.asc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入公钥或私钥，区别就是导入公钥不需要创建证书的密码</span></span><br><span class="line">gpg --import public.gpg</span><br><span class="line">gpg --import --armor secret.asc</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也可以使用windows系统下载的<a href="https://www.gpg4win.org/">https://www.gpg4win.org/</a>Kleopatra，将gpgtools导出的证书（勾选密码才是私钥证书，看生成文件的名称就可以，公开就是公钥，私密就是私钥）导入到Kleopatra中，然后右键选择–&gt;Backup secret keys,记得后缀一定是gpg，该工具支持三种格式，asc、gpg、pgp，默认也是acs，手工将文件后缀修改为gpg即可。</p><p>也可以重新生成了一个密钥对，打开软件，菜单–&gt;文件–&gt;新建密钥对–&gt;创建个人penPGP密钥对，创建好后记得点击“保存密钥副本”，以导出gpg证书文件，该工具支持三种格式，asc、gpg、pgp，默认也是acs，手工将文件后缀修改为gpg即可，如果此时忘记点击保留副本，也可以在证书列表页右键选择–&gt;Backup secret keys,记得后缀一定是gpg。</p></li><li class="lvl-2"><p>build.gradle<br>重点还是<code>io.codearte.nexus-staging</code>这个自动发布插件，不需要手工操作oss-sonatype的UI进行发布。</p></li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;io.spring.dependency-management&#x27;</span> version <span class="string">&#x27;1.0.10.RELEASE&#x27;</span></span><br><span class="line">    <span class="comment">//此处必须是java-library，如果是java则api方法不可用，api可以理解为就是compile，支持传递依赖</span></span><br><span class="line">    id <span class="string">&#x27;java-library&#x27;</span></span><br><span class="line">    <span class="comment">//发布插件</span></span><br><span class="line">    id <span class="string">&#x27;maven-publish&#x27;</span></span><br><span class="line">    <span class="comment">//签名插件</span></span><br><span class="line">    id <span class="string">&#x27;signing&#x27;</span></span><br><span class="line">    <span class="comment">//自动发布到maven中央仓库插件</span></span><br><span class="line">    <span class="comment">//https://github.com/Codearte/gradle-nexus-staging-plugin</span></span><br><span class="line">    id <span class="string">&#x27;io.codearte.nexus-staging&#x27;</span> version <span class="string">&#x27;0.22.0&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">group</span> = <span class="string">&#x27;com.hanqunfeng&#x27;</span></span><br><span class="line"><span class="comment">//SNAPSHOT版本是不支持发布到Maven中央仓库</span></span><br><span class="line">version = <span class="string">&#x27;1.0.3&#x27;</span></span><br><span class="line"><span class="keyword">sourceCompatibility</span> = <span class="string">&#x27;1.8&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">java &#123;</span><br><span class="line">    withJavadocJar()</span><br><span class="line">    withSourcesJar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">repositories</span> &#123;</span><br><span class="line">    maven &#123; url <span class="string">&#x27;https://maven.aliyun.com/repository/public/&#x27;</span> &#125;</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencyManagement &#123;</span><br><span class="line">    imports &#123; mavenBom(<span class="string">&quot;org.springframework.boot:spring-boot-dependencies:2.4.0&quot;</span>) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="comment">//lombok</span></span><br><span class="line">    compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">    annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//如果不希望传递依赖，则使用implementation，传递依赖则使用compile或者api，gradle7后将不再支持compile</span></span><br><span class="line">    <span class="comment">//注解相关</span></span><br><span class="line">    api <span class="string">&#x27;org.springframework.boot:spring-boot-autoconfigure&#x27;</span></span><br><span class="line">    api <span class="string">&#x27;org.springframework.boot:spring-boot-configuration-processor&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//json-jackson</span></span><br><span class="line">    api <span class="string">&#x27;com.fasterxml.jackson.core:jackson-databind&#x27;</span></span><br><span class="line">    api <span class="string">&#x27;com.fasterxml.jackson.datatype:jackson-datatype-jdk8&#x27;</span></span><br><span class="line">    api <span class="string">&#x27;com.fasterxml.jackson.datatype:jackson-datatype-jsr310&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//@Aspect</span></span><br><span class="line">    api <span class="string">&#x27;org.aspectj:aspectjweaver&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//Mono Flux</span></span><br><span class="line">    api <span class="string">&#x27;io.projectreactor:reactor-core&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//redis-template</span></span><br><span class="line">    api <span class="string">&#x27;org.springframework.data:spring-data-redis&#x27;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test &#123;</span><br><span class="line">    useJUnitPlatform()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// java编译的时候缺省状态下会因为中文字符而失败</span></span><br><span class="line">[compileJava, compileTestJava]*.<span class="keyword">options</span>*.encoding = <span class="string">&#x27;UTF-8&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发布插件</span></span><br><span class="line"><span class="comment"> * 参考：https://docs.gradle.org/6.6.1/userguide/publishing_maven.html#publishing_maven:resolved_dependencies</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">publishing &#123;</span><br><span class="line">    publications &#123;</span><br><span class="line">        mavenJava(MavenPublication) &#123;</span><br><span class="line">            groupId = <span class="keyword">project</span>.<span class="keyword">group</span></span><br><span class="line">            artifactId = <span class="keyword">project</span>.name</span><br><span class="line">            version = <span class="keyword">project</span>.version</span><br><span class="line">            <span class="comment">//如果不定义，则会按照以上默认值执行</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">from</span> components.java</span><br><span class="line"></span><br><span class="line">            pom &#123;</span><br><span class="line">                name = <span class="string">&#x27;redis-cache-annotation-reactive&#x27;</span></span><br><span class="line">                <span class="keyword">description</span> = <span class="string">&#x27;redis cache function annotation for webflux&#x27;</span></span><br><span class="line">                url = <span class="string">&#x27;https://blog.hanqunfeng.com&#x27;</span></span><br><span class="line">                licenses &#123;</span><br><span class="line">                    license &#123;</span><br><span class="line">                        name = <span class="string">&#x27;The Apache License, Version 2.0&#x27;</span></span><br><span class="line">                        url = <span class="string">&#x27;http://www.apache.org/licenses/LICENSE-2.0.txt&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                developers &#123;</span><br><span class="line">                    developer &#123;</span><br><span class="line">                        id = <span class="string">&#x27;hanqf&#x27;</span></span><br><span class="line">                        name = <span class="string">&#x27;han qunfeng&#x27;</span></span><br><span class="line">                        email = <span class="string">&#x27;qunfeng_han@126.com&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                scm &#123;</span><br><span class="line">                    connection = <span class="string">&#x27;scm:git:https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git&#x27;</span></span><br><span class="line">                    developerConnection = <span class="string">&#x27;scm:git:https://github.com:hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git&#x27;</span></span><br><span class="line">                    url = <span class="string">&#x27;https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            versionMapping &#123;</span><br><span class="line">                usage(<span class="string">&#x27;java-api&#x27;</span>) &#123;</span><br><span class="line">                    fromResolutionOf(<span class="string">&#x27;runtimeClasspath&#x27;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                usage(<span class="string">&#x27;java-runtime&#x27;</span>) &#123;</span><br><span class="line">                    fromResolutionResult()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        maven &#123;</span><br><span class="line">            <span class="comment">// 发布仓库配置，这里基于version后缀是否为SNAPSHOT来区分发布到release库还是snapshots库</span></span><br><span class="line">           <span class="comment">// def releasesRepoUrl = &quot;http://nexus.cxzh.ltd:8081/repository/maven-releases/&quot;</span></span><br><span class="line">           <span class="comment">// def snapshotsRepoUrl = &quot;http://nexus.cxzh.ltd:8081/repository/maven-snapshots/&quot;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">def</span> releasesRepoUrl = <span class="string">&quot;https://oss.sonatype.org/service/local/staging/deploy/maven2/&quot;</span></span><br><span class="line">            <span class="keyword">def</span> snapshotsRepoUrl = <span class="string">&quot;https://oss.sonatype.org/content/repositories/snapshots/&quot;</span></span><br><span class="line">            url = version.endsWith(<span class="string">&#x27;SNAPSHOT&#x27;</span>) ? snapshotsRepoUrl : releasesRepoUrl</span><br><span class="line"></span><br><span class="line">            <span class="comment">//认证用户和密码，在配置文件gradle.properties中配置</span></span><br><span class="line">            <span class="comment">//oss-sonatype的登录用户名和密码</span></span><br><span class="line">            credentials &#123;</span><br><span class="line">                username nexusUser</span><br><span class="line">                password nexusPassword</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.withType(JavaCompile) &#123;</span><br><span class="line">    <span class="keyword">options</span>.encoding = <span class="string">&#x27;UTF-8&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//javadoc，如果用jdk11，默认就支持中文</span></span><br><span class="line"><span class="comment">//查看可以配置的属性：https://docs.gradle.org/current/javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html</span></span><br><span class="line">tasks.withType(Javadoc) &#123;</span><br><span class="line">    <span class="keyword">options</span>.version = <span class="keyword">true</span></span><br><span class="line">    <span class="keyword">options</span>.author = <span class="keyword">true</span></span><br><span class="line">    <span class="keyword">options</span>.encoding = <span class="string">&quot;UTF-8&quot;</span></span><br><span class="line">    <span class="keyword">options</span>.charSet = <span class="string">&quot;UTF-8&quot;</span>  <span class="comment">//解决中文乱码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">javadoc &#123;</span><br><span class="line">    <span class="keyword">if</span>(JavaVersion.current().isJava9Compatible()) &#123;</span><br><span class="line">        <span class="keyword">options</span>.addBooleanOption(<span class="string">&#x27;html5&#x27;</span>, <span class="keyword">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (JavaVersion.current().isJava8Compatible()) &#123;</span><br><span class="line">        tasks.withType(Javadoc) &#123;</span><br><span class="line">            <span class="comment">// disable the crazy super-strict doclint tool in Java 8</span></span><br><span class="line">            <span class="comment">// noinspection SpellCheckingInspection</span></span><br><span class="line">            <span class="keyword">options</span>.addStringOption(<span class="string">&#x27;Xdoclint:none&#x27;</span>, <span class="string">&#x27;-quiet&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//签名，发布时会先执行签名</span></span><br><span class="line"><span class="comment">//参考：https://docs.gradle.org/current/userguide/signing_plugin.html</span></span><br><span class="line">signing &#123;</span><br><span class="line">    sign publishing.publications.mavenJava</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自动发布到maven中央仓库插件的配置信息</span></span><br><span class="line"><span class="comment">//参考：https://github.com/Codearte/gradle-nexus-staging-plugin</span></span><br><span class="line">nexusStaging &#123;</span><br><span class="line">    <span class="comment">//oss-sonatype的登录用户名和密码</span></span><br><span class="line">    username nexusUser</span><br><span class="line">    password nexusPassword</span><br><span class="line">    <span class="comment">//重试次数，默认是60次</span></span><br><span class="line">    numberOfRetries <span class="number">10</span></span><br><span class="line">    <span class="comment">//每次重试的间隔时间，单位毫秒，默认2000，按照官网的说明，执行发布时有延迟，需要等待响应，所以建议调整间隔时间，可以减少重试次数，我这里间隔20秒，大约重试1~2次即可完成</span></span><br><span class="line">    delayBetweenRetriesInMillis <span class="number">20000</span></span><br><span class="line"><span class="comment">//    packageGroup = &quot;com.hanqunfeng&quot; //optional if packageGroup == project.getGroup()</span></span><br><span class="line"><span class="comment">//    stagingProfileId = &quot;yourStagingProfileId&quot; //when not defined will be got from server using &quot;packageGroup&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>gradle.properties</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#gradle -PnexusUser=developer -PnexusPassword=developer clean publish</span><br><span class="line"># 注意参数要放到命令前面</span><br><span class="line"># 这里替换为自己的oss-sonatype的用户名和密码</span><br><span class="line">nexusUser=developer</span><br><span class="line">nexusPassword=developer</span><br><span class="line"></span><br><span class="line">#Disable maven-metadata.xml SHA256 and SHA512 upload warnings to Nexus</span><br><span class="line">#参考：https://github.com/gradle/gradle/issues/12355</span><br><span class="line">systemProp.org.gradle.internal.publish.checksums.insecure=true</span><br><span class="line"></span><br><span class="line">#签名信息。或者执行命令时携带参数，如：gradle -Psigning.secretKeyRingFile=/SECRET.gpg -Psigning.password=xxxxxxxx -Psigning.keyId=xxxxxxxx clean publish</span><br><span class="line"># 这里替换自己的签名信息</span><br><span class="line">signing.keyId=xxxxxxxx</span><br><span class="line">signing.password=xxxxxxxx</span><br><span class="line">signing.secretKeyRingFile=/SECRET.gpg</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>执行命令</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./gradlew clean publish closeAndReleaseRepository <span class="comment"># 部署到maven中央仓库，参数都配置在gradle.properties中</span></span><br><span class="line">./gradlew -PnexusUser=developer -PnexusPassword=developer -Psigning.secretKeyRingFile=/SECRET.gpg -Psigning.password=xxxxxxxx -Psigning.keyId=xxxxxxxx clean publish closeAndReleaseRepository <span class="comment"># 命令行携带参数</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;通过本文，你将知道如何将gradle构建的项目发布到Maven中央仓库&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;maven构建请看&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more&quot;&gt;发布Jar到Maven中央仓库–mvn&lt;/a&gt;。&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;前三个步骤与&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/#more&quot;&gt;发布Jar到Maven中央仓库–mvn&lt;/a&gt;相同，不在赘述。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="maven" scheme="https://blog.hanqunfeng.com/tags/maven/"/>
    
    <category term="gradle" scheme="https://blog.hanqunfeng.com/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>发布Jar到Maven中央仓库--mvn</title>
    <link href="https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/"/>
    <id>https://blog.hanqunfeng.com/2020/11/26/mvn-depoly-maven-center-repository/</id>
    <published>2020-11-26T13:30:05.000Z</published>
    <updated>2022-10-11T03:31:14.404Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">通过本文，你将知道如何将maven构建的项目发布到Maven中央仓库</li><li class="lvl-2">gradle构建请看<a href="https://blog.hanqunfeng.com/2020/11/27/gradle-depoly-maven-center-repository/">发布Jar到Maven中央仓库–gradle</a></li></ul><span id="more"></span><h2 id="一、将项目推送到远程仓库，如-Github或者Gitee">一、将项目推送到远程仓库，如 Github或者Gitee</h2><h2 id="二、注册-Sonatype-账户–就是一个JIRA">二、注册 Sonatype 账户–就是一个JIRA</h2><p>进入 <a href="https://issues.sonatype.org/secure/Dashboard.jspa">https://issues.sonatype.org/secure/Dashboard.jspa</a> 注册一个账号，邮箱要真实。</p><h2 id="三、登录-Sonatype-创建工单–每部署一个新项目就创建一个工单">三、登录 Sonatype 创建工单–每部署一个新项目就创建一个工单</h2><ul class="lvl-0"><li class="lvl-2"><p>登录后点击“新建”创建工单，如果没有显示“新建”菜单，可以直接请求“<a href="https://issues.sonatype.org/secure/CreateIssue.jspa?issuetype=21&amp;pid=10134%E2%80%9D">https://issues.sonatype.org/secure/CreateIssue.jspa?issuetype=21&amp;pid=10134”</a></p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Summary：工单摘要，随便给个名称</span><br><span class="line">Group Id：填写项目的Group Id</span><br><span class="line">Project URL：填写远程仓库的浏览器地址</span><br><span class="line">SCM url：填写下载项目的git地址</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>注意：Group Id：最好填写你拥有的域名，<a href="http://xn--hanqunfeng-jc6qx08avkfom0b15mpjv8q5b.com">比如我的域名是hanqunfeng.com</a>，这里就填写com.hanqunfeng，这样后面验证domain时会方便一些。我第一次就是不知道这个事情，<a href="http://xn--hanqf-ok2h04cp01bf1unk0c9w8d.org">所以随便填的hanqf.org</a>。</p></li><li class="lvl-2"><p>创建好工单后会收到两封邮件：</p><ul class="lvl-2"><li class="lvl-4"><p>第一封，通知你创建工单成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">hanqunfeng created OSSRH-62247:</span><br><span class="line">----------------------------------</span><br><span class="line"></span><br><span class="line">            Summary: reactive-redis-cache-annotation</span><br><span class="line">                Key: OSSRH-62247</span><br><span class="line">                URL: https://issues.sonatype.org/browse/OSSRH-62247</span><br><span class="line">            Project: Community Support - Open Source Project Repository Hosting</span><br><span class="line">        Issue Type: New Project</span><br><span class="line">            Reporter: hanqunfeng</span><br><span class="line">            Assignee: Joel Orlina</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reactive-redis-cache-annotation-spring-boot-starter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">This message was sent by Atlassian Jira</span><br><span class="line">(v8.5.7#805007)</span><br></pre></td></tr></table></figure></li><li class="lvl-4"><p>第二封邮件，要求你验证domain，两封邮件间隔大约5分钟。同时你在工单的注释中也能看到系统回复的同样的信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[ https://issues.sonatype.org/browse/OSSRH-62247?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]</span><br><span class="line"></span><br><span class="line">Central OSSRH updated OSSRH-62247:</span><br><span class="line">----------------------------------</span><br><span class="line">    Status: Waiting for Response  (was: Open)</span><br><span class="line"></span><br><span class="line">Do you own the domain hanqf.org? If so, please verify ownership via one of the following methods:</span><br><span class="line">* Add a TXT record to your DNS referencing this JIRA ticket: OSSRH-62247 (Fastest)</span><br><span class="line">* Setup a redirect to your Github page (if it does not already exist)</span><br><span class="line"></span><br><span class="line">If you do not own this domain, please read:</span><br><span class="line">http://central.sonatype.org/pages/choosing-your-coordinates.html</span><br><span class="line">You may also choose a groupId that reflects your project hosting, in this case, something like io.github.hanqunfeng or com.github.hanqunfeng</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; reactive-redis-cache-annotation</span><br><span class="line">&gt; -------------------------------</span><br><span class="line">&gt;</span><br><span class="line">&gt;                 Key: OSSRH-62247</span><br><span class="line">&gt;                 URL: https://issues.sonatype.org/browse/OSSRH-62247</span><br><span class="line">&gt;             Project: Community Support - Open Source Project Repository Hosting</span><br><span class="line">&gt;          Issue Type: New Project</span><br><span class="line">&gt;            Reporter: hanqunfeng</span><br><span class="line">&gt;            Assignee: Joel Orlina</span><br><span class="line">&gt;            Priority: Major</span><br><span class="line">&gt;</span><br><span class="line">&gt; reactive-redis-cache-annotation-spring-boot-starter</span><br></pre></td></tr></table></figure></li></ul></li><li class="lvl-2"><p>看邮件说明，如果是自己的域名，添加一条TXT record 是最快速的验证方式，刚好我有一个域名，于是修改了工单的Group Id，修改工单时需要填写注释，随便填就行。</p></li><li class="lvl-2"><p>然后去设置了DNS，一条TXT记录，key是工单号，我这里就是OSSRH-62247，值是工单地址，这里就是https://issues.sonatype.org/browse/OSSRH-62247，创建好后，在工单中添加一条注释</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I have change the group Id to com.hanqunfeng,and I own the domain hanqunfeng.com,and I have added a dns record TXT.</span><br></pre></td></tr></table></figure><p>其它验证方式我并未尝试。</p><ul class="lvl-0"><li class="lvl-2"><p>过一会你就会收到回复邮件，通知你验证完成，可以发布了，并且给出了发布地址。</p><ul class="lvl-2"><li class="lvl-4">注意这里是先发布到https://oss.sonatype.org，而不是maven中央仓库的地址。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[ https://issues.sonatype.org/browse/OSSRH-62247?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]</span><br><span class="line"></span><br><span class="line">Central OSSRH resolved OSSRH-62247.</span><br><span class="line">-----------------------------------</span><br><span class="line">    Resolution: Fixed</span><br><span class="line"></span><br><span class="line">com.hanqunfeng has been prepared, now user(s) hanqf can:</span><br><span class="line">* Deploy snapshot artifacts into repository https://oss.sonatype.org/content/repositories/snapshots</span><br><span class="line">* Deploy release artifacts into the staging repository https://oss.sonatype.org/service/local/staging/deploy/maven2</span><br><span class="line">* Release staged artifacts into repository &#x27;Releases&#x27;</span><br><span class="line"></span><br><span class="line">please comment on this ticket when you promoted your first release, thanks</span><br><span class="line"></span><br><span class="line">&gt; reactive-redis-cache-annotation</span><br><span class="line">&gt; -------------------------------</span><br><span class="line">&gt;</span><br><span class="line">&gt;                 Key: OSSRH-62247</span><br><span class="line">&gt;                 URL: https://issues.sonatype.org/browse/OSSRH-62247</span><br><span class="line">&gt;             Project: Community Support - Open Source Project Repository Hosting</span><br><span class="line">&gt;          Issue Type: New Project</span><br><span class="line">&gt;            Reporter: hanqunfeng</span><br><span class="line">&gt;            Assignee: Joel Orlina</span><br><span class="line">&gt;            Priority: Major</span><br><span class="line">&gt;</span><br><span class="line">&gt; reactive-redis-cache-annotation-spring-boot-starter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">This message was sent by Atlassian Jira</span><br><span class="line">(v8.5.7#805007)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="四、发布">四、发布</h2><ul class="lvl-0"><li class="lvl-2"><p>1.准备签名</p><ul class="lvl-2"><li class="lvl-6">可以使用工具创建密钥对<br>需要下载一个签名工具，我是mac电脑，下载的是<a href="https://gpgtools.org">https://gpgtools.org</a>。<br>安装后点击新建，按照提示创建一个密钥对即可，注意高级选项里有个过期时间，默认是3年。创建好后会主动提示你是否将公钥发布到key server，点击Upload Public key即可。也可以在创建后的证书列表页面邮件选择证书–&gt;Send Public Key To Key Server。</li></ul><p>导出证书时，勾选密码并设置密码就是私钥和公钥证书，不勾选密码就是公钥，看生成文件的名称就可以，公开就是公钥，私密就是私钥，格式都是asc，其实就是字符串，可以用记事本打开查看。</p><p>如果windows系统，可以下载<a href="https://www.gpg4win.org/">https://www.gpg4win.org/</a> ，使用方式差不多，最后点击“将公钥上传的目录服务”。</p><p>公钥发布到key server后要稍微等一会，大约10分钟吧，因为key server有多个，同步需要一些时间。<br>记住你创建密钥对时的密码，发布项目时要使用。</p><ul class="lvl-2"><li class="lvl-6"><p>也可以使用命令行创建密钥对，版本[gpg (GnuPG/MacGPG2) 2.2.24]</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建密钥对，按提示输入用户名称和邮箱地址</span></span><br><span class="line">gpg --generate-key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出密钥，hanqunfeng就是创建密钥对是的用户名，此处也可以使用邮箱</span></span><br><span class="line"><span class="comment"># 结果中第二行一长串的后8位就是keyId，比如：30FF8D58，gradle构建时会用到</span></span><br><span class="line">gpg --list-keys hanqunfeng</span><br><span class="line"><span class="comment"># 也可以直接通过id查询</span></span><br><span class="line">gpg --list-keys 30FF8D58</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传公钥到server key，默认上传到hkps://keys.openpgp.org，但是提示上传失败</span></span><br><span class="line"><span class="comment"># 看到网上的示例可以通过--keyserver指定上传的服务器地址，但是我这个版本[gpg (GnuPG/MacGPG2) 2.2.24]没有这个参数</span></span><br><span class="line"><span class="comment"># 使用 https://gpgtools.org 上传公钥就会成功</span></span><br><span class="line">gpg --send-keys 30FF8D58</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指纹</span></span><br><span class="line">gpg --fingerprint 30FF8D58</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除私钥，这里也可以使用用户名称或者邮箱，如果唯一的话</span></span><br><span class="line">gpg --delete-secret-keys 30FF8D58</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除公钥</span></span><br><span class="line">gpg --delete-keys 30FF8D58</span><br></pre></td></tr></table></figure></li></ul></li><li class="lvl-2"><p>2.settings.xml<br>配置 maven 的 settings.xml 文件，设置一个 server，里面添加 Sonatype 的账号和密码。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">    [...]</span><br><span class="line">    &lt;servers&gt;</span><br><span class="line">       [...]</span><br><span class="line">       &lt;server&gt;</span><br><span class="line">          &lt;id&gt;ossrh&lt;/id&gt;</span><br><span class="line">          &lt;username&gt;Sonatype账号&lt;/username&gt;</span><br><span class="line">          &lt;password&gt;Sonatype密码&lt;/password&gt;</span><br><span class="line">       &lt;/server&gt;</span><br><span class="line">    &lt;/servers&gt;</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>3.pom.xml，重点是后面几个plugin<br>这里重点说一下“nexus-staging-maven-plugin”这个插件，该插件会将我们发布到https://oss.sonatype.org的jar自动发布到maven中央仓库，如果没有这个插件，我们需要登录https://oss.sonatype.org，然后手工点击Staging Repositories ，找到你发布的包（GroupId开头的），然后点击close，再点击release。有说这种方式容易失败（我没有测试），推荐使用插件自动发布。</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.hanqunfeng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>reactive-redis-cache-annotation-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>redis-cache-annotation-reactive<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>redis cache function annotation for webflux<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://blog.hanqunfeng.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>The Apache License, Version 2.0<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">license</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>hanqf<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>hanqunfeng<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">email</span>&gt;</span>qunfeng_han@126.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">developer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">connection</span>&gt;</span>scm:git:https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git<span class="tag">&lt;/<span class="name">connection</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">developerConnection</span>&gt;</span>scm:git:https://github.com:hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git<span class="tag">&lt;/<span class="name">developerConnection</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">maven.compiler.encoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.projectreactor<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>reactor-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>$&#123;java.version&#125;<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-source<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--生成源代码的jar --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-javadoc<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--生成javadoc的jar --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--生成javadoc的html --&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>javadoc<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                            <span class="comment">&lt;!--不显示javadoc警告--&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">additionalOptions</span>&gt;</span>-Xdoclint:none<span class="tag">&lt;/<span class="name">additionalOptions</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">additionalJOption</span>&gt;</span>-Xdoclint:none<span class="tag">&lt;/<span class="name">additionalJOption</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- gpg plugin,用于签名认证 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-gpg-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>sign-artifacts<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>sign<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--staging puglin,用于自动执行发布阶段(免手动)--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.sonatype.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nexus-staging-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>true<span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">serverId</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">serverId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">nexusUrl</span>&gt;</span>https://oss.sonatype.org/<span class="tag">&lt;/<span class="name">nexusUrl</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">autoReleaseAfterClose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">autoReleaseAfterClose</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- release plugin,用于发布到release仓库部署插件 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-release-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/content/repositories/snapshots/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>ossrh<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://oss.sonatype.org/service/local/staging/deploy/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>4.执行命令</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mvn clean package <span class="comment"># 完成打包和测试</span></span><br><span class="line">mvn clean verify  <span class="comment"># 完成源码打包和javadoc打包，同时完成签名</span></span><br><span class="line">mvn clean deploy  <span class="comment"># 完成本地部署和maven中央仓库部署</span></span><br></pre></td></tr></table></figure><pre><code>执行过程中会提示你输入创建密钥对时的密码，如果不想人工参与，也可以使用如下方式（参考：http://maven.apache.org/plugins/maven-gpg-plugin/usage.html）- a.在执行命令时指定密码：    <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean deploy -Dgpg.passphrase=thephrase</span><br></pre></td></tr></table></figure>- b.setting.xml中创建一个server    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings&gt;</span><br><span class="line">[...]</span><br><span class="line">&lt;servers&gt;</span><br><span class="line">    [...]</span><br><span class="line">    &lt;server&gt;</span><br><span class="line">    &lt;id&gt;gpg.passphrase&lt;/id&gt;</span><br><span class="line">    &lt;passphrase&gt;clear or encrypted text&lt;/passphrase&gt;</span><br><span class="line">    &lt;/server&gt;</span><br><span class="line">&lt;/servers&gt;</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></code></pre><ul class="lvl-0"><li class="lvl-2"><p>5.执行成功后即说明发布到maven中央仓库成功了，过一会就会收到邮件</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[ https://issues.sonatype.org/browse/OSSRH-62247?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel ]</span><br><span class="line"></span><br><span class="line">Central OSSRH 更新了 OSSRH-62247:</span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">Central sync is activated for com.hanqunfeng. After you successfully release, your component will be published to Central, typically within 10 minutes, though updates to search.maven.org can take up to two hours.</span><br><span class="line"></span><br><span class="line">&gt; reactive-redis-cache-annotation</span><br><span class="line">&gt; -------------------------------</span><br><span class="line">&gt;</span><br><span class="line">&gt;                 关键字: OSSRH-62247</span><br><span class="line">&gt;                 URL: https://issues.sonatype.org/browse/OSSRH-62247</span><br><span class="line">&gt;                  项目: Community Support - Open Source Project Repository Hosting</span><br><span class="line">&gt;                问题类型: New Project</span><br><span class="line">&gt;                 报告人: hanqunfeng</span><br><span class="line">&gt;                 经办人: Joel Orlina</span><br><span class="line">&gt;                 优先级: 重要</span><br><span class="line">&gt;</span><br><span class="line">&gt; reactive-redis-cache-annotation-spring-boot-starter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">这条信息是由Atlassian Jira发送的</span><br><span class="line">(v8.5.7#805007)</span><br></pre></td></tr></table></figure><pre><code>提示你，大约10分钟后你就可以将依赖添加到项目中进行下载了，不过要通过search.maven.org检索到需要等待两个小时，毕竟更新索引也是需要时间的。另外，如果你确认发布是成功的，记得要回到工单添加个注释，如<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I&#x27;ve released Releases successfully.Thank you!</span><br></pre></td></tr></table></figure></code></pre><ul class="lvl-0"><li class="lvl-2"><p>6.更新部署<br>修改pom.xml中的版本号，重新执行mvn clean deploy即可。此时不会再收到sonatype发的邮件，依旧等待大约10分钟后你就可以将依赖添加到项目中进行下载了，同样search.maven.org检索到需要等待两个小时。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;通过本文，你将知道如何将maven构建的项目发布到Maven中央仓库&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;gradle构建请看&lt;a href=&quot;https://blog.hanqunfeng.com/2020/11/27/gradle-depoly-maven-center-repository/&quot;&gt;发布Jar到Maven中央仓库–gradle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="maven" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/maven/"/>
    
    
    <category term="maven" scheme="https://blog.hanqunfeng.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-WebFlux-Redis缓存注解</title>
    <link href="https://blog.hanqunfeng.com/2020/11/22/springboot-webflux-redis-annotation/"/>
    <id>https://blog.hanqunfeng.com/2020/11/22/springboot-webflux-redis-annotation/</id>
    <published>2020-11-22T13:30:05.000Z</published>
    <updated>2021-05-27T07:43:40.132Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">通过本文，你将知道如何在WebFlux项目中通过redis注解缓存方法的返回值;</li><li class="lvl-2">本项目基于springboot:2.4.0，jdk1.8，并使用Maven构建;</li><li class="lvl-2">代码地址:<a href="https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter">https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter</a></li></ul><span id="more"></span><h2 id="前言">前言</h2><p>最近在使用WebFlux时发现，SpringBoot提供的@Cacheable，@CachePut，@CacheEvict和@Caching注解不支持响应式方法，SpringBoot官方也没有提供响应式方法的缓存注解，看到网上的一些解决方案都是直接在方法代码中加入缓存数据的代码逻辑，这样虽然可以解决问题，但是代码侵入并不优雅，于是萌生自己写一个基于redis的响应式方法缓存注解的想法，本项目参考SpringBoot提供的@Cacheable，@CachePut，@CacheEvict和@Caching注解声明，但是只是实现了一些基本功能，可以满足绝大部分使用场景的要求，因为SpringBoot早晚会给出官方解决方案，在此之前，不妨一试。</p><h2 id="使用示例">使用示例</h2><ul class="lvl-0"><li class="lvl-2"><p>本项目已经发布到maven中央仓库，直接在项目中添加依赖即可。</p></li><li class="lvl-2"><p>本项目虽然基于springboot:2.4.0构建，但实际上springboot2.0+都可以使用。</p></li><li class="lvl-2"><p>maven依赖</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.hanqunfeng<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>reactive-redis-cache-annotation-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>gradle依赖</p></li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.hanqunfeng:reactive-redis-cache-annotation-spring-boot-starter:1.1.0&#x27;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时项目中可能还要添加其它依赖，以gradle举例</p></li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webflux，非必须，主要是面向响应式编程的，所以使用springboot大概率会使用webflux</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-webflux&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Spring Boot Redis 依赖，或者spring-boot-starter-data-redis-reactive，任选其一即可，注意要在配置文件中加入redis的配置</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-data-redis&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//redis lettuce连接池依赖，也可以使用jedis连接池，非必须，正式环境建议开启连接池</span></span><br><span class="line">implementation <span class="string">&#x27;org.apache.commons:commons-pool2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//aop 面向方面编程 支持@Aspect，非必须</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-aop&#x27;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>方法返回值必须是Mono或者Flux类型，使用方式与springboot提供的Cacheable等注解类似</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 缓存 cacheName和key支持EL表达式，实际key的名称是&quot;cacheName_key&quot;</span></span><br><span class="line"><span class="comment">* 缓存结果</span></span><br><span class="line"><span class="comment">* key:sysuser_find_lisi</span></span><br><span class="line"><span class="comment">* value:</span></span><br><span class="line"><span class="comment">* [</span></span><br><span class="line"><span class="comment">* &quot;com.example.model.SysUser&quot;</span></span><br><span class="line"><span class="comment">* &#123;</span></span><br><span class="line"><span class="comment">*    id:&quot;5c74a4e4-c4f2-4570-8735-761d7a570d36&quot;</span></span><br><span class="line"><span class="comment">*    username:&quot;lisi&quot;</span></span><br><span class="line"><span class="comment">*    password:&quot;$2a$10$PXoGXLwg05.5YO.QtZa46ONypBmiK59yfefvO1OGO8kYFwzOB.Os6&quot;</span></span><br><span class="line"><span class="comment">*    enable:true</span></span><br><span class="line"><span class="comment">* &#125;</span></span><br><span class="line"><span class="comment">* ]</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ReactiveRedisCacheable(cacheName = &quot;sysuser&quot;, key = &quot;&#x27;find_&#x27; + #username&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Mono&lt;SysUser&gt; <span class="title function_">findUserByUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sysUserRepository.findByUsername(username);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ReactiveRedisCacheable(cacheName = &quot;sysuser&quot;, key = &quot;all&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Flux&lt;SysUser&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sysUserRepository.findAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 删除缓存，allEntries = true 表示删除全部以&quot;cacheName_&quot;开头的缓存</span></span><br><span class="line"><span class="comment">* allEntries 默认false，此时需要指定key的值，表示删除指定的&quot;cacheName_key&quot;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ReactiveRedisCacheEvict(cacheName = &quot;sysuser&quot;, allEntries = true)</span></span><br><span class="line"><span class="keyword">public</span> Mono&lt;SysUser&gt; <span class="title function_">add</span><span class="params">(SysUser sysUser)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sysUserRepository.addSysUser(sysUser.getId(), sysUser.getUsername(), sysUser.getPassword(), sysUser.getEnable()).flatMap(data -&gt; sysUserRepository.findById(sysUser.getId()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 组合注解，用法与<span class="doctag">@Caching</span>类似</span></span><br><span class="line"><span class="comment">* 规则：</span></span><br><span class="line"><span class="comment">* 1.cacheables不能与cacheEvicts或者cachePuts同时存在，因为后者一定会执行方法主体，达不到调用缓存的目的，所以当cacheables存在时，后者即便指定也不执行</span></span><br><span class="line"><span class="comment">* 2.先执行cacheEvicts，再执行cachePuts</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ReactiveRedisCaching(</span></span><br><span class="line"><span class="meta">        evict = &#123;@ReactiveRedisCacheEvict(cacheName = &quot;sysuser&quot;, key = &quot;all&quot;)&#125;,</span></span><br><span class="line"><span class="meta">        put = &#123;@ReactiveRedisCachePut(cacheName = &quot;sysuser&quot;, key = &quot;&#x27;find_&#x27; + #sysUser.username&quot;)&#125;</span></span><br><span class="line"><span class="meta">)</span></span><br><span class="line"><span class="keyword">public</span> Mono&lt;SysUser&gt; <span class="title function_">update</span><span class="params">(SysUser sysUser)</span> &#123;</span><br><span class="line">    Mono&lt;SysUser&gt; save = sysUserRepository.save(sysUser);</span><br><span class="line">    <span class="keyword">return</span> save;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 删除指定的&quot;cacheName_key&quot;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@ReactiveRedisCacheEvict(cacheName = &quot;sysuser&quot;, key=&quot;&#x27;find_&#x27; + #username&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Mono&lt;Boolean&gt; <span class="title function_">deleteByUserName</span><span class="params">(String username)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sysUserRepository.deleteByUsername(username);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="RedisTemplate">RedisTemplate</h3><ul class="lvl-0"><li class="lvl-2"><p>如果使用时没有创建RedisTemplate，本项目中提供了一个默认的RedisTemplate，基于jackson序列化，支持jdk8的LocalDate和LocalDateTime</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(value = RedisTemplate.class)</span></span><br><span class="line"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> &#123;</span><br><span class="line"></span><br><span class="line">    log.debug(<span class="string">&quot;ReactiveRedisConfig RedisTemplate&quot;</span>);</span><br><span class="line">    <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">    objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">    <span class="comment">//objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span></span><br><span class="line">    objectMapper.activateDefaultTyping(objectMapper.getPolymorphicTypeValidator(), ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.WRAPPER_ARRAY);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//LocalDateTime系列序列化和反序列化模块，继承自jsr310，我们在这里修改了日期格式</span></span><br><span class="line">    <span class="type">JavaTimeModule</span> <span class="variable">javaTimeModule</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JavaTimeModule</span>();</span><br><span class="line">    <span class="comment">//序列化</span></span><br><span class="line">    javaTimeModule.addSerializer(LocalDateTime.class, <span class="keyword">new</span> <span class="title class_">LocalDateTimeSerializer</span>(</span><br><span class="line">            DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)));</span><br><span class="line">    javaTimeModule.addSerializer(LocalDate.class,</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">LocalDateSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)));</span><br><span class="line">    javaTimeModule.addSerializer(LocalTime.class,</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">LocalTimeSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));</span><br><span class="line">    <span class="comment">//反序列化</span></span><br><span class="line">    javaTimeModule.addDeserializer(LocalDateTime.class, <span class="keyword">new</span> <span class="title class_">LocalDateTimeDeserializer</span>(</span><br><span class="line">            DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)));</span><br><span class="line">    javaTimeModule.addDeserializer(LocalDate.class,</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">LocalDateDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)));</span><br><span class="line">    javaTimeModule.addDeserializer(LocalTime.class,</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">LocalTimeDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册模块</span></span><br><span class="line">    objectMapper.registerModule(javaTimeModule);</span><br><span class="line"></span><br><span class="line">    Jackson2JsonRedisSerializer&lt;Object&gt; serializer = <span class="keyword">new</span> <span class="title class_">Jackson2JsonRedisSerializer</span>&lt;&gt;(Object.class);</span><br><span class="line">    serializer.setObjectMapper(objectMapper);</span><br><span class="line"></span><br><span class="line">    RedisTemplate&lt;String, Object&gt; redisTemplate = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">    redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">    redisTemplate.setKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">    redisTemplate.setValueSerializer(serializer);</span><br><span class="line">    redisTemplate.setHashKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">    redisTemplate.setHashValueSerializer(serializer);</span><br><span class="line">    redisTemplate.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> redisTemplate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>以下为源码说明</h1><h2 id="源码依赖">源码依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jdk8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-jsr310<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.projectreactor<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>reactor-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自定义Redis缓存相关注解">自定义Redis缓存相关注解</h2><ul class="lvl-0"><li class="lvl-2"><p>只支持方法返回类型为Mono或者Flux</p></li><li class="lvl-2"><p>其它返回类型时请使用springboot提供的Cacheable，CachePut，CacheEvict和Caching</p></li><li class="lvl-2"><p>使用方式与springboot提供的Cacheable，CachePut，CacheEvict和Caching类似，具体看本文上面的示例</p></li></ul><h3 id="ReactiveRedisCacheable">ReactiveRedisCacheable</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;redis方法缓存注解&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 18:28.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ReactiveRedisCacheable &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key，key为cacheName+&quot;_&quot;+key</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    String <span class="title function_">key</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key分组，会做为缓存key的前缀+&quot;_&quot;</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    String <span class="title function_">cacheName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存过期时间，单位秒，默认24小时</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="type">long</span> <span class="title function_">timeout</span><span class="params">()</span> <span class="keyword">default</span> <span class="number">24</span> * <span class="number">3600L</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ReactiveRedisCacheEvict">ReactiveRedisCacheEvict</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;redis清除缓存注解&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 22:26.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ReactiveRedisCacheEvict &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key，如果cacheName不为空，则key为cacheName+&quot;_&quot;+key</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">key</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key分组，会做为缓存key的前缀+&quot;_&quot;</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">cacheName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否删除cacheName下全部缓存数据，</span></span><br><span class="line"><span class="comment">     * true时cacheName不能为空，此时即便指定了key值，也会删除cacheName下全部缓存</span></span><br><span class="line"><span class="comment">     * false时key值不能为空</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">allEntries</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调用清除缓存的时机，true:执行方法前，false:执行方法后</span></span><br><span class="line"><span class="comment">     * 如果是false，则方法执行过程中发生异常，则不会清除缓存</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">beforeInvocation</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ReactiveRedisCachePut">ReactiveRedisCachePut</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;执行完方法更新缓存&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 23:15.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ReactiveRedisCachePut &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key，key为cacheName+&quot;_&quot;+key</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">key</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存key分组，会做为缓存key的前缀+&quot;_&quot;</span></span><br><span class="line"><span class="comment">     * 支持EL表达式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">cacheName</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存过期时间，单位秒，默认24小时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">long</span> <span class="title function_">timeout</span><span class="params">()</span> <span class="keyword">default</span> <span class="number">24</span> * <span class="number">3600L</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ReactiveRedisCaching">ReactiveRedisCaching</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;组合&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 23:24.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ReactiveRedisCaching &#123;</span><br><span class="line"></span><br><span class="line">    ReactiveRedisCacheable[] cacheable() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    ReactiveRedisCachePut[] put() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    ReactiveRedisCacheEvict[] evict() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="AOP–ReactiveRedisCacheAspect">AOP–ReactiveRedisCacheAspect</h2><ul class="lvl-0"><li class="lvl-2"><p>支持方法返回类型为Mono或者Flux</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Flux;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicBoolean;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;redis缓存aop&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/21 16:16.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">//标识是一个Aspect代理类</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="comment">//如果有多个切面拦截相同的切点，可以用@Order指定执行顺序</span></span><br><span class="line"><span class="comment">//@Order(1)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReactiveRedisCacheAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.hanqunfeng.reactive.redis.cache.aop.ReactiveRedisCacheable)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cacheablePointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.hanqunfeng.reactive.redis.cache.aop.ReactiveRedisCacheEvict)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cacheEvictPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.hanqunfeng.reactive.redis.cache.aop.ReactiveRedisCachePut)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cachePutPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(com.hanqunfeng.reactive.redis.cache.aop.ReactiveRedisCaching)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cachingPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//环绕通知,一般不建议使用，可以通过@Before和@AfterReturning实现</span></span><br><span class="line">    <span class="comment">//但是响应式方法只能通过环绕通知实现aop，因为其它通知会导致不再同一个线程执行</span></span><br><span class="line">    <span class="meta">@Around(&quot;cacheablePointCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">cacheableAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisCacheAspect cacheableAround....&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) proceedingJoinPoint.getSignature();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">        <span class="type">String</span> <span class="variable">returnTypeName</span> <span class="operator">=</span> method.getReturnType().getSimpleName();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">ReactiveRedisCacheable</span> <span class="variable">annotation</span> <span class="operator">=</span> method.getAnnotation(ReactiveRedisCacheable.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">cacheName</span> <span class="operator">=</span> annotation.cacheName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> annotation.key();</span><br><span class="line">        <span class="type">long</span> <span class="variable">timeout</span> <span class="operator">=</span> annotation.timeout();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//转换EL表达式</span></span><br><span class="line">        cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">        key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">redis_key</span> <span class="operator">=</span> cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasKey</span> <span class="operator">=</span> redisTemplate.hasKey(redis_key);</span><br><span class="line">        <span class="keyword">if</span> (hasKey) &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> redisTemplate.opsForValue().get(redis_key);</span><br><span class="line">            <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> Flux.fromIterable((List) o);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> Mono.just(o);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//实际执行的方法</span></span><br><span class="line">            <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line">            <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ((Flux) proceed).collectList().doOnNext(list -&gt; redisTemplate.opsForValue().set(redis_key, list, timeout, TimeUnit.SECONDS)).flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ((Mono) proceed).doOnNext(obj -&gt; redisTemplate.opsForValue().set(redis_key, obj, timeout, TimeUnit.SECONDS));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> proceed;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;cacheEvictPointCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">cacheEvictAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisCacheAspect cacheEvictAround....&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) proceedingJoinPoint.getSignature();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">        <span class="type">String</span> <span class="variable">returnTypeName</span> <span class="operator">=</span> method.getReturnType().getSimpleName();</span><br><span class="line"></span><br><span class="line">        <span class="type">ReactiveRedisCacheEvict</span> <span class="variable">annotation</span> <span class="operator">=</span> method.getAnnotation(ReactiveRedisCacheEvict.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">cacheName</span> <span class="operator">=</span> annotation.cacheName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> annotation.key();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">allEntries</span> <span class="operator">=</span> annotation.allEntries();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">beforeInvocation</span> <span class="operator">=</span> annotation.beforeInvocation();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//转换EL表达式</span></span><br><span class="line">        cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">        key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行方法前清除缓存</span></span><br><span class="line">        <span class="keyword">if</span> (beforeInvocation) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//清除全部缓存</span></span><br><span class="line">            deleteRedisCache(cacheName, key, allEntries);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//实际执行的方法</span></span><br><span class="line">            <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line">            <span class="keyword">return</span> proceed;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="comment">//成功执行方法后清除缓存</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//实际执行的方法</span></span><br><span class="line">            <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">cacheNameTemp</span> <span class="operator">=</span> cacheName;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">keyTemp</span> <span class="operator">=</span> key;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ((Flux) proceed).collectList().doOnNext(list -&gt; &#123;</span><br><span class="line">                    <span class="comment">//清除全部缓存</span></span><br><span class="line">                    deleteRedisCache(cacheNameTemp, keyTemp, allEntries);</span><br><span class="line">                &#125;).flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ((Mono) proceed).doOnNext(obj -&gt; &#123;</span><br><span class="line">                    <span class="comment">//清除全部缓存</span></span><br><span class="line">                    deleteRedisCache(cacheNameTemp, keyTemp, allEntries);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> proceed;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;cachePutPointCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">cachePutAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisCacheAspect cachePutAround....&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) proceedingJoinPoint.getSignature();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">        <span class="type">String</span> <span class="variable">returnTypeName</span> <span class="operator">=</span> method.getReturnType().getSimpleName();</span><br><span class="line"></span><br><span class="line">        <span class="type">ReactiveRedisCachePut</span> <span class="variable">annotation</span> <span class="operator">=</span> method.getAnnotation(ReactiveRedisCachePut.class);</span><br><span class="line">        <span class="type">String</span> <span class="variable">cacheName</span> <span class="operator">=</span> annotation.cacheName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> annotation.key();</span><br><span class="line">        <span class="type">long</span> <span class="variable">timeout</span> <span class="operator">=</span> annotation.timeout();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//转换EL表达式</span></span><br><span class="line">        cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">        key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">redis_key</span> <span class="operator">=</span> cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">hasKey</span> <span class="operator">=</span> redisTemplate.hasKey(redis_key);</span><br><span class="line">        <span class="keyword">if</span> (hasKey) &#123;</span><br><span class="line">            redisTemplate.delete(redis_key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//实际执行的方法</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line">        <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> ((Flux) proceed).collectList().doOnNext(list -&gt; redisTemplate.opsForValue().set(redis_key, list, timeout, TimeUnit.SECONDS)).flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> ((Mono) proceed).doOnNext(obj -&gt; redisTemplate.opsForValue().set(redis_key, obj, timeout, TimeUnit.SECONDS));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> proceed;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;cachingPointCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">cachingAround</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisCacheAspect cachingAround....&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) proceedingJoinPoint.getSignature();</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">        <span class="type">String</span> <span class="variable">returnTypeName</span> <span class="operator">=</span> method.getReturnType().getSimpleName();</span><br><span class="line"></span><br><span class="line">        <span class="type">ReactiveRedisCaching</span> <span class="variable">annotation</span> <span class="operator">=</span> method.getAnnotation(ReactiveRedisCaching.class);</span><br><span class="line"></span><br><span class="line">        ReactiveRedisCacheEvict[] cacheEvicts = annotation.evict();</span><br><span class="line">        ReactiveRedisCachePut[] cachePuts = annotation.put();</span><br><span class="line">        ReactiveRedisCacheable[] cacheables = annotation.cacheable();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//规则：</span></span><br><span class="line">        <span class="comment">//1.cacheables不能与cacheEvicts或者cachePuts同时存在，因为后者一定会执行方法主体，达不到调用缓存的目的，所以当cacheables存在时，后者即便指定也不执行</span></span><br><span class="line">        <span class="comment">//2.先执行cacheEvicts，再执行cachePuts</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cacheables.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            Map&lt;String, Long&gt; key_map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            List&lt;String&gt; key_list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            Arrays.stream(cacheables).forEach(cacheable -&gt; &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">cacheName</span> <span class="operator">=</span> cacheable.cacheName();</span><br><span class="line">                <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> cacheable.key();</span><br><span class="line">                <span class="type">long</span> <span class="variable">timeout</span> <span class="operator">=</span> cacheable.timeout();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//转换EL表达式</span></span><br><span class="line">                cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">                key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">                <span class="type">String</span> <span class="variable">redis_key</span> <span class="operator">=</span> cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line"></span><br><span class="line">                key_map.put(redis_key, timeout);</span><br><span class="line">                key_list.add(redis_key);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="type">AtomicBoolean</span> <span class="variable">isAllKeyHas</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicBoolean</span>(<span class="literal">true</span>);</span><br><span class="line">            key_list.forEach(key -&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (!redisTemplate.hasKey(key)) &#123;</span><br><span class="line">                    isAllKeyHas.set(<span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//全部key都有值，则直接返回缓存</span></span><br><span class="line">            <span class="keyword">if</span> (isAllKeyHas.get()) &#123;</span><br><span class="line">                <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> redisTemplate.opsForValue().get(key_list.get(<span class="number">0</span>));</span><br><span class="line">                <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Flux.fromIterable((List) o);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> Mono.just(o);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> o;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//实际执行的方法</span></span><br><span class="line">                <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Flux) proceed).collectList()</span><br><span class="line">                            .doOnNext(list -&gt; key_map.forEach((key, val) -&gt; redisTemplate.opsForValue().set(key, list, val, TimeUnit.SECONDS)))</span><br><span class="line">                            .flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Mono) proceed)</span><br><span class="line">                            .doOnNext(obj -&gt; key_map.forEach((key, val) -&gt; redisTemplate.opsForValue().set(key, obj, val, TimeUnit.SECONDS)));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> proceed;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Map&lt;String, Boolean&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">if</span> (cacheEvicts.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                Arrays.stream(cacheEvicts).forEach(cacheEvict -&gt; &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">cacheName</span> <span class="operator">=</span> cacheEvict.cacheName();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> cacheEvict.key();</span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">allEntries</span> <span class="operator">=</span> cacheEvict.allEntries();</span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">beforeInvocation</span> <span class="operator">=</span> cacheEvict.beforeInvocation();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//转换EL表达式</span></span><br><span class="line">                    cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">                    key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (beforeInvocation) &#123; <span class="comment">//执行方法前清除缓存</span></span><br><span class="line">                        <span class="comment">//清除全部缓存</span></span><br><span class="line">                        deleteRedisCache(cacheName, key, allEntries);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123; <span class="comment">//成功执行方法后清除缓存，先保存到map中</span></span><br><span class="line">                        <span class="comment">//清除全部缓存</span></span><br><span class="line">                        <span class="keyword">if</span> (allEntries) &#123;</span><br><span class="line">                            map.put(cacheName, <span class="literal">true</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            map.put(cacheName + <span class="string">&quot;_&quot;</span> + key, <span class="literal">false</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//实际执行的方法</span></span><br><span class="line">            <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (cachePuts.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                Map&lt;String, Long&gt; key_map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">                Arrays.stream(cachePuts).forEach(cachePut -&gt; &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">cacheName</span> <span class="operator">=</span> cachePut.cacheName();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> cachePut.key();</span><br><span class="line">                    <span class="type">long</span> <span class="variable">timeout</span> <span class="operator">=</span> cachePut.timeout();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//转换EL表达式</span></span><br><span class="line">                    cacheName = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, cacheName);</span><br><span class="line">                    key = (String) AspectSupportUtils.getKeyValue(proceedingJoinPoint, key);</span><br><span class="line"></span><br><span class="line">                    <span class="type">String</span> <span class="variable">redis_key</span> <span class="operator">=</span> cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line"></span><br><span class="line">                    key_map.put(redis_key, timeout);</span><br><span class="line"></span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">hasKey</span> <span class="operator">=</span> redisTemplate.hasKey(redis_key);</span><br><span class="line">                    <span class="keyword">if</span> (hasKey) &#123;</span><br><span class="line">                        redisTemplate.delete(redis_key);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Flux) proceed).collectList()</span><br><span class="line">                            .doOnNext(list -&gt; &#123;</span><br><span class="line">                                <span class="comment">//执行方法后清除缓存</span></span><br><span class="line">                                <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    map.forEach((key, val) -&gt; &#123;</span><br><span class="line">                                        deleteRedisCache(key, val);</span><br><span class="line">                                    &#125;);</span><br><span class="line">                                &#125;</span><br><span class="line">                                key_map.forEach((key, val) -&gt; redisTemplate.opsForValue().set(key, list, val, TimeUnit.SECONDS));</span><br><span class="line">                            &#125;)</span><br><span class="line">                            .flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Mono) proceed)</span><br><span class="line">                            .doOnNext(obj -&gt; &#123;</span><br><span class="line">                                <span class="comment">//执行方法后清除缓存</span></span><br><span class="line">                                <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                    map.forEach((key, val) -&gt; &#123;</span><br><span class="line">                                        deleteRedisCache(key, val);</span><br><span class="line">                                    &#125;);</span><br><span class="line">                                &#125;</span><br><span class="line">                                key_map.forEach((key, val) -&gt; redisTemplate.opsForValue().set(key, obj, val, TimeUnit.SECONDS));</span><br><span class="line">                            &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> proceed;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Flux&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Flux) proceed).collectList().doOnNext(list -&gt; &#123;</span><br><span class="line">                        <span class="comment">//执行方法后清除缓存</span></span><br><span class="line">                        <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            map.forEach((key, val) -&gt; &#123;</span><br><span class="line">                                deleteRedisCache(key, val);</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;).flatMapMany(list -&gt; Flux.fromIterable((List) list));</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (returnTypeName.equals(<span class="string">&quot;Mono&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ((Mono) proceed).doOnNext(obj -&gt; &#123;</span><br><span class="line">                        <span class="comment">//执行方法后清除缓存</span></span><br><span class="line">                        <span class="keyword">if</span> (map.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            map.forEach((key, val) -&gt; &#123;</span><br><span class="line">                                deleteRedisCache(key, val);</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> proceed;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">deleteRedisCache</span><span class="params">(String key, <span class="type">boolean</span> clearAll)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (clearAll) &#123;</span><br><span class="line">            <span class="type">Set</span> <span class="variable">keys</span> <span class="operator">=</span> redisTemplate.keys(key + <span class="string">&quot;_*&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!keys.isEmpty()) &#123;</span><br><span class="line">                redisTemplate.delete(keys);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (redisTemplate.hasKey(key)) &#123;</span><br><span class="line">                redisTemplate.delete(key);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">deleteRedisCache</span><span class="params">(String cacheName, String key, <span class="type">boolean</span> clearAll)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">redis_key</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (clearAll) &#123;</span><br><span class="line">            redis_key = cacheName + <span class="string">&quot;_*&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            redis_key = cacheName + <span class="string">&quot;_&quot;</span> + key;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        deleteRedisCache(redis_key, clearAll);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注解属性支持EL表达式的工具类">注解属性支持EL表达式的工具类</h2><h3 id="AspectSupportUtils">AspectSupportUtils</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.interceptor.SimpleKeyGenerator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.expression.AnnotatedElementKey;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.EvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AspectSupportUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">ExpressionEvaluator</span> <span class="variable">evaluator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExpressionEvaluator</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getKeyValue</span><span class="params">(JoinPoint joinPoint, String keyExpression)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(keyExpression.contains(<span class="string">&quot;#&quot;</span>) || keyExpression.contains(<span class="string">&quot;&#x27;&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> getKeyValue(joinPoint.getTarget(), joinPoint.getArgs(), joinPoint.getTarget().getClass(),</span><br><span class="line">                    ((MethodSignature) joinPoint.getSignature()).getMethod(), keyExpression);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> keyExpression;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">getKeyValue</span><span class="params">(Object object, Object[] args, Class&lt;?&gt; clazz, Method method,</span></span><br><span class="line"><span class="params">                                      String keyExpression)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(keyExpression)) &#123;</span><br><span class="line">            <span class="type">EvaluationContext</span> <span class="variable">evaluationContext</span> <span class="operator">=</span> evaluator.createEvaluationContext(object, clazz, method, args);</span><br><span class="line">            <span class="type">AnnotatedElementKey</span> <span class="variable">methodKey</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotatedElementKey</span>(method, clazz);</span><br><span class="line">            <span class="keyword">return</span> evaluator.key(keyExpression, methodKey, evaluationContext);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SimpleKeyGenerator.generateKey(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ExpressionEvaluator">ExpressionEvaluator</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.aop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.support.AopUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.expression.AnnotatedElementKey;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.expression.CachedExpressionEvaluator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.expression.MethodBasedEvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.DefaultParameterNameDiscoverer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.ParameterNameDiscoverer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.EvaluationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.expression.Expression;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExpressionEvaluator</span> <span class="keyword">extends</span> <span class="title class_">CachedExpressionEvaluator</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ParameterNameDiscoverer</span> <span class="variable">paramNameDiscoverer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultParameterNameDiscoverer</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;ExpressionKey, Expression&gt; conditionCache = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;(<span class="number">64</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;AnnotatedElementKey, Method&gt; targetMethodCache = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;(<span class="number">64</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> EvaluationContext <span class="title function_">createEvaluationContext</span><span class="params">(Object object, Class&lt;?&gt; targetClass, Method method,</span></span><br><span class="line"><span class="params">                                                     Object[] args)</span> &#123;</span><br><span class="line">        <span class="type">Method</span> <span class="variable">targetMethod</span> <span class="operator">=</span> getTargetMethod(targetClass, method);</span><br><span class="line">        <span class="type">ExpressionRootObject</span> <span class="variable">root</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ExpressionRootObject</span>(object, args);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MethodBasedEvaluationContext</span>(root, targetMethod, args, <span class="built_in">this</span>.paramNameDiscoverer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">key</span><span class="params">(String conditionExpression, AnnotatedElementKey elementKey, EvaluationContext evalContext)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getExpression(<span class="built_in">this</span>.conditionCache, elementKey, conditionExpression).getValue(evalContext);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Method <span class="title function_">getTargetMethod</span><span class="params">(Class&lt;?&gt; targetClass, Method method)</span> &#123;</span><br><span class="line">        <span class="type">AnnotatedElementKey</span> <span class="variable">methodKey</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotatedElementKey</span>(method, targetClass);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">targetMethod</span> <span class="operator">=</span> <span class="built_in">this</span>.targetMethodCache.get(methodKey);</span><br><span class="line">        <span class="keyword">if</span> (targetMethod == <span class="literal">null</span>) &#123;</span><br><span class="line">            targetMethod = AopUtils.getMostSpecificMethod(method, targetClass);</span><br><span class="line">            <span class="keyword">if</span> (targetMethod == <span class="literal">null</span>) &#123;</span><br><span class="line">                targetMethod = method;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">this</span>.targetMethodCache.put(methodKey, targetMethod);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> targetMethod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">ExpressionRootObject</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object object;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object[] args;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ExpressionRootObject</span><span class="params">(Object object, Object[] args)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.object = object;</span><br><span class="line">            <span class="built_in">this</span>.args = args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">getobject</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> object;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Object[] getArgs() &#123;</span><br><span class="line">            <span class="keyword">return</span> args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="本项目提供了自动配置类，开启Aspect支持同时提供RedisTemplate">本项目提供了自动配置类，开启Aspect支持同时提供RedisTemplate</h2><ul class="lvl-0"><li class="lvl-2"><p>支持LocalDate和LocalDateTime的序列化和反序列化</p></li><li class="lvl-2"><p>存储key为字符串，值为json</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqunfeng.reactive.redis.cache.config;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonAutoDetect;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonTypeInfo;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.PropertyAccessor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.datatype.jsr310.ser.LocalTimeSerializer;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.EnableAspectJAutoProxy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/22 15:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;org.hanqf.reactive.redis.cache&quot;)</span></span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReactiveRedisConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认日期时间格式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_DATE_TIME_FORMAT</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认日期格式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_DATE_FORMAT</span> <span class="operator">=</span> <span class="string">&quot;yyyy-MM-dd&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认时间格式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFAULT_TIME_FORMAT</span> <span class="operator">=</span> <span class="string">&quot;HH:mm:ss&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean(value = RedisTemplate.class)</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> &#123;</span><br><span class="line"></span><br><span class="line">        log.debug(<span class="string">&quot;ReactiveRedisConfig RedisTemplate&quot;</span>);</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">objectMapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        <span class="comment">//objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span></span><br><span class="line">        objectMapper.activateDefaultTyping(objectMapper.getPolymorphicTypeValidator(), ObjectMapper.DefaultTyping.NON_FINAL, JsonTypeInfo.As.WRAPPER_ARRAY);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//LocalDateTime系列序列化和反序列化模块，继承自jsr310，我们在这里修改了日期格式</span></span><br><span class="line">        <span class="type">JavaTimeModule</span> <span class="variable">javaTimeModule</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JavaTimeModule</span>();</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        javaTimeModule.addSerializer(LocalDateTime.class, <span class="keyword">new</span> <span class="title class_">LocalDateTimeSerializer</span>(</span><br><span class="line">                DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)));</span><br><span class="line">        javaTimeModule.addSerializer(LocalDate.class,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">LocalDateSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)));</span><br><span class="line">        javaTimeModule.addSerializer(LocalTime.class,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">LocalTimeSerializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));</span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        javaTimeModule.addDeserializer(LocalDateTime.class, <span class="keyword">new</span> <span class="title class_">LocalDateTimeDeserializer</span>(</span><br><span class="line">                DateTimeFormatter.ofPattern(DEFAULT_DATE_TIME_FORMAT)));</span><br><span class="line">        javaTimeModule.addDeserializer(LocalDate.class,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">LocalDateDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_DATE_FORMAT)));</span><br><span class="line">        javaTimeModule.addDeserializer(LocalTime.class,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">LocalTimeDeserializer</span>(DateTimeFormatter.ofPattern(DEFAULT_TIME_FORMAT)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注册模块</span></span><br><span class="line">        objectMapper.registerModule(javaTimeModule);</span><br><span class="line"></span><br><span class="line">        Jackson2JsonRedisSerializer&lt;Object&gt; serializer = <span class="keyword">new</span> <span class="title class_">Jackson2JsonRedisSerializer</span>&lt;&gt;(Object.class);</span><br><span class="line">        serializer.setObjectMapper(objectMapper);</span><br><span class="line"></span><br><span class="line">        RedisTemplate&lt;String, Object&gt; redisTemplate = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">        redisTemplate.setKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        redisTemplate.setValueSerializer(serializer);</span><br><span class="line">        redisTemplate.setHashKeySerializer(<span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>());</span><br><span class="line">        redisTemplate.setHashValueSerializer(serializer);</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;通过本文，你将知道如何在WebFlux项目中通过redis注解缓存方法的返回值;&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本项目基于springboot:2.4.0，jdk1.8，并使用Maven构建;&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter&quot;&gt;https://github.com/hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="redis" scheme="https://blog.hanqunfeng.com/tags/redis/"/>
    
    <category term="webflux" scheme="https://blog.hanqunfeng.com/tags/webflux/"/>
    
    <category term="reactive" scheme="https://blog.hanqunfeng.com/tags/reactive/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot-OAuth2-JWT-ClientServer</title>
    <link href="https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-clientserver/"/>
    <id>https://blog.hanqunfeng.com/2020/11/15/springboot-oauth2-jwt-clientserver/</id>
    <published>2020-11-15T13:30:05.000Z</published>
    <updated>2021-05-27T07:43:24.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT的客户端服务器</li><li class="lvl-2">本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建</li><li class="lvl-2">代码地址:<a href="https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48">https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48</a></li></ul><span id="more"></span><h2 id="依赖">依赖</h2><ul class="lvl-0"><li class="lvl-2"><p>springboot官方提供了支持</p></li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-web&#x27;</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-oauth2-client&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本项目中使用了lombok简少代码量，非必须依赖</span></span><br><span class="line">compileOnly <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br><span class="line">annotationProcessor <span class="string">&#x27;org.projectlombok:lombok&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="WebSecurityConfig">WebSecurityConfig</h2><ul class="lvl-0"><li class="lvl-2"><p>springboot没有为client-server设置独立的注解和配置类，而是把这部分功能整合到了spring-security中</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientdemo2.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientdemo2.exception.CustomException;</span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientdemo2.security.CustomAccessDeniedHandler;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.client.RestTemplateCustomizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.ClientHttpRequestInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.client.ClientHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.WebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.JdbcOAuth2AuthorizedClientService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.OAuth2AuthorizedClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.OAuth2AuthorizedClientService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/9 18:11.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;oauth2.server.logout&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String oauth2_server_logout;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CustomAccessDeniedHandler customAccessDeniedHandler;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 指定不拦截的路径规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//设置不需要拦截的路径，也就是不需要认证的路径</span></span><br><span class="line">        web.ignoring().antMatchers(<span class="string">&quot;/webjars/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//logout跳转到认证服务器的logout</span></span><br><span class="line">        http.logout().logoutSuccessUrl(oauth2_server_logout);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置认证规则</span></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .mvcMatchers(<span class="string">&quot;/oauth/login&quot;</span>).permitAll()</span><br><span class="line">                <span class="comment">////所有路径都需要登录</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">////需要具备相应的角色才能访问，这里返回的权限是scope，所以还是使用rbac验证吧</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/user/**&quot;</span>, <span class="string">&quot;/user2/**&quot;</span>).hasAuthority(<span class="string">&quot;SCOPE_any&quot;</span>)</span><br><span class="line">                .anyRequest().access(<span class="string">&quot;@rbacService.hasPerssion(request,authentication)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启oauth2登录认证</span></span><br><span class="line">        http.oauth2Login();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启基于oauth2的客户端信息</span></span><br><span class="line">        http.oauth2Client();</span><br><span class="line"></span><br><span class="line">        http.csrf().disable();</span><br><span class="line"></span><br><span class="line">        http.exceptionHandling().accessDeniedHandler(customAccessDeniedHandler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WebSecurityConfig说明">WebSecurityConfig说明</h3><p>与oauth2-client相关的代码就如下两行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//开启oauth2登录认证</span></span><br><span class="line">http.oauth2Login();</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启基于oauth2的客户端信息</span></span><br><span class="line">http.oauth2Client();</span><br></pre></td></tr></table></figure><h2 id="配置文件">配置文件</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">oauth2:</span></span><br><span class="line">  <span class="attr">server:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">http://localhost:8080</span></span><br><span class="line">    <span class="attr">logout:</span> <span class="string">$&#123;oauth2.server.url&#125;/logout</span> <span class="comment">#可以实现单点登录，不能实现单点登出</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#oauth2客户端配置，默认基于内存，如果基于数据库，需要在config配置类进行相应的配置</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">client:</span></span><br><span class="line">        <span class="attr">registration:</span> <span class="comment">#支持多租户</span></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/my-client</span></span><br><span class="line">          <span class="attr">my-client:</span> <span class="comment"># 1 注册客户端名称，随意指定，但是要与provider的配置相一致</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">postman</span> <span class="comment"># 2 客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">postman</span> <span class="comment"># 3 客户端密码</span></span><br><span class="line">            <span class="attr">authorization-grant-type:</span> <span class="string">authorization_code</span> <span class="comment"># 4 认证类型</span></span><br><span class="line">            <span class="comment">#默认重定向URI模板是&#123;baseUrl&#125;/login/oauth2/code/&#123;registrationId&#125;。</span></span><br><span class="line">            <span class="comment">#registrationId是ClientRegistration的唯一标识符。</span></span><br><span class="line">            <span class="attr">redirect-uri:</span> <span class="string">http://localhost:8088/postman/login/oauth2/code/my-client</span>  <span class="comment"># 5 回调地址，需要配置到数据表中，默认写法，注意最后的路径是注册客户端名称</span></span><br><span class="line">            <span class="attr">scope:</span> <span class="string">any</span> <span class="comment">#请求范围</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">客户端1</span></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/my-client2</span></span><br><span class="line">          <span class="attr">my-client2:</span> <span class="comment"># 1 注册客户端名称，随意指定，但是要与provider的配置相一致</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">postman</span> <span class="comment"># 2 客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">postman</span> <span class="comment"># 3 客户端密码</span></span><br><span class="line">            <span class="attr">authorization-grant-type:</span> <span class="string">authorization_code</span> <span class="comment"># 4 认证类型</span></span><br><span class="line">            <span class="attr">redirect-uri:</span> <span class="string">http://localhost:8088/postman/login/oauth2/code/my-client2</span>  <span class="comment"># 5 回调地址，需要配置到数据表中，默认写法，注意最后的路径是注册客户端名称</span></span><br><span class="line">            <span class="attr">scope:</span> <span class="string">any</span> <span class="comment">#请求范围</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">客户端2</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># CommonOAuth2Provider 中定义了google,facebook,github,okta的默认provider信息，所以这里不需要为其配置provider信息</span></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/google</span></span><br><span class="line">          <span class="comment"># 重定向后：https://accounts.google.com/o/oauth2/v2/auth?response_type=code&amp;client_id=xxxxxxxxx&amp;scope=openid%20profile%20email&amp;state=jO3PpuX2IzwOFemdd7FHBIHeeSPcxDwiP-mqDBTjdfw%3D&amp;redirect_uri=http://localhost:8088/postman/login/oauth2/code/google&amp;nonce=-sxhj2hjgrc7krSHSjL3qz_W90xPEX9nlP6SYzAfktY</span></span><br><span class="line">          <span class="attr">google:</span> <span class="comment"># google帐号认证，跳转到google登录页面</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span> <span class="comment">#  客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span> <span class="comment">#  客户端密码</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Google认证</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/facebook</span></span><br><span class="line">          <span class="comment"># https://www.facebook.com/v2.8/dialog/oauth?response_type=code&amp;client_id=xxxxxxxxx&amp;scope=public_profile%20email&amp;state=BVZM3OW2EUS82pbjJdpQfXvtXbFbMwaUe_lRMOt4BW4%3D&amp;redirect_uri=http://localhost:8088/postman/login/oauth2/code/facebook</span></span><br><span class="line">          <span class="attr">facebook:</span> <span class="comment"># facebook帐号登录，跳转到facebook登录页面</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span> <span class="comment">#  客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span> <span class="comment">#  客户端密码</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Facebook认证</span></span><br><span class="line"></span><br><span class="line">          <span class="comment"># /postman/oauth2/authorization/github</span></span><br><span class="line">          <span class="comment"># 重定向后：https://github.com/login?client_id=xxxxxxxxx&amp;return_to=%2Flogin%2Foauth%2Fauthorize%3Fclient_id%3Dxxxxxxxxx%26redirect_uri%3Dhttp%253A%252F%252Flocalhost%253A8088%252Fpostman%252Flogin%252Foauth2%252Fcode%252Fgithub%26response_type%3Dcode%26scope%3Dread%253Auser%26state%3DmXtRWMQy8NaqVsFiie-NyYuy2z8OErrdq_VsuejDOPE%253D</span></span><br><span class="line">          <span class="comment"># api文档：https://docs.github.com/cn/free-pro-team@latest/rest</span></span><br><span class="line">          <span class="attr">github:</span> <span class="comment"># github帐号登录，跳转到github登录页面</span></span><br><span class="line">            <span class="attr">client-id:</span> <span class="string">xxxxxxxxx</span> <span class="comment">#  客户端ID</span></span><br><span class="line">            <span class="attr">client-secret:</span> <span class="string">xxxxxxx</span> <span class="comment">#  客户端密码</span></span><br><span class="line">            <span class="attr">client-name:</span> <span class="string">Github认证</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">provider:</span></span><br><span class="line">          <span class="attr">my-client:</span> <span class="comment"># 6 注册客户端名称</span></span><br><span class="line">            <span class="attr">authorization-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/authorize</span> <span class="comment"># 7 认证地址</span></span><br><span class="line">            <span class="attr">token-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/token</span> <span class="comment"># 8 获取token地址</span></span><br><span class="line">            <span class="attr">user-info-uri:</span> <span class="string">http://localhost:8080/userInfo</span> <span class="comment"># 9 获取用户信息地址，必须配置</span></span><br><span class="line">            <span class="attr">userNameAttribute:</span> <span class="string">username</span> <span class="comment"># 10 指定用户信息中哪个属性是用户名称</span></span><br><span class="line">          <span class="attr">my-client2:</span> <span class="comment"># 6 注册客户端名称</span></span><br><span class="line">            <span class="attr">authorization-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/authorize</span> <span class="comment"># 7 认证地址</span></span><br><span class="line">            <span class="attr">token-uri:</span> <span class="string">$&#123;oauth2.server.url&#125;/oauth/token</span> <span class="comment"># 8 获取token地址</span></span><br><span class="line">            <span class="attr">user-info-uri:</span> <span class="string">http://localhost:8080/userInfo</span> <span class="comment"># 9 获取用户信息地址，必须配置</span></span><br><span class="line">            <span class="attr">userNameAttribute:</span> <span class="string">username</span> <span class="comment"># 10 指定用户信息中哪个属性是用户名称</span></span><br></pre></td></tr></table></figure><h3 id="配置文件说明">配置文件说明</h3><ul class="lvl-0"><li class="lvl-2"><p>springboot默认实现了google,facebook,github,okta的provider，但是其它认证服务器就需要自己指定provider信息。</p></li><li class="lvl-2"><p>这里需要为其指定user-info-uri，这个url提供认证用户的信息，需要认证服务端提供(也可以配置到受认证服务保护的资源服务中)，所以我们需要对认证服务进行改造</p></li><li class="lvl-2"><p>userNameAttribute表示从user-info-uri接口返回的信息中哪个属性名称表示用户名称</p></li><li class="lvl-2"><p>如果客户端信息只有一个，则访问当前客户端服务就会直接跳转到认证服务器的登录页面</p></li><li class="lvl-2"><p>如果客户端配置了多个，则会先跳转到login页面，需要选择要访问的认证服务器，后文有介绍如何自定义login页面</p></li></ul><h2 id="AuthServer改造">AuthServer改造</h2><h3 id="UserController">UserController</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2authserverdemo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.jwt.Jwt;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">userInfo</span><span class="params">(Authentication authentication)</span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">principal</span> <span class="operator">=</span> authentication.getPrincipal();</span><br><span class="line">        <span class="keyword">if</span>(principal <span class="keyword">instanceof</span> Jwt)&#123;</span><br><span class="line">            map.put(<span class="string">&quot;username&quot;</span>, ((Jwt) principal).getClaim(<span class="string">&quot;user_name&quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//客户端获取用户信息时，将附加信息一块返回给客户端</span></span><br><span class="line">            map.putAll(((Jwt) principal).getClaims());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UserController说明">UserController说明</h4><ul class="lvl-0"><li class="lvl-2"><p>这个接口就是普通的controller接口，其返回一个map信息，里面至少包含一个用户名称信息。</p></li><li class="lvl-2"><p>因为client-server与auth-server之间是通过基于JWT的access-token进行访问的，所以这个接口实际上也是一个资源接口，需要为认证服务器配置资源服务。</p></li></ul><h3 id="SecurityConfig">SecurityConfig</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//认证服务器同时作为资源服务器，其目的是可以对外提供访问的资源，比如&quot;客户端认证获取用户信息&quot;</span></span><br><span class="line"><span class="comment">//鉴权时只支持Bearer Token的形式，不支持url后加参数access_token</span></span><br><span class="line">http.oauth2ResourceServer().jwt() <span class="comment">//开启oauth2资源认证</span></span><br><span class="line">        <span class="comment">//默认情况下，权限是scope，而我们希望使用的是用户的角色，所以这里需要通过转换器进行处理</span></span><br><span class="line">        .jwtAuthenticationConverter(jwt -&gt; &#123; <span class="comment">//通过自定义Converter来指定权限，Converter是函数接口，当前上下问参数为JWT对象</span></span><br><span class="line">            Collection&lt;SimpleGrantedAuthority&gt; authorities =</span><br><span class="line">                    ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                            .get(<span class="string">&quot;authorities&quot;</span>)).stream() <span class="comment">//获取JWT中的authorities</span></span><br><span class="line">                            .map(SimpleGrantedAuthority::<span class="keyword">new</span>)</span><br><span class="line">                            .collect(Collectors.toSet());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//如果希望保留scope的权限，可以取出scope数据然后合并到一起，这样因为不是以ROLE_开头，所以需要使用hasAuthority(&#x27;SCOPE_any&#x27;)的形式</span></span><br><span class="line">            Collection&lt;SimpleGrantedAuthority&gt; scopes = ((Collection&lt;String&gt;) jwt.getClaims()</span><br><span class="line">                    .get(<span class="string">&quot;scope&quot;</span>)).stream().map(scope -&gt; <span class="keyword">new</span> <span class="title class_">SimpleGrantedAuthority</span>(<span class="string">&quot;SCOPE_&quot;</span> + scope))</span><br><span class="line">                    .collect(Collectors.toSet());</span><br><span class="line">            <span class="comment">//合并权限</span></span><br><span class="line">            authorities.addAll(scopes);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JwtAuthenticationToken</span>(jwt, authorities);</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h4 id="SecurityConfig说明">SecurityConfig说明</h4><ul class="lvl-0"><li class="lvl-2"><p>如果该接口是登录后就可以访问，只需要按如下配置即可：</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.oauth2ResourceServer().jwt();</span><br></pre></td></tr></table></figure><h3 id="配置文件-2">配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#oauth2 配置</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">oauth2:</span></span><br><span class="line">      <span class="attr">resourceserver:</span></span><br><span class="line">        <span class="attr">jwt:</span></span><br><span class="line">          <span class="attr">public-key-location:</span> <span class="string">classpath:oauth2_key.pub</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>将公钥文件放到对应的路径下即可</p></li></ul><h2 id="自定义login页面">自定义login页面</h2><ul class="lvl-0"><li class="lvl-2"><p>当客户端配置信息中指定了多个client时，访问当前服务时会先跳转到login页面，需要选择要访问哪个认证服务器。</p></li></ul><h3 id="依赖-2">依赖</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">implementation</span> <span class="string">&#x27;org.springframework.boot:spring-boot-starter-thymeleaf&#x27;</span></span><br><span class="line"><span class="string">//webjars</span> <span class="string">https://www.webjars.org</span></span><br><span class="line"><span class="string">implementation</span> <span class="string">&#x27;org.webjars:bootstrap:4.5.3&#x27;</span></span><br><span class="line"><span class="string">implementation</span> <span class="string">&#x27;org.webjars.bower:jquery:3.5.1&#x27;</span></span><br><span class="line"><span class="string">//</span> <span class="string">可以在html中去掉webjars的版本号，这样升级的时候直接修改上面引入的webjars中的版本号即可，页面中不需要修改</span></span><br><span class="line"><span class="string">implementation</span> <span class="string">&#x27;org.webjars:webjars-locator:0.40&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="LoginController">LoginController</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientdemo2.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.log4j.Log4j2;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.ClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.oauth2.client.registration.InMemoryClientRegistrationRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;LoginController&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/14 00:19.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Log4j2</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ClientRegistrationRepository clientRegistrationRepository;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LoginController</span><span class="params">(ClientRegistrationRepository clientRegistrationRepository)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.clientRegistrationRepository = clientRegistrationRepository;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义登录页面，多租户登录时先显示该页面，由用户选择要使用的认证服务</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/oauth/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        Map&lt;String,String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(clientRegistrationRepository <span class="keyword">instanceof</span> InMemoryClientRegistrationRepository)&#123;</span><br><span class="line">            ((InMemoryClientRegistrationRepository)clientRegistrationRepository).forEach(registrations-&gt;&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">registrationId</span> <span class="operator">=</span> registrations.getRegistrationId();</span><br><span class="line">                <span class="type">String</span> <span class="variable">clientName</span> <span class="operator">=</span> registrations.getClientName();</span><br><span class="line">                map.put(registrationId,clientName);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;registrations&quot;</span>, map);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;oauth2/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="login-html">login.html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/css/bootstrap.min.css&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/jquery/jquery.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/js/bootstrap.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;form-signin-heading&quot;</span>&gt;</span>Login with OAuth 2.0<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;registration: $&#123;registrations&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;&#x27;/oauth2/authorization/&#x27;+$&#123;registration.key&#125;&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;registration.value&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="WebSecurityConfig-2">WebSecurityConfig</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开启oauth2登录认证</span></span><br><span class="line">http.oauth2Login()</span><br><span class="line">        <span class="comment">//自定义登录页面</span></span><br><span class="line">        .loginPage(<span class="string">&quot;/oauth/login&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="OAuth2AuthorizedClientService">OAuth2AuthorizedClientService</h2><ul class="lvl-0"><li class="lvl-2"><p>默认每次客户端获取到的token信息都是存储在内存中的，如果服务器重启则token就会失效，可以将token保存到数据库中</p></li></ul><h3 id="创建数据表">创建数据表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 客户端认证信息表，只需建表，数据会自动创建</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `oauth2_authorized_client` (</span><br><span class="line">    `client_registration_id` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;客户端注册Id&#x27;</span>,</span><br><span class="line">    `principal_name` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;登录用户名称&#x27;</span>,</span><br><span class="line">    `access_token_type` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;验证类型，这里是bear&#x27;</span>,</span><br><span class="line">    `access_token_value` <span class="type">blob</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;access_token的值&#x27;</span>,</span><br><span class="line">    `access_token_issued_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">current_timestamp</span>() <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">current_timestamp</span>() COMMENT <span class="string">&#x27;access_token的创建时间&#x27;</span>,</span><br><span class="line">    `access_token_expires_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0000-00-00 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;access_token的过期时间&#x27;</span>,</span><br><span class="line">    `access_token_scopes` <span class="type">varchar</span>(<span class="number">1000</span>) <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;授权范围&#x27;</span>,</span><br><span class="line">    `refresh_token_value` <span class="type">blob</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;refresh_token的值&#x27;</span>,</span><br><span class="line">    `refresh_token_issued_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0000-00-00 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;refresh_token创建时间&#x27;</span>,</span><br><span class="line">    `created_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">current_timestamp</span>() COMMENT <span class="string">&#x27;数据创建时间&#x27;</span>,</span><br><span class="line">    `update_at` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">current_timestamp</span>() <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">current_timestamp</span>() COMMENT <span class="string">&#x27;数据最后更新时间&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (`client_registration_id`,`principal_name`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_bin;</span><br></pre></td></tr></table></figure><h3 id="添加数据库依赖">添加数据库依赖</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mysql</span></span><br><span class="line">runtimeOnly <span class="string">&#x27;mysql:mysql-connector-java&#x27;</span></span><br><span class="line"><span class="comment">//为了使用datasource</span></span><br><span class="line">implementation <span class="string">&#x27;org.springframework.boot:spring-boot-starter-jdbc&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="配置文件添加数据库的配置">配置文件添加数据库的配置</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#数据源配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/springboot?useUnicode=true&amp;characterEncoding=utf-8&amp;useTimezone=true&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">newpwd</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">30000</span> <span class="comment">#毫秒，默认30秒</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">600000</span>      <span class="comment">#毫秒，默认10分钟</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">1800000</span>     <span class="comment">#毫秒，默认30分钟</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">10</span>     <span class="comment">#默认10</span></span><br></pre></td></tr></table></figure><h3 id="WebSecurityConfig增加JdbcOAuth2AuthorizedClientService的配置">WebSecurityConfig增加JdbcOAuth2AuthorizedClientService的配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 基于数据库的客户端信息配置，认证数据会自动创建到数据表中</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> OAuth2AuthorizedClientService <span class="title function_">authorizedClientService</span><span class="params">(JdbcOperations jdbcOperations, ClientRegistrationRepository clientRegistrationRepository)</span> &#123;</span><br><span class="line">    <span class="type">JdbcOAuth2AuthorizedClientService</span> <span class="variable">authorizedClientService</span> <span class="operator">=</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">JdbcOAuth2AuthorizedClientService</span>(jdbcOperations, clientRegistrationRepository);</span><br><span class="line">    <span class="keyword">return</span> authorizedClientService;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> OAuth2AuthorizedClientService oAuth2AuthorizedClientService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//开启基于oauth2的客户端信息</span></span><br><span class="line">http.oauth2Client()</span><br><span class="line">        <span class="comment">//客户端信息基于数据库，基于内存去掉下面配置即可</span></span><br><span class="line">        .authorizedClientService(oAuth2AuthorizedClientService);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="访问资源服务">访问资源服务</h2><ul class="lvl-0"><li class="lvl-2"><p>WebSecurityConfig配置类增加如下配置</p></li><li class="lvl-2"><p>其目的就是在使用RestTemplate访问资源服务时，在请求头中增加Bearer Token</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 调用Resource Server服务使用RestTemplate，当调用的Resource Server时候我们时需要使用Bearer Token在头部传递Access Token；</span></span><br><span class="line"><span class="comment"> * RestTemplateAutoConfiguration已经给我们自动配置了RestTemplateBuilder来配置RestTemplate，我们需要通过RestTemplateCustomizer来对RestTemplate来定制</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line">RestTemplateCustomizer <span class="title function_">restTemplateCustomizer</span><span class="params">(OAuth2AuthorizedClientService clientService)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> restTemplate -&gt; &#123; <span class="comment">//1 RestTemplateCustomizer时函数接口，入参是RestTemplate</span></span><br><span class="line">        List&lt;ClientHttpRequestInterceptor&gt; interceptors = restTemplate.getInterceptors();</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(interceptors)) &#123;</span><br><span class="line">            interceptors = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        interceptors.add((request, body, execution) -&gt; &#123; <span class="comment">//2 通过增加RestTemplate拦截器，让每次请求添加Bearer Token（Access Token）；ClientHttpRequestInterceptor是函数接口，可用Lambda表达式来实现</span></span><br><span class="line">            <span class="type">OAuth2AuthenticationToken</span> <span class="variable">auth</span> <span class="operator">=</span> (OAuth2AuthenticationToken)</span><br><span class="line">                    SecurityContextHolder.getContext().getAuthentication();</span><br><span class="line">            <span class="type">String</span> <span class="variable">clientRegistrationId</span> <span class="operator">=</span> auth.getAuthorizedClientRegistrationId();</span><br><span class="line">            <span class="type">String</span> <span class="variable">principalName</span> <span class="operator">=</span> auth.getName();</span><br><span class="line">            <span class="type">OAuth2AuthorizedClient</span> <span class="variable">client</span> <span class="operator">=</span></span><br><span class="line">                    clientService.loadAuthorizedClient(clientRegistrationId, principalName); <span class="comment">//3 OAuth2AuthorizedClientService可获得用户的OAuth2AuthorizedClient</span></span><br><span class="line">            <span class="keyword">if</span> (client == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//如果客户端信息使用的是基于内存的InMemoryOAuth2AuthorizedClientService，则重启服务器就会失效，需要重新登录才能恢复，</span></span><br><span class="line">                <span class="comment">// 建议使用基于数据库的JdbcOAuth2AuthorizedClientService，本例使用的就是JdbcOAuth2AuthorizedClientService</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">CustomException</span>(HttpStatus.NOT_ACCEPTABLE, <span class="string">&quot;用户状态异常，请重新登录&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">accessToken</span> <span class="operator">=</span> client.getAccessToken().getTokenValue(); <span class="comment">//4 OAuth2AuthorizedClient可获得用户Access Token</span></span><br><span class="line">            request.getHeaders().add(<span class="string">&quot;Authorization&quot;</span>, <span class="string">&quot;Bearer &quot;</span> + accessToken); <span class="comment">//5 将Access Token通过头部的Bearer Token中访问Resource Server</span></span><br><span class="line"></span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求地址: %s&quot;</span>, request.getURI()));</span><br><span class="line">            log.info(String.format(<span class="string">&quot;请求头信息: %s&quot;</span>, request.getHeaders()));</span><br><span class="line"></span><br><span class="line">            <span class="type">ClientHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> execution.execute(request, body);</span><br><span class="line">            log.info(String.format(<span class="string">&quot;响应头信息: %s&quot;</span>, response.getHeaders()));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">        &#125;);</span><br><span class="line">        restTemplate.setInterceptors(interceptors);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="以ResController举例如何访问资源服务">以ResController举例如何访问资源服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.oauth2clientdemo2.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.oauth2clientdemo2.exception.AjaxResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.client.RestTemplateBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;获取资源服务器数据&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2020/11/7 22:47.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/res&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ResController</span><span class="params">(RestTemplateBuilder restTemplateBuilder)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.restTemplate = restTemplateBuilder.build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取资源服务器的数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/res1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> AjaxResponse <span class="title function_">getRes</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://localhost:8082/res/res1&quot;</span>, AjaxResponse.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> AjaxResponse <span class="title function_">getUser</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(<span class="string">&quot;http://localhost:8082/user&quot;</span>,<span class="literal">null</span>, AjaxResponse.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/rbac&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> AjaxResponse <span class="title function_">getRbac</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://localhost:8082/rbac&quot;</span>, AjaxResponse.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/userInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">getuserInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://localhost:8082/userInfo&quot;</span>, Map.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;通过本文，你将知道如何搭建一个基于SpringBoot-OAuth2-JWT的客户端服务器&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于springboot:2.4.0，项目基于Gradle-6.6.1构建&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;代码地址:&lt;a href=&quot;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&quot;&gt;https://github.com/hanqunfeng/springbootchapter/tree/master/chapter48&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="oauth2" scheme="https://blog.hanqunfeng.com/tags/oauth2/"/>
    
    <category term="springsecurity" scheme="https://blog.hanqunfeng.com/tags/springsecurity/"/>
    
    <category term="jwt" scheme="https://blog.hanqunfeng.com/tags/jwt/"/>
    
  </entry>
  
</feed>
