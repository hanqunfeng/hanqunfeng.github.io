<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>飘逸峰的博客</title>
  
  <subtitle>Spring--Java程序员的春天</subtitle>
  <link href="https://blog.hanqunfeng.com/atom.xml" rel="self"/>
  
  <link href="https://blog.hanqunfeng.com/"/>
  <updated>2023-03-15T05:52:14.313Z</updated>
  <id>https://blog.hanqunfeng.com/</id>
  
  <author>
    <name>飘逸峰</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux常用命令07--管道符&quot;|&quot;与&quot;xargs&quot;</title>
    <link href="https://blog.hanqunfeng.com/2023/03/15/linux-command07/"/>
    <id>https://blog.hanqunfeng.com/2023/03/15/linux-command07/</id>
    <published>2023-03-15T13:30:05.000Z</published>
    <updated>2023-03-15T05:52:14.313Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍管道符&quot;|&quot;与&quot;xargs&quot;的使用方法。</p></li><li class="lvl-2"><p>以及文件描述符与重定向操作符的使用方法。</p></li></ul><span id="more"></span><h2 id="管道符">管道符&quot;|&quot;</h2><ul class="lvl-0"><li class="lvl-2"><p>管道符主要用于多重命令处理，前面命令的输出结果作为后面命令的输入</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该命令的作用就是查看文本后排序，然后再去重，最后过滤出含有hello的行并输出</span></span><br><span class="line"><span class="built_in">cat</span> test.txt | <span class="built_in">sort</span> | <span class="built_in">uniq</span> | grep <span class="string">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>以上的cat、sort、uniq、grep等命令均支持管道符，一般情况下，处理文本的命令，例如sort、uniq、grep、awk、sed等命令均支持管道，是因为这些命令均可从标准输入中读取要处理的文本（即从标准输入中读取参数）</p></li><li class="lvl-2"><p>而对于不是处理文本的命令，例如ls、rm、kill等则不支持从标准输入中读取参数，只支持从命令行中读取参数，而要使其也能从标准输入中读取参数则需要使用<code>xargs</code></p></li><li class="lvl-2"><p>命令行参数优先于标准输入即管道符，如<code>cat a.txt | sort b.txt</code>，此时<code>sort</code>仅仅会处理<code>b.txt</code></p></li><li class="lvl-2"><p><code>- </code> 表示标准输入，例如 <code>cat a.txt | sort b.txt -</code>，相当于 <code>sort a.txt b.txt</code></p></li></ul><div class="tips"><p><em><strong>命令行参数和标准输入的区别</strong></em></p><ul class="lvl-1"><li class="lvl-2">命令行参数<blockquote><p>命令行参数就是命令后面的参数<br>例如<code>rm test.sh</code>，<code>rm</code>是命令，<code>test.sh</code>就是命令行参数</p></blockquote></li><li class="lvl-2">标准输入<blockquote><p>标准输入一般指的是键盘输入，也可用于表示管道符之前命令的输出结果（即打印在屏幕的文本）作为之后命令的标准输入</p></blockquote></li></ul></div><h2 id="xargs">xargs</h2><ul class="lvl-0"><li class="lvl-2"><p><code>xargs</code>的作用是接收管道符前面命令的输出进行处理后作为命令行参数传递给后续命令，而并不是作为标准输入传递给后续命令。</p></li><li class="lvl-2"><p><code>xargs</code>以空白字符（空格，tap，换行符均算空白字符）分隔从管道接收的文本，并且将分隔后文本均作为参数</p></li><li class="lvl-2"><p><code>xargs</code>常用选项</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">参数    解释</span><br><span class="line">-d    指定分隔符，不指定默认为空白字符</span><br><span class="line">-p    先打印即将执行的命令并询问是否执行</span><br><span class="line">-n    指定每次传输给后续命令的参数个数，不指定则全部传递</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假设当前目录下有a.txt和b.txt，则该命令的含义就是 cat a.txt b.txt</span></span><br><span class="line"><span class="built_in">ls</span> *.txt | xargs <span class="built_in">cat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等价于 按顺序执行 cat a.txt 和 cat b.txt</span></span><br><span class="line"><span class="built_in">ls</span> *.txt | xargs -n 1 <span class="built_in">cat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件，执行前先打印命令并询问是否执行，输入y回车后可以执行，仅仅回车不执行</span></span><br><span class="line"><span class="built_in">ls</span> *.txt | xargs -p <span class="built_in">rm</span> -rf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀掉进程</span></span><br><span class="line">ps -ef | grep <span class="string">&#x27;test.sh&#x27;</span> | grep -v <span class="string">&#x27;grep&#x27;</span>| awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | xargs <span class="built_in">kill</span></span><br></pre></td></tr></table></figure><h2 id="文件描述符">文件描述符</h2><ul class="lvl-0"><li class="lvl-2"><p>在 Linux 系统中，进程通过文件描述符来管理文件，文件描述符就是一个数字以及与之相关联的一堆数据</p></li><li class="lvl-2"><p>一个进程打开一个文件，就会创建一个新的文件描述符，这个数字一般是自增的，进程如果关闭文件，这个描述符是可以重复利用的</p></li><li class="lvl-2"><p>查看进程关联的文件描述符</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 比如查看`mysqld`的文件描述符</span></span><br><span class="line"><span class="comment"># 先获得mysqld的PID，这里是823</span></span><br><span class="line">$ ps aux | grep mysqld | grep -v <span class="string">&quot;grep&quot;</span></span><br><span class="line">mysql      823  0.0  7.0 1653908 64080 ?       Ssl  3月01   7:50 /usr/sbin/mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入如下目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /proc/823/fd</span><br><span class="line"><span class="comment"># 列出PID为823的进程关联的文件描述符</span></span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">0   12  16  2   23  27  30  34  38  41  45  49  52  56  6   63  67  70  9</span><br><span class="line">1   13  17  20  24  28  31  35  39  42  46  5   53  57  60  64  68  71</span><br><span class="line">10  14  18  21  25  29  32  36  4   43  47  50  54  58  61  65  69  72</span><br><span class="line">11  15  19  22  26  3   33  37  40  44  48  51  55  59  62  66  7   8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过ls -l可以查看到实际关联的文件，这里对文件描述符按数字大小做了排序</span></span><br><span class="line">$ <span class="built_in">ls</span> -l | grep <span class="string">&quot;^l&quot;</span> | <span class="built_in">sort</span> -k 9n | <span class="built_in">head</span> -n 5</span><br><span class="line">lr-x------ 1 mysql mysql 64 3月  13 04:06 0 -&gt; /dev/null</span><br><span class="line">lrwx------ 1 mysql mysql 64 3月  13 04:06 1 -&gt; socket:[16837]</span><br><span class="line">lrwx------ 1 mysql mysql 64 3月  13 04:06 2 -&gt; socket:[16837]</span><br><span class="line">lrwx------ 1 mysql mysql 64 3月  13 04:06 3 -&gt; /var/lib/mysql/aria_log_control</span><br><span class="line">lr-x------ 1 mysql mysql 64 3月  13 04:06 4 -&gt; /var/lib/mysql</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>每一个进程启动的时候，都会默认打开三个文件，用<code>0,1,2</code>来当做他们的描述符</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0 : 标准输入文件(stdin)，代表标准输入，默认指键盘输入</span><br><span class="line">1 : 标准输出文件(stdout)，代表标准输出，标准输出就是命令的输出，默认指向终端屏幕</span><br><span class="line">2 : 标准错误文件(stderr)，代表错误输出，标准错误是命令错误信息的输出，默认指向终端屏幕</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>进程操作所有文件的过程都是一样的，都是先打开一个文件，给他一个文件描述符，然后针对这个描述符进行读或者写</p></li><li class="lvl-2"><p>在Linux里，键盘输入这种操作会变成一个文件操作，就类似普通的文件那样，这就是Linux的设计，一切皆是文件</p></li><li class="lvl-2"><p>不仅仅键盘操作和屏幕打印是文件操作，网络连接读取数据等等，也都是文件操作，这些也都会产生文件描述符</p></li><li class="lvl-2"><p>一个进程同时拥有的文件描述符是有上限的，这个上限可以设置。</p></li><li class="lvl-2"><p>我们来解读下面这个命令的执行过程</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> test.txt | grep <span class="string">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6">1.<code>cat</code>这个程序打开了test.txt这个文件，将其内容写入 <code>1</code> 这个文件(标准输出)，也就是屏幕上</li><li class="lvl-6">2.管道符<code>|</code>的作用就是将前一个程序的 <code>1</code> (标准输出)绑定到后一个程序的<code>0</code>(标准输入)，这里就是将<code>cat</code>的<code>1</code>绑定到<code>grep</code>的<code>0</code></li><li class="lvl-6">3.然后<code>grep</code> 这个程序就试图从 <code>0</code> 这个文件(标准输入)中读取数据，然后找到包含<code>hello</code>的行，然后把找到的行写入到 <code>1</code> 这个文件(标准输出)中，也就是屏幕上</li></ul></li></ul><h2 id="重定向操作符">重定向操作符</h2><ul class="lvl-0"><li class="lvl-2"><p>所谓重定向，其含义就是将不同的文件描述符重新定向到其它文件描述符</p></li><li class="lvl-2"><p>常用的重定向操作符有如下几种:</p><ul class="lvl-2"><li class="lvl-6"><code>&lt;</code> :将文件作为命令的标准输入</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt; test.txt</span><br><span class="line">mysql -uroot -p &lt; databases.sql</span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6"><code>&gt;</code> :将命令的输出结果输出到指定文件中，就是将标准输出重定向，且覆盖原文件内容</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下两个命令的作用是一样的，都是将标准输出重定向到文件</span></span><br><span class="line"><span class="built_in">cat</span> test.txt | grep <span class="string">&quot;hello&quot;</span> &gt; result.txt</span><br><span class="line"><span class="built_in">cat</span> test.txt | grep <span class="string">&quot;hello&quot;</span> 1&gt; result.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标准输出与标准错误都重定向到文件</span></span><br><span class="line">sh test.sh 1&gt; run.log 2&gt; error.log</span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6"><code>&gt;&gt;</code> :将命令的输出结果以 <em><strong>追加</strong></em> 的方式输出到指定文件中</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下两个命令的作用是一样的，都是将标准输出重定向到文件</span></span><br><span class="line"><span class="built_in">cat</span> test.txt | grep <span class="string">&quot;hello&quot;</span> &gt;&gt; result.txt</span><br><span class="line"><span class="built_in">cat</span> test.txt | grep <span class="string">&quot;hello&quot;</span> 1&gt;&gt; result.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标准输出与标准错误都重定向到文件</span></span><br><span class="line">sh test.sh &gt;&gt; run.log 2&gt;&gt; error.log</span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6"><code>&gt;&amp;</code> :将命令的输出结果或者一个文件描述符重新定向到另一个文件描述符</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下两个命令的作用是一样的，都是将标准输出重定向到文件，标准错误重定向且等同于标准输出</span></span><br><span class="line"><span class="built_in">cat</span> test.txt | grep <span class="string">&quot;hello&quot;</span> &gt; result.txt 2&gt;&amp;1</span><br><span class="line"><span class="built_in">cat</span> test.txt | grep <span class="string">&quot;hello&quot;</span> 1&gt; result.txt 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标准输出重定向到文件，标准错误重定向且等同于标准输出</span></span><br><span class="line">sh test.sh &gt;&gt; run.log 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标准输出重定向到空设备文件，也就是不输出也不显示任何信息，标准错误重定向且等同于标准输出，也就是标准错误也重定向到空设备中</span></span><br><span class="line">sh test.sh 1&gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>使用重定向操作符时的注意事项</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.标准输入0、标准输出1、标准错误2 需要分别重定向，一个重定向只能改变它们其中一个。</span><br><span class="line">2.文件描述符在重定向符号左侧时可以省略。</span><br><span class="line">3.文件描述符与重定向符号之间不能有空格。</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍管道符&amp;quot;|&amp;quot;与&amp;quot;xargs&amp;quot;的使用方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;以及文件描述符与重定向操作符的使用方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令06--shell编程</title>
    <link href="https://blog.hanqunfeng.com/2023/03/13/linux-command06/"/>
    <id>https://blog.hanqunfeng.com/2023/03/13/linux-command06/</id>
    <published>2023-03-13T13:30:05.000Z</published>
    <updated>2023-03-15T08:36:25.534Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍shell编程的语法规则。</p></li></ul><span id="more"></span><h2 id="文件头">文件头</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh :指定执行脚步的shell路径</span></span><br><span class="line"><span class="comment">#!/usr/bin/env bash :从env中查找指定的shell路径</span></span><br></pre></td></tr></table></figure><blockquote><p>如果没有为脚本设置文件头指定执行脚本的shell路径，则默认使用运行脚本的用户的shell</p></blockquote><h2 id="注释语法">注释语法</h2><ul class="lvl-0"><li class="lvl-2"><p><code>#</code> : 使用<code>#</code>进行单行注释，要讲某行注释，就在该行行首添加<code>#</code></p></li></ul><h2 id="特殊变量">特殊变量</h2><ul class="lvl-0"><li class="lvl-2"><p><code>$0</code> : 当前脚本的文件名（间接运行时还包括绝对路径）。</p></li><li class="lvl-2"><p><code>$n</code> : 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是 $1 。</p></li><li class="lvl-2"><p><code>$#</code> : 传递给脚本或函数的参数个数。</p></li><li class="lvl-2"><p><code>$*</code> : 传递给脚本或函数的所有参数。</p></li><li class="lvl-2"><p><code>$@</code> : 传递给脚本或函数的所有参数。被双引号 <code>&quot;$@&quot;</code> 包含时，与 <code>&quot;$*&quot;</code> 不同，下面将会讲到。</p></li><li class="lvl-2"><p><code>$?</code> : 上个命令的退出状态(0:success 非0:error)，或函数的返回值。</p></li><li class="lvl-2"><p><code>$$</code> : 当前 Shell 进程 ID。对于 Shell 脚本，就是这些脚本所在的进程 ID。</p></li><li class="lvl-2"><p><code>$_</code> : 上一个命令的最后一个参数</p></li><li class="lvl-2"><p><code>$!</code> : 后台运行的最后一个进程的 ID 号</p></li></ul><div class="tips"><p><em><strong>小贴士</strong></em><br><code>$*</code> 和 <code>$@</code> 都表示传递给函数或脚本的所有参数，不被双引号 <code>&quot;&quot;</code> 包含时，都以独立个体<code>&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot;</code> 的形式输出所有参数。<br>但是当它们被双引号 <code>&quot;&quot;</code> 包含时，<code>&quot;$*&quot;</code>会将所有的参数作为一个整体输出，<code>&quot;$@&quot;</code>依旧会以独立个体<code>&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot;</code> 的形式输出所有参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $*</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;$*&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;$*&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class="line">1 2 3 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># $@</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;$@&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure></div><h2 id="自定义变量">自定义变量</h2><h3 id="字符串">字符串</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个字符串变量</span></span><br><span class="line">s1=<span class="string">&quot;content&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个变量接收之前定义过的变量，使用变量时需要使用 $+变量名称</span></span><br><span class="line">s2=<span class="variable">$s1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个变量为之前定义过的变量与其它字符串的组合，此时可以使用 &#123;&#125; 将变量名称括起来以避免歧义</span></span><br><span class="line">s3=<span class="string">&quot;<span class="variable">$&#123;s1&#125;</span>_test&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个变量接收日期字符串，``括起来的内容会优先执行，并把结果赋值给变量</span></span><br><span class="line">s4=`<span class="built_in">date</span> +%F<span class="string">&#x27; &#x27;</span>%T`</span><br><span class="line">now=`<span class="built_in">date</span> +%Y%m%d_%H%M%S`</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>小贴士</strong></em><br><code>$</code>与<code>$&#123; &#125;</code>都是用来引用变量的，<code>$&#123; &#125;</code>通常用于划定变量名的边界<br>当执行 <code>echo &quot;$aa&quot;</code>的时候系统会打印变量<code>$aa</code>的值，当执行<code>echo &quot;$&#123;a&#125;a&quot;</code>时打印的是<code>$&#123;a&#125;</code>和字母a，如果不需要为变量名划分边界的话，<code>$a</code>和<code>$&#123;a&#125;</code>是完全相等的。<br>除此之外，<code>$&#123; &#125;</code>还有一个重要的功能，就是文本处理:</p><ul class="lvl-1"><li class="lvl-2">1.获取字符串长度</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#str&#125;</span> <span class="comment"># 5</span></span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2">2.字符串切片<code>$&#123;a:b:c&#125;</code>: 将字符串变量<code>a</code>从第<code>b</code>个位置开始向后截取<code>c</code>个字符，b是指下标，下标从0开始，<code>c</code>可以不指定，表示截取到字符串末尾</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&#x27;hello world!&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;a:0:5&#125;</span> <span class="comment"># hello</span></span><br><span class="line"><span class="comment"># 不指定c，表示从第6个字符开始截取到字符串末尾</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;a:6&#125;</span> <span class="comment"># world!</span></span><br><span class="line"><span class="comment"># 截取从倒数第一个字符开始到字符串末尾的字符</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;a:(-1)&#125;</span> <span class="comment"># !</span></span><br><span class="line"><span class="comment"># 截取从倒数第 6 个字符后的 5 个字符</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;a:(-6):5&#125;</span> <span class="comment"># world</span></span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2">3.替换字符串<code>$&#123;a/b/c&#125;</code>: 将变量<code>a</code>中的<code>b</code>全部替换为<code>c</code>，开头一个正斜杠为只匹配第一个字符串，两个正斜杠为匹配所有字符。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&#x27;hello hello world&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;a/hello/hi&#125;</span>&quot;</span> <span class="comment"># hi hello world</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;a//hello/hi&#125;</span>&quot;</span> <span class="comment"># hi hi world</span></span><br><span class="line"><span class="comment"># 支持正则</span></span><br><span class="line">str=123abc</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;str//[^0-9]/&#125;</span> <span class="comment"># 123，将非数字替换为空</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;str//[0-9]/&#125;</span> <span class="comment"># abc，将数字替换为空</span></span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2">4.字符串截取</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式：</span></span><br><span class="line"><span class="comment"># 删除匹配前缀</span></span><br><span class="line"><span class="variable">$&#123;parameter#word&#125;</span></span><br><span class="line"><span class="variable">$&#123;parameter##word&#125;</span></span><br><span class="line"><span class="comment"># 删除匹配后缀</span></span><br><span class="line"><span class="variable">$&#123;parameter%word&#125;</span></span><br><span class="line"><span class="variable">$&#123;parameter%%word&#125;</span></span><br><span class="line"><span class="comment"># 去掉左边，#最短匹配模式，##最长匹配模式。</span></span><br><span class="line">% 去掉右边，%最短匹配模式，%%最长匹配模式。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">URL=<span class="string">&quot;http://www.baidu.com/baike/user.html&quot;</span></span><br><span class="line"><span class="comment"># 匹配http://，以//为分隔符截取出右边字符串</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;URL#*//&#125;</span> <span class="comment"># www.baidu.com/baike/user.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以/为分隔符截取右边字符串，##表示尽可能多的删除，保留最少内容</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;URL##*/&#125;</span> <span class="comment"># user.html</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;URL#*/&#125;</span>  <span class="comment"># /www.baidu.com/baike/user.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以/为分隔符截取左边字符串，%%表示尽可能多的删除，即保留最少内容</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;URL%%/*&#125;</span> <span class="comment"># http:</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;URL%/*&#125;</span> <span class="comment"># http://www.baidu.com/baike</span></span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2">5.变量状态赋值</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式</span></span><br><span class="line"><span class="variable">$&#123;VAR:-string&#125;</span> <span class="comment"># 如果 VAR 变量为空则返回 string</span></span><br><span class="line"><span class="variable">$&#123;VAR:+string&#125;</span> <span class="comment"># 如果 VAR 变量不为空则返回 string</span></span><br><span class="line"><span class="variable">$&#123;VAR:=string&#125;</span> <span class="comment"># 如果 VAR 变量为空则重新赋值 VAR 变量值为 string</span></span><br><span class="line"><span class="variable">$&#123;VAR:?string&#125;</span> <span class="comment"># 如果 VAR 变量为空则将 string 输出到 stderr</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line"><span class="comment"># 如果变量为空就返回 hello world!</span></span><br><span class="line">VAR=</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;VAR:-&#x27;hello world!&#x27;&#125;</span> <span class="comment"># hello world!</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$VAR</span> <span class="comment"># 空</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果变量不为空就返回 hello world!</span></span><br><span class="line">VAR=<span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;VAR:+&#x27;hello world!&#x27;&#125;</span> <span class="comment"># hello world!</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$VAR</span> <span class="comment"># hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果变量为空就重新赋值：</span></span><br><span class="line">VAR=</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;VAR:=hello&#125;</span> <span class="comment"># hello</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$VAR</span> <span class="comment"># hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果变量为空就将信息输出 stderr</span></span><br><span class="line">VAR=</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;VAR:?value is null&#125;</span> <span class="comment"># -bash: VAR: value is null</span></span><br></pre></td></tr></table></figure></div><h3 id="数字">数字</h3><ul class="lvl-0"><li class="lvl-2"><p>整数运算</p><blockquote><p>支持<code>let</code>、<code>$(( ))</code>、<code>$[ ]</code>和<code>expr</code>四种方式</p></blockquote>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义一个数字</span></span><br><span class="line">a1=10</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行数字运算时，可以使用以下是几种运算方式中的一种</span></span><br><span class="line"><span class="comment"># 加法和减法</span></span><br><span class="line">a2=$((<span class="variable">$a1</span> + <span class="number">5</span>)) or a2=$((a1 + <span class="number">5</span>))</span><br><span class="line">a3=$[<span class="variable">$a1</span> + 5] or a3=$[a1 + 5]</span><br><span class="line"><span class="comment"># expr 要求运算符之间要有空格</span></span><br><span class="line">a4=`<span class="built_in">expr</span> <span class="variable">$a1</span> - 5` or a4=$(<span class="built_in">expr</span> <span class="variable">$a1</span> - 5)</span><br><span class="line"><span class="comment"># let在引用变量时不需要$，另外运算符之间不能有空格</span></span><br><span class="line"><span class="built_in">let</span> a5=a1-5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 乘法，注意使用expr方式时，* 要转义，</span></span><br><span class="line">a2=$((a1 * <span class="number">5</span>))</span><br><span class="line">a3=$[a1 * 5]</span><br><span class="line"><span class="comment"># expr 要求运算符之间要有空格</span></span><br><span class="line">a4=`<span class="built_in">expr</span> <span class="variable">$a1</span> \* 5`</span><br><span class="line"><span class="comment"># let在引用变量时不需要$，另外运算符之间不能有空格</span></span><br><span class="line"><span class="built_in">let</span> a5=a1*5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 除法</span></span><br><span class="line">a2=$((a1 / <span class="number">5</span>))</span><br><span class="line">a3=$[a1 / 5]</span><br><span class="line"><span class="comment"># expr 要求运算符之间要有空格</span></span><br><span class="line">a4=`<span class="built_in">expr</span> <span class="variable">$a1</span> / 5`</span><br><span class="line"><span class="comment"># let在引用变量时不能有$，运算符之间不能有空格</span></span><br><span class="line"><span class="built_in">let</span> a5=a1/5</span><br></pre></td></tr></table></figure><blockquote><p><code>let</code>、<code>$(( ))</code>或<code>$[ ]</code>中的变量都可以不加<code>$</code>前缀<br>在进行整数运算时，<code>$(( ))</code>和<code>$[ ]</code>的作用是等价的<br>建议使用<code>let</code>、<code>$(( ))</code>或<code>$[ ]</code>的形式进行运算，其支持正常的运算逻辑，expr稍显笨拙，比如在进行带括号的运算时</p></blockquote>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a2=$(((a1 - <span class="number">5</span>) * <span class="number">5</span>))</span><br><span class="line">a3=$[(a1 - 5) * 5]</span><br><span class="line"></span><br><span class="line"><span class="comment"># expr 要求运算符之间要有空格</span></span><br><span class="line"><span class="comment"># expr需要分开独立计算</span></span><br><span class="line">a4_1=`<span class="built_in">expr</span> <span class="variable">$a1</span> - 5`</span><br><span class="line">a4_2=`<span class="built_in">expr</span> <span class="variable">$&#123;a4_1&#125;</span> \* 5`</span><br><span class="line"><span class="comment"># let在引用变量时不需要$，另外运算符之间不能有空格</span></span><br><span class="line"><span class="built_in">let</span> a5=(a1-5)*5</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>小贴士</strong></em><br><code>$()</code>和 `` 的作用一致，都是用来做命令替换用，一般用于将命令返回的结果传递给变量</p></div></li><li class="lvl-2"><p>浮点数计算</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x=10</span><br><span class="line">y=3.211</span><br><span class="line">a1=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$x</span> * 2 / <span class="variable">$y</span>&quot;</span> | bc`  <span class="comment"># a1为6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># scale=2 保留两位小数，相当于截断不会四舍五入</span></span><br><span class="line">a2=`<span class="built_in">echo</span> <span class="string">&quot;scale=2; <span class="variable">$x</span> * 2 / <span class="variable">$y</span>&quot;</span> | bc` <span class="comment"># a2为6.22</span></span><br><span class="line"><span class="comment"># awk的计算会四舍五入</span></span><br><span class="line">a2=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$x</span> <span class="variable">$y</span>&quot;</span> | awk <span class="string">&#x27;&#123;printf &quot;%.2f\n&quot;,$1*2/$2&#125;&#x27;</span>` <span class="comment">#a2为6.23</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bc运算时，整数位小于1不会显示</span></span><br><span class="line">a3=`<span class="built_in">echo</span> <span class="string">&quot;scale=2;  2 / 3&quot;</span> | bc` <span class="comment"># a3为.66，不会显示为0.66</span></span><br><span class="line"><span class="comment"># awk可以正确显示</span></span><br><span class="line">a3=`<span class="built_in">echo</span> 2 3 | awk <span class="string">&#x27;&#123;printf &quot;%.2f\n&quot;,$1/$2&#125;&#x27;</span>` <span class="comment">#a3为0.67</span></span><br></pre></td></tr></table></figure><blockquote><p><code>awk</code> 的计算方式比 <code>bc</code> 更好一些，支持精度更为准确<br><code>bc</code>和<code>awk</code>的计算方式同样支持整数</p></blockquote><h3 id="数组">数组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用小括号定义数组，(元素之间用空格分隔)</span></span><br><span class="line">array=(Zero One Two Three)</span><br><span class="line"><span class="comment"># 打印数组长度</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array[@]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历数组</span></span><br><span class="line"><span class="comment"># while遍历</span></span><br><span class="line">i=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -lt <span class="variable">$&#123;#array[@]&#125;</span> ];<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;array[$i]&#125;</span></span><br><span class="line">    <span class="built_in">let</span> i=i+1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for遍历</span></span><br><span class="line"><span class="keyword">for</span>((i=0;i&lt;<span class="variable">$&#123;#array[@]&#125;</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;array[i]&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="从键盘设置变量">从键盘设置变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> a <span class="comment"># 此时会等待用户键入变量值，比如此时输入: 3</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span> <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> a b c <span class="comment"># 可以设置多个变量，比如此时输入: 1 2 3</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;a&#125;</span>_<span class="variable">$&#123;b&#125;</span>_<span class="variable">$&#123;c&#125;</span>&quot;</span> <span class="comment"># 1_2_3</span></span><br></pre></td></tr></table></figure><h2 id="test命令"><code>test</code>命令</h2><ul class="lvl-0"><li class="lvl-2"><p><code>test</code>作用检查某个条件是否成立，返回值为<code>0</code>（真）或者其他值（假），可通过<code>echo $?</code>查看返回值，也常用于循环和条件语句。</p></li><li class="lvl-2"><p><code>test</code>一般有三种用法：</p><blockquote><p>测试文件或者文件夹是否存在<br>字符串比较<br>数值比较</p></blockquote></li></ul><h3 id="测试文件或者文件夹是否存在">测试文件或者文件夹是否存在</h3><ul class="lvl-0"><li class="lvl-2"><p>参数说明</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-d dir :是否为目录，是目录为真</span><br><span class="line">-f file :是否为常规文件，是文件为真</span><br><span class="line">-x file/dir :是否可执行，可执行为真</span><br><span class="line">-r file/dir :是否可读，可读为真</span><br><span class="line">-w file/dir :是否可写，可写为真</span><br><span class="line">-a file/dir :文件或目录是否存在，存在为真</span><br><span class="line">-e file/dir :文件或目录是否存在，存在为真</span><br><span class="line">-s file :文件大小是否非0，非0为真</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">test</span> -f test.sh</span><br><span class="line">$ <span class="built_in">echo</span> $?</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">test</span> -d <span class="built_in">dir</span></span><br><span class="line">$ <span class="built_in">echo</span> $?</span><br></pre></td></tr></table></figure><h3 id="字符串比较">字符串比较</h3><ul class="lvl-0"><li class="lvl-2"><p>参数说明</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">参数    说明</span><br><span class="line">-z      当str为空时返回真</span><br><span class="line">-n    当str为非空时返回真</span><br><span class="line">=    两个字符串相等时返回真</span><br><span class="line">==    两个字符串相等时返回真，同=</span><br><span class="line">!=    两个字符串不相等时返回真</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">test</span> -z <span class="string">&#x27;&#x27;</span></span><br><span class="line">$ <span class="built_in">echo</span> $?  <span class="comment"># 输出0</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">test</span> -n <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">$ <span class="built_in">echo</span> $?  <span class="comment"># 输出0</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">test</span> <span class="string">&#x27;hello&#x27;</span> == <span class="string">&#x27;world&#x27;</span></span><br><span class="line">$ <span class="built_in">echo</span> $?  <span class="comment"># 输出1</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">test</span> <span class="string">&#x27;hello&#x27;</span> != <span class="string">&#x27;world&#x27;</span></span><br><span class="line">$ <span class="built_in">echo</span> $?  <span class="comment"># 输出0</span></span><br></pre></td></tr></table></figure><h3 id="数值比较">数值比较</h3><ul class="lvl-0"><li class="lvl-2"><p>参数说明，使用<code>&gt;</code>、<code>&lt;</code>等运算符时需要转义 <code>\&gt;</code>、<code>\&lt;</code>，或者使用如下参数替换对应的运算符</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">参数    说明</span><br><span class="line">-eq    等于时返回真 ==</span><br><span class="line">-ne    不等于时返回真 !=</span><br><span class="line">-lt    小于时返回真 &lt;</span><br><span class="line">-le    小于等于时返回真 &lt;=</span><br><span class="line">-gt    大于时返回真 &gt;</span><br><span class="line">-ge    大于等于时返回真 &gt;=</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">test</span> 1 -lt 2</span><br><span class="line">$ <span class="built_in">echo</span> $?  <span class="comment"># 输出0</span></span><br></pre></td></tr></table></figure><h3 id="逻辑运算">逻辑运算</h3><ul class="lvl-0"><li class="lvl-2"><p>参数说明</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">参数  说明</span><br><span class="line">-a    逻辑与，二者都为真则为真</span><br><span class="line">-o    逻辑或，二者任意一个为真则为真</span><br><span class="line">!    逻辑非</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">test</span> ! -e test.sh</span><br><span class="line">$ <span class="built_in">echo</span> $?</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">test</span> -f test.sh -a -d <span class="built_in">dir</span></span><br><span class="line">$ <span class="built_in">echo</span> $?</span><br></pre></td></tr></table></figure><h3 id="shell中的用法">shell中的用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> <span class="variable">$i</span> -lt 5;<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span> &lt; 5&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span> &gt;= 5&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="条件判断">条件判断</h2><ul class="lvl-0"><li class="lvl-2"><p>在使用<code>if</code>或<code>while</code>等语句时，需要进行条件判断，上面我们已经见到一个<code>while</code>的例子，其使用<code>[ ]</code>来定义条件判断</p></li><li class="lvl-2"><p>实际上除了<code>[ ]</code>以外，我们还可以使用<code>test</code>、<code>(( ))</code>和<code>[[ ]]</code>来进行条件判断，那么他们之间有什么区别吗？</p><ul class="lvl-2"><li class="lvl-6"><code>[ ]</code>是<code>test</code>命令的另一种形式，例如 <code>test a == b</code> 等同于 <code>[ a == b ]</code>，注意 <code>[</code> 后和 <code>]</code> 前都需要有空格，并且<code>==</code>两边也都要有空格</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> <span class="string">&#x27;hello&#x27;</span> != <span class="string">&#x27;world&#x27;</span> ==&gt;  [ <span class="string">&#x27;hello&#x27;</span> != <span class="string">&#x27;world&#x27;</span> ]</span><br><span class="line"><span class="built_in">test</span> ! -e test.sh       ==&gt;  [ ! -e test.sh ]</span><br><span class="line"><span class="built_in">test</span> <span class="variable">$i</span> -lt 5           ==&gt;  [ <span class="variable">$i</span> -lt 5 ]</span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6"><code>[[ ]]</code>是<code>[ ]</code>的增强版，其在如下几个方面进行了增强:<ul class="lvl-4"><li class="lvl-10">1.在<code>[[ ]]</code>中使用<code>&gt;</code>、<code>&lt;</code> 进行数值比较时不需要转义，但是不支持<code>&gt;=</code>、<code>&lt;=</code></li><li class="lvl-10">2.支持<code>&amp;&amp;</code>和<code>||</code></li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下三种作用相同</span></span><br><span class="line">[[ <span class="variable">$a</span> &gt; 3 &amp;&amp; <span class="variable">$a</span> != 10 ]]</span><br><span class="line">[ <span class="variable">$a</span> &gt; 3 -a <span class="variable">$a</span> != 10 ]</span><br><span class="line">[ <span class="variable">$a</span> &gt; 3 ] &amp;&amp; [ <span class="variable">$a</span> != 10 ]</span><br></pre></td></tr></table></figure><ul class="lvl-4"><li class="lvl-10">3.<code>[[ ]]</code>在比较字符串时支持正则匹配和通配符匹配</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通配符匹配</span></span><br><span class="line">a=<span class="string">&quot;linux&quot;</span></span><br><span class="line">[[ <span class="variable">$a</span> == l?nu? ]] <span class="comment"># 0</span></span><br><span class="line">[[ <span class="variable">$a</span> != li* ]]   <span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则匹配 `=~`</span></span><br><span class="line">a=<span class="string">&quot;linux&quot;</span></span><br><span class="line">[[ <span class="variable">$a</span> =~ ^li ]]</span><br><span class="line">[[ <span class="variable">$a</span> =~ ^li[abn]ux ]]</span><br></pre></td></tr></table></figure></li><li class="lvl-6"><code>(( ))</code> 用于条件判断时只能进行数值比较，运算符不需要转义，而且不支持<code>-lt</code>、<code>-gt</code>等等  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(( <span class="variable">$i</span> &lt;= 5 ))</span><br></pre></td></tr></table></figure></li></ul><div class="tips"><p><em><strong>小贴士</strong></em><br><code>(( ))</code>除了用于条件判断外，还有三种用法：<br>1.与<code>$</code>结合使用进行数学运算 : <code>$(( ))</code><br>2.在<code>for</code>循环命令中控制循环 : <code>for((i=1;i&lt;10;i++))</code><br>3.改变变量的值，且变量前不需要<code>$</code> : <code>((i++))</code></p></div></li><li class="lvl-2"><p>推荐在进行条件判断时使用<code>[[ ]]</code>，运算符不需要转义，而且支持正则</p></li></ul><h2 id="流程控制语句">流程控制语句</h2><h3 id="if语句"><code>if</code>语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法1</span></span><br><span class="line"><span class="comment"># 因为多个语句写在同一行，所以要用;隔开</span></span><br><span class="line"><span class="keyword">if</span> [[ -d <span class="variable">$path</span> ]];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;dir&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># 其实也可以这样写</span></span><br><span class="line"><span class="keyword">if</span> [[ -d <span class="variable">$path</span> ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;dir&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 语法2</span></span><br><span class="line"><span class="keyword">if</span> [[ -d <span class="variable">$path</span> ]];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;dir&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;not dir&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 语法3</span></span><br><span class="line"><span class="keyword">if</span> [[ -d <span class="variable">$path</span> ]];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;dir&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ -f <span class="variable">$path</span> ]];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;file&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;not match&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="case语句"><code>case</code>语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;start&quot;</span></span><br><span class="line">;;</span><br><span class="line">reload)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;reload&quot;</span></span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;stop&quot;</span></span><br><span class="line">;;</span><br><span class="line">status)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;status&quot;</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$0</span>: Usage: &#123;start|status|stop|reload&#125;&quot;</span></span><br><span class="line">    <span class="comment"># 非0，非正常退出，exit 0 :正常退出</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h3 id="select语句"><code>select</code>语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># select.sh</span></span><br><span class="line">select var <span class="keyword">in</span> <span class="string">&quot;Linux&quot;</span> <span class="string">&quot;UNIX&quot;</span> <span class="string">&quot;Windows&quot;</span> <span class="string">&quot;Other&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;You have selected <span class="variable">$var</span>&quot;</span></span><br><span class="line">    <span class="comment"># 跳出循环</span></span><br><span class="line">    <span class="built_in">break</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line">$ sh select.sh</span><br><span class="line">1) Linux</span><br><span class="line">2) UNIX</span><br><span class="line">3) Windows</span><br><span class="line">4) Other</span><br><span class="line"><span class="comment">#? 2 # 输入2，表示选择第二个</span></span><br><span class="line">You have selected UNIX</span><br></pre></td></tr></table></figure><h3 id="while循环语句"><code>while</code>循环语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=0</span><br><span class="line"><span class="keyword">while</span> [[ <span class="variable">$a</span> &lt; 5 ]]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line">    ((a++))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="until循环语句"><code>until</code>循环语句</h3><ul class="lvl-0"><li class="lvl-2"><p>类似<code>while</code>，不同点是条件判断为假时才执行</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a=5</span><br><span class="line"><span class="comment"># 不满足条件时执行</span></span><br><span class="line">until [[ <span class="variable">$a</span> == 0 ]]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line">    ((a--))</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="for循环语句"><code>for</code>循环语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法1</span></span><br><span class="line"><span class="keyword">for</span>((i=0;i&lt;=10;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 语法2</span></span><br><span class="line"><span class="comment"># 使用&#123;&#125;和seq生成序列</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9&#125;   <span class="comment"># 1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;this is <span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9..2&#125;   <span class="comment"># 1 3 5 7 9</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;this is <span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 9` <span class="comment"># 1 2 3 4 5 6 7 8 9</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;this is <span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 2 9` <span class="comment"># 1 3 5 7 9</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;this is <span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接列出要遍历的项</span></span><br><span class="line"><span class="keyword">for</span> day <span class="keyword">in</span> Sun Mon Tue Wed Thu Fri Sat</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The day is : <span class="variable">$day</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将命令执行结果作为要遍历的内容</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> `<span class="built_in">cat</span> file`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历所有参数</span></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$p</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="其它语句">其它语句</h3><ul class="lvl-0"><li class="lvl-2"><p><code>break</code> : 退出本层循环，继续执行本层循环体后面的代码，注意是退出本层循环体，如果是嵌套循环，则退出break所在层的循环，并非所有的循环</p></li><li class="lvl-2"><p><code>continue</code> : 跳过本次循环，不再执行continue下面的代码，回到循环判断式判断是否继续执行循环</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>((i=0;i&lt;=10;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$i</span> == 0 ]];<span class="keyword">then</span></span><br><span class="line">        <span class="comment"># 不执行后面的语句直接进行下次循环</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$i</span> == 8 ]];<span class="keyword">then</span></span><br><span class="line">        <span class="comment"># 跳出循环体，不再进行循环</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>exit 0</code> : 正常退出</p></li><li class="lvl-2"><p><code>exit 1</code> : 非0，非正常退出</p></li><li class="lvl-2"><p><code>shift</code> : 每执行一次，参数序列顺序左移一个位置，<code>$#</code>的值减1，移出去的参数不再可用</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shift.sh</span></span><br><span class="line"><span class="keyword">if</span> (( <span class="variable">$#</span> &lt;= 0 ));<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Not enough parameters&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">while</span> [[ <span class="variable">$#</span> &gt;= 0 ]]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">sum</span>=$((sum + <span class="variable">$1</span>))</span><br><span class="line">    <span class="built_in">shift</span> <span class="comment">#因为每次执行shift，所以上面的$1永远都是下一个参数</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$sum</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">$ sh shift.sh 1 2 3 4 5 <span class="comment"># 输出 15</span></span><br></pre></td></tr></table></figure><h2 id="shell函数的定义与使用">shell函数的定义与使用</h2><ul class="lvl-0"><li class="lvl-2"><p>shell函数定义</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 函数定义标准写法</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">name</span></span>() &#123;</span><br><span class="line">    statements</span><br><span class="line">    [<span class="built_in">return</span> value]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> : Shell 中的关键字，专门用来定义函数</span><br><span class="line">name : 函数名</span><br><span class="line">statements : 函数要执行的代码，也就是一组语句；</span><br><span class="line"><span class="built_in">return</span> value : 函数的返回值，其中 <span class="built_in">return</span> 是 Shell 关键字，专门用在函数中返回一个值，这一部分可以写也可以不写。</span><br><span class="line">由&#123; &#125;包围的部分称为函数体，调用一个函数，实际上就是执行函数体中的代码。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数定义时也可以不写 function 关键字</span></span><br><span class="line"><span class="function"><span class="title">name</span></span>() &#123;</span><br><span class="line">    statements</span><br><span class="line">    [<span class="built_in">return</span> value]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 如果写了 function 关键字，也可以省略函数名后面的小括号</span></span><br><span class="line"><span class="keyword">function</span> name &#123;</span><br><span class="line">    statements</span><br><span class="line">    [<span class="built_in">return</span> value]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>shell函数的调用</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果不传递参数，直接给出函数名字即可</span></span><br><span class="line">name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果传递参数，多个参数之间以空格分隔</span></span><br><span class="line">name param1 param2 param3</span><br></pre></td></tr></table></figure><blockquote><p>和其它编程语言不同的是，Shell 函数在定义时不能指明参数，但是在调用时却可以传递参数，在方法体内引用时通过$1,$2,……来使用传递过来的参数</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 函数定义，不需要接收参数</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;start&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 函数调用，在shell脚本中，可以将调用放在定义的前面</span></span><br><span class="line">start</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 函数定义，需要接收参数，假设这里需要接收两个数字并求和</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">sum</span></span>()&#123;</span><br><span class="line">    <span class="built_in">return</span> $(( <span class="variable">$1</span> + <span class="variable">$2</span> ))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 函数调用</span></span><br><span class="line"><span class="built_in">sum</span> 1 2</span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">echo</span> $?</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多个参数求和</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getsum</span></span>()&#123;</span><br><span class="line">    <span class="comment"># 定义局部变量，变量前面要加上local关键字</span></span><br><span class="line">    <span class="built_in">local</span> <span class="built_in">sum</span>=0</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        ((<span class="built_in">sum</span>+=n))</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$sum</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 函数调用</span></span><br><span class="line">getsum 10 20 55 15  <span class="comment">#调用函数并传递参数</span></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">echo</span> $?</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>shell函数中定义变量，也是全局变量，在函数体外也可以被调用，要是希望在函数体内定义的变量仅能被函数体内调用，则需要在变量前加上<code>local</code>关键字</p></li></ul><h2 id="shell运行与调试">shell运行与调试</h2><ul class="lvl-0"><li class="lvl-2"><p><code>sh test.sh</code> : 运行shell脚本</p></li><li class="lvl-2"><p><code>sh -x test.sh</code> : 执行脚步，并显示全部过程</p></li><li class="lvl-2"><p><code>sh -n test.sh</code> : 不执行脚步，只检查语法错误</p></li><li class="lvl-2"><p>也可以为shell脚本授予执行权限，然后通过<code>.</code>关键字执行，比如<code>. ~/test.sh</code>，或者直接通过脚本路径运行<code>~/test.sh</code>(注意要设置文件头指定shell)</p></li></ul><div class="tips"><p><em><strong>小贴士</strong></em><br>如果在windows环境下编写的脚步，上传到linux后需要先执行<code>dos2unix</code>进行编码转换，否则不能正确执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dos2unix test.sh</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍shell编程的语法规则。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令05--vim编辑器</title>
    <link href="https://blog.hanqunfeng.com/2023/03/11/linux-command05/"/>
    <id>https://blog.hanqunfeng.com/2023/03/11/linux-command05/</id>
    <published>2023-03-11T13:30:05.000Z</published>
    <updated>2023-03-14T09:42:42.843Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote %引用本地其它文章连接{} 大括号开始% post_link 文件名称(不包含.md) %大括号结束 --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍vim编辑器的使用方法。</p></li></ul><span id="more"></span><h2 id="vim操作模式">vim操作模式</h2><ul class="lvl-0"><li class="lvl-2"><p>vim支持很多种操作模式，常用的有三种操作模式，分别是命令(正常、普通)模式<code>(Command Mode)</code>、插入模式<code>(Insert Mode)</code>和底行模式<code>(Last Line Mode)</code>。</p></li><li class="lvl-2"><p>命令(正常、普通)模式<code>(Command Mode)</code></p><blockquote><p>进入vim之后，就处于<code>(Command Mode)</code>之中，在该模式下可以控制屏幕光标的移动，字符、字或行的删除，移动复制某区段以及进入<code>(Insert Mode)</code>或<code>(Last Line Mode)</code></p></blockquote></li><li class="lvl-2"><p>插入模式<code>(Insert Mode)</code></p><blockquote><p>在命令模式下输入如下字符即可切换至插入模式<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:在光标后   A:在本行末</span><br><span class="line">i:在光标前   I:在本行开始</span><br><span class="line">o:在光标下新开一行   O:在光标上新开一行</span><br><span class="line">此时就可以在光标所在处输入字符了</span><br></pre></td></tr></table></figure><br>只有在<code>(Insert Mode)</code>下，才可以做文字输入，按 <code>ESC</code> 键可回到<code>(Command Mode)</code>，该模式是我们用到的最频繁的模式</p></blockquote></li><li class="lvl-2"><p>底行(末行)模式<code>(Last Line Mode)</code></p><blockquote><p>在<code>(Command Mode)</code>下，输入<code>shift + :</code>，其实就是输入 <code>:</code> 即可进入<code>(Last Line Mode)</code><br>在<code>(Last Line Mode)</code>下，输入命令并回车即可执行相应的操作，无论输入的命令是否执行成功都会退出<code>(Last Line Mode)</code>并切换回<code>(Command Mode)</code>，<br>或者输入命令后不想执行，此时可以连按两次<code>Esc</code>键即可切换回<code>(Command Mode)</code>，或者按退格键直到取消<code>:</code>也会回到<code>(Command Mode)</code><br>在<code>(Last Line Mode)</code>下，可以进行文件保存或退出，也可以进行文件替换，找字符串，列出行号等操作</p></blockquote></li><li class="lvl-2"><p>要查看vim的所有操作模式，可以在命令行输入<code>vim</code>，然后在底行模式中输入<code>help vim-modes</code>命令即可。</p></li></ul><h2 id="vim语法">vim语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fileName不存在则创建</span></span><br><span class="line">vim fileName</span><br><span class="line"><span class="comment"># 也可以不加fileName直接打开vim编辑器，此时需要在保存时指定fileName</span></span><br><span class="line">vim</span><br></pre></td></tr></table></figure><h2 id="命令-正常、普通-模式-Command-Mode-相关指令">命令(正常、普通)模式<code>(Command Mode)</code>相关指令</h2><h3 id="移动光标">移动光标</h3><ul class="lvl-0"><li class="lvl-2"><p>vim可以直接用键盘上的上下左右键来移动光标，但正规的vim是用小写英文字母 <code>h 、 j 、 k 、 l</code> ，分别控制光标左、下、上、右移一格</p></li><li class="lvl-2"><p><code>gg</code> :光标移动到第一行开始处</p></li><li class="lvl-2"><p><code>G</code> :光标移动到最后一行开始处</p></li><li class="lvl-2"><p><code>#G</code> : 例如，15G ，表示移动光标至第15行行首</p></li><li class="lvl-2"><p><code>$</code> :移动到光标所在行的行尾</p></li><li class="lvl-2"><p><code>^ (0)</code> :移动到光标所在行的行首</p></li></ul><blockquote><p>上面的比较常用</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>H</code> : 光标移动到当前屏幕中的第一行开始处</p></li><li class="lvl-2"><p><code>L</code> : 光标移动到当前屏幕中的最后一行开始处</p></li><li class="lvl-2"><p><code>M</code> : 光标移动到当前屏幕中的最中间一行开始处</p></li><li class="lvl-2"><p><code>w</code> :光标跳到下个字的开头</p></li><li class="lvl-2"><p><code>e</code> :光标跳到下个字的字尾</p></li><li class="lvl-2"><p><code>b</code> :光标回到上个字的开头</p></li><li class="lvl-2"><p><code>#l</code> :光标移到相对当前光标所在处后的第#个位置，如:当前光标在本行第3个字符处，则5l表示移动到本行第8个字符处</p></li><li class="lvl-2"><p><code>ctrl + b</code> :屏幕往后移动一页</p></li><li class="lvl-2"><p><code>ctrl + f</code> :屏幕往前移动一页</p></li><li class="lvl-2"><p><code>ctrl + u</code> :屏幕往后移动半页</p></li><li class="lvl-2"><p><code>ctrl + d</code> :屏幕往前移动半页</p></li></ul><h3 id="删除文字">删除文字</h3><ul class="lvl-0"><li class="lvl-2"><p><code>x</code> :每按一次，删除光标所在位置的一个字符</p></li><li class="lvl-2"><p><code>dd</code> :删除光标所在行</p></li><li class="lvl-2"><p><code>#dd</code> :从光标所在行开始删除#行</p></li></ul><blockquote><p>上面的比较常用</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>#x</code> :例如，6x 表示删除光标所在位置的后面（包含自己在内）6个字符</p></li><li class="lvl-2"><p><code>X</code> :大写的X，每按一次，删除光标所在位置的前面一个字符</p></li><li class="lvl-2"><p><code>#X</code> :例如，20X 表示删除光标所在位置的前面20个字符</p></li><li class="lvl-2"><p><code>dG</code> :删除光标所在行到末尾的内容</p></li><li class="lvl-2"><p><code>D</code> :删除光标所在处到行尾</p></li></ul><h3 id="复制">复制</h3><ul class="lvl-0"><li class="lvl-2"><p><code>yy</code> :复制光标所在行到缓冲区。</p></li><li class="lvl-2"><p><code>#yy</code> :例如，6yy 表示拷贝从光标所在的该行往下数6行文字</p></li><li class="lvl-2"><p><code>p</code>:将缓冲区内的字符贴到光标所在位置。注意:所有与 <code>y</code> 有关的复制命令都必须与 <code>p</code> 配合才能完成复制与粘贴功能</p></li></ul><blockquote><p>上面的比较常用</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>yw</code> :将光标所在之处到字尾的字符复制到缓冲区中</p></li><li class="lvl-2"><p><code>#yw</code> :复制#个字到缓冲区</p></li></ul><h3 id="替换">替换</h3><ul class="lvl-0"><li class="lvl-2"><p><code>r</code> :替换光标所在处的字符，一次只能替换一个字符</p></li><li class="lvl-2"><p><code>R</code> :替换光标所到之处的字符，直到按下 <code>ESC</code> 键为止</p></li></ul><blockquote><p>不常用，直接进入插入模式修改就行</p></blockquote><h3 id="更改">更改</h3><ul class="lvl-0"><li class="lvl-2"><p><code>cw</code> :更改光标所在处的字到字尾处，标点符号或空格分隔，此时进入<code>(Insert Mode)</code></p></li><li class="lvl-2"><p><code>c#w</code> :例如，c3w 表示更改3个字，标点符号或空格分隔，此时进入<code>(Insert Mode)</code></p></li></ul><blockquote><p>不常用，直接进入插入模式修改就行</p></blockquote><h3 id="撤销或恢复上一次操作">撤销或恢复上一次操作</h3><ul class="lvl-0"><li class="lvl-2"><p><code>u</code> : 如果您误执行一个命令，可以马上按下 <code>u</code> ，回到上一个操作，按多次<code>u</code>可以执行多次恢复。</p></li><li class="lvl-2"><p><code>ctrl + r</code> : 撤销恢复，多次执行<code>ctrl + r</code>，可以多次撤销</p></li></ul><h2 id="底行-末行-模式-Last-Line-Mode-相关指令">底行(末行)模式<code>(Last Line Mode)</code>相关指令</h2><h3 id="列出或取消行号">列出或取消行号</h3><ul class="lvl-0"><li class="lvl-2"><p><code>set nu</code> : 输入 <code>set nu</code> 后，会在文件中的每一行前面列出行号</p></li><li class="lvl-2"><p><code>set nonu</code> : 输入 <code>set nonu</code> 后，会取消文件中的每一行前面列出的行号</p></li></ul><h3 id="跳到文件中的某一行">跳到文件中的某一行</h3><ul class="lvl-0"><li class="lvl-2"><p><code>#</code> : <code>#</code> 号表示一个数字，再冒号后输入一个数字，再按回车键就会跳到该行</p></li></ul><h3 id="查找字符">查找字符</h3><ul class="lvl-0"><li class="lvl-2"><p><code>/ + key</code> : 先按 <code>/</code> 键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按 <code>n</code> 会往 <em><strong>后</strong></em> 寻找到您要的内容，循环往复。</p></li><li class="lvl-2"><p><code>? + key1</code> : 先按 <code>?</code> 键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按 <code>n</code> 会往 <em><strong>前</strong></em> 寻找到您要的内容，循环往复。</p></li><li class="lvl-2"><p><code>set ic</code> :搜索时忽略大小写</p></li><li class="lvl-2"><p><code>set noic</code> :搜索时区分大小写</p></li></ul><h3 id="替换，语法类似于sed的s替换">替换，语法类似于sed的s替换</h3><ul class="lvl-0"><li class="lvl-2"><p><code>n1s/source/target/</code> :<code>n1</code>代表行号，替换第n1行首次出现的source为target</p></li><li class="lvl-2"><p><code>n1s/source/target/i</code> :<code>n1</code>代表行号，替换第n1行首次出现的source为target，<code>i</code>表示不区分大小写</p></li><li class="lvl-2"><p><code>n1s/source/target/g</code> :<code>n1</code>代表行号，替换第n行出现的全部source为target</p></li><li class="lvl-2"><p><code>%s/source/target/g</code> :<code>%</code>代表所有行，配合<code>g</code>表示全文替换，将整个文档中的source替换为target</p></li><li class="lvl-2"><p><code>n1,n2s/source/target/ig</code> :<code>n1,n2</code>代表行号，在n1行到n2行范围内替换指定内容，不区分大小写</p></li><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n1,n2s/^/#/ :行首添加#</span><br><span class="line">n1,n2s/^#// :去除行首#</span><br><span class="line">n1,n2s/^/\/\// :行首添加//</span><br><span class="line">n1,n2s/^\/\/// :去除行首//</span><br></pre></td></tr></table></figure><h3 id="删除，语法类似于sed的d删除">删除，语法类似于sed的d删除</h3><ul class="lvl-0"><li class="lvl-2"><p><code>n1d</code> :n1代表行号，删除指定的行</p></li><li class="lvl-2"><p><code>n1,n2d</code> :n1,n2代表行号，删除指定范围的行</p></li><li class="lvl-2"><p><code>1,$d</code> :删除所有行的全部内容</p></li></ul><h3 id="保存和退出">保存和退出</h3><ul class="lvl-0"><li class="lvl-2"><p><code>w</code> :保存修改，不退出</p></li><li class="lvl-2"><p><code>w new_filename</code> :另存为，新的文件名称为new_filename</p></li><li class="lvl-2"><p><code>wq</code> :保存退出</p></li><li class="lvl-2"><p><code>q!</code> :不保存修改退出</p></li><li class="lvl-2"><p><code>wq!</code> :强制保存修改并退出，文件是只读的时候可以使用该命令强制保存（只有文件所有者有权限这样做）</p></li></ul><h3 id="定义快捷键">定义快捷键</h3><ul class="lvl-0"><li class="lvl-2"><p>我们可以自己定义快捷键，以定制化一个操作，比如在当前行行首添加<code>#</code></p></li><li class="lvl-2"><p>语法为：<code>map ^P I#&lt;ESC&gt;</code> : 定义<code>ctrl + p</code>，其含义为 输入大写字母<code>I</code>进入插入模式,输入<code>#</code>字符后按<code>Esc</code>切换回命令模式，注意，这里定义map时填写的<code>&lt;ESC&gt;</code>是一个字符一个字符写上的，而不是去按一次Esc按键</p><blockquote><p><code>^P</code> 的 输入方法为: <code>ctrl+v+p</code></p></blockquote></li><li class="lvl-2"><p>此时在当前vim的命令模式下，输入<code>ctrl + p</code>会在光标所在行的行首添加<code>#</code></p></li><li class="lvl-2"><p><code>unmap ^P</code> :取消该快捷键</p></li><li class="lvl-2"><p>在底行模式下定义快捷键只对本次vim有效，退出vim就失效了，如要永久生效，可以配置到<code>~/.vimrc</code>中</p></li></ul><h3 id="ab替换">ab替换</h3><ul class="lvl-0"><li class="lvl-2"><p>ab替换可以让我们在使用vim的插入模式编辑内容时，输入指定的字符，vim会自动帮我们替换为指定的内容</p></li><li class="lvl-2"><p>语法为：<code>ab key1 key2</code>，此时我们输入key1,会自动被vim替换为key2</p><blockquote><p>如：<code>ab myemali hanqunfeng@xxx.com</code>，当输入myemail+空格后，会自动替换为hanqunfeng@xxx.com</p></blockquote></li><li class="lvl-2"><p><code>unab myemail</code> :取消</p></li><li class="lvl-2"><p>在底行模式下定义ab替换只对本次vim有效，退出vim就失效了，如要永久生效，可以配置到<code>~/.vimrc</code>中</p></li></ul><h2 id="vim配置">vim配置</h2><ul class="lvl-0"><li class="lvl-2"><p>配置文件的位置</p><blockquote><p>在目录 <code>/etc</code>目录下面，有个名为<code>vimrc</code>的文件，这是系统中公共的vim配置文件，对所有用户都有效。<br>而在每个用户的home目录下，都可以自己建立私有的配置文件，命名为：<code>.vimrc</code><br>私有配置会覆盖公共配置中相同的内容，通常我们只修改私有配置文件</p></blockquote></li><li class="lvl-2"><p>常用配置，注释是行首双引号</p></li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; 快捷键</span></span><br><span class="line"><span class="keyword">map</span> ^<span class="keyword">P</span> I#<span class="symbol">&lt;ESC&gt;</span></span><br><span class="line"><span class="comment">&quot; ab替换</span></span><br><span class="line"><span class="keyword">ab</span> myemali hanqunfeng@xxx.<span class="keyword">com</span></span><br><span class="line"><span class="comment">&quot; 显示行号</span></span><br><span class="line"><span class="keyword">set</span>  <span class="keyword">nu</span></span><br><span class="line"><span class="comment">&quot; 语法高亮</span></span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"><span class="comment">&quot; 缩进为4</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 括号和引号的自动补全</span></span><br><span class="line"><span class="keyword">inoremap</span> ( ()<span class="symbol">&lt;ESC&gt;</span>i</span><br><span class="line"><span class="keyword">inoremap</span> [ []<span class="symbol">&lt;ESC&gt;</span>i</span><br><span class="line"><span class="keyword">inoremap</span> &#123; &#123;&#125;<span class="symbol">&lt;ESC&gt;</span>i</span><br><span class="line"><span class="keyword">inoremap</span> <span class="string">&#x27; &#x27;</span><span class="string">&#x27;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>关于vim更为详细的配置请参考 <a href="/2021/01/23/vimrc/" title="vim配置">vim配置</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

引用本地其它文章连接{}
 大括号开始% post_link 文件名称(不包含.md) %大括号结束
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍vim编辑器的使用方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令04--命令行快捷键</title>
    <link href="https://blog.hanqunfeng.com/2023/03/10/linux-command04/"/>
    <id>https://blog.hanqunfeng.com/2023/03/10/linux-command04/</id>
    <published>2023-03-10T13:30:05.000Z</published>
    <updated>2023-03-10T07:52:28.238Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>本文介绍常用的命令行快捷键</p></li></ul><span id="more"></span><h2 id="最最常用的快捷键">最最常用的快捷键</h2><ul class="lvl-0"><li class="lvl-2"><p><code>tab (ctrl + i)</code> : 命令补全</p><blockquote><p>有些命令如果想不起来怎么拼写了，可以只输入前面几个字符，然后按一次tab键，就会自动补全以输入前缀开头的命令<br>按两次tab键，就会显示以输入前缀开头的全部命令</p></blockquote></li><li class="lvl-2"><p><code>ctrl + c</code> : 停止正在执行的任务 或者 取消当前命令行编辑(删除整行)</p></li><li class="lvl-2"><p><code>ctrl + l</code> : 清除屏幕上所有内容，并开始新的一行，相当于执行<code>clear</code>命令</p></li><li class="lvl-2"><p><code>ctrl + a</code> : 光标回到命令行首</p></li><li class="lvl-2"><p><code>ctrl + e</code> : 光标回到命令行末</p></li><li class="lvl-2"><p><code>ctrl + insert</code> : 复制选中内容，mac下是 <code>command + c</code></p></li><li class="lvl-2"><p><code>alt + insert</code> : 粘贴刚才复制的内容到当前光标处，mac下是 <code>command + v</code></p></li><li class="lvl-2"><p>↑<code>(ctrl + p)</code> : 显示上一条历史命令</p></li><li class="lvl-2"><p>↓<code>(ctrl + n )</code> : 显示下一条历史命令</p></li><li class="lvl-2"><p><code>!!</code> : 执行上一条命令，相当于 ↑ + <code>Enter</code></p></li><li class="lvl-2"><p><code>!key</code>  : 执行上一条以<code>key</code>开头的命令</p></li><li class="lvl-2"><p><code>backspace (ctrl + h)</code> : 删除光标前一个字符，mac下是 <code>delete</code>键</p></li></ul><div class="success"><p>记住上面的的这些快捷键，基本上日常操作就没啥问题了，下面的快捷键可以使我们的命令行操作更加高效和便捷，能记多少就记多少吧。</p></div><h2 id="剪切和删除">剪切和删除</h2><ul class="lvl-0"><li class="lvl-2"><p><code>ctrl + k</code> : 剪切光标处到行尾处的字符（有删除的作用）</p></li><li class="lvl-2"><p><code>ctrl + u</code> : 剪切光标处到行首处的字符（有删除的作用）</p></li><li class="lvl-2"><p><code>ctrl + w</code> : 剪切光标前的一个单词（有删除的作用）</p></li><li class="lvl-2"><p><code>alt + d</code> : 剪切光标后的一个单词（有删除的作用），mac下是 <code>Esc + d</code></p></li><li class="lvl-2"><p><code>ctrl + y</code> : 粘贴<code>ctrl + k</code>、<code>ctrl + u</code>、<code>ctrl + w</code>、<code>alt + d</code> 剪切/删除的文本</p></li><li class="lvl-2"><p><code>ctrl + d</code> : 删除光标所在处字符</p></li></ul><h2 id="搜索历史命令">搜索历史命令</h2><ul class="lvl-0"><li class="lvl-2"><p><code>ctrl + r</code> : 搜索历史命令中的命令记录，输入一些关键字，会自动给出匹配到的结果，连续按<code>ctrl + r</code>，给出下一条匹配结果</p><blockquote><p>类似于 <code>history | grep key</code>，但是<code>ctrl + r</code>给出的结果会去重</p></blockquote></li><li class="lvl-2"><p><code>Enter (ctrl + o) (ctrl + m)</code> : 执行匹配结果中的命令</p></li><li class="lvl-2"><p><code>ctrl + g</code> : 从正在执行<code>ctrl + r</code>的搜索中退出，<code>ctrl + c</code>也行</p></li><li class="lvl-2"><p>-&gt;<code>(Esc) (ctrl + j)</code> : 将<code>ctrl + r</code>的搜索中的匹配结果粘贴到命令行，其实好多快捷键都可以达到该效果，随便记住一个吧</p></li></ul><h2 id="前台进程转到后台运行">前台进程转到后台运行</h2><ul class="lvl-0"><li class="lvl-2"><p>假设你发现前台运行的一个进程需要很长的时间，但是你需要干其他的事情，你就可以将当前进程转到后台运行</p></li><li class="lvl-2"><p><code>ctrl + z</code> : 暂停正在运行行中的进程</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1]+ Stopped /root/bin/rsync.sh  <span class="comment"># [1] 表示的是 jobnumber</span></span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p><code>bg</code> : 将暂停中的进程转到后台运行</p><blockquote><p>把当前进程暂停后，可以输入使用<code>bg</code>将该程序转到后台运行<br>如果有多个暂停中的程序，可以输入<code>bg + jobnumber</code>将指定序号的程序转到后台运行</p></blockquote></li><li class="lvl-2"><p><code>jobs</code> : 显示后台运行的进程信息</p></li><li class="lvl-2"><p><code>fg</code> : 将后台运行的进程转到前台运行</p><blockquote><p>把后台运行的进程转到前台运行，可以输入使用<code>fg</code>将该程序转到前台运行<br>如果有多个后台运行中的程序，可以输入<code>fg + jobnumber</code>将指定序号的程序转到前台运行</p></blockquote></li><li class="lvl-2"><p>要将一个进程在运行时就直接放到后台运行，可以在命令最后增加 <code>&amp;</code> 符号，但这个仅在当前会话中有效，一旦会话关闭，当前进程就会中断执行</p></li><li class="lvl-2"><p>可以在命令最前面加上<code>nohup</code>命令，这样进程就会一直在后台运行直到程序运行结束，而不会因为会话关闭而中断</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> sh test.sh &amp;</span><br></pre></td></tr></table></figure></li></ul><h2 id="屏幕锁定、-解锁">屏幕锁定、 解锁</h2><ul class="lvl-0"><li class="lvl-2"><p><code>ctrl + s</code> : 锁定界面，停止屏幕打印内容，使终端发呆，静止，可以使快速输出的终端屏幕停下来</p></li><li class="lvl-2"><p><code>ctrl + q</code> : 解开<code>ctrl + s</code> 的锁定界面，继续屏幕打印</p></li></ul><h2 id="光标移动">光标移动</h2><ul class="lvl-0"><li class="lvl-2"><p><code>Esc + .</code> : 获取上一条命令的最后部分（空格分隔）</p></li><li class="lvl-2"><p><code>Esc + b</code> : 移动到当前单词的开头</p></li><li class="lvl-2"><p><code>Esc + f</code> : 移动到当前单词的结尾</p></li><li class="lvl-2"><p>-&gt;<code>(ctrl + f)</code> : 光标向右移动一个字符</p></li><li class="lvl-2"><p>&lt;-<code>(ctrl + b)</code> : 光标向左移动一个字符</p></li><li class="lvl-2"><p><code>ctrl + t</code> : 交换光标位置前的两个字符</p></li></ul><h2 id="其它">其它</h2><ul class="lvl-0"><li class="lvl-2"><p><code>!$</code> : 显示最近的一个参数</p><blockquote><p>比如我先用 <code>cat /etc/sysconfig/network-scripts/ifcfg-eth0</code>，然后我想用 vim 编辑。<br>一般的做法是先用 ↑ 显示最后一条命令，然后用 <code>ctrl + a</code> 移动到命令最前，删除 cat，然后再输入 vim 命令。<br>其实完全可以用 <code>vim !$</code>来代替。</p></blockquote></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文介绍常用的命令行快捷键&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令03--文本搜索、替换、分割、排序和去重相关命令</title>
    <link href="https://blog.hanqunfeng.com/2023/03/06/linux-command03/"/>
    <id>https://blog.hanqunfeng.com/2023/03/06/linux-command03/</id>
    <published>2023-03-06T13:30:05.000Z</published>
    <updated>2023-03-15T09:52:29.810Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>文本搜索、替换、分割合并等相关命令，如grep、egrep、sed、awk、tr、cut、paste和split等等</p></li><li class="lvl-2"><p>在对文本进行处理时，我们还经常会使用到的排序、去重和统计行数等相关命令，如sort、uniq、wc等等</p></li></ul><span id="more"></span><h2 id="grep">grep</h2><ul class="lvl-0"><li class="lvl-2"><p>grep命令是linux中一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [option] pattern files</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匹配关键字key，忽略大小写</span></span><br><span class="line">grep -i key file</span><br><span class="line"></span><br><span class="line">grep <span class="string">&quot;^#&quot;</span> file : 显示所有行首是<span class="comment">#的行</span></span><br><span class="line">    ^ : 正则，以什么开头的行</span><br><span class="line">    $ : 正则，以什么结尾的行</span><br><span class="line"></span><br><span class="line">grep -v <span class="string">&quot;^#&quot;</span> file : 显示所有行首不是<span class="comment">#的行</span></span><br><span class="line">    -v : 找出与所给关键字不匹配的行</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符匹配</span></span><br><span class="line">grep [A] file : 行中内容包含给定的字符</span><br><span class="line">    [ ] : 匹配单个字符</span><br><span class="line">grep [^A] file : 行中内容不包含给定的字符</span><br><span class="line">    [^] : 不匹配单个字符</span><br><span class="line">grep [A-Z] file : 行中内容包含给定的字符范围中的任何一个</span><br><span class="line">    [-] : 匹配范围字符</span><br><span class="line"></span><br><span class="line">grep [ABC] file : 行中内容包含给定的字符列表中的任何一个</span><br><span class="line">grep [^ABC] file : 匹配除方括号中字符外的所有字符</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符类描述: 注意使用时外面要加[]</span></span><br><span class="line">[:alnum:] 字母数字集 “a-z A-Z 0-9”</span><br><span class="line">[:alpha:] 字母集合 “a-z A-Z”</span><br><span class="line">[:blank:] 空格或制表键</span><br><span class="line">[:cntrl:] 任何控制字符</span><br><span class="line">[:digit:] 数字集合 “0-9”</span><br><span class="line">[:graph:] 任何可视字符（无空格）</span><br><span class="line">[:lower:] 小写字母 “a-z”</span><br><span class="line">[:<span class="built_in">print</span>:] 非控制字符</span><br><span class="line">[:punct:] 标点字符</span><br><span class="line">[:space:] 空格</span><br><span class="line">[:upper:] 大写字母 “A-Z”</span><br><span class="line">[:xdigit:] 十六进制数字 “0-9 a-f A-F”</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line"><span class="comment">#搜索开头不是英文字母的行</span></span><br><span class="line">grep ^[^[:alpha:]] file === grep ^[^a-zA-Z] file</span><br><span class="line"><span class="comment"># 搜索非空行</span></span><br><span class="line">grep -v <span class="string">&quot;^$&quot;</span> file : 搜索非空行，严格来讲这个不准确，不能去除行内容只有空格或者制表符的行</span><br><span class="line">grep [^[:blank:]] file : 搜索非空行，去除行内容只有空格或者制表符的行</span><br><span class="line"></span><br><span class="line">grep key file -A 10 : 显示关键字行及其后面的10行</span><br><span class="line">    -A : After</span><br><span class="line"></span><br><span class="line">grep key file -B 10 : 显示关键字行及其前面的10行</span><br><span class="line">    -B : Before</span><br><span class="line"></span><br><span class="line">grep key file -2 : 显示关键行及其上两行和下两行</span><br><span class="line">    -num : 显示上下各num行</span><br><span class="line"></span><br><span class="line"><span class="comment"># -E 开启扩展正则表达式</span></span><br><span class="line">grep -E <span class="string">&quot;^#&quot;</span> file  <span class="comment">#打印所有注释行</span></span><br><span class="line">    -E : 支持正则表达式</span><br><span class="line"></span><br><span class="line">grep  -E <span class="string">&#x27;key1|key2&#x27;</span>  -n -i file : 查找包含任意关键字的行，并显示行号</span><br><span class="line">    -n : 显示行号</span><br><span class="line">    -i : 不区分大小写</span><br><span class="line"></span><br><span class="line">grep key -c file : 查找关键字匹配的行数</span><br><span class="line">    -c : 只输出匹配行的计数</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个命令非常有用，可以快速定位关键字所在的文件位置</span></span><br><span class="line">grep <span class="string">&#x27;key&#x27;</span> -r <span class="built_in">dir</span> : 在目录下递归查找文件内容包含关键字的文件路径及其所含关键字的内容</span><br><span class="line">    -r : 递归查找</span><br><span class="line"></span><br><span class="line">grep <span class="string">&#x27;key&#x27;</span> -l *.<span class="built_in">log</span> : 打印包含关键字的文件名称</span><br><span class="line">    -l : 在多个文件中查找关键字，并打印文件名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把key当做一个完整的单词来进行匹配，忽略那些部分匹配的行，比如 to只能匹配to，不能匹配tom</span></span><br><span class="line">grep -w key file</span><br></pre></td></tr></table></figure><h2 id="egrep">egrep</h2><ul class="lvl-0"><li class="lvl-2"><p>egrep命令用于在文件内查找指定的字符串，egrep执行效果与&quot;grep -E&quot;相似，使用的语法及参数可参照grep指令，与grep的不同点在于解读字符串的方法。</p></li><li class="lvl-2"><p>egrep命令为 grep 的扩充版本, 改良了许多传统 grep 不能或不便的操作，比如:</p><ul class="lvl-2"><li class="lvl-6">grep 使用 <code>?</code> 与 <code>+</code> 时需要转义, 但egrep不需要。</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;[0-9]\+&quot;</span> test.txt</span><br><span class="line">grep -E <span class="string">&quot;[0-9]+&quot;</span> test.txt</span><br><span class="line">egrep <span class="string">&quot;[0-9]+&quot;</span> test.txt</span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6">grep 使用 <code>a|b</code> 或 <code>(abc|xyz)</code> 这类&quot;或一&quot;比对时需要对<code>|</code>进行转义, 但egrep不需要。</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;a\|s&quot;</span> test.txt</span><br><span class="line">grep -E <span class="string">&quot;a|s&quot;</span> test.txt</span><br><span class="line">egrep <span class="string">&quot;a|s&quot;</span> test.txt</span><br><span class="line"></span><br><span class="line">grep <span class="string">&quot;\(a\|s\)&quot;</span> test.txt</span><br><span class="line">grep -E <span class="string">&quot;(a|s)&quot;</span> test.txt</span><br><span class="line">egrep <span class="string">&quot;(a|s)&quot;</span> test.txt</span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6">grep在处理 <code>&#123;n,m&#125;</code> 时, 需用 <code>\&#123; </code>与 <code>\&#125;</code> 进行转义, 但egrep不需要。</li></ul>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;[0-9]\&#123;3\&#125;&quot;</span> test.txt</span><br><span class="line">grep -E <span class="string">&quot;[0-9]&#123;3&#125;&quot;</span> test.txt</span><br><span class="line">egrep <span class="string">&quot;[0-9]&#123;3&#125;&quot;</span> test.txt</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egrep [范本模式] [文件或目录]</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">egrep <span class="string">&#x27;key1|key2|key3&#x27;</span> file : 查找包含任意关键字的行</span><br><span class="line">egrep <span class="string">&#x27;a+&#x27;</span> file : 查找包含一个或多个a的行</span><br><span class="line">egrep <span class="string">&#x27;(abc)&#x27;</span> file : 包含abc整体的行</span><br><span class="line">egrep <span class="string">&#x27;(abc)+&#x27;</span> file : 包含一个或多个abc整体的行</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>linux正则表达式</strong></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">基础正则表达式    解释</span><br><span class="line">^            ^word表示以word开头的内容</span><br><span class="line">$            word$表示以word结尾的内容</span><br><span class="line">^$            表示空行</span><br><span class="line">.            代表且只能代表任意一个字符</span><br><span class="line">\            转义字符</span><br><span class="line">*            重复之前的字符0或多次</span><br><span class="line">.*            匹配任意多个字符</span><br><span class="line">[abc]           匹配abc其中的任意一个</span><br><span class="line">[^abc]          匹配未包含在[abc]内的任意一个字符</span><br><span class="line">[a-z]        匹配a-z其中的一个字符，[0-9]匹配任意数字</span><br><span class="line"></span><br><span class="line"># grep -E 或者 egrep，grep使用时要转义特殊字符</span><br><span class="line">扩展正则表达式      解释</span><br><span class="line">&#123;m,n&#125;        匹配前一个字符m到n次，注意grep使用时，&#123;&#125;要加转义字符\&#123;\&#125;</span><br><span class="line">&#123;m&#125;            匹配字符m次</span><br><span class="line">&#123;m,&#125;            匹配字符至少m次</span><br><span class="line">+            匹配前一个字符1次或者多次，最少一次，如 wo+d，可以匹配 &quot;wood&quot; &quot;woood&quot; &quot;woooooood&quot;等字符串</span><br><span class="line">?            重复前一个字符0次或者1次，如 bes?t，可以匹配 &quot;bet&quot; 和 &quot;best&quot; 两个字符串</span><br><span class="line">|            同时过滤多个字符，如 of|is|on，匹配包含 &quot;of&quot; 或者 &quot;if&quot; 或者 &quot;on&quot; 的字符串</span><br><span class="line">()              分组，将1个或多个字符捆绑在一起，当做一个整体进行处理，如 t(ad|ef)st，可以匹配 &quot;tadst&quot; 与 &quot;tefst&quot; 两个字符串</span><br><span class="line">                分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部的变量中，这些变量的命名方式为：\1,\2,\3....</span><br><span class="line">()+             辨别多个重复的组，如 A(xyz)+C ,可以匹配 开头是&quot;A&quot;结尾是&quot;C&quot;，中间有一个以上的&quot;xyz&quot;的字符串</span><br><span class="line"></span><br><span class="line"># grep -P，不支持egrep</span><br><span class="line">Perl 正则表达式    解释</span><br><span class="line">\t              匹配制表符</span><br><span class="line">\n              匹配换行符</span><br><span class="line">\s              匹配空白字符，空格、制表符\t、换行符\r和\n等</span><br><span class="line">\S              匹配非空白字符</span><br><span class="line">\d              匹配数字[0-9]，如：grep -P &quot;\d&quot; test.txt</span><br><span class="line">\D              匹配非数字[^0-9]</span><br><span class="line">\w              匹配字母数字下划线[a-zA-Z0-9_]</span><br><span class="line">\W              匹配非字母数字下划线[^a-zA-Z0-9_]</span><br></pre></td></tr></table></figure><h2 id="sed">sed</h2><ul class="lvl-1"><li class="lvl-2"><p><code>sed</code> 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。</p></li><li class="lvl-2"><p><code>sed</code> 主要用来自动编辑一个或多个文件、简化对文件的反复操作、编写转换程序等。</p></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式：sed [options] <span class="string">&#x27;command&#x27;</span> file(s)</span><br></pre></td></tr></table></figure><h3 id="1-删除：d命令">1)删除：d命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除example文件的第二行</span></span><br><span class="line">sed <span class="string">&#x27;2d&#x27;</span> example</span><br><span class="line"><span class="comment"># 删除第二行和第五行</span></span><br><span class="line">sed <span class="string">&#x27;2d;5d&#x27;</span> example</span><br><span class="line"><span class="comment"># 删除第二行到第五行</span></span><br><span class="line">sed <span class="string">&#x27;2,5d&#x27;</span> example</span><br><span class="line"><span class="comment"># 删除example文件的第二行到末尾所有行</span></span><br><span class="line">sed <span class="string">&#x27;2,$d&#x27;</span> example  </span><br><span class="line"><span class="comment"># 删除example文件的最后一行</span></span><br><span class="line">sed <span class="string">&#x27;$d&#x27;</span> example</span><br><span class="line"><span class="comment"># 删除example文件所有包含test的行</span></span><br><span class="line">sed <span class="string">&#x27;/test/&#x27;</span>d example</span><br><span class="line"><span class="comment"># 所有在模板test和check所确定的范围内的行都被删除</span></span><br><span class="line">sed <span class="string">&#x27;/test/,/check/&#x27;</span>d example</span><br><span class="line"><span class="comment"># 从第一行开始，每间隔一行删除一行，这里表示删除1，3，5...行</span></span><br><span class="line">sed <span class="string">&#x27;1~2d&#x27;</span> example</span><br></pre></td></tr></table></figure><h3 id="2-替换：s命令">2)替换：s命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 替换第几处模式匹配的地方，这里2表示替换第二处匹配的地方</span></span><br><span class="line">sed <span class="string">&#x27;s/test/mytest/2&#x27;</span> example</span><br><span class="line">    n : 1~512 之间的数字，表示指定要替换的字符串出现第几次时才进行替换</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在整行范围内把test(i不区分大小写)替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest</span></span><br><span class="line">sed <span class="string">&#x27;s/test/mytest/ig&#x27;</span> example</span><br><span class="line">    i : 不区分大小写</span><br><span class="line">    g : 对数据中所有匹配到的内容进行替换，不加g只匹配第一个</span><br><span class="line"></span><br><span class="line"><span class="comment"># (-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它</span></span><br><span class="line">sed -n <span class="string">&#x27;s/^test/mytest/p&#x27;</span> example </span><br><span class="line">    -n : 关闭输出，和p标志一起使用表示只打印那些发生替换的行</span><br><span class="line"></span><br><span class="line"><span class="comment"># &amp;符号表示替换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhost</span></span><br><span class="line">sed <span class="string">&#x27;s/^192.168.0.1/&amp;localhost/&#x27;</span> example </span><br><span class="line">    &amp; : 表示替换字符串中被找到的部份</span><br><span class="line"></span><br><span class="line"><span class="comment"># love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。</span></span><br><span class="line">sed -n <span class="string">&#x27;s/\(love\)able/\1rs/p&#x27;</span> example </span><br><span class="line">    () : 标记搜索内容，括号顺序按1，2...顺序被标记，注意这里需要被转义</span><br><span class="line"><span class="comment"># love被标记为1，所有loveable会被替换成lovers，打印所有行</span></span><br><span class="line">sed -r <span class="string">&#x27;s/(^love)able/\1rs/&#x27;</span> example </span><br><span class="line">    -r : 支持扩展正则，这里()不需要被转义</span><br><span class="line"><span class="comment"># 所有loveable会被替换成loversbl，括号顺序按1，2...顺序被标记</span></span><br><span class="line">sed -r <span class="string">&#x27;s/(^love)a(bl)e/\1rs\2/&#x27;</span> example </span><br><span class="line"></span><br><span class="line"><span class="comment"># 不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100</span></span><br><span class="line">sed <span class="string">&#x27;s#10#100#g&#x27;</span> example </span><br><span class="line"></span><br><span class="line"><span class="comment"># -i直接替换源文件，慎重使用</span></span><br><span class="line">sed -i <span class="string">&#x27;s/test/mytest/ig&#x27;</span> example </span><br><span class="line">    -i : 直接替换源文件，慎重使用</span><br><span class="line"></span><br><span class="line"><span class="comment"># w标记会将匹配后的结果保存到指定文件中，注意这里text.txt中只会保留那些发生替换的行</span></span><br><span class="line">sed <span class="string">&#x27;s/test/mytest/w test.txt&#x27;</span> example  ====&gt; sed -n <span class="string">&#x27;s/test/mytest/p&#x27;</span> example &gt; test.txt</span><br><span class="line">    w : 会将匹配后的结果保存到指定文件中</span><br></pre></td></tr></table></figure><h3 id="3-选定行的范围：逗号">3)选定行的范围：逗号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有在模板test和check所确定的范围内的行都被打印 </span></span><br><span class="line">sed -n <span class="string">&#x27;/test/,/check/p&#x27;</span> example</span><br><span class="line"><span class="comment"># 按连续内容截取，这里还是按关键字搜索匹配，这里假设每行都有序号并且连续</span></span><br><span class="line">sed -n <span class="string">&#x27;/5518/,/5524/p&#x27;</span> example  </span><br><span class="line"></span><br><span class="line"><span class="comment"># grep也有类似方法：</span></span><br><span class="line">countnum=$[ <span class="variable">$endnum</span> - <span class="variable">$startnum</span> + 1  ]</span><br><span class="line">grep <span class="string">&quot;<span class="variable">$startnum</span>&quot;</span> file -A <span class="variable">$countnum</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印文件的第二行</span></span><br><span class="line">sed -n <span class="string">&#x27;2p&#x27;</span> example</span><br><span class="line"><span class="comment"># 打印文件的第二行和第四行</span></span><br><span class="line">sed -n <span class="string">&#x27;2p;4p&#x27;</span> example</span><br><span class="line"><span class="comment"># 打印第1行到第100百行</span></span><br><span class="line">sed -n <span class="string">&#x27;1,100p&#x27;</span> example  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印从第五行开始到第一个包含以test开始的行之间的所有行</span></span><br><span class="line">sed -n <span class="string">&#x27;5,/^test/p&#x27;</span> example</span><br><span class="line"><span class="comment"># 打印从第一个包含以test开始的行到第五行之间的所有行</span></span><br><span class="line">sed -n <span class="string">&#x27;/^test/,5p&#x27;</span> example</span><br><span class="line"><span class="comment"># 打印从第一个包含以test开始的行到最后一行之间的所有行</span></span><br><span class="line">sed -n <span class="string">&#x27;/^test/,$p&#x27;</span> example</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从第一行开始，间隔2行打印，这里表示打印1，4，7，10...行</span></span><br><span class="line">sed -n <span class="string">&#x27;1~3p&#x27;</span> example</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于模板test和check之间的行，每行的末尾用字符串sed test替换</span></span><br><span class="line">sed <span class="string">&#x27;/test/,/check/s/$/sed test/&#x27;</span> example</span><br><span class="line"><span class="comment"># 第2到5行，每行的末尾用字符串sed test替换</span></span><br><span class="line">sed <span class="string">&#x27;2,5s/$/sed test/&#x27;</span> example</span><br><span class="line"><span class="comment"># 第2到最后一行，每行的末尾用字符串sed test替换</span></span><br><span class="line">sed <span class="string">&#x27;2,$s/$/sed test/&#x27;</span> example</span><br></pre></td></tr></table></figure><h3 id="4-多点编辑：e命令">4)多点编辑：e命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># (-e)选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果</span></span><br><span class="line">sed -e <span class="string">&#x27;1,5d&#x27;</span> -e <span class="string">&#x27;s/test/check/&#x27;</span> example</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个比-e更好的命令是--expression。它能给sed表达式赋值。</span></span><br><span class="line">sed --expression=<span class="string">&#x27;s/test/check/&#x27;</span> --expression=<span class="string">&#x27;/love/d&#x27;</span> example</span><br></pre></td></tr></table></figure><h3 id="5-追加行或替换行：a、i、c和r">5)追加行或替换行：a、i、c和r</h3><ul class="lvl-1"><li class="lvl-2"><p>a 命令表示在指定行的后面附加一行，i 命令表示在指定行的前面插入一行</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将hello wordl 插入到第二行上面</span></span><br><span class="line">sed <span class="string">&#x27;2i hello world&#x27;</span> example</span><br><span class="line">    i : 表示在指定行的前面插入一行</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将hello wordl 插入到第二行下面</span></span><br><span class="line">sed <span class="string">&#x27;2a hello world&#x27;</span> example</span><br><span class="line">    a : 表示在指定行的后面插入一行</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以同时插入多行内容，使用反斜线即可，这里表示在第二行下面添加两行内容</span></span><br><span class="line">sed <span class="string">&#x27;2a\</span></span><br><span class="line"><span class="string">&gt; hello world\</span></span><br><span class="line"><span class="string">&gt; i love you&#x27;</span> example</span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2"><p>c 命令表示将指定行中的所有内容，替换成该选项后面的字符串</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将hello wordl 替换第二行</span></span><br><span class="line">sed <span class="string">&#x27;2c hello world&#x27;</span> example</span><br><span class="line">    c : 替换行内容</span><br><span class="line"><span class="comment"># 同样支持替换为多行</span></span><br><span class="line">sed <span class="string">&#x27;2c\</span></span><br><span class="line"><span class="string">&gt; hello world\</span></span><br><span class="line"><span class="string">&gt; i love you&#x27;</span> example</span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2"><p>r 命令用于将一个独立文件的数据插入到当前数据流的指定位置</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将text.txt中的内容插入到example文件的第二行下面</span></span><br><span class="line">sed <span class="string">&#x27;2r test.txt&#x27;</span> example</span><br><span class="line"><span class="comment"># 将text.txt中的内容插入到example文件的末尾</span></span><br><span class="line">sed <span class="string">&#x27;$r test.txt&#x27;</span> example</span><br></pre></td></tr></table></figure><h3 id="6-处理单个字符：y">6)处理单个字符：y</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;This 1 is a test2 of 1 try3.&quot;</span> | sed <span class="string">&#x27;y/123/456/&#x27;</span></span><br><span class="line">This 4 is a test5 of 4 try6.</span><br><span class="line">    y : 字符全局替换，原字符与替换字符的长度必须相同</span><br></pre></td></tr></table></figure><h3 id="7-指定行区间">7)指定行区间</h3><ul class="lvl-1"><li class="lvl-2"><p>默认情况下，sed 命令会作用于文本数据的所有行，如果只想将命令作用于特定行或某些行，需要明确指定行区间范围。</p></li><li class="lvl-2"><p>行区间可以通过如下两种方式进行限定：</p><blockquote><p>1.以数字形式指定行区间<br>2.用文本模式指定具体行区间</p></blockquote></li><li class="lvl-2"><p>行区间放在命令的前面，具体格式如下：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[行区间]脚本命令</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">行区间 &#123;</span><br><span class="line">    多个脚本命令,分号分隔</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2"><p>示例:以数字形式指定行区间</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 替换第二行中的内容</span></span><br><span class="line">sed <span class="string">&#x27;2s/dog/cat/&#x27;</span> test.txt</span><br><span class="line"><span class="comment"># 替换第二行到第四行中的内容</span></span><br><span class="line">sed <span class="string">&#x27;2,4s/dog/cat/&#x27;</span> test.txt</span><br><span class="line"><span class="comment"># 替换第二行到文件最后一行中的内容</span></span><br><span class="line">sed <span class="string">&#x27;2,$s/dog/cat/&#x27;</span> test.txt</span><br><span class="line"><span class="comment"># 从第一行开始，每间隔一行进行替换，1，3，5，7...</span></span><br><span class="line">sed <span class="string">&#x27;1~2s/dog/cat/&#x27;</span> test.txt</span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2"><p>示例:用文本模式指定具体行区间</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 替换内容中包含pig的所有行的内容</span></span><br><span class="line">sed <span class="string">&#x27;/pig/s/dog/cat/&#x27;</span> test.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则匹配限制范围，&#123;&#125;指定多个脚本，这个命令的作用是将 h1Helloh1 转换为 &lt;h1&gt;Hello&lt;/h1&gt;</span></span><br><span class="line">sed <span class="string">&#x27;/h[0-9]/&#123;s//\&lt;&amp;\&gt;/1;s//\&lt;\/&amp;\&gt;/2&#125;&#x27;</span> test.txt</span><br><span class="line"><span class="comment"># 也可以将命令写到文件中，通过 -f 参数指定</span></span><br><span class="line">sed -f sed.txt test.txt</span><br><span class="line"><span class="built_in">cat</span> sed.txt</span><br><span class="line">/h[0-9]/&#123;</span><br><span class="line">    s//\&lt;&amp;\&gt;/1</span><br><span class="line">    s//\&lt;\/&amp;\&gt;/2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="awk">awk</h2><ul class="lvl-1"><li class="lvl-2"><p>awk是一个强大的文本分析工具，在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式：awk [-F  field-separator]  <span class="string">&#x27;commands&#x27;</span>  input-file(s)</span><br><span class="line">其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。</span><br><span class="line">在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2"><p>commands的格式: <code>匹配规则&#123;执行命令&#125;</code></p></li><li class="lvl-2"><p>默认情况下，awk 会将如下变量分配给它在文本行中发现的数据字段：</p><blockquote><p>$0 代表整个文本行；<br>$1 代表文本行中的第 1 个数据字段；<br>$2 代表文本行中的第 2 个数据字段；<br>$n 代表文本行中的第 n 个数据字段。</p></blockquote></li></ul><div class="tips"><p><em><strong>小贴士</strong></em><br><code>awk</code>是一种编程语言，它有好几种实现(解释器)，常见的如<code>awk</code>、<code>nawk</code>、<code>mawk</code>、<code>gawk</code>，<br>CentOS、Ubuntu等常用的Linux系统下awk的默认实现就是<code>gawk</code>。</p></div></div><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只是显示/etc/passwd的账户</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab键分割</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;&#123;print $1&quot;\t&quot;$7&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割</span></span><br><span class="line"><span class="comment"># a.而且在所有行添加列名name,shell</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;BEGIN &#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># b.在最后一行添加&quot;blue,/bin/nosh&quot;。</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;&#123;print $1&quot;,&quot;$7&#125; END &#123;print &quot;blue,/bin/nosh&quot;&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># c.ab前后都加</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;BEGIN &#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END &#123;print &quot;blue,/bin/nosh&quot;&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索/etc/passwd有root关键字的所有行</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;/root/&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索/etc/passwd有root关键字的所有行，并显示对应的shell</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;/root/&#123;print $7&#125;&#x27;</span> /etc/passwd </span><br><span class="line"><span class="comment"># 多个命令之间加上分号</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;/root/&#123;print $7;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配空白行，如果 test.txt 有 N 个空白行，那么执行此命令会输出 N 个 Blank line</span></span><br><span class="line">awk <span class="string">&#x27;/^$/&#123;print &quot;Blank line&quot;&#125;&#x27;</span> test.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以把命令写在文件中，通过 -f 指定</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> -f awk.sh /etc/passwd</span><br><span class="line"><span class="built_in">cat</span> awk.sh</span><br><span class="line">/root/&#123;<span class="built_in">print</span> <span class="variable">$7</span>;<span class="built_in">print</span> <span class="variable">$1</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="awk内置变量">awk内置变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ARGC               命令行参数个数</span><br><span class="line"></span><br><span class="line">ARGV               命令行参数排列</span><br><span class="line"></span><br><span class="line">ENVIRON            支持队列中系统环境变量的使用</span><br><span class="line"></span><br><span class="line">FILENAME           awk浏览的文件名</span><br><span class="line"></span><br><span class="line">FNR                浏览文件的记录数</span><br><span class="line"></span><br><span class="line">FS                 设置输入域分隔符，等价于命令行 -F选项</span><br><span class="line"></span><br><span class="line">NF                 浏览记录的域的个数</span><br><span class="line"></span><br><span class="line">NR                 已读的记录数</span><br><span class="line"></span><br><span class="line">OFS                输出域分隔符</span><br><span class="line"></span><br><span class="line">ORS                输出记录分隔符</span><br><span class="line"></span><br><span class="line">RS                 控制记录分隔符</span><br><span class="line"></span><br><span class="line">此外,<span class="variable">$0</span>变量是指整条记录。<span class="variable">$1</span>表示当前行的第一个域,<span class="variable">$2</span>表示当前行的第二个域,......以此类推。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a）统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容</span></span><br><span class="line">awk  -F <span class="string">&#x27;:&#x27;</span>  <span class="string">&#x27;&#123;print &quot;filename:&quot; FILENAME &quot;,linenumber:&quot; NR &quot;,columns:&quot; NF &quot;,linecontent:&quot;$0&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># b）使用printf替代print,可以让代码更加简洁，易读</span></span><br><span class="line">awk  -F <span class="string">&#x27;:&#x27;</span>  <span class="string">&#x27;&#123;printf(&quot;filename:%10s,linenumber:%s,columns:%s,linecontent:%s\n&quot;,FILENAME,NR,NF,$0)&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>print和printf</strong></em></p><ul class="lvl-1"><li class="lvl-2">awk中同时提供了print和printf两种打印输出的函数。</li><li class="lvl-2">其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。</li><li class="lvl-2">printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">%s : 字符串</span><br><span class="line">%ms : 占位m个字节，默认右对齐，比如: %10s</span><br><span class="line">%-ms : 占位m个字节，负号表示左对齐，正号表示右对齐，比如: %-10s</span><br><span class="line">%d : 按十进制整型数据的实际长度输出。</span><br><span class="line">%ld : 长整型</span><br><span class="line">%md : m 为指定的输出字段的宽度。如果数据的位数小于 m，则左端补以空格，若大于 m，则按实际位数输出，默认友对齐。比如: %10d</span><br><span class="line">%-md : 负号表示左对齐。比如: %-10d</span><br><span class="line">%u : 无符号整型</span><br><span class="line">%mu : 无符号整型，默认友对齐。比如: %10u</span><br><span class="line">%-mu : 无符号整型，负号表示左对齐。比如: %-10u</span><br><span class="line">%c : 字符</span><br><span class="line">%f : 用来输出实数，包括单精度和双精度，以小数形式输出。整数部分全部输出，小数部分输出 6 位，超过 6 位的四舍五入。</span><br><span class="line">%mf : m 为指定的输出字段的宽度，默认右对齐，比如: %20f</span><br><span class="line">%-mf : m 为指定的输出字段的宽度，负号表示左对齐，比如: %-20f</span><br><span class="line">%.mf : 输出实数时小数点后保留 m 位，注意 m 前面有个点，比如: %.2f</span><br><span class="line">%m.mf : 负号表示左对齐，比如: %-20.2f</span><br><span class="line">%o : 以八进制整数形式输出，输出格式为：24</span><br><span class="line">%<span class="comment">#o : 以八进制整数形式输出，输出格式为：024</span></span><br><span class="line">%x : 以十六进制形式输出，输出格式为：2f</span><br><span class="line">%X : 以十六进制形式输出，输出格式为：2F</span><br><span class="line">%<span class="comment">#x : 以十六进制形式输出，输出格式为：0x2f</span></span><br><span class="line">%<span class="comment">#X : 以十六进制形式输出，输出格式为：0x2F</span></span><br><span class="line">\n : 换行符，支持转义字符，如 \t 等等</span><br><span class="line">\% : %</span><br><span class="line">\&quot; : <span class="string">&quot;</span></span><br><span class="line"><span class="string">\\ : \</span></span><br></pre></td></tr></table></figure></div><h3 id="awk编程">awk编程</h3><h4 id="基础语句">基础语句</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># count是自定义变量。之前的action&#123;&#125;里都是只有一个print,其实print只是一个语句，而action&#123;&#125;可以有多个语句，以;号隔开。</span></span><br><span class="line">awk <span class="string">&#x27;&#123;count++;print $0;&#125; END&#123;print &quot;user count is &quot;, count&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上面没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:</span></span><br><span class="line">awk <span class="string">&#x27;BEGIN &#123;count=0;print &quot;[start]user count is &quot;, count&#125; &#123;count=count+1;print $0;&#125; END&#123;print &quot;[end]user count is &quot;, count&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计某个文件夹下的文件占用的字节数，单位M</span></span><br><span class="line"><span class="built_in">ls</span> -l |awk <span class="string">&#x27;BEGIN &#123;size=0;&#125; &#123;size=size+$5;&#125; END&#123;print &quot;[end]size is &quot;, size/1024/1024,&quot;M&quot;&#125;&#x27;</span> </span><br></pre></td></tr></table></figure><h4 id="条件语句">条件语句</h4><ul class="lvl-0"><li class="lvl-2"><p>awk中的条件语句是从C语言中借鉴来的，见如下声明方式：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># a</span></span><br><span class="line"><span class="keyword">if</span> (expression) &#123;</span><br><span class="line"></span><br><span class="line">    statement;</span><br><span class="line"></span><br><span class="line">    statement;</span><br><span class="line"></span><br><span class="line">    ... ...</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># b</span></span><br><span class="line"><span class="keyword">if</span> (expression) &#123;</span><br><span class="line"></span><br><span class="line">    statement;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    statement2;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># c</span></span><br><span class="line"><span class="keyword">if</span> (expression) &#123;</span><br><span class="line"></span><br><span class="line">    statement1;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (expression1) &#123;</span><br><span class="line"></span><br><span class="line">    statement2;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    statement3;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.检测系统中UID为0的用户</span></span><br><span class="line">awk -F : <span class="string">&#x27;&#123;if($3==0) &#123;print $1&#125;&#125;&#x27;</span> /etc/passwd</span><br><span class="line">简写：</span><br><span class="line">awk -F : <span class="string">&#x27;$3==0 &#123;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">-F表示使用什么做为分隔符，这里使用冒号，默认是空格</span><br><span class="line"><span class="variable">$num</span>表示文件的第几列，这里<span class="variable">$1</span>表示第一列</span><br><span class="line"><span class="string">&#x27;&#x27;</span>:固定格式，执行命令，这里表示，如果第三列是0,则打印第一列的内容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.检测系统中密码为空的用户</span></span><br><span class="line"></span><br><span class="line">awk -F : <span class="string">&#x27;&#123;if(length($2)==0) &#123;print $1&#125;&#125;&#x27;</span> /etc/passwd</span><br><span class="line">简写：</span><br><span class="line">awk -F : <span class="string">&#x27;length($2)==0 &#123;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.取出第三行，第一列的值</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;&#123;if(NR==3) &#123;print $1&#125;&#125;&#x27;</span> file</span><br><span class="line">简写：</span><br><span class="line">awk <span class="string">&#x27;NR==3 &#123;print $1&#125;&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.跳过第一行</span></span><br><span class="line">awk <span class="string">&#x27;&#123;if(NR&gt;1) &#123;print $0&#125;&#125;&#x27;</span> file</span><br><span class="line">简写：</span><br><span class="line">awk <span class="string">&#x27;NR&gt;1 &#123;print $0&#125;&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.求和</span></span><br><span class="line">awk -F <span class="string">&#x27;;&#x27;</span> <span class="string">&#x27;&#123;if($3&gt;0) &#123;s+=$3&#125;&#125; END &#123;print s&#125;&#x27;</span> file</span><br><span class="line">简写：</span><br><span class="line">awk -F <span class="string">&#x27;;&#x27;</span> <span class="string">&#x27;$3&gt;0 &#123;s+=$3&#125; END &#123;print s&#125;&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.if else</span></span><br><span class="line">awk <span class="string">&#x27;&#123;if ($1 == &quot;foo&quot;) print &quot;Exact match foo&quot;; else if ($1 ~ &quot;bar&quot;) print &quot;Partial match bar&quot;; else print &quot;Baz&quot;&#125;&#x27;</span> path/to/file</span><br></pre></td></tr></table></figure><h4 id="aws数组">aws数组</h4><ul class="lvl-0"><li class="lvl-2"><p>awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;BEGIN &#123;count=0;&#125; &#123;name[count] = $1;count++;&#125;; END&#123;for (i = 0; i &lt; NR; i++)&#123;print i, name[i]&#125;&#125;&#x27;</span> /etc/passwd</span><br><span class="line">简写：</span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;BEGIN &#123;count=0;&#125; &#123;name[count] = $1;count++;&#125;; END&#123;for (i = 0; i &lt; NR; i++) print i, name[i]&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="aws循环语句">aws循环语句</h4><ul class="lvl-0"><li class="lvl-2"><p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同，感兴趣的自行查阅，这里不再赘述。</p></li></ul><h2 id="tr">tr</h2><ul class="lvl-0"><li class="lvl-2"><p>tr用来从标准输入中替换、缩减和删除字符，并将结果写到标准输出</p></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tr</span> [选项]... SET1 [SET2]</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> file | <span class="built_in">tr</span> <span class="string">&#x27;do&#x27;</span> <span class="string">&#x27;hp&#x27;</span> : 将file中内容为<span class="keyword">do</span>替换为hp，替换内容与换内容长度一致</span><br><span class="line"><span class="built_in">cat</span> file | <span class="built_in">tr</span> <span class="string">&#x27;do&#x27;</span> <span class="string">&#x27;hpa&#x27;</span> : 将file中内容为<span class="keyword">do</span>替换为hp，多出的a会内忽略</span><br><span class="line"><span class="built_in">cat</span> file | <span class="built_in">tr</span> <span class="string">&#x27;doABC&#x27;</span> <span class="string">&#x27;hp&#x27;</span> : 将file中内容为<span class="keyword">do</span>替换为hp，ABC都是用替换内容的最后一个字符p进行替换，即doABC替换为hpppp</span><br><span class="line"><span class="built_in">cat</span> file | <span class="built_in">tr</span> <span class="string">&quot;a-z&quot;</span> <span class="string">&quot;A-Z&quot;</span> : 将小写字符替换为大写字符</span><br><span class="line"><span class="built_in">cat</span> file | <span class="built_in">tr</span> <span class="string">&quot;\t&quot;</span> <span class="string">&quot;$&quot;</span> : 支持转义字符，这里将tab替换为$</span><br><span class="line"><span class="built_in">cat</span> file | <span class="built_in">tr</span> -d <span class="string">&#x27;do&#x27;</span> : 将file中内容为<span class="keyword">do</span>的内容删除</span><br><span class="line"><span class="built_in">cat</span> file | <span class="built_in">tr</span> -s <span class="string">&#x27;a-z&#x27;</span> : 去除file中重复的小写字符，只保留第一个</span><br></pre></td></tr></table></figure><h2 id="cut">cut</h2><ul class="lvl-0"><li class="lvl-2"><p>cut命令可以用于分隔每行的内容</p></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cut</span> [选项]... [文件]...</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以空格作为分隔符，打印第一组</span></span><br><span class="line"><span class="built_in">cut</span> -d <span class="string">&quot; &quot;</span> -f1 file</span><br><span class="line">    -d：分隔符，按照指定分隔符分割列。与 -f 一起使用</span><br><span class="line">    -f：依据 -d 的分隔字符将一段信息分割成为数段，用 -f 取出第几段的意思（列号，提取第几列）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以;作为分隔符，打印第二组和第三组，注意打印多组时，分隔符也会打印</span></span><br><span class="line"><span class="built_in">cut</span> -d <span class="string">&quot;;&quot;</span> -f2,3 file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从file文件中取出每行的第5~8个字符</span></span><br><span class="line"><span class="built_in">cut</span> -c 5-8 file</span><br><span class="line">    -c : 以字符 (characters) 的单位取出固定字符区间，可以用来分割中文</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从file文件中取出每行的第2,4,6个字节</span></span><br><span class="line"><span class="built_in">cut</span> -b 2,4,6 file</span><br><span class="line">    -b : 以字节为单位进行分割</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从file文件中取出每行的第6个字节之前的内容</span></span><br><span class="line"><span class="built_in">cut</span> -b -6 file</span><br><span class="line"><span class="comment"># 从file文件中取出每行的第3，第4、第5和第8个字节，数字定位的顺序必须由小到大</span></span><br><span class="line"><span class="built_in">cut</span> -b 3-5,8 file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果使用-b提取中文，如果提取到的不是一个完整的中文字符所占的字节，就会出现乱码</span></span><br><span class="line"><span class="comment"># 比如在utf8编码下，一个中文占3个字节</span></span><br><span class="line"><span class="built_in">cut</span> -b 1 file : 此时中文字符会出现乱码</span><br><span class="line"><span class="comment"># 如果希望中文也能完整的提取，可以加上 -n</span></span><br><span class="line"><span class="built_in">cut</span> -nb 1 file</span><br></pre></td></tr></table></figure><h2 id="paste">paste</h2><ul class="lvl-0"><li class="lvl-2"><p>将多个文件的相应行用制表符连接起来，并输出到标准输出</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> p1.txt</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">$ <span class="built_in">cat</span> p2.txt</span><br><span class="line">zhangsan</span><br><span class="line">lisi</span><br><span class="line">wangwu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认分隔符为制表符</span></span><br><span class="line">$ <span class="built_in">paste</span> p1.txt p2.txt</span><br><span class="line">1zhangsan</span><br><span class="line">2lisi</span><br><span class="line">3wangwu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定逗号为分隔符</span></span><br><span class="line">$ <span class="built_in">paste</span> -d <span class="string">&quot;,&quot;</span> p1.txt p2.txt</span><br><span class="line">1,zhangsan</span><br><span class="line">2,lisi</span><br><span class="line">3,wangwu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个文件的内容作为一行</span></span><br><span class="line">$ <span class="built_in">paste</span> -s -d <span class="string">&quot;,&quot;</span> p1.txt p2.txt</span><br><span class="line">1,2,3</span><br><span class="line">zhangsan,lisi,wangwu</span><br></pre></td></tr></table></figure><h2 id="split">split</h2><ul class="lvl-0"><li class="lvl-2"><p>split命令用于将一个文件分割成数个。该指令将大文件分割成较小的文件，在默认情况下将按照每1000行切割成一个小文件。默认前缀为“x”。没有输入，或者当输入为<code>-</code>，则读取标准输入。</p></li><li class="lvl-2"><p>语法</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">split</span> [选项]... [输入 [前缀]]</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分割为1000行的小文件，文件名格式xaa,xab...</span></span><br><span class="line"><span class="built_in">split</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment">#prefix指定分割后的文件前缀，默认为x</span></span><br><span class="line"><span class="built_in">split</span> file prefix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分割为指定行数的文件，如100行</span></span><br><span class="line"><span class="built_in">split</span> -l 100 file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分割为500M大小的文件</span></span><br><span class="line"><span class="built_in">split</span> -b 500M file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定分割后小文件名后缀</span></span><br><span class="line"><span class="built_in">split</span> --additional-suffix=.<span class="built_in">log</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用数字代替字符文件名，分割后的文件名为x00,x01...的数字形式</span></span><br><span class="line"><span class="built_in">split</span> -d file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定分割后小文件名前缀后跟的文件名长度(不含前缀和后缀)，默认长度为2，这里文件名格式为xaaa.log,xaab.log...</span></span><br><span class="line"><span class="comment"># 当分割后文件的数量大于文件名能表达的最大文件数时，会报错</span></span><br><span class="line"><span class="built_in">split</span> -a 3 --additional-suffix=.<span class="built_in">log</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将分割后的文件合并，如文件名格式为xaaa.log,xaab.log</span></span><br><span class="line"><span class="built_in">cat</span> x*.<span class="built_in">log</span> &gt; newfile</span><br></pre></td></tr></table></figure><h2 id="sort">sort</h2><ul class="lvl-0"><li class="lvl-2"><p>sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们排序输出，默认升序。</p></li></ul><h3 id="sort基本用法">sort基本用法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件内容按ASCII码值进行比较后升序输出</span></span><br><span class="line"><span class="built_in">sort</span> file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略大小写</span></span><br><span class="line"><span class="built_in">sort</span> -f file</span><br><span class="line"></span><br><span class="line"><span class="comment"># -u去重</span></span><br><span class="line"><span class="built_in">sort</span> -u file</span><br><span class="line"></span><br><span class="line"><span class="comment"># -r降序</span></span><br><span class="line"><span class="built_in">sort</span> -r file</span><br><span class="line"></span><br><span class="line"><span class="comment"># -o结果输出到文件，类似于重定向 &gt; ，但是比重定向强的一点是可以输出到源文件</span></span><br><span class="line"><span class="built_in">sort</span> file -o newfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># -n 按数字大小排序，默认按字符比较，所以10比2小，此时可以加上 -n 来告诉sort要以数值来排序</span></span><br><span class="line"><span class="built_in">sort</span> -n file</span><br><span class="line"></span><br><span class="line"><span class="comment"># -M 会以月份来排序，比如JAN小于FEB</span></span><br><span class="line"><span class="built_in">sort</span> -M file</span><br><span class="line"></span><br><span class="line"><span class="comment"># -b 会忽略每一行前面的所有空白部分，从第一个可见字符开始比较</span></span><br><span class="line"><span class="built_in">sort</span> -b file</span><br><span class="line"></span><br><span class="line"><span class="comment"># -c 检查文件是否已经排好序，如果乱序，则输出第一个乱序的行的相关信息，$?值为1</span></span><br><span class="line"><span class="built_in">sort</span> -c file</span><br><span class="line"></span><br><span class="line"><span class="comment"># -C 检查文件是否已经排好序，如果乱序，则不输出任何内容，$?值为1</span></span><br><span class="line"><span class="built_in">sort</span> -C file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 还有一些其它参数</span></span><br><span class="line">-d 只考虑空白区域和字母字</span><br><span class="line">-i 只针对可打印字符进行排序，有些ASCII就是不可打印字符，比如\n是换行，\r是回车等等</span><br></pre></td></tr></table></figure><h3 id="sort高级用法">sort高级用法</h3><ul class="lvl-0"><li class="lvl-2"><p>上面结束的sort用法都是从每行的第一个字符开始比较，如果文本可以被分隔为一列一列的内容，我们想按某一列进行排序该如何处理呢？</p></li><li class="lvl-2"><p>为了说明这个用法，我准备了一份文件</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> file</span><br><span class="line">tom,68,9.1</span><br><span class="line">jack,71,18.7</span><br><span class="line">alex,68,9.8</span><br><span class="line">bar,100,30.6</span><br><span class="line">foo,20,1.2</span><br><span class="line">rucy,100,20.5</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>以第二列进行排序，并按数字大小排序</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -t 分隔符，-k 排序的列号</span></span><br><span class="line">$ <span class="built_in">sort</span> -n -t <span class="string">&quot;,&quot;</span> -k 2 file</span><br><span class="line">foo,20,1.2</span><br><span class="line">tom,68,9.1</span><br><span class="line">alex,68,9.8</span><br><span class="line">jack,71,18.7</span><br><span class="line">rucy,100,20.5</span><br><span class="line">bar,100,30.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里 -n 可以写到 -k中</span></span><br><span class="line"><span class="built_in">sort</span> -t <span class="string">&quot;,&quot;</span> -k 2n file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以将 -r 写到 -k中</span></span><br><span class="line"><span class="built_in">sort</span> -t <span class="string">&quot;,&quot;</span> -k 2nr file</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>以第一列的第二个字符进行排序</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里 -k 1.2，表示按第一列的第二个字符排序</span></span><br><span class="line">$ <span class="built_in">sort</span> -t <span class="string">&quot;,&quot;</span> -k 1.2 file</span><br><span class="line">jack,71,18.7</span><br><span class="line">bar,100,30.6</span><br><span class="line">alex,68,9.8</span><br><span class="line">tom,68,9.1</span><br><span class="line">foo,20,1.2</span><br><span class="line">rucy,100,20.5</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>小贴士</strong></em></p><ul class="lvl-1"><li class="lvl-2"><code>-k</code> 的语法格式为<code>[ FStart [ .CStart ] ] [ Modifier ] [ , [ FEnd [ .CEnd ] ][ Modifier ] ]</code></li><li class="lvl-2">这个语法格式可以被其中的逗号（“，”）分为两大部分，Start部分和End部分。</li><li class="lvl-2">Start部分也由三部分组成，其中的Modifier部分就是我们之前说过的类似n和r的选项部分，比如<code>-k 2nr</code>，<code>b、d、f、i、n 或 r</code>都可以用在Modifier部分。</li><li class="lvl-2">FStart就是表示使用的域，而CStart则表示在FStart域中从第几个字符开始算“排序首字符”，CStart也是可以省略的，省略的话就表示从本域的开头部分开始。</li><li class="lvl-2">之前例子中的 <code>-k 2</code> 就是省略了CStart而只有FStart，而<code>-k 1.2</code>其中的 <code>1</code> 就是FStart，<code>.2</code> 就是CStart。</li><li class="lvl-2">End的部分的组成同Start。</li><li class="lvl-2">Start用于表示从第几个域的第几个字符开始，End用于表示到第几个域的第几个字符结束，如果不设定End部分，那么就认为End被设定为行尾。</li></ul></div><ul class="lvl-0"><li class="lvl-2"><p>先按第二列升序排序，第二列相同则按第三列降序排序</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 看了上面的小贴士，应该可以理解这里的含义</span></span><br><span class="line"><span class="comment"># -k 2,2n 表示从第二个域开始到第二个域结束并按数字升序排序，</span></span><br><span class="line"><span class="comment"># -k 3,3nr 表示从第三个域开始到第三个域结束并按数字降序排序，</span></span><br><span class="line">$ <span class="built_in">sort</span> -t <span class="string">&quot;,&quot;</span> -k 2,2n -k 3,3nr file</span><br><span class="line">foo,20,1.2</span><br><span class="line">alex,68,9.8</span><br><span class="line">tom,68,9.1</span><br><span class="line">jack,71,18.7</span><br><span class="line">bar,100,30.6</span><br><span class="line">rucy,100,20.5</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>-k</code> 和 <code>-u</code> 同时使用要注意，<code>-u</code> 去重时比较的是 <code>-k</code> 指定的区域</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此时比较的是从第二个域到行尾是否重复，所以没有可以去掉的行</span></span><br><span class="line">$ <span class="built_in">sort</span> -t <span class="string">&quot;,&quot;</span> -k 2n -u file</span><br><span class="line">foo,20,1.2</span><br><span class="line">tom,68,9.1</span><br><span class="line">alex,68,9.8</span><br><span class="line">jack,71,18.7</span><br><span class="line">rucy,100,20.5</span><br><span class="line">bar,100,30.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时比较的仅仅是第二个域，所以第二列重复的行会被去重</span></span><br><span class="line">$ <span class="built_in">sort</span> -t <span class="string">&quot;,&quot;</span> -k 2,2n -u file</span><br><span class="line">foo,20,1.2</span><br><span class="line">tom,68,9.1</span><br><span class="line">jack,71,18.7</span><br><span class="line">bar,100,30.6</span><br></pre></td></tr></table></figure><h2 id="uniq">uniq</h2><ul class="lvl-0"><li class="lvl-2"><p>uniq命令用于报告或忽略文件中的重复行，一般与sort命令结合使用</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> file</span><br><span class="line">alex; 68; 98</span><br><span class="line">barr;hello; <span class="built_in">test</span></span><br><span class="line">barr;hello; <span class="built_in">test</span></span><br><span class="line">fooo;loveable;s</span><br><span class="line">jack; 71; 87</span><br><span class="line">jack; 71; 87</span><br><span class="line">mytest; Mark; Percent</span><br><span class="line">tom; 69; 91</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">sort</span> file | <span class="built_in">uniq</span></span><br><span class="line">alex; 68; 98</span><br><span class="line">barr;hello; <span class="built_in">test</span></span><br><span class="line">fooo;loveable;s</span><br><span class="line">jack; 71; 87</span><br><span class="line">mytest; Mark; Percent</span><br><span class="line">tom; 69; 91</span><br><span class="line"></span><br><span class="line"><span class="comment"># -c,--count：在每列旁边显示该行重复出现的次数</span></span><br><span class="line">$ <span class="built_in">sort</span> file | <span class="built_in">uniq</span> -c</span><br><span class="line">1 alex; 68; 98</span><br><span class="line">2 barr;hello; <span class="built_in">test</span></span><br><span class="line">1 fooo;loveable;s</span><br><span class="line">2 jack; 71; 87</span><br><span class="line">1 mytest; Mark; Percent</span><br><span class="line">1 tom; 69; 91</span><br><span class="line"></span><br><span class="line"><span class="comment"># -d,--repeated：仅显示重复出现的行</span></span><br><span class="line">$ <span class="built_in">sort</span> file | <span class="built_in">uniq</span> -d</span><br><span class="line">barr;hello; <span class="built_in">test</span></span><br><span class="line">jack; 71; 87</span><br><span class="line"></span><br><span class="line"><span class="comment"># -D, --all-repeated[=delimit-method]，打印重复行的所有行。</span></span><br><span class="line"><span class="comment"># 其中 delimit-method 表示对重复行集合的分隔方式，有三种取值，分别为none、prepend和separate。</span></span><br><span class="line"><span class="comment"># 其中none表示不进行分隔，为默认选项，uniq -D等同于uniq --all-repeated=none；prepend表示在每一个重复行集合前面插入一个空行；separate表示在每个重复行集合间插入一个空行。</span></span><br><span class="line">$ <span class="built_in">sort</span> file | <span class="built_in">uniq</span> -D</span><br><span class="line">barr;hello; <span class="built_in">test</span></span><br><span class="line">barr;hello; <span class="built_in">test</span></span><br><span class="line">jack; 71; 87</span><br><span class="line">jack; 71; 87</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">sort</span> file | <span class="built_in">uniq</span> --all-repeated=separate</span><br><span class="line">barr;hello; <span class="built_in">test</span></span><br><span class="line">barr;hello; <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">jack; 71; 87</span><br><span class="line">jack; 71; 87</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -u,--unique：只显示唯一的行，即出现次数等于1的行</span></span><br><span class="line">$ <span class="built_in">sort</span> file | <span class="built_in">uniq</span> -u</span><br><span class="line">alex; 68; 98</span><br><span class="line">fooo;loveable;s</span><br><span class="line">mytest; Mark; Percent</span><br><span class="line">tom; 69; 91</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其它参数</span></span><br><span class="line">-f, --skip-fields=N</span><br><span class="line">忽略前N个字段。字段由空白字符（空格符、Tab）分隔。如果您的文档的行被编号，并且您希望比较行中除行号之外的所有内容。如果指定了选项 -f 1，那么下面相邻的两行：</span><br><span class="line">1 这是一条线</span><br><span class="line">2 这是一条线</span><br><span class="line">将被认为是相同的。如果没有指定 -f 1 选项，它们将被认为是不同的。</span><br><span class="line">-i, --ignore-case</span><br><span class="line">忽略大小写字符的不同。</span><br><span class="line">-s, --skip-chars=N</span><br><span class="line">跳过前面N个字符不比较。</span><br><span class="line">-w, --check-chars=N</span><br><span class="line">指定每行要比较的前N个字符数。</span><br></pre></td></tr></table></figure><h2 id="wc">wc</h2><ul class="lvl-0"><li class="lvl-2"><p>wc（word count）命令用于统计文件字节、字符、单词与行的数量</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -l, --lines 统计行数，在统计记录数时，很常用</span></span><br><span class="line">$ <span class="built_in">wc</span> -l /etc/passwd</span><br><span class="line">29 /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># -w, --words 统计单词出现次数</span></span><br><span class="line">$ <span class="built_in">wc</span> -w /etc/passwd</span><br><span class="line">48 /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># -c, --bytes 统计文件的字节数</span></span><br><span class="line">$ <span class="built_in">wc</span> -c /etc/passwd</span><br><span class="line">1387</span><br><span class="line"></span><br><span class="line"><span class="comment"># -m, --chars 统计文件的字符数，如果是 ASCII、Latin-1 等单字节编码的字符，字符数等于字节数</span></span><br><span class="line">$ <span class="built_in">wc</span> -m /etc/passwd</span><br><span class="line">1387</span><br><span class="line"></span><br><span class="line"><span class="comment"># -L, --max-line-length 显示文件中最长行的字符数</span></span><br><span class="line">$ <span class="built_in">wc</span> -L /etc/passwd</span><br><span class="line">85 /etc/passwd</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;文本搜索、替换、分割合并等相关命令，如grep、egrep、sed、awk、tr、cut、paste和split等等&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;在对文本进行处理时，我们还经常会使用到的排序、去重和统计行数等相关命令，如sort、uniq、wc等等&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令02--网络相关命令</title>
    <link href="https://blog.hanqunfeng.com/2023/02/28/linux-command02/"/>
    <id>https://blog.hanqunfeng.com/2023/02/28/linux-command02/</id>
    <published>2023-02-28T13:30:05.000Z</published>
    <updated>2023-03-09T09:34:02.725Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>网络相关命令，如ping、ifconfig、ssh、scp、netstat、curl、wget，以及查看DNS、检查域名和证书的到期时间等等</p></li></ul><span id="more"></span><h2 id="1-测试网络和服务的连通性">1.测试网络和服务的连通性</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试网络连通性</span></span><br><span class="line">ping 192.168.36.49 -c 3 : -c 测试次数</span><br><span class="line">ping 192.168.36.49 -c 3 -s 1000 : -s 发送icmp包的大小bytes</span><br><span class="line"></span><br><span class="line"><span class="comment"># ping 域名，可以查看到负载均衡器名及其分发到的ip</span></span><br><span class="line"><span class="comment"># 可以看到多次ping baidu的域名，得到了不同的ip地址</span></span><br><span class="line">ping www.baidu.com</span><br><span class="line">PING www.a.shifen.com (110.242.68.4) 56(84) bytes of data.</span><br><span class="line">64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=1 ttl=50 time=19.7 ms</span><br><span class="line">64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=2 ttl=50 time=19.8 ms</span><br><span class="line">64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=3 ttl=50 time=19.8 ms</span><br><span class="line"></span><br><span class="line">ping www.baidu.com</span><br><span class="line">PING www.a.shifen.com (110.242.68.3) 56(84) bytes of data.</span><br><span class="line">64 bytes from 110.242.68.3 (110.242.68.3): icmp_seq=1 ttl=49 time=19.6 ms</span><br><span class="line">64 bytes from 110.242.68.3 (110.242.68.3): icmp_seq=2 ttl=49 time=19.6 ms</span><br><span class="line">64 bytes from 110.242.68.3 (110.242.68.3): icmp_seq=3 ttl=49 time=19.6 ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试服务连通性</span></span><br><span class="line">telnet 192.168.36.49 3306</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>禁止ping</strong></em></p><ul class="lvl-1"><li class="lvl-2">临时禁止，服务器重启后失效</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</span><br></pre></td></tr></table></figure><ul class="lvl-1"><li class="lvl-2">永久禁止</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line">在文件最后增加如下内容后保存退出</span><br><span class="line">net.ipv4.icmp_echo_ignore_all = 1</span><br><span class="line"></span><br><span class="line">使修改生效</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></div><h2 id="2-查看网络设置信息">2.查看网络设置信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ifconfig -a : 查看所有网卡信息</span><br><span class="line">ifconfig eth0 : 查看指定网卡信息</span><br><span class="line"></span><br><span class="line">ip a : 查看所有网卡信息</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时设置IP，重启机器或者重启network马上失效</span></span><br><span class="line">ifconfig eth0 192.168.12.51</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用网卡</span></span><br><span class="line">ifconfig eth0 up  或者  ifup eth0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用网卡</span></span><br><span class="line">ifconfig eth0 down  或者  ifdown eth0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启network</span></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h2 id="3-ssh">3.ssh</h2><h3 id="3-1-登录">3.1 登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录</span></span><br><span class="line">ssh user@ip  : 默认连接22端口，不同用户名</span><br><span class="line"><span class="comment"># 指定端口</span></span><br><span class="line">ssh -p 22122 user@ip  : 不同用户名，指定其它端口</span><br><span class="line">ssh -p 22122 ip  : 相同用户名</span><br></pre></td></tr></table></figure><h3 id="3-2-远程执行命令或脚本">3.2 远程执行命令或脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.无需交互的命令</span></span><br><span class="line">ssh user@ip <span class="string">&quot;command&quot;</span></span><br><span class="line">示例：</span><br><span class="line">ssh user@ip <span class="string">&quot;pwd&quot;</span></span><br><span class="line">ssh user@ip <span class="string">&quot;sh /usr/local/run.sh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.需要交互的命令，即需要开启一个TTY</span></span><br><span class="line">ssh user@ip -t <span class="string">&quot;command&quot;</span></span><br><span class="line">示例：</span><br><span class="line">ssh user@ip -t <span class="string">&quot;top&quot;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-远程服务器上执行本地的脚步">3.3 远程服务器上执行本地的脚步</h3><p>上面都是执行远程服务器上的脚本，如果要在远程服务器上执行本地的脚步，需要使用如下方式:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.不需要参数</span></span><br><span class="line">ssh user@ip &lt; script.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.需要参数</span></span><br><span class="line">ssh user@ip <span class="string">&#x27;bash -s&#x27;</span> &lt; script.sh param1 param2</span><br></pre></td></tr></table></figure><h2 id="4-scp远程传输">4.scp远程传输</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地传输到远程</span></span><br><span class="line">scp xxx.txt user@ip:~/xxx.txt : 默认连接22端口，不同用户名</span><br><span class="line">scp -P 22122 xxx.txt user@ip:~/xxx.txt : 不同用户名，指定其它端口</span><br><span class="line">scp -P 22122 xxx.txt ip:~/xxx.txt : 相同用户名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程传输的本地</span></span><br><span class="line">scp -P 22122 user@192.168.1.219:~/xxx.txt xxx.txt</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>小贴士</strong></em></p><blockquote><p>默认情况下，ssh或者scp都需要输入登录密码，如果不想输入密码，可以配置免密登录(密钥登录)<br>ssh远程执行命令和scp远程传输如果配合免密登录，就可以为脚本自动化打下基础。</p></blockquote><p><em><strong>01.免密登录(密钥登录)</strong></em><br><strong>1、如果希望从ServerA免输入passwd就可以ssh到ServerB，先在ServerA上执行:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa</span><br><span class="line">中间会让你输入密码并且确认生成目录，默认存放在本地用户的 ~/.ssh目录下 一路回车就好</span><br><span class="line">会生成：id_rsa（密钥） id_rsa.pub（公钥）</span><br><span class="line"></span><br><span class="line">-t : 指定加密类型，不指定默认rsa，支持 dsa|ecdsa|ed25519|rsa</span><br><span class="line">-b : 指定密钥长度，默认2048位</span><br><span class="line">-C : 注释，用于识别这个密钥，公钥内容最后会附加这个注释，默认为“用户@主机名”</span><br><span class="line">-f : 生成的密钥文件名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">$ ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;hanqunfeng&quot;</span> -f ~/.ssh/sshkey</span><br><span class="line">则 ~/.ssh 路径下会生成两个文件：sshkey 和 sshkey.pub</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>2、把id_rsa.pub（公钥）的内容保存到ServerB的用户目录下的.ssh目录下的authorized_keys文件中</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">方式1：</span><br><span class="line">ServerA命令行执行</span><br><span class="line">ssh-copy-id ~/.ssh/id_rsa.pub user@ServerB_IP</span><br><span class="line">  -p : 指定端口</span><br><span class="line">  -i : 指定私钥路径</span><br><span class="line"></span><br><span class="line">方式2：</span><br><span class="line">打开ServerA上的~/.ssh/id_rsa.pub，复制里面内容，粘贴到ServerB的对应用户下的～/.ssh/authorized_keys文件中，保存退出，</span><br><span class="line">如果authorized_keys文件不存在就创建，如果authorized_keys文件中已有内容则粘贴到最后即可。</span><br></pre></td></tr></table></figure><p><strong>注意：ServerB 的 .ssh 目录的权限和 authorized_keys 的权限分别是 700 和 600</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 700 -R .ssh</span><br><span class="line"><span class="built_in">chmod</span> 600 authorized_keys</span><br></pre></td></tr></table></figure><p>至此，再次从ServerA通过ssh或者scp连接到ServerB时就不会提示你输入密码啦</p><p>实际上证书的创建在任何服务器上进行都行，只需要让ServerA拥有私钥，ServerB的对应用户下的<code>～/.ssh/authorized_keys</code>文件中配置上公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此时要求ServerA拥有的私钥的路径必须为~/.ssh/id_rsa</span></span><br><span class="line">ssh user@ServerB_IP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果私钥名称不是id_rsa，或者没有放置在~/.ssh下，则需要通过 -i 指定私钥路径</span></span><br><span class="line">ssh -i <span class="string">&quot;~/.ssh/script.pem&quot;</span> user@ServerB_IP</span><br></pre></td></tr></table></figure><p>默认情况下，sshd的密钥认证方式是开启的，可以查看ServerB的<code>/etc/ssh/sshd_config</code>中的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否开启公钥验证</span></span><br><span class="line">PubkeyAuthentication <span class="built_in">yes</span></span><br><span class="line"><span class="comment"># 公钥验证文件路径</span></span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys</span><br></pre></td></tr></table></figure><p><em><strong>02.config配置登录信息</strong></em></p><blockquote><p>通过config配置，可以进一步简化我们使用ssh和scp的方式</p></blockquote><p><strong>1.在用户根目录下的.ssh文件内创建config文件，用于保存ssh登陆主机的相关信息，内容格式如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Host aliyun                       <span class="comment">#就是给服务器起一个别名，后面使用时就是使用这个别名，如 ssh &#123;name&#125;</span></span><br><span class="line">User root                         <span class="comment">#登录用户名称</span></span><br><span class="line">HostName 8.130.53.111             <span class="comment">#服务器ip地址</span></span><br><span class="line">Port 22                           <span class="comment">#服务器登录端口，默认22</span></span><br><span class="line">IdentityFile ~/.ssh/id_rsa        <span class="comment">#免密登录的私钥文件路径</span></span><br><span class="line">RemoteCommand sudo su &amp;&amp; <span class="built_in">cd</span>       <span class="comment">#登录后要执行的命令，这里表示切换到root用户</span></span><br><span class="line">RequestTTY <span class="built_in">yes</span>                    <span class="comment">#开启TTY</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通配符匹配</span></span><br><span class="line">Host 10.10.*                      <span class="comment">#支持通配符，这里表示所有10.10.开头的ip都会被匹配，此时不要配置HostName</span></span><br><span class="line">User root</span><br><span class="line">Port 22</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">ProxyCommand ssh aliyun -W %h:%p  <span class="comment">#通过上面配置的aliyun作为跳板机登录到其它服务器上去</span></span><br><span class="line">RemoteCommand sudo su &amp;&amp; <span class="built_in">cd</span></span><br><span class="line">RequestTTY <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局默认配置</span></span><br><span class="line">Host *</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Compression <span class="built_in">yes</span></span><br><span class="line">ServerAliveInterval 60</span><br><span class="line">ServerAliveCountMax 5</span><br><span class="line">ControlMaster auto</span><br><span class="line">ControlPath ~/.sockets/%r@%h-%p</span><br><span class="line">ControlPersist 4h</span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">UserKnownHostsFile /dev/null</span><br><span class="line">ConnectTimeout 15</span><br><span class="line">StrictHostKeyChecking no</span><br></pre></td></tr></table></figure><p><strong>使用方法</strong><br>1）ssh 登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh aliyun</span><br><span class="line">ssh 10.10.123.123</span><br></pre></td></tr></table></figure><p>2）scp 传输文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地传输到远程</span></span><br><span class="line">scp ./file aliyun:~/</span><br><span class="line">scp ./file 10.10.123.123:~/</span><br><span class="line"><span class="comment"># 远程传输的本地</span></span><br><span class="line">scp aliyun:~/file ./</span><br><span class="line">scp 10.10.123.123:~/file ./</span><br></pre></td></tr></table></figure><p><em><strong>03.修改sshd端口和关闭密码登录</strong></em><br>1.sshd默认端口是22，建议生产环境进行修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># 找到 Port 22，默认是注释掉的，解开注释然后将端口22改为你想要的端口号</span></span><br><span class="line">Port 22122</span><br></pre></td></tr></table></figure><p>2.关闭密码登录<br>如果配置了密钥登录，可以禁止密码登录，建议生产环境进行修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># 找到 PasswordAuthentication 禁止密码登录设置为 no，允许密码登录设置为 yes</span></span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><p>3.重启SSH服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><p>4.查看sshd端口状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -tunpl | grep sshd</span><br><span class="line">tcp        0      0 0.0.0.0:22122           0.0.0.0:*               LISTEN      20652/sshd</span><br></pre></td></tr></table></figure></div><h2 id="5-查看进程端口">5.查看进程端口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">netstat -tunpl : 查看端口是否启动，或者查看占用端口的进程</span><br><span class="line"></span><br><span class="line">-n 不显示别名，能显示数字的全部转化为数字</span><br><span class="line">-t 显示TCP协议的链接情况</span><br><span class="line">-l 仅理出有在Listen的服务状态</span><br><span class="line">-u 显示UDP协议的链接情况</span><br><span class="line">-p 显示建立相关链接的程序名</span><br><span class="line"></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1158/sshd</span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      777/mysqld</span><br><span class="line">udp        0      0 172.19.230.128:68       0.0.0.0:*                           598/systemd-network</span><br><span class="line">udp        0      0 127.0.0.1:323           0.0.0.0:*                           569/chronyd</span><br><span class="line">udp6       0      0 :::546                  :::*                                598/systemd-network</span><br><span class="line">udp6       0      0 ::1:323                 :::*                                569/chronyd</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">netstat -tunpl | grep sshd</span><br><span class="line">netstat -tunpl | grep 3306</span><br></pre></td></tr></table></figure><h2 id="6-curl">6.curl</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看页面内容，默认GET请求</span></span><br><span class="line">curl url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 简单验证的页面登录方法</span></span><br><span class="line">curl -u user:passwd url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示下载进度条,-C断点续传，-o下载后的文件名称</span></span><br><span class="line">curl -C -<span class="comment"># -o fileName url</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -X指定请求协议,-H指定请求头，多个请求头就使用多个-H，-d指定请求数据</span></span><br><span class="line">curl url \</span><br><span class="line">  -X POST \</span><br><span class="line">  -d <span class="string">&quot;&#123;\&quot;data\&quot;:\&quot;content\&quot;&#125;&quot;</span> \</span><br><span class="line">  -H <span class="string">&quot;content-type: application/json&quot;</span></span><br><span class="line"></span><br><span class="line">curl url \</span><br><span class="line">  -X POST \</span><br><span class="line">  -d <span class="string">&quot;name=zhangsan&amp;age=30&quot;</span></span><br><span class="line">  -H <span class="string">&quot;content-type: application/x-www-form-urlencoded&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --data-urlencode参数等同于-d，发送 POST 请求的数据体，区别在于会自动将发送的数据进行 URL 编码</span></span><br><span class="line">curl --data-urlencode <span class="string">&#x27;name=张三&#x27;</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发出一个 GET 请求，实际请求的 URL 为url?name=zhangsan&amp;age=30。如果省略-G，会发出一个 POST 请求。</span></span><br><span class="line">curl -G -d <span class="string">&#x27;name=zhangsan&#x27;</span> -d <span class="string">&#x27;age=30&#x27;</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传文件，注意文件名称前面要加上@，后面跟本地文件路径，不指定type默认会把 MIME 类型设为application/octet-stream，不指定filename默认使用上传文件名称作为服务器端接收到的文件名称</span></span><br><span class="line">curl -F <span class="string">&#x27;file=@photo.png;type=image/png;filename=me.png&#x27;</span> -H <span class="string">&quot;Content-Type: multipart/form-data&quot;</span> url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过FTP进行下载，-O 将返回内容输出到当前目录下，和url中文件名相同的文件中（不含目录）</span></span><br><span class="line">curl -O ftp://user:pass@ip:port/file </span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过FTP进行上传，-T 指定上传文件</span></span><br><span class="line">curl -T file ftp://user:pass@ip:port/path </span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>关于curl的更多使用方法可以参考:<a href="https://www.cnblogs.com/hls-code/p/16877803.html">https://www.cnblogs.com/hls-code/p/16877803.html</a></p></li></ul><h2 id="7-wget">7.wget</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载到当前目录</span></span><br><span class="line">wget url</span><br><span class="line"><span class="comment"># 下载到指定文件中</span></span><br><span class="line">wget -O saveFile url</span><br><span class="line"><span class="comment"># 下载file.txt中的所有链接</span></span><br><span class="line">wget -i file.txt</span><br><span class="line"><span class="comment"># 断点续传，最多重试5次</span></span><br><span class="line">wget -c -t 5 url</span><br><span class="line"><span class="comment"># 递归下载整个网站,递归深度为5</span></span><br><span class="line">wget -r -l 5 url</span><br><span class="line"><span class="comment"># 只下载rar格式的文件</span></span><br><span class="line">wget -m --accept=rar url</span><br><span class="line"><span class="comment"># 不下载gif格式的文件</span></span><br><span class="line">wget -m --reject=gif url</span><br><span class="line"><span class="comment"># 不下载已经存在的文件,设置超时时间5s</span></span><br><span class="line">wget -nc -T 5 url</span><br><span class="line"><span class="comment"># 下载速度限制为1m/s，默认全速下载</span></span><br><span class="line">wget --limit-rate=1m url</span><br><span class="line"><span class="comment"># 使用需要用户名和密码认证的ftp下载</span></span><br><span class="line">wget --ftp-user=USERNAME --ftp-password=PASSWORD ftp://url</span><br></pre></td></tr></table></figure><h2 id="8-查看DNS">8.查看DNS</h2><h3 id="8-1-查看DNS">8.1 查看DNS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法1</span></span><br><span class="line"><span class="built_in">cat</span> /etc/resolv.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line">nslookup localhost</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法3</span></span><br><span class="line">dig</span><br></pre></td></tr></table></figure><h3 id="8-2-设置DNS">8.2 设置DNS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/resolv.conf</span><br><span class="line"><span class="comment"># 可以设置多个DNS，优先级从上到下</span></span><br><span class="line">nameserver xxx.xxx.xxx.xxx</span><br><span class="line">nameserver xxx.xxx.xxx.xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启网络</span></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h2 id="9-检查域名到期时间">9.检查域名到期时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whois baidu.com | grep -E <span class="string">&#x27;(Expiry Date|Expiration Time)&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="10-检查域名绑定的证书到期时间">10.检查域名绑定的证书到期时间</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> | openssl s_client  -connect  www.baidu.com:443 2&gt;/dev/null | openssl x509 -noout -dates | awk -F<span class="string">&#x27;=&#x27;</span> <span class="string">&#x27;NR==2&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="11-设置HOSTNAME">11.设置HOSTNAME</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看HOSTNAME</span></span><br><span class="line">hostname 或者 hostnamectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时设置，重启后失效</span></span><br><span class="line">hostname newName</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久立即生效，不需要重启</span></span><br><span class="line">hostnamectl set-hostname newName</span><br></pre></td></tr></table></figure><h2 id="12-防火墙firewalld">12.防火墙firewalld</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line"><span class="comment"># 开启防火墙</span></span><br><span class="line">systemctl start firewalld.service</span><br><span class="line"><span class="comment"># 关闭开机自启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line"><span class="comment"># 开启开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看firewalld状态</span></span><br><span class="line">sudo firewall-cmd --state</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看默认区域</span></span><br><span class="line">sudo firewall-cmd --get-default-zone</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看启用的规则和服务</span></span><br><span class="line">sudo firewall-cmd --list-all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只查看启用的服务</span></span><br><span class="line">sudo firewall-cmd --list-services</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时添加新的服务,firewalld重载或重启后失效</span></span><br><span class="line"><span class="comment"># firewalld会从/etc/firewalld/services/目录中加载服务配置文件，如果这个目录中没有服务配置文件，则到/usr/lib/firewalld/services/目录中加载 https.xml</span></span><br><span class="line">sudo firewall-cmd --add-service=https</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久添加新的服务</span></span><br><span class="line">sudo firewall-cmd --permanent --add-service=https</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久移除服务</span></span><br><span class="line">sudo firewall-cmd --remove-service=vnc-server --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看开放的端口和协议</span></span><br><span class="line">sudo firewall-cmd --list-ports</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放端口</span></span><br><span class="line">sudo firewall-cmd --add-port=80/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭端口</span></span><br><span class="line">sudo firewall-cmd --remove-port=80/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许ip或ip段访问某个端口</span></span><br><span class="line">sudo firewall-cmd --permanent --add-rich-rule <span class="string">&#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.8&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&#x27;</span></span><br><span class="line">sudo firewall-cmd --permanent --add-rich-rule <span class="string">&#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.0/24&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&#x27;</span></span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拒绝ip或ip段访问某个端口</span></span><br><span class="line">sudo firewall-cmd --permanent --add-rich-rule <span class="string">&#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.8&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; reject&#x27;</span></span><br><span class="line">sudo firewall-cmd --permanent --add-rich-rule <span class="string">&#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.0/24&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; reject&#x27;</span></span><br><span class="line">sudo firewall-cmd --reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看设置的规则</span></span><br><span class="line">sudo firewall-cmd --list-rich-rules</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>参考地址：<br><a href="https://www.51cto.com/article/707726.html">https://www.51cto.com/article/707726.html</a><br><a href="https://blog.csdn.net/qq_57268251/article/details/124787256">https://blog.csdn.net/qq_57268251/article/details/124787256</a><br><a href="https://blog.csdn.net/eagle89/article/details/127277636">https://blog.csdn.net/eagle89/article/details/127277636</a></p></li><li class="lvl-2"><p>云服务器都是基于<code>安全组</code>的规则进行配置，其<code>firewalld</code>、<code>iptables</code>和<code>SELinux</code>都是关闭的</p></li></ul><div class="tips"><p><em><strong>小贴士</strong></em><br><strong>子网掩码</strong><br>上面提到的10.8.1.0/24表示为从10.8.1.0这个IP开始，24代表子网掩码为255.255.255.0，共包含256个地址，即从0-255共256个IP，即10.8.1.0~10.8.1.255。<br>这里<code>/24</code>代表子网掩码，即前面由多少个1组成，举例如下：<br>A类IP地址的默认子网掩码为255.0.0.0，由于255相当于二进制的8位1，所以也缩写成“/8”，表示网络号占了8位，/12表示网络号占了12位，即有12个1，以此类推。<br>具体的设置规则可参考下表:</p><table><thead><tr><th></th><th>IP总数</th><th>子网掩码</th></tr></thead><tbody><tr><td>/24</td><td>256</td><td>255.255.255.0</td></tr><tr><td>/20</td><td>4096</td><td>255.255.240.0</td></tr><tr><td>/16</td><td>65536</td><td>255.255.0.0</td></tr><tr><td>/12</td><td>1048576</td><td>255.240.0.0</td></tr><tr><td>/8</td><td>16777216</td><td>255.0.0.0</td></tr></tbody></table><p><code>子网掩码</code>是用来判断任意两台计算机的IP地址是否属于同一子网络的根据。<br>最为简单的理解就是两台计算机各自的IP地址与子网掩码进行<code>与</code>运算后，得出的结果是相同的，则说明这两台计算机是处于同一个子网络上的，可以进行直接的通讯。<br>比如：<br>网段：10.8.1.0/24<br>网络地址：10.8.1.0<br>子网掩码：255.255.255.0<br>主机地址：10.8.1.1~10.8.1.254<br>广播地址：10.8.1.255<br>主机地址+网络地址+广播地址：256</p><p>计算规则：</p><table><thead><tr><th></th><th>10进制</th><th>二进制</th><th>说明</th></tr></thead><tbody><tr><td>主机地址</td><td>10.8.1.1</td><td><code>00001010.00001000.00000001.00000001</code></td><td>10.8.1.1~10.8.1.254，这些ip和子网掩码<code>与</code>后的结果都相同</td></tr><tr><td>子网掩码</td><td>255.255.255.0</td><td><code>11111111.11111111.11111111.00000000</code></td><td>/24，即24个1</td></tr><tr><td>网络地址</td><td>10.8.1.0</td><td><code>00001010.00001000.00000001.00000000</code></td><td>主机地址和子网掩码<code>与</code>运算后的结果就得到了网络地址，同一个物理网络上的所有主机都使用同一个网络地址</td></tr><tr><td>广播地址</td><td>10.8.1.255</td><td><code>00001010.00001000.00000001.11111111</code></td><td>网络地址最后的0全部变为1就得到了广播地址</td></tr></tbody></table><p>以172.16.0.0/12为例，其子网掩码是255.240.0.0，<br>则172.16.0.0是网络地址，172.31.255.255是广播地址，网络地址相同的ip可以互相通信</p><p>IP地址分为五类，A类保留给政府机构，B类分配给中等规模的公司，C类分配给任何需要的人，D类用于组播，E类用于实验，各类可容纳的地址数目不同。<br>其中A类、B类、和C类这三类地址用于TCP/IP节点，其它两类D类和E类被用于特殊用途。</p><p><code>A、B、C三类IP地址的特征</code>：当将IP地址写成二进制形式时，A类地址的第一位总是O，B类地址的前两位总是10，C类地址的前三位总是110。</p><table><thead><tr><th>地址类型</th><th>二进制</th><th>十进制</th><th>地址范围</th><th>私有地址</th><th>保留地址</th><th>说明</th></tr></thead><tbody><tr><td>A类</td><td>0000000.00000000.00000000.00000000</td><td>0.0.0.0</td><td>1.0.0.1~126.155.255.254</td><td>10.X.X.X</td><td>127.X.X.X</td><td>第1字节为网络地址，其它3个字节为主机地址，第1个字节的第一位固定为0，注意数字0和127不作为A类地址</td></tr><tr><td>B类</td><td>10000000.00000000.00000000.00000000</td><td>128.0.0.0</td><td>128.0.0.1~191.255.255.254</td><td>172.16.0.0~172.31.255.255</td><td>169.254.X.X</td><td>第1字节和第2字节为网络地址，其它2个字节为主机地址，第1个字节的前两位固定为10</td></tr><tr><td>C类</td><td>11000000.00000000.00000000.00000000</td><td>192.0.0.0</td><td>192.0.0.1~223.255.255.254</td><td>192.168.X.X</td><td></td><td>第1字节、第2字节和第3个字节为网络地址，第4个个字节为主机地址，第1个字节的前三位固定为110</td></tr><tr><td>D类</td><td>11100000.00000000.00000000.00000000</td><td>224.0.0.0</td><td>224.0.0.1~239.255.255.254</td><td></td><td></td><td>不分网络地址和主机地址，第1个字节的前四位固定为1110，这一类地址被用在多点广播（Multicast）中</td></tr><tr><td>E类</td><td>11110000.00000000.00000000.00000000</td><td>240.0.0.0</td><td>240.0.0.1~255.255.255.254</td><td></td><td></td><td>第1个字节的前五位固定为11110，为将来使用保留</td></tr></tbody></table><p><code>私有网络地址</code>（以下简称私网地址）是指内部网络或者主机的IP地址，IANA（互联网数字分配机构）规定将下列的IP地址保留用作私网地址，不在Internet上被分配，可在一个单位或公司内部使用。RFC918中规定私有地址如下:</p><table><thead><tr><th>私有地址类别</th><th>地址范围</th><th>网段</th></tr></thead><tbody><tr><td>A类私有地址</td><td>10.0.0.0 ~ 10.255.255.255</td><td>10.0.0.0/8</td></tr><tr><td>B类私有地址</td><td>172.16.0.0 ~ 172.31.255.255</td><td>172.16.0.0/12</td></tr><tr><td>C类私有地址</td><td>192.168.0.0 ~ 192.168.255.255</td><td>192.168.0.0/16</td></tr></tbody></table></div><h2 id="路由">路由</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看路由列表</span></span><br><span class="line">route -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加路由规则，这里表示当前服务器要访问172.20.0.0/24这个网段的ip要去路由器192.168.10.20上查找</span></span><br><span class="line">route add -net 172.20.0.0/24 gw 192.168.10.20 dev eth0</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;网络相关命令，如ping、ifconfig、ssh、scp、netstat、curl、wget，以及查看DNS、检查域名和证书的到期时间等等&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令01--操作文件与目录</title>
    <link href="https://blog.hanqunfeng.com/2023/02/24/linux-command01/"/>
    <id>https://blog.hanqunfeng.com/2023/02/24/linux-command01/</id>
    <published>2023-02-24T13:30:05.000Z</published>
    <updated>2023-03-10T02:11:39.753Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>文件与目录的查看、创建、修改、删除、检索、压缩以及授权(ACL)等相关命令</p></li></ul><span id="more"></span><h2 id="一-文件与目录的基本操作">一.文件与目录的基本操作</h2><h3 id="1-查看目录下的内容：">1.查看目录下的内容：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> .  : 查看当前路径下的文件，当前目录可以不加<span class="string">&#x27;.&#x27;</span></span><br><span class="line"><span class="built_in">ls</span> -1 : 注意这里是数字1，列表展示当前目录下的文件及目录的名称</span><br><span class="line"><span class="built_in">ls</span> -1 -c : 以更改时间(ctime)倒序，显示文件和目录，默认按字母排序</span><br><span class="line"><span class="built_in">ls</span> -l : -l以列表的形式显示详细信息，包括文件类型和权限、文件所属用户和用户组、最后修改时间等等</span><br><span class="line"><span class="built_in">ls</span> -al : -a显示所有文件包括隐藏文件以及当前目录(.)和上级目录(..)，如果不希望展示这两个路径可以使用-A</span><br><span class="line"><span class="built_in">ls</span> -lh : 以人类便于理解的方式展示文件大小，K、M等等</span><br><span class="line"><span class="built_in">ls</span> <span class="built_in">dir</span> : 查看指定目录下的文件</span><br><span class="line"><span class="built_in">ls</span> -l <span class="built_in">dir</span> : 查看指定目录下的文件,列表展示</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>ls -l</code>的默认按文件名称排序，排序方式是alphabetically(字典序)，其规则大致为如下：<br>1.数字排在字母前面<br>2.忽视字母大小写<br>3.无视数字和英文字母之外的字符</p></li><li class="lvl-2"><p>按<code>文件大小</code>排序列出文件清单</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意：只能排文件，目录大小默认4k，要连目录一块排序，请使用 du -sh * | sort -h</span></span><br><span class="line"><span class="built_in">ls</span> -lSh : 从大到小</span><br><span class="line"><span class="built_in">ls</span> -lShr : 从小到大</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>按<code>时间</code>排序列出文件清单</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> -lt : 按mtime从大到小</span><br><span class="line"><span class="built_in">ls</span> -ltr : 按mtime从小到大</span><br><span class="line"></span><br><span class="line"><span class="built_in">ls</span> -ltc : 按ctime从大到小</span><br><span class="line"><span class="built_in">ls</span> -ltcr : 按ctime从小到大</span><br></pre></td></tr></table></figure><div class="success"><p><em><strong>小贴士</strong></em></p><ul class="lvl-1"><li class="lvl-2">为了方便，通常会使用别名<code>ll</code>替代<code>ls -l</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> ll</span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -l --color=auto&#x27;</span></span><br><span class="line">/usr/bin/ls</span><br><span class="line"></span><br><span class="line">$ ll</span><br><span class="line">drwxr-xr-x 6 root root    4096 7月  23 2021 apache-maven-3.8.1</span><br><span class="line">-rw-r--r-- 1 root root 9536838 3月  31 2021 apache-maven-3.8.1-bin.tar.gz</span><br><span class="line">lrwxrwxrwx 1 root root      18 7月  23 2021 maven -&gt; apache-maven-3.8.1</span><br></pre></td></tr></table></figure><p>展示出来的信息可以分为7组,意思如下：<br>[1]:权限<br>[2]:连结<br>[3]:拥有者<br>[4]:群组<br>[5]:文件容量<br>[6]:修改日期<br>[7]:文件或目录名称</p></div><h3 id="2-查看目录或文件的属性">2.查看目录或文件的属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ll -d <span class="built_in">dir</span> :-d只显示目录信息</span><br><span class="line">ll file :查看指定文件信息</span><br></pre></td></tr></table></figure><h3 id="3-切换目录">3.切换目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /  :切换到根目录</span><br><span class="line"><span class="built_in">cd</span> .. :回到上级目录</span><br><span class="line"><span class="built_in">cd</span> -  :返回到上一次访问的目录</span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">dir</span>:切换到指定目录</span><br></pre></td></tr></table></figure><h3 id="4-查看当前路径">4.查看当前路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><h3 id="5-创建空文件">5.创建空文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> filename :只创建不编辑</span><br></pre></td></tr></table></figure><h3 id="6-创建目录">6.创建目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> <span class="built_in">dir</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="built_in">dir</span>/dir/dir :创建多级目录</span><br></pre></td></tr></table></figure><h3 id="7-文件和目录复制">7.文件和目录复制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> sourcefile todir :复制到指定目录，保持原文件名</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> file1 file2 todir :同时复制多个文件到指定目录下</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> sourcefile todir/newfile :复制到指定目录，并重命名文件</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -R sourcedir todir :如果todir不存在，则将sourcedir下的内容复制到todir目录下，如果todir已经存在，则将sourcedir复制到todir目录下</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> sourcedir/* todir :复制目录下的文件到指定目录，不含sourcedir</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -n sourcefile todir :如文件已经存在，则不覆盖</span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -f sourcefile todir :如文件已经存在，则强制覆盖</span><br></pre></td></tr></table></figure><h3 id="8-移动文件、重命名">8.移动文件、重命名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> file1 file2 :重命名file1为file2</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> file todir :将文件移动到指定目录下</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> <span class="built_in">dir</span> todir :如果todir不存在，则将<span class="built_in">dir</span>重命名为todir，如果todir已经存在，则将<span class="built_in">dir</span>移动到todir目录下</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> <span class="built_in">dir</span> todir/ :如果todir不存在，则将<span class="built_in">dir</span>重命名为todir，如果todir已经存在，则将<span class="built_in">dir</span>移动到todir目录下</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> -n file todir :如有重复，则不覆盖</span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> -f file todir :如有重复，则强制覆盖</span><br></pre></td></tr></table></figure><div class="success"><p><em><strong>小贴士</strong></em><br>进行<code>cp</code>或<code>mv</code>操作时，非重命名操作最好都先通过<code>mkdir</code>创建好目标目录</p></div><h3 id="9-文件和目录删除">9.文件和目录删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f file : 删除文件</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="built_in">dir</span> : 删除目录</span><br></pre></td></tr></table></figure><h3 id="10-显示文件内容相关">10.显示文件内容相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">1) <span class="built_in">cat</span> file : 显示文件所有内容</span><br><span class="line"></span><br><span class="line">2) more file : 分页显示文件内容</span><br><span class="line">下一页: 空格</span><br><span class="line">下一行: 回车</span><br><span class="line">退出 : q</span><br><span class="line"></span><br><span class="line">选项含义</span><br><span class="line">-f计算行数时，以实际的行数，而不是自动换行过后的行数。</span><br><span class="line">-p不以卷动的方式显示每一页，而是先清除屏幕后再显示内容。</span><br><span class="line">-c跟 -p 选项相似，不同的是先显示内容再清除其他旧资料。</span><br><span class="line">-s当遇到有连续两行以上的空白行时，就替换为一行的空白行。</span><br><span class="line">-u不显示下引号（根据环境变量 TERM 指定的终端而有所不同）。</span><br><span class="line">+n从第 n 行开始显示文件内容，n 代表数字。</span><br><span class="line">-n一次显示的行数，n 代表数字。</span><br><span class="line"></span><br><span class="line">3) <span class="built_in">head</span> -20 file : 显示文件前20行，默认是10行</span><br><span class="line"></span><br><span class="line">4) <span class="built_in">tail</span> -20 file : 显示文件最后20行，默认是10行</span><br><span class="line"></span><br><span class="line">   <span class="built_in">tail</span> -f file -n 100 : 动态显示文件内容，先显示最后100行内容，用于查看日志</span><br><span class="line"></span><br><span class="line">   <span class="built_in">tail</span> -f file | grep key : 动态显示文件内容，配合grep使用，只显示关心的内容</span><br><span class="line"></span><br><span class="line">5) less file : 与more类似，不过less更加高效，推荐使用</span><br><span class="line"></span><br><span class="line">选项选项含义</span><br><span class="line">-N显示每行的行号。</span><br><span class="line">-S行过长时将超出部分舍弃。</span><br><span class="line">-e当文件显示结束后，自动离开。</span><br><span class="line">-g只标志最后搜索到的关键同。</span><br><span class="line">-Q不使用警告音。</span><br><span class="line">-i忽略搜索时的大小写。</span><br><span class="line">-m显示类似 more 命令的百分比。</span><br><span class="line">-f强迫打开特殊文件，比如外围设备代号、目录和二进制文件。</span><br><span class="line">-s显示连续空行为一行。</span><br><span class="line">-b &lt;缓冲区大小&gt;设置缓冲区的大小。</span><br><span class="line">-o &lt;文件名&gt;将 less 输出的内容保存到指定文件中。</span><br><span class="line">-x &lt;数字&gt;将【Tab】键显示为规定的数字空格。</span><br><span class="line"></span><br><span class="line">more 和 less的区别:</span><br><span class="line">1、less可以按键盘上下方向键显示上下内容，而more不能通过上下方向键控制显示</span><br><span class="line">2、less不必读整个文件，加载速度会比more更快</span><br><span class="line">3、less退出后shell不会留下刚显示的内容，而more退出后会在shell上留下刚显示的内容</span><br><span class="line">4、阅读到文件结束时，less不会退出，而more会</span><br><span class="line">5、less可用行号或百分比作为书签浏览文件，而more不行</span><br><span class="line">6、相比more，less提供更加友好的检索、高亮显示等操作</span><br></pre></td></tr></table></figure><h3 id="11-软链接与硬连接">11.软链接与硬连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s file/dir file/dir : 软连接</span><br><span class="line"><span class="built_in">ln</span> file file : 硬连接</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>软链接 与 硬链接 的区别</strong></em><br><code>软链接（soft link）</code>：也称为符号链接（Symbolic Link），类似于 Windows 操作系统中的快捷方式文件，该文件有自己的名称、inode 和 物理存储的文件数据（记录着另一文件的路径名指向），访问该文件会被重新定向到软链接所指的源文件名。</p><p><code>硬链接（hard link）</code>：相当于为当前文件名对应的文件再创建一个文件别名，当前文件名与该文件别名对应的 inode 和 物理存储的文件数据 都是一样的，访问该文件别名同访问当前文件名一致。</p><p>1.删除源文件，软链接 会失效(但不会被自动删除)，硬链接 不会失效(文件并没有被真正删除)；<br>2.软链接 可以为文件和目录(允许不存在)创建链接，硬链接 只可以为文件创建链接；<br>3.软链接 可以跨文件系统，硬链接 必须是同一个文件系统；<br>4.软链接 的文件权限 可以和源文件不一样，硬链接 的文件权限 一定和源文件一样；<br>5.软链接：作为可执行文件的快捷方式；<br>6.硬链接：备份重要文件。</p></div><h3 id="12-查看文件或目录的大小">12.查看文件或目录的大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -h file : 查看文件大小</span><br><span class="line"></span><br><span class="line"><span class="built_in">du</span> -sh <span class="built_in">dir</span> : 查看目录大小</span><br><span class="line"></span><br><span class="line"><span class="built_in">du</span> -sh * : 查看当前目录下所有文件和目录的大小</span><br><span class="line"></span><br><span class="line"><span class="built_in">du</span> -sh * | <span class="built_in">sort</span> -h   : 正序</span><br><span class="line"><span class="built_in">du</span> -sh * | <span class="built_in">sort</span> -hr  : 倒序</span><br></pre></td></tr></table></figure><h3 id="13-查看文件、目录详细时间参数">13.查看文件、目录详细时间参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">stat</span> file/dir : 列出访问时间，最后修改时间，等等</span><br><span class="line"><span class="comment"># 示例：</span></span><br><span class="line"><span class="built_in">stat</span> apache-maven-3.8.1-bin.tar.gz</span><br><span class="line">  文件：<span class="string">&quot;apache-maven-3.8.1-bin.tar.gz&quot;</span></span><br><span class="line">  大小：9536838   块：18632      IO 块：4096   普通文件</span><br><span class="line">设备：fd01h/64769dInode：1078257     硬链接：1</span><br><span class="line">权限：(0644/-rw-r--r--)  Uid：(    0/    root)   Gid：(    0/    root)</span><br><span class="line">最近访问：2023-03-03 10:06:52.371937028 +0800</span><br><span class="line">最近更改：2021-03-31 01:41:19.000000000 +0800</span><br><span class="line">最近改动：2021-07-23 15:25:42.624723562 +0800</span><br><span class="line">创建时间：-</span><br><span class="line"></span><br><span class="line">1. 最近访问(Access Time) ：简写为atime，表示文件的访问时间。当文件内容被访问时，更新这个时间。</span><br><span class="line">2. 最近更改(Modify Time) ：简写为mtime，表示文件内容的修改时间，当文件的数据内容被修改时，更新这个时间。就是 <span class="built_in">ls</span> -l 里显示的时间。</span><br><span class="line">3. 最近改动(Change Time) ：简写为ctime，表示文件的状态时间，当文件的状态被修改时，更新这个时间，例如文件的链接数，大小，权限，Blocks数。</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>小贴士</strong></em><br><strong>使用<code>touch</code>命令修改文件的时间戳</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">touch</span> --<span class="built_in">help</span></span><br><span class="line">用法：<span class="built_in">touch</span> [选项]... 文件...</span><br><span class="line">Update the access and modification <span class="built_in">times</span> of each FILE to the current time.</span><br><span class="line"></span><br><span class="line">A FILE argument that does not exist is created empty, unless -c or -h</span><br><span class="line">is supplied.</span><br><span class="line"></span><br><span class="line">A FILE argument string of - is handled specially and causes <span class="built_in">touch</span> to</span><br><span class="line">change the <span class="built_in">times</span> of the file associated with standard output.</span><br><span class="line">Mandatory arguments to long options are mandatory <span class="keyword">for</span> short options too.</span><br><span class="line">  -a    只更改访问时间</span><br><span class="line">  -c, --no-create不创建任何文件</span><br><span class="line">  -d, --<span class="built_in">date</span>=字符串 使用指定字符串表示时间而非当前时间</span><br><span class="line">  -f    (忽略)</span><br><span class="line">  -h, --no-dereference会影响符号链接本身，而非符号链接所指示的目的地</span><br><span class="line">            (当系统支持更改符号链接的所有者时，此选项才有用)</span><br><span class="line">  -m    只更改修改时间</span><br><span class="line">  -r, --reference=FILE   use this file<span class="string">&#x27;s times instead of current time</span></span><br><span class="line"><span class="string">  -t STAMP               use [[CC]YY]MMDDhhmm[.ss] instead of current time</span></span><br><span class="line"><span class="string">      --time=WORD        change the specified time:</span></span><br><span class="line"><span class="string">                           WORD is access, atime, or use: equivalent to -a</span></span><br><span class="line"><span class="string">                           WORD is modify or mtime: equivalent to -m</span></span><br><span class="line"><span class="string">      --help显示此帮助信息并退出</span></span><br><span class="line"><span class="string">      --version显示版本信息并退出</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">请注意，-d 和-t 选项可接受不同的时间/日期格式。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 示例</span></span><br><span class="line"><span class="string"># 修改atime</span></span><br><span class="line"><span class="string">touch -a test : 修改为当前系统时间</span></span><br><span class="line"><span class="string">touch -a -d &quot;2023-03-02 11:37:08&quot; test.sh : 修改为指定的时间</span></span><br><span class="line"><span class="string">touch -a -t &quot;202303021137.08&quot; test.sh</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 修改mtime</span></span><br><span class="line"><span class="string">touch -m test : 修改为当前系统时间</span></span><br><span class="line"><span class="string">touch -m -d &quot;2023-03-02 11:37:08&quot; test.sh : 修改为指定的时间</span></span><br><span class="line"><span class="string">touch -m -t &quot;202303021137.08&quot; test.sh</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 注意，修改atime或mtime时，都会同时修改ctime，因为文件的状态发生了变化</span></span><br></pre></td></tr></table></figure></div><h3 id="14-查看文件的MD5或SHA值">14.查看文件的MD5或SHA值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">md5sum</span> file</span><br><span class="line"></span><br><span class="line"><span class="built_in">sha256sum</span> file</span><br><span class="line"></span><br><span class="line"><span class="built_in">sha512sum</span> file</span><br></pre></td></tr></table></figure><h3 id="15-查看硬盘分区情况及其挂载点">15.查看硬盘分区情况及其挂载点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h : 显示硬盘大小，自动使用最大的单位</span><br><span class="line"><span class="built_in">df</span> -Th : 同时显示分区类型</span><br><span class="line"></span><br><span class="line"><span class="built_in">df</span> -hl : 只显示本机的文件系统</span><br><span class="line"></span><br><span class="line"><span class="built_in">df</span>    : 分区容量全部使用单位K，等同于 <span class="built_in">df</span> -k</span><br><span class="line"><span class="built_in">df</span> -m : 分区容量全部使用单位M</span><br></pre></td></tr></table></figure><h2 id="二-文件与目录的权限管理">二.文件与目录的权限管理</h2><div class="tips"><p><em><strong>小贴士</strong></em><br><strong>文件系统构成</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin 、/bin：存放所有用户都可以执行的命令</span><br><span class="line">/usr/sbin 、/sbin：存放只有root用户可以执行的命令</span><br><span class="line">/home：用户缺省宿主目录</span><br><span class="line">/proc：虚拟文件目录，存放当前进程信息</span><br><span class="line">/dev：设备文件</span><br><span class="line">/lib：系统运行所需的共享库</span><br><span class="line">/lost+found：存放系统出错的检查结果</span><br><span class="line">/tmp：临时文件</span><br><span class="line">/etc：系统配置文件</span><br><span class="line">/var：经常变动的文件，如邮件，日志，计划任务</span><br><span class="line">/usr：库，手册，第三方程序一般安装在/usr/local下</span><br><span class="line">/boot：内核文件</span><br><span class="line">/mnt：临时挂载点</span><br></pre></td></tr></table></figure><p><strong>文件类型和文件权限</strong><br>当我们通过<code>ls -l</code>查看文件列表信息时，会看到文件类型和权限、文件所属用户和用户组、最后修改时间等等:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x 6 root root    4096 7月  23 2021 apache-maven-3.8.1</span><br><span class="line">-rw-r--r-- 1 root root 9536838 3月  31 2021 apache-maven-3.8.1-bin.tar.gz</span><br><span class="line">lrwxrwxrwx 1 root root      18 7月  23 2021 maven -&gt; apache-maven-3.8.1</span><br></pre></td></tr></table></figure><p>第一列展示的就是文件权限，如<code>drwxr-xr-x</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第一个字符表示文件类型:</span><br><span class="line">- 表示普通文件</span><br><span class="line">d 表示目录</span><br><span class="line">l 表示符号链接</span><br><span class="line">c 表示字符设备文件</span><br><span class="line">b 表示块设备文件</span><br><span class="line">s 表示套接字文件</span><br><span class="line">p 表示管道文件</span><br></pre></td></tr></table></figure><p>也可以通过<code>file</code>命令查看文件类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ file apache-maven-3.8.1</span><br><span class="line">apache-maven-3.8.1: directory</span><br><span class="line">$ file apache-maven-3.8.1-bin.tar.gz</span><br><span class="line">apache-maven-3.8.1-bin.tar.gz: gzip compressed data, from FAT filesystem (MS-DOS, OS/2, NT)</span><br><span class="line">$ file maven</span><br><span class="line">maven: symbolic <span class="built_in">link</span> to `apache-maven-3.8.1<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一列的其余 9 个字符表示文件或目录的访问权限，分别对应三个字符一组的 rwx 权限，</span><br><span class="line">每3位分别代表文件所有者权限，文件所属组权限，其它用户和组的权限:</span><br><span class="line">r 表示读取权限</span><br><span class="line">w 表示写入权限</span><br><span class="line">x 表示执行权限</span><br><span class="line">- 表示没有对应权限</span><br></pre></td></tr></table></figure></div><h3 id="1-改变文件或目录权限">1.改变文件或目录权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u+x file/dir</span><br><span class="line"></span><br><span class="line">u:文件所有者</span><br><span class="line">g:文件所属组</span><br><span class="line">o:其它用户和组</span><br><span class="line">a:所有用户所有组</span><br><span class="line"></span><br><span class="line">+:赋予权限 -:去除权限</span><br><span class="line"></span><br><span class="line">r:读权限   文件--可以查看  目录--可以列出目录内容</span><br><span class="line">w:写权限   文件--可以修改  目录--可以在目录中创建、删除文件和目录</span><br><span class="line">x:执行权限 文件--可以执行文件 目录--可以进入目录</span><br><span class="line"></span><br><span class="line">注：对于目录，如有r权限，则必须有x权限。</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> 751 file : 相当于rwxr-x--x</span><br><span class="line">r-&gt;4</span><br><span class="line">w-&gt;2</span><br><span class="line">x-&gt;1</span><br></pre></td></tr></table></figure><h3 id="2-改变文件或目录所有者和所属组">2.改变文件或目录所有者和所属组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> user file :将file的所有者修改为user</span><br><span class="line"></span><br><span class="line"><span class="built_in">chgrp</span> group file :将file的所属组修改为group</span><br><span class="line"></span><br><span class="line"><span class="built_in">chown</span> -R user.group <span class="built_in">dir</span> :修改<span class="built_in">dir</span>及其子目录的所有者和所属组 </span><br></pre></td></tr></table></figure><h3 id="3-为可执行程序赋予SetUID与SetGID权限">3.为可执行程序赋予SetUID与SetGID权限</h3><ul class="lvl-0"><li class="lvl-2"><p>当一个可执行程序具有SetUID权限，用户执行这个程序时将以这个程序所有者身份执行。</p></li><li class="lvl-2"><p>当一个可执行程序具有SetGID权限，用户执行这个程序时将以这个程序所属组身份执行。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置SetUID</span></span><br><span class="line"><span class="built_in">chmod</span> u+s 程序</span><br><span class="line"><span class="built_in">chmod</span> 4755 程序 : 权限从3位数字变成了4位数字，SetUID权限用数字4表示</span><br><span class="line"><span class="comment"># 取消SetUID</span></span><br><span class="line"><span class="built_in">chmod</span> u-s 程序</span><br><span class="line"><span class="built_in">chmod</span> 755 程序</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置SetGID</span></span><br><span class="line"><span class="built_in">chmod</span> g+s 程序</span><br><span class="line"><span class="built_in">chmod</span> 2755 程序 : 权限从3位数字变成了4位数字，SetGID权限用数字2表示</span><br><span class="line"><span class="comment"># 取消SetGID</span></span><br><span class="line"><span class="built_in">chmod</span> g-s 程序</span><br><span class="line"><span class="built_in">chmod</span> 755 程序</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">ll test.sh : 初始权限</span><br><span class="line">-rwxr-xr-x 1 root root 0 3月   3 15:44 test.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> u+s test.sh : 增加SetUID权限</span><br><span class="line"></span><br><span class="line">ll test.sh</span><br><span class="line">-rwSr-xr-x 1 root root 0 3月   3 15:44 test.sh</span><br><span class="line"></span><br><span class="line">此时可以看到root用户的执行权限从小写的x变成了大写的S，表示任何用户执行test.sh，都会以root用户身份执行</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> u-s test.sh : 去掉SetUID权限</span><br><span class="line"><span class="built_in">chmod</span> g+s test.sh : 增加SetGID权限</span><br><span class="line"></span><br><span class="line">ll test.sh</span><br><span class="line">-rwxr-Sr-x 1 root root 0 3月   3 15:44 test.sh</span><br><span class="line"></span><br><span class="line">此时可以看到root用户组的执行权限从小写的x变成了大写的S，表示任何用户执行test.sh，都会以root用户组的身份执行</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在根路径下查找具有SetUID和SetGID程序：</span></span><br><span class="line">find / -perm -4000 -o -perm -2000</span><br></pre></td></tr></table></figure><h3 id="4-ACL授权">4.ACL授权</h3><ul class="lvl-0"><li class="lvl-2"><p>ACL授权比chmod更加灵活，也更加精细化，它可以为每个用户或组单独设置一套访问权限</p></li></ul><h4 id="添加或修改ACL权限">添加或修改ACL权限</h4><ul class="lvl-0"><li class="lvl-2"><p>语法格式</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setfacl -m [权限规则] <span class="built_in">dir</span>[file]</span><br><span class="line"></span><br><span class="line">权限规则：</span><br><span class="line">u[设置用户]:username[用户名]:rwx[设置权限]</span><br><span class="line">g[设置组]:groupname[组名]:rwx[设置权限]</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>示例</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r-- 1 root root 0 3月   9 11:25 file</span><br><span class="line">drwxr-xr-x  2 root root 4096 3月   9 11:36 <span class="built_in">dir</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 为hanqf用户设置file文件的访问权限为rw</span></span><br><span class="line">setfacl -m u:hanqf:rw file</span><br><span class="line"><span class="comment"># 为hanqf用户设置dir文件的访问权限为rwx</span></span><br><span class="line">setfacl -m u:hanqf:rwx <span class="built_in">dir</span></span><br><span class="line"></span><br><span class="line">-rw-rw-r--+ 1 root root 0 3月   9 11:25 file</span><br><span class="line">drwxrwxr-x+ 2 root root 4096 3月   9 11:35 <span class="built_in">dir</span></span><br><span class="line">此时可以看到file和<span class="built_in">dir</span>的权限后面多了一个加号标志，同时其组权限也发生了变化，这个我们后面讲</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为hanqf用户组设置file文件的访问权限为rwx</span></span><br><span class="line">setfacl -m g:hanqf:rw file</span><br><span class="line"><span class="comment"># 为hanqf用户组设置dir文件的访问权限为rwx</span></span><br><span class="line">setfacl -m g:hanqf:rwx <span class="built_in">dir</span></span><br><span class="line"></span><br><span class="line">-rw-rwxr--+ 1 root root 0 3月   9 11:25 file</span><br><span class="line">drwxrwxr-x+ 2 root root 4096 3月   9 11:35 <span class="built_in">dir</span></span><br><span class="line">此时同样可以看到file和<span class="built_in">dir</span>的权限后面多了一个加号标志，同时其组权限也发生了变化，这个我们后面讲</span><br><span class="line"></span><br><span class="line">所以，只要看到文件或目录权限后面有个加号，就说明被设置ACL权限</span><br><span class="line"></span><br><span class="line"><span class="comment"># -R : 递归设置子目录下的权限</span></span><br><span class="line">setfacl -m u:hanqf:r -R <span class="built_in">dir</span> <span class="comment">#同时设置子目录下的权限</span></span><br></pre></td></tr></table></figure><h4 id="查看ACL权限">查看ACL权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ getfacl file  <span class="comment">#查看该文件被设置的所有acl权限</span></span><br><span class="line"><span class="comment"># file: dir</span></span><br><span class="line"><span class="comment"># owner: root</span></span><br><span class="line"><span class="comment"># group: root</span></span><br><span class="line">user::rwx</span><br><span class="line">user:hanqf:rw-</span><br><span class="line">group::r-x</span><br><span class="line">group:hanqf:rwx</span><br><span class="line">mask::rwx</span><br><span class="line">other::r-x</span><br><span class="line"></span><br><span class="line">$ getfacl <span class="built_in">dir</span>  <span class="comment">#查看该目录被设置的所有acl权限</span></span><br><span class="line"><span class="comment"># file: dir</span></span><br><span class="line"><span class="comment"># owner: root</span></span><br><span class="line"><span class="comment"># group: root</span></span><br><span class="line">user::rwx</span><br><span class="line">user:hanqf:rwx</span><br><span class="line">group::r-x</span><br><span class="line">group:hanqf:rwx</span><br><span class="line">mask::rwx</span><br><span class="line">other::r-x</span><br><span class="line"></span><br><span class="line">$ getfacl --omit-header file ：去掉头信息</span><br><span class="line">user::rwx</span><br><span class="line">user:hanqf:rw-</span><br><span class="line">group::r-x</span><br><span class="line">group:hanqf:rwx</span><br><span class="line">mask::rwx</span><br><span class="line">other::r-x</span><br></pre></td></tr></table></figure><div class="tips"><p><em><strong>小贴士</strong></em></p><ul class="lvl-1"><li class="lvl-2">文件所有者权限:<code>ACL_USER_OBJ</code><br>user::rwx</li><li class="lvl-2">指定某些用户的权限，一行显示一个:<code>ACL_USER</code><br>user:hanqf:rw-</li><li class="lvl-2">文件所属组权限:<code>ACL_GROUP</code><br>group::r-x</li><li class="lvl-2">指定某些用户组的权限，一行显示一个:<code>ACL_GROUP_OBJ</code><br>group:hanqf:rwx</li><li class="lvl-2">mask权限，<code>ACL_USER</code>, <code>ACL_GROUP</code>和<code>ACL_GROUP_OBJ</code>中的最大值，即rwx转换为数字后的和<br>mask::rwx</li><li class="lvl-2">其它用户和组的权限<br>other::r-x</li></ul></div><h4 id="mask限制ACL权限最大值">mask限制ACL权限最大值</h4><ul class="lvl-0"><li class="lvl-2"><p>上面我们在给文件或目录设置ACL权限后，通过<code>ls -l</code>命令查看文件或目录权限时，发现组权限也发生了变化，</p></li><li class="lvl-2"><p>实际上这里的组权限显示的是<code>mask</code>，<code>mask</code>用于限制<code>ACL_USER</code>, <code>ACL_GROUP</code>和<code>ACL_GROUP_OBJ</code>中的最大值，即rwx转换为数字后的和</p></li><li class="lvl-2"><p>我们也可以设置<code>mask</code>的值</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ setfacl -m mask::r-- file</span><br><span class="line"></span><br><span class="line">$ getfacl --omit-header file</span><br><span class="line">user::rw-</span><br><span class="line">user:hanqf:rw-<span class="comment">#effective:r--</span></span><br><span class="line">group::r--</span><br><span class="line">group:hanqf:rwx<span class="comment">#effective:r--</span></span><br><span class="line">mask::r--</span><br><span class="line">other::r--</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">ls</span> -l file</span><br><span class="line">-rw-r--r--+ 1 root root 0 3月   9 11:25 file</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时会看到相应的权限后面多出了<code>#effective:r--</code>，我们设置<code>mask</code>的权限只有读权限，这样即便我们之前设置了hanqf用户的读写权限，此时也失效了，所以实际的权限也是<code>r--</code></p></li><li class="lvl-2"><p><code>mask</code>不会限制<code>other</code>的权限</p></li></ul><h4 id="Default-ACL-设置">Default ACL 设置</h4><ul class="lvl-0"><li class="lvl-2"><p>如果希望任何人在dir下创建的文件都对被指定的用户拥有相同的权限，那么我们就应该对dir目录设置 Default ACL</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -d 缺省设置，这样，任何人在该dir目录下创建的文件，都可以被hanqf读写</span></span><br><span class="line">$ setfacl -d -m user:hanqf:rw <span class="built_in">dir</span></span><br><span class="line">$ getfacl --omit-header <span class="built_in">dir</span></span><br><span class="line">user::rwx</span><br><span class="line">group::r-x</span><br><span class="line">other::r-x</span><br><span class="line">default:user::rwx</span><br><span class="line">default:user:hanqf:rw-</span><br><span class="line">default:group::r-x</span><br><span class="line">default:mask::rwx</span><br><span class="line">default:other::r-x</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Default ACL 只针对设置后新创建的文件才有效</p></li><li class="lvl-2"><p>取消 Default ACL</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ setfacl -k <span class="built_in">dir</span></span><br><span class="line">$ getfacl <span class="built_in">dir</span></span><br><span class="line">user::rwx</span><br><span class="line">user:hanqf:rw-</span><br><span class="line">group::r-x</span><br><span class="line">mask::rwx</span><br><span class="line">other::r-x</span><br></pre></td></tr></table></figure><h4 id="删除ACL权限">删除ACL权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除用户的权限</span></span><br><span class="line">setfacl -x u:username file</span><br><span class="line">setfacl -x u:username <span class="built_in">dir</span></span><br><span class="line">setfacl -x u:username -R <span class="built_in">dir</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除组的权限</span></span><br><span class="line">setfacl -x g:groupname file</span><br><span class="line">setfacl -x g:groupname <span class="built_in">dir</span></span><br><span class="line">setfacl -x g:groupname -R <span class="built_in">dir</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除全部acl权限</span></span><br><span class="line">setfacl -b file</span><br><span class="line">setfacl -b <span class="built_in">dir</span></span><br><span class="line">setfacl -b -R <span class="built_in">dir</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>ACL权限删除后，对应文件或目录权限上的加号就会去掉</p></li></ul><h2 id="三-文件搜索命令">三.文件搜索命令</h2><h3 id="1-显示系统命令所在目录">1.显示系统命令所在目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">which</span> <span class="built_in">mkdir</span></span><br></pre></td></tr></table></figure><h3 id="2-查找文件或目录">2.查找文件或目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">find <span class="built_in">dir</span> -name filename : 在目录下查找文件名为filename的文件</span><br><span class="line"></span><br><span class="line">    -name:文件名称，例如：find . -name <span class="string">&quot;*.log&quot;</span> </span><br><span class="line"></span><br><span class="line">    -size:文件大小,以block为单位，1block=512k</span><br><span class="line"></span><br><span class="line">    -size +204800:大于100M</span><br><span class="line"></span><br><span class="line">    -size -204800:小于100M</span><br><span class="line"></span><br><span class="line">    -user:文件所有者</span><br><span class="line"></span><br><span class="line">    -ctime:按文件创建时间来查找文件，-n指n天以内，+n指n天以前</span><br><span class="line"></span><br><span class="line">    -cmin:同上，分钟</span><br><span class="line"></span><br><span class="line">    -mtime:按文件更改时间来查找文件，-n指n天以内，+n指n天以前</span><br><span class="line"></span><br><span class="line">    -mmin:同上，分钟</span><br><span class="line"></span><br><span class="line">    -atime:按文件访问时间来查找文件</span><br><span class="line"></span><br><span class="line">    -amin:同上，分钟</span><br><span class="line"></span><br><span class="line">    -<span class="built_in">type</span> b/d/c/p/l/f: 查是块设备、目录、字符设备、管道、符号链接、普通文件</span><br><span class="line"></span><br><span class="line">    -empty:查找在系统中为空的文件或者文件夹</span><br><span class="line"></span><br><span class="line">    -<span class="built_in">exec</span> commond &#123;&#125; \; : 将查找到的路径作为commond的参数，并执行,</span><br><span class="line"></span><br><span class="line">        find . -name .svn -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \; 类似于 : find . -name .svn | xargs <span class="built_in">rm</span> -rf</span><br><span class="line"></span><br><span class="line">        find . -name <span class="string">&quot;*.log&quot;</span> -<span class="built_in">exec</span> <span class="built_in">cp</span> <span class="string">&#x27;&#123;&#125;&#x27;</span> ./dir <span class="string">&#x27;;&#x27;</span> : 将当前目录下的以.<span class="built_in">log</span>结尾的文件拷贝到./dir下，</span><br><span class="line">        类似于find . -name <span class="string">&quot;*.log&quot;</span> | xargs -n1 -i <span class="built_in">cp</span> &#123;&#125; ./dir</span><br><span class="line">        -n[num] : 执行命令时，一次提供几个参数，这里表示，每次传递给<span class="built_in">cp</span>一个参数</span><br><span class="line"></span><br><span class="line">        清理30天前的日志文件：</span><br><span class="line">        find logdir -name <span class="string">&quot;*.log*&quot;</span> -mtime +30 -<span class="built_in">type</span> f | xargs <span class="built_in">rm</span> -f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -maxdepth:查找目录最大深度，默认是全部查找</span><br><span class="line"></span><br><span class="line">        例如：find -maxdepth 2 -name <span class="string">&quot;*<span class="variable">$&#123;filename&#125;</span>*&quot;</span> -<span class="built_in">exec</span> <span class="built_in">cp</span> &#123;&#125; <span class="variable">$newfilename</span> \;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        -a:and</span><br><span class="line"></span><br><span class="line">        -o:or</span><br><span class="line"></span><br><span class="line">        例子：查询大于100M并且所有者为hanqf的文件并将其删除</span><br><span class="line"></span><br><span class="line">        find /etc -size +204800 -a -user hanqf -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">        !:不等于，不包含，例如：find . ! -<span class="built_in">type</span> d，查找所有类型不是目录的文件</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-从文件索引库中查找文件或目录">3.从文件索引库中查找文件或目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">updatedb:更新索引，系统会自动定期执行</span><br><span class="line"></span><br><span class="line">locate key：从索引库中查找名称包含key的文件和目录</span><br></pre></td></tr></table></figure><h3 id="4-在文件中搜索匹配关键字的行">4.在文件中搜索匹配关键字的行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">grep key file : 查找含key的行，等同于 <span class="built_in">cat</span> file | grep key</span><br><span class="line">    例子: grep ^<span class="comment"># file : 显示所有行首是#的行</span></span><br><span class="line"></span><br><span class="line">grep -v key file:查找不含key的行</span><br><span class="line">    例子: grep -v ^<span class="comment"># file : 显示所有行首不是#的行</span></span><br><span class="line"></span><br><span class="line">grep key file -A 10:显示关键字行及其后面的10行</span><br><span class="line"></span><br><span class="line">grep key file -B 10:显示关键字行及其前面的10行</span><br><span class="line"></span><br><span class="line">grep  -E <span class="string">&#x27;key1|key2&#x27;</span>  -n -i file : 查找包含任意关键字的行，并显示行号</span><br><span class="line">    -E 支持正则表达式，-n 显示行号，-i 不区分大小写</span><br><span class="line"></span><br><span class="line">grep key -c file : 查找关键字匹配的行数</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个命令非常有用，可以快速定位关键字所在的文件位置</span></span><br><span class="line">grep <span class="string">&#x27;key&#x27;</span> -r <span class="built_in">dir</span> : 在目录下递归查找文件内容包含关键字的文件路径及其所含关键字的内容</span><br><span class="line">    -r 递归查找</span><br></pre></td></tr></table></figure><h2 id="四-压缩和解压缩命令">四.压缩和解压缩命令</h2><h3 id="1-格式：-gz-只能压缩文件">1.格式：.gz 只能压缩文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gzip file : 压缩 file.gz</span><br><span class="line"></span><br><span class="line">gunzip file.gz : 解压缩</span><br><span class="line"></span><br><span class="line">gunzip *.gz</span><br></pre></td></tr></table></figure><h3 id="2-格式：-tar-可以压缩文件和目录">2.格式：.tar 可以压缩文件和目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf file.tar file : 压缩</span><br><span class="line">tar -zcvf file.tar.gz file/dir</span><br><span class="line">tar -zcvf file_$(<span class="built_in">date</span> +%F).tar.gz file</span><br><span class="line">tar -zcvf file.tar.gz dir1 dir2 dir3 : 压缩多个目录</span><br><span class="line"></span><br><span class="line">    -c:产生.tar文件</span><br><span class="line"></span><br><span class="line">    -v:显示详细信息</span><br><span class="line"></span><br><span class="line">    -f:指定压缩后的文件名</span><br><span class="line"></span><br><span class="line">    -z:打包同时压缩为.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tar -xvf file.tar : 解压缩</span><br><span class="line">tar -zxvf file.tar.gz </span><br><span class="line"></span><br><span class="line">    -x:解压.tar文件</span><br><span class="line"></span><br><span class="line">    -v:显示详细信息</span><br><span class="line"></span><br><span class="line">    -f:指定要解压的文件名</span><br><span class="line"></span><br><span class="line">    -z:解压缩.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tar -zxvf file.tar.gz -C todir</span><br><span class="line"></span><br><span class="line">    -C:解压到指定目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tar -ztf file.tar.gz : 不解包，查看包中文件列表</span><br></pre></td></tr></table></figure><h3 id="3-格式：-zip-可以压缩文件和目录">3.格式：.zip 可以压缩文件和目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">zip file.zip file : 压缩文件</span><br><span class="line"></span><br><span class="line">zip -r dir.zip <span class="built_in">dir</span> : 压缩目录</span><br><span class="line"></span><br><span class="line">unzip file.zip : 解压缩</span><br><span class="line"></span><br><span class="line">unzip -o file.zip : 解压后如果文件已经存在，则覆盖</span><br><span class="line"></span><br><span class="line">unzip -n file.zip : 解压后如果文件已经存在，则不覆盖</span><br></pre></td></tr></table></figure><h3 id="4-格式：-bz2-只能压缩文件">4.格式：.bz2 只能压缩文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -k file : 压缩 file.bz2</span><br><span class="line"></span><br><span class="line">-k:压缩后保留原文件</span><br><span class="line"></span><br><span class="line">bunzip2 -k file.bz2 : 解压缩</span><br><span class="line"></span><br><span class="line">-k:解压后保留原文件</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;文件与目录的查看、创建、修改、删除、检索、压缩以及授权(ACL)等相关命令&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/linux/"/>
    
    
    <category term="linux" scheme="https://blog.hanqunfeng.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MySql--sql语句优化</title>
    <link href="https://blog.hanqunfeng.com/2022/11/22/mysql-sql-optimization/"/>
    <id>https://blog.hanqunfeng.com/2022/11/22/mysql-sql-optimization/</id>
    <published>2022-11-22T13:30:05.000Z</published>
    <updated>2022-11-23T08:01:26.537Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>sql语句优化</p></li><li class="lvl-2"><p>本文基于<code>mysql-8.0.30</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/">https://dev.mysql.com/doc/refman/8.0/en/</a></p></li></ul><span id="more"></span><h2 id="一般优化原则">一般优化原则</h2><ul class="lvl-0"><li class="lvl-2"><p>查询类型要与字段类型匹配，否则不会使用索引，这里注意日期类型可以使用字符串比较</p></li><li class="lvl-2"><p>like '%xx%'不会使用索引，like 'xx%'会使用索引</p></li><li class="lvl-2"><p>in和or在表数据量比较大的情况会走索引，在表记录不多的情况下会选择全表扫描</p></li><li class="lvl-2"><p>where条件左侧避免使用函数，否则不会使用索引</p></li></ul><h2 id="分页查询优化">分页查询优化</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees limit <span class="number">90000</span>,<span class="number">25</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>1.根据自增且连续的主键排序的分页查询，要求主键自增且连续</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> id <span class="operator">&gt;</span> <span class="number">90000</span> limit <span class="number">25</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>2.根据非主键字段排序的分页查询(这种方式更加灵活)</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees e <span class="keyword">inner</span> <span class="keyword">join</span> (<span class="keyword">select</span> id <span class="keyword">from</span> employees <span class="keyword">order</span> <span class="keyword">by</span> name limit <span class="number">90000</span>,<span class="number">25</span>) ed <span class="keyword">on</span> e.id <span class="operator">=</span> ed.id;</span><br></pre></td></tr></table></figure><h2 id="order-by-与-group-by-优化"><code>order by</code> 与 <code>group by</code> 优化</h2><ul class="lvl-0"><li class="lvl-2"><p><code>group by</code> 与``order by` 很类似，其实质是先排序后分组，遵照索引创建顺序的最左前缀法则</p></li><li class="lvl-2"><p><code>order by</code> 与 <code>group by</code> 字段尽量与 <code>select</code> 和 <code>where</code> 中的字段组合为联合索引，即覆盖索引，避免文件排序和回表</p></li><li class="lvl-2"><p><code>where</code> 高于 <code>having</code>，能写在 <code>where</code> 中的限定条件就不要去 <code>having</code> 限定了</p></li></ul><h2 id="in和exsits优化，小表驱动大表"><code>in</code>和<code>exsits</code>优化，小表驱动大表</h2><ul class="lvl-0"><li class="lvl-2"><p>1.当B表的数据集小于A表的数据集时，in优于exists</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> B);</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>2.当A表的数据集小于B表的数据集时，exists优于in</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> B <span class="keyword">where</span> B.id <span class="operator">=</span> A.id)</span><br></pre></td></tr></table></figure><h2 id="count-查询优化"><code>count(*)</code>查询优化</h2><ul class="lvl-0"><li class="lvl-2"><p>count(*)≈count(1)&gt;count(索引字段)&gt;count(主键id)</p></li></ul><h2 id="多表关联语句优化">多表关联语句优化</h2><ul class="lvl-0"><li class="lvl-2"><p>不要超过3张表，关联表越多查询效率越低</p></li><li class="lvl-2"><p>mysql优化器一般会优先选择小表做驱动表，所以使用 <code>inner join</code> 时，排在前面的表并不一定就是驱动表。</p></li><li class="lvl-2"><p>当使用 <code>left join</code> 时，左表是驱动表，右表是被驱动表，当使用 <code>right join</code> 时，右表时驱动表，左表是被驱动表， 当使用 <code>join</code> 时，mysql会选择数据量比较小的表作为驱动表，大表作为被驱动表。</p></li><li class="lvl-2"><p>多表关联字段一定要创建索引</p></li><li class="lvl-2"><p>在决定哪个表做驱动表的时候，应该是两个表按照各自的条件过滤，过滤完成之后，计算参与 join 的各个字段的总数据量，数据量小的那个表，就是“小表”，应该作为驱动表。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;sql语句优化&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;，&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySql--sql语句与常用函数</title>
    <link href="https://blog.hanqunfeng.com/2022/10/26/mysql-sql-function/"/>
    <id>https://blog.hanqunfeng.com/2022/10/26/mysql-sql-function/</id>
    <published>2022-10-26T13:30:05.000Z</published>
    <updated>2022-11-23T07:58:15.674Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++::: tips success warning danger这里是容器内的内容:::% note info % success warning danger这里是容器内的内容% endnote % --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>sql语句与常用函数介绍</p></li><li class="lvl-2"><p>本文基于<code>mysql-8.0.30</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/">https://dev.mysql.com/doc/refman/8.0/en/</a></p></li></ul><span id="more"></span><h2 id="Mysql关键字执行顺序">Mysql关键字执行顺序</h2><table><thead><tr><th style="text-align:left">Mysql关键字语法顺序</th><th style="text-align:left">Mysql关键字执行顺序</th></tr></thead><tbody><tr><td style="text-align:left">select[distinct]</td><td style="text-align:left">from &lt;left_table&gt;</td></tr><tr><td style="text-align:left">from</td><td style="text-align:left">on &lt;join_condition&gt;</td></tr><tr><td style="text-align:left">join(left join)</td><td style="text-align:left">&lt;join_type&gt; join &lt;right_table&gt;</td></tr><tr><td style="text-align:left">on</td><td style="text-align:left">where &lt;where_condition&gt;</td></tr><tr><td style="text-align:left">where</td><td style="text-align:left">group by &lt;grout_by_list&gt; [with rollup]</td></tr><tr><td style="text-align:left">group by[with rollup]</td><td style="text-align:left">having &lt;having_condition&gt;</td></tr><tr><td style="text-align:left">having</td><td style="text-align:left">select[distinct] &lt;select_list&gt;</td></tr><tr><td style="text-align:left">union(union all)</td><td style="text-align:left">union(union all)</td></tr><tr><td style="text-align:left">order by</td><td style="text-align:left">order by &lt;order_by_list&gt; [asc</td></tr><tr><td style="text-align:left">limit</td><td style="text-align:left">limit &lt;limit_number&gt;</td></tr></tbody></table><div class="note info"><p>FROM：组装来自不同数据源的记录<br>WHERE：根据指定的条件过滤上一步检索出的记录<br>GROUP BY：对上面过滤后的记录按指定条件分组<br>SUM/AVG/COUNT：使用聚合函数进行计算<br>HAVING：对所有分组根据指定条件进行过滤<br>SELECT：从上一步过滤后的各个分组记录中提取指定查询的字段列表（包括聚合字段、计算字段、表达式字段等）<br>ORDER BY：对上一步查询得到的结果集按照排序字段列表进行排序，并输出排序结果<br>DISTINCT和GROUP BY：都可以实现去重，DISTINCT是筛选去重，GROUP BY是分组去重<br>WHERE与HAVING的区别：WHERE是对记录进行筛选；而HAVING是对按GROUP BY进行分组后的组进行筛选。HAVING只有在使用GROUP BY 后才能使用。</p></div><h2 id="distinct-去重">distinct:去重</h2><ul class="lvl-0"><li class="lvl-2"><p>distinct关键字用于去重，distinct必须写在所有要查询字段的前面</p></li><li class="lvl-2"><p>distinct后面有几个字段，就代表修饰几个字段，而不是紧随distinct的字段（类似于联合唯一索引），例如以下两个语句效果相同</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># name<span class="operator">+</span>age去重</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> name,age <span class="keyword">from</span> employees</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> (name),age <span class="keyword">from</span> employees</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>distinct + order by</code> 是无法保证排序结果的，此时要使用 <code>group by + order by</code></p><ul class="lvl-2"><li class="lvl-6">distinct执行顺序先于order by，而distinct去重时不确定其选取的是哪条记录，而且distinct本身的排序结果也是乱序，所以其根本无法保证基于其它字段的排序顺序</li><li class="lvl-6">group by也可以达到去重的目的，并可以基于聚合函数实现排序的目的</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 错误方式</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(t.search) <span class="keyword">FROM</span> tbl_search_history t <span class="keyword">where</span> t.user_id <span class="operator">=</span> :userId <span class="keyword">ORDER</span> <span class="keyword">BY</span> t.id <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"># 正确方式</span><br><span class="line"><span class="keyword">SELECT</span> t.search <span class="keyword">FROM</span> tbl_search_history t <span class="keyword">WHERE</span> t.user_id <span class="operator">=</span> :userId <span class="keyword">GROUP</span> <span class="keyword">BY</span> t.search <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">MAX</span>(t.id) <span class="keyword">desc</span></span><br></pre></td></tr></table></figure><h2 id="with-rollup-分组后聚合">with rollup:分组后聚合</h2><ul class="lvl-0"><li class="lvl-2"><p>with rollup出现在group by后面，用于对分组结果中的聚合数据再次进行汇总</p></li><li class="lvl-2"><p>比如下面这个sql用于统计各个部门员工的年龄平均值、最大值和最小值</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,<span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">32.2500</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> depName,groupName,<span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName,groupName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">25.0000</span>  <span class="operator">|</span> <span class="number">28</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">35.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">34</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>    <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">29.0000</span>  <span class="operator">|</span> <span class="number">34</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">32.0000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">26</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>    <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34.0000</span>  <span class="operator">|</span> <span class="number">44</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">42.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>    <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>    <span class="operator">|</span> <span class="number">32.2500</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>with rollup会为分组字段自动填充null值，我们可以使用<code>GROUPING</code>函数判断是否为with rollup自动填充的来设置想要的内容，比如</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(depName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;总计&#x27;</span> <span class="keyword">ELSE</span> depName <span class="keyword">END</span> depName,<span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age)</span><br><span class="line"><span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 总计    <span class="operator">|</span> <span class="number">32.2500</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(depName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="keyword">GROUPING</span>(groupName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;总计&#x27;</span> <span class="keyword">ELSE</span> depName <span class="keyword">END</span> depName,</span><br><span class="line"><span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(depName)<span class="operator">=</span><span class="number">0</span> <span class="keyword">and</span> <span class="keyword">GROUPING</span>(groupName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;小计&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="keyword">GROUPING</span>(depName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="keyword">GROUPING</span>(groupName)<span class="operator">=</span><span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;总计&#x27;</span> <span class="keyword">ELSE</span> groupName <span class="keyword">END</span> groupName,</span><br><span class="line"><span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName,groupName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">25.0000</span>  <span class="operator">|</span> <span class="number">28</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">35.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">34</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 小计      <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">29.0000</span>  <span class="operator">|</span> <span class="number">34</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">32.0000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">26</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> 小计      <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34.0000</span>  <span class="operator">|</span> <span class="number">44</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">42.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> 小计      <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 总计    <span class="operator">|</span> 总计      <span class="operator">|</span> <span class="number">32.2500</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+----------+----------+----------+</span></span><br></pre></td></tr></table></figure><h2 id="group-concat-分组连接，将分组下的全部column用分隔符连接">group_concat(): 分组连接，将分组下的全部column用分隔符连接</h2><ul class="lvl-0"><li class="lvl-2"><p>语法：<code>group_concat([DISTINCT] column [Order BY column ASC/DESC] [SEPARATOR '分隔符'])</code></p></li><li class="lvl-2"><p>默认逗号连接，不去重，不排序</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,group_concat(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(age)       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> depName,group_concat(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(age)                               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span>                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span>,<span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>,<span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>默认连接符为&quot;,“，如果要使用”:&quot;连接，可以使用<code>SEPARATOR ':'</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,group_concat(age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">34</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">38</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">44</span>:<span class="number">24</span>:<span class="number">46</span>:<span class="number">38</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+---------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> depName,group_concat(age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(age SEPARATOR <span class="string">&#x27;:&#x27;</span>)                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>                         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">34</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">38</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">44</span>:<span class="number">24</span>:<span class="number">46</span>:<span class="number">38</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>:<span class="number">34</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">38</span>:<span class="number">44</span>:<span class="number">24</span>:<span class="number">46</span>:<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-------------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>默认连接全部数据，如果要去掉重复的数据，可以使用<code>DISTINCT</code>关键字，其结果是排好序的</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,group_concat(<span class="keyword">DISTINCT</span> age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(<span class="keyword">DISTINCT</span> age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">24</span>:<span class="number">26</span>:<span class="number">34</span>:<span class="number">38</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">24</span>:<span class="number">38</span>:<span class="number">44</span>:<span class="number">46</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> depName,group_concat(<span class="keyword">DISTINCT</span> age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(<span class="keyword">DISTINCT</span> age SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">24</span>:<span class="number">26</span>:<span class="number">34</span>:<span class="number">38</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">24</span>:<span class="number">38</span>:<span class="number">44</span>:<span class="number">46</span>                              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">22</span>:<span class="number">24</span>:<span class="number">26</span>:<span class="number">28</span>:<span class="number">34</span>:<span class="number">36</span>:<span class="number">38</span>:<span class="number">44</span>:<span class="number">46</span>               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>排序<code>Order BY columnName ASC/DESC</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,group_concat(<span class="keyword">DISTINCT</span> age <span class="keyword">Order</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span> SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName <span class="keyword">with</span> <span class="keyword">rollup</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> group_concat(<span class="keyword">DISTINCT</span> age <span class="keyword">Order</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span> SEPARATOR <span class="string">&#x27;:&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">38</span>:<span class="number">36</span>:<span class="number">34</span>:<span class="number">28</span>:<span class="number">26</span>:<span class="number">24</span>:<span class="number">22</span>                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">38</span>:<span class="number">34</span>:<span class="number">26</span>:<span class="number">24</span>                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">46</span>:<span class="number">44</span>:<span class="number">38</span>:<span class="number">24</span>                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="number">46</span>:<span class="number">44</span>:<span class="number">38</span>:<span class="number">36</span>:<span class="number">34</span>:<span class="number">28</span>:<span class="number">26</span>:<span class="number">24</span>:<span class="number">22</span>                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure><h2 id="over-开窗函数">over(): 开窗函数</h2><ul class="lvl-0"><li class="lvl-2"><p>语法：over（partition by columnname1 order by columnname2）</p></li><li class="lvl-2"><p>含义：按columname1指定的字段进行分组排序，按字段columnname2的值进行排序</p></li><li class="lvl-2"><p>over函数只能出现在select中，不能出现在过滤条件中</p></li><li class="lvl-2"><p>over()意思就是所有的数据都在窗口中，不能单独使用，要和分析函数如：sum(),avg(),row_number()等等一块使用，这么说貌似不好理解，直接看示例吧</p></li><li class="lvl-2"><p>将年龄的平均值显示在每行</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>() <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>将每个部门的年龄平均值显示在每行</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> depName) <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">30.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">30.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">30.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">30.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">30.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>将每个部门下每个分组的年龄平均值显示在每行</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> depName,groupName) <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">29.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">29.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">34.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">34.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">42.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">42.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>每个部门每个分组下按年龄倒序并显示每组的平均年龄</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> depName,groupName <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>) <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">28.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">27.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">26.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">25.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">37.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">35.5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">34.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">29.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">44.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">34.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">46.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">42.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line">注意，这里是先分组，然后逐行求平均值的，比如前<span class="number">4</span>条记录是一组，第一行数据和自己比，平均值就是<span class="number">28</span>，第二行数据和第一行数据比，平均值是(<span class="number">26</span><span class="operator">+</span><span class="number">28</span>)<span class="operator">/</span><span class="number">2</span>，第三行数据和前两行比，平均值就是(<span class="number">28</span><span class="operator">+</span><span class="number">26</span><span class="operator">+</span><span class="number">24</span>)<span class="operator">/</span><span class="number">3</span>，以此类推，第四行就是(<span class="number">28</span><span class="operator">+</span><span class="number">26</span><span class="operator">+</span><span class="number">24</span><span class="operator">+</span><span class="number">22</span>)<span class="operator">/</span><span class="number">4</span>，第五行是另一个分组了，依旧是按行计算。这里需要说一下第<span class="number">7</span>行和第<span class="number">8</span>行，因为这两行是同一个分组，且年龄相同，都是<span class="number">34</span>，其平均值计算方法是相同年龄行相加后一起求平均值，所以我们看到这两行的平均值是一样的，所以<span class="keyword">over</span>按哪个字段排序，如果其值相同，调用分析函数时要一起计算。每个分组的最后一条记录的显示的平均值才是该组的真实平均值</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>不分组直接排序，这里按年龄倒序</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> `depName`,`groupName`,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>) <span class="keyword">as</span> avgAge <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">46.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">45.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">40.8000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">40.8000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">40.8000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">40.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">38.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">37.0000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">35.1667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">35.1667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.9333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.9333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.9333</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+</span></span><br><span class="line">这里的计算方法与上面分组的情况类似，按行计算平均值，遇到排序字段值相同时，要一起计算。最后一条记录显示的平均值就是所有记录的平均值。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查询每个员工年龄与全体平均年龄的差值</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,groupName,age,<span class="built_in">avg</span>(age)<span class="keyword">over</span>() <span class="keyword">as</span> avgAge,age<span class="operator">-</span><span class="built_in">avg</span>(age)<span class="keyword">over</span>() <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span> avgAge  <span class="operator">|</span> age<span class="operator">-</span><span class="built_in">avg</span>(age)<span class="keyword">over</span>() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-10.2500</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-8.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-6.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-4.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">1.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">1.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">3.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">5.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">1.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-8.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-6.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">5.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">11.7500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">-8.2500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">13.7500</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span> <span class="number">32.2500</span> <span class="operator">|</span> <span class="number">5.7500</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----+---------+--------------------+</span></span><br></pre></td></tr></table></figure><h2 id="查询行号">查询行号</h2><ul class="lvl-0"><li class="lvl-2"><p>mysql没有提供可供计算行号的方法，不过我们可以通过两种方式来实现</p></li><li class="lvl-2"><p>第一种方法，自定义行号变量<code>@rownum</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="variable">@rownum</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> rownum, t.depName,t.groupName,t.age  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="number">0</span>) r, tbl_employees t</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"># 年龄倒序显示</span><br><span class="line"><span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="variable">@rownum</span><span class="operator">+</span><span class="number">1</span> <span class="keyword">AS</span> rownum, t.depName,t.groupName,t.age  <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="variable">@rownum</span>:<span class="operator">=</span><span class="number">0</span>) r, tbl_employees t <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>第二种方法，使用<code>row_number()over()</code>函数</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">row_number</span>()<span class="keyword">over</span>() <span class="keyword">as</span> rownum,depName,groupName,age <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line">此时如果要按年龄排序，则排序规则可以写在最后，也可以写在<span class="keyword">over</span>函数内，效果是一样的</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">row_number</span>()<span class="keyword">over</span>() <span class="keyword">as</span> rownum,depName,groupName,age <span class="keyword">from</span> tbl_employees <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">row_number</span>()<span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>) <span class="keyword">as</span> rownum,depName,groupName,age <span class="keyword">from</span> tbl_employees</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> rownum <span class="operator">|</span> depName <span class="operator">|</span> groupName <span class="operator">|</span> age <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">46</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">44</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">5</span>      <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">38</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">36</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8</span>      <span class="operator">|</span> 技术部  <span class="operator">|</span> 后端      <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9</span>      <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">34</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">28</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">12</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">2</span>组       <span class="operator">|</span> <span class="number">26</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">13</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">14</span>     <span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">15</span>     <span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">1</span>组       <span class="operator">|</span> <span class="number">24</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">16</span>     <span class="operator">|</span> 技术部  <span class="operator">|</span> 前端      <span class="operator">|</span> <span class="number">22</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+---------+-----------+-----+</span></span><br></pre></td></tr></table></figure><h2 id="Mysql常用函数">Mysql常用函数</h2><h3 id="数学函数">数学函数</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">ABS(x)</td><td style="text-align:left">返回x的绝对值</td></tr><tr><td style="text-align:left">BIN(x)</td><td style="text-align:left">返回x的二进制（OCT(x)返回八进制，HEX(x)返回十六进制）</td></tr><tr><td style="text-align:left">CEILING(x)</td><td style="text-align:left">返回&gt;=x的最小整数值，可以简写为 ceil(x)</td></tr><tr><td style="text-align:left">FLOOR(x)</td><td style="text-align:left">返回&lt;=x的最大整数值</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">ABS</span>(<span class="number">10</span>),<span class="built_in">ABS</span>(<span class="number">-10</span>),BIN(<span class="number">10</span>),OCT(<span class="number">10</span>),HEX(<span class="number">10</span>),<span class="built_in">CEILING</span>(<span class="number">10.2</span>),<span class="built_in">EXP</span>(<span class="number">1</span>),<span class="built_in">FLOOR</span>(<span class="number">10.2</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+---------+---------+---------+---------------+-------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">ABS</span>(<span class="number">10</span>) <span class="operator">|</span> <span class="built_in">ABS</span>(<span class="number">-10</span>) <span class="operator">|</span> BIN(<span class="number">10</span>) <span class="operator">|</span> OCT(<span class="number">10</span>) <span class="operator">|</span> HEX(<span class="number">10</span>) <span class="operator">|</span> <span class="built_in">CEILING</span>(<span class="number">10.2</span>) <span class="operator">|</span> <span class="built_in">EXP</span>(<span class="number">1</span>)            <span class="operator">|</span> <span class="built_in">FLOOR</span>(<span class="number">10.2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+---------+---------+---------+---------------+-------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>      <span class="operator">|</span> <span class="number">10</span>       <span class="operator">|</span> <span class="number">1010</span>    <span class="operator">|</span> <span class="number">12</span>      <span class="operator">|</span> A       <span class="operator">|</span> <span class="number">11</span>            <span class="operator">|</span> <span class="number">2.718281828459045</span> <span class="operator">|</span> <span class="number">10</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+---------+---------+---------+---------------+-------------------+-------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">GREATEST(x1,x2,…,xn)</td><td style="text-align:left">返回集合中最大的值</td></tr><tr><td style="text-align:left">LEAST(x1,x2,…,xn)</td><td style="text-align:left">返回集合中最小的值</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 按照数字顺序，字符顺序，首字母顺序比较</span><br><span class="line"><span class="keyword">select</span> GREATEST(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>),LEAST(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>),GREATEST(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>),LEAST(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>),GREATEST(<span class="string">&#x27;MySQL&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="string">&#x27;Redis&#x27;</span>),LEAST(<span class="string">&#x27;MySQL&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="string">&#x27;Redis&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+</span></span><br><span class="line"><span class="operator">|</span> GREATEST(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>) <span class="operator">|</span> LEAST(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>) <span class="operator">|</span> GREATEST(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>) <span class="operator">|</span> LEAST(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>) <span class="operator">|</span> GREATEST(<span class="string">&#x27;MySQL&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="string">&#x27;Redis&#x27;</span>) <span class="operator">|</span> LEAST(<span class="string">&#x27;MySQL&#x27;</span>,<span class="string">&#x27;Java&#x27;</span>,<span class="string">&#x27;Redis&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">4</span>                 <span class="operator">|</span> <span class="number">1</span>              <span class="operator">|</span> D                         <span class="operator">|</span> A                      <span class="operator">|</span> Redis                            <span class="operator">|</span> Java                          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 这里要注意，只要集合中含有<span class="keyword">NULL</span>，返回值都是<span class="keyword">null</span></span><br><span class="line"><span class="keyword">select</span> GREATEST(<span class="number">10</span>, <span class="number">20</span>, <span class="keyword">NULL</span>),LEAST(<span class="number">10</span>, <span class="number">20</span>, <span class="keyword">NULL</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> GREATEST(<span class="number">10</span>, <span class="number">20</span>, <span class="keyword">NULL</span>) <span class="operator">|</span> LEAST(<span class="number">10</span>, <span class="number">20</span>, <span class="keyword">NULL</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+---------------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">EXP(x)</td><td style="text-align:left">返回值e（自然对数的底）的x次方，自然对数e其值约等于2.71828</td></tr><tr><td style="text-align:left">LN(x)</td><td style="text-align:left">返回x的自然对数</td></tr><tr><td style="text-align:left">LOG(x,y)</td><td style="text-align:left">返回x的以y为底的对数</td></tr><tr><td style="text-align:left">MOD(x,y)</td><td style="text-align:left">返回x/y的模（余数）,当被除数为正数，结果就是正数，当被除数为负数，结果就是负数。</td></tr><tr><td style="text-align:left">PI()</td><td style="text-align:left">返回pi的值（圆周率）</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">EXP</span>(<span class="number">1</span>),<span class="built_in">LN</span>(<span class="number">2.718281828459045</span>),<span class="built_in">LOG</span>(<span class="number">2</span>,<span class="number">16</span>),<span class="built_in">MOD</span>(<span class="number">10</span>,<span class="number">3</span>),<span class="built_in">MOD</span>(<span class="number">-10</span>,<span class="number">3</span>),PI()</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-----------------------+-----------+-----------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">EXP</span>(<span class="number">1</span>)            <span class="operator">|</span> <span class="built_in">LN</span>(<span class="number">2.718281828459045</span>) <span class="operator">|</span> <span class="built_in">LOG</span>(<span class="number">2</span>,<span class="number">16</span>) <span class="operator">|</span> <span class="built_in">MOD</span>(<span class="number">10</span>,<span class="number">3</span>) <span class="operator">|</span> <span class="built_in">MOD</span>(<span class="number">-10</span>,<span class="number">3</span>) <span class="operator">|</span> PI()     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-----------------------+-----------+-----------+------------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2.718281828459045</span> <span class="operator">|</span> <span class="number">1.0</span>                   <span class="operator">|</span> <span class="number">4.0</span>       <span class="operator">|</span> <span class="number">1</span>         <span class="operator">|</span> <span class="number">-1</span>         <span class="operator">|</span> <span class="number">3.141593</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-----------------------+-----------+-----------+------------+----------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">RAND()</td><td style="text-align:left">返回０到１内的随机值,可以通过提供一个参数(种子)使RAND()随机数生成器生成一个指定的值。</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 相同的种子，返回值相同</span><br><span class="line"><span class="keyword">select</span> RAND(),RAND(<span class="number">2</span>),RAND(<span class="number">2</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> RAND()              <span class="operator">|</span> RAND(<span class="number">2</span>)            <span class="operator">|</span> RAND(<span class="number">2</span>)            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0.10167000452212059</span> <span class="operator">|</span> <span class="number">0.6555866465490187</span> <span class="operator">|</span> <span class="number">0.6555866465490187</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+</span></span><br><span class="line"></span><br><span class="line"># 获得介于[i，j)之间的随机值，<span class="built_in">FLOOR</span>(i <span class="operator">+</span> RAND() <span class="operator">*</span>(j − i))，比如[<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">1</span> <span class="operator">+</span> RAND()<span class="operator">*</span>(<span class="number">10</span> <span class="operator">-</span> <span class="number">1</span>)) <span class="keyword">AS</span> Random_Number;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> Random_Number <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">6.0</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"></span><br><span class="line"># 获得介于[i，j]之间的随机值，<span class="built_in">FLOOR</span>(i <span class="operator">+</span> RAND() <span class="operator">*</span>(j − i <span class="operator">+</span> <span class="number">1</span>))，比如[<span class="number">1</span>,<span class="number">10</span>]</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">1</span> <span class="operator">+</span> RAND()<span class="operator">*</span>(<span class="number">10</span> <span class="operator">-</span> <span class="number">1</span> <span class="operator">+</span> <span class="number">1</span>)) <span class="keyword">AS</span> Random_Number;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> Random_Number <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10.0</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">ROUND(x,y)</td><td style="text-align:left">返回参数x的四舍五入的有y位小数的值</td></tr><tr><td style="text-align:left">SIGN(x)</td><td style="text-align:left">返回代表数字x的符号的值</td></tr><tr><td style="text-align:left">SQRT(x)</td><td style="text-align:left">返回一个数的平方根</td></tr><tr><td style="text-align:left">POW(x,y)</td><td style="text-align:left">指数函数，x为底，y为指数</td></tr><tr><td style="text-align:left">TRUNCATE(x,y)</td><td style="text-align:left">返回数字x截短为y位小数的结果，y为负数时整数部分替换为0</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ROUND(<span class="number">3.147</span>,<span class="number">2</span>),SIGN(<span class="number">5</span>),SIGN(<span class="number">-5</span>),<span class="built_in">SQRT</span>(<span class="number">16</span>),POW(<span class="number">4</span>,<span class="number">2</span>),<span class="keyword">TRUNCATE</span>(<span class="number">3.147</span>,<span class="number">2</span>),<span class="keyword">TRUNCATE</span>(<span class="number">3.147</span>,<span class="number">0</span>),<span class="keyword">TRUNCATE</span>(<span class="number">123.147</span>,<span class="number">-2</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> ROUND(<span class="number">3.147</span>,<span class="number">2</span>) <span class="operator">|</span> SIGN(<span class="number">5</span>) <span class="operator">|</span> SIGN(<span class="number">-5</span>) <span class="operator">|</span> <span class="built_in">SQRT</span>(<span class="number">16</span>) <span class="operator">|</span> POW(<span class="number">4</span>,<span class="number">2</span>) <span class="operator">|</span> <span class="keyword">TRUNCATE</span>(<span class="number">3.147</span>,<span class="number">2</span>) <span class="operator">|</span> <span class="keyword">TRUNCATE</span>(<span class="number">3.147</span>,<span class="number">0</span>) <span class="operator">|</span> <span class="keyword">TRUNCATE</span>(<span class="number">123.147</span>,<span class="number">-2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3.15</span>           <span class="operator">|</span> <span class="number">1</span>       <span class="operator">|</span> <span class="number">-1</span>       <span class="operator">|</span> <span class="number">4.0</span>      <span class="operator">|</span> <span class="number">16.0</span>     <span class="operator">|</span> <span class="number">3.14</span>              <span class="operator">|</span> <span class="number">3</span>                 <span class="operator">|</span> <span class="number">100</span>                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">FORMAT(N,D,locale)</td><td style="text-align:left">将数字N格式化为格式，如&quot;#,###,###.##&quot;，舍入到D位小数。它返回一个值作为字符串。</td></tr></tbody></table><blockquote><p>mysql支持的locale请查看<a href="https://dev.mysql.com/doc/refman/8.0/en/locale-support.html">https://dev.mysql.com/doc/refman/8.0/en/locale-support.html</a></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 不指定locale时默认en_US，de_DE语言环境使用点(.)来分隔千位和逗号(，)来分隔小数点</span><br><span class="line"><span class="keyword">select</span> format(<span class="number">1450028.123</span>,<span class="number">2</span>),format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;en_US&#x27;</span>),format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;zh_CN&#x27;</span>),format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;de_DE&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------------+-------------------------------+-------------------------------+</span></span><br><span class="line"><span class="operator">|</span> format(<span class="number">1450028.123</span>,<span class="number">2</span>) <span class="operator">|</span> format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;en_US&#x27;</span>) <span class="operator">|</span> format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;zh_CN&#x27;</span>) <span class="operator">|</span> format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;de_DE&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------------+-------------------------------+-------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>,<span class="number">450</span>,<span class="number">028.12</span>          <span class="operator">|</span> <span class="number">1</span>,<span class="number">450</span>,<span class="number">028.12</span>                  <span class="operator">|</span> <span class="number">1</span>,<span class="number">450</span>,<span class="number">028.12</span>                  <span class="operator">|</span> <span class="number">1.450</span><span class="number">.028</span>,<span class="number">12</span>                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------------+-------------------------------+-------------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="聚合函数-常用于GROUP-BY从句的SELECT查询中">聚合函数(常用于GROUP BY从句的SELECT查询中)</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">AVG(col)</td><td style="text-align:left">返回指定列的平均值</td></tr><tr><td style="text-align:left">COUNT(col)</td><td style="text-align:left">返回指定列中非NULL值的个数，注意count(*)不会跳过NULL值行</td></tr><tr><td style="text-align:left">MIN(col)</td><td style="text-align:left">返回指定列的最小值</td></tr><tr><td style="text-align:left">MAX(col)</td><td style="text-align:left">返回指定列的最大值</td></tr><tr><td style="text-align:left">SUM(col)</td><td style="text-align:left">返回指定列的所有值之和</td></tr><tr><td style="text-align:left">GROUP_CONCAT(col)</td><td style="text-align:left">返回由属于一组的列值连接组合而成的结果</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> depName,<span class="built_in">count</span>(<span class="operator">*</span>),<span class="built_in">avg</span>(age),<span class="built_in">max</span>(age),<span class="built_in">min</span>(age),<span class="built_in">sum</span>(age),group_concat(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+----------+----------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span> <span class="built_in">avg</span>(age) <span class="operator">|</span> <span class="built_in">max</span>(age) <span class="operator">|</span> <span class="built_in">min</span>(age) <span class="operator">|</span> <span class="built_in">sum</span>(age) <span class="operator">|</span> group_concat(age)       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+----------+----------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">8</span>        <span class="operator">|</span> <span class="number">30.2500</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">22</span>       <span class="operator">|</span> <span class="number">242</span>      <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">4</span>        <span class="operator">|</span> <span class="number">30.5000</span>  <span class="operator">|</span> <span class="number">38</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span> <span class="number">122</span>      <span class="operator">|</span> <span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">4</span>        <span class="operator">|</span> <span class="number">38.0000</span>  <span class="operator">|</span> <span class="number">46</span>       <span class="operator">|</span> <span class="number">24</span>       <span class="operator">|</span> <span class="number">152</span>      <span class="operator">|</span> <span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+----------+----------+----------+----------+----------+-------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="字符串函数">字符串函数</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">ASCII(char)</td><td style="text-align:left">返回字符的ASCII码值</td></tr><tr><td style="text-align:left">LENGTH(s)</td><td style="text-align:left">返回字符串str中的字符数</td></tr><tr><td style="text-align:left">BIT_LENGTH(str)</td><td style="text-align:left">返回字符串的比特长度</td></tr><tr><td style="text-align:left">CONCAT(s1,s2…,sn)</td><td style="text-align:left">将s1,s2…,sn连接成字符串</td></tr><tr><td style="text-align:left">CONCAT_WS(sep,s1,s2…,sn)</td><td style="text-align:left">将s1,s2…,sn连接成字符串，并用sep字符间隔</td></tr><tr><td style="text-align:left">INSERT(str,x,y,instr)</td><td style="text-align:left">将字符串str从第x位置开始，y个字符长的子串替换为字符串instr，返回结果</td></tr><tr><td style="text-align:left">REPLACE(str,substr,otherstr)</td><td style="text-align:left">在str中查找substr，并使用otherstr替换</td></tr><tr><td style="text-align:left">FIND_IN_SET(str,list)</td><td style="text-align:left">分析逗号分隔的list列表，如果发现str，返回str在list中的位置，位置从1开始计算</td></tr><tr><td style="text-align:left">REPEAT(str,x)</td><td style="text-align:left">返回字符串str重复x次的结果</td></tr><tr><td style="text-align:left">REVERSE(str)</td><td style="text-align:left">返回颠倒字符串str的结果</td></tr><tr><td style="text-align:left">STRCMP(s1,s2)</td><td style="text-align:left">比较字符串s1和s2,如果两个字符串相同，则返回0，如果根据定义的顺序第一个参数小于第二个参数，则返回-1，而当第二个参数小于第一个参数时，返回1。</td></tr><tr><td style="text-align:left">LEFT(str,x)</td><td style="text-align:left">返回字符串str中最左边的x个字符</td></tr><tr><td style="text-align:left">RIGHT(str,x)</td><td style="text-align:left">返回字符串str中最右边的x个字符</td></tr><tr><td style="text-align:left">SUBSTRING(str,x,y)或者SUBSTR(str,x,y)</td><td style="text-align:left">返回字符串str从第x个字符开始，截取y个字符长度，y不填写则表示截取到字符串末尾</td></tr><tr><td style="text-align:left">TRIM(str)</td><td style="text-align:left">去除字符串首部和尾部的所有空格</td></tr><tr><td style="text-align:left">RTRIM(str)</td><td style="text-align:left">返回字符串str尾部的空格</td></tr><tr><td style="text-align:left">LTRIM(str)</td><td style="text-align:left">从字符串str中切掉开头的空格</td></tr><tr><td style="text-align:left">UCASE(str)或UPPER(str)</td><td style="text-align:left">返回将字符串str中所有字符转变为大写后的结果</td></tr><tr><td style="text-align:left">LCASE(str)或LOWER(str)</td><td style="text-align:left">返回将字符串str中所有字符改变为小写后的结果</td></tr><tr><td style="text-align:left">LPAD(str,x,y)</td><td style="text-align:left">将str长度为设置为x，不足部分用y在前面补齐</td></tr><tr><td style="text-align:left">RPAD(str,x,y)</td><td style="text-align:left">将str长度为设置为x，不足部分用y在后面补齐</td></tr><tr><td style="text-align:left">SPACE(x)</td><td style="text-align:left">返回指定数量的空格，x必须大于0</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"># 字符串替换</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">INSERT</span>(<span class="string">&#x27;abcdefgh&#x27;</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;ufo&#x27;</span>),REVERSE(<span class="string">&#x27;abcdefgh&#x27;</span>),REPEAT(<span class="string">&#x27;MySQL&#x27;</span>, <span class="number">3</span>),REPLACE(<span class="string">&#x27;abcdefgh&#x27;</span>,<span class="string">&#x27;de&#x27;</span>,<span class="string">&#x27;ufo&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+---------------------+--------------------+--------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">INSERT</span>(<span class="string">&#x27;abcdefgh&#x27;</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;ufo&#x27;</span>) <span class="operator">|</span> REVERSE(<span class="string">&#x27;abcdefgh&#x27;</span>) <span class="operator">|</span> REPEAT(<span class="string">&#x27;MySQL&#x27;</span>, <span class="number">3</span>) <span class="operator">|</span> REPLACE(<span class="string">&#x27;abcdefgh&#x27;</span>,<span class="string">&#x27;de&#x27;</span>,<span class="string">&#x27;ufo&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+---------------------+--------------------+--------------------------------+</span></span><br><span class="line"><span class="operator">|</span> abufoh                       <span class="operator">|</span> hgfedcba            <span class="operator">|</span> MySQLMySQLMySQL    <span class="operator">|</span> abcufofgh                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+---------------------+--------------------+--------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 计算字符串长度，中文占<span class="number">3</span>个字符，每个字符<span class="number">8</span>个字节</span><br><span class="line"><span class="keyword">select</span> ASCII(<span class="string">&#x27;A&#x27;</span>),LENGTH(<span class="string">&#x27;中华人民共和国&#x27;</span>),BIT_LENGTH(<span class="string">&#x27;中华人民共和国&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+--------------------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> ASCII(<span class="string">&#x27;A&#x27;</span>) <span class="operator">|</span> LENGTH(<span class="string">&#x27;中华人民共和国&#x27;</span>) <span class="operator">|</span> BIT_LENGTH(<span class="string">&#x27;中华人民共和国&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+--------------------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">65</span>         <span class="operator">|</span> <span class="number">21</span>                       <span class="operator">|</span> <span class="number">168</span>                          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+--------------------------+------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 字符串连接</span><br><span class="line"><span class="keyword">select</span> CONCAT(<span class="string">&#x27;中华&#x27;</span>,<span class="string">&#x27;人民&#x27;</span>,<span class="string">&#x27;共和国&#x27;</span>),CONCAT_WS(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;中华&#x27;</span>,<span class="string">&#x27;人民&#x27;</span>,<span class="string">&#x27;共和国&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> CONCAT(<span class="string">&#x27;中华&#x27;</span>,<span class="string">&#x27;人民&#x27;</span>,<span class="string">&#x27;共和国&#x27;</span>) <span class="operator">|</span> CONCAT_WS(<span class="string">&#x27;_&#x27;</span>,<span class="string">&#x27;中华&#x27;</span>,<span class="string">&#x27;人民&#x27;</span>,<span class="string">&#x27;共和国&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 中华人民共和国                 <span class="operator">|</span> 中华_人民_共和国                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------+---------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 字符串截取</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">LEFT</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">5</span>),<span class="keyword">RIGHT</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">5</span>),<span class="built_in">SUBSTRING</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">3</span>),<span class="built_in">SUBSTRING</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------------------------+-------------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">LEFT</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">5</span>) <span class="operator">|</span> <span class="keyword">RIGHT</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">5</span>) <span class="operator">|</span> <span class="built_in">SUBSTRING</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">3</span>) <span class="operator">|</span> <span class="built_in">SUBSTRING</span>(<span class="string">&#x27;中华人民共和国&#x27;</span>,<span class="number">3</span>,<span class="number">2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------------------------+-------------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> 中华人民共               <span class="operator">|</span> 人民共和国                <span class="operator">|</span> 人民共和国                    <span class="operator">|</span> 人民                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------------------------+-------------------------------+---------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 字符串补齐</span><br><span class="line"><span class="keyword">select</span> LPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="string">&#x27;a&#x27;</span>),LPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="number">0</span>),RPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="string">&#x27;a&#x27;</span>),RPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="number">0</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------+---------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> LPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="string">&#x27;a&#x27;</span>) <span class="operator">|</span> LPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="number">0</span>) <span class="operator">|</span> RPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="string">&#x27;a&#x27;</span>) <span class="operator">|</span> RPAD(&quot;hello&quot;,<span class="number">7</span>,<span class="number">0</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------+---------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> aahello             <span class="operator">|</span> <span class="number">00</span>hello           <span class="operator">|</span> helloaa             <span class="operator">|</span> hello00           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------+---------------------+-------------------+</span></span><br><span class="line"></span><br><span class="line"># 列表中查找指定的字符串</span><br><span class="line"><span class="keyword">SELECT</span> FIND_IN_SET(<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a,b,c,d&#x27;</span>),FIND_IN_SET(<span class="string">&#x27;bb&#x27;</span>, <span class="string">&#x27;ab,bb,cb,db&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> FIND_IN_SET(<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a,b,c,d&#x27;</span>) <span class="operator">|</span> FIND_IN_SET(<span class="string">&#x27;bb&#x27;</span>, <span class="string">&#x27;ab,bb,cb,db&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>                           <span class="operator">|</span> <span class="number">2</span>                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+----------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 字符串比较，按字母顺序逐个比较</span><br><span class="line"><span class="keyword">Select</span> STRCMP(<span class="string">&#x27;Geeks&#x27;</span>, <span class="string">&#x27;Geeks&#x27;</span>),STRCMP(<span class="string">&#x27;Geeks&#x27;</span>, <span class="string">&#x27;Geek&#x27;</span>),STRCMP(<span class="string">&#x27;Geek&#x27;</span>, <span class="string">&#x27;Geeks&#x27;</span>),STRCMP(<span class="string">&#x27;Geek&#x27;</span>, <span class="keyword">NULL</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------------------------+-------------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> STRCMP(<span class="string">&#x27;Geeks&#x27;</span>, <span class="string">&#x27;Geeks&#x27;</span>) <span class="operator">|</span> STRCMP(<span class="string">&#x27;Geeks&#x27;</span>, <span class="string">&#x27;Geek&#x27;</span>) <span class="operator">|</span> STRCMP(<span class="string">&#x27;Geek&#x27;</span>, <span class="string">&#x27;Geeks&#x27;</span>) <span class="operator">|</span> STRCMP(<span class="string">&#x27;Geek&#x27;</span>, <span class="keyword">NULL</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------------------------+-------------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0</span>                        <span class="operator">|</span> <span class="number">1</span>                       <span class="operator">|</span> <span class="number">-1</span>                      <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------------------------+-------------------------+----------------------+</span></span><br><span class="line"><span class="keyword">select</span> STRCMP(<span class="string">&#x27;ae&#x27;</span>,<span class="string">&#x27;abcd&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> STRCMP(<span class="string">&#x27;ae&#x27;</span>,<span class="string">&#x27;abcd&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"></span><br><span class="line"># 大小写转换</span><br><span class="line"><span class="keyword">select</span> UCASE(<span class="string">&#x27;abc&#x27;</span>),<span class="built_in">UPPER</span>(<span class="string">&#x27;abc&#x27;</span>),LCASE(<span class="string">&#x27;ABC&#x27;</span>),<span class="built_in">LOWER</span>(<span class="string">&#x27;ABC&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------+--------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> UCASE(<span class="string">&#x27;abc&#x27;</span>) <span class="operator">|</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;abc&#x27;</span>) <span class="operator">|</span> LCASE(<span class="string">&#x27;ABC&#x27;</span>) <span class="operator">|</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;ABC&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------+--------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> ABC          <span class="operator">|</span> ABC          <span class="operator">|</span> abc          <span class="operator">|</span> abc          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+--------------+--------------+--------------+</span></span><br><span class="line"></span><br><span class="line"># 去除左右空格</span><br><span class="line"><span class="keyword">select</span> LENGTH(<span class="built_in">TRIM</span>(<span class="string">&#x27;  abc  &#x27;</span>)),LENGTH(LTRIM(<span class="string">&#x27;  abc  &#x27;</span>)),LENGTH(RTRIM(<span class="string">&#x27;  abc  &#x27;</span>))</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+--------------------------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> LENGTH(<span class="built_in">TRIM</span>(<span class="string">&#x27;  abc  &#x27;</span>)) <span class="operator">|</span> LENGTH(LTRIM(<span class="string">&#x27;  abc  &#x27;</span>)) <span class="operator">|</span> LENGTH(RTRIM(<span class="string">&#x27;  abc  &#x27;</span>)) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+--------------------------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>                       <span class="operator">|</span> <span class="number">5</span>                        <span class="operator">|</span> <span class="number">5</span>                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+--------------------------+--------------------------+</span></span><br><span class="line"></span><br><span class="line"># 返回指定数量的空格</span><br><span class="line"><span class="keyword">select</span> SPACE(<span class="number">100</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> SPACE(<span class="number">100</span>)                                                                                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span>                                                                                                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="日期和时间函数">日期和时间函数</h3><ul class="lvl-0"><li class="lvl-2"><p>时间格式符含义</p></li></ul><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">格式符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">%Y</td><td style="text-align:left">四位的年份</td></tr><tr><td style="text-align:left">2</td><td style="text-align:left">%y</td><td style="text-align:left">2位的年份</td></tr><tr><td style="text-align:left">3</td><td style="text-align:left">%m</td><td style="text-align:left">月份（01,02，…11,12）</td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">%c</td><td style="text-align:left">月份（1,2,3…11,12）</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">%d</td><td style="text-align:left">日（01,02，…）</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">%H</td><td style="text-align:left">小时（24小时）</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">%h</td><td style="text-align:left">小时（12小时）</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">%i</td><td style="text-align:left">分钟（00,01，…59）</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">%s</td><td style="text-align:left">秒（00,01，…59）</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>获取当前日期和时间</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">CURDATE()或CURRENT_DATE()或CURRENT_DATE</td><td style="text-align:left">返回当前的日期</td></tr><tr><td style="text-align:left">CURTIME()或CURRENT_TIME()或CURTIME</td><td style="text-align:left">返回当前的时间</td></tr><tr><td style="text-align:left">NOW()</td><td style="text-align:left">返回当前的日期和时间,%Y-%m-%d %H:%i:%s</td></tr><tr><td style="text-align:left">current_timestamp()或current_timestamp或localtime或localtimestamp</td><td style="text-align:left">返回当前的日期和时间,%Y-%m-%d %H:%i:%s</td></tr><tr><td style="text-align:left">sysdate()</td><td style="text-align:left">返回当前的日期和时间,%Y-%m-%d %H:%i:%s</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> CURDATE(),<span class="built_in">CURRENT_DATE</span>(),CURTIME(),<span class="built_in">CURRENT_TIME</span>(),NOW(),<span class="built_in">current_timestamp</span>()</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+----------------+-----------+----------------+---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> CURDATE()  <span class="operator">|</span> <span class="built_in">CURRENT_DATE</span>() <span class="operator">|</span> CURTIME() <span class="operator">|</span> <span class="built_in">CURRENT_TIME</span>() <span class="operator">|</span> NOW()               <span class="operator">|</span> <span class="built_in">current_timestamp</span>() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+----------------+-----------+----------------+---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span>     <span class="operator">|</span> <span class="number">6</span>:<span class="number">44</span>:<span class="number">49</span>   <span class="operator">|</span> <span class="number">6</span>:<span class="number">44</span>:<span class="number">49</span>        <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">06</span>:<span class="number">44</span>:<span class="number">49</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">06</span>:<span class="number">44</span>:<span class="number">49</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+----------------+-----------+----------------+---------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"># 也可以使用名称获取时间</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">current_timestamp</span>,<span class="built_in">CURRENT_DATE</span>,<span class="built_in">CURRENT_TIME</span>,<span class="built_in">localtime</span>,<span class="built_in">localtimestamp</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------+--------------+---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">current_timestamp</span>   <span class="operator">|</span> <span class="built_in">CURRENT_DATE</span> <span class="operator">|</span> <span class="built_in">CURRENT_TIME</span> <span class="operator">|</span> <span class="built_in">localtime</span>           <span class="operator">|</span> <span class="built_in">localtimestamp</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------+--------------+---------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">11</span>:<span class="number">54</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span>   <span class="operator">|</span> <span class="number">7</span>:<span class="number">11</span>:<span class="number">54</span>      <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">11</span>:<span class="number">54</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">11</span>:<span class="number">54</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------+--------------+---------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"># 获得当前 UTC 日期时间函数，now()调用的是系统本地时间，因为我国位于东八时区，所以本地时间 <span class="operator">=</span> UTC 时间 <span class="operator">+</span> <span class="number">8</span> 小时</span><br><span class="line"><span class="keyword">select</span> utc_timestamp(), utc_date(), utc_time(),now();</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------+------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> utc_timestamp()     <span class="operator">|</span> utc_date() <span class="operator">|</span> utc_time() <span class="operator">|</span> now()               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------+------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">16</span>:<span class="number">43</span> <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="operator">|</span> <span class="number">7</span>:<span class="number">16</span>:<span class="number">43</span>    <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">15</span>:<span class="number">16</span>:<span class="number">43</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------+------------+---------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>日期增加或减少</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">DATE_ADD(date,INTERVAL int keyword)</td><td style="text-align:left">返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH);</td></tr><tr><td style="text-align:left">DATE_SUB(date,INTERVAL int keyword)</td><td style="text-align:left">返回日期date减去间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH);</td></tr></tbody></table><blockquote><p>keyword: YEAR,MONTH,DAY,HOUR,MINUTE,SECOND,WEEK,QUARTER,MICROSECOND</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">YEAR</span>),DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">MONTH</span>),DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span>),DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">YEAR</span>),DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">MONTH</span>),DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">YEAR</span>) <span class="operator">|</span> DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">MONTH</span>) <span class="operator">|</span> DATE_ADD(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span>) <span class="operator">|</span> DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">YEAR</span>) <span class="operator">|</span> DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">MONTH</span>) <span class="operator">|</span> DATE_SUB(<span class="built_in">CURRENT_DATE</span>,<span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2028</span><span class="number">-10</span><span class="number">-26</span>                             <span class="operator">|</span> <span class="number">2023</span><span class="number">-04</span><span class="number">-26</span>                              <span class="operator">|</span> <span class="number">2022</span><span class="number">-11</span><span class="number">-01</span>                            <span class="operator">|</span> <span class="number">2016</span><span class="number">-10</span><span class="number">-26</span>                             <span class="operator">|</span> <span class="number">2022</span><span class="number">-04</span><span class="number">-26</span>                              <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-20</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>两个日期比较</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">datediff(date1,date2)</td><td style="text-align:left">两个日期相减</td></tr><tr><td style="text-align:left">timediff(time1,time2)</td><td style="text-align:left">两个时间相减</td></tr><tr><td style="text-align:left">timestampdiff(unit,datetime1,datetime2)</td><td style="text-align:left">两个时间相差的unit声明的间隔</td></tr></tbody></table><blockquote><p>unit: year,month,day,hour,minute,second,week,QUARTER</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 比较日期，时间的差值</span><br><span class="line"><span class="keyword">select</span> datediff(<span class="string">&#x27;2022-08-08&#x27;</span>, <span class="string">&#x27;2022-08-01&#x27;</span>),timediff(<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>),timediff(<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-07 00:00:00&#x27;</span>),timediff(<span class="string">&#x27;08:08:0&#x27;</span>, <span class="string">&#x27;00:00:00&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> datediff(<span class="string">&#x27;2022-08-08&#x27;</span>, <span class="string">&#x27;2022-08-01&#x27;</span>) <span class="operator">|</span> timediff(<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class="operator">|</span> timediff(<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-07 00:00:00&#x27;</span>) <span class="operator">|</span> timediff(<span class="string">&#x27;08:08:0&#x27;</span>, <span class="string">&#x27;00:00:00&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">7</span>                                    <span class="operator">|</span> <span class="number">8</span>:<span class="number">08</span>:<span class="number">00</span>                                               <span class="operator">|</span> <span class="number">1</span> <span class="keyword">day</span>, <span class="number">8</span>:<span class="number">08</span>:<span class="number">00</span>                                        <span class="operator">|</span> <span class="number">8</span>:<span class="number">08</span>:<span class="number">00</span>                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 比较日期的相差的年，月，日数</span><br><span class="line"><span class="keyword">select</span> timestampdiff(<span class="keyword">year</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>),timestampdiff(<span class="keyword">month</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>),timestampdiff(<span class="keyword">day</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+------------------------------------------------+----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> timestampdiff(<span class="keyword">year</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>) <span class="operator">|</span> timestampdiff(<span class="keyword">month</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>) <span class="operator">|</span> timestampdiff(<span class="keyword">day</span>,<span class="string">&#x27;2022-05-01&#x27;</span>,<span class="string">&#x27;2021-05-01&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+------------------------------------------------+----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">-1</span>                                            <span class="operator">|</span> <span class="number">-12</span>                                            <span class="operator">|</span> <span class="number">-365</span>                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+------------------------------------------------+----------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 比较日期的相差的小时，分钟，秒数</span><br><span class="line"><span class="keyword">select</span> timestampdiff(<span class="keyword">hour</span>,<span class="string">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>),timestampdiff(<span class="keyword">minute</span>,<span class="string">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>),timestampdiff(<span class="keyword">second</span>,<span class="string">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> timestampdiff(<span class="keyword">hour</span>,<span class="string">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class="operator">|</span> timestampdiff(<span class="keyword">minute</span>,<span class="string">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class="operator">|</span> timestampdiff(<span class="keyword">second</span>,<span class="string">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class="string">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">-8</span>                                                              <span class="operator">|</span> <span class="number">-488</span>                                                              <span class="operator">|</span> <span class="number">-29280</span>                                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 比较日期的相差的周，季度数</span><br><span class="line"><span class="keyword">select</span> timestampdiff(week,<span class="string">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class="string">&#x27;2022-08-01 00:00:00&#x27;</span>),timestampdiff(QUARTER,<span class="string">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class="string">&#x27;2022-05-01 00:00:00&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> timestampdiff(week,<span class="string">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class="string">&#x27;2022-08-01 00:00:00&#x27;</span>) <span class="operator">|</span> timestampdiff(QUARTER,<span class="string">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class="string">&#x27;2022-05-01 00:00:00&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+--------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">-1</span>                                                              <span class="operator">|</span> <span class="number">-1</span>                                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------------------------+--------------------------------------------------------------------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>日期或时间拆分</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">DAYOFWEEK(date)</td><td style="text-align:left">返回date所代表的一星期中的第几天(1~7)</td></tr><tr><td style="text-align:left">DAYOFMONTH(date)或者DAY(date)</td><td style="text-align:left">返回date是一个月的第几天(1~31)</td></tr><tr><td style="text-align:left">DAYOFYEAR(date)</td><td style="text-align:left">返回date是一年的第几天(1~366)</td></tr><tr><td style="text-align:left">DAYNAME(date)</td><td style="text-align:left">返回date的星期名，如：SELECT DAYNAME(CURRENT_DATE);</td></tr><tr><td style="text-align:left">MONTHNAME(date)</td><td style="text-align:left">返回date的月份名，如：SELECT MONTHNAME(CURRENT_DATE);</td></tr><tr><td style="text-align:left">QUARTER(date)</td><td style="text-align:left">返回date在一年中的季度(1~4)，如SELECT QUARTER(CURRENT_DATE);</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>(),DAYOFWEEK(<span class="built_in">CURRENT_DATE</span>),DAYOFMONTH(<span class="built_in">CURRENT_DATE</span>),DAYOFYEAR(<span class="built_in">CURRENT_DATE</span>),DAYNAME(<span class="built_in">CURRENT_DATE</span>),QUARTER(<span class="built_in">CURRENT_DATE</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">CURRENT_DATE</span>() <span class="operator">|</span> DAYOFWEEK(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> DAYOFMONTH(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> DAYOFYEAR(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> DAYNAME(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> QUARTER(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span>     <span class="operator">|</span> <span class="number">4</span>                       <span class="operator">|</span> <span class="number">26</span>                       <span class="operator">|</span> <span class="number">299</span>                     <span class="operator">|</span> Wednesday             <span class="operator">|</span> <span class="number">4</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">WEEK(date)或weekofyear(date)</td><td style="text-align:left">返回日期date为一年中第几周(0~53)</td></tr><tr><td style="text-align:left">YEAR(date)</td><td style="text-align:left">返回日期date的年份(1000~9999)</td></tr><tr><td style="text-align:left">MONTH(date)</td><td style="text-align:left">返回date的月份值(1~12)</td></tr><tr><td style="text-align:left">DAY(date)</td><td style="text-align:left">返回date是一个月的第几天(1~31)</td></tr><tr><td style="text-align:left">dayofweek(date)</td><td style="text-align:left">返回date是一周的第几天(1~7)，（1 = Sunday, 2 = Monday, …, 7 = Saturday）</td></tr><tr><td style="text-align:left">weekday()</td><td style="text-align:left">返回date是一周的第几天(0~6)，(0 = Monday, 1 = Tuesday, …, 6 = Sunday)</td></tr><tr><td style="text-align:left">HOUR(time)</td><td style="text-align:left">返回time的小时值(0~23)</td></tr><tr><td style="text-align:left">MINUTE(time)</td><td style="text-align:left">返回time的分钟值(0~59)</td></tr><tr><td style="text-align:left">SECOND(time)</td><td style="text-align:left">返回time的秒数值(0~59)</td></tr><tr><td style="text-align:left">microsecond(time)</td><td style="text-align:left">返回微秒</td></tr><tr><td style="text-align:left">LAST_DAY(date)</td><td style="text-align:left">返回date所属月份的最后一天</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> now(),WEEK(<span class="built_in">CURRENT_DATE</span>),<span class="keyword">YEAR</span>(<span class="built_in">CURRENT_DATE</span>),<span class="keyword">MONTH</span>(<span class="built_in">CURRENT_DATE</span>),<span class="keyword">DAY</span>(<span class="built_in">CURRENT_DATE</span>),<span class="keyword">HOUR</span>(<span class="built_in">CURRENT_TIME</span>),<span class="keyword">MINUTE</span>(<span class="built_in">CURRENT_TIME</span>),<span class="keyword">SECOND</span>(<span class="built_in">CURRENT_TIME</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span> WEEK(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> <span class="keyword">YEAR</span>(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> <span class="keyword">MONTH</span>(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> <span class="keyword">DAY</span>(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> <span class="keyword">HOUR</span>(<span class="built_in">CURRENT_TIME</span>) <span class="operator">|</span> <span class="keyword">MINUTE</span>(<span class="built_in">CURRENT_TIME</span>) <span class="operator">|</span> <span class="keyword">SECOND</span>(<span class="built_in">CURRENT_TIME</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">31</span>:<span class="number">03</span> <span class="operator">|</span> <span class="number">43</span>                 <span class="operator">|</span> <span class="number">2022</span>               <span class="operator">|</span> <span class="number">10</span>                  <span class="operator">|</span> <span class="number">26</span>                <span class="operator">|</span> <span class="number">7</span>                  <span class="operator">|</span> <span class="number">31</span>                   <span class="operator">|</span> <span class="number">3</span>                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> microsecond(<span class="string">&#x27;2022-10-22 07:15:30.123456&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> microsecond(<span class="string">&#x27;2022-10-22 07:15:30.123456&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">123456</span>                                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> MONTHNAME(<span class="built_in">CURRENT_DATE</span>),DAYNAME(<span class="built_in">CURRENT_DATE</span>),LAST_DAY(<span class="built_in">CURRENT_DATE</span>),LAST_DAY(<span class="string">&#x27;2022-02-01&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+-----------------------+------------------------+------------------------+</span></span><br><span class="line"><span class="operator">|</span> MONTHNAME(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> DAYNAME(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> LAST_DAY(<span class="built_in">CURRENT_DATE</span>) <span class="operator">|</span> LAST_DAY(<span class="string">&#x27;2022-02-01&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+-----------------------+------------------------+------------------------+</span></span><br><span class="line"><span class="operator">|</span> October                 <span class="operator">|</span> Wednesday             <span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-31</span>             <span class="operator">|</span> <span class="number">2022</span><span class="number">-02</span><span class="number">-28</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+-----------------------+------------------------+------------------------+</span></span><br><span class="line"></span><br><span class="line"># 返回当前月份有多少天</span><br><span class="line"><span class="keyword">select</span> now(), <span class="keyword">day</span>(last_day(now())) <span class="keyword">as</span> days;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span> days <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">34</span>:<span class="number">22</span> <span class="operator">|</span> <span class="number">31</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+</span></span><br><span class="line"></span><br><span class="line"># 返回当天是一周中的第几天，注意dayofweek与weekday的区别</span><br><span class="line"><span class="keyword">select</span> now(),dayofweek(now()),weekday(now()),DAYNAME(now())</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------------+----------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span> dayofweek(now()) <span class="operator">|</span> weekday(now()) <span class="operator">|</span> DAYNAME(now()) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------------+----------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">07</span>:<span class="number">48</span>:<span class="number">48</span> <span class="operator">|</span> <span class="number">4</span>                <span class="operator">|</span> <span class="number">2</span>              <span class="operator">|</span> Wednesday      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------------------+----------------+----------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>extract(unit from date)</code>函数，也可是实现日期、时间拆分的目的</p><blockquote><p>unit支持的内容：<br>year,quarter,month,week,day,hour,minute,second,microsecond,day_hour,day_minute,day_second,day_microsecond,hour_minute,hour_second,hour_microsecond,minute_second,minute_microsecond,second_microsecond</p></blockquote></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">extract</span>(<span class="keyword">year</span> <span class="keyword">from</span> now()),<span class="built_in">extract</span>(<span class="keyword">month</span> <span class="keyword">from</span> now()),<span class="built_in">extract</span>(<span class="keyword">day</span> <span class="keyword">from</span> now()),<span class="built_in">extract</span>(<span class="keyword">hour</span> <span class="keyword">from</span> now()),<span class="built_in">extract</span>(<span class="keyword">minute</span> <span class="keyword">from</span> now()),<span class="built_in">extract</span>(<span class="keyword">second</span> <span class="keyword">from</span> now())</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------------------------+-------------------------+--------------------------+----------------------------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">extract</span>(<span class="keyword">year</span> <span class="keyword">from</span> now()) <span class="operator">|</span> <span class="built_in">extract</span>(<span class="keyword">month</span> <span class="keyword">from</span> now()) <span class="operator">|</span> <span class="built_in">extract</span>(<span class="keyword">day</span> <span class="keyword">from</span> now()) <span class="operator">|</span> <span class="built_in">extract</span>(<span class="keyword">hour</span> <span class="keyword">from</span> now()) <span class="operator">|</span> <span class="built_in">extract</span>(<span class="keyword">minute</span> <span class="keyword">from</span> now()) <span class="operator">|</span> <span class="built_in">extract</span>(<span class="keyword">second</span> <span class="keyword">from</span> now()) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------------------------+-------------------------+--------------------------+----------------------------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span>                     <span class="operator">|</span> <span class="number">10</span>                        <span class="operator">|</span> <span class="number">27</span>                      <span class="operator">|</span> <span class="number">4</span>                        <span class="operator">|</span> <span class="number">7</span>                          <span class="operator">|</span> <span class="number">24</span>                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+---------------------------+-------------------------+--------------------------+----------------------------+----------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>日期和时间的格式化</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">DATE_FORMAT(date,fmt)</td><td style="text-align:left">依照指定的fmt格式格式化日期date值</td></tr><tr><td style="text-align:left">TIME_FORMAT(time,fmt)</td><td style="text-align:left">依照字符串fmt格式化时间time值</td></tr><tr><td style="text-align:left">STR_TO_DATE(str, fmt)</td><td style="text-align:left">将某种格式的日期字符串转换为标准格式 %Y-%m-%d %H:%i:%s</td></tr><tr><td style="text-align:left">unix_timestamp()</td><td style="text-align:left">获取当前日期的unix时间戳</td></tr><tr><td style="text-align:left">unix_timestamp(date)</td><td style="text-align:left">获取指定日期的unix时间戳</td></tr><tr><td style="text-align:left">FROM_UNIXTIME(ts)</td><td style="text-align:left">使用标准格式 %Y-%m-%d %H:%i:%s格式化UNIX时间戳ts</td></tr><tr><td style="text-align:left">FROM_UNIXTIME(ts,fmt)</td><td style="text-align:left">根据指定的fmt格式，格式化UNIX时间戳ts</td></tr><tr><td style="text-align:left">GET_FORMAT({DATE</td><td style="text-align:left">TIME</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> DATE_FORMAT(now(),<span class="string">&#x27;%Y/%m/%d %H:%i:%s&#x27;</span>),DATE_FORMAT(<span class="string">&#x27;2022-10-22&#x27;</span>,<span class="string">&#x27;%Y年%m月%d日&#x27;</span>),TIME_FORMAT(<span class="string">&#x27;12:23:24&#x27;</span>,<span class="string">&#x27;%H_%i_%s&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+------------------------------------------+------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> DATE_FORMAT(now(),<span class="string">&#x27;%Y/%m/%d %H:%i:%s&#x27;</span>) <span class="operator">|</span> DATE_FORMAT(<span class="string">&#x27;2022-10-22&#x27;</span>,<span class="string">&#x27;%Y年%m月%d日&#x27;</span>) <span class="operator">|</span> TIME_FORMAT(<span class="string">&#x27;12:23:24&#x27;</span>,<span class="string">&#x27;%H_%i_%s&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+------------------------------------------+------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="operator">/</span><span class="number">10</span><span class="operator">/</span><span class="number">26</span> <span class="number">10</span>:<span class="number">03</span>:<span class="number">00</span>                    <span class="operator">|</span> <span class="number">2022</span>年<span class="number">10</span>月<span class="number">22</span>日                           <span class="operator">|</span> <span class="number">12</span>_23_24                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------------+------------------------------------------+------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> STR_TO_DATE(<span class="string">&#x27;08/09/2022&#x27;</span>, <span class="string">&#x27;%m/%d/%Y&#x27;</span>),str_to_date(<span class="string">&#x27;08.09.2022 08:09:30&#x27;</span>, <span class="string">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+---------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> STR_TO_DATE(<span class="string">&#x27;08/09/2022&#x27;</span>, <span class="string">&#x27;%m/%d/%Y&#x27;</span>) <span class="operator">|</span> str_to_date(<span class="string">&#x27;08.09.2022 08:09:30&#x27;</span>, <span class="string">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+---------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-08</span><span class="number">-09</span>                            <span class="operator">|</span> <span class="number">2022</span><span class="number">-08</span><span class="number">-09</span> <span class="number">08</span>:<span class="number">09</span>:<span class="number">30</span>                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------------+---------------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> unix_timestamp(),unix_timestamp(now()),unix_timestamp(<span class="string">&#x27;2022-08-09 08:09:30&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> unix_timestamp() <span class="operator">|</span> unix_timestamp(now()) <span class="operator">|</span> unix_timestamp(<span class="string">&#x27;2022-08-09 08:09:30&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------------------+---------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1666773064</span>       <span class="operator">|</span> <span class="number">1666773064</span>            <span class="operator">|</span> <span class="number">1660032570</span>                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------------------+---------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> FROM_UNIXTIME(<span class="number">1666773064</span>),FROM_UNIXTIME(<span class="number">1666773064</span>,<span class="string">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> FROM_UNIXTIME(<span class="number">1666773064</span>) <span class="operator">|</span> FROM_UNIXTIME(<span class="number">1666773064</span>,<span class="string">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">08</span>:<span class="number">31</span>:<span class="number">04</span>       <span class="operator">|</span> <span class="number">10.26</span><span class="number">.2022</span> <span class="number">08</span>:<span class="number">31</span>:<span class="number">04</span>                           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+-----------------------------------------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">DATE(date)</td><td style="text-align:left">输出格式：2022-11-23</td></tr><tr><td style="text-align:left">TIMESTAMP(datetime)</td><td style="text-align:left">输出格式：2022-11-23 07:44:48</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="type">date</span>(<span class="string">&#x27;2022-11-23 07:44:48&#x27;</span>),<span class="type">date</span>(now()),<span class="type">timestamp</span>(<span class="string">&#x27;2022-11-23 07:44:48&#x27;</span>),<span class="type">timestamp</span>(now())</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+-------------+----------------------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="type">date</span>(<span class="string">&#x27;2022-11-23 07:44:48&#x27;</span>) <span class="operator">|</span> <span class="type">date</span>(now()) <span class="operator">|</span> <span class="type">timestamp</span>(<span class="string">&#x27;2022-11-23 07:44:48&#x27;</span>) <span class="operator">|</span> <span class="type">timestamp</span>(now())    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+-------------+----------------------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-11</span><span class="number">-23</span>                  <span class="operator">|</span> <span class="number">2022</span><span class="number">-11</span><span class="number">-23</span>  <span class="operator">|</span> <span class="number">2022</span><span class="number">-11</span><span class="number">-23</span> <span class="number">07</span>:<span class="number">44</span>:<span class="number">48</span>              <span class="operator">|</span> <span class="number">2022</span><span class="number">-11</span><span class="number">-23</span> <span class="number">07</span>:<span class="number">57</span>:<span class="number">11</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+-------------+----------------------------------+---------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>日期、时间转换函数</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">time_to_sec(time)</td><td style="text-align:left">时间转换为秒</td></tr><tr><td style="text-align:left">sec_to_time(seconds)</td><td style="text-align:left">秒转换为时间</td></tr><tr><td style="text-align:left">to_days(date)</td><td style="text-align:left">日期转换为天数，距离0000-00-00到现在的天数，建议使用4位年份</td></tr><tr><td style="text-align:left">from_days(days)</td><td style="text-align:left">天数转换为日期</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 年份不是<span class="number">2</span>位时，以实际年份值为准</span><br><span class="line"><span class="keyword">select</span> to_days(<span class="string">&#x27;0000-00-00&#x27;</span>),to_days(<span class="string">&#x27;0000-01-01&#x27;</span>),to_days(<span class="string">&#x27;1-01-01&#x27;</span>),to_days(<span class="string">&#x27;100-01-01&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-----------------------+--------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> to_days(<span class="string">&#x27;0000-00-00&#x27;</span>) <span class="operator">|</span> to_days(<span class="string">&#x27;0000-01-01&#x27;</span>) <span class="operator">|</span> to_days(<span class="string">&#x27;1-01-01&#x27;</span>) <span class="operator">|</span> to_days(<span class="string">&#x27;100-01-01&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-----------------------+--------------------+----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                <span class="operator">|</span> <span class="number">1</span>                     <span class="operator">|</span> <span class="number">366</span>                <span class="operator">|</span> <span class="number">36525</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-----------------------+--------------------+----------------------+</span></span><br><span class="line"></span><br><span class="line"># 年份是<span class="number">2</span>位时，默认前面加上<span class="number">20</span>，建议使用<span class="number">4</span>位年份</span><br><span class="line"><span class="keyword">select</span> to_days(<span class="string">&#x27;00-01-01&#x27;</span>),to_days(<span class="string">&#x27;10-01-01&#x27;</span>),to_days(<span class="string">&#x27;2010-01-01&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+---------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> to_days(<span class="string">&#x27;00-01-01&#x27;</span>) <span class="operator">|</span> to_days(<span class="string">&#x27;10-01-01&#x27;</span>) <span class="operator">|</span> to_days(<span class="string">&#x27;2010-01-01&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+---------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">730485</span>              <span class="operator">|</span> <span class="number">734138</span>              <span class="operator">|</span> <span class="number">734138</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+---------------------+-----------------------+</span></span><br><span class="line"></span><br><span class="line"># 时间与秒相互转</span><br><span class="line"><span class="keyword">select</span> time_to_sec(<span class="string">&#x27;01:00:05&#x27;</span>),sec_to_time(<span class="number">3605</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> time_to_sec(<span class="string">&#x27;01:00:05&#x27;</span>) <span class="operator">|</span> sec_to_time(<span class="number">3605</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3605</span>                    <span class="operator">|</span> <span class="number">1</span>:<span class="number">00</span>:<span class="number">05</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+-------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>时区转换</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">convert_tz(date,from_timezone,to_timezone)</td><td style="text-align:left">将date从from_timezone转换为to_timezone</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> convert_tz(<span class="string">&#x27;2022-08-08 12:00:00&#x27;</span>, <span class="string">&#x27;+08:00&#x27;</span>, <span class="string">&#x27;+00:00&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> convert_tz(<span class="string">&#x27;2022-08-08 12:00:00&#x27;</span>, <span class="string">&#x27;+08:00&#x27;</span>, <span class="string">&#x27;+00:00&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-08</span><span class="number">-08</span> <span class="number">04</span>:<span class="number">00</span>:<span class="number">00</span>                                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>拼凑日期、时间函数</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">makdedate(year,dayofyear)</td><td style="text-align:left">拼接日期，year年份，dayofyear一年中的第几天</td></tr><tr><td style="text-align:left">maketime(hour,minute,second)</td><td style="text-align:left">拼接时间，hour小时,minute分钟,second秒</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> makedate(<span class="number">2022</span>,<span class="number">31</span>),maketime(<span class="number">12</span>,<span class="number">15</span>,<span class="number">30</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> makedate(<span class="number">2022</span>,<span class="number">31</span>) <span class="operator">|</span> maketime(<span class="number">12</span>,<span class="number">15</span>,<span class="number">30</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+--------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-01</span><span class="number">-31</span>        <span class="operator">|</span> <span class="number">12</span>:<span class="number">15</span>:<span class="number">30</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+--------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>获得国家地区的时间格式字符串</p></li></ul><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">GET_FORMAT({DATE</td><td style="text-align:left">TIME</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;USA&#x27;</span>),GET_FORMAT(DATETIME,<span class="string">&#x27;USA&#x27;</span>),GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;USA&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+----------------------------+------------------------+</span></span><br><span class="line"><span class="operator">|</span> GET_FORMAT(<span class="type">DATE</span>,<span class="string">&#x27;USA&#x27;</span>) <span class="operator">|</span> GET_FORMAT(DATETIME,<span class="string">&#x27;USA&#x27;</span>) <span class="operator">|</span> GET_FORMAT(<span class="type">TIME</span>,<span class="string">&#x27;USA&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+----------------------------+------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">%</span>m.<span class="operator">%</span>d.<span class="operator">%</span>Y               <span class="operator">|</span> <span class="operator">%</span>Y<span class="operator">-</span><span class="operator">%</span>m<span class="operator">-</span><span class="operator">%</span>d <span class="operator">%</span>H.<span class="operator">%</span>i.<span class="operator">%</span>s          <span class="operator">|</span> <span class="operator">%</span>h:<span class="operator">%</span>i:<span class="operator">%</span>s <span class="operator">%</span>p            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+----------------------------+------------------------+</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">函数调用</th><th style="text-align:left">结果</th></tr></thead><tbody><tr><td style="text-align:left">GET_FORMAT(DATE,‘USA’)</td><td style="text-align:left">‘%m.%d.%Y’</td></tr><tr><td style="text-align:left">GET_FORMAT(DATE,‘JIS’)</td><td style="text-align:left">‘%Y-%m-%d’</td></tr><tr><td style="text-align:left">GET_FORMAT(DATE,‘ISO’)</td><td style="text-align:left">‘%Y-%m-%d’</td></tr><tr><td style="text-align:left">GET_FORMAT(DATE,‘EUR’)</td><td style="text-align:left">‘%d.%m.%Y’</td></tr><tr><td style="text-align:left">GET_FORMAT(DATE,‘INTERNAL’)</td><td style="text-align:left">‘%Y%m%d’</td></tr><tr><td style="text-align:left">GET_FORMAT(DATETIME,‘USA’)</td><td style="text-align:left">‘%Y-%m-%d %H.%i.%s’</td></tr><tr><td style="text-align:left">GET_FORMAT(DATETIME,‘JIS’)</td><td style="text-align:left">‘%Y-%m-%d %H:%i:%s’</td></tr><tr><td style="text-align:left">GET_FORMAT(DATETIME,‘ISO’)</td><td style="text-align:left">‘%Y-%m-%d %H:%i:%s’</td></tr><tr><td style="text-align:left">GET_FORMAT(DATETIME,‘EUR’)</td><td style="text-align:left">‘%Y-%m-%d %H.%i.%s’</td></tr><tr><td style="text-align:left">GET_FORMAT(DATETIME,‘INTERNAL’)</td><td style="text-align:left">‘%Y%m%d%H%i%s’</td></tr><tr><td style="text-align:left">GET_FORMAT(TIME,‘USA’)</td><td style="text-align:left">‘%h:%i:%s %p’</td></tr><tr><td style="text-align:left">GET_FORMAT(TIME,‘JIS’)</td><td style="text-align:left">‘%H:%i:%s’</td></tr><tr><td style="text-align:left">GET_FORMAT(TIME,‘ISO’)</td><td style="text-align:left">‘%H:%i:%s’</td></tr><tr><td style="text-align:left">GET_FORMAT(TIME,‘EUR’)</td><td style="text-align:left">‘%H.%i.%s’</td></tr><tr><td style="text-align:left">GET_FORMAT(TIME,‘INTERNAL’)</td><td style="text-align:left">‘%H%i%s’</td></tr></tbody></table><h3 id="加密函数">加密函数</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">AES_ENCRYPT(str,key)</td><td style="text-align:left">使用AES加密,返回用密钥key对字符串str利用高级加密标准算法加密后的结果，调用AES_ENCRYPT的结果是一个二进制字符串，以BLOB类型存储</td></tr><tr><td style="text-align:left">AES_DECRYPT(str,key)</td><td style="text-align:left">使用AES解密,返回用密钥key对字符串str利用高级加密标准算法解密后的结果</td></tr><tr><td style="text-align:left">MD5(str)</td><td style="text-align:left">计算字符串str的MD5校验和</td></tr><tr><td style="text-align:left">SHA(str),SHA1(str)</td><td style="text-align:left">计算字符串str的安全散列算法(SHA)校验和</td></tr><tr><td style="text-align:left">SHA2(str)</td><td style="text-align:left">计算字符串str的安全散列算法(SHA2)校验和</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> AES_ENCRYPT(<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>),AES_DECRYPT(AES_ENCRYPT(<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>),<span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------+------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> AES_ENCRYPT(<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>)        <span class="operator">|</span> AES_DECRYPT(AES_ENCRYPT(<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>),<span class="string">&#x27;abc&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------+------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0xe46cef3cb055471402ea4dfb7249cb32</span> <span class="operator">|</span> <span class="number">123456</span>                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------+------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 不可逆</span><br><span class="line"><span class="keyword">select</span> MD5(<span class="string">&#x27;123456&#x27;</span>),SHA(<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> MD5(<span class="string">&#x27;123456&#x27;</span>)                    <span class="operator">|</span> SHA(<span class="string">&#x27;123456&#x27;</span>)                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> e10adc3949ba59abbe56e057f20f883e <span class="operator">|</span> <span class="number">7</span>c4a8d09ca3762af61e59520943dc26494f8941b <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+------------------------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="信息函数">信息函数</h3><table><thead><tr><th style="text-align:left">名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">USER(),SESSION_USER(),SYSTEM_USER()</td><td style="text-align:left">客户端提供的用户名和主机名</td></tr><tr><td style="text-align:left">CURRENT_USER(),CURRENT_USER</td><td style="text-align:left">经过身份验证的用户名和主机名</td></tr><tr><td style="text-align:left">DATABASE(),SCHEMA()</td><td style="text-align:left">返回默认（当前）数据库名称</td></tr><tr><td style="text-align:left">VERSION()</td><td style="text-align:left">返回指示MySQL服务器版本的字符串</td></tr><tr><td style="text-align:left">ICU_VERSION()</td><td style="text-align:left">Unicode国际组件（ICU）库的版本,用于支持正则表达式操作</td></tr><tr><td style="text-align:left">CONNECTION_ID()</td><td style="text-align:left">返回连接的连接ID（线程ID）</td></tr><tr><td style="text-align:left">CHARSET(x)</td><td style="text-align:left">查询x的存储字符集</td></tr><tr><td style="text-align:left">COLLATION(x)</td><td style="text-align:left">查询x的排序字符集</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">user</span>(),<span class="built_in">SESSION_USER</span>(),<span class="built_in">SYSTEM_USER</span>(),<span class="built_in">CURRENT_USER</span>(),<span class="built_in">CURRENT_USER</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-------------------+-------------------+----------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span>()            <span class="operator">|</span> <span class="built_in">SESSION_USER</span>()    <span class="operator">|</span> <span class="built_in">SYSTEM_USER</span>()     <span class="operator">|</span> <span class="built_in">CURRENT_USER</span>() <span class="operator">|</span> <span class="built_in">CURRENT_USER</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-------------------+-------------------+----------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> root<span class="variable">@1</span><span class="number">.119</span><span class="number">.151</span><span class="number">.30</span> <span class="operator">|</span> root<span class="variable">@1</span><span class="number">.119</span><span class="number">.151</span><span class="number">.30</span> <span class="operator">|</span> root<span class="variable">@1</span><span class="number">.119</span><span class="number">.151</span><span class="number">.30</span> <span class="operator">|</span> root@<span class="operator">%</span>         <span class="operator">|</span> root@<span class="operator">%</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-------------------+-------------------+----------------+--------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> version(),database(),schema(),ICU_VERSION(),CONNECTION_ID()</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------+----------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> version() <span class="operator">|</span> database() <span class="operator">|</span> schema() <span class="operator">|</span> ICU_VERSION() <span class="operator">|</span> CONNECTION_ID() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------+----------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8.0</span><span class="number">.30</span>    <span class="operator">|</span> test       <span class="operator">|</span> test     <span class="operator">|</span> <span class="number">69.1</span>          <span class="operator">|</span> <span class="number">138</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------+----------+---------------+-----------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> CHARSET(<span class="string">&#x27;abc&#x27;</span>),CHARSET(<span class="number">1010</span>),CHARSET(<span class="number">0x1010</span>),<span class="keyword">COLLATION</span>(<span class="string">&#x27;abc&#x27;</span>),<span class="keyword">COLLATION</span>(<span class="number">1010</span>),<span class="keyword">COLLATION</span>(<span class="number">0x1010</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------------+-----------------+--------------------+-----------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> CHARSET(<span class="string">&#x27;abc&#x27;</span>) <span class="operator">|</span> CHARSET(<span class="number">1010</span>) <span class="operator">|</span> CHARSET(<span class="number">0x1010</span>) <span class="operator">|</span> <span class="keyword">COLLATION</span>(<span class="string">&#x27;abc&#x27;</span>)   <span class="operator">|</span> <span class="keyword">COLLATION</span>(<span class="number">1010</span>) <span class="operator">|</span> <span class="keyword">COLLATION</span>(<span class="number">0x1010</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------------+-----------------+--------------------+-----------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> utf8mb4        <span class="operator">|</span> <span class="type">binary</span>        <span class="operator">|</span> <span class="type">binary</span>          <span class="operator">|</span> utf8mb4_general_ci <span class="operator">|</span> <span class="type">binary</span>          <span class="operator">|</span> <span class="type">binary</span>            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+---------------+-----------------+--------------------+-----------------+-------------------+</span></span><br></pre></td></tr></table></figure><h3 id="其它函数">其它函数</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">INET_ATON(ip)</td><td style="text-align:left">返回IP地址的数字表示</td></tr><tr><td style="text-align:left">INET_NTOA(num)</td><td style="text-align:left">返回数字所代表的IP地址</td></tr><tr><td style="text-align:left">IS_IPV4(str)</td><td style="text-align:left">参数是否为IPv4地址</td></tr><tr><td style="text-align:left">INET6_ATON(ip)</td><td style="text-align:left">返回IPv6地址的数字值</td></tr><tr><td style="text-align:left">INET6_NTOA(num)</td><td style="text-align:left">从数字值返回IPv6地址</td></tr><tr><td style="text-align:left">IS_IPV6(str)</td><td style="text-align:left">参数是否为IPv6地址</td></tr><tr><td style="text-align:left">UUID()</td><td style="text-align:left">返回通用唯一标识符（UUID）</td></tr><tr><td style="text-align:left">UUID_SHORT()</td><td style="text-align:left">返回整数值通用标识符</td></tr><tr><td style="text-align:left">IS_UUID(str)</td><td style="text-align:left">参数是否为有效的UUID</td></tr><tr><td style="text-align:left">ANY_VALUE(column)</td><td style="text-align:left">抑制ONLY_FULL_GROUP_BY值拒绝，返回分组内任意数据</td></tr><tr><td style="text-align:left">GROUPING(column)</td><td style="text-align:left">将超聚合的ROLLUP行与常规行区分开来，返回值是0或1</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> INET_ATON(<span class="string">&#x27;10.122.89.47&#x27;</span>),INET_NTOA(<span class="number">175790383</span>),IS_IPV4(<span class="string">&#x27;10.122.89.47&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+----------------------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> INET_ATON(<span class="string">&#x27;10.122.89.47&#x27;</span>) <span class="operator">|</span> INET_NTOA(<span class="number">175790383</span>) <span class="operator">|</span> IS_IPV4(<span class="string">&#x27;10.122.89.47&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+----------------------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">175790383</span>                 <span class="operator">|</span> <span class="number">10.122</span><span class="number">.89</span><span class="number">.47</span>         <span class="operator">|</span> <span class="number">1</span>                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+----------------------+-------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> INET6_ATON(<span class="string">&#x27;fdfe::5a55:caff:fefa:9089&#x27;</span>),INET6_NTOA(<span class="number">0xfdfe0000000000005a55cafffefa9089</span>),IS_IPV6(<span class="string">&#x27;fdfe::5a55:caff:fefa:9089&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------+------------------------------------------------+--------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> INET6_ATON(<span class="string">&#x27;fdfe::5a55:caff:fefa:9089&#x27;</span>) <span class="operator">|</span> INET6_NTOA(<span class="number">0xfdfe0000000000005a55cafffefa9089</span>) <span class="operator">|</span> IS_IPV6(<span class="string">&#x27;fdfe::5a55:caff:fefa:9089&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------+------------------------------------------------+--------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">0xfdfe0000000000005a55cafffefa9089</span>      <span class="operator">|</span> fdfe::<span class="number">5</span>a55:caff:fefa:<span class="number">9089</span>                      <span class="operator">|</span> <span class="number">1</span>                                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------+------------------------------------------------+--------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> UUID(),UUID_SHORT(),IS_UUID(<span class="string">&#x27;872192b2-55b3-11ed-8890-0ad5455f39d8&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+----------------------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> UUID()                               <span class="operator">|</span> UUID_SHORT()         <span class="operator">|</span> IS_UUID(<span class="string">&#x27;872192b2-55b3-11ed-8890-0ad5455f39d8&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+----------------------+-------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">9761</span>d30a<span class="number">-55</span>b3<span class="number">-11</span>ed<span class="number">-8890</span><span class="number">-0</span>ad5455f39d8 <span class="operator">|</span> <span class="number">16889433509511299076</span> <span class="operator">|</span> <span class="number">1</span>                                               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------------------+----------------------+-------------------------------------------------+</span></span><br></pre></td></tr></table></figure><h2 id="流程控制">流程控制</h2><h3 id="控制函数">控制函数</h3><table><thead><tr><th style="text-align:left">函数名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">if(expr,v1,v2)</td><td style="text-align:left">实现if-else的效果，如果expr是true，返回v1。如果expr是false，返回v2</td></tr><tr><td style="text-align:left">ifnull(v1,v2)</td><td style="text-align:left">判断v1值是否为null，如果v1不为NULL，返回v2，否则返回v1</td></tr><tr><td style="text-align:left">nullif(v1,v2)</td><td style="text-align:left">如果v1=v2则返回null,否则返回v1</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> if(<span class="number">1</span><span class="operator">&gt;</span><span class="number">2</span>,<span class="string">&#x27;1&gt;2&#x27;</span>,<span class="string">&#x27;1&lt;=2&#x27;</span>),ifnull(<span class="number">1</span>,<span class="number">2</span>),ifnull(<span class="keyword">null</span>,<span class="number">2</span>),<span class="built_in">nullif</span>(<span class="number">1</span>,<span class="number">1</span>),<span class="built_in">nullif</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-------------+----------------+-------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> if(<span class="number">1</span><span class="operator">&gt;</span><span class="number">2</span>,<span class="string">&#x27;1&gt;2&#x27;</span>,<span class="string">&#x27;1&lt;=2&#x27;</span>) <span class="operator">|</span> ifnull(<span class="number">1</span>,<span class="number">2</span>) <span class="operator">|</span> ifnull(<span class="keyword">null</span>,<span class="number">2</span>) <span class="operator">|</span> <span class="built_in">nullif</span>(<span class="number">1</span>,<span class="number">1</span>) <span class="operator">|</span> <span class="built_in">nullif</span>(<span class="number">1</span>,<span class="number">2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-------------+----------------+-------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span><span class="operator">&lt;=</span><span class="number">2</span>                 <span class="operator">|</span> <span class="number">1</span>           <span class="operator">|</span> <span class="number">2</span>              <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>      <span class="operator">|</span> <span class="number">1</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-------------+----------------+-------------+-------------+</span></span><br><span class="line"></span><br><span class="line"># 统计每个部门年龄等于<span class="number">34</span>的人数</span><br><span class="line"><span class="keyword">select</span> depName,<span class="built_in">sum</span>(if(age<span class="operator">=</span><span class="number">34</span>,<span class="number">1</span>,<span class="number">0</span>)),group_concat(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+---------------------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> <span class="built_in">sum</span>(if(age<span class="operator">=</span><span class="number">34</span>,<span class="number">1</span>,<span class="number">0</span>)) <span class="operator">|</span> group_concat(age)       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+---------------------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">2</span>                   <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>                   <span class="operator">|</span> <span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">0</span>                   <span class="operator">|</span> <span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+---------------------+-------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="控制语句case…when">控制语句<code>case…when</code></h3><ul class="lvl-0"><li class="lvl-2"><p><code>case…when</code>比<code>if函数</code>功能更加强大，支持多个条件分支判断</p></li><li class="lvl-2"><p><code>case…when</code>语句支持两种判断类型</p><ul class="lvl-2"><li class="lvl-6">1.表达式与常量比较</li></ul>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">case 要判断的字段或表达式</span><br><span class="line">when 常量1 then 要显示的值1或语句1</span><br><span class="line">when 常量2 then 要显示的值2或语句2</span><br><span class="line">...</span><br><span class="line">else 缺省要显示的值n或语句n</span><br><span class="line">end</span><br></pre></td></tr></table></figure>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="string">&#x27;green&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;red&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;stop&#x27;</span> <span class="keyword">WHEN</span> <span class="string">&#x27;green&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;go&#x27;</span> <span class="keyword">ELSE</span> <span class="string">&#x27;null&#x27;</span> <span class="keyword">END</span> <span class="keyword">as</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">result</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> go     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"></span><br><span class="line"># 统计每个部门年龄等于<span class="number">34</span>的人数</span><br><span class="line"><span class="keyword">select</span> depName,<span class="built_in">sum</span>(<span class="keyword">case</span> age <span class="keyword">when</span> <span class="number">34</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),group_concat(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> <span class="built_in">sum</span>(<span class="keyword">case</span> age <span class="keyword">when</span> <span class="number">34</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> ) <span class="operator">|</span> group_concat(age)       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">2</span>                                        <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>                                        <span class="operator">|</span> <span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">0</span>                                        <span class="operator">|</span> <span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+-------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-6"><p>2.分支条件判断</p></li></ul>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">case</span><br><span class="line">when 条件1 then 要显示的值1或语句1</span><br><span class="line">when 条件2 then 要显示的值2或语句2</span><br><span class="line">...</span><br><span class="line">else 缺省要显示的值n或语句n</span><br><span class="line">end</span><br></pre></td></tr></table></figure>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="number">1</span><span class="operator">&gt;</span><span class="number">2</span> <span class="keyword">THEN</span> <span class="string">&#x27;stop&#x27;</span> <span class="keyword">WHEN</span> <span class="number">1</span><span class="operator">&lt;</span><span class="number">2</span> <span class="keyword">THEN</span> <span class="string">&#x27;go&#x27;</span> <span class="keyword">ELSE</span> <span class="string">&#x27;null&#x27;</span> <span class="keyword">END</span> <span class="keyword">as</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">result</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"><span class="operator">|</span> go     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+</span></span><br><span class="line"></span><br><span class="line"># 统计每个部门年龄等于<span class="number">34</span>的人数</span><br><span class="line"><span class="keyword">select</span> depName,<span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> age<span class="operator">=</span><span class="number">34</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),group_concat(age) <span class="keyword">from</span> tbl_employees <span class="keyword">group</span> <span class="keyword">by</span> depName</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> depName <span class="operator">|</span> <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> age<span class="operator">=</span><span class="number">34</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> ) <span class="operator">|</span> group_concat(age)       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> 技术部  <span class="operator">|</span> <span class="number">2</span>                                        <span class="operator">|</span> <span class="number">22</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">28</span>,<span class="number">34</span>,<span class="number">34</span>,<span class="number">36</span>,<span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运维部  <span class="operator">|</span> <span class="number">1</span>                                        <span class="operator">|</span> <span class="number">34</span>,<span class="number">24</span>,<span class="number">26</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 销售部  <span class="operator">|</span> <span class="number">0</span>                                        <span class="operator">|</span> <span class="number">44</span>,<span class="number">24</span>,<span class="number">46</span>,<span class="number">38</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+------------------------------------------+-------------------------+</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="算术运算符">算术运算符</h2><table><thead><tr><th style="text-align:left">名称</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:left">+</td><td style="text-align:left">加法</td></tr><tr><td style="text-align:left">-</td><td style="text-align:left">减法</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">乘法</td></tr><tr><td style="text-align:left">/</td><td style="text-align:left">除法</td></tr><tr><td style="text-align:left">div</td><td style="text-align:left">整除，只取整数部分</td></tr><tr><td style="text-align:left">%，mod</td><td style="text-align:left">模运算符，取余数</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 除法</span><br><span class="line"><span class="keyword">select</span> <span class="number">10</span><span class="operator">/</span><span class="number">4</span>,<span class="number">10</span> div <span class="number">4</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span><span class="operator">/</span><span class="number">4</span>   <span class="operator">|</span> <span class="number">10</span> div <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2.5000</span> <span class="operator">|</span> <span class="number">2</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"></span><br><span class="line"># 取余数</span><br><span class="line"><span class="keyword">select</span> <span class="number">10</span> mod <span class="number">3</span>,<span class="built_in">mod</span>(<span class="number">10</span>,<span class="number">3</span>),<span class="number">10</span> <span class="operator">%</span> <span class="number">3</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span> mod <span class="number">3</span> <span class="operator">|</span> <span class="built_in">mod</span>(<span class="number">10</span>,<span class="number">3</span>) <span class="operator">|</span> <span class="number">10</span> <span class="operator">%</span> <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>        <span class="operator">|</span> <span class="number">1</span>         <span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-----------+--------+</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++

::: tips success warning danger
这里是容器内的内容
:::

% note info % success warning danger
这里是容器内的内容
% endnote %

 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;sql语句与常用函数介绍&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;，&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySql一些有用的知识点[2]</title>
    <link href="https://blog.hanqunfeng.com/2022/10/14/mysql-senior-command2/"/>
    <id>https://blog.hanqunfeng.com/2022/10/14/mysql-senior-command2/</id>
    <published>2022-10-14T13:30:05.000Z</published>
    <updated>2022-11-10T09:08:41.015Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++ --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>MySql知识点介绍: binlog相关、事务及其ACID属性、并发事务处理带来的问题、事务隔离级别、MVCC多版本并发控制机制、InnoDB Buffer Pool、MyISAM Key Buffer、InnoDB记录存储结构和索引页结构、InnoDB表空间(TableSpace)、InnoDB元数据表、redo log 和 undo log、数据库锁、慢查询，等等</p></li><li class="lvl-2"><p>本文基于<code>mysql-8.0.30</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/">https://dev.mysql.com/doc/refman/8.0/en/</a></p></li></ul><span id="more"></span><h2 id="binlog相关">binlog相关</h2><p>MySQL的二进制日志binlog可以说是MySQL最重要的日志，它记录了所有的DDL和DML语句（除了数据查询语句select）,其以事件形式记录，还包含语句所执行的消耗的时间，MySQL的二进制日志是事务安全型的，所以binlog内记录的是事务提交成功后的内容。</p><ul class="lvl-0"><li class="lvl-2"><p>查看binlog状态</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># 查看bin‐log是否开启</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%log_bin%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+----------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                   <span class="operator">|</span> <span class="keyword">Value</span>                                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+----------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> log_bin                         <span class="operator">|</span> <span class="keyword">ON</span>                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_basename                <span class="operator">|</span> <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>soft<span class="operator">/</span>mysql8<span class="operator">/</span>datas<span class="operator">/</span>mysql<span class="operator">/</span>mysql<span class="operator">-</span>bin       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_index                   <span class="operator">|</span> <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>soft<span class="operator">/</span>mysql8<span class="operator">/</span>datas<span class="operator">/</span>mysql<span class="operator">/</span>mysql<span class="operator">-</span>bin.index <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_trust_function_creators <span class="operator">|</span> OFF                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> log_bin_use_v1_row_events       <span class="operator">|</span> OFF                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sql_log_bin                     <span class="operator">|</span> <span class="keyword">ON</span>                                                 <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------------+----------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 查看最后一个bin‐log日志的相关信息</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> master status;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> File             <span class="operator">|</span> Position <span class="operator">|</span> Binlog_Do_DB <span class="operator">|</span> Binlog_Ignore_DB <span class="operator">|</span> Executed_Gtid_Set <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000012</span> <span class="operator">|</span>   <span class="number">138605</span> <span class="operator">|</span>              <span class="operator">|</span>                  <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"></span><br><span class="line"># 会多一个最新的bin‐log日志</span><br><span class="line">mysql<span class="operator">&gt;</span> flush logs;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> master status;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> File             <span class="operator">|</span> Position <span class="operator">|</span> Binlog_Do_DB <span class="operator">|</span> Binlog_Ignore_DB <span class="operator">|</span> Executed_Gtid_Set <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000013</span> <span class="operator">|</span>      <span class="number">157</span> <span class="operator">|</span>              <span class="operator">|</span>                  <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"># 清空所有的bin‐log日志</span><br><span class="line">mysql<span class="operator">&gt;</span> reset master;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.02</span> sec)</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> master status;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> File             <span class="operator">|</span> Position <span class="operator">|</span> Binlog_Do_DB <span class="operator">|</span> Binlog_Ignore_DB <span class="operator">|</span> Executed_Gtid_Set <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.000001</span> <span class="operator">|</span>      <span class="number">157</span> <span class="operator">|</span>              <span class="operator">|</span>                  <span class="operator">|</span>                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>binlog数据恢复</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看binlog日志，重点关注begin和commit之间的内容，</span></span><br><span class="line">mysqlbinlog --no-defaults /usr/local/soft/mysql8/datas/mysql/mysql-bin.000001</span><br></pre></td></tr></table></figure><blockquote><p>如下为查看binlog日志的内容片段，<code>end_log_pos</code>后面的就是Position的值</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 311</span></span><br><span class="line"><span class="comment">#220928  8:22:15 server id 3306  end_log_pos 367 CRC32 0x4f3bcf2a Table_map: `test`.`film` mapped to number 186</span></span><br><span class="line"><span class="comment"># at 367</span></span><br><span class="line"><span class="comment">#220928  8:22:15 server id 3306  end_log_pos 412 CRC32 0x3fc87530 Write_rows: table id 186 flags: STMT_END_F</span></span><br><span class="line"></span><br><span class="line">BINLOG <span class="string">&#x27;</span></span><br><span class="line"><span class="string">NwQ0YxPqDAAAOAAAAG8BAAAAALoAAAAAAAEABHRlc3QABGZpbG0AAgMPAh4AAgEBAAIBISrPO08=</span></span><br><span class="line"><span class="string">NwQ0Yx7qDAAALQAAAJwBAAAAALoAAAAAAAEAAgAC/wAEAAAABHRlc3Qwdcg/</span></span><br><span class="line"><span class="string">&#x27;</span>/*!*/;</span><br><span class="line"><span class="comment"># at 412</span></span><br><span class="line"><span class="comment">#220928  8:22:15 server id 3306  end_log_pos 443 CRC32 0x0712832c Xid = 17662</span></span><br><span class="line">COMMIT/*!*/;</span><br></pre></td></tr></table></figure><blockquote><p>常用的恢复方法</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复全部数据</span></span><br><span class="line">mysqlbinlog --no-defaults mysql-bin.000001 | mysql -uroot -p <span class="built_in">test</span>(数据库名)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复指定位置数据</span></span><br><span class="line">mysqlbinlog --no-defaults --start-position=<span class="string">&quot;367&quot;</span> --stop-position=<span class="string">&quot;443&quot;</span> mysql-bin.000001 | mysql -uroot -p <span class="built_in">test</span>(数据库)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复指定时间段数据</span></span><br><span class="line">mysqlbinlog --no-defaults --stop-date= <span class="string">&quot;2022‐09‐28 08:22:15&quot;</span> --start-date= <span class="string">&quot;2022‐09‐28 08:22:15&quot;</span> mysql-bin.000001 | mysql -uroot -p <span class="built_in">test</span>(数据库)</span><br></pre></td></tr></table></figure><h3 id="一个数据恢复的小示例">一个数据恢复的小示例</h3><ul class="lvl-0"><li class="lvl-2"><p>假设数据库每天都有全量备份</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -ppassword -B dbName &gt; <span class="variable">$bakpath</span>/dbName_$(<span class="built_in">date</span> +%F).sql</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>突然某天数据库出现异常，比如关闭后无法重启，此时可以通过全量备份和binlog日志进行数据恢复</p></li><li class="lvl-2"><p>先将binlog日志备份</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/local/soft/mysql8/datas/mysql/mysql-bin.* <span class="variable">$bakpath</span>/</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>清空mysql的datadir目录</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /usr/local/soft/mysql8/datas/mysql/*</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>重新初始化数据库并启动</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqld --user=mysql --initialize-insecure</span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>导入全量备份，假设查看备份完成时间是 <em><strong>2022-11-10 12:30:30</strong></em></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">&lt;</span> $bakpath<span class="operator">/</span>dbName_$(<span class="type">date</span> <span class="operator">+</span><span class="operator">%</span>F).<span class="keyword">sql</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>导入binlog数据</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里就从备份完成时间开始导入，实际上这个时间并不准确，因为备份文件中并没有记录最后的position，所以很难比较出准确的时间或者position</span></span><br><span class="line">mysqlbinlog --no-defaults --start-date=<span class="string">&quot;2022-11-10 12:30:30&quot;</span> <span class="variable">$bakpath</span>/mysql-bin.* | mysql dbName</span><br></pre></td></tr></table></figure><div class="tips"><p><strong>注意</strong><br>如果数据库开启了GTID，需要先关闭再导入binlog数据，否则不能导入binlog数据<br>临时关闭方式: 更改 GTID_MODE 状态顺序为 ON&lt;-&gt;ON_PERMISSIVE&lt;-&gt;OFF_PERMISSIVE&lt;-&gt;OFF ，需要按照顺序依次改变。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查看 GTID_MODE 当前状态</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;gtid_mode&#x27;</span>;</span><br><span class="line"># 修改GTID_MODE 状态为 ON_PERMISSIVE</span><br><span class="line"><span class="keyword">set</span> @<span class="variable">@GLOBAL</span>.GTID_MODE<span class="operator">=</span>ON_PERMISSIVE;</span><br><span class="line"># 修改GTID_MODE 状态为 OFF_PERMISSIVE</span><br><span class="line"><span class="keyword">set</span> @<span class="variable">@GLOBAL</span>.GTID_MODE<span class="operator">=</span>OFF_PERMISSIVE;</span><br><span class="line"># 修改GTID_MODE 状态为 OFF</span><br><span class="line"><span class="keyword">set</span> @<span class="variable">@GLOBAL</span>.GTID_MODE<span class="operator">=</span>OFF;</span><br></pre></td></tr></table></figure></div><h2 id="事务及其ACID属性">事务及其ACID属性</h2><p>事务是由一组SQL语句组成的逻辑处理单元,事务具有以下4个属性,通常简称为事务的ACID属性。</p><ul class="lvl-0"><li class="lvl-2"><p>原子性(Atomicity) ：事务是一个原子操作单元,其对数据的修改,要么全都执行,要么全都不执行。</p></li><li class="lvl-2"><p>一致性(Consistent) ：指的是数据库总是从一个一致性的状态转换到另外一个一致性的状态。在事务开始和完成时,数据都必须保持一致状态。这意味着所有相关的数据规则都必须应用于事务的修改,以保持数据的完整性。事务内查询的数据在当前事务内必须保持一致而不会受到其它事务对数据修改的影响。</p></li><li class="lvl-2"><p>隔离性(Isolation) ：数据库系统提供一定的隔离机制,保证事务在不受外部并发操作影响的“独立”环境执行。这意味着事务处理过程中的中间状态对外部是不可见的,反之亦然。</p></li><li class="lvl-2"><p>持久性(Durable) ：事务完成之后,它对于数据的修改是永久性的,即使出现系统故障也能够保持。</p></li></ul><div class="tips"><p><strong>提示</strong><br>总的来说，MySQL中事务的原子性是通过<code>undo log</code>来实现的，事务的持久性性是通过<code>redo log</code>来实现的，事务的隔离性是通过<code>读写锁+MVCC</code>来实现的。事务的一致性通过原子性、隔离性、持久性来保证。</p><p>也就是说 ACID 四大特性之中，C(一致性)是目的，A(原子性)、I(隔离性)、D(持久性)是手段，是为了保证一致性，数据库提供的手段。数据库必须要实现 AID 三大特性，才有可能实现一致性。</p><p>同时一致性也需要应用程序的支持，应用程序在事务里故意写出违反约束的代码，一致性还是无法保证的，例如，转账代码里从 A 账户扣钱而不给 B 账户加钱，那一致性还是无法保证。</p><p>在事务的具体实现机制上，MySQL采用的是<code>WAL(Write-ahead logging，预写式日志)</code>机制来实现的。这也是是当今的主流方案。</p><p>在使用 WAL 的系统中，所有的修改都先被写入到日志中，然后再被应用到系统中。通常包含 redo 和 undo 两部分信息。关于redo日志 和 undo日志，下文有介绍。</p></div><ul class="lvl-0"><li class="lvl-2"><p>开启只读事务：<code>START TRANSACTION READ ONLY</code></p><ul class="lvl-2"><li class="lvl-4">在只读事务中不可以对普通的表（其他事务也能访问到的表）进行增、删、改操作，但可以对用户临时表做增、删、改操作。</li><li class="lvl-4">对于只读事务来说，只有在它第一次对某个用户创建的临时表<code>CREATE TEMPORARY TABLE</code>执行增、删、改操作时才会为这个事务分配一个事务id，否则的话是不分配事务id。</li></ul></li><li class="lvl-2"><p>开启读写事务：<code>START TRANSACTION READ WRITE</code>或者 <code>BEGIN</code>、<code>START TRANSACTION</code></p><ul class="lvl-2"><li class="lvl-4">在读写事务中可以对表执行增删改查操作。</li><li class="lvl-4">对于读写事务来说，只有在它第一次对某个表（包括用户创建的临时表）执行增、删、改操作时才会为这个事务分配一个事务id，否则的话也是不分配事务id的</li><li class="lvl-4">有的时候虽然我们开启了一个读写事务，但是在这个事务中全是查询语句，并没有执行增、删、改的语句，那也就意味着这个事务并不会被分配一个事务id</li></ul></li></ul><div class="tips"><p><strong>事务Id分配策略</strong><br>服务器会在内存中维护一个全局变量，每当需要为某个事务分配一个事务id时，就会把该变量的值当作事务id分配给该事务，并且把该变量自增 1。<br>每当这个变量的值为 256 的倍数时，就会将该变量的值刷新到系统表空间的页号为 5 的页面中一个称之为 Max Trx ID 的属性处，这个属性占用 8 个字节的存储空间。<br>当系统下一次重新启动时，会将上边提到的 Max Trx ID 属性加载到内存中，将该值加上 256 之后赋值给我们前边提到的全局变量（因为在上次关机时该全局变量的值可能大于 Max Trx ID 属性值）。<br>这样就可以保证整个系统中分配的事务id值是一个递增的数字。先被分配id的事务得到的是较小的事务id，后被分配id的事务得到的是较大的事务id。</p></div><h2 id="并发事务处理带来的问题">并发事务处理带来的问题</h2><ul class="lvl-0"><li class="lvl-2"><p>更新丢失(Lost Update)或脏写</p></li></ul><blockquote><p>当两个或多个事务选择同一行，然后基于最初选定的值更新该行时，由于每个事务都不知道其他事务的存在，就会发生丢失更新问题–最后的更新覆盖了由其他事务所做的更新。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>脏读（Dirty Reads）</p></li></ul><blockquote><p>一个事务正在对一条记录做修改，在这个事务完成并提交前，这条记录的数据就处于不一致的状态；<br>这时，另一个事务也来读取同一条记录，如果不加控制，第二个事务读取了这些“脏”数据，并据此作进一步的处理，就会产生未提交的数据依赖关系。这种现象被形象的叫做“脏读”。<br>一句话：事务A读取到了事务B已经修改但尚未提交的数据，还在这个数据基础上做了操作。此时，如果B事务回滚，A读取的数据无效，不符合一致性要求。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>不可重读（Non-Repeatable Reads）</p></li></ul><blockquote><p>一个事务在读取某些数据后的某个时间，再次读取以前读过的数据，却发现其读出的数据已经发生了改变、或某些记录已经被删除了！这种现象就叫做“不可重复读”。<br>一句话：事务A内部的相同查询语句在不同时刻读出的结果不一致，不符合隔离性</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>幻读（Phantom Reads）</p></li></ul><blockquote><p>一个事务按相同的查询条件重新读取以前检索过的数据，却发现其他事务插入了满足其查询条件的新数据，这种现象就称为“幻读”。<br>一句话：事务A读取到了事务B提交的新增数据，不符合隔离性</p></blockquote><h2 id="事务隔离级别">事务隔离级别</h2><ul class="lvl-0"><li class="lvl-2"><p><code>脏读</code>、<code>不可重复读</code>和<code>幻读</code>,其实都是数据库读一致性问题,必须由数据库提供一定的事务隔离机制来解决。</p></li></ul><table><thead><tr><th style="text-align:left">隔离级别</th><th style="text-align:left">脏读</th><th style="text-align:left">不可重复读</th><th style="text-align:left">幻读</th></tr></thead><tbody><tr><td style="text-align:left">读未提交(READ-UNCOMMITTED)</td><td style="text-align:left">可能</td><td style="text-align:left">可能</td><td style="text-align:left">可能</td></tr><tr><td style="text-align:left">读已提交(READ-COMMITTED)</td><td style="text-align:left">不可能</td><td style="text-align:left">可能</td><td style="text-align:left">可能</td></tr><tr><td style="text-align:left">可重复读(REPEATABLE-READ)</td><td style="text-align:left">不可能</td><td style="text-align:left">不可能</td><td style="text-align:left">可能</td></tr><tr><td style="text-align:left">可串行化(SERIALIZABLE)</td><td style="text-align:left">不可能</td><td style="text-align:left">不可能</td><td style="text-align:left">不可能</td></tr></tbody></table><ul class="lvl-0"><li class="lvl-2"><p>数据库的事务隔离越严格,并发副作用越小,但付出的代价也就越大,因为事务隔离实质上就是使事务在一定程度上“串行化”进行,这显然与“并发”是矛盾的。</p></li><li class="lvl-2"><p>不同的应用对读一致性和事务隔离程度的要求也是不同的,比如许多应用对“不可重复读&quot;和“幻读”并不敏感,可能更关心数据并发访问的能力。</p></li><li class="lvl-2"><p>Mysql默认的事务隔离级别是<code>可重复读(REPEATABLE-READ)</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前数据库的事务隔离级别，mysql8之前使用`tx_isolation`</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;transaction_isolation&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name         <span class="operator">|</span> <span class="keyword">Value</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> transaction_isolation <span class="operator">|</span> REPEATABLE<span class="operator">-</span>READ <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+----------------+</span></span><br><span class="line"># 设置事务隔离级别</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> transaction_isolation<span class="operator">=</span><span class="string">&#x27;READ-COMMITTED&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="MVCC多版本并发控制机制">MVCC多版本并发控制机制</h2><ul class="lvl-0"><li class="lvl-2"><p>Mysql在读已提交和可重复读隔离级别下都实现了MVCC机制</p></li><li class="lvl-2"><p>保证了事务的隔离性</p></li><li class="lvl-2"><p>MVCC机制的实现就是通过read-view机制与undo版本链比对机制，使得不同的事务会根据数据版本链对比规则读取同一条数据在版本链上的不同版本数据。</p></li></ul><h3 id="undo日志版本链">undo日志版本链</h3><p>undo日志版本链是指一行数据被多个事务依次修改过后，在每个事务修改完后，Mysql会保留修改前的数据undo回滚日志，并且用两个隐藏字段trx_id和roll_pointer把这些undo日志串联起来形成一个历史记录版本链</p><h3 id="read-view">read-view</h3><p>在可重复读隔离级别，当事务开启，执行任何查询sql时会生成当前事务的一致性视图read-view，该视图在事务结束之前都不会变化(如果是读已提交隔离级别在每次执行查询sql时都会重新生成)，这个视图由执行查询时所有未提交事务id数组（数组里最小的id为min_id）和已创建的最大事务id（max_id）组成，事务里的任何sql查询结果需要从对应版本链里的最新数据开始逐条跟read-view做比对从而得到最终的快照结果。</p><blockquote><p>注意：begin/start transaction 命令并不是一个事务的起点，在执行到它们之后的第一个修改操作InnoDB表的语句， 事务才真正启动，才会向mysql申请事务id，mysql内部是严格按照事务的启动顺序来分配事务id的。</p></blockquote><h3 id="版本链比对规则">版本链比对规则</h3><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/mvcc.png" alt="" width="900" height="600"></p><ul class="lvl-0"><li class="lvl-2"><ol><li class="lvl-5">如果查询结果中row的 trx_id&lt;min_id，表示这个版本是已提交的事务生成的，这个数据是可见的</li></ol></li><li class="lvl-2"><ol start="2"><li class="lvl-5">如果查询结果中row的 trx_id&gt;max_id，表示这个版本是由将来启动的事务生成的，是不可见的(若 row 的 trx_id 就是当前自己的事务是可见的）</li></ol></li><li class="lvl-2"><ol start="3"><li class="lvl-5">如果查询结果中row的 min_id &lt;=trx_id&lt;= max_id，那就包括两种情况</li></ol></li></ul><blockquote><p>a. 若 row 的 trx_id 在read-view视图数组中，表示这个版本是由还没提交的事务生成的，不可见(若 row 的 trx_id 就是当前自己的事务是可见的)；<br>b. 若 row 的 trx_id 不在read-view视图数组中，表示这个版本是已经提交了的事务生成的，可见。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><ol start="4"><li class="lvl-5">对于删除的情况可以认为是update的特殊情况，会将版本链上最新的数据复制一份，然后将trx_id修改成删除操作的 trx_id，同时在该条记录的头信息（record header）里的（deleted_flag）标记位写上true，来表示当前记录已经被删除，在查询时按照上面的规则查到对应的记录如果delete_flag标记位为true，意味着记录已被删除，则不返回数据。</li></ol></li></ul><h2 id="InnoDB-Buffer-Pool">InnoDB Buffer Pool</h2><ul class="lvl-0"><li class="lvl-2"><p>InnoDB为了缓存磁盘中的页，在MySQL服务器启动的时候就向操作系统申请了一片连续的内存，这片内存叫做Buffer Pool（中文名是缓冲池）,默认情况下Buffer Pool只有128M大小。</p></li><li class="lvl-2"><p><code>innodb_buffer_pool_size</code>规定了系统将多少内存用作InnoDB的索引缓存</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 查看buffer pool设置大小，推荐设置为内存的<span class="number">60</span><span class="operator">%</span>，最大不要超过<span class="number">75</span><span class="operator">%</span>，比如这里设置了<span class="number">1</span>G，单位是字节</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_buffer_pool_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name           <span class="operator">|</span> <span class="keyword">Value</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+------------+</span></span><br><span class="line"><span class="operator">|</span> innodb_buffer_pool_size <span class="operator">|</span> <span class="number">1073741824</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Buffer Pool中默认的缓存页大小和在磁盘上默认的页大小是一样的，都是16KB。</p></li><li class="lvl-2"><p>为了更好的管理这些在Buffer Pool中的缓存页，InnoDB为每一个缓存页都创建了一些所谓的控制信息，这些控制信息包括该页所属的表空间编号、页号、缓存页在Buffer Pool中的地址、链表节点信息、一些锁信息以及LSN信息，当然还有一些别的控制信息。</p></li><li class="lvl-2"><p>每个缓存页对应的控制信息占用的内存大小是相同的，我们称为控制块。控制块和缓存页是一一对应的，它们都被存放到 Buffer Pool 中，Buffer Pool的初始化过程，就是把申请到的Buffer Pool的内存空间划分成若干对控制块和缓存页的过程。其中控制块被存放到 Buffer Pool 的前边，缓存页被存放到 Buffer Pool 后边<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/buffer_pool.png" alt="" width="600" height="100"></p></li><li class="lvl-2"><p><code>free</code>链表：与空闲的缓存页一一对应的控制块会组成一个<code>free</code>链表，用于表示哪些缓冲页可用，每当需要从磁盘中加载一个页到Buffer Pool中时，就从free链表中取一个空闲的缓存页，并且把该缓存页对应的控制块的信息填上（就是该页所在的表空间、页号之类的信息），然后把该缓存页对应的free链表节点从链表中移除，表示该缓存页已经被使用了。<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/free.png" alt="" width="600" height="270"></p></li></ul><div class="note success"><ul class="lvl-0"><li class="lvl-2"><p>缓存页的哈希处理</p><ul class="lvl-2"><li class="lvl-4">当我们需要访问某个页中的数据时，就会把该页从磁盘加载到Buffer Pool中，如果该页已经在Buffer Pool中的话直接使用就可以了。</li><li class="lvl-4">那么问题也就来了，我们怎么知道该页在不在Buffer Pool中呢？难不成需要依次遍历Buffer Pool中各个缓存页么？</li><li class="lvl-4">可以用<code>表空间号 + 页号</code>作为key，<code>缓存页</code>作为value创建一个哈希表，在需要访问某个页的数据时，先从哈希表中根据表<code>空间号 + 页号</code>看看有没有对应的缓存页，如果有，直接使用该缓存页就好，如果没有，那就从free链表中选一个空闲的缓存页，然后把 磁盘中对应的页加载到该缓存页的位置。</li></ul></li></ul></div><ul class="lvl-0"><li class="lvl-2"><p><code>flush</code>链表：因为频繁的往磁盘中写数据会严重的影响程序的性能，所以并不是修改了某个页面的数据就立刻刷新到磁盘上，凡是修改过的缓存页对应的控制块都会作为一个节点加入到一个链表中，因为这个链表节点对应的缓存页都是需要在未来某个时间被刷新到磁盘上的，所以也叫flush链表。链表的构造和free链表差不多。</p></li><li class="lvl-2"><p><code>LRU</code>链表：Buffer Pool没有多于的空间时，需要基于LRU算法将旧的缓存页从Buffer Pool中移除，然后再把新的页放进来。当我们需要访问某个页时，如果该页不在Buffer Pool中，在把该页从磁盘加载到Buffer Pool中的缓存页时，就把该缓存页对应的控制块作为节点塞到LRU链表的头部。如果该页已经缓存在Buffer Pool中，则直接把该页对应的控制块移动到LRU链表的头部。所以当Buffer Pool中的空闲缓存页使用完时，到LRU链表的尾部找些缓存页淘汰就行了。</p><div class="note success"><ul class="lvl-0"><li class="lvl-2"><p>实际上LRU链表的规则并不是这么简单，因为mysql支持预读，即读取一个数据页时会同时读取其附近的多个页面（这些页可能用不到），或者执行了大表的扫描全表的查询语句（使用频率偏低），这样就有可能淘汰掉Buffer Pool中那些高频访问的页。</p></li><li class="lvl-2"><p>解决方法是把这个LRU链表按照一定比例分成两截</p><ul class="lvl-2"><li class="lvl-4">一部分存储使用频率非常高的缓存页，所以这一部分链表也叫做热数据，或者称young区域。</li><li class="lvl-4">另一部分存储使用频率不是很高的缓存页，所以这一部分链表也叫做冷数据，或者称old区域。</li><li class="lvl-4">可以通过查看系统变量<code>innodb_old_blocks_pct</code>的值来确定old区域在LRU链表中所占的比例</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;innodb_old_blocks_pct&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name         <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_old_blocks_pct <span class="operator">|</span> <span class="number">37</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------+</span></span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>InnoDB规定，当磁盘上的某个页面在初次加载到Buffer Pool中的某个缓存页时，该缓存页对应的控制块会被放到old区域的头部，该缓存页再次被访问到时才会把该页放到young区域的头部，前提是这两次访问的时间间隔大于系统变量<code>innodb_old_blocks_time</code>设置的时间间隔，默认1000毫秒</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;innodb_old_blocks_time&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name          <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_old_blocks_time <span class="operator">|</span> <span class="number">1000</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">对于young区域的缓存页来说，我们每次访问一个缓存页就要把它移动到LRU链表的头部，这样频繁的对LRU链表进行节点移动操作也会拖慢速度？为了解决这个问题，MySQL规定只有被访问的缓存页位于young区域的1/4的后边，才会被移动到LRU链表头部，这样就 可以降低调整LRU链表的频率，从而提升性能。</li></ul></div><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/lru.png" alt="" width="600" height="100"></p></li></ul><div class="note success"><p><strong>刷新脏页到磁盘</strong><br>mysql后台有专门的线程每隔一段时间负责把脏页刷新到磁盘，这样可以不影响用户线程处理正常的请求。主要有两种刷新路径：</p><ul class="lvl-0"><li class="lvl-4">1、从LRU链表的冷数据中刷新一部分页面到磁盘。</li><li class="lvl-4">2、从flush链表中刷新一部分页面到磁盘。</li></ul></div><ul class="lvl-0"><li class="lvl-2"><p>每个控制块大约占用缓存页大小的5%，而我们设置的<code>innodb_buffer_pool_size</code>并不包含这部分控制块占用的内存空间大小，也就是说InnoDB在为Buffer Pool向操作系统申请连续的内存空间时，这片连续的内存空间一般会比innodb_buffer_pool_size的值大5%左右，这也是为什么不建议设置<code>innodb_buffer_pool_size</code>超过内存的75%。</p></li><li class="lvl-2"><p>InnoDB增删改查都是直接操作这个<code>buffer pool</code>，并顺序写入<code>undo log</code>和<code>redo log</code>，如果直接操作硬盘就是随机写，效率会非常低</p></li><li class="lvl-2"><p>InnoDB引擎数据更新执行顺序</p></li></ul><blockquote><p>1.加载要查询或修改的硬盘数据所在的页到buffer pool，加载时可能会同时加载相邻的页<br>2.将要修改的数据旧值写入<code>undo log</code>文件，如果事务提交失败，可以用undo日志里的数据进行回滚<br>3.更新<code>buffer pool</code>内存中的数据<br>4.写入<code>redo log buffer</code>(内存)<br>5.提交事务时写入<code>redo log</code>文件，用于在异常情况（如事务提交成功，但buffer pool里的数据尚未写入磁盘，此时宕机）下恢复<code>buffer pool</code>内存中的数据<br>6.写入<code>bin log</code>文件，主要用于恢复数据库磁盘里的数据<br>7.<code>bin log</code>文件记录成功后写入<code>commit</code>标记到<code>redo log</code>文件，保证redo与binlog数据一致性<br>8.<code>buffer pool</code>内存中的数据随机写入磁盘，独立线程每隔一段时间就会刷盘，如果<code>buffer pool</code>写满了也会采用LRU等算法将内存数据写入磁盘</p></blockquote><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png" alt="" width="900" height="600"></p><h3 id="多个Buffer-Pool实例">多个Buffer Pool实例</h3><ul class="lvl-0"><li class="lvl-2"><p>Buffer Pool本质是InnoDB向操作系统申请的一块连续的内存空间，在多线程环境下，访问Buffer Pool中的各种链表都需要加锁处理，在Buffer Pool特别大而且多线程并发访问特别高的情况下，单一的Buffer Pool可能会影响请求的处理速度。<br>所以在Buffer Pool特别大的时候，我们可以把它们拆分成若干个小的Buffer Pool，每个Buffer Pool都称为一个实例，它们都是独立的，独立的去申请内存空间，独立的管理各种链表，所以在多线程并发访问时并不会相互影响，从而提高并发处理能力。</p></li><li class="lvl-2"><p>我们可以在服务器启动的时候通过设置<code>innodb_buffer_pool_instances</code>的值来修改Buffer Pool实例的个数，默认8，最大值是64。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_buffer_pool_instances&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_buffer_pool_instances <span class="operator">|</span> <span class="number">8</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------+-------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>每个Buffer Pool实例实际占内存空间: <code>innodb_buffer_pool_size/innodb_buffer_pool_instances</code></p></li><li class="lvl-2"><p>innodb_buffer_pool_size（默认128M）的值小于1G的时候设置多个实例是无效的，InnoDB会默认把innodb_buffer_pool_instances的值修改为1。</p></li><li class="lvl-2"><p>最佳的innodb_buffer_pool_instances的数量是，innodb_buffer_pool_size除以innodb_buffer_pool_instances，可以让每个Buffer Pool实例达到<code>1个G</code></p></li><li class="lvl-2"><p>mysql服务启动时（故障后重启），会先将<code>redo log</code>中的内容加载到<code>Buffer Pool</code>中，然后在读取<code>undo log</code>进行事务回滚，以此达到重启前的状态</p></li></ul><h3 id="查看Buffer-Pool的状态信息">查看Buffer Pool的状态信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> ENGINE INNODB STATUS\G</span><br><span class="line">………………</span><br><span class="line"><span class="comment">----------------------</span></span><br><span class="line">BUFFER POOL <span class="keyword">AND</span> MEMORY</span><br><span class="line"><span class="comment">----------------------</span></span><br><span class="line">Total <span class="keyword">large</span> memory allocated <span class="number">0</span></span><br><span class="line">Dictionary memory allocated <span class="number">1009326</span></span><br><span class="line">Buffer pool size   <span class="number">65530</span></span><br><span class="line"><span class="keyword">Free</span> buffers       <span class="number">63832</span></span><br><span class="line">Database pages     <span class="number">1689</span></span><br><span class="line"><span class="keyword">Old</span> database pages <span class="number">0</span></span><br><span class="line">Modified db pages  <span class="number">0</span></span><br><span class="line">Pending <span class="keyword">reads</span>      <span class="number">0</span></span><br><span class="line">Pending writes: LRU <span class="number">0</span>, flush list <span class="number">0</span>, single page <span class="number">0</span></span><br><span class="line">Pages made young <span class="number">0</span>, <span class="keyword">not</span> young <span class="number">0</span></span><br><span class="line"><span class="number">0.00</span> youngs<span class="operator">/</span>s, <span class="number">0.00</span> non<span class="operator">-</span>youngs<span class="operator">/</span>s</span><br><span class="line">Pages read <span class="number">1542</span>, created <span class="number">161</span>, written <span class="number">352</span></span><br><span class="line"><span class="number">0.00</span> <span class="keyword">reads</span><span class="operator">/</span>s, <span class="number">0.00</span> creates<span class="operator">/</span>s, <span class="number">0.00</span> writes<span class="operator">/</span>s</span><br><span class="line"><span class="keyword">No</span> buffer pool page gets since the <span class="keyword">last</span> printout</span><br><span class="line">Pages read ahead <span class="number">0.00</span><span class="operator">/</span>s, evicted <span class="keyword">without</span> access <span class="number">0.00</span><span class="operator">/</span>s, Random read ahead <span class="number">0.00</span><span class="operator">/</span>s</span><br><span class="line">LRU len: <span class="number">1689</span>, unzip_LRU len: <span class="number">0</span></span><br><span class="line">I<span class="operator">/</span>O sum[<span class="number">0</span>]:cur[<span class="number">0</span>], unzip sum[<span class="number">0</span>]:cur[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><div class="note success"><p><strong>返回值说明</strong><br>Total memory allocated：代表Buffer Pool向操作系统申请的连续内存空间大小，包括全部控制块、缓存页、以及碎片的大小。<br>Dictionary memory allocated：为数据字典信息分配的内存空间大小，注意这个内存空间和Buffer Pool没啥关系，不包括在Total memory allocated中。<br>Buffer pool size：代表该Buffer Pool可以容纳多少缓存页，注意，单位是页！<br>Free buffers：代表当前Buffer Pool还有多少空闲缓存页，也就是free链表中还有多少个节点。<br>Database pages：代表LRU链表中的页的数量，包含young和old两个区域的节点数量。<br>Old database pages：代表LRU链表old区域的节点数量。<br>Modified db pages：代表脏页数量，也就是flush链表中节点的数量。<br>Pending reads：正在等待从磁盘上加载到Buffer Pool中的页面数量。<br>当准备从磁盘中加载某个页面时，会先为这个页面在Buffer Pool中分配一个缓存页以及它对应的控制块，然后把这个控制块添加到LRU的old区域的头部，但是这个时候真正的磁盘页并没有被加载进来，Pending reads的值会跟着加1。<br>Pending writes LRU：即将从LRU链表中刷新到磁盘中的页面数量。<br>Pending writes flush list：即将从flush链表中刷新到磁盘中的页面数量。<br>Pending writes single page：即将以单个页面的形式刷新到磁盘中的页面数量。<br>Pages made young：代表LRU链表中曾经从old区域移动到young区域头部的节点数量。<br>Page made not young：在将innodb_old_blocks_time设置的值大于0时，首次访问或者后续访问某个处在old区域的节点时由于不符合时间间隔的限制而不能将其移动到young区域头部时，Page made not young的值会加1。<br>youngs/s：代表每秒从old区域被移动到young区域头部的节点数量。<br>non-youngs/s：代表每秒由于不满足时间限制而不能从old区域移动到young区域头部的节点数量。<br>Pages read、created、written：代表读取，创建，写入了多少页。后边跟着读取、创建、写入的速率。<br>Buffer pool hit rate：表示在过去某段时间，平均访问1000次页面，有多少次该页面已经被缓存到Buffer Pool了。<br>young-making rate：表示在过去某段时间，平均访问1000次页面，有多少次访问使页面移动到young区域的头部了。<br>not (young-making rate)：表示在过去某段时间，平均访问1000次页面，有多少次访问没有使页面移动到young区域的头部。<br>LRU len：代表LRU链表中节点的数量。<br>unzip_LRU：代表unzip_LRU链表中节点的数量。<br>I/O sum：最近50s读取磁盘页的总数。<br>I/O cur：现在正在读取的磁盘页数量。<br>I/O unzip sum：最近50s解压的页面数量。<br>I/O unzip cur：正在解压的页面数量。</p></div><h2 id="MyISAM-Key-Buffer">MyISAM Key Buffer</h2><ul class="lvl-0"><li class="lvl-2"><p><code>key_buffer_size</code>规定了系统将多少内存用作MyISAM的索引缓存</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看key buffer设置大小</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;key_buffer_size&#x27;</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>MyISAM增删改成都是直接操作这个<code>Key Buffer</code></p></li><li class="lvl-2"><p>Key Buffer只存放索引，对于数据是读取数据文件</p></li><li class="lvl-2"><p>如果一个读请求到达，能从Key Buffer中找到数据，那么就不再访问myi文件，直接根据data域去找对应的数据</p></li><li class="lvl-2"><p>如果在Key Buffer中找不到，则读取myi中的对应File Block放入Key Buffer的LRU链的头部，并从Key Buffer返回数据</p></li><li class="lvl-2"><p>当我们从“.MYI〞文件中读入File Block到Key Buffer中的Cache Block时候，如果整个Key Buffer中己经没有空闲的Cache Block可以使用的话，将会通过Mysql实现的LRU相关算法将某些Cache Blocl清除出夫，让新进来的File Block有地方待。</p></li></ul><h2 id="InnoDB记录存储结构和索引页结构">InnoDB记录存储结构和索引页结构</h2><p>InnoDB是一个将表中的数据存储到磁盘上的存储引擎，而真正处理数据的过程是发生在内存中的，所以需要把磁盘中的数据加载到内存中，如果是处理写入或修改请求的话，还需要把内存中的内容刷新到磁盘上。<br><br>而我们知道读写磁盘的速度非常慢，和内存读写差了几个数量级，所以当我们想从表中获取某些记录时，InnoDB存储引擎需要一条一条的把记录从磁盘上读出来么？<br>InnoDB采取的方式是：将数据划分为若干个页，以页作为磁盘和内存之间交互的基本单位，InnoDB中页的大小一般为16KB。也就是在一般情况下，一次最少从磁盘中读取16KB的内容到内存中，一次最少把内存中的16KB内容刷新到磁盘中。<br><br>我们平时是以记录为单位来向表中插入数据的，这些记录在磁盘上的存放方式也被称为行格式或者记录格式。<br>InnoDB存储引擎设计了4种不同类型的行格式，分别是Compact、Redundant、Dynamic和Compressed行格式，MySQL5.7以后的默认行格式是Dynamic。<br><br>我们可以在创建或修改表的语句中指定行格式： <code>CREATE TABLE 表名 (列的信息) ROW_FORMAT=行格式名称</code><br>查看行格式<code>SHOW TABLE STATUS LIKE 'table_name'\G</code></p><h3 id="记录行格式">记录行格式</h3><ul class="lvl-0"><li class="lvl-2"><p>Redundant: MySQL5.0之前用的一种行格式，不予深究</p></li><li class="lvl-2"><p>Compact: MySQL 5.1 开始，默认的行记录格式为 Compact<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/row_format.png" alt="" width="1200"></p><ul class="lvl-2"><li class="lvl-4">变长字段长度列表: 存储当前记录中所有变成字段的长度<ul class="lvl-4"><li class="lvl-6">VARCHAR(M)、VARBINARY(M)、各种TEXT类型，各种BLOB类型，拥有这些数据类型的字段称为变长字段，变长字段中存储多少字节的数据是不固定的，所以在存储真实数据的时候需要顺便把这些数据占用的字节数也存起来。</li><li class="lvl-6">如果该可变字段允许存储的最大字节数超过255字节并且真实存储的字节数超过127字节，则使用2个字节，否则使用1个字节。</li></ul></li><li class="lvl-4">NULL值列表: 记录当前记录中允许值为NULL的字段是否为NULL<ul class="lvl-4"><li class="lvl-6">表中的某些列可能存储NULL值，如果把这些NULL值都放到记录的真实数据中存储会很占地方，所以Compact行格式把这些值为NULL的列统一管理起来，存储到NULL值列表。</li><li class="lvl-6">每个允许存储NULL的列对应一个二进制位，二进制位的值为1时，代表该列的值为NULL。二进制位的值为0时，代表该列的值不为NULL。</li></ul></li><li class="lvl-4">记录头信息: 由固定的5个字节组成。5个字节也就是40个二进制位，不同的位代表不同的意思。<ul class="lvl-4"><li class="lvl-6">预留位1 1 没有使用</li><li class="lvl-6">预留位2 1 没有使用</li><li class="lvl-6">delete_mask 1 标记该记录是否被删除</li><li class="lvl-6">min_rec_mask 1 B+树的每层非叶子节点中的最小记录都会添加该标记</li><li class="lvl-6">n_owned 4 表示当前记录拥有的记录数</li><li class="lvl-6">heap_no 13 表示当前记录在页的位置信息</li><li class="lvl-6">record_type 3 表示当前记录的类型，0表示普通记录，1表示B+树非叶子节点记录，2表示最小记录，3表示最大记录</li><li class="lvl-6">next_record 16 表示下一条记录的相对位置</li></ul></li><li class="lvl-4">DB_ROW_ID(row_id)：非必须，6字节，表示行ID，唯一标识一条记录（在没有自定义主键以及Unique键的情况下才会添加该列）</li><li class="lvl-4">DB_TRX_ID：必须，6字节，表示事务ID</li><li class="lvl-4">DB_ROLL_PTR：必须，7字节，表示回滚指针，指向记录对应的 undo 日志位置</li></ul></li><li class="lvl-2"><p>Dynamic: MySQL5.7以后的默认行格式，和Compact行格式挺像，只不过在处理行溢出数据时有所不同</p></li><li class="lvl-2"><p>Compressed: 与Dynamic很像，不同的一点是Compressed行格式会采用压缩算法对页面进行压缩，以节省空间</p></li></ul><div class="note success"><h3 id="数据溢出">数据溢出</h3><p>如果我们定义一个表，表中只有一个VARCHAR字段，如下： CREATE TABLE test_varchar( c VARCHAR(60000) ) 然后往这个字段插入60000个字符，会发生什么？<br><br>前边说过，MySQL中磁盘和内存交互的基本单位是页，也就是说MySQL是以页为基本单位来管理存储空间的，我们的记录都会被分配到某个页中存储。<br><br>而一个页的大小一般是16KB，也就是16384字节，而一个VARCHAR(M)类型的列就最多可以存储65532个字节，这样就可能造成一个页存放不了一条记录的情况。<br><br>在Compact和Redundant行格式中，对于占用存储空间非常大的列，在记录的真实数据处只会存储该列的该列的前768个字节的数据，然后把剩余的数据分散存储在几个其他的页中，<br><br>记录的真实数据处用20个字节存储指向这些页的地址。这个过程也叫做行溢出，存储超出768字节的那些页面也被称为溢出页。<br>Dynamic和Compressed行格式，不会在记录的真实数据处存储字段真实数据的前768个字节，而是把所有的字节都存储到其他页面中，只在记录的真实数据处存储其他页面的地址。</p></div><h3 id="索引页格式">索引页格式</h3><ul class="lvl-0"><li class="lvl-2"><p>Mysql把存放记录的页称为索引页，也可以理解为是数据页。<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/index_page.png" alt="" width="200" height="400"></p></li><li class="lvl-2"><p>一个InnoDB数据页的存储空间大致被划分成了7个部分</p></li></ul><table><thead><tr><th style="text-align:left">英文名称</th><th style="text-align:left">中文含义</th><th style="text-align:left">所占空间</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">File Header</td><td style="text-align:left">文件头部</td><td style="text-align:left">38字节</td><td style="text-align:left">页的一些通用信息</td></tr><tr><td style="text-align:left">Page Header</td><td style="text-align:left">页面头部</td><td style="text-align:left">56字节</td><td style="text-align:left">数据页专有的一些信息</td></tr><tr><td style="text-align:left">Infimum + Supremum</td><td style="text-align:left">最小记录和最大记录</td><td style="text-align:left">26字节</td><td style="text-align:left">两个虚拟的行记录</td></tr><tr><td style="text-align:left">User Records</td><td style="text-align:left">用户记录</td><td style="text-align:left">大小不确定</td><td style="text-align:left">实际存储的行记录内容</td></tr><tr><td style="text-align:left">Free Space</td><td style="text-align:left">空闲空间</td><td style="text-align:left">大小不确定</td><td style="text-align:left">页中尚未使用的空间</td></tr><tr><td style="text-align:left">Page Directory</td><td style="text-align:left">页面目录</td><td style="text-align:left">大小不确定</td><td style="text-align:left">页中的某些记录的相对位置</td></tr><tr><td style="text-align:left">File Trailer</td><td style="text-align:left">文件尾部</td><td style="text-align:left">8字节</td><td style="text-align:left">校验页是否完整</td></tr></tbody></table><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/page_directory.png" alt="" width="800" height="600"></p><ul class="lvl-0"><li class="lvl-2"><p>User Records</p><div class="note info"><ul class="lvl-0"><li class="lvl-2"><p>我们自己存储的记录会按照我们指定的行格式存储到User Records部分。</p></li><li class="lvl-2"><p>但是在一开始生成页的时候，其实并没有User Records这个部分，每当我们插入一条记录，都会从Free Space部分，也就是尚未使用的存储空间中申请一个记录大小的空间划分到User Records部分，</p></li><li class="lvl-2"><p>当Free Space部分的空间全部被User Records部分替代掉之后，也就意味着这个页使用完了，如果还有新的记录插入的话，就需要去申请新的页了。</p></li><li class="lvl-2"><p>当前记录被删除时，则会修改记录头信息中的delete_mask为1，也就是说被删除的记录还在页中，还在真实的磁盘上。</p></li><li class="lvl-2"><p>这些被删除的记录之所以不立即从磁盘上移除，是因为移除它们之后把其他的记录在磁盘上重新排列需要性能消耗。</p></li><li class="lvl-2"><p>所以只是打一个删除标记而已，所有被删除掉的记录都会组成一个所谓的垃圾链表，在这个链表中的记录占用的空间称之为所谓的可重用空间，之后如果有新记录插入到表中的话，可能把这些被删除的记录占用的存储空间覆盖掉。</p></li><li class="lvl-2"><p>同时我们插入的记录在会记录自己在本页中的位置，写入了记录头信息中heap_no部分。 heap_no值为0和1的记录是InnoDB自动给每个页增加的两个记录，称为伪记录或者虚拟记录。</p></li><li class="lvl-2"><p>这两个伪记录一个代表最小记录，一个代表最大记录，这两条存放在页的User Records部分，他们被单独放在一个称为Infimum + Supremum的部分。</p></li><li class="lvl-2"><p>记录头信息中next_record记录了从当前记录的真实数据到下一条记录的真实数据的地址偏移量。这其实是个链表，可以通过一条记录找到它的下一条记录。</p></li><li class="lvl-2"><p>但是需要注意注意再注意的一点是，下一条记录指得并不是按照我们插入顺序的下一条记录，而是按照主键值由小到大的顺序的下一条记录。</p></li><li class="lvl-2"><p>而且规定 Infimum记录（也就是最小记录）的下一条记录就是本页中主键值最小的用户记录，而本页中主键值最大的用户记录的下一条记录就是Supremum记录（也就是最大记录）。</p></li></ul></div></li><li class="lvl-2"><p>Page Directory</p><div class="note info"><ul class="lvl-0"><li class="lvl-2"><p>Page Directory主要是解决记录链表的查找问题。如果我们想根据主键值查找页中的某条记录该咋办？</p></li><li class="lvl-2"><p>按链表查找的办法：从Infimum记录（最小记录）开始，沿着链表一直往后找，总会找到或者找不到。但是时间复杂度不低。</p></li><li class="lvl-2"><p>InnoDB的改进是，为页中的记录再制作了一个目录，他们的制作过程是这样的：</p><ul class="lvl-2"><li class="lvl-4">1、将所有正常的记录（包括最大和最小记录，不包括标记为已删除的记录）划分为几个组。</li><li class="lvl-4">2、每个组的最后一条记录（也就是组内最大的那条记录）的头信息中的n_owned属性表示该记录拥有多少条记录，也就是该组内共有几条记录。</li><li class="lvl-4">3、将每个组的最后一条记录的地址偏移量单独提取出来按顺序存储到靠近页的尾部的地方，这个地方就是所谓的Page Directory，也就是页目录，页面目录中的这些地址偏移量被称为槽（英文名：Slot），所以这个页面目录就是由槽组成的。</li><li class="lvl-4">4、每个分组中的记录条数是有规定的：对于最小记录所在的分组只能有 1 条记录，最大记录所在的分组拥有的记录条数只能在 1~8 条之间，剩下的分组中记录的条数范围只能在是 4~8 条之间。</li></ul></li><li class="lvl-2"><p>这样，一个数据页中查找指定主键值的记录的过程分为两步：</p><ul class="lvl-2"><li class="lvl-4">通过二分法确定该记录所在的槽，并找到该槽所在分组中主键值最小的那条记录。</li><li class="lvl-4">通过记录的next_record属性遍历该槽所在的组中的各个记录。</li></ul></li></ul></div></li><li class="lvl-2"><p>Page Header</p><div class="note info"><p>InnoDB为了能得到一个数据页中存储的记录的状态信息，比如本页中已经存储了多少条记录，第一条记录的地址是什么，页目录中存储了多少个槽等等，特意在页中定义了一个叫Page Header的部分，它是页结构的第二部分，这个部分占用固定的56个字节，专门存储各种状态信息。</p></div></li><li class="lvl-2"><p>File Header</p><div class="note info"><ul class="lvl-0"><li class="lvl-2"><p>File Header针对各种类型的页都通用，也就是说不同类型的页都会以File Header作为第一个组成部分，它描述了一些针对各种页都通用的一些信息，</p></li><li class="lvl-2"><p>比方说页的类型，这个页的编号是多少，它的上一个页、下一个页是谁，页的校验和等等，这个部分占用固定的38个字节。</p></li><li class="lvl-2"><p>页的类型有很多种，包括Undo日志页、段信息节点、Insert Buffer空闲列表、Insert Buffer位图、系统页、事务系统数据、表空间头部信息、扩展描述页、溢出页(存储变长字段的大数据)、以及我们正在讲的索引页，等等。</p></li><li class="lvl-2"><p>同时通过上一个页、下一个页建立一个双向链表把许许多多的页就串联起来，而无需这些页在物理上真正连着。</p></li><li class="lvl-2"><p>但是并不是所有类型的页都有上一个和下一个页的属性，数据页是有这两个属性的，所以所有的数据页其实是一个双向链表。</p></li></ul></div></li><li class="lvl-2"><p>File Trailer</p><div class="note info"><ul class="lvl-0"><li class="lvl-2"><p>InnoDB存储引擎会把数据存储到磁盘上，但是磁盘速度太慢，需要以页为单位把数据加载到内存中处理，如果该页中的数据在内存中被修改了，那么在修改后的某个时间需要把数据同步到磁盘中。</p></li><li class="lvl-2"><p>但是在同步了一半的时候断电了咋办？为了检测一个页是否完整（也就是在同步的时候有没有发生只同步一半的尴尬情况），InnoDB每个页的尾部都加了一个File Trailer部分，这个部分由8个字节组成，可以分成2个小部分：</p><ul class="lvl-2"><li class="lvl-4">前4个字节代表页的校验和<ul class="lvl-4"><li class="lvl-6">这个部分是和File Header中的校验和相对应的。每当一个页面在内存中修改了，在同步之前就要把它的校验和算出来，因为File Header在页面的前边，所以校验和会被首先同步到磁盘，当完全写完时，校验和也会被写到页的尾部，如果完全同步成功，则页的首部和尾部的校验和应该是一致的。如果写了一半儿断电了，那么在File Header中的校验和就代表着已经修改过的页，而在File Trailer中的校验和代表着原先的页，二者不同则意味着同步中间出了错。</li></ul></li><li class="lvl-4">后4个字节代表页面被最后修改时对应的日志序列位置（LSN），这个也和校验页的完整性有关。</li></ul></li><li class="lvl-2"><p>这个File Trailer与File Header类似，都是所有类型的页通用的。</p></li></ul></div></li></ul><h2 id="InnoDB表空间-TableSpace">InnoDB表空间(TableSpace)</h2><ul class="lvl-0"><li class="lvl-2"><p>系统表空间(System Tablespace): 对应着文件系统中一个或多个实际文件，一般是<code>ibdata1</code>，表空间 ID（Space ID）是0</p></li><li class="lvl-2"><p>独立表空间(File-Per-Table Tablespaces): 对应着文件系统中一个名称为<code>dbname/tablename.ibd</code>的实际文件</p></li><li class="lvl-2"><p>临时表空间(Temporary Tablespaces): 对应着文件系统中一个或多个实际文件，一般是<code>ibtmp1</code>和<code>#innodb_temp/temp_数字.ibt</code></p></li><li class="lvl-2"><p>通用表空间(General Tablespaces): 允许多个表存储数据的共享表空间</p></li><li class="lvl-2"><p>Undo Tablespaces: 对应着文件系统中的<code>undo_001</code>和<code>undo_002</code></p></li><li class="lvl-2"><p>关于表空间的详细说明可以参考<a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-tablespace.html">mysql官方文档</a></p></li></ul><blockquote><p>可以查看<code>information_schema.INNODB_TABLESPACES</code>获取表空间信息,<code>information_schema.INNODB_DATAFILES</code>获取表空间对应文件系统的文件路径信息</p></blockquote><h3 id="表空间与页的关系">表空间与页的关系</h3><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/tablespace.png" alt="" width="800" height="500"></p><h3 id="双写缓冲区-双写机制">双写缓冲区/双写机制</h3><ul class="lvl-0"><li class="lvl-2"><p>双写缓冲区/双写机制是InnoDB的三大特性之一，还有两个是Buffer Pool、自适应Hash索引。</p></li><li class="lvl-2"><p>它是一种特殊文件flush技术，带给InnoDB存储引擎的是数据页的可靠性。它的作用是，在把页写到数据文件之前，InnoDB先把它们写到一个叫doublewrite buffer（双写缓冲 区）的连续区域内，在写doublewrite buffer完成后，InnoDB才会把页写到数据文件的适当的位置。如果在写页的过程中发生意外崩溃，InnoDB在稍后的恢复过程中在doublewrite buffer中找到完好的page副本用于恢复。</p></li><li class="lvl-2"><p>所以，虽然叫双写缓冲区，但是这个缓冲区不仅在内存中有，更多的是属于MySQL的系统表空间，属于磁盘文件的一部分。</p></li><li class="lvl-2"><p>正常的情况下, MySQL写数据页时，会写两遍到磁盘上，第一遍是写到doublewrite buffer，第二遍是写到真正的数据文件中。如果发生了极端情况（断电），InnoDB再次启动后，发现了一个页数据已经损坏，那么此时就可以从doublewrite buffer中进行数据恢复了。</p></li><li class="lvl-2"><p>doublewrite buffer的作用有两个:</p><ul class="lvl-2"><li class="lvl-4">提高innodb把缓存的数据写到硬盘这个过程的安全性；</li><li class="lvl-4">innodb的事务日志不需要包含所有数据的前后映像,而是二进制变化量，这可以节省大量的IO。</li></ul></li><li class="lvl-2"><p>doublewrite buffer与Redo Log的区别: Redo Log日志中记录的是对页的物理操作，而doublewrite buffer记录的是页面的全量记录</p></li></ul><h2 id="InnoDB元数据表">InnoDB元数据表</h2><ul class="lvl-0"><li class="lvl-2"><p>information_schema数据库</p></li></ul><table><thead><tr><th style="text-align:left">mysql8</th><th style="text-align:left">mysql5</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">INNODB_TABLES</td><td style="text-align:left">INNODB_SYS_TABLES</td><td style="text-align:left">整个InnoDB存储引擎中所有的表的信息</td></tr><tr><td style="text-align:left">INNODB_COLUMNS</td><td style="text-align:left">INNODB_SYS_COLUMNS</td><td style="text-align:left">整个InnoDB存储引擎中所有的列的信息</td></tr><tr><td style="text-align:left">INNODB_INDEXES</td><td style="text-align:left">INNODB_SYS_INDEXES</td><td style="text-align:left">整个InnoDB存储引擎中所有的索引的信息</td></tr><tr><td style="text-align:left">INNODB_FIELDS</td><td style="text-align:left">INNODB_SYS_FIELDS</td><td style="text-align:left">整个InnoDB存储引擎中所有的索引对应的列的信息</td></tr><tr><td style="text-align:left">INNODB_FOREIGN</td><td style="text-align:left">INNODB_SYS_FOREIGN</td><td style="text-align:left">整个InnoDB存储引擎中所有的外键的信息</td></tr><tr><td style="text-align:left">INNODB_FOREIGN_COLS</td><td style="text-align:left">INNODB_SYS_FOREIGN_COLS</td><td style="text-align:left">整个InnoDB存储引擎中所有的外键对应列的信息</td></tr><tr><td style="text-align:left">INNODB_TABLESPACES</td><td style="text-align:left">INNODB_SYS_TABLESPACES</td><td style="text-align:left">整个InnoDB存储引擎中所有的表空间信息</td></tr><tr><td style="text-align:left">INNODB_DATAFILES</td><td style="text-align:left">INNODB_SYS_DATAFILES</td><td style="text-align:left">整个InnoDB存储引擎中所有的表空间对应文件系统的文件路径信息</td></tr><tr><td style="text-align:left">INNODB_VIRTUAL</td><td style="text-align:left">INNODB_SYS_VIRTUAL</td><td style="text-align:left">整个InnoDB存储引擎中所有的虚拟生成列的信息</td></tr></tbody></table><h2 id="redo-log-和-undo-log"><em>redo log</em> 和 <em>undo log</em></h2><ul class="lvl-0"><li class="lvl-2"><p>前文关于事务的介绍中，我们提到过，mysql的Innodb引擎在事务的具体实现机制上采用的是WAL(Write-ahead logging，预写 式日志)机制来实现的，具体来说就是 <em><code>redo log</code></em> 和 <em><code>undo log</code></em>。</p></li><li class="lvl-2"><p>在机器掉电重启之后Mysql系统需要知道之前的操作是成功了，还是只有部分成功或者是失败了(为了恢复状态)。如果使用了WAL，那么在重启之后系统可以通过比较日志和系统状态来决定是继续完成操作还是撤销操作。</p></li></ul><h3 id="redo-log"><em>redo log</em></h3><p><em><code>redo log</code></em> 称为重做日志，每当有操作时，在数据变更之前（此时事务并没有提交，所以可能需要回滚，回滚是通过<code>undo log</code>记录的）将操作写入 <strong>redo log</strong>， 这样当发生掉电之类的情况时系统可以在重启后继续操作。<br><strong>redo log</strong> 用来在系统 Crash 重启之类的情况时修复数据，以此来保证事务的持久性<br><strong>binlog</strong> 记录完成后会在 <strong>redo log</strong>中加入一个<code>commit</code>标记，表示redo与binlog数据一致</p><div class="tips"><p><em><strong><code>redo log</code>的作用</strong></em><br>我们知道，InnoDB的增删改查都是在<code>Buffer Pool</code>完成的，如果我们只在内存的 Buffer Pool 中修改了页面，假设在事务提交后突然发生了某个故障，导致内存中的数据都失效了，那么这个已经提交了的事务对数据库中所做的更改也就跟着丢失了，这是我们所不能忍受的。那么如何保证这个持久性呢？</p><p>我们只是想让已经提交了的事务对数据库中数据所做的修改永久生效，即使后来系统崩溃，在重启后也能把这种修改恢复出来。<br>所以我们其实没有必要在每次事务提交时就把该事务在内存中修改过的全部页面刷新到磁盘，因为这样做效率太低(还是那个原则，把随机写改为顺序写)，我们只需要把修改了哪些东西记录一下就好，<br>比方说某个事务将系统表空间中的第 100号 页面中偏移量为 1000 处的那个字节的值 1 改成 2 ，我们只需要记录一下：<br><em><strong>将第 0 号表空间的 100 号页面的偏移量为 1000 处的值更新为 2。</strong></em><br>这样我们在事务提交时，把上述内容刷新到磁盘中，即使之后系统崩溃了，重启之后只要按照上述内容所记录的步骤重新更新一下数据页，那么该事务对数据库中所做的修改又可以被恢复出来，也就意味着满足持久性的要求。</p><p>理论上，<strong>redo log</strong>的容量足够恢复因掉电等原因导致<code>Buffer Pool</code>没有及时刷入磁盘的内容。否则<strong>redo log</strong>因容量不够而被覆盖，而此时<code>Buffer Pool</code>尚未刷入磁盘，就不能保证事务的持久性了</p><p>这样做与如下好处：<br>1、redo 日志占用的空间非常小，存储<em>表空间ID</em>、<em>页号</em>、<em>偏移量</em> 以及 <em>需要更新的值</em> 所需的存储空间是很小的。<br>2、redo 日志是顺序写入磁盘的，在执行事务的过程中，每执行一条语句，就可能产生若干条 redo 日志，这些日志是按照产生的顺序写入磁盘的，也就是使用 <em>顺序IO</em>。</p></div><h3 id="redo日志格式">redo日志格式</h3><p>InnoDB 们针对事务对数据库的不同修改场景定义了多种类型的redo日志，但是绝大部分类型的 redo 日志都有下边这种通用的结构：<br>type：该条 redo 日志的类型，redo 日志设计大约有 53 种不同的类型日志。<br>space ID：表空间 ID。<br>page number：页号。<br>data：该条 redo 日志的具体内容。</p><ul class="lvl-0"><li class="lvl-2"><p>type类型有很多种，根据type的不同，redo日志格式中还会增加其它结构</p><ul class="lvl-2"><li class="lvl-4">比如简单的类型中会包含修改位置的偏移量或者修改数据的长度，等等，如修改单条记录</li><li class="lvl-4">复杂一些的类型，如表中包含多少个索引，那么执行一条insert语句就会修改非常多的页面(聚簇索引和二级索引对应的B+树)，针对某一棵 B+树来说，既可能更新叶子节点页面，也可能更新非叶子节点页面，也可能创建新的页面（在该记录插入的叶子节点的剩余空间比较少，不足以存放该记录时，会进行页面的分裂，在非叶子节点页面中添加目录项记录）。在语句执行过程中，INSERT 语句对所有页面的修改都得保存到 redo 日志中去。这个实现起来是非常麻烦的，我们这里不做详细说明。</li></ul></li><li class="lvl-2"><p>redo日志格式类型非常多，如果不是为了写一个解析 redo 日志的工具或者自己开发一套 redo 日志系统的话，那就不需要去研究 InnoDB 中的 redo 日志具体格式。只要记住：redo 日志会把事务在执行过程中对数据库所做的所有修改都记录下来，在之后系统崩溃重启后可以把事务所做的任何修改都恢复出来。</p></li></ul><h3 id="redo-log-buffer">redo log buffer</h3><p>写入 redo 日志时也不能直接直接写到磁盘上，<br>实际上在服务器启动时就向操作系统申请了一大片称之为 redo log buffer 的连续内存空间，翻译成中文就是 redo 日志缓冲区，<br>我们也可以简称为 log buffer。</p><p>我们可以通过启动参数 <code>innodb_log_buffer_size</code> 来指定 log buffer 的大小，该启动参数的默认值为 16MB。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_log_buffer_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name          <span class="operator">|</span> <span class="keyword">Value</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> innodb_log_buffer_size <span class="operator">|</span> <span class="number">16777216</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+----------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><strong><code>redo log buffer</code></strong> 何时刷入磁盘</p><ul class="lvl-2"><li class="lvl-4"><p>1、log buffer 空间不足时</p><blockquote><p>log buffer 的大小是有限的（通过系统变量innodb_log_buffer_size 指定），如果不停的往这个有限大小的 log buffer 里塞入日志，很快它就会被填满。InnoDB 认为如果当前写入 log buffer 的 redo 日志量已经占满了 log buffer 总容量的大约一半左右，就需要把这些日志刷新到磁盘上。</p></blockquote></li><li class="lvl-4"><p>2、事务提交时</p><blockquote><p>我们前边说过之所以使用 redo 日志主要是因为它占用的空间少，还是顺序写，在事务提交时可以不把修改过的 Buffer Pool 页面刷新到磁盘，但是为了保证持久性，必须要把修改这些页面对应的 redo 日志刷新到磁盘。</p></blockquote></li><li class="lvl-4"><p>3、后台有一个线程，大约每秒都会刷新一次 log buffer 中的 redo 日志到磁盘。</p></li><li class="lvl-4"><p>4、正常关闭服务器时等等。</p></li><li class="lvl-4"><p>5、MySQL8.0.30之前的版本，redo日志的大小由两个变量控制</p><ul class="lvl-4"><li class="lvl-6">1）<code>innodb_log_files_in_group</code>：REDO 日志磁盘上的文件个数，默认为2。文件名称：ib_logfile0,ib_logfile1</li><li class="lvl-6">2）<code>innodb_log_file_size</code>：REDO 日志磁盘上单个文件的大小，默认为48M。</li><li class="lvl-6">3）当前的日志大小为单个48M，两个组，也就是一共96M。</li></ul></li><li class="lvl-4"><p>6、MySQL8.0.30引入了一个新特性：动态调整redo日志的大小，默认redo日志文件位于datadir下的一个目录<code>#innodb_redo</code>下，redo log 文件存放的位置由参数 <code>innodb_log_group_home_dir</code> 控制，这里要注意，该目录下必须创建<code>#innodb_redo</code>目录，否则会启动失败</p><ul class="lvl-4"><li class="lvl-6">redo动态日志总大小通过参数<code>innodb_redo_log_capacity</code>设置，默认100M，最大重做日志容量为 128GB，InnoDB维护了32个redo日志文件，每个文件的大小是<code>1/32 * innodb_redo_log_capacity</code></li><li class="lvl-6">该版本以及之后的版本，参数 <code>innodb_log_file_size</code> 和 <code>innodb_log_files_in_group</code> 已经被废弃</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_redo_log_capacity&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name            <span class="operator">|</span> <span class="keyword">Value</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> innodb_redo_log_capacity <span class="operator">|</span> <span class="number">104857600</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-----------+</span></span><br><span class="line"></span><br><span class="line"># 设置为<span class="number">2</span>G</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist innodb_redo_log_capacity<span class="operator">=</span><span class="number">2</span><span class="operator">*</span><span class="number">1024</span><span class="operator">*</span><span class="number">1024</span><span class="operator">*</span><span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line"># 查看redo log是否resize成功</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> STATUS <span class="keyword">LIKE</span> <span class="string">&#x27;Innodb_redo_log_resize_status&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                 <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Innodb_redo_log_resize_status <span class="operator">|</span> OK    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 查看redo log resize后的值</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> STATUS <span class="keyword">LIKE</span> <span class="string">&#x27;Innodb_redo_log_capacity_resized&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                    <span class="operator">|</span> <span class="keyword">Value</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Innodb_redo_log_capacity_resized <span class="operator">|</span> <span class="number">2147483648</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-----------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-4"><li class="lvl-6"><p>有两种类型的redo日志文件：</p><ul class="lvl-6"><li class="lvl-8">ordinary：指被使用的redo日志文件，命名规则是：#ib_redoN，这里的N是日志文件号</li><li class="lvl-8">spare：指等待被使用的redo日志文件，命名规则是：#ib_redoN_tmp，这里的N是日志文件号</li></ul></li><li class="lvl-6"><p>可以通过查询 <code>performance_schema.innodb_redo_log_files</code> 来查看有关活动重做日志文件的信息</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> FILE_ID, START_LSN, END_LSN, SIZE_IN_BYTES, IS_FULL, CONSUMER_LEVEL  <span class="keyword">FROM</span> performance_schema.innodb_redo_log_files;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----------+---------------+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> FILE_ID <span class="operator">|</span> START_LSN <span class="operator">|</span> END_LSN   <span class="operator">|</span> SIZE_IN_BYTES <span class="operator">|</span> IS_FULL <span class="operator">|</span> CONSUMER_LEVEL <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----------+---------------+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">21</span> <span class="operator">|</span> <span class="number">348829696</span> <span class="operator">|</span> <span class="number">352104448</span> <span class="operator">|</span>       <span class="number">3276800</span> <span class="operator">|</span>       <span class="number">0</span> <span class="operator">|</span>              <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+-----------+-----------+---------------+---------+----------------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-214 <span class="comment">#innodb_redo]# ll</span></span><br><span class="line">总用量 102400</span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo21</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo22_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo23_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo24_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo25_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo26_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo27_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo28_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo29_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo30_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo31_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo32_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo33_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo34_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo35_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo36_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo37_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo38_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo39_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo40_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo41_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo42_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo43_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo44_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo45_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo46_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo47_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo48_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo49_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo50_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo51_tmp</span></span><br><span class="line">-rw-r----- 1 mysql mysql 3276800 10月 13 07:50 <span class="comment">#ib_redo52_tmp</span></span><br></pre></td></tr></table></figure></li></ul></li><li class="lvl-2"><p><strong><code>innodb_flush_log_at_trx_commit</code></strong> 该变量有 3 个可选的值：<br>0：当该系统变量值为0时，表示在事务提交时不立即向磁盘中同步redo日志，这个任务是交给后台线程做的。这样很明显会加快请求处理速度，但是如果事务提交后服务器挂了，后台线程没有及时将 redo 日志刷新到磁盘，那么该事务对页面的修改会丢失。<br>1：当该系统变量值为 1 时，表示在事务提交时需要将 redo 日志同步到磁盘，可以保证事务的持久性。1 也是 innodb_flush_log_at_trx_commit 的默认值。<br>2：当该系统变量值为 2 时，表示在事务提交时需要将 redo 日志写到操作系统的缓冲区中，但并不需要保证将日志真正的刷新到磁盘。这种情况下如果数据库挂了，操作系统没挂的话，事务的持久性还是可以保证的，但是操作系统也挂了的话，那就不能保证持久性了</p></li><li class="lvl-2"><p>崩溃后的恢复为什么不用 binlog？</p><div class="tips"><p>1、这两者使用方式不一样<br>binlog 会记录表所有更改操作，包括更新删除数据，更改表结构等等，主要用于人工恢复数据，而 redo log 对于我们是不可见的，它是 InnoDB 用于保证crash-safe 能力的，也就是在事务提交后 MySQL 崩溃的话，可以保证事务的持久性，即事务提交后其更改是永久性的。<br>一句话概括：binlog 是用作人工恢复数据，redo log 是 MySQL 自己使用，用于保证在数据库崩溃时的事务持久性。<br>2、redo log 是 InnoDB 引擎特有的，binlog 是 MySQL 的 Server 层实现的,所有引擎都可以使用。<br>3、redo log 是物理日志，记录的是“在某个数据页上做了什么修改”，恢复的速度更快；binlog 是逻辑日志，记录的是这个语句的原始逻辑，比如“给 ID=2这的 c 字段加 1 ” ；<br>4、redo log 是“循环写”的日志文件，redo log 只会记录未刷盘的日志，已经刷入磁盘的数据都会从 redo log 这个有限大小的日志文件里删除。binlog 是追加日志，保存的是全量的日志。<br>5、最重要的是，当数据库 crash 后，想要恢复未刷盘但已经写入 redo log 和 binlog 的数据到内存时，binlog 是无法恢复的。虽然 binlog 拥有全量的日志，但没有一个标志让 innoDB 判断哪些数据已经入表(写入磁盘)，哪些数据还没有。<br><br>比如，binlog 记录了两条日志：<br><br>给 ID=2 这一行的 c 字段加 1<br>给 ID=2 这一行的 c 字段加 1<br>在记录 1 入表后，记录 2 未入表时，数据库 crash。重启后，只通过 binlog 数据库无法判断这两条记录哪条已经写入磁盘，哪条没有写入磁盘，不管是两条都恢复至内存，还是都不恢复，对 ID=2 这行数据来说，都不对。<br><br>但 redo log 不一样，只要刷入磁盘的数据，都会从 redo log 中抹掉，数据库重启后，直接把 redo log 中的数据都恢复至内存就可以了。</p></div></li></ul><h3 id="undo-log"><em>undo log</em></h3><p><em><code>undo log</code></em> 称为撤销日志，当一些变更执行到一半无法完成时，可以根据撤销日志恢复到变更之间的状态。<br><strong>undo log</strong> 用来保证事务的原子性</p><div class="tips"><p>为了实现事务的原子性，InnoDB 存储引擎在实际进行增、删、改一条记录时，都需要先把对应的 undo 日志记下来。一般每对一条记录做一次改动，就对应着一条 undo 日志，但在某些更新记录的操作中，也可能会对应着 2 条 undo 日志。</p><p>一个事务在执行过程中可能新增、删除、更新若干条记录，也就是说需要记录很多条对应的 undo 日志，这些 undo 日志会被从 0 开始编号，也就是说根据生成的顺序分别被称为第 0 号 undo 日志、第 1 号 undo 日志、…、第 n 号 undo日志等，这个编号也被称之为 undo NO。</p><p>我们前边说明表空间的时候说过，表空间其实是由许许多多的页面构成的，页面默认大小为 16KB。这些页面有不同的类型，其中有一种称之为FIL_PAGE_UNDO_LOG 类型的页面是专门用来存储 undo 日志的。也就是说 Undo page 跟储存的数据和索引的页等是类似的。<br>FIL_PAGE_UNDO_LOG 页面可以从系统表空间中分配，也可以从一种专门存放undo日志的表空间，也就是所谓的 undo tablespace 中分配。</p></div><ul class="lvl-0"><li class="lvl-2"><p><em><code>undo log</code></em> 与更新操作对应的日志记录条数</p><ul class="lvl-2"><li class="lvl-4">insert: 记录1条日志，主要是把这条记录的主键信息记上，回滚这个插入操作时把这条记录删除就好了</li><li class="lvl-4">delete: 记录1条日志，undo log日志类型为 <code>TRX_UNDO_DEL_MARK_REC</code> ，将记录的 delete_mask 值被设置为 1，回滚这个删除操作时改回0就好了</li><li class="lvl-4">update: 分两种情况，更新记录主键与不更新记录主键<ul class="lvl-4"><li class="lvl-6">更新记录主键: 在对该记录进行 delete mark 操作前，会记录一条类型为 <code>TRX_UNDO_DEL_MARK_REC</code> 的 undo 日志；之后插入新记录时，会记录一条类型为 <code>TRX_UNDO_INSERT_REC</code> 的 undo 日志，也就是说每对一条记录的主键值做改动时，会记录 2 条 undo 日志。</li><li class="lvl-6">不更新记录主键: 记录1条日志，类型为 <code>TRX_UNDO_UPD_EXIST_REC</code></li></ul></li></ul></li></ul><h3 id="Redo-日志和-Undo-日志的关系">Redo 日志和 Undo 日志的关系</h3><p>数据库崩溃重启后，需要先从 redo log 中把未落盘的脏页数据恢复回来，重新写入磁盘，保证用户的数据不丢失。当然，在崩溃恢复中还需要把未提交的事务进行回滚操作。由于回滚操作需要 undo log 日志支持，undo log 日志的完整性和可靠性需要 redo log 日志来保证，所以数据库崩溃需要先做 redo log 数据恢复，然后做 undo log 回滚。</p><p>事务进行过程中，每次 sql 语句执行，都会记录 undo log 和 redo log，然后更新数据形成脏页。事务执行 COMMIT 操作时，会将本事务相关的所有 redo log 进行落盘，只有所有的 redo log 落盘成功，才算 COMMIT 成功。然后内存中的 undo log 和脏页按照同样的规则进行落盘。如果此时发生崩溃，则只使用 redo log 恢复数据。</p><div class="tips"><p><strong>知识面拓展</strong><br><em>Commit Logging</em> 和 <em>Shadow Paging</em><br>事务的日志类型的实现除了 WAL(Write-ahead logging，预写式日志)外，还有<code>Commit Logging</code>(提交日志)，这种方式只有在日志记录全部都安全落盘，数据库在日志中看到代表事务成功提交的“提交记录”(Commit Record)后，才会根据日志上的信息对真正的数据进行修改，修改完成后，再在日志中加入一条“结束记录”(End Record)表示事务已完成持久化。两者的区别是，WAL 允许在事务提交之前，提前写入变动数据，而 Commit Logging 则不行。阿里的 OceanBase 则是使用的 Commit Logging 来实现事务。</p><p>实现事务的原子性和持久性除日志外，还有另外一种称为<code>Shadow Paging”</code>(有中文资料翻译为“影子分页”)的事务实现机制，常用的轻量级数据库 SQLite Version 3 采用的事务机制就是 Shadow Paging。<br>Shadow Paging 的大体思路是对数据的变动会写到硬盘的数据中，但并不是直接就地修改原先的数据，而是先将数据复制一份副本，保留原数据，修改副本数据。在事务过程中，被修改的数据会同时存在两份，一份是修改前的数据，一份是修改后的数据，这也是“影子”(Shadow)这个名字的由来。当事务成功提交，所有数据的修改都成功持久化之后，最后一步是去修改数据的引用指针，将引用从原数据改为新复制出来修改后的副本，最后的“修改指针”这个操作将被 认为是原子操作，现代磁盘的写操作可以认为在硬件上保证了不会出现“改了半个值”的现象。所以 Shadow Paging 也可以保证原子性和持久性。Shadow Paging 实现事务要比 Commit Logging 更加简单，但涉及隔离性与并发锁时，Shadow Paging 实现的事务并发能力就相对有限，因此在高性能的数据库中应用不多。</p></div><h2 id="数据库锁">数据库锁</h2><ul class="lvl-0"><li class="lvl-2"><p>从性能上分为<code>乐观锁</code>(用版本对比来实现)和<code>悲观锁</code></p></li><li class="lvl-2"><p>从对数据库操作的类型分，分为<code>读锁</code>和<code>写锁</code>(都属于悲观锁)</p></li></ul><blockquote><p>读锁（共享锁，S锁[Shared]）：针对同一份数据，多个读操作可以同时进行而不会互相影响。读锁可以认为没有加锁，可读但不可写，当写锁锁住数据时，读锁也会不可获取。<br>写锁（排它锁，X锁[eXclusive]）：当前写操作没有完成前，它会阻断其他写锁和读锁</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 给表加读锁</span><br><span class="line"># 当前session和其他session都可以读该表,当前session中插入或者更新锁定的表都会报错，其他session插入或更新则会等待</span><br><span class="line">mysql<span class="operator">&gt;</span> lock <span class="keyword">table</span> actor read;</span><br><span class="line"></span><br><span class="line"># 给表加写锁</span><br><span class="line"># 当前session对该表的增删改查都没有问题，其他session对该表的所有操作被阻塞</span><br><span class="line">mysql<span class="operator">&gt;</span> lock <span class="keyword">table</span> actor write;</span><br><span class="line"></span><br><span class="line"># 查看哪些表上加了锁</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">open</span> tables;</span><br><span class="line"># 查看指定表</span><br><span class="line"># In_use<span class="operator">=</span><span class="number">1</span>表示被加了写锁</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">open</span> tables <span class="keyword">like</span> <span class="string">&#x27;actor&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> Database <span class="operator">|</span> <span class="keyword">Table</span> <span class="operator">|</span> In_use <span class="operator">|</span> Name_locked <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> test     <span class="operator">|</span> actor <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------+--------+-------------+</span></span><br><span class="line"></span><br><span class="line"># 解锁</span><br><span class="line">mysql<span class="operator">&gt;</span> unlock tables;</span><br></pre></td></tr></table></figure><blockquote><p>对MyISAM表的读操作(加读锁) ,不会阻寒其他进程对同一表的读请求,但会阻赛对同一表的写请求。只有当读锁释放后,才会执行其它进程的写操作。<br>对MylSAM表的写操作(加写锁) ,会阻塞其他进程对同一表的读和写操作,只有当写锁释放后,才会执行其它进程的读写操作</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>从对数据操作的粒度分，分为<code>表锁</code>和<code>行锁</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 行锁<span class="keyword">for</span> <span class="keyword">update</span>，这样其他session只能读这行数据，修改则会被阻塞，直到锁定行的session提交</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">10</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br></pre></td></tr></table></figure><blockquote><p>注意行锁的查询条件必须走索引，否则会升级为表锁<br>尽可能让所有数据检索都通过索引来完成，避免无索引行锁升级为表锁<br>合理设计索引，尽量缩小锁的范围<br>尽量控制事务大小，减少锁定资源量和时间长度，涉及事务加锁的sql尽量放在事务最后执行</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>行锁分析</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> status <span class="keyword">like</span> <span class="string">&#x27;innodb_row_lock%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                 <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_current_waits <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_time          <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_time_avg      <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_time_max      <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Innodb_row_lock_waits         <span class="operator">|</span> <span class="number">0</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line">Innodb_row_lock_current_waits: 当前正在等待锁定的数量</span><br><span class="line">Innodb_row_lock_time: 从系统启动到现在锁定总时间长度（等待总时长）</span><br><span class="line">Innodb_row_lock_time_avg: 每次等待所花平均时间（等待平均时长）</span><br><span class="line">Innodb_row_lock_time_max: 从系统启动到现在等待最长的一次所花时间</span><br><span class="line">Innodb_row_lock_waits: 系统启动后到现在总共等待的次数（等待总次数）</span><br></pre></td></tr></table></figure><div class="note success"><ul class="lvl-0"><li class="lvl-2"><p>MyISAM不支持事务且只支持表锁，在执行查询语句SELECT前，会自动给涉及的所有表加读锁,在执行update、insert、delete操作会自动给涉及的表加写锁。</p></li><li class="lvl-2"><p>InnoDB支持事务和行锁，在执行查询语句SELECT时(非串行隔离级别)，不会加锁。但是update、insert、delete操作会加行锁。</p></li><li class="lvl-2"><p>读锁会阻塞写，但是不会阻塞读。而写锁则会把读和写都阻塞。</p></li></ul></div><ul class="lvl-0"><li class="lvl-2"><p><code>间隙锁</code>(Gap Lock): 锁的就是两个值之间的空隙，用于解决幻读。间隙锁是在可重复读隔离级别下才会生效。</p></li></ul><blockquote><p>如account表的主键id是不连续的（1，2，3，10，20），那么间隙就有id为 (3,10)，(10,20)，(20,正无穷) 这三个区间<br>在Session_1下面执行 <code>update account set age = 10 where id &gt; 8 and id &lt;18;</code><br>则其他Session没法在这个范围所包含的所有行记录(包括间隙行记录)以及行记录所在的间隙里插入或修改任何数据，即id在 (3,20]区间都无法修改数据，注意最后那个20也是包含在内的。<br>注意这里锁住的最后一条记录不是id=18，而是18所在的间隙区间都会锁住。<br>尽可能减少检索条件范围，避免间隙锁</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>临键锁</code>(Next-key Locks): 是行锁与间隙锁的组合。像上面那个例子里的这个(3,20]的整个区间可以叫做临键锁。</p></li><li class="lvl-2"><p>查看锁等待详细信息</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> engine innodb status\G;</span><br></pre></td></tr></table></figure><h2 id="慢查询">慢查询</h2><ul class="lvl-0"><li class="lvl-2"><p>什么是慢查询<br>慢查询日志，顾名思义，就是查询花费大量时间的日志，是指mysql记录所有执行超过<code>long_query_time</code>参数设定的时间阈值的SQL语句的日志。该日志能为SQL语句的优化带来很好的帮助。默认情况下，慢查询日志是关闭的，要使用慢查询日志功能，首先要开启慢查询日志功能。</p></li><li class="lvl-2"><p>开启慢查询</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;slow_query_log&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name  <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------+</span></span><br><span class="line"><span class="operator">|</span> slow_query_log <span class="operator">|</span> OFF   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 开启慢查询日志</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">GLOBAL</span> slow_query_log<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"># 默认阈值是<span class="number">10</span>秒，超过这个阈值就会记录慢查询日志，可以根据需要进行修改</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;long_query_time&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name   <span class="operator">|</span> <span class="keyword">Value</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> long_query_time <span class="operator">|</span> <span class="number">10.000000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+-----------+</span></span><br><span class="line"></span><br><span class="line"># 如果运行的<span class="keyword">SQL</span>语句没有使用索引，则MySQL数据库也可以将这条<span class="keyword">SQL</span>语句记录到慢查询日志文件，默认关闭</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;log_queries_not_using_indexes&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                 <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> log_queries_not_using_indexes <span class="operator">|</span> OFF   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 产生的慢查询日志，可以指定输出的位置，通过参数log_output来控制，可以输出到[<span class="keyword">TABLE</span>][FILE][FILE,<span class="keyword">TABLE</span>]，默认FILE，如果指定<span class="keyword">TABLE</span>，则会记录在mysql.slow_log表中</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;log_output&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> log_output    <span class="operator">|</span> FILE  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 生成的日志文件默认在datadir指定的目录下，也可以自己设置</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> VARIABLES <span class="keyword">like</span> <span class="string">&#x27;slow_query_log_file&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name       <span class="operator">|</span> <span class="keyword">Value</span>                                                       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> slow_query_log_file <span class="operator">|</span> <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>soft<span class="operator">/</span>mysql8<span class="operator">/</span>datas<span class="operator">/</span>mysql<span class="operator">/</span>ip<span class="number">-10</span><span class="number">-250</span><span class="number">-0</span><span class="number">-214</span><span class="operator">-</span>slow.log <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>慢查询日志格式</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">“Time: 2021-04-05T07:50:53.243703Z”：查询执行时间</span><br><span class="line">“User@Host: root[root] @ localhost [] Id: 3”：用户名 、用户的IP信息、线程ID号</span><br><span class="line">“Query_time: 0.000495”：执行花费的时长【单位：秒】</span><br><span class="line">“Lock_time: 0.000170”：执行获得锁的时长</span><br><span class="line">“Rows_sent”：获得的结果行数</span><br><span class="line">“Rows_examined”：扫描的数据行数</span><br><span class="line">“SET timestamp”：这SQL执行的具体时间</span><br><span class="line">最后一行：执行的SQL语句</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>慢查询分析<code>mysqldumpslow</code></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysqldumpslow <span class="operator">-</span>s r <span class="operator">-</span>t <span class="number">10</span> <span class="operator">/</span>usr<span class="operator">/</span><span class="keyword">local</span><span class="operator">/</span>soft<span class="operator">/</span>mysql8<span class="operator">/</span>datas<span class="operator">/</span>mysql<span class="operator">/</span>ip<span class="number">-10</span><span class="number">-250</span><span class="number">-0</span><span class="number">-214</span><span class="operator">-</span>slow.log</span><br><span class="line"></span><br><span class="line"># 参数说明：</span><br><span class="line"><span class="operator">-</span>s 对结果进行排序，怎么排，根据后面所带的 (c,t,l,r,<span class="keyword">at</span>,al,ar)，缺省为<span class="keyword">at</span></span><br><span class="line">  c:总次数 t:总时间 l:锁的时间 r:获得的结果行数</span><br><span class="line">  <span class="keyword">at</span>,al,ar :指t,l,r平均数 【例如：<span class="keyword">at</span> <span class="operator">=</span> 总时间<span class="operator">/</span>总次数】</span><br><span class="line"><span class="operator">-</span>t NUM just <span class="keyword">show</span> the top n queries：仅显示前n条查询</span><br><span class="line"><span class="operator">-</span>g <span class="keyword">PATTERN</span> grep: <span class="keyword">only</span> consider stmts that include this string：通过grep来筛选语句。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MySql知识点介绍: binlog相关、事务及其ACID属性、并发事务处理带来的问题、事务隔离级别、MVCC多版本并发控制机制、InnoDB Buffer Pool、MyISAM Key Buffer、InnoDB记录存储结构和索引页结构、InnoDB表空间(TableSpace)、InnoDB元数据表、redo log 和 undo log、数据库锁、慢查询，等等&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;，&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySql一些有用的知识点[1]</title>
    <link href="https://blog.hanqunfeng.com/2022/09/26/mysql-senior-command1/"/>
    <id>https://blog.hanqunfeng.com/2022/09/26/mysql-senior-command1/</id>
    <published>2022-09-26T13:30:05.000Z</published>
    <updated>2022-11-23T07:39:06.291Z</updated>
    
    <content type="html"><![CDATA[<!-- **加粗** *斜体* ***加粗并斜体*** ~~删除线~~ ==突出显示== `突出显示(推荐)` ++下划线++ ~下标~ ^上标^ 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference. 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600) +++ **点击折叠** 这是被隐藏的内容 +++ --><h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2"><p>MySql知识点介绍:执行计划相关、索引相关、用户管理、线程状态、常用操作、表信息相关、系统变量、mysql中的数据类型对应java实体数据类型、数据库导出与导入，等等</p></li><li class="lvl-2"><p>本文基于<code>mysql-8.0.30</code>，<a href="https://dev.mysql.com/doc/refman/8.0/en/">https://dev.mysql.com/doc/refman/8.0/en/</a></p></li></ul><span id="more"></span><h2 id="执行计划相关">执行计划相关</h2><h3 id="什么是执行计划">什么是执行计划</h3><blockquote><p>一条查询语句在经过MySQL查询优化器的各种基于成本和规则的优化会后生成一个所谓的执行计划，这个执行计划展示了接下来具体执行查询的方式，比如多表连接的顺序是什么，对于每个表采用什么访问方法来具体执行查询等等。<code>EXPLAIN</code>语句来帮助我们查看某个查询语句的具体执行计划，我们需要搞懂<code>EXPLAIN</code>的各个输出项都是干嘛使的，从而可以有针对性的提升我们查询语句的性能。<br>通过使用<code>EXPLAIN</code>关键字可以模拟优化器执行SQL查询语句，从而知道MySQL是如何处理你的SQL语句的，分析查询语句或是表结构的性能瓶颈。<br><strong>通过<code>EXPLAIN</code>我们可以知道：</strong><br>⚫ 表的读取顺序<br>⚫ 数据读取操作的操作类型<br>⚫ 哪些索引可以使用<br>⚫ 哪些索引被实际使用<br>⚫ 表之间的引用<br>⚫ 每张表有多少行被优化器查询</p></blockquote><h3 id="查看执行计划">查看执行计划</h3><blockquote><p>执行计划的语法其实非常简单：在SQL查询的前面加上<code>EXPLAIN</code>关键字就行</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> const <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+-------+------+----------+--------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>以下示例用到两张表，employees与employees2表结构相同</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> employees\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>[ <span class="number">1.</span> <span class="type">row</span> ]<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="keyword">Table</span>        <span class="operator">|</span> employees</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span> <span class="operator">|</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `employees` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">24</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `age` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  `position` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;职位&#x27;</span>,</span><br><span class="line">  `hire_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;入职时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `idx_name_age_position` (`name`,`age`,`position`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">100004</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3 COMMENT<span class="operator">=</span><span class="string">&#x27;员工记录表&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="重点属性说明">重点属性说明</h3><h4 id="id">id</h4><div class="note success"><p>id列的编号是 select 的序列号，每个SELECT关键字都对应一个唯一的 id，有几个select就有几个id，并且id的顺序是按select出现的顺序增长的。<br>id列越大执行优先级越高，id相同则从上往下执行，id为NULL最后执行。</p></div><h4 id="select-type">select_type</h4><div class="note success"><p>select_type 查询的类型，表示对应行是简单还是复杂的查询。</p><ul class="lvl-0"><li class="lvl-2">1）SIMPLE：简单查询。查询不包含子查询和union</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 单表查询</span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+------+---------------+--------+---------+--------+-------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key    <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+------+---------------+--------+---------+--------+-------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>        <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">92796</span> <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+------+---------------+--------+---------+--------+-------+----------+--------+</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">inner</span> <span class="keyword">join</span> 连接查询</span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">inner</span> <span class="keyword">join</span> employees2 <span class="keyword">on</span> employees.id <span class="operator">=</span> employees2.id</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type   <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>                <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees2 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>    <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>             <span class="operator">|</span> <span class="number">10</span>   <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> eq_ref <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> test.employees2.id <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------+------+----------+--------+</span></span><br><span class="line"></span><br><span class="line"># 效果同<span class="keyword">inner</span> <span class="keyword">join</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees,employees2 <span class="keyword">where</span> employees.id <span class="operator">=</span> employees2.id</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type   <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>                <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees2 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>    <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>             <span class="operator">|</span> <span class="number">10</span>   <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> eq_ref <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> test.employees2.id <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------+------+----------+--------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">2）PRIMARY：复杂查询中最外层的 select</li><li class="lvl-2">3）UNION：在 union 中的第二个和随后的 select查询,不依赖于外部查询的结果集</li><li class="lvl-2">4）UNION RESULT：UNION 结果集</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees2</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------------+------------+------------+------+---------------+--------+---------+--------+--------+----------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> id     <span class="operator">|</span> select_type  <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key    <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>   <span class="operator">|</span> filtered <span class="operator">|</span> Extra           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------------+------------+------------+------+---------------+--------+---------+--------+--------+----------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> <span class="keyword">PRIMARY</span>      <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>        <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">92796</span>  <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> <span class="keyword">UNION</span>        <span class="operator">|</span> employees2 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>        <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">10</span>     <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="keyword">UNION</span> <span class="keyword">RESULT</span> <span class="operator">|</span> <span class="operator">&lt;</span>union1,<span class="number">2</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>        <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>   <span class="operator">|</span> <span class="keyword">Using</span> temporary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------------+------------+------------+------+---------------+--------+---------+--------+--------+----------+-----------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">5）SUBQUERY：包含在 select 中的子查询（不在 from 子句中），不依赖于外部查询的结果集</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> employees2) <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys         <span class="operator">|</span> key                   <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> <span class="keyword">PRIMARY</span>     <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>   <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">92796</span> <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>  <span class="operator">|</span> SUBQUERY    <span class="operator">|</span> employees2 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> index <span class="operator">|</span> <span class="keyword">PRIMARY</span>               <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> <span class="number">140</span>     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">10</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+-------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">6）DEPENDENT UNION：UNION 中的第二个或随后的 select 查询,依赖于外部查询的结果集</li><li class="lvl-2">7）DEPENDENT SUBQUERY：子查询中的第一个 select 查询,依赖于外部查询的结果集</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> employees2 <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> id <span class="keyword">from</span> employees <span class="keyword">where</span> age <span class="operator">=</span><span class="number">20</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------------------+------------+------------+--------+-------------------------------+---------+---------+--------+--------+----------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> id     <span class="operator">|</span> select_type        <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type   <span class="operator">|</span> possible_keys                 <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>   <span class="operator">|</span> filtered <span class="operator">|</span> Extra           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------------------+------------+------------+--------+-------------------------------+---------+---------+--------+--------+----------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span> <span class="keyword">PRIMARY</span>            <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                        <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">92796</span>  <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span> DEPENDENT SUBQUERY <span class="operator">|</span> employees2 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> eq_ref <span class="operator">|</span> <span class="keyword">PRIMARY</span>,idx_name_age_position <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> func   <span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span>  <span class="number">10.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">3</span>      <span class="operator">|</span> DEPENDENT <span class="keyword">UNION</span>    <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> eq_ref <span class="operator">|</span> <span class="keyword">PRIMARY</span>,idx_name_age_position <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> func   <span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span>  <span class="number">10.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="keyword">UNION</span> <span class="keyword">RESULT</span>       <span class="operator">|</span> <span class="operator">&lt;</span>union2,<span class="number">3</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                        <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>   <span class="operator">|</span> <span class="keyword">Using</span> temporary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+--------------------+------------+------------+--------+-------------------------------+---------+---------+--------+--------+----------+-----------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">8）DERIVED：包含在 from 子句中的子查询。MySQL会将结果存放在一个临时表中，也称为派生表（derived的英文含义）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> age,<span class="built_in">count</span>(<span class="operator">*</span>) countNum <span class="keyword">from</span> employees <span class="keyword">group</span> <span class="keyword">by</span> age) tmp <span class="keyword">where</span> countNum <span class="operator">&gt;</span> <span class="number">3</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys         <span class="operator">|</span> key                   <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> <span class="keyword">PRIMARY</span>     <span class="operator">|</span> <span class="operator">&lt;</span>derived2<span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>   <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">92796</span> <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>  <span class="operator">|</span> DERIVED     <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> index <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> <span class="number">140</span>     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">92796</span> <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> index; <span class="keyword">Using</span> temporary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+------------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">9）MATERIALIZED：物化子查询，子查询物化就是将子查询的结果缓存在内存或临时表中，<code>&lt;subquery2&gt;</code>表示就是物化后的表</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> name <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> name <span class="keyword">from</span> employees2)</span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------------+-------------+------------+--------+-----------------------+-----------------------+---------+---------------------+-------+----------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type  <span class="operator">|</span> <span class="keyword">table</span>       <span class="operator">|</span> partitions <span class="operator">|</span> type   <span class="operator">|</span> possible_keys         <span class="operator">|</span> key                   <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>                 <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------------+-------------+------------+--------+-----------------------+-----------------------+---------+---------------------+-------+----------+-------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE       <span class="operator">|</span> employees   <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>              <span class="operator">|</span> <span class="number">92796</span> <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE       <span class="operator">|</span> <span class="operator">&lt;</span>subquery2<span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> eq_ref <span class="operator">|</span> <span class="operator">&lt;</span>auto_distinct_key<span class="operator">&gt;</span>   <span class="operator">|</span> <span class="operator">&lt;</span>auto_distinct_key<span class="operator">&gt;</span>   <span class="operator">|</span> <span class="number">75</span>      <span class="operator">|</span> test.employees.name <span class="operator">|</span> <span class="number">1</span>     <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span>; <span class="keyword">Not</span> <span class="keyword">exists</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>  <span class="operator">|</span> MATERIALIZED <span class="operator">|</span> employees2  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> index  <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> <span class="number">140</span>     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>              <span class="operator">|</span> <span class="number">10</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> index             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------------+-------------+------------+--------+-----------------------+-----------------------+---------+---------------------+-------+----------+-------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">10）UNCACHEABLE SUBQUERY： 结果集不能被缓存的子查询,必须重新为外层查询的每一行进行评估，出现极少。</li><li class="lvl-2">11）UNCACHEABLE UNION：UNION 中的第二个或随后的 select 查询,属于不可缓存的子查询，出现极少。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> employees2 <span class="keyword">where</span> id<span class="operator">=</span> @<span class="variable">@sql</span>_log_bin)</span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------------------+------------+------------+-------+---------------+---------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type          <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------------------+------------+------------+-------+---------------+---------+---------+-------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> <span class="keyword">PRIMARY</span>              <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> const <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span>  <span class="operator">|</span> UNCACHEABLE SUBQUERY <span class="operator">|</span> employees2 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> const <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+----------------------+------------+------------+-------+---------------+---------+---------+-------+------+----------+-------------+</span></span><br></pre></td></tr></table></figure></div><h4 id="table">table</h4><div class="note success"><p>table列表示 explain 的一行正在访问哪个表。<br>当 from 子句中有子查询时，table列是 <derivenN> 格式，表示当前查询依赖 id=N 的查询，于是先执行 id=N 的查 询。<br>当有 union 时，UNION RESULT 的 table 列的值为&lt;union1,2&gt;，1和2表示参与 union 的 select 行id。</p></div><h4 id="type">type</h4><div class="note success"><p>type表示关联类型或访问类型，从最优到最差分别为：<br>system &gt; const &gt; eq_ref &gt; ref &gt; fulltext &gt; ref_or_null &gt; index_merge &gt; unique_subquery &gt; index_subquery &gt; range &gt; index &gt; ALL<br>出现比较多的是: system &gt; const &gt; eq_ref &gt; ref &gt; range &gt; index &gt; ALL，一般来说，得保证查询达到range级别，最好达到ref。<br>NULL表示mysql能够在优化阶段分解查询语句，在执行阶段用不着再访问表或索引。</p><blockquote><p>类型说明</p></blockquote><ul class="lvl-0"><li class="lvl-2">const, system: 常量查询，只查询一条记录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> const <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> const <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+-------+------+----------+--------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">eq_ref: 主键索引或唯一索引关联查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">inner</span> <span class="keyword">join</span> employees2 <span class="keyword">on</span> employees.id <span class="operator">=</span> employees2.id</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type   <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>                <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees2 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>    <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>             <span class="operator">|</span> <span class="number">10</span>   <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> eq_ref <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> test.employees2.id <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+--------+---------------+---------+---------+--------------------+------+----------+--------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">ref: 相比 eq_ref，不使用唯一索引，而是使用普通索引或者唯一性索引的部分前缀</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">inner</span> <span class="keyword">join</span> employees2 <span class="keyword">on</span> employees.name <span class="operator">=</span> employees2.name</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+------+-----------------------+-----------------------+---------+----------------------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>      <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys         <span class="operator">|</span> key                   <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>                  <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+------+-----------------------+-----------------------+---------+----------------------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees2 <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>                <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>               <span class="operator">|</span> <span class="number">10</span>   <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> <span class="number">74</span>      <span class="operator">|</span> test.employees2.name <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+------------+------------+------+-----------------------+-----------------------+---------+----------------------+------+----------+--------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">range: 范围扫描，如 in(), between ,&gt; ,&lt;, &gt;=</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> id <span class="operator">&gt;</span> <span class="number">1</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">range</span> <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">46398</span> <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+--------+-------+----------+-------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">index: 扫描全索引，一般扫描的是某个二级索引，二级索引一般比较小，所以这种通常比ALL快一些。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> name,position <span class="keyword">from</span> employees <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">20</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys         <span class="operator">|</span> key                   <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> index <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> <span class="number">140</span>     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">92796</span> <span class="operator">|</span> <span class="number">10.0</span>     <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span>; <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+--------------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2">ALL: 即全表扫描，扫描你的聚簇索引的所有叶子节点。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+------+---------------+--------+---------+--------+-------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key    <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+------+---------------+--------+---------+--------+-------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>        <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">92796</span> <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+------+---------------+--------+---------+--------+-------+----------+--------+</span></span><br></pre></td></tr></table></figure><blockquote><p>其它不常出现的也做简单说明</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>fulltext: 全文索引，不推荐使用</p></li><li class="lvl-2"><p>ref_or_null: 不仅想找出某个二级索引列的值等于某个常数的记录，还想把该列的值为NULL的记录也找出来，如<code>WHERE order_no= 'abc' OR order_no IS NULL;</code></p></li><li class="lvl-2"><p>index_merge: 一般情况下对于某个表的查询只能使用到一个索引，在某些场景下可以使用索引合并的方式来执行查询</p></li><li class="lvl-2"><p>unique_subquery: 是针对在一些包含IN子查询的查询语句中，如果查询优化器决定将IN子查询转换为EXISTS子查询，而且子查询可以使用到主键进行等值匹配</p></li><li class="lvl-2"><p>index_subquery:  与unique_subquery类似，只不过访问⼦查询中的表时使⽤的是普通的索引</p></li></ul></div><h4 id="possible-keys">possible_keys</h4><div class="note success"><p>possible_keys列显示查询可能使用哪些索引来查找。<br>explain 时可能出现 possible_keys 有值，而 key 显示 NULL 的情况，这种情况是因为表中数据不多，mysql认为索引对此查询帮助不大，选择了全表查询。<br>如果该列是NULL，则没有相关的索引。<br>某些情况下，比如类型是index时，可能会出现 possible_keys 列是空的，而 key 列展示的是实际使用到的索引，这是因为index的意思就是扫描二级索引。<br>possible keys 列中的值并不是越多越好，可能使用的索引越多，查询优化器计算查询成本时就得花费更长时间，所以如果可以的话，尽量删除那些用不到的索引。</p></div><h4 id="key">key</h4><div class="note success"><p>key列显示mysql实际采用哪个索引来优化对该表的访问。<br>如果没有使用索引，则该列是 NULL。</p></div><h4 id="key-len">key_len</h4><div class="note success"><p>这一列显示了mysql在索引里使用的字节数，通过这个值可以算出具体使用了索引中的哪些列。<br>key_len计算规则如下：</p><ol><li class="lvl-3">字符串，char(n)和varchar(n)，5.0.3以后版本中，n均代表字符数，而不是字节数，如果是utf-8，一个数字 或字母占1个字节，一个汉字占3个字节<br>char(n)：如果存汉字长度就是 3n 字节<br>varchar(n)：如果存汉字则长度是 3n + 2 字节，加的2字节用来存储字符串长度，因为 varchar是变长字符串</li><li class="lvl-3">数值类型<br>tinyint：1字节<br>smallint：2字节<br>int：4字节<br>bigint：8字节</li><li class="lvl-3">时间类型<br>date：3字节<br>timestamp：4字节<br>datetime：8字节<br>如果字段允许为 NULL，需要1字节记录是否为 NULL。<br>索引最大长度是768字节，当字符串过长时，mysql会做一个类似左前缀索引的处理，将前半部分的字符提取出来做索引。</li></ol></div><h4 id="ref">ref</h4><div class="note success"><p>ref列显示了在key列记录的索引中，表查找值所用到的列或常量，常见的有：const（常量），字段名（例：<a href="http://film.id">film.id</a>）</p></div><h4 id="rows">rows</h4><div class="note success"><p>rows列是mysql估计要读取并检测的行数，注意这个不是结果集里的行数。<br>如果查询优化器决定使用全表扫描的方式对某个表执行查询时，执行计划的 rows 列就代表预计需要扫描的行数。<br>如果使用索引来执行查询时，执行计划的 rows 列就代表预计扫描的索引记录行数。</p></div><h4 id="filtered">filtered</h4><div class="note success"><p>查询优化器预测有多少条记录满⾜其余的搜索条件,即基于全表扫描或索引扫描计算出要扫描的rows后，满足其余的查询条件的记录数在这些rows中所占的百分比，这也是一个预估值。比如下面这个查询计划：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 基于主键索引扫描的<span class="keyword">rows</span>是<span class="number">46398</span>，此时filtered<span class="operator">=</span><span class="number">100</span>，因为没有其它查询条件，此时表示过滤的记录占比总的扫描<span class="keyword">rows</span>是<span class="number">100</span><span class="operator">%</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> id <span class="operator">&gt;</span> <span class="number">10</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">range</span> <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">46398</span> <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"></span><br><span class="line"># 如果在加一个条件 age <span class="operator">=</span> <span class="number">20</span>，此时表示该过滤条件占比 <span class="keyword">rows</span> 的百分比是 <span class="number">10</span><span class="operator">%</span></span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employees <span class="keyword">where</span> id <span class="operator">&gt;</span> <span class="number">10</span> <span class="keyword">and</span> age <span class="operator">=</span> <span class="number">20</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys <span class="operator">|</span> key     <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">range</span> <span class="operator">|</span> <span class="keyword">PRIMARY</span>       <span class="operator">|</span> <span class="keyword">PRIMARY</span> <span class="operator">|</span> <span class="number">4</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">46398</span> <span class="operator">|</span> <span class="number">10.0</span>     <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+---------------+---------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h4 id="Extra">Extra</h4><div class="note success"><p>Extra列展示的是额外信息，常见信息如下：<br>1）Using index：使用覆盖索引，索引排序<br>2）Using where：使用 where 语句来处理结果，并且查询的列未被索引覆盖，出现Using where 只是表示 MySQL 使用 where 子句中的条件对记录进行了过滤，并不表示当前sql没有使用索引，也不表示一定使用全表扫描<br>3）Using index condition：查询的列不完全被索引覆盖，where条件中是一个前导列的范围<br>4）Using temporary：mysql需要创建一张临时表来处理查询，比如去重、排序、分组、Union之类的，需要使用索引优化<br>5）Using filesort：将用外部排序而不是索引排序，数据较小时从内存排序，否则需要在磁盘完成排序，需要使用索引优化<br>6）Select tables optimized away：使用某些聚合函数（比如 max、min）来访问存在索引的某个字段</p></div><h2 id="filesort文件排序方式">filesort文件排序方式</h2><blockquote><p>单路排序：是一次性取出满足条件行的所有字段，然后在sort buffer中进行排序；<br>双路排序（又叫回表排序模式）：是首先根据相应的条件取出相应的排序字段和可以直接定位行数据的行ID，然后在 sort buffer 中进行排序，排序完后需要再次取回其它需要的字段；<br>MySQL通过比较系统变量 max_length_for_sort_data(默认1024字节)的大小和需要查询的字段总大小来判断使用哪种排序模式。<br>如果字段的总长度小于max_length_for_sort_data ，那么使用单路排序模式；<br>如果字段的总长度大于max_length_for_sort_data ，那么使用双路排序模式;<br>如果全部使用sort_buffer内存排序一般情况下效率会高于磁盘文件排序，但不能因为这个就随便增大sort_buffer(默认1M)，mysql很多参数设置都是做过优化的，不要轻易调整。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># mysql8是<span class="number">4</span>k，mysql5是<span class="number">1</span>k</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;max_length_for_sort_data&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name            <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> max_length_for_sort_data <span class="operator">|</span> <span class="number">4096</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+-------+</span></span><br><span class="line"></span><br><span class="line"># 这里设置的<span class="number">4</span>M</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;sort_buffer_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+---------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+---------+</span></span><br><span class="line"><span class="operator">|</span> sort_buffer_size <span class="operator">|</span> <span class="number">4194304</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+---------+</span></span><br></pre></td></tr></table></figure><h2 id="优化总结">优化总结</h2><div class="note success"><p>1、MySQL支持两种方式的排序filesort和index，Using index是指MySQL扫描索引本身完成排序。index 效率高，filesort效率低。<br>2、order by满足两种情况会使用Using index:</p><blockquote><ol><li class="lvl-3">order by语句使用索引最左前列。</li><li class="lvl-3">使用where子句与order by子句条件列组合满足索引最左前列。</li></ol></blockquote><p>3、尽量在索引列上完成排序，遵循索引建立（索引创建的顺序）时的最左前缀法则。<br>4、如果order by的条件不在索引列上，就会产生Using filesort。<br>5、能用覆盖索引尽量用覆盖索引<br>6、group by与order by很类似，其实质是先排序后分组，遵照索引创建顺序的最左前缀法则。对于group by的优化如果不需要排序的可以加上order by null禁止排序。注意，where高于having，能写在where中 的限定条件就不要去having限定了。</p></div><h2 id="查看优化后的sql">查看优化后的sql</h2><blockquote><p>mysql8.0以前的版本需要explain extended select * from actor where id = 1;</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"># 显示优化后的<span class="keyword">sql</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> warnings;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Level <span class="operator">|</span> Code <span class="operator">|</span> Message                                                                                                               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Note  <span class="operator">|</span> <span class="number">1003</span> <span class="operator">|</span> <span class="comment">/* select#1 */</span> <span class="keyword">select</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">AS</span> `id`,<span class="string">&#x27;a&#x27;</span> <span class="keyword">AS</span> `name`,<span class="string">&#x27;2017-12-22 15:27:18&#x27;</span> <span class="keyword">AS</span> `update_time` <span class="keyword">from</span> `test`.`actor` <span class="keyword">where</span> <span class="literal">true</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="关联查询inner-join之显式连接-VS-隐式连接，从执行计划上看两者是一回事，推荐带on的显示查询">关联查询<code>inner join</code>之<code>显式连接</code> VS <code>隐式连接</code>，从执行计划上看两者是一回事，推荐带on的显示查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 显式连接<span class="number">1</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">inner</span> <span class="keyword">join</span> film <span class="keyword">on</span> film_actor.film_id <span class="operator">=</span> film.id;</span><br><span class="line"># 显式连接<span class="number">2</span>，有<span class="keyword">on</span>会先执行<span class="keyword">on</span>的关联，之后在进行<span class="keyword">where</span>过滤，推荐关联关系放到<span class="keyword">on</span>里面</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor <span class="keyword">inner</span> <span class="keyword">join</span> film <span class="keyword">where</span> film_actor.film_id <span class="operator">=</span> film.id;</span><br><span class="line"></span><br><span class="line"># 隐式链接</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> film_actor,film <span class="keyword">where</span> film_actor.film_id <span class="operator">=</span> film.id;</span><br></pre></td></tr></table></figure><h2 id="索引相关">索引相关</h2><h3 id="B-Tree-B-Tree变种">B+Tree(B-Tree变种)</h3><ul class="lvl-0"><li class="lvl-2"><p>非叶子节点不存储data，只存储索引(冗余)，目的是为了放更多的索引，减少树的高度，提高查询效率，非叶子结点由主键值和一个指向下一层的地址的指针组成。</p></li><li class="lvl-2"><p>叶子节点包含所有索引字段，聚集索引包含全部字段，非聚集索引包含索引中的字段，叶子结点中由一组键值对和一个指向该层下一页的指针组成，键值对存储的主键值和数据</p></li><li class="lvl-2"><p>叶节点之间通过双向链表链接，提高区间访问的性能</p></li><li class="lvl-2"><p>在B+树中，一个结点就是一页，MySQL中InnoDB页的大小默认是16k，Innodb的所有数据文件（后缀为 ibd 的文件），其大小始终都是 16384（16k）的整数倍。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;innodb_page_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_page_size <span class="operator">|</span> <span class="number">16384</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br></pre></td></tr></table></figure><blockquote><p>计算机在存储数据的时候，最小存储单元是扇区，一个扇区的大小是 512 字节，而文件系统（例如 XFS/EXT4）最小单元是块，一个块的大小是 4KB。InnoDB 引擎存储数据的时候，是以页为单位的，每个数据页的大小默认是 16KB，即四个块。</p></blockquote><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/b%2Btree.png" alt=""></p><div class="note success"><h3 id="B-Tree可以存放多少条数据，为什么是2000万？">B+Tree可以存放多少条数据，为什么是2000万？</h3><ul class="lvl-0"><li class="lvl-2">指针在InnoDB中为6字节，设主键的类型是bigint，占8字节。一组就是14字节。</li><li class="lvl-2">计算出一个非叶子结点可以存储16 * 1024 / 14 = 1170个索引指针。</li><li class="lvl-2">假设一条数据的大小是1KB，那么一个叶子结点可以存储16条数据。</li><li class="lvl-2">两层B+树可以存储<code>1170 x 16 = 18720</code>条数据。</li><li class="lvl-2">三层B+树可以存储<code>1170 x 1170 x 16 = 21902400</code>条数据，约为2000万。</li><li class="lvl-2">四层B+树可以存储<code>1170 x 1170 x 1170 x 16 = 25625808000</code>条数据，约为256亿。</li><li class="lvl-2">如不考虑磁盘IO，B+树的查找与其层数（树的高度）和阶数（节点的最大分支数）有关，因为数据都在叶子节点，所以查找数据必须从树的根节点开始，通过2分法定位其所在的分支，一层一层的查找（每层都是2分法定位其所在的分支），直到最后一层的叶子节点定位数据。</li><li class="lvl-2">在查找不超过3层的B+Tree中的数据时，一次页的查找代表一次IO，所以通过主键索引查询通常只需要1-3次IO操作即可查找到数据。</li><li class="lvl-2">一般不建议单表的数据量超过2000万，因为每查找一个页，都要进行一次IO，而磁盘的速度相比内存而言是非常的慢的，比如常见的7200RPM的硬盘，摇臂转一圈需要60/7200≈8.33ms,换句话说，让磁盘完整的旋转一圈找到所需要的数据需要8.33ms,这比内存常见的100ns慢100000倍左右，这还不包括移动摇臂的时间。所以在这里制约查找速度的不是比较次数，而是IO操作的次数。</li></ul><h3 id="B-Tree查找的时间复杂度（比较次数）计算方法">B+Tree查找的时间复杂度（比较次数）计算方法</h3><ul class="lvl-0"><li class="lvl-2"><p>B+Tree的查找时间复杂度的计算方法是<code>每层通过2分法查找的次数M * 树的高度H</code></p></li><li class="lvl-2"><p>假设B+Tree中总的数据量为N，阶数为R，则 M = log<sub>2</sub>R，H = log<sub>R</sub>N，则M * H = log<sub>2</sub>R * log<sub>R</sub>N = log<sub>2</sub>N</p></li><li class="lvl-2"><p>举例，比如有一课B+Tree的总的数据量是65536，最大分支为16，则N=65536，R=16，M = log<sub>2</sub>R = log<sub>2</sub>16 = 4，H = log<sub>R</sub>N = log<sub>16</sub>65536 = 4，则 M * H = log<sub>2</sub>N = log<sub>2</sub>65536 = 16，即最多查找16次就可以找到对应的数据</p></li><li class="lvl-2"><p>注意这里仅是计算内存中查找的比较次数，而没有考虑每次加载数据页到内存的IO成本，而实际上IO成本才是制约mysql查找快慢的关键因素，所以mysql每次IO都会将查询页附近的几个页一并加载到内存，以此减少IO次数</p></li></ul></div><h3 id="索引分类">索引分类</h3><ul class="lvl-0"><li class="lvl-2"><p>聚集索引/聚簇索引/密集索引<br>InnoDB中使用了聚集索引，就是将表的主键用来构造一棵B+树，并且将整张表的行记录数据存放在该B+树的叶子节点中。也就是所谓的索引即数据，数据即索引。<br>由于聚集索引是利用表的主键构建的，所以每张表只能拥有一个聚集索引。<br>聚集索引的叶子节点就是数据页。换句话说，数据页上存放的是完整的每行记录。<br>因此聚集索引的一个优点就是：通过聚集索引能获取完整的整行数据。<br>另一个优点是：对于主键的排序查找和范围查找速度非常快。<br>如果我们没有定义主键呢？MySQL会使用唯一性索引，没有唯一性索引，MySQL也会创建一个隐含列RowID来做主键，然后用这个主键来建立聚集索引。</p></li><li class="lvl-2"><p>辅助索引/二级索引/非聚集索引/稀疏索引<br>上边介绍的聚簇索引只能在搜索条件是主键值时才能发挥作用，因为B+树中的数据都是按照主键进行排序的,那如果我们想以别的列作为搜索条件怎么办？<br>我们一般会建立多个索引，这些索引被称为辅助索引/二级索引，辅助索引也是一颗B+树。<br>对于辅助索引(Secondary Index，也称二级索引、非聚集索引)，叶子节点并不包含行记录的全部数据。<br>叶子节点除了包含键值以外，每个叶子节点中的索引行中还包含了相应行数据的聚集索引主键，用于回表查询。<br>辅助索引的存在并不影响数据在聚集索引中的组织，因此每张表上可以有多个辅助索引，有几个辅助索引就会创建几颗B+树。<br>MyISAM存储引擎，不管是主键索引，唯一键索引还是普通索引都是非聚集索引。</p></li></ul><div class="note success"><p>当通过辅助索引来寻找数据时，InnoDB存储引擎会遍历辅助索引并通过叶级别的指针获得指向主键索引的主键，然后再通过主键索引（聚集索引）来找到一个完整的行记录。这个过程也被称为回表。<br>也就是根据辅助索引的值查询一条完整的用户记录需要使用到2棵B+树–一次辅助索引，一次聚集索引。</p></div><ul class="lvl-0"><li class="lvl-2"><p>联合索引/复合索引<br>前面我们对索引的描述，隐含了一个条件，那就是构建索引的字段只有一个，但实践工作中构建索引的完全可以是多个字段。<br>所以，将表上的多个列组合起来进行索引我们称之为联合索引或者复合索引，比如index(a,b)就是将a,b两个列组合起来构成一个索引。<br>联合索引只会建立1棵B+树。</p></li><li class="lvl-2"><p>自适应哈希索引(Adaptive Hash Index,AHI)<br>由mysql自己维护，对于经常被访问的索引，mysql会创建一个hash索引，下次查询这个索引时直接定位到记录的地址，而不需要去B+树中查询。<br>AHI默认开启，由<code>innodb_adaptive_hash_index</code>变量控制，默认8个分区,最大设置为512。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_adaptive_hash_index&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name              <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_adaptive_hash_index <span class="operator">|</span> <span class="keyword">ON</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+-------+</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_adaptive_hash_index_parts&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name                    <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> innodb_adaptive_hash_index_parts <span class="operator">|</span> <span class="number">8</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+-------+</span></span><br></pre></td></tr></table></figure><p>通过<code>show engine innodb status\G</code>命令可以查看AHI的使用情况</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> engine innodb status\G</span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> BUFFER <span class="keyword">AND</span> ADAPTIVE HASH INDEX</span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line">Ibuf: size <span class="number">1</span>, <span class="keyword">free</span> list len <span class="number">0</span>, seg size <span class="number">2</span>, <span class="number">0</span> merges</span><br><span class="line">merged operations:</span><br><span class="line"> <span class="keyword">insert</span> <span class="number">0</span>, <span class="keyword">delete</span> mark <span class="number">0</span>, <span class="keyword">delete</span> <span class="number">0</span></span><br><span class="line">discarded operations:</span><br><span class="line"> <span class="keyword">insert</span> <span class="number">0</span>, <span class="keyword">delete</span> mark <span class="number">0</span>, <span class="keyword">delete</span> <span class="number">0</span></span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">4</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">0</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">1</span> buffer(s)</span><br><span class="line">Hash <span class="keyword">table</span> size <span class="number">276707</span>, node heap has <span class="number">1</span> buffer(s)</span><br><span class="line"><span class="number">0.00</span> hash searches<span class="operator">/</span>s, <span class="number">0.00</span> non<span class="operator">-</span>hash searches<span class="operator">/</span>s</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>全文检索之倒排索引(FULLTEXT)<br>数据类型为 char、varchar、text 及其系列才可以建全文索引。<br>每张表只能有一个全文检索的索引<br>不支持没有单词界定符(delimiter）的语言，如中文、日语、韩语等。<br>由于mysql的全文索引功能很弱，这里不做详细介绍，推荐使用ES等专业的搜索引擎。</p></li></ul><div class="note success"><h3 id="MySQL有哪些索引类型">MySQL有哪些索引类型?</h3><ul class="lvl-0"><li class="lvl-2">从数据结构角度可分为B+树索引、哈希索引、以及FULLTEXT索引（现在MyISAM和InnoDB 引擎都支持了）和R-Tree索引（用于对GIS数据类型创建SPATIAL索引）；</li><li class="lvl-2">从物理存储角度可分为聚集索引（clustered index）、非聚集索引（non-clustered index）；</li><li class="lvl-2">从逻辑角度可分为主键索引、普通索引，或者单列索引、多列索引、唯一索引、非唯一索引等等。</li></ul><h3 id="覆盖索引-索引覆盖">覆盖索引/索引覆盖</h3><ul class="lvl-0"><li class="lvl-2"><p>InnoDB存储引擎支持覆盖索引(covering index，或称索引覆盖)，即从辅助索引中就可以得到查询的记录，而不需要查询聚集索引中的记录。</p></li><li class="lvl-2"><p>使用覆盖索引的一个好处是辅助索引不包含整行记录的所有信息，故其大小要远小于聚集索引，因此可以减少大量的IO操作。</p></li><li class="lvl-2"><p>覆盖索引可以视为索引优化的一种方式，而并不是索引类型的一种。</p></li><li class="lvl-2"><p>除了覆盖索引这个概念外，在索引优化的范围内，还有前缀索引、三星索引等。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> employees\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span>[ <span class="number">1.</span> <span class="type">row</span> ]<span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line"><span class="keyword">Table</span>        <span class="operator">|</span> employees</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span> <span class="operator">|</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `employees` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">24</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  `age` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">  `position` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;职位&#x27;</span>,</span><br><span class="line">  `hire_time` <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;入职时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `idx_name_age_position` (`name`,`age`,`position`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3 COMMENT<span class="operator">=</span><span class="string">&#x27;员工记录表&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="operator">&gt;</span> <span class="string">&#x27;LiLei&#x27;</span> <span class="keyword">AND</span> age <span class="operator">=</span> <span class="number">22</span> <span class="keyword">AND</span> position <span class="operator">=</span><span class="string">&#x27;manager&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+------+-----------------------+--------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys         <span class="operator">|</span> key    <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+------+-----------------------+--------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ALL</span>  <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>  <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">92796</span> <span class="operator">|</span> <span class="number">0.5</span>      <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+------+-----------------------+--------+---------+--------+-------+----------+-------------+</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> EXPLAIN <span class="keyword">SELECT</span> name,age,position <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> name <span class="operator">&gt;</span> <span class="string">&#x27;LiLei&#x27;</span> <span class="keyword">AND</span> age <span class="operator">=</span> <span class="number">22</span> <span class="keyword">AND</span> position <span class="operator">=</span><span class="string">&#x27;manager&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span>     <span class="operator">|</span> partitions <span class="operator">|</span> type  <span class="operator">|</span> possible_keys         <span class="operator">|</span> key                   <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>    <span class="operator">|</span> <span class="keyword">rows</span>  <span class="operator">|</span> filtered <span class="operator">|</span> Extra                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> employees <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">range</span> <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> idx_name_age_position <span class="operator">|</span> <span class="number">74</span>      <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> <span class="number">46398</span> <span class="operator">|</span> <span class="number">1.0</span>      <span class="operator">|</span> <span class="keyword">Using</span> <span class="keyword">where</span>; <span class="keyword">Using</span> index <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-----------+------------+-------+-----------------------+-----------------------+---------+--------+-------+----------+--------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="前缀索引">前缀索引</h3><p>如果索引的字段类型很长，如varchar(255)，此时创建的索引就会非常大，而且维护起来也非常慢，此时建议使用前缀索引，就是只对该字段的前面一些字符进行索引。<br>阿里的Java编程规范中也提到，在varchar上建立索引时，必须指定索引长度，没必要对全字段建立索引，建议索引的长度不超过20。<br>可以使用<code>select count(distinct left(列名, 索引长度))/count(*) from tableName</code>的区分度来确定，一般大于90%即可。</p><h3 id="三星索引">三星索引</h3><ul class="lvl-0"><li class="lvl-2"><p>一星(缩小查询范围): 索引将相关的记录放到一起则获得一星，即索引的扫描范围越小越好；</p></li><li class="lvl-2"><p>二星(排序): 如果索引中的数据顺序和查找中的排列顺序一致则获得二星，即当查询需要排序，group by、 order by，查询所需的顺序与索引是一致的（索引本身是有序的）；</p></li><li class="lvl-2"><p>三星(覆盖索引): 如果索引中的列包含了查询中需要的全部列则获得三星，即索引中所包含了这个查询所需的所有列（包括 where 子句 和 select 子句中所需的列，也就是覆盖索引）。</p></li></ul><blockquote><p>注意</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>一个索引就是一个B+树，索引让我们的查询可以快速定位和扫描到我们需要的数据记录上，加快查询的速度。</p></li><li class="lvl-2"><p>一个select查询语句在执行过程中一般最多能使用一个二级索引来加快查询，即使在where条件中用了多个二级索引。</p></li></ul></div><h3 id="索引的代价">索引的代价</h3><ul class="lvl-0"><li class="lvl-2"><p>空间上的代价<br>这个是显而易见的，每建立一个索引都要为它建立一棵B+树，每一棵B+树的每一个节点都是一个数据页，一个页默认会占用16KB的存储空间，一棵很大的B+树由许多数据页组成会占据很多的存储空间。</p></li><li class="lvl-2"><p>时间上的代价<br>每次对表中的数据进行增、删、改操作时，都需要去修改各个B+树索引。B+树每层节点都是按照索引列的值从小到大的顺序排序而组成了双向链表。<br>不论是叶子节点中的记录，还是非叶子内节点中的记录都是按照索引列的值从小到大的顺序而形成了一个单向链表。<br>而增、删、改操作可能会对节点和记录的排序造成破坏，所以存储引擎需要额外的时间进行一些记录移位，页面分裂、页面回收的操作来维护好节点和记录的排序。<br>如果我们建了许多索引，每个索引对应的B+树都要进行相关的维护操作，这必然会对性能造成影响。</p></li></ul><blockquote><p>所以，索引虽然可以加快我们的查询效率，但也不是创建的越多越好，一般来说，一张表不要超过7个索引为宜。</p></blockquote><h3 id="索引的创建与删除">索引的创建与删除</h3><ul class="lvl-0"><li class="lvl-2"><p>查看索引</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> actor;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field       <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> id          <span class="operator">|</span> <span class="type">int</span>         <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name        <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">45</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> update_time <span class="operator">|</span> datetime    <span class="operator">|</span> YES  <span class="operator">|</span> MUL <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------+------+-----+---------+-------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> index <span class="keyword">from</span> actor;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Table</span> <span class="operator">|</span> Non_unique <span class="operator">|</span> Key_name               <span class="operator">|</span> Seq_in_index <span class="operator">|</span> Column_name <span class="operator">|</span> <span class="keyword">Collation</span> <span class="operator">|</span> <span class="keyword">Cardinality</span> <span class="operator">|</span> Sub_part <span class="operator">|</span> Packed <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Index_type <span class="operator">|</span> Comment <span class="operator">|</span> Index_comment <span class="operator">|</span> Visible <span class="operator">|</span> Expression <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">0</span>          <span class="operator">|</span> <span class="keyword">PRIMARY</span>                <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> id          <span class="operator">|</span> A         <span class="operator">|</span> <span class="number">2</span>           <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>   <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span>      <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">0</span>          <span class="operator">|</span> unique_name_time_order <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> name        <span class="operator">|</span> D         <span class="operator">|</span> <span class="number">3</span>           <span class="operator">|</span> <span class="number">15</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">0</span>          <span class="operator">|</span> unique_name_time_order <span class="operator">|</span> <span class="number">2</span>            <span class="operator">|</span> update_time <span class="operator">|</span> A         <span class="operator">|</span> <span class="number">3</span>           <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>   <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">1</span>          <span class="operator">|</span> index_update_time      <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> update_time <span class="operator">|</span> A         <span class="operator">|</span> <span class="number">1</span>           <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>   <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">1</span>          <span class="operator">|</span> index_name             <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> name        <span class="operator">|</span> A         <span class="operator">|</span> <span class="number">3</span>           <span class="operator">|</span> <span class="number">15</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor <span class="operator">|</span> <span class="number">1</span>          <span class="operator">|</span> index_name_desc        <span class="operator">|</span> <span class="number">1</span>            <span class="operator">|</span> name        <span class="operator">|</span> D         <span class="operator">|</span> <span class="number">3</span>           <span class="operator">|</span> <span class="number">15</span>       <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span> YES  <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span> YES     <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+------------+------------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+</span></span><br><span class="line">参数说明：</span><br><span class="line"><span class="keyword">Table</span>: 表名称</span><br><span class="line">Non_unique: 是否为唯一索引，<span class="number">0</span>表示唯一索引，<span class="number">1</span>表示非唯一索引</span><br><span class="line">Key_name: 索引名称</span><br><span class="line">Seq_in_index: 联合索引中的字段顺序，从<span class="number">1</span>开始计算</span><br><span class="line">Column_name: 字段名称</span><br><span class="line"><span class="keyword">Collation</span>: 表示索引是升序还是降序，默认创建索引是升序A，降序为D</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>已有表索引维护</p></li></ul><blockquote><p>创建索引</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 方式<span class="number">1</span></span><br><span class="line"><span class="keyword">create</span> index index_name <span class="keyword">on</span> actor (name(<span class="number">15</span>));</span><br><span class="line"># 创建降序索引，默认升序</span><br><span class="line"><span class="keyword">create</span> index index_name_desc <span class="keyword">on</span> actor (name(<span class="number">15</span>) <span class="keyword">desc</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index unique_name <span class="keyword">on</span> actor (name(<span class="number">15</span>));</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index unique_name_time <span class="keyword">on</span> actor (name(<span class="number">15</span>),update_time);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index unique_name_time_order <span class="keyword">on</span> actor (name(<span class="number">15</span>) <span class="keyword">desc</span>,update_time <span class="keyword">asc</span>);</span><br><span class="line"></span><br><span class="line"># 方式<span class="number">2</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index_name(name(<span class="number">15</span>));</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index_name(name(<span class="number">15</span>) <span class="keyword">desc</span>);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> <span class="keyword">unique</span> index unique_name(name(<span class="number">15</span>));</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> <span class="keyword">unique</span> index unique_name_time(name(<span class="number">15</span>),update_time);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> <span class="keyword">unique</span> index unique_name_time_order(name(<span class="number">15</span>) <span class="keyword">desc</span>,update_time <span class="keyword">asc</span>);</span><br></pre></td></tr></table></figure><blockquote><p>删除索引</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 方式<span class="number">1</span></span><br><span class="line"><span class="keyword">drop</span> index index_name <span class="keyword">on</span> actor;</span><br><span class="line"><span class="keyword">drop</span> index unique_name <span class="keyword">on</span> actor;</span><br><span class="line"><span class="keyword">drop</span> index unique_name_time <span class="keyword">on</span> actor;</span><br><span class="line"></span><br><span class="line"># 方式<span class="number">2</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">drop</span> index index_name;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">drop</span> index unique_name;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">drop</span> index unique_name_time;</span><br><span class="line"># 同时删除多个索引</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">drop</span> index index1,<span class="keyword">drop</span> index index2,<span class="keyword">drop</span> index index3;</span><br></pre></td></tr></table></figure><h3 id="函数索引">函数索引</h3><ul class="lvl-0"><li class="lvl-4"><p>mysql8.0.13及以后的版本开始支持函数式索引，即创建索引的时候可以使用mysql提供的函数（不支持自定义函数）</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 注意，创建函数索引时，要在外层有一对括号，表示表达式</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index1((<span class="built_in">upper</span>(name)));</span><br><span class="line"># 前缀</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index1((<span class="built_in">upper</span>(<span class="keyword">left</span>(name,<span class="number">15</span>))));</span><br><span class="line"># 排序</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index2((<span class="built_in">upper</span>(name)) <span class="keyword">desc</span>);</span><br><span class="line"># 联合索引，函数索引<span class="operator">+</span>普通索引</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index3((<span class="built_in">upper</span>(name)) <span class="keyword">desc</span>,update_time <span class="keyword">asc</span>);</span><br><span class="line"># 联合索引，函数索引<span class="operator">+</span>函数索引</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index index4((<span class="built_in">upper</span>(name)) <span class="keyword">desc</span>,(<span class="keyword">year</span>(update_time)) <span class="keyword">asc</span>);</span><br></pre></td></tr></table></figure><p><em><strong>注意查询时也要使用函数才能使用索引</strong></em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> <span class="built_in">upper</span>(name) <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key    <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> index3        <span class="operator">|</span> index3 <span class="operator">|</span> <span class="number">138</span>     <span class="operator">|</span> const <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+--------+---------+-------+------+----------+--------+</span></span><br></pre></td></tr></table></figure><div class="tips"><p><strong>函数索引的限制条件</strong></p><ul class="lvl-1"><li class="lvl-2">函数索引实际上是作为一个隐藏的虚拟列实现的，因此其很多限制与虚拟列相同，如下：</li><li class="lvl-2">函数索引的字段数量受到表的字段总数限制</li><li class="lvl-2">函数索引能够使用的函数与虚拟列上能够使用的函数相同</li><li class="lvl-2">子查询，参数，变量，存储过程，用户定义的函数不允许在函数索引上使用</li><li class="lvl-2">虚拟列本身不需要存储，函数索引和其他索引一样需要占用存储空间</li><li class="lvl-2">函数索引可以使用 UNIQUE  标识，但是主键不能使用函数索引，主键要求被存储，但是函数索引由于其使用的虚拟列不能被存储，因此主键不能使用函数索引</li><li class="lvl-2">如果表中没有主键，那么 InnoDB 将会使其非空的唯一索引作为主键，因此该唯一索引不能定义为函数索引</li><li class="lvl-2">函数索引不允许在外键中使用</li><li class="lvl-2">空间索引和全文索引不能定义为函数索引</li><li class="lvl-2">对于非函数的索引，如果创建相同的索引，将会有一个告警信息，而函数索引则不会</li><li class="lvl-2">如果一个字段被用于函数索引，那么删除该字段前，需要先删除该函数索引，否则删除该字段会报错</li></ul></div><ul class="lvl-0"><li class="lvl-2"><p>函数索引实际上就是mysql帮我们在表上创建了一个隐藏的虚拟列，我们也可以通过自建虚拟列，然后在该虚拟列上创建普通索引来实现相同的效果</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> actor <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> upper_name <span class="type">varchar</span>(<span class="number">15</span>) GENERATED ALWAYS <span class="keyword">AS</span> ((<span class="built_in">upper</span>(<span class="keyword">left</span>(name,<span class="number">15</span>)))) VIRTUAL;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> actor <span class="keyword">add</span> index virtual_upper(upper_name <span class="keyword">desc</span>);</span><br><span class="line">explain <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> actor <span class="keyword">where</span> upper_name <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> select_type <span class="operator">|</span> <span class="keyword">table</span> <span class="operator">|</span> partitions <span class="operator">|</span> type <span class="operator">|</span> possible_keys <span class="operator">|</span> key           <span class="operator">|</span> key_len <span class="operator">|</span> <span class="keyword">ref</span>   <span class="operator">|</span> <span class="keyword">rows</span> <span class="operator">|</span> filtered <span class="operator">|</span> Extra  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>  <span class="operator">|</span> SIMPLE      <span class="operator">|</span> actor <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span>     <span class="operator">|</span> <span class="keyword">ref</span>  <span class="operator">|</span> virtual_upper <span class="operator">|</span> virtual_upper <span class="operator">|</span> <span class="number">48</span>      <span class="operator">|</span> const <span class="operator">|</span> <span class="number">1</span>    <span class="operator">|</span> <span class="number">100.0</span>    <span class="operator">|</span> <span class="operator">&lt;</span><span class="keyword">null</span><span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+--------+</span></span><br><span class="line"></span><br><span class="line"># 删除虚拟列前要先删除其对应的索引</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> actor <span class="keyword">DROP</span> INDEX virtual_upper;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> actor <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> upper_name;</span><br></pre></td></tr></table></figure><h3 id="索引条件下推">索引条件下推</h3><p>什么是索引条件下推，这里举例说明:<br><code>SELECT * FROM s1 WHERE order_no &gt; 'z' AND order_no LIKE '%a';</code><br>其中的<code>order_no &gt; 'z'</code>可以使用到索引，但是 <code>order_no LIKE '%a'</code>却无法使用到索引</p><ul class="lvl-0"><li class="lvl-2"><p>在MySQL5.6之前的版本中，是按照下边步骤来执行这个查询的：<br>1、先根据 <code>order_no&gt; 'z'</code>这个条件，从二级索引 idx_order_no 中获取到对应的二级索引记录。<br>2、根据上一步骤得到的二级索引记录中的主键值进行回表(因为是 select *)，找到完整的用户记录再检测该记录是否符合 <code>key1 LIKE '%a'</code>这个条件，将符合条件的记录加入到最后的结果集。</p></li><li class="lvl-2"><p>MySQL5.6之后的版本开始支持索引下推，其执行步骤如下：<br>1、先根据 <code>order_no&gt; 'z'</code>这个条件，定位到二级索引 idx_order_no 中对应的二级索引记录。<br>2、对于指定的二级索引记录，先不着急回表，而是先检测一下该记录是否满足 <code>order_no LIKE '%a'</code>这个条件，如果这个条件不满足，则该二级索引记录压根儿就没必要回表。<br>3、对于满足 <code>order_no LIKE '%a'</code>这个条件的二级索引记录执行回表操作。</p></li><li class="lvl-2"><p>回表操作其实是一个随机 IO，比较耗时，所以上述修改可以省去很多回表操作的成本。这个改进称之为索引条件下推（英文名：ICP ，Index Condition Pushdown）。</p></li><li class="lvl-2"><p>如果在查询语句的执行过程中将要使用索引条件下推这个特性，在执行计划的 Extra 列中将会显示Using index condition</p></li></ul><h3 id="索引合并">索引合并</h3><p>过MySQL在一般情况下执行一个查询时最多只会用到单个二级索引，但存在有特殊情况下也可能在一个查询中使用到多个二级索引，MySQL中这种使用到多个索引来完成一次查询的执行方法称之为：索引合并/index merge。</p><ul class="lvl-0"><li class="lvl-2"><p>索引合并算法有如下三种：</p><ul class="lvl-2"><li class="lvl-4"><p>1.Intersection合并: 将从多个二级索引中查询到的结果取交集，某些特定的情况下才可能会使用到Intersection索引合并</p><ul class="lvl-4"><li class="lvl-6">情况一：等值匹配</li><li class="lvl-6">情况二：主键列可以是范围匹配</li></ul></li><li class="lvl-4"><p>2.Union合并: 使用不同索引的搜索条件之间使用OR连接起来的情况，某些特定的情况下才可能会使用到Union索引合并</p><ul class="lvl-4"><li class="lvl-6">情况一：等值匹配</li><li class="lvl-6">情况二：主键列可以是范围匹配</li><li class="lvl-6">情况三：使用Intersection索引合并的搜索条件</li></ul><blockquote><p>就是搜索条件的某些部分使用Intersection索引合并的方式得到的主键集合和其他方式得到的主键集合取交集，比方说这个查询： SELECT * FROM order_exp WHERE insert_time = ‘a’ AND order_status = ‘b’ AND expire_time = ‘c’ OR (order_no = ‘a’ AND expire_time = ‘b’);</p></blockquote></li><li class="lvl-4"><p>3.Sort-Union合并: 先按照二级索引记录的主键值进行排序，之后按照Union索引合并方式执行的方式称之为Sort-Union索引合并，很显然，这种Sort-Union索引合并比单纯的Union索引合并多了一步对二级索引记录的主键值排序的过程</p></li></ul></li></ul><h3 id="索引设计原则">索引设计原则</h3><ul class="lvl-0"><li class="lvl-2"><p>代码先行，索引后上</p><ul class="lvl-2"><li class="lvl-4">一般应该等到主体业务功能开发完毕，把涉及到该表相关sql都要拿出来分析之后再建立索引</li></ul></li><li class="lvl-2"><p>联合索引尽量覆盖条件</p><ul class="lvl-2"><li class="lvl-4">比如可以设计一个或者两三个联合索引(尽量少建单值索引)，让每一个联合索引都尽量去包含sql语句里的 where、order by、group by的字段，还要确保这些联合索引的字段顺序尽量满足sql查询的最左前缀原则</li></ul></li><li class="lvl-2"><p>不要在小基数字段上建立索引</p><ul class="lvl-2"><li class="lvl-4">比如<code>性别</code>字段，其值不是男就是女，那么该字段的基数就是2，对这种小基数字段建立索引的话，还不如全表扫描</li></ul></li><li class="lvl-2"><p>长字符串可以采用前缀索引</p><ul class="lvl-2"><li class="lvl-4">但是要注意，<code>order by</code>和<code>group by</code>时没办法使用前缀索引</li></ul></li><li class="lvl-2"><p><code>where</code>与<code>order by</code>冲突时优先<code>where</code></p><ul class="lvl-2"><li class="lvl-4">where可以缩小查询范围，会使排序的成本会小很多</li></ul></li><li class="lvl-2"><p>基于慢sql查询做优化</p><ul class="lvl-2"><li class="lvl-4">线上系统一定要开启慢sql，然后定期对慢sql就行索引优化</li></ul></li></ul><h2 id="ONLY-FULL-GROUP-BY">ONLY_FULL_GROUP_BY</h2><ul class="lvl-0"><li class="lvl-2"><p>MySql5.7.5及以上版本将<code>sql_mode</code>的<code>ONLY_FULL_GROUP_BY</code>模式默认设置为打开状态，会导致一些错误</p></li><li class="lvl-2"><p>当使用GROUP BY查询时，出现在SELECT字段后面的只能是GROUP BY后面的分组字段，或使用聚合函数包裹着的字段，否则会报错如下信息:</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column &#x27;database.table.column&#x27; which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>当使用ORDER BY查询时，不能使用SELECT DISTINCT去重查询。否则会报错如下信息:</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Expression #1 of ORDER BY clause is not in SELECT list, references column &#x27;database.table.column&#x27; which is not in SELECT list; this is incompatible with DISTINCT</span><br></pre></td></tr></table></figure><h3 id="禁用ONLY-FULL-GROUP-BY">禁用<code>ONLY_FULL_GROUP_BY</code></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"># 查询</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> version(), @<span class="variable">@sql</span>_mode;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> version() <span class="operator">|</span> @<span class="variable">@sql</span>_mode                                                                                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8.0</span><span class="number">.30</span>    <span class="operator">|</span> ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-----------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># name 不在<span class="keyword">group</span> <span class="keyword">by</span> 中，则报错</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> update_time,name,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> actor <span class="keyword">group</span> <span class="keyword">by</span> update_time;</span><br><span class="line">ERROR <span class="number">1055</span> (<span class="number">42000</span>): Expression #<span class="number">2</span> <span class="keyword">of</span> <span class="keyword">SELECT</span> list <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> clause <span class="keyword">and</span> <span class="keyword">contains</span> nonaggregated <span class="keyword">column</span> <span class="string">&#x27;test.actor.name&#x27;</span> which <span class="keyword">is</span> <span class="keyword">not</span> functionally dependent <span class="keyword">on</span> columns <span class="keyword">in</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> clause; this <span class="keyword">is</span> incompatible <span class="keyword">with</span> sql_mode<span class="operator">=</span>only_full_group_by</span><br><span class="line"></span><br><span class="line"># name 在<span class="keyword">group</span> <span class="keyword">by</span>中时，查询正常</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> update_time,name,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> actor <span class="keyword">group</span> <span class="keyword">by</span> update_time,name;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"><span class="operator">|</span> update_time         <span class="operator">|</span> name <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2017</span><span class="number">-12</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">27</span>:<span class="number">18</span> <span class="operator">|</span> a    <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2017</span><span class="number">-12</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">27</span>:<span class="number">18</span> <span class="operator">|</span> b    <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2017</span><span class="number">-12</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">27</span>:<span class="number">18</span> <span class="operator">|</span> c    <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"></span><br><span class="line"># <span class="keyword">DISTINCT</span> 和 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 查询时报错</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">DISTINCT</span>(t.name) <span class="keyword">FROM</span> tbl_test t <span class="keyword">where</span> t.id <span class="operator">=</span> <span class="number">28</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> t.create_time <span class="keyword">desc</span> LIMIT <span class="number">6</span>;</span><br><span class="line">(<span class="number">3065</span>, &quot;Expression #1 of ORDER BY clause is not in SELECT list, references column &#x27;testdb.t.create_time&#x27; which is not in SELECT list; this is incompatible with DISTINCT&quot;)</span><br><span class="line"></span><br><span class="line"># 禁用ONLY_FULL_GROUP_BY</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> sql_mode<span class="operator">=</span>(<span class="keyword">SELECT</span> REPLACE(@<span class="variable">@sql</span>_mode,<span class="string">&#x27;ONLY_FULL_GROUP_BY&#x27;</span>,<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"></span><br><span class="line"># 再次查询，结果正常，注意这里name只会保留分组结果中第一条记录的值</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> update_time,name,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> actor <span class="keyword">group</span> <span class="keyword">by</span> update_time;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"><span class="operator">|</span> update_time         <span class="operator">|</span> name <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2017</span><span class="number">-12</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">27</span>:<span class="number">18</span> <span class="operator">|</span> a    <span class="operator">|</span>        <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+----------+</span></span><br><span class="line"></span><br><span class="line"># 永久禁用</span><br><span class="line">my.cnf中[mysqld]中添加</span><br><span class="line">sql_mode <span class="operator">=</span> STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><blockquote><p>以下为sql_mode常用值的含义</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ONLY_FULL_GROUP_BY：对于GROUP BY聚合操作，如果在SELECT中的列，没有在GROUP BY中出现，那么这个SQL是不合法的，因为列不在GROUP BY从句中</span><br><span class="line">NO_AUTO_VALUE_ON_ZERO：该值影响自增长列的插入。默认设置下，插入0或NULL代表生成下一个自增长值。如果用户希望插入的值为0，而该列又是自增长的，那么这个选项就有用了。</span><br><span class="line">STRICT_TRANS_TABLES：在该模式下，如果一个值不能插入到一个事务表中，则中断当前的操作，对非事务表不做限制</span><br><span class="line">NO_ZERO_IN_DATE：在严格模式下，不允许日期和月份为零</span><br><span class="line">NO_ZERO_DATE：设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告。</span><br><span class="line">ERROR_FOR_DIVISION_BY_ZERO：在INSERT或UPDATE过程中，如果数据被零除，则产生错误而非警告。如果未给出该模式，那么数据被零除时MySQL返回NULL</span><br><span class="line">NO_AUTO_CREATE_USER：禁止GRANT创建密码为空的用户</span><br><span class="line">NO_ENGINE_SUBSTITUTION：如果需要的存储引擎被禁用或未编译，那么抛出错误。不设置此值时，用默认的存储引擎替代，并抛出一个异常</span><br><span class="line">PIPES_AS_CONCAT：将”||”视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似</span><br><span class="line">ANSI_QUOTES：启用ANSI_QUOTES后，不能用双引号来引用字符串，因为它被解释为识别符</span><br></pre></td></tr></table></figure><div class="tips"><p>也可是使用 <strong><code>ANY_VALUE()函数</code></strong> 来解决查询属性没有出现在group by中的情况，此时即使没有禁用ONLY_FULL_GROUP_BY也不会报错。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> update_time,any_value(name),<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> actor <span class="keyword">group</span> <span class="keyword">by</span> update_time;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-----------------+----------+</span></span><br><span class="line"><span class="operator">|</span> update_time         <span class="operator">|</span> any_value(name) <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-----------------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2017</span><span class="number">-12</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">27</span>:<span class="number">18</span> <span class="operator">|</span> a               <span class="operator">|</span> <span class="number">3</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-----------------+----------+</span></span><br></pre></td></tr></table></figure></div><h2 id="用户管理">用户管理</h2><ul class="lvl-0"><li class="lvl-2"><p>创建用户并授权</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 创建用户并初始密码</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"># 修改密码</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"># 授权</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">all</span> privileges <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"># 刷新数据库</span><br><span class="line">mysql<span class="operator">&gt;</span> FLUSH PRIVILEGES;</span><br><span class="line"># 查询用户权限</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> grants <span class="keyword">for</span> username@&quot;%&quot;\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Grants <span class="keyword">for</span> username@<span class="operator">%</span>: <span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span>, <span class="keyword">CREATE</span>, <span class="keyword">DROP</span>, RELOAD, SHUTDOWN, PROCESS, FILE, <span class="keyword">REFERENCES</span>, INDEX, <span class="keyword">ALTER</span>, <span class="keyword">SHOW</span> DATABASES, SUPER, <span class="keyword">CREATE</span> TEMPORARY TABLES, LOCK TABLES, <span class="keyword">EXECUTE</span>, REPLICATION SLAVE, REPLICATION CLIENT, <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>, <span class="keyword">SHOW</span> <span class="keyword">VIEW</span>, <span class="keyword">CREATE</span> ROUTINE, <span class="keyword">ALTER</span> ROUTINE, <span class="keyword">CREATE</span> <span class="keyword">USER</span>, EVENT, <span class="keyword">TRIGGER</span>, <span class="keyword">CREATE</span> <span class="keyword">TABLE</span>SPACE, <span class="keyword">CREATE</span> ROLE, <span class="keyword">DROP</span> ROLE <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> `username`@`<span class="operator">%</span>`</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">2.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">Grants <span class="keyword">for</span> username@<span class="operator">%</span>: <span class="keyword">GRANT</span> APPLICATION_PASSWORD_ADMIN,AUDIT_ABORT_EXEMPT,AUDIT_ADMIN,AUTHENTICATION_POLICY_ADMIN,BACKUP_ADMIN,BINLOG_ADMIN,BINLOG_ENCRYPTION_ADMIN,CLONE_ADMIN,CONNECTION_ADMIN,ENCRYPTION_KEY_ADMIN,FIREWALL_EXEMPT,FLUSH_OPTIMIZER_COSTS,FLUSH_STATUS,FLUSH_TABLES,FLUSH_USER_RESOURCES,GROUP_REPLICATION_ADMIN,GROUP_REPLICATION_STREAM,INNODB_REDO_LOG_ARCHIVE,INNODB_REDO_LOG_ENABLE,PASSWORDLESS_USER_ADMIN,PERSIST_RO_VARIABLES_ADMIN,REPLICATION_APPLIER,REPLICATION_SLAVE_ADMIN,RESOURCE_GROUP_ADMIN,RESOURCE_GROUP_USER,ROLE_ADMIN,SENSITIVE_VARIABLES_OBSERVER,SERVICE_CONNECTION_ADMIN,SESSION_VARIABLES_ADMIN,SET_USER_ID,SHOW_ROUTINE,<span class="built_in">SYSTEM_USER</span>,SYSTEM_VARIABLES_ADMIN,TABLE_ENCRYPTION_ADMIN,XA_RECOVER_ADMIN <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> `username`@`<span class="operator">%</span>`</span><br><span class="line"></span><br><span class="line"># 查询当前系统用户</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.user;</span><br><span class="line"></span><br><span class="line"># 允许远程访问</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">update</span> mysql.user <span class="keyword">set</span> host<span class="operator">=</span><span class="string">&#x27;%&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;username&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>删除用户</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 方式<span class="number">1</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">delete</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;username&#x27;</span> <span class="keyword">and</span> host<span class="operator">=</span><span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> FLUSH PRIVILEGES;</span><br><span class="line"># 方式<span class="number">2</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">user</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>授予root用户<code>system_user</code>权限，否则在做一些授权操作时会提示没有权限</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="built_in">system_user</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> flush privileges;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看当前登录的用户</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="keyword">USER</span>();</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">USER</span>()         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> root<span class="variable">@localhost</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br></pre></td></tr></table></figure><h3 id="开启管理员独立端口登录-33062">开启管理员独立端口登录:<code>33062</code></h3><ul class="lvl-0"><li class="lvl-2"><p>从 MySQL 8.0.14 开始，MySQL 服务器允许专门为管理连接配置 TCP/IP 端口。这为用于普通连接的网络接口上允许的单个管理连接提供了一种替代方法，即使已经建立了 max_connections 连接，也就是说即使max_connections已经达到最大值，该端口依旧可以登录。</p></li><li class="lvl-2"><p>只有在启动时设置了 admin_address 系统变量以指示管理接口的 IP 地址时，该接口才可用。如果未指定 admin_address 值，则服务器不维护管理界面。</p></li><li class="lvl-2"><p>只有 <code>SERVICE_CONNECTION_ADMIN</code> 权限的用户才允许连接。没有限制管理连接的数量。</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># 开启管理员使用33062端口访问数据库的权限</span></span><br><span class="line"><span class="comment"># 当最大连接数达到最大值时，管理员依旧可以使用该端口登录数据库</span></span><br><span class="line"><span class="comment"># mysql -uroot -P33062 -p 这里表示在mysql服务器上可以登录，如果要在其它机器上访问，请设置对应的ip地址，注意这里不能设置为&#x27;%&#x27;</span></span><br><span class="line">admin_address=<span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;admin%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name          <span class="operator">|</span> <span class="keyword">Value</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> admin_address          <span class="operator">|</span> localhost       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_port             <span class="operator">|</span> <span class="number">33062</span>           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_ssl_ca           <span class="operator">|</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_ssl_capath       <span class="operator">|</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_ssl_cert         <span class="operator">|</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_ssl_cipher       <span class="operator">|</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_ssl_crl          <span class="operator">|</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_ssl_crlpath      <span class="operator">|</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_ssl_key          <span class="operator">|</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_tls_ciphersuites <span class="operator">|</span>                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> admin_tls_version      <span class="operator">|</span> TLSv1<span class="number">.2</span>,TLSv1<span class="number">.3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-----------------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -tunpl | grep 3306</span><br><span class="line">tcp        0      0 127.0.0.1:33062         0.0.0.0:*               LISTEN      12037/mysqld</span><br><span class="line">tcp6       0      0 :::33060                :::*                    LISTEN      12037/mysqld</span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      12037/mysqld</span><br></pre></td></tr></table></figure><h2 id="查看线程状态">查看线程状态</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 会显示用户，客户端ip，访问的数据库，执行的命令及其状态等信息</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> processlist;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----------------+--------------------+----------+---------+--------+------------------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> Id  <span class="operator">|</span> <span class="keyword">User</span>            <span class="operator">|</span> Host               <span class="operator">|</span> db       <span class="operator">|</span> Command <span class="operator">|</span> <span class="type">Time</span>   <span class="operator">|</span> State                  <span class="operator">|</span> Info             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----------------+--------------------+----------+---------+--------+------------------------+------------------+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">5</span> <span class="operator">|</span> event_scheduler <span class="operator">|</span> localhost          <span class="operator">|</span> <span class="keyword">NULL</span>     <span class="operator">|</span> Daemon  <span class="operator">|</span> <span class="number">628889</span> <span class="operator">|</span> Waiting <span class="keyword">on</span> <span class="keyword">empty</span> queue <span class="operator">|</span> <span class="keyword">NULL</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">438</span> <span class="operator">|</span> root            <span class="operator">|</span> localhost:<span class="number">56114</span>    <span class="operator">|</span> mysql    <span class="operator">|</span> Query   <span class="operator">|</span>      <span class="number">0</span> <span class="operator">|</span> init                   <span class="operator">|</span> <span class="keyword">show</span> processlist <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">439</span> <span class="operator">|</span> root            <span class="operator">|</span> <span class="number">1.119</span><span class="number">.161</span><span class="number">.30</span>:<span class="number">53840</span> <span class="operator">|</span> novel_db <span class="operator">|</span> Sleep   <span class="operator">|</span>      <span class="number">5</span> <span class="operator">|</span>                        <span class="operator">|</span> <span class="keyword">NULL</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">440</span> <span class="operator">|</span> root            <span class="operator">|</span> <span class="number">1.119</span><span class="number">.161</span><span class="number">.30</span>:<span class="number">53849</span> <span class="operator">|</span> <span class="keyword">NULL</span>     <span class="operator">|</span> Sleep   <span class="operator">|</span>      <span class="number">5</span> <span class="operator">|</span>                        <span class="operator">|</span> <span class="keyword">NULL</span>             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----------------+--------------------+----------+---------+--------+------------------------+------------------+</span></span><br><span class="line"># 或者，两者等价</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.processlist;</span><br><span class="line"></span><br><span class="line"># 查看每个客户端连接数</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> id,client_ip,<span class="built_in">count</span>(client_ip) <span class="keyword">as</span> client_num <span class="keyword">from</span> (<span class="keyword">select</span> substring_index(host,<span class="string">&#x27;:&#x27;</span> ,<span class="number">1</span>) <span class="keyword">as</span> client_ip,id <span class="keyword">from</span> information_schema.processlist ) <span class="keyword">as</span> connect_info <span class="keyword">group</span> <span class="keyword">by</span> client_ip <span class="keyword">order</span> <span class="keyword">by</span> client_num <span class="keyword">desc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+--------------+------------+</span></span><br><span class="line"><span class="operator">|</span> id  <span class="operator">|</span> client_ip    <span class="operator">|</span> client_num <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+--------------+------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">440</span> <span class="operator">|</span> <span class="number">1.119</span><span class="number">.161</span><span class="number">.30</span> <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">5</span> <span class="operator">|</span> localhost    <span class="operator">|</span>          <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+--------------+------------+</span></span><br><span class="line"></span><br><span class="line"># 找出所有执行时间超过 <span class="number">5</span> 分钟的线程，拼凑出 kill 语句，方便后面查杀</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> concat(<span class="string">&#x27;kill &#x27;</span>, id, <span class="string">&#x27;;&#x27;</span>) <span class="keyword">from</span> information_schema.processlist <span class="keyword">where</span> Command <span class="operator">!=</span> <span class="string">&#x27;Sleep&#x27;</span> <span class="keyword">and</span> <span class="type">Time</span> <span class="operator">&gt;</span> <span class="number">300</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="type">Time</span> <span class="keyword">desc</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="operator">|</span> concat(<span class="string">&#x27;kill &#x27;</span>, id, <span class="string">&#x27;;&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"><span class="operator">|</span> kill <span class="number">5</span>;                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+</span></span><br><span class="line"></span><br><span class="line"># 关闭连接，注意kill只能关闭当前正在执行DML的操作，DDL不能关闭</span><br><span class="line">mysql<span class="operator">&gt;</span> kill <span class="number">440</span>;</span><br></pre></td></tr></table></figure><div class="note success"><p><strong>State说明</strong><br>通过<code>show processlist;</code>查看线程状态非常有用,这可以让我们很快地了解当前MySQL在进行的线程,包括线程的状态、是否锁表等，可以实时地查看SQL的执行情况，同时对一些锁表操作进行优化。<br>在一个繁忙的服务器上，可能会看到大量的不正常的状态，例如statistics正占用大量的时间。这通常表示，某个地方有异常了。<br>线程常见的状态有很多，比如:</p><ul class="lvl-0"><li class="lvl-2">statistics: 服务器正在计算统计信息以研究一个查询执行计划。如果线程长时间处于此状态，则服 务器可能是磁盘绑定执行其他工作。</li><li class="lvl-2">Creating tmp table: 该线程正在内存或磁盘上创建临时表。如果表在内存中创建但稍后转换为磁盘表，则该操作期间的状态将为 Copying to tmp table on disk</li><li class="lvl-2">Sending data: 线程正在读取和处理SELECT语句的行，并将数据发送到客户端。由于在此状态期间发生的操作往往会执行大量磁盘访问（读取），因此它通常是给定查询生命周期中运行时间最长的状态。</li><li class="lvl-2">其它状态参考：<a href="https://dev.mysql.com/doc/refman/8.0/en/general-thread-states.html">https://dev.mysql.com/doc/refman/8.0/en/general-thread-states.html</a></li></ul></div><h2 id="常用操作">常用操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> databases; 显示所有数据库</span><br><span class="line">mysql<span class="operator">&gt;</span> use dbname; 打开dbname数据库</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> tables; 显示数据库dbname中所有的表；</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">describe</span> tablename; 显示表mysql数据库中tablename表的列信息，也可以简写为 <span class="keyword">desc</span> tablename;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> tablename; 同上</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> version(); 查看数据库版本号</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> database(); 查看当前选中的数据库</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> now(); 查看数据库当前时间</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">user</span>(); 查看当前登录用户</span><br></pre></td></tr></table></figure><h2 id="表信息相关">表信息相关</h2><h3 id="查看建表语句（包括之后对表的修改）">查看建表语句（包括之后对表的修改）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> actor\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: actor</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `actor` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">45</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb3</span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"># 只查看字段信息</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">desc</span> actor;</span><br></pre></td></tr></table></figure><h3 id="查看表信息">查看表信息</h3><blockquote><p>方式1</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.TABLES <span class="keyword">where</span> TABLE_SCHEMA<span class="operator">=</span><span class="string">&#x27;test_db&#x27;</span> <span class="keyword">and</span> TABLE_NAME<span class="operator">=</span><span class="string">&#x27;tbl_test_info&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">  TABLE_CATALOG: def</span><br><span class="line">   TABLE_SCHEMA: test_db</span><br><span class="line">     TABLE_NAME: tbl_test_info</span><br><span class="line">     TABLE_TYPE: BASE <span class="keyword">TABLE</span></span><br><span class="line">         ENGINE: InnoDB</span><br><span class="line">        VERSION: <span class="number">10</span></span><br><span class="line">     ROW_FORMAT: <span class="keyword">Dynamic</span></span><br><span class="line">     TABLE_ROWS: <span class="number">199</span></span><br><span class="line"> AVG_ROW_LENGTH: <span class="number">7986</span></span><br><span class="line">    DATA_LENGTH: <span class="number">1589248</span></span><br><span class="line">MAX_DATA_LENGTH: <span class="number">0</span></span><br><span class="line">   INDEX_LENGTH: <span class="number">49152</span></span><br><span class="line">      DATA_FREE: <span class="number">4194304</span></span><br><span class="line"> AUTO_INCREMENT: <span class="number">394</span></span><br><span class="line">    CREATE_TIME: <span class="number">2022</span><span class="number">-09</span><span class="number">-08</span> <span class="number">03</span>:<span class="number">52</span>:<span class="number">27</span></span><br><span class="line">    UPDATE_TIME: <span class="keyword">NULL</span></span><br><span class="line">     CHECK_TIME: <span class="keyword">NULL</span></span><br><span class="line">TABLE_COLLATION: utf8mb4_bin</span><br><span class="line">       CHECKSUM: <span class="keyword">NULL</span></span><br><span class="line"> CREATE_OPTIONS:</span><br><span class="line">  TABLE_COMMENT: 测试表</span><br></pre></td></tr></table></figure><blockquote><p>方式2</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> use test_db;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">table</span> status <span class="keyword">like</span> <span class="string">&#x27;tbl_test_info&#x27;</span>\G</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">           Name: tbl_test_info</span><br><span class="line">         Engine: InnoDB</span><br><span class="line">        Version: <span class="number">10</span></span><br><span class="line">     Row_format: <span class="keyword">Dynamic</span></span><br><span class="line">           <span class="keyword">Rows</span>: <span class="number">199</span></span><br><span class="line"> Avg_row_length: <span class="number">7986</span></span><br><span class="line">    Data_length: <span class="number">1589248</span></span><br><span class="line">Max_data_length: <span class="number">0</span></span><br><span class="line">   Index_length: <span class="number">49152</span></span><br><span class="line">      Data_free: <span class="number">4194304</span></span><br><span class="line"> Auto_increment: <span class="number">394</span></span><br><span class="line">    Create_time: <span class="number">2022</span><span class="number">-09</span><span class="number">-08</span> <span class="number">03</span>:<span class="number">52</span>:<span class="number">27</span></span><br><span class="line">    Update_time: <span class="keyword">NULL</span></span><br><span class="line">     Check_time: <span class="keyword">NULL</span></span><br><span class="line">      <span class="keyword">Collation</span>: utf8mb4_bin</span><br><span class="line">       Checksum: <span class="keyword">NULL</span></span><br><span class="line"> Create_options:</span><br><span class="line">        Comment: 测试表</span><br></pre></td></tr></table></figure><h3 id="查看表字段信息">查看表字段信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 方式<span class="number">1</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">full</span> columns <span class="keyword">from</span> test_db.tbl_test_info;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+-------------+------+-----+-------------------+-----------------------------------------------+---------------------------------+-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> Field       <span class="operator">|</span> Type         <span class="operator">|</span> <span class="keyword">Collation</span>   <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span>           <span class="operator">|</span> Extra                                         <span class="operator">|</span> Privileges                      <span class="operator">|</span> Comment                     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+-------------+------+-----+-------------------+-----------------------------------------------+---------------------------------+-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> id          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> auto_increment                                <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 主键                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> source_id   <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> MUL <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 来源id                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> source      <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 来源，<span class="number">1</span>：百度           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name        <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> utf8mb4_bin <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 分类                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name_cn     <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> utf8mb4_bin <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 分类<span class="operator">-</span>中文                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> age         <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> utf8mb4_bin <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 适合的年龄段                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bookNum     <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>                 <span class="operator">|</span>                                               <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 该分类下小说的数量          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> create_time <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> DEFAULT_GENERATED                             <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 创建时间                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> update_time <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span> <span class="keyword">NULL</span>        <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> DEFAULT_GENERATED <span class="keyword">on</span> <span class="keyword">update</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> <span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">references</span> <span class="operator">|</span> 更新时间                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+-------------+------+-----+-------------------+-----------------------------------------------+---------------------------------+-----------------------------+</span></span><br><span class="line"></span><br><span class="line"># 方式<span class="number">2</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> COLUMN_NAME 列名, COLUMN_TYPE 数据类型,DATA_TYPE 字段类型,CHARACTER_MAXIMUM_LENGTH 长度,IS_NULLABLE 是否为空,COLUMN_DEFAULT 默认值,COLUMN_COMMENT 备注 ,column_key 约束 <span class="keyword">from</span> information_schema.columns  <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;test_db&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;tbl_test_info&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+--------------+--------+--------------+-------------------+-----------------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> 列名        <span class="operator">|</span> 数据类型     <span class="operator">|</span> 字段类型     <span class="operator">|</span> 长度   <span class="operator">|</span> 是否为空     <span class="operator">|</span> 默认值            <span class="operator">|</span> 备注                        <span class="operator">|</span> 约束   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+--------------+--------+--------------+-------------------+-----------------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> id          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 主键                        <span class="operator">|</span> PRI    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> source_id   <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 来源id                      <span class="operator">|</span> MUL    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> source      <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 来源，<span class="number">1</span>：百度           <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name        <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> <span class="type">varchar</span>      <span class="operator">|</span>    <span class="number">100</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 分类                        <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> name_cn     <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> <span class="type">varchar</span>      <span class="operator">|</span>    <span class="number">100</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 分类<span class="operator">-</span>中文                   <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> age         <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> <span class="type">varchar</span>      <span class="operator">|</span>    <span class="number">100</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="keyword">NULL</span>              <span class="operator">|</span> 适合的年龄段                <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> bookNum     <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span> <span class="type">int</span>          <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> YES          <span class="operator">|</span> <span class="number">0</span>                 <span class="operator">|</span> 该分类下小说的数量          <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> create_time <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> 创建时间                    <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> update_time <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span> <span class="type">timestamp</span>    <span class="operator">|</span>   <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NO</span>           <span class="operator">|</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="operator">|</span> 更新时间                    <span class="operator">|</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+--------------+--------------+--------+--------------+-------------------+-----------------------------+--------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="基于其它表创建新的表">基于其它表创建新的表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 只创建表结构，完整表结构</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> table_new <span class="keyword">like</span> table_old;</span><br><span class="line"># 将老表数据导入新表，要求新表和老表的表结构必须一模一样</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> table_new <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_old;</span><br><span class="line"># 将老表数据导入新表，自己关联新表和老表的字段</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> table_new(字段<span class="number">1</span>,字段<span class="number">2</span>,…….) <span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2</span>,…….  <span class="keyword">from</span> table_old;</span><br><span class="line"># 清空表数据</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">truncate</span> <span class="keyword">table</span> table_new;</span><br><span class="line"># 删除表</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> table_new;</span><br><span class="line"></span><br><span class="line"># 创建新表的同时将老表数据导入，这种建表方式不会创建索引，不推荐使用</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> table_new <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_old;</span><br><span class="line"># 只会创建表结构，同样不会创建索引等信息</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> table_new <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> table_old <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="系统变量">系统变量</h2><p>可以设置在配置文件中，也可以通过set命令进行设置</p><div class="note success"><p>mysql配置文件中大部分变量都可以通过set命令设置，注意重启mysql后会失效，要及时更新配置文件</p></div><ul class="lvl-0"><li class="lvl-2"><p>设置变量示例</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 查看全部全局变量</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables\G</span><br><span class="line"></span><br><span class="line"># 查看指定变量，如wait_timeout，也可以使用<span class="operator">%</span>进行模糊匹配</span><br><span class="line"># 默认<span class="number">8</span>小时，客户端超过这个时间没有向服务端发送命令，服务器端会自动断开连接</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> &quot;wait_timeout&quot;;</span><br><span class="line"># 定值查询可以使用如下<span class="keyword">sql</span>形式</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@wait</span>_timeout;</span><br><span class="line"># 模糊匹配</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%log_bin%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># 设置全局变量，只要mysql不重启就会一直有效，注意，客户端需要重新连接才能生效</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">global</span> wait_timeout<span class="operator">=</span><span class="number">288000</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> @<span class="variable">@global</span>.wait_timeout<span class="operator">=</span><span class="number">288000</span>;</span><br><span class="line"></span><br><span class="line"># 当前会话有效</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> session wait_timeout<span class="operator">=</span><span class="number">288000</span>;</span><br><span class="line"># 当前会话可简写为如下形式</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> wait_timeout<span class="operator">=</span><span class="number">288000</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>MySQL 8.0 版本支持在线修改全局参数持久化，通过加上 <code>PERSIST</code> 关键字，可以将调整持久化到新的配置文件中，再次重启 db 还可以应用到最新的参数。</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist max_connections<span class="operator">=</span><span class="number">300</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>这种方式并不会修改mysql的配置文件，而是在datadir路径下创建一个<code>mysqld-auto.cnf</code>文件，在数据库启动时，会首先读取它配置文件，最后才读取mysqld-auto.cnf文件。不要手工修改这个文件。</p></li></ul>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more mysqld-auto.cnf</span><br><span class="line">&#123;<span class="string">&quot;Version&quot;</span>: 2, <span class="string">&quot;mysql_dynamic_parse_early_variables&quot;</span>: &#123;<span class="string">&quot;max_connections&quot;</span>: &#123;<span class="string">&quot;Value&quot;</span>: <span class="string">&quot;300&quot;</span>, <span class="string">&quot;Metadata&quot;</span>: &#123;<span class="string">&quot;Host&quot;</span>: <span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;User&quot;</span>: <span class="string">&quot;root&quot;</span>, <span class="string">&quot;Timestamp&quot;</span>: 1665567597776824&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>可手动删除mysqld-auto.cnf文件或将<code>persisted_globals_load</code>变量设置为off来避免该文件的加载。</p></li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;persisted_globals_load&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name          <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> persisted_globals_load <span class="operator">|</span> <span class="keyword">ON</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>持久化为默认值: 全局变量持久化为默认值。注意，是默认值，而不是修改前的值</p></li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist max_connections<span class="operator">=</span><span class="keyword">default</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>清空持久化变量: 只会清空mysqld-auto.cnf中的配置，不会改变已经持久化的变量值</p></li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> reset persist;</span><br></pre></td></tr></table></figure>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more mysqld-auto.cnf</span><br><span class="line">&#123;<span class="string">&quot;Version&quot;</span>: 2&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>修改只读变量，对于read only的参数，修改参数后需要重启才能生效</p></li></ul>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist innodb_log_file_size<span class="operator">=</span><span class="number">2073741824</span>;</span><br><span class="line">ERROR <span class="number">1238</span> (HY000): Variable <span class="string">&#x27;innodb_log_file_size&#x27;</span> <span class="keyword">is</span> a read <span class="keyword">only</span> variable</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist_only innodb_log_file_size<span class="operator">=</span><span class="number">2073741824</span>;</span><br><span class="line">ERROR <span class="number">3630</span> (<span class="number">42000</span>): Access denied; you need SYSTEM_VARIABLES_ADMIN <span class="keyword">and</span> PERSIST_RO_VARIABLES_ADMIN privileges <span class="keyword">for</span> this operation</span><br><span class="line"># 先授权</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">GRANT</span> SYSTEM_VARIABLES_ADMIN,PERSIST_RO_VARIABLES_ADMIN <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> persist_only innodb_log_file_size<span class="operator">=</span><span class="number">2073741824</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_log_file_size&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name        <span class="operator">|</span> <span class="keyword">Value</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> innodb_log_file_size <span class="operator">|</span> <span class="number">268435456</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------+-----------+</span></span><br></pre></td></tr></table></figure>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">more mysqld-auto.cnf</span><br><span class="line">&#123;<span class="string">&quot;Version&quot;</span>: 2, <span class="string">&quot;mysql_static_variables&quot;</span>: &#123;<span class="string">&quot;innodb_log_file_size&quot;</span>: &#123;<span class="string">&quot;Value&quot;</span>: <span class="string">&quot;2073741824&quot;</span>, <span class="string">&quot;Metadata&quot;</span>: &#123;<span class="string">&quot;Host&quot;</span>: <span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;User&quot;</span>: <span class="string">&quot;root&quot;</span>, <span class="string">&quot;Timestamp&quot;</span>: 1665568764002942&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="mysql中的数据类型对应java实体数据类型">mysql中的数据类型对应java实体数据类型</h2><ul class="lvl-0"><li class="lvl-2"><p>数值类型</p></li></ul><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">java类型</th><th style="text-align:left">大小</th><th style="text-align:left">范围（有符号）</th><th style="text-align:left">范围（无符号）</th><th style="text-align:left">用途</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">TINYINT</td><td style="text-align:left">Boolean/int/Integer</td><td style="text-align:left">1 字节</td><td style="text-align:left">(-128, 127)</td><td style="text-align:left">(0, 255)</td><td style="text-align:left">小整数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">SMALLINT</td><td style="text-align:left">int/Integer</td><td style="text-align:left">2 字节</td><td style="text-align:left">(-32768, 32767)</td><td style="text-align:left">(0, 65535)</td><td style="text-align:left">大整数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">MEDIUMINT</td><td style="text-align:left">int/Integer</td><td style="text-align:left">3 字节</td><td style="text-align:left">(-8388608, 8388607)</td><td style="text-align:left">(0, 16777215)</td><td style="text-align:left">大整数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">INT或 INTEGER</td><td style="text-align:left">int/Integer/Long</td><td style="text-align:left">4 字节</td><td style="text-align:left">(-2147483648, 2147483647)</td><td style="text-align:left">(0, 4294967295)</td><td style="text-align:left">大整数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">BIGINT</td><td style="text-align:left">int/Integer/Long/BigInteger</td><td style="text-align:left">8 字节</td><td style="text-align:left">(-9233372036854775808, 9223372036854775807)</td><td style="text-align:left">(0, 18446744073709551615)</td><td style="text-align:left">极大整数值</td><td style="text-align:left">BigInteger最大值没有限制，内部是int[]数组，缺点是速度慢</td></tr><tr><td style="text-align:left">FLOAT</td><td style="text-align:left">float/Float</td><td style="text-align:left">4 字节</td><td style="text-align:left">(-3.402823466E+38, -1.175494351E-38)，0，(1.175494351E-38，3.402823466351E+38)</td><td style="text-align:left">0, (1.175494351E-38, 3.402823466E+38)</td><td style="text-align:left">单精度 浮点数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DOUBLE</td><td style="text-align:left">double/Double</td><td style="text-align:left">8 字节</td><td style="text-align:left">(-1.7976931348623157E+308, -2.2250738585072014E-308), 0, (2.2250738585072014E-308, 1.7976931348623157E+308)</td><td style="text-align:left">0, (2.2250738585072014E-308, 1.7976931348623157E+308)</td><td style="text-align:left">双精度 浮点数值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DECIMAL</td><td style="text-align:left">BigDecimal</td><td style="text-align:left">对DECIMAL(M,D)如果M&gt;D,为M+2否则为D+2</td><td style="text-align:left">依赖于M和D的值</td><td style="text-align:left">依赖于M和D的值</td><td style="text-align:left">高精度小数值</td><td style="text-align:left">用于货币计算等高精度场景</td></tr></tbody></table><blockquote><p>优化建议</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果整形数据没有负数，如ID号，建议指定为UNSIGNED无符号类型，容量可以扩大一倍。</span><br><span class="line">建议使用TINYINT代替ENUM、BITENUM、SET。</span><br><span class="line">避免使用整数的显示宽度，也就是说，不要用INT(10)类似的方法指定字段显示宽度，直接用INT。</span><br><span class="line">DECIMAL最适合保存准确度要求高，而且用于计算的数据，比如价格。但是在使用DECIMAL类型的时候，注意长度设置。</span><br><span class="line">建议使用整形类型来运算和存储实数，方法是，实数乘以相应的倍数后再操作。</span><br><span class="line">整数通常是最佳的数据类型，因为它速度快，并且能使用AUTO_INCREMENT。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>日期和时间</p></li></ul><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">java类型</th><th style="text-align:left">大小</th><th style="text-align:left">范围（有符号）</th><th style="text-align:left">范围（无符号）</th><th style="text-align:left">用途</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left">DATE</td><td style="text-align:left">Date/LocalDate</td><td style="text-align:left">3</td><td style="text-align:left">1000-01-01 到 9999-12-31</td><td style="text-align:left">YYYY-MM-DD</td><td style="text-align:left">日期值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">TIME</td><td style="text-align:left">Date/LocalDateTime</td><td style="text-align:left">3</td><td style="text-align:left">‘-838:59:59’ 到 ‘838:59:59’</td><td style="text-align:left">HH:MM:SS</td><td style="text-align:left">时间值或持续时间</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">YEAR</td><td style="text-align:left">Date</td><td style="text-align:left">1</td><td style="text-align:left">1901 到 2155</td><td style="text-align:left">YYYY</td><td style="text-align:left">年份值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">DATETIME</td><td style="text-align:left">Date/LocalDateTime</td><td style="text-align:left">8</td><td style="text-align:left">1000-01-01 00:00:00 到 9999-12-31 23:59:59</td><td style="text-align:left">YYYY-MM-DD HH:MM:SS</td><td style="text-align:left">混合日期和时间值</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">TIMESTAMP</td><td style="text-align:left">Date/LocalDateTime</td><td style="text-align:left">4</td><td style="text-align:left">1970-01-01 00:00:00 到 2038-01-19 03:14:07</td><td style="text-align:left">YYYYMMDDhhmmss</td><td style="text-align:left">混合日期和时间值，时间戳</td><td style="text-align:left"></td></tr></tbody></table><blockquote><p>优化建议</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TIME 类型的取值范围为 -838：59：59～838：59：59，小时部分如此大的原因是TIME类型不仅可以用于表示一天的时间，还可能是某个事件过去的时间或两个事件之间的时间间隔（可大于 24 小时，或者甚至为负）。</span><br><span class="line">MySQL能存储的最小时间粒度为秒。</span><br><span class="line">建议用DATE数据类型来保存日期。MySQL中默认的日期格式是yyyy-mm-dd。</span><br><span class="line">用MySQL的内建类型DATE、TIME、DATETIME来存储时间，而不是使用字符串。</span><br><span class="line">当数据格式为TIMESTAMP和DATETIME时，可以用CURRENT_TIMESTAMP作为默认（MySQL5.6以后）， MySQL会自动返回记录插入的确切时间。</span><br><span class="line">TIMESTAMP是UTC时间戳，与时区相关。</span><br><span class="line">DATETIME的存储格式是一个YYYYMMDD HH:MM:SS的整数，与时区无关，你存了什么，读出来就是什么。</span><br><span class="line">除非有特殊需求，一般的公司建议使用TIMESTAMP，它比DATETIME更节约空间，但是像阿里这样的公司一般 会用DATETIME，因为不用考虑TIMESTAMP将来的时间上限问题。</span><br><span class="line">有时人们把Unix的时间戳保存为整数值，但是这通常没有任何好处，这种格式处理起来不太方便，我们并不推荐 它。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>字符串–String</p></li></ul><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">java类型</th><th style="text-align:left">大小</th><th style="text-align:left">用途</th></tr></thead><tbody><tr><td style="text-align:left">CHAR</td><td style="text-align:left">String</td><td style="text-align:left">0-255字节</td><td style="text-align:left">定长字符串，char(n)当插入的字符串实际长度不足n时， 插入空格进行补充保存。在进行检索时，尾部的空格会被 去掉。</td></tr><tr><td style="text-align:left">VARCHAR</td><td style="text-align:left">String</td><td style="text-align:left">0-65535字节</td><td style="text-align:left">变长字符串，varchar(n)中的n代表最大列长度，插入的字符串实际长度不足n时不会补充空格</td></tr><tr><td style="text-align:left">TINYBLOB</td><td style="text-align:left">byte[]</td><td style="text-align:left">0-255字节</td><td style="text-align:left">不超过 255 个字符的二进制字符串</td></tr><tr><td style="text-align:left">TINYTEXT</td><td style="text-align:left">String</td><td style="text-align:left">0-255字节</td><td style="text-align:left">短文本字符串</td></tr><tr><td style="text-align:left">BLOB</td><td style="text-align:left">byte[]</td><td style="text-align:left">0-65535字节</td><td style="text-align:left">二进制形式的长文本数据</td></tr><tr><td style="text-align:left">TEXT</td><td style="text-align:left">String</td><td style="text-align:left">0-65535字节</td><td style="text-align:left">长文本数据</td></tr><tr><td style="text-align:left">MEDIUMBLOB</td><td style="text-align:left">byte[]</td><td style="text-align:left">0-16777215字节</td><td style="text-align:left">二进制形式的中等长度文本数据</td></tr><tr><td style="text-align:left">MEDIUMTEXT</td><td style="text-align:left">String</td><td style="text-align:left">0-16777215字节</td><td style="text-align:left">中等长度文本数据</td></tr><tr><td style="text-align:left">LONGBLOB</td><td style="text-align:left">byte[]</td><td style="text-align:left">0-4294967295字节</td><td style="text-align:left">二进制形式的极大文本数据</td></tr><tr><td style="text-align:left">LONGTEXT</td><td style="text-align:left">String</td><td style="text-align:left">0-4294967295字节</td><td style="text-align:left">极大文本数据</td></tr></tbody></table><blockquote><p>优化建议</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">字符串的长度相差较大用VARCHAR；字符串短，且所有值都接近一个长度用CHAR。</span><br><span class="line">CHAR和VARCHAR适用于包括人名、邮政编码、电话号码和不超过255个字符长度的任意字母数字组合。</span><br><span class="line">varchar 和 text 都可以存储变长字符串且字符串长度上限为65535字节，但是text不能设置默认值，且存储和查询速度慢、仅支持前缀索引。</span><br><span class="line">当varchar大于某些数值的时候，其会自动转换为text，大于varchar（255）变为 tinytext，大于varchar（500）变为 text，大于varchar（20000）变为 mediumtext。</span><br><span class="line">那些要用来计算的数字不要用VARCHAR类型保存，因为可能会导致一些与计算相关的问题。换句话说，可能影响到计算的准确性和完整性。</span><br><span class="line">尽量少用BLOB和TEXT，如果实在要用可以考虑将BLOB和TEXT字段单独存一张表，用id关联。</span><br><span class="line">BLOB系列存储二进制字符串，与字符集无关。TEXT系列存储非二进制字符串，与字符集相关。</span><br><span class="line">BLOB和TEXT都不能有默认值。</span><br></pre></td></tr></table></figure><h2 id="数据库导出与导入">数据库导出与导入</h2><h3 id="全量导出">全量导出</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建库、建表和数据语句</span></span><br><span class="line">mysqldump -uroot --all-databases --triggers --routines --events -p &gt; all_databases.sql</span><br></pre></td></tr></table></figure><h3 id="导出指定数据库">导出指定数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建表和数据语句</span></span><br><span class="line">mysqldump -uroot -p DB1 &gt; DB1.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 包含建库、建表和数据语句[推荐]</span></span><br><span class="line">mysqldump -uroot -p --databases DB1 DB2 &gt; databases.sql</span><br></pre></td></tr></table></figure><div class="tips"><p><strong>重要参数</strong><br>-B, --databases     Dump several databases. 备份多个数据库<br>-R, --routines      Dump stored routines (functions and procedures). 备份函数和存储过程<br>-E, --events        Dump events. 备份events<br>–triggers          Dump triggers for each dumped table.  备份每个表的触发器</p></div><h3 id="导出指定数据库的指定表">导出指定数据库的指定表</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建表和数据语句</span></span><br><span class="line">mysqldump -uroot -p DB1 --tables table1 table2 &gt; tables.sql</span><br></pre></td></tr></table></figure><h3 id="导出指定数据库时排除某些表">导出指定数据库时排除某些表</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建库、建表和数据语句</span></span><br><span class="line">mysqldump -uroot -p --databases DB1 DB2 --ignore-table=DB1.table1 --ignore-table=DB2.table2 &gt; tables.sql</span><br></pre></td></tr></table></figure><h3 id="导出结构不导出数据-d">导出结构不导出数据 <code>-d</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含建表语句</span></span><br><span class="line">mysqldump -uroot -p -d DB1 --tables table1 table2 &gt; tables.sql</span><br></pre></td></tr></table></figure><h3 id="导出数据不导出结构-t">导出数据不导出结构 <code>-t</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 包含数据语句</span></span><br><span class="line">mysqldump -uroot -p -t DB1 --tables table1 table2 &gt; tables.sql</span><br></pre></td></tr></table></figure><h3 id="导入数据">导入数据</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p &lt; all_databases.sql</span><br><span class="line">mysql -uroot -p &lt; databases.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># -D指定要导入的数据库，此时数据库必须先创建好</span></span><br><span class="line">mysql -uroot -p -Dbdname &lt; DB1.sql</span><br><span class="line">mysql -uroot -p -Dbdname &lt; tables.sql</span><br></pre></td></tr></table></figure><h2 id="导入导出CSV">导入导出CSV</h2><h3 id="导出CSV">导出CSV</h3><ul class="lvl-0"><li class="lvl-2"><p>需要先开通导出权限，默认关闭</p><ul class="lvl-2"><li class="lvl-4"><code>secure_file_prive=null</code> 限制mysql不允许导出，默认值</li><li class="lvl-4"><code>secure_file_priv=/path/</code> 限制mysql的导出只能发生在默认的/path/目录下</li><li class="lvl-4"><code>secure_file_priv=&quot;&quot;</code> 不对mysql的导出做限制，可以导出到任意目录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;secure_file_priv&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> secure_file_priv <span class="operator">|</span>  <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-4">这是一个只读变量，需要修改mysql的配置文件，这里我们设置为<code>secure_file_priv=&quot;&quot;</code></li></ul></li><li class="lvl-2"><p>命令行执行导出</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p DBName tableName --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> --tab=/mysqldump_dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明：</span></span><br><span class="line">--fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span>：每个字段以空字符结尾。</span><br><span class="line">--fields-terminated-by=<span class="string">&#x27;,&#x27;</span>：字段间以逗号分隔。</span><br><span class="line">--lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span>：以回车符为每行的结束。</span><br><span class="line">--tab=/mysqldump_dir：生成文件的路径，确保有写权限</span><br><span class="line">生成的文件包含两个，一个是数据文件：tableName.txt，一个是建表语句：tableName.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果同时导出多张表，则也会分别生成相应的2个文件。</span></span><br><span class="line">mysqldump -uroot -p DBName table1 table2 --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> --tab=/mysqldump_dir</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>sql执行导出</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 导出全部字段</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tableName <span class="keyword">into</span> outfile <span class="string">&#x27;/mysqldump_dir/tableName.csv&#x27;</span> fields terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span>  ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;&quot;&#x27;</span> lines terminated <span class="keyword">by</span> <span class="string">&#x27;\r\n&#x27;</span>;</span><br><span class="line"></span><br><span class="line"># 导出部分字段</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2</span> <span class="keyword">from</span> tableName <span class="keyword">into</span> outfile <span class="string">&#x27;/mysqldump_dir/tableName.csv&#x27;</span> fields terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span>  ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;&quot;&#x27;</span> lines terminated <span class="keyword">by</span> <span class="string">&#x27;\r\n&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这种方式只会导出数据文件，同时可以指定要导出的字段</p><h3 id="导入CSV">导入CSV</h3><ul class="lvl-0"><li class="lvl-2"><p>需要先开通导入权限，默认关闭</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;local_infile&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> local_infile  <span class="operator">|</span> OFF   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"># 开通</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">GLOBAL</span> local_infile<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>mysql</code>和<code>mysqld</code>都需要配置开通，不要配置到<code>client</code>下，因为只有<code>mysql</code>命令支持该参数</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line">local_infile=ON</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">local_infile=ON</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>命令行导入<br><strong>此方法要求文件名称&quot;table1.csv&quot;必须为表名称&quot;table1&quot;</strong></p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysqlimport --<span class="built_in">local</span> -uroot -p DBName -i --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> ./table1.csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数说明</span></span><br><span class="line">-L, --<span class="built_in">local</span> : 读取的所有文件都是基于执行命令时所在的客户端。</span><br><span class="line">-i, --ignore  :如果唯一索引重复则忽略后面的数据， 如果希望覆盖前面的数据，需要使用 -r 参数，两个参数不能同时出现。</span><br><span class="line">--fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span>：每个字段以空字符结尾。</span><br><span class="line">--fields-terminated-by=<span class="string">&#x27;,&#x27;</span>：字段间以逗号分隔。</span><br><span class="line">--lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span>：以回车符为每行的结束。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时由于没有指定数据与字段对应方式，所以默认按表中字段顺序导入，如果要指定导入的字段，需要增加 --columns 参数，逗号分隔</span></span><br><span class="line">mysqlimport --<span class="built_in">local</span> -uroot -p DBName -i --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> --columns=字段1,字段2,字段3 ./table1.csv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果数据文件中的头部有title，可以指定忽略掉头部的几行，--ignore-lines=1：忽略掉第一行。</span></span><br><span class="line">mysqlimport --<span class="built_in">local</span> -uroot -p DBName -i --fields-enclosed-by=<span class="string">&#x27;&quot;&#x27;</span> --fields-terminated-by=<span class="string">&#x27;,&#x27;</span> --lines-terminated-by=<span class="string">&#x27;\r\n&#x27;</span> --ignore-lines=1 ./table1.csv</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>sql执行导入<br><strong>此方法不要求文件名称与表名称一致</strong></p></li></ul><div class="warning"><p><strong>警告⚠️</strong><br>明明配置文件中已经配置了<code>local_infile=ON</code>，但是通过sql执行<code>load data local infile</code>时还是会报错呢？<br>这就说明客户端运行时没有找到默认的配置文件，所以还是建议把<code>my.cnf</code>放到<code>/etc</code>目录下吧<br><em><strong>也可以在登录时加上<code>--local-infile</code></strong></em></p></div><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p --local-infile</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; load data local infile &#x27;~/file.csv&#x27; ignore into table table1 FIELDS TERMINATED BY &#x27;,&#x27; ENCLOSED BY &#x27;&quot;&#x27; LINES TERMINATED BY &#x27;\r\n&#x27;;</span><br><span class="line"></span><br><span class="line"># 跳过表头</span><br><span class="line">mysql&gt; load data local infile &#x27;~/file.csv&#x27; ignore into table table1 FIELDS TERMINATED BY &#x27;,&#x27; ENCLOSED BY &#x27;&quot;&#x27; LINES TERMINATED BY &#x27;\r\n&#x27; ignore 1 lines;</span><br><span class="line"></span><br><span class="line"># 指定字段</span><br><span class="line">mysql&gt; load data local infile &#x27;~/file.csv&#x27; ignore into table table1 FIELDS TERMINATED BY &#x27;,&#x27; ENCLOSED BY &#x27;&quot;&#x27; LINES TERMINATED BY &#x27;\r\n&#x27; ignore 1 lines (字段1,字段2,字段3);</span><br><span class="line"></span><br><span class="line">#参数说明：</span><br><span class="line">ignore : 如果唯一索引重复则忽略后面的数据， 如果希望覆盖前面的数据，需要使用 replace 参数，两个参数不能同时出现。</span><br><span class="line">ignore 1 lines : 忽略开头的行数</span><br><span class="line">(字段1,字段2,字段3) : 关联的字段顺序</span><br></pre></td></tr></table></figure><h2 id="mysql时区设置">mysql时区设置</h2><ul class="lvl-0"><li class="lvl-2"><p>查看当前mysql时区</p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">SYSTEM</span>表示使用系统时区</span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@global</span>.time_zone, @<span class="variable">@session</span>.time_zone;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@global</span>.time_zone <span class="operator">|</span> @<span class="variable">@session</span>.time_zone <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">SYSTEM</span>             <span class="operator">|</span> <span class="keyword">SYSTEM</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%time_zone%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> system_time_zone <span class="operator">|</span> UTC    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> time_zone        <span class="operator">|</span> <span class="keyword">SYSTEM</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-4"><p>查看系统时区</p></li></ul>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜ <span class="built_in">date</span> +<span class="string">&quot;%Z %z&quot;</span></span><br><span class="line">UTC +0000</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>设置时区</p><ul class="lvl-2"><li class="lvl-4">临时设置</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> now()</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">08</span>:<span class="number">38</span>:<span class="number">03</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> time_zone<span class="operator">=</span><span class="string">&#x27;+08:00&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@global</span>.time_zone, @<span class="variable">@session</span>.time_zone;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@global</span>.time_zone <span class="operator">|</span> @<span class="variable">@session</span>.time_zone <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">SYSTEM</span>             <span class="operator">|</span> <span class="operator">+</span><span class="number">08</span>:<span class="number">00</span>              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+---------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%time_zone%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name    <span class="operator">|</span> <span class="keyword">Value</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> system_time_zone <span class="operator">|</span> UTC    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> time_zone        <span class="operator">|</span> <span class="operator">+</span><span class="number">08</span>:<span class="number">00</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+--------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> now()</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> now()               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2022</span><span class="number">-10</span><span class="number">-26</span> <span class="number">16</span>:<span class="number">38</span>:<span class="number">29</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br></pre></td></tr></table></figure><ul class="lvl-2"><li class="lvl-4">永久设置</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">修改配置文件 /etc/my.cnf</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># 设置时区，默认系统时区</span></span><br><span class="line">default-time-zone=<span class="string">&#x27;+08:00&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT @@global.time_zone, @@session.time_zone;</span><br><span class="line">+--------------------+---------------------+</span><br><span class="line">| @@global.time_zone | @@session.time_zone |</span><br><span class="line">+--------------------+---------------------+</span><br><span class="line">| +08:00             | +08:00              |</span><br><span class="line">+--------------------+---------------------+</span><br><span class="line"></span><br><span class="line">show variables like <span class="string">&#x27;%time_zone%&#x27;</span>;</span><br><span class="line">+------------------+--------+</span><br><span class="line">| Variable_name    | Value  |</span><br><span class="line">+------------------+--------+</span><br><span class="line">| system_time_zone | UTC    |</span><br><span class="line">| time_zone        | +08:00 |</span><br><span class="line">+------------------+--------+</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>客户端连接时也要设置时区<code>serverTimezone=Asia/Shanghai</code></p></li></ul><h2 id="mysql地区-区域-设置">mysql地区(区域)设置</h2><ul class="lvl-0"><li class="lvl-2"><p><code>lc_time_names</code>系统变量指示的区域设置控制用于显示日期和月份名称和缩写的语言。此变量影响<code>DATE_FORMAT()</code>、<code>DAYNAME()</code>和<code>MONTHNAME()</code>函数的输出。</p></li><li class="lvl-2"><p><code>lc_time_names</code>不影响<code>STR_TO_DATE()</code>或<code>GET_FORMAT()</code>函数。</p></li><li class="lvl-2"><p><code>lc_time_names</code>值不影响<code>FORMAT()</code>的结果，默认值都是’en_US’，此函数采用可选的第三个参数设置区域，允许的区域设置值与lc_time_names系统变量的合法值相同</p></li><li class="lvl-2"><p>MySQL服务器区域设置支持请查看<a href="https://dev.mysql.com/doc/refman/8.0/en/locale-support.html">https://dev.mysql.com/doc/refman/8.0/en/locale-support.html</a></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@lc</span>_time_names;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@lc</span>_time_names <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> en_US           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> DAYNAME(<span class="string">&#x27;2020-01-01&#x27;</span>), MONTHNAME(<span class="string">&#x27;2020-01-01&#x27;</span>),DATE_FORMAT(<span class="string">&#x27;2020-01-01&#x27;</span>,<span class="string">&#x27;%W %a %M %b&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------+-----------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> DAYNAME(<span class="string">&#x27;2020-01-01&#x27;</span>) <span class="operator">|</span> MONTHNAME(<span class="string">&#x27;2020-01-01&#x27;</span>) <span class="operator">|</span> DATE_FORMAT(<span class="string">&#x27;2020-01-01&#x27;</span>,<span class="string">&#x27;%W %a %M %b&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------+-----------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Wednesday             <span class="operator">|</span> January                 <span class="operator">|</span> Wednesday Wed January Jan               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------+-----------------------------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> lc_time_names <span class="operator">=</span> <span class="string">&#x27;de_DE&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> DAYNAME(<span class="string">&#x27;2020-01-01&#x27;</span>), MONTHNAME(<span class="string">&#x27;2020-01-01&#x27;</span>),DATE_FORMAT(<span class="string">&#x27;2020-01-01&#x27;</span>,<span class="string">&#x27;%W %a %M %b&#x27;</span>)</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------+-----------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> DAYNAME(<span class="string">&#x27;2020-01-01&#x27;</span>) <span class="operator">|</span> MONTHNAME(<span class="string">&#x27;2020-01-01&#x27;</span>) <span class="operator">|</span> DATE_FORMAT(<span class="string">&#x27;2020-01-01&#x27;</span>,<span class="string">&#x27;%W %a %M %b&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------+-----------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Mittwoch              <span class="operator">|</span> Januar                  <span class="operator">|</span> Mittwoch Mi Januar Jan                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------+-----------------------------------------+</span></span><br><span class="line"></span><br><span class="line"># 可见lc_time_names无论设置为什么，format函数使用的<span class="keyword">local</span>默认值都是en_US</span><br><span class="line"><span class="keyword">select</span> format(<span class="number">1450028.123</span>,<span class="number">2</span>),format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;en_US&#x27;</span>),format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;de_DE&#x27;</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------------+-------------------------------+</span></span><br><span class="line"><span class="operator">|</span> format(<span class="number">1450028.123</span>,<span class="number">2</span>) <span class="operator">|</span> format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;en_US&#x27;</span>) <span class="operator">|</span> format(<span class="number">1450028.123</span>,<span class="number">2</span>,<span class="string">&#x27;de_DE&#x27;</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------------+-------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>,<span class="number">450</span>,<span class="number">028.12</span>          <span class="operator">|</span> <span class="number">1</span>,<span class="number">450</span>,<span class="number">028.12</span>                  <span class="operator">|</span> <span class="number">1.450</span><span class="number">.028</span>,<span class="number">12</span>                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+-------------------------------+-------------------------------+</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!--
 **加粗**
 *斜体*
 ***加粗并斜体***
 ~~删除线~~
 ==突出显示==
 `突出显示(推荐)`
 ++下划线++
 ~下标~
 ^上标^
 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.
 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)

 +++ **点击折叠**
 这是被隐藏的内容
 +++
 --&gt;
&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;MySql知识点介绍:执行计划相关、索引相关、用户管理、线程状态、常用操作、表信息相关、系统变量、mysql中的数据类型对应java实体数据类型、数据库导出与导入，等等&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;
&lt;p&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;，&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Springboot-JPA之AOP保存历史记录</title>
    <link href="https://blog.hanqunfeng.com/2022/09/23/springboot-data-jpa-aop-history/"/>
    <id>https://blog.hanqunfeng.com/2022/09/23/springboot-data-jpa-aop-history/</id>
    <published>2022-09-23T13:30:05.000Z</published>
    <updated>2023-02-22T04:52:11.573Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">业务中有这么个需求，就是需要记录每条记录的历史，并要记录该记录变更的时间和操作人，即每条记录的新增、修改和删除都要记录</li></ul><span id="more"></span><h2 id="业务分析">业务分析</h2><ul class="lvl-0"><li class="lvl-2"><p>1.业务系统架构基于springboot，并采用springboot-jpa的方式处理数据</p></li><li class="lvl-2"><p>2.业务系统中部分表设计之初并没有变更时间和操作人字段</p></li><li class="lvl-2"><p>3.业务系统已经运行一段时间，很多功能已经开发完成，不适合采用侵入代码的形式进行修改</p></li><li class="lvl-2"><p>4.系统并发量不大</p></li></ul><h2 id="解决方案">解决方案</h2><ul class="lvl-0"><li class="lvl-2"><p>基于对业务系统的分析，决定采用AOP的方式在每次记录变更的同时保存记录流水</p></li><li class="lvl-2"><p>因为采用springboot-jpa的方式处理数据，所以可以将切入点设置在类似<code>CrudRepository</code>的修改记录的方法上</p></li></ul><h2 id="具体实现">具体实现</h2><ul class="lvl-0"><li class="lvl-2"><p><code>DataHistoryAspect.java</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqf.support;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.hanqf.utils.CP_ClassUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.ArrayUtils;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.AfterReturning;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.StreamSupport;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;历史数据保存拦截器&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2022/9/20 16:11.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 说明：</span></span><br><span class="line"><span class="comment"> *   1.以关系型数据库为例</span></span><br><span class="line"><span class="comment"> *   2.所有Entity都要有唯一主键<span class="doctag">@Id</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataHistoryAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不需要保存历史数据的表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] IGNORE_TABLES = &#123;<span class="string">&quot;tbl_cp_logger&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增和修改</span></span><br><span class="line"><span class="comment">     * CrudRepository 针对关系型数据库（mysql,oracle等），Mongo，ES等等</span></span><br><span class="line"><span class="comment">     * JpaRepository  只针对关系型数据库（mysql,oracle等）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * &lt;S extends T&gt; S save(S entity);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.save(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">savePointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * &lt;S extends T&gt; S saveAndFlush(S entity);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.saveAndFlush(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAndFlushPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * &lt;S extends T&gt; List&lt;S&gt; saveAll(Iterable&lt;S&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.saveAll(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAllPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * &lt;S extends T&gt; List&lt;S&gt; saveAllAndFlush(Iterable&lt;S&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.saveAllAndFlush(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAllAndFlushPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     * CrudRepository 针对关系型数据库（mysql,oracle等），Mongo，ES等等</span></span><br><span class="line"><span class="comment">     * JpaRepository  只针对关系型数据库（mysql,oracle等）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void deleteById(ID id);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteById(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteByIdPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void deleteAllById(Iterable&lt;? extends ID&gt; ids);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAllById(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllByIdPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void deleteAll(Iterable&lt;? extends T&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAll(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllIterablePointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void delete();</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.delete(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deletePointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * CrudRepository</span></span><br><span class="line"><span class="comment">     * void deleteAll();</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAll())&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * void deleteAllInBatch();</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAllInBatch())&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllInBatchPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * void deleteAllInBatch(Iterable&lt;T&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAllInBatch(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllInBatchIterablePointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * JpaRepository</span></span><br><span class="line"><span class="comment">     * void deleteAllInBatch(Iterable&lt;T&gt; entities);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(* com.hanqf.function..dao.*.deleteAllByIdInBatch(Iterable))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllByIdInBatchPointCut</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;savePointCut() || saveAndFlushPointCut()&quot;, returning = &quot;result&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAfterReturning</span><span class="params">(JoinPoint joinPoint, Object result)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect afterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">model</span> <span class="operator">=</span> result;</span><br><span class="line">            Class&lt;?&gt; modelClass = model.getClass();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">dataId</span> <span class="operator">=</span> String.valueOf(CP_ClassUtil.getFieldValue(model, CP_ClassUtil.getField(modelClass, Id.class)));</span><br><span class="line">                makeHistory(methodName, objectMapper.writeValueAsString(model), table.name(), dataId);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;saveAllPointCut() || saveAllAndFlushPointCut()&quot;, returning = &quot;result&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveAllAfterReturning</span><span class="params">(JoinPoint joinPoint, List result)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect saveAllAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">            <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                result.stream().forEach(entity -&gt; &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">dataId</span> <span class="operator">=</span> String.valueOf(CP_ClassUtil.getFieldValue(entity, CP_ClassUtil.getField(modelClass, Id.class)));</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        makeHistory(methodName, objectMapper.writeValueAsString(entity), table.name(), dataId);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;(deleteAllIterablePointCut() || deleteAllInBatchIterablePointCut()) &amp;&amp; args(entities)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllIterablePointCut</span><span class="params">(JoinPoint joinPoint, Iterable entities)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteByIdAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line">            <span class="keyword">if</span> (modelClass != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">                <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                    StreamSupport.stream(entities.spliterator(), <span class="literal">true</span>)</span><br><span class="line">                            .forEach(entity -&gt; &#123;</span><br><span class="line">                                <span class="keyword">try</span> &#123;</span><br><span class="line">                                    <span class="type">String</span> <span class="variable">dataId</span> <span class="operator">=</span> String.valueOf(CP_ClassUtil.getFieldValue(entity, CP_ClassUtil.getField(entity.getClass(), Id.class)));</span><br><span class="line">                                    makeHistory(methodName, objectMapper.writeValueAsString(entity), table.name(), dataId);</span><br><span class="line">                                &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;(deleteAllByIdPointCut() || deleteAllByIdInBatchPointCut()) &amp;&amp; args(ids)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllByIdPointCutAfterReturning</span><span class="params">(JoinPoint joinPoint, Iterable ids)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteAllByIdPointCutAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (modelClass != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">                <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                    StreamSupport.stream(ids.spliterator(), <span class="literal">true</span>)</span><br><span class="line">                            .forEach(id -&gt; makeHistory(methodName, String.valueOf(id), table.name(), String.valueOf(id)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;deleteByIdPointCut() &amp;&amp; args(id)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteByIdAfterReturning</span><span class="params">(JoinPoint joinPoint, Object id)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteByIdAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (modelClass != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">                <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                    makeHistory(methodName, String.valueOf(id), table.name(), String.valueOf(id));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;deletePointCut() &amp;&amp; args(entity)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAfterReturning</span><span class="params">(JoinPoint joinPoint, Object entity)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (modelClass != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">                <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">                <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">dataId</span> <span class="operator">=</span> String.valueOf(CP_ClassUtil.getFieldValue(entity, CP_ClassUtil.getField(modelClass, Id.class)));</span><br><span class="line">                    makeHistory(methodName, objectMapper.writeValueAsString(entity), table.name(), dataId);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;deleteAllPointCut() || deleteAllInBatchPointCut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteAllAfterReturning</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;DataHistoryAspect deleteAllAfterReturning....&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Class</span> <span class="variable">targetInterface</span> <span class="operator">=</span> CP_ClassUtil.getProxyTargetInterface(joinPoint.getTarget(), <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">final</span> Class&lt;?&gt; modelClass = CP_ClassUtil.getTIClass(targetInterface, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">MethodSignature</span> <span class="variable">methodSignature</span> <span class="operator">=</span> (MethodSignature) joinPoint.getSignature();</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> methodSignature.getMethod();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> method.getName();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//必须被@Table注解的类</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">Table</span> <span class="variable">table</span> <span class="operator">=</span> modelClass.getAnnotation(Table.class);</span><br><span class="line">            <span class="keyword">if</span> (table != <span class="literal">null</span> &amp;&amp; !ArrayUtils.contains(IGNORE_TABLES, table.name())) &#123;</span><br><span class="line">                makeHistory(methodName, <span class="string">&quot;deleteAll&quot;</span>, table.name(), <span class="literal">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> methodName 执行的方法名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data       操作的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tableName  操作的表名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataId     记录Id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeHistory</span><span class="params">(String methodName, String data, String tableName, String dataId)</span> &#123;</span><br><span class="line">        <span class="comment">//TODO</span></span><br><span class="line">        <span class="comment">//可以保存到文件，数据库或者ES</span></span><br><span class="line">        <span class="comment">//此处可以保存操作人和操作时间</span></span><br><span class="line">        <span class="comment">//一般来说获取操作人信息都会被封装为静态方法，比如基于SpringSecurity获取登录人信息，</span></span><br><span class="line">        <span class="comment">//或者从request中获取操作人时也会通过前置拦截器将其封装到ThreadLocal&lt;LoginUser&gt;中，</span></span><br><span class="line">        <span class="comment">//如果要在此处获取request对象，可以使用如下方法</span></span><br><span class="line">        <span class="comment">//RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();</span></span><br><span class="line">        <span class="comment">//ServletRequestAttributes servletRequestAttributes = (ServletRequestAttributes)requestAttributes;</span></span><br><span class="line">        <span class="comment">//HttpServletRequest request = servletRequestAttributes.getRequest();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>工具类<code>CP_ClassUtil.java</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hanqf.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AdvisedSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.framework.AopProxy;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.support.AopUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.ReflectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.ParameterizedType;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Type;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;类工具&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> * Created by hanqf on 2022/9/21 10:55.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CP_ClassUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证class是否存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">classIsAvailable</span><span class="params">(String className)</span> &#123;</span><br><span class="line">        Assert.notNull(className, <span class="string">&quot;className must not be null&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> result;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = <span class="literal">null</span> != Class.forName(className);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</span><br><span class="line">            result = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断类中是否包含指定的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">hasMethod</span><span class="params">(Class clazz, String methodName, Class... argsType)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(methodName, <span class="string">&quot;methodName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> ReflectionUtils.findMethod(clazz, methodName, argsType);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != method) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定类的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Method <span class="title function_">getMethod</span><span class="params">(Class clazz, String methodName, Class... argsType)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(methodName, <span class="string">&quot;methodName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> ReflectionUtils.findMethod(clazz, methodName, argsType);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != method) &#123;</span><br><span class="line">            <span class="keyword">return</span> method;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定类的指定方法的返回类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title function_">getMethodReturnType</span><span class="params">(Class clazz, String methodName, Class... argsType)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(methodName, <span class="string">&quot;methodName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> ReflectionUtils.findMethod(clazz, methodName, argsType);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != method) &#123;</span><br><span class="line">            <span class="keyword">return</span> method.getReturnType();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断类中是否包含指定的字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">hasField</span><span class="params">(Class clazz, String fieldName)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(fieldName, <span class="string">&quot;fieldName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> ReflectionUtils.findField(clazz, fieldName);</span><br><span class="line">        <span class="keyword">if</span> (field != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取类中指定的字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(Class clazz, String fieldName)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(fieldName, <span class="string">&quot;fieldName must not be null&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">field</span> <span class="operator">=</span> ReflectionUtils.findField(clazz, fieldName);</span><br><span class="line">        <span class="keyword">if</span> (field != <span class="literal">null</span>) &#123;</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> field;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取声明了某个注解的字段，这里只返回获取到的第一个字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title function_">getField</span><span class="params">(Class clazz, Class annotationClass)</span> &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(annotationClass, <span class="string">&quot;annotationClass must not be null&quot;</span>);</span><br><span class="line">        Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="keyword">if</span> (field.getAnnotation(annotationClass) != <span class="literal">null</span>) &#123;</span><br><span class="line">                field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">return</span> field;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取声明了指定注解的全部字段</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Field[] getFields(Class clazz, Class annotationClass) &#123;</span><br><span class="line">        Assert.notNull(clazz, <span class="string">&quot;Class must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(annotationClass, <span class="string">&quot;annotationClass must not be null&quot;</span>);</span><br><span class="line">        List&lt;Field&gt; annotationList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="keyword">if</span> (field.getAnnotation(annotationClass) != <span class="literal">null</span>) &#123;</span><br><span class="line">                field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">                annotationList.add(field);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> annotationList.toArray(<span class="keyword">new</span> <span class="title class_">Field</span>[annotationList.size()]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取字段的返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getFieldValue</span><span class="params">(Class clazz, String fieldName)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getFieldValue(clazz, getField(clazz, fieldName));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getFieldValue</span><span class="params">(Object entity, Field field)</span> &#123;</span><br><span class="line">        Assert.notNull(entity, <span class="string">&quot;entity must not be null&quot;</span>);</span><br><span class="line">        Assert.notNull(field, <span class="string">&quot;field must not be null&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> field.get(entity);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;h2&gt;获得定义当前`类`的类型时在其父类上的声明的泛型真实类型&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">     * 示例：</span></span><br><span class="line"><span class="comment">     * public class BookInfoGrap extends MustLoginGrap&lt;BookInfoParam, BookInfoResult&gt;</span></span><br><span class="line"><span class="comment">     * 这里当前Class就是 BookInfoGrap.class</span></span><br><span class="line"><span class="comment">     * 其父类上声明的泛型真实类型就是 0:BookInfoParam 1:BookInfoResult</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz 当前`类`的类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   第一个泛型类型，从0开始算，如BookInfoParam就是第0个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.Class 泛型真实类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title function_">getTClass</span><span class="params">(Class clazz, <span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">tClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Type</span> <span class="variable">genericSuperclass</span> <span class="operator">=</span> clazz.getGenericSuperclass();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;java.lang.reflect.Proxy&quot;</span>.equals(genericSuperclass.getTypeName())) &#123;</span><br><span class="line">            <span class="comment">//获取第二个泛型类型，这里是按实际需要，只需获取第二个泛型类型，这里就是获取&lt;T extends BaseResult&gt;的实际类型</span></span><br><span class="line">            <span class="type">Type</span> <span class="variable">actualTypeArgument</span> <span class="operator">=</span> ((ParameterizedType) genericSuperclass).getActualTypeArguments()[num];</span><br><span class="line">            <span class="comment">//判断T是否依旧包含泛型，如果包含泛型，则只取出外层类型</span></span><br><span class="line">            <span class="comment">//这里因为为每个BaseResult都创建的实现类，而且其实现类都是不包含泛型的，所以不会执行这个逻辑</span></span><br><span class="line">            <span class="keyword">if</span> (actualTypeArgument <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">                tClass = (Class) ((ParameterizedType) actualTypeArgument).getRawType();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;<span class="comment">//直接返回BaseResult的实现类类型，</span></span><br><span class="line">                tClass = (Class) actualTypeArgument;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;h2&gt;获得定义当前`类`或`接口`时在其父接口上的声明的泛型真实类型&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">     * 示例：</span></span><br><span class="line"><span class="comment">     * public interface BookInfoJpaRepository extends BaseJpaRepository&lt;BookInfo, Long&gt;</span></span><br><span class="line"><span class="comment">     * 这里当前Interface就是 BookInfoJpaRepository.class</span></span><br><span class="line"><span class="comment">     * 其父类上声明的泛型真实类型就是 0:BookInfo 1:Long</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz        当前`类`或`接口`的类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> interfaceNum 要获取第几个接口，从0开始计算，如BaseJpaRepository就是第0个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num          接口中第几个泛型类型，从0开始算，如BookInfo就是第0个</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.Class 泛型真实类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title function_">getTIClass</span><span class="params">(Class clazz, <span class="type">int</span> interfaceNum, <span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="type">Class</span> <span class="variable">tClass</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">final</span> Type[] genericInterfaces = clazz.getGenericInterfaces();</span><br><span class="line">        <span class="type">Type</span> <span class="variable">genericSuperclass</span> <span class="operator">=</span> genericInterfaces[interfaceNum];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="string">&quot;java.lang.reflect.Proxy&quot;</span>.equals(genericSuperclass.getTypeName())) &#123;</span><br><span class="line">            <span class="comment">//获取第二个泛型类型，这里是按实际需要，只需获取第二个泛型类型，这里就是获取&lt;T extends BaseResult&gt;的实际类型</span></span><br><span class="line">            <span class="type">Type</span> <span class="variable">actualTypeArgument</span> <span class="operator">=</span> ((ParameterizedType) genericSuperclass).getActualTypeArguments()[num];</span><br><span class="line">            <span class="comment">//判断T是否依旧包含泛型，如果包含泛型，则只取出外层类型</span></span><br><span class="line">            <span class="comment">//这里因为为每个BaseResult都创建的实现类，而且其实现类都是不包含泛型的，所以不会执行这个逻辑</span></span><br><span class="line">            <span class="keyword">if</span> (actualTypeArgument <span class="keyword">instanceof</span> ParameterizedType) &#123;</span><br><span class="line">                tClass = (Class) ((ParameterizedType) actualTypeArgument).getRawType();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;<span class="comment">//直接返回BaseResult的实现类类型，</span></span><br><span class="line">                tClass = (Class) actualTypeArgument;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tClass;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前代理对象的真实目标对象，即实现类</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getProxyTarget</span><span class="params">(Object proxy)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (!AopUtils.isAopProxy(proxy)) &#123;</span><br><span class="line">            <span class="keyword">return</span> proxy;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断是jdk还是cglib代理</span></span><br><span class="line">        <span class="keyword">if</span> (AopUtils.isJdkDynamicProxy(proxy)) &#123;</span><br><span class="line">            proxy = getJdkDynamicProxyTargetObject(proxy);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            proxy = getCglibProxyTargetObject(proxy);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getProxyTarget(proxy);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取Cglib代理对象的真实目标对象，即实现类</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">getCglibProxyTargetObject</span><span class="params">(Object proxy)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">h</span> <span class="operator">=</span> proxy.getClass().getDeclaredField(<span class="string">&quot;CGLIB$CALLBACK_0&quot;</span>);</span><br><span class="line">        h.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">dynamicAdvisedInterceptor</span> <span class="operator">=</span> h.get(proxy);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">advised</span> <span class="operator">=</span> dynamicAdvisedInterceptor.getClass().getDeclaredField(<span class="string">&quot;advised&quot;</span>);</span><br><span class="line">        advised.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">target</span> <span class="operator">=</span> ((AdvisedSupport) advised.get(dynamicAdvisedInterceptor)).getTargetSource().getTarget();</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取JdkDynamic代理对象的真实目标对象，即实现类</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object <span class="title function_">getJdkDynamicProxyTargetObject</span><span class="params">(Object proxy)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">h</span> <span class="operator">=</span> proxy.getClass().getSuperclass().getDeclaredField(<span class="string">&quot;h&quot;</span>);</span><br><span class="line">        h.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">AopProxy</span> <span class="variable">aopProxy</span> <span class="operator">=</span> (AopProxy) h.get(proxy);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">advised</span> <span class="operator">=</span> aopProxy.getClass().getDeclaredField(<span class="string">&quot;advised&quot;</span>);</span><br><span class="line">        advised.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">target</span> <span class="operator">=</span> ((AdvisedSupport) advised.get(aopProxy)).getTargetSource().getTarget();</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;h2&gt;获取当前代理对象的真实目标接口类型，即接口&lt;/h2&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   第几个接口，从0开始计算</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.Class  接口类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> hanqf</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Class <span class="title function_">getProxyTargetInterface</span><span class="params">(Object proxy, <span class="type">int</span> num)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (!AopUtils.isAopProxy(proxy)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断是jdk还是cglib代理</span></span><br><span class="line">        <span class="keyword">if</span> (AopUtils.isJdkDynamicProxy(proxy)) &#123;</span><br><span class="line">            <span class="keyword">return</span> getJdkDynamicProxyTargetInterface(proxy, num);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> getCglibProxyTargetInterface(proxy, num);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取CGLIB动态代理对象的目标接口</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   第几个接口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标接口类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Class <span class="title function_">getCglibProxyTargetInterface</span><span class="params">(Object proxy, <span class="type">int</span> num)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">h</span> <span class="operator">=</span> proxy.getClass().getDeclaredField(<span class="string">&quot;CGLIB$CALLBACK_0&quot;</span>);</span><br><span class="line">        h.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">dynamicAdvisedInterceptor</span> <span class="operator">=</span> h.get(proxy);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">advised</span> <span class="operator">=</span> dynamicAdvisedInterceptor.getClass().getDeclaredField(<span class="string">&quot;advised&quot;</span>);</span><br><span class="line">        advised.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">final</span> Class&lt;?&gt;[] proxiedInterfaces = ((AdvisedSupport) advised.get(dynamicAdvisedInterceptor)).getProxiedInterfaces();</span><br><span class="line">        <span class="keyword">return</span> proxiedInterfaces[num];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取Jdk动态代理对象的目标接口</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> proxy 代理对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   第几个接口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 目标接口类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Class <span class="title function_">getJdkDynamicProxyTargetInterface</span><span class="params">(Object proxy, <span class="type">int</span> num)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Field</span> <span class="variable">h</span> <span class="operator">=</span> proxy.getClass().getSuperclass().getDeclaredField(<span class="string">&quot;h&quot;</span>);</span><br><span class="line">        h.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">AopProxy</span> <span class="variable">aopProxy</span> <span class="operator">=</span> (AopProxy) h.get(proxy);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">advised</span> <span class="operator">=</span> aopProxy.getClass().getDeclaredField(<span class="string">&quot;advised&quot;</span>);</span><br><span class="line">        advised.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">final</span> Class&lt;?&gt;[] proxiedInterfaces = ((AdvisedSupport) advised.get(aopProxy)).getProxiedInterfaces();</span><br><span class="line">        <span class="keyword">return</span> proxiedInterfaces[num];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后记">后记</h2><ul class="lvl-0"><li class="lvl-2"><p>mybatis可以参考<a href="https://gitee.com/geekidea/update-record">https://gitee.com/geekidea/update-record</a></p></li><li class="lvl-2"><p><a href="https://github.com/alibaba/canal/wiki">Canal</a>也是一个不错的选择，对项目代码没有侵入性。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;业务中有这么个需求，就是需要记录每条记录的历史，并要记录该记录变更的时间和操作人，即每条记录的新增、修改和删除都要记录&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/tags/springboot/"/>
    
    <category term="data-jpa" scheme="https://blog.hanqunfeng.com/tags/data-jpa/"/>
    
    <category term="aop" scheme="https://blog.hanqunfeng.com/tags/aop/"/>
    
  </entry>
  
  <entry>
    <title>MySql-MHA的构建方法</title>
    <link href="https://blog.hanqunfeng.com/2022/09/15/mysql8-mha/"/>
    <id>https://blog.hanqunfeng.com/2022/09/15/mysql8-mha/</id>
    <published>2022-09-15T13:30:05.000Z</published>
    <updated>2022-10-11T03:30:54.657Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">MySql-MHA的构建过程</li><li class="lvl-2">本文基于<code>mysql-8.0.30</code>,<code>mha4mysql-0.58-0.el7.centos</code></li></ul><span id="more"></span><h2 id="1-节点规划">1.节点规划</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mha-manager:    10.250.0.91      MHA控制器，用于监控管理</span><br><span class="line">mysql-master:   10.250.0.118     Mysql主服务器</span><br><span class="line">mysql-slave1:   10.250.0.186     Mysql从服务器</span><br><span class="line">mysql-slave2:   10.250.0.102     Mysql从服务器</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>可以在4台服务器的hosts中创建ip与域名的映射，方便后面的配置</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line">10.250.0.91      node1</span><br><span class="line">10.250.0.118     node2</span><br><span class="line">10.250.0.186     node3</span><br><span class="line">10.250.0.102     node4</span><br></pre></td></tr></table></figure><h2 id="2-免密登录">2.免密登录</h2><ul class="lvl-0"><li class="lvl-2"><p>先在mha-manager主机上创建密钥对</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建密钥对，生成私钥和公钥文件，创建密钥时可以不设置密码，一路回车就好</span></span><br><span class="line">[root@ip-10-250-0-91 .ssh]<span class="comment"># ssh-keygen -t rsa</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:C8JdDpbsQP+NeLSPFvHz3BkLigak3fQusApbrPNL9tw root@ip-10-250-0-91.cn-northwest-1.compute.internal</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|    .            |</span></span><br><span class="line"><span class="string">|   . o .         |</span></span><br><span class="line"><span class="string">|    . B =        |</span></span><br><span class="line"><span class="string">|   . O X B       |</span></span><br><span class="line"><span class="string">|    + O S = . .  |</span></span><br><span class="line"><span class="string">|   . . * B = o + |</span></span><br><span class="line"><span class="string">|  . = . B + o +  |</span></span><br><span class="line"><span class="string">|  .B + + .       |</span></span><br><span class="line"><span class="string">|  oo+.o E        |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时会在.ssh目录下生成密钥对文件id_rsa和id_rsa.pub</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 .ssh]<span class="comment"># ls</span></span><br><span class="line">authorized_keys  id_rsa  id_rsa.pub</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>将公钥导入全部服务器，导入时需要输入对应服务器的root密码</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 .ssh]# ssh-copy-id -i id_rsa.pub root@node1</span><br><span class="line">[root@ip-10-250-0-91 .ssh]# ssh-copy-id -i id_rsa.pub root@node2</span><br><span class="line">[root@ip-10-250-0-91 .ssh]# ssh-copy-id -i id_rsa.pub root@node3</span><br><span class="line">[root@ip-10-250-0-91 .ssh]# ssh-copy-id -i id_rsa.pub root@node4</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>向服务器中导入公钥时遇到的问题</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Permission denied (publickey,gssapi-keyex,gssapi-with-mic).</span><br></pre></td></tr></table></figure><blockquote><p>这是由于没有开放密码登录权限导致的，解决方法如下:</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分别在4台服务器上设置root用户的密码</span></span><br><span class="line">passwd root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分别在4台服务器上开放密码登录权限</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># 将PasswordAuthentication设置为yes</span></span><br><span class="line">PasswordAuthentication <span class="built_in">yes</span></span><br><span class="line"><span class="comment"># 重启sshd服务</span></span><br><span class="line">systemctl restart sshd.service</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>密钥导入成功</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 .ssh]<span class="comment"># ssh-copy-id -i id_rsa.pub root@node4</span></span><br><span class="line">/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">&quot;id_rsa.pub&quot;</span></span><br><span class="line">The authenticity of host <span class="string">&#x27;node4 (10.250.0.102)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:aXIII+S5nOVy6pqP1fuaW6fYFsVIN9TBFVP/Xaf8Pds.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is MD5:1f:07:2f:04:75:77:68:8d:f0:20:96:f1:0b:90:ac:61.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span></span><br><span class="line"><span class="string">/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span></span><br><span class="line"><span class="string">root@node4&#x27;</span>s password:</span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   <span class="string">&quot;ssh &#x27;root@node4&#x27;&quot;</span></span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>按照上面的方式分别在其余3台服务器上执行密钥对的创建操作，过程一样，在此不再赘述。</p></li><li class="lvl-2"><p>测试免密登录，在任意服务器上登录其它服务器都不需要输入密码</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh node3</span><br></pre></td></tr></table></figure><h2 id="3-下载及安装MHA安装包">3.下载及安装MHA安装包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有节点都需要安装node安装包</span></span><br><span class="line">wget https://github.com/yoshinorim/mha4mysql-node/releases/download/v0.58/mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install -y mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只有manager节点需要安装manager安装包</span></span><br><span class="line">wget https://github.com/yoshinorim/mha4mysql-manager/releases/download/v0.58/mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install -y mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>安装manager时可能会提示缺少<code>epel</code>相关依赖</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">错误：软件包：mha4mysql-manager-0.58-0.el7.centos.noarch (/mha4mysql-manager-0.58-0.el7.centos.noarch)</span><br><span class="line">          需要：perl(Log::Dispatch::File)</span><br><span class="line">错误：软件包：mha4mysql-manager-0.58-0.el7.centos.noarch (/mha4mysql-manager-0.58-0.el7.centos.noarch)</span><br><span class="line">          需要：perl(Parallel::ForkManager)</span><br><span class="line">错误：软件包：mha4mysql-manager-0.58-0.el7.centos.noarch (/mha4mysql-manager-0.58-0.el7.centos.noarch)</span><br><span class="line">          需要：perl(Log::Dispatch)</span><br><span class="line">错误：软件包：mha4mysql-manager-0.58-0.el7.centos.noarch (/mha4mysql-manager-0.58-0.el7.centos.noarch)</span><br><span class="line">          需要：perl(Log::Dispatch::Screen)</span><br></pre></td></tr></table></figure><blockquote><p>解决方法是先安装<code>epel-release</code>依赖</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y</span><br></pre></td></tr></table></figure><blockquote><p>如果使用aws云服务器则通过下面的命令安装<code>epel</code></p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo amazon-linux-extras install epel -y</span><br></pre></td></tr></table></figure><h2 id="4-mysql主从复制搭建">4.mysql主从复制搭建</h2><ul class="lvl-0"><li class="lvl-2"><p>参照<a href="/2022/09/14/mysql8-config/" title="MySql单节点、主从、双主的构建方法">MySql单节点、主从、双主的构建方法</a>中的说明搭建主从复制，这里不再赘述。</p></li><li class="lvl-2"><p>需要说明如下几点：</p></li></ul><blockquote><p>1.所有mysql的<code>server-id</code>不能相同<br>2.所有mysql打开binlog日志和中继日志，且<code>relay_log_purge=0</code><br>3.从节点开启只读，<code>read_only=1</code><br>4.云服务通过镜像创建的mysql要注意所有mysql的uuid不能相同。</p></blockquote><h2 id="5-从节点也要创建同步帐号">5.从节点也要创建同步帐号</h2><ul class="lvl-0"><li class="lvl-2"><p>因为slave节点有可能升级为master节点，所以每个slave上也要需要拥有同步帐号，在每个slave上执行如下命令</p></li></ul><div class="note danger"><p>注意：<br>这个方式是错误的，会导致主从切换后，slave不能与新的master实现数据同步，<br>因为此时两个从库的GTID事务和binlog记录的位置已经不一致了。<br>这个错误的结果在下文&quot;11.测试 MHA 故障转移&quot;有说明。</p><p>正确的做法是，将master的数据库导入到两个slave中，主从一旦建立，从库就不要写入任何数据。</p></div><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止同步</span></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line"><span class="comment"># &#x27;10.250.%.%&#x27; 表示只能局域网段内的ip才能访问，如果不限制ip，可以配置为&#x27;%&#x27;</span></span><br><span class="line">mysql&gt; CREATE USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment"># 开启同步</span></span><br><span class="line">mysql&gt; start slave;</span><br></pre></td></tr></table></figure><div class="note success"><p>正确的做法是，将master的数据库导入到两个slave中，然后在开启主从同步。<br>注意：主从一旦建立，从库就不要写入任何数据。</p></div><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两个从库中分别执行master数据库导出</span></span><br><span class="line">mysqldump -uroot --all-databases --triggers --routines --events -p -h node2 &gt; all_databases.sql</span><br><span class="line"><span class="comment"># 从库执行导入数据</span></span><br><span class="line">mysql -uroot -p &lt; all_databases.sql</span><br></pre></td></tr></table></figure><blockquote><p>因为开启了GTID，导入数据库时会报如下错误：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@@GLOBAL.GTID_PURGED cannot be changed: the added gtid <span class="built_in">set</span> must not overlap with @@GLOBAL.GTID_EXECUTED</span><br></pre></td></tr></table></figure><blockquote><p>解决方法是在从库中执行如下命令后再导入：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; stop slave;</span><br><span class="line">mysql&gt; reset slave all;</span><br><span class="line">mysql&gt; reset master;</span><br></pre></td></tr></table></figure><h3 id="从节点设置同步">从节点设置同步</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看主节点master状态信息，记录File和Position两个信息</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000012 |      197 |              |                  | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1-9 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从节点设置同步信息，关联master中查询到的File和Position两个信息</span></span><br><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;10.250.0.118&#x27;</span>,</span><br><span class="line">    MASTER_PORT=3306,</span><br><span class="line">    MASTER_USER=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_PASSWORD=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000012&#x27;</span>,</span><br><span class="line">    MASTER_LOG_POS=197;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动从库的复制线程</span></span><br><span class="line">mysql&gt; START slave;</span><br><span class="line"><span class="comment"># 查看从库同步状态</span></span><br><span class="line">mysql&gt; SHOW slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: 10.250.0.118</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000012</span><br><span class="line">          Read_Master_Log_Pos: 197</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 326</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000012</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><h2 id="6-MHA需要一个拥有管理员权限的mysql用户">6.MHA需要一个拥有管理员权限的mysql用户</h2><ul class="lvl-0"><li class="lvl-2"><p>如果开启了root用户远程登录，可以使用root用户</p></li><li class="lvl-2"><p>也可以在master上创建一个拥有管理员权限的用户，因为建立了主从，所以从库会自动同步</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE USER <span class="string">&#x27;mhaadmin&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;mhapass&#x27;</span>;</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;mhaadmin&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;mhapass&#x27;</span>;</span><br><span class="line">mysql&gt; GRANT ALL ON *.* TO <span class="string">&#x27;mhaadmin&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h2 id="7-在mha-manager节点上编写MHA管理配置文件">7.在mha-manager节点上编写MHA管理配置文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /etc/mha_master</span><br><span class="line">vim /etc/mha_master/mha.cnf</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[server default]</span><br><span class="line"><span class="comment"># mha访问数据库的账号与密码</span></span><br><span class="line">user=mhaadmin</span><br><span class="line">password=mhapass</span><br><span class="line">port=3306</span><br><span class="line"><span class="comment"># 指定mha的工作目录</span></span><br><span class="line">manager_workdir=/etc/mha_master</span><br><span class="line"><span class="comment"># 指定管理日志路径</span></span><br><span class="line">manager_log=/etc/mha_master/manager.log</span><br><span class="line"><span class="comment"># 指定mha在远程节点上的工作目录，所有mysql节点都需要创建该目录</span></span><br><span class="line">remote_workdir=/mydata/mha_master</span><br><span class="line"><span class="comment"># ssh登录用户</span></span><br><span class="line">ssh_user=root</span><br><span class="line"><span class="comment"># 指定主从复制的mysql用户和密码</span></span><br><span class="line">repl_user=vagrant</span><br><span class="line">repl_password=vagrant</span><br><span class="line"><span class="comment"># 指定多久执行一次检测master的状态，检测间隔时间，单位秒</span></span><br><span class="line">ping_interval=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认情况下，mha检查master的状态是否正常是直接连接master节点</span></span><br><span class="line"><span class="comment"># 也可以指定用于二次检查master节点状态的脚本，这里使用mha自带的masterha_secondary_check命令</span></span><br><span class="line"><span class="comment"># 不要配置master节点的ip，可以配置从节点的ip，它的连接逻辑是 manager-(A)-&gt;这里指定的ip-(B)-&gt;master，</span></span><br><span class="line"><span class="comment"># 只有A成功，B失败时才会进行故障转移，其余情况都会认为master正常。所以必须保证这里的ip所在服务器正常运行。</span></span><br><span class="line"><span class="comment"># secondary_check_script=/bin/masterha_secondary_check -s 10.250.0.186 -s 10.250.0.102</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本文件，用于故障切换的时候将虚拟ip漂移到新的master上</span></span><br><span class="line"><span class="comment">#master_ip_failover_script=/etc/mha_master/master_ip_failover_script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本文件，用于故障切换的时候发送告警信息</span></span><br><span class="line"><span class="comment">#report_script=/etc/mha_master/report_script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 故障发生后关闭故障主机的脚本，其主要作用是防止发生脑裂</span></span><br><span class="line"><span class="comment">#shutdown_script=/etc/mha_master/shutdown_script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql主从服务器信息</span></span><br><span class="line">[server1]</span><br><span class="line">hostname=10.250.0.118</span><br><span class="line">ssh_port=22</span><br><span class="line"><span class="comment"># 将来可不可以成为master候选节点/主节点</span></span><br><span class="line">candidate_master=1</span><br><span class="line"><span class="comment"># 不参与master候选</span></span><br><span class="line"><span class="comment">#no_master=1</span></span><br><span class="line">[server2]</span><br><span class="line">hostname=10.250.0.186</span><br><span class="line">ssh_port=22</span><br><span class="line">candidate_master=1</span><br><span class="line">[server3]</span><br><span class="line">hostname=10.250.0.102</span><br><span class="line">ssh_port=22</span><br><span class="line">candidate_master=1</span><br></pre></td></tr></table></figure><blockquote><p>注意，所有mysql节点都需要创建该目录<code>/mydata/mha_master</code></p></blockquote><h2 id="8-检测各节点间ssh互信通信配置是否正确">8.检测各节点间ssh互信通信配置是否正确</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_ssh --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">Thu Sep 15 10:13:08 2022 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [info] Reading application default configuration from /etc/mha_master/mha.cnf..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [info] Reading server configuration from /etc/mha_master/mha.cnf..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [info] Starting SSH connection tests..</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]  Connecting via SSH from root@10.250.0.118(10.250.0.118:22) to root@10.250.0.186(10.250.0.186:22)..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]  Connecting via SSH from root@10.250.0.118(10.250.0.118:22) to root@10.250.0.102(10.250.0.102:22)..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]  Connecting via SSH from root@10.250.0.186(10.250.0.186:22) to root@10.250.0.118(10.250.0.118:22)..</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:08 2022 - [debug]  Connecting via SSH from root@10.250.0.186(10.250.0.186:22) to root@10.250.0.102(10.250.0.102:22)..</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:10 2022 - [debug]</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]  Connecting via SSH from root@10.250.0.102(10.250.0.102:22) to root@10.250.0.118(10.250.0.118:22)..</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]  Connecting via SSH from root@10.250.0.102(10.250.0.102:22) to root@10.250.0.186(10.250.0.186:22)..</span><br><span class="line">Thu Sep 15 10:13:09 2022 - [debug]   ok.</span><br><span class="line">Thu Sep 15 10:13:10 2022 - [info] All SSH connection tests passed successfully.</span><br></pre></td></tr></table></figure><blockquote><p>看到<code>All SSH connection tests passed successfully.</code>说明通信成功</p></blockquote><h2 id="9-检查管理的MySQL复制集群的连接配置参数是否OK">9.检查管理的MySQL复制集群的连接配置参数是否OK</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_repl --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">Thu Sep 15 10:16:35 2022 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Thu Sep 15 10:16:35 2022 - [info] Reading application default configuration from /etc/mha_master/mha.cnf..</span><br><span class="line">Thu Sep 15 10:16:35 2022 - [info] Reading server configuration from /etc/mha_master/mha.cnf..</span><br><span class="line">Thu Sep 15 10:16:35 2022 - [info] MHA::MasterMonitor version 0.58.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] GTID failover mode = 1</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Dead Servers:</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Alive Servers:</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.186(10.250.0.186:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.102(10.250.0.102:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Alive Slaves:</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.186(10.250.0.186:3306)  Version=8.0.30 (oldest major version between slaves) log-bin:enabled</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     GTID ON</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     Replicating from 10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     Primary candidate <span class="keyword">for</span> the new Master (candidate_master is <span class="built_in">set</span>)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]   10.250.0.102(10.250.0.102:3306)  Version=8.0.30 (oldest major version between slaves) log-bin:enabled</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     GTID ON</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     Replicating from 10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]     Primary candidate <span class="keyword">for</span> the new Master (candidate_master is <span class="built_in">set</span>)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Current Alive Master: 10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking slave configurations..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication filtering settings..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  binlog_do_db= , binlog_ignore_db=</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  Replication filtering check ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] GTID (with auto-pos) is supported. Skipping all SSH and Node package checking.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking SSH publickey authentication settings on the current master..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] HealthCheck: SSH to 10.250.0.118 is reachable.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]</span><br><span class="line">10.250.0.118(10.250.0.118:3306) (current master)</span><br><span class="line"> +--10.250.0.186(10.250.0.186:3306)</span><br><span class="line"> +--10.250.0.102(10.250.0.102:3306)</span><br><span class="line"></span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication health on 10.250.0.186..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication health on 10.250.0.102..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [warning] master_ip_failover_script is not defined.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [warning] shutdown_script is not defined.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Got <span class="built_in">exit</span> code 0 (Not master dead).</span><br><span class="line"></span><br><span class="line">MySQL Replication Health is OK.</span><br></pre></td></tr></table></figure><blockquote><p>看到<code>MySQL Replication Health is OK.</code>说明成功</p></blockquote><h2 id="10-管理MHA">10.管理MHA</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先检查MHA工作目录下是否存在mha.failover.complete文件，如果存在则先删除</span></span><br><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># rm -rf /etc/mha_master/mha.failover.complete</span></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># nohup masterha_manager --conf=/etc/mha_master/mha.cnf &amp;&gt; /etc/mha_master/manager.log &amp;</span></span><br></pre></td></tr></table></figure><blockquote><p>查看master的状态</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看master状态</span></span><br><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_status --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">mha (pid:9696) is running(0:PING_OK), master:10.250.0.118</span><br></pre></td></tr></table></figure><blockquote><p>上面的信息中“mha (pid:9696) is running(0:PING_OK)”表示MHA服务运行 OK，否则， 则会显示为类似“mha is stopped(1:NOT_RUNNING).”</p></blockquote><blockquote><p>停止MHA</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#停止</span></span><br><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_stop --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">Stopped mha successfully.</span><br><span class="line">[1]+  退出 1                <span class="built_in">nohup</span> masterha_manager --conf=/etc/mha_master/mha.cnf &amp;&gt;/etc/mha_master/manager.log</span><br></pre></td></tr></table></figure><h2 id="11-测试-MHA-故障转移">11.测试 MHA 故障转移</h2><h3 id="我们先按-5-从节点也要创建同步帐号-中的错误方式进行测试">我们先按&quot;5.从节点也要创建同步帐号&quot;中的错误方式进行测试</h3><ul class="lvl-0"><li class="lvl-2"><p>启动MHA</p></li><li class="lvl-2"><p>关闭mysql-master数据库服务</p></li><li class="lvl-2"><p>监控mha-manager的日志</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># tail -f manager.log</span></span><br><span class="line">………………………………</span><br><span class="line">Started automated(non-interactive) failover.</span><br><span class="line">Selected 10.250.0.186(10.250.0.186:3306) as a new master.</span><br><span class="line">10.250.0.186(10.250.0.186:3306): OK: Applying all logs succeeded.</span><br><span class="line">10.250.0.102(10.250.0.102:3306): ERROR: Failed on waiting gtid <span class="built_in">exec</span> <span class="built_in">set</span> on master.</span><br><span class="line">Master failover to 10.250.0.186(10.250.0.186:3306) <span class="keyword">done</span>, but recovery on slave partially failed.</span><br></pre></td></tr></table></figure><blockquote><p>可以看到mha监测到master挂掉后，会进行重新选主，并且选主成功，但是为其挂载从库失败。</p></blockquote><h3 id="我们来分析一下这个失败的原因">我们来分析一下这个失败的原因</h3><ul class="lvl-0"><li class="lvl-2"><p>查看新的master状态</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">             File: mysql-bin.000013</span><br><span class="line">         Position: 2466</span><br><span class="line">     Binlog_Do_DB:</span><br><span class="line"> Binlog_Ignore_DB:</span><br><span class="line">Executed_Gtid_Set: 6e9a571e-330e-11ed-a3f8-0a53e7cced42:5-9,</span><br><span class="line">6e9a571e-330e-11ed-a3f8-0a53e7cced43:1-4</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查询新的主库的read_only已经关闭，但这个只是在当前进程中有效，重新启动mysql还是会读取配置文件的设置，所以主从一旦切换后一定要注意修改这个配置文件</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">&quot;%read_only%&quot;</span>;</span><br><span class="line">+-----------------------+-------+</span><br><span class="line">| Variable_name         | Value |</span><br><span class="line">+-----------------------+-------+</span><br><span class="line">| innodb_read_only      | OFF   |</span><br><span class="line">| read_only             | OFF   |</span><br><span class="line">| super_read_only       | OFF   |</span><br><span class="line">| transaction_read_only | OFF   |</span><br><span class="line">+-----------------------+-------+</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看slave状态，获取报错信息</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: 10.250.0.186</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000013</span><br><span class="line">          Read_Master_Log_Pos: 2466</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 420</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000013</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: No</span><br><span class="line">              Replicate_Do_DB:</span><br><span class="line">          Replicate_Ignore_DB:</span><br><span class="line">           Replicate_Do_Table:</span><br><span class="line">       Replicate_Ignore_Table:</span><br><span class="line">      Replicate_Wild_Do_Table:</span><br><span class="line">  Replicate_Wild_Ignore_Table:</span><br><span class="line">                   Last_Errno: 1396</span><br><span class="line">                   Last_Error: Coordinator stopped because there were error(s) <span class="keyword">in</span> the worker(s). The most recent failure being: Worker 1 failed executing transaction <span class="string">&#x27;6e9a571e-330e-11ed-a3f8-0a53e7cced43:1&#x27;</span> at master <span class="built_in">log</span> mysql-bin.000013, end_log_pos 1465. See error <span class="built_in">log</span> and/or performance_schema.replication_applier_status_by_worker table <span class="keyword">for</span> more details about this failure or others, <span class="keyword">if</span> any.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>按照提示在从库中查询<code>performance_schema.replication_applier_status_by_worker</code>表的数据</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from performance_schema.replication_applier_status_by_worker\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">    CHANNEL_NAME:</span><br><span class="line">        WORKER_ID: 1</span><br><span class="line">        THREAD_ID: NULL</span><br><span class="line">    SERVICE_STATE: OFF</span><br><span class="line">LAST_ERROR_NUMBER: 1396</span><br><span class="line">LAST_ERROR_MESSAGE: Worker 1 failed executing transaction <span class="string">&#x27;6e9a571e-330e-11ed-a3f8-0a53e7cced43:1&#x27;</span> at master <span class="built_in">log</span> mysql-bin.000013, end_log_pos 1465; Error <span class="string">&#x27;Operation CREATE USER failed for &#x27;</span>vagrant<span class="string">&#x27;@&#x27;</span>10.250.%.%<span class="string">&#x27;&#x27;</span> on query. Default database: <span class="string">&#x27;mysql&#x27;</span>. Query: <span class="string">&#x27;CREATE USER &#x27;</span>vagrant<span class="string">&#x27;@&#x27;</span>10.250.%.%<span class="string">&#x27; IDENTIFIED WITH &#x27;</span>mysql_native_password<span class="string">&#x27; AS &#x27;</span>*04E6E1273D1783DF7D57DC5479FE01CFFDFD0058<span class="string">&#x27;&#x27;</span></span><br><span class="line">…………</span><br></pre></td></tr></table></figure><blockquote><p>这里提示的比较清楚，意思是从库在同步新的主库数据时，执行创建同步帐号的<code>CREATE USER</code>语句时报错<br>思考我们的构建过程，从库创建同步帐号是分别创建在自己的数据库里的，所以两个从库GTID事务和binlog日志实际上数据并不一致，导致主从切换后，从库要从新的master同步数据时，就会同步这个创建帐号的语句，但是此时从库已经有这个帐号了，所以创建帐号失败，从而导致主从复制失败。<br>此时的解决方法就是将master的数据库全量导入到slave中，然后重新建立主从，参照下文。</p></blockquote><h3 id="我们再按-5-从节点也要创建同步帐号-中的正确方式搭建好主从后进行测试">我们再按&quot;5.从节点也要创建同步帐号&quot;中的正确方式搭建好主从后进行测试</h3><ul class="lvl-0"><li class="lvl-2"><p>搭建步骤参看&quot;5.从节点也要创建同步帐号&quot;中的正确方式</p></li><li class="lvl-2"><p>启动MHA</p></li><li class="lvl-2"><p>关闭mysql-master数据库服务</p></li><li class="lvl-2"><p>监控mha-manager的日志</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">…………</span><br><span class="line">Started automated(non-interactive) failover.</span><br><span class="line">Selected 10.250.0.186(10.250.0.186:3306) as a new master.</span><br><span class="line">10.250.0.186(10.250.0.186:3306): OK: Applying all logs succeeded.</span><br><span class="line">10.250.0.102(10.250.0.102:3306): OK: Slave started, replicating from 10.250.0.186(10.250.0.186:3306)</span><br><span class="line">10.250.0.186(10.250.0.186:3306): Resetting slave info succeeded.</span><br><span class="line">Master failover to 10.250.0.186(10.250.0.186:3306) completed successfully.</span><br></pre></td></tr></table></figure><blockquote><p>此时说明新的master切换成功，并且成功建立了主从。</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>检查master和slave状态是否正常</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主库</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000001 |      157 |              |                  | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1-9 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库</span></span><br><span class="line">mysql&gt; show slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: 10.250.0.186</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000001</span><br><span class="line">          Read_Master_Log_Pos: 157</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 373</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><blockquote><p>此时说明MHA搭建及测试成功。</p></blockquote><div class="note warning"><p>知识点：关于MHA有几点内容需要说明：</p><blockquote><p>1.MHA监控主从一旦完成切换，MHA服务进程就会停止，需要mysql集群修复完成后手工重新启动<br>2.挂掉的mysql完成修复后可以作为slave加入mysql主从集群，注意修改其mysql配置文件，加入时必须重新全量导入master的数据库<br>3.新加入mysql时要注意ip是否发生变更，如果变更要及时修改MHA的配置文件<br>4.MHA切换主从后，新的master配置文件中的<code>read_only</code>不会被修改，需要手工修改，否则重启服务器后不能写入数据<br>5.MHA只会监控master，slave挂掉时不会触发MHA做任何操作，此时只要从库的ip没有变化，修复后可以直接启动即可。<br>6.故障转移发生后，MHA工作目录会生成<code>mha.failover.complete</code>文件，如果要在故障发生后8小时内重新启动MHA，则重新启动MHA前一定要查看工作目录下是否存在<code>mha.failover.complete</code>文件，如果存在要先删除，否则不能完成新一轮的主从切换，或者在启动MHA时加上<code>--ignore_last_failover</code>。</p></blockquote></div><div class="note info"><p>新的问题：</p><blockquote><p>1.MHA可以帮助我们实现master的监控，当其监测到master不可用时会在slave中进行选主，从而实现主从切换。<br>2.但是这里有个问题，主从切换后，新的master的ip就会发生变化，所以客户端连接时需要改变为新的ip地址。<br>3.那有什么办法可以在不改变客户端连接mysql的地址情况下，自动完成切换呢，答案就是VIP(虚拟IP).</p></blockquote></div><h2 id="MHA脚本扩展">MHA脚本扩展</h2><ul class="lvl-0"><li class="lvl-2"><p>我们在使用MHA检查mysql集群的连接配置参数时，会看到打印如下信息</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_repl --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">………………</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication health on 10.250.0.186..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Checking replication health on 10.250.0.102..</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info]  ok.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [warning] master_ip_failover_script is not defined.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [warning] shutdown_script is not defined.</span><br><span class="line">Thu Sep 15 10:16:36 2022 - [info] Got <span class="built_in">exit</span> code 0 (Not master dead).</span><br><span class="line"></span><br><span class="line">MySQL Replication Health is OK.</span><br></pre></td></tr></table></figure><blockquote><p>这里有两个警告，<code>master_ip_failover_script is not defined.</code>和<code>shutdown_script is not defined.</code><br><code>shutdown_script</code>脚本用于指定故障发生后关闭故障主机的脚本，而<code>master_ip_failover_script</code>脚本用于指定故障转移时需要做的操作。</p></blockquote><div class="note info"><blockquote><p>实际上，MHA支持多种脚本扩展</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">secondary_check_script：用于检查来自多个网络路由的master可用性</span><br><span class="line">master_ip_failover_script：用于更新应用程序使用的master的ip地址</span><br><span class="line">shutdown_script：为了强制关机master</span><br><span class="line">report_script：用于发送报告</span><br><span class="line">init_conf_load_script：用于加载初始配置参数</span><br><span class="line">master_ip_online_change_script：用于更新masterIP地址。这不用于主故障转移，而是用于在线主交换机</span><br></pre></td></tr></table></figure></div><ul class="lvl-0"><li class="lvl-2"><p>MHA的配置文件中可以指定<code>master_ip_failover_script</code>，其值是个脚本文件，从名称上我们也能看出来其作用是当发生故障转移时要执行的脚本，一般我们使用这个脚本进行虚拟IP的重新绑定。</p></li><li class="lvl-2"><p>MHA并没有实现这个脚本，这个脚本需要我们自己编写，这里参考网上给出的一个示例，<code>vim /etc/mha_master/master_ip_failover_script</code></p></li></ul><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env perl</span></span><br><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings <span class="string">FATAL =&gt;</span> <span class="string">&#x27;all&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> Getopt::Long;</span><br><span class="line"></span><br><span class="line"><span class="keyword">my</span> (</span><br><span class="line">    $command, $orig_master_host, $orig_master_ip,$ssh_user,</span><br><span class="line">    $orig_master_port, $new_master_host, $new_master_ip,$new_master_port,</span><br><span class="line">    $orig_master_ssh_port,$new_master_ssh_port,$new_master_user,$new_master_password</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里定义的虚拟IP配置要注意，这个ip必须要与你自己的集群在同一个网段，否则无效</span></span><br><span class="line"><span class="keyword">my</span> $vip = <span class="string">&#x27;10.250.0.199&#x27;</span>;</span><br><span class="line"><span class="keyword">my</span> $key = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="comment"># 这里的网卡名称 “eth0” 需要根据你机器的网卡名称进行修改</span></span><br><span class="line"><span class="keyword">my</span> $ssh_start_vip = <span class="string">&quot;sudo /sbin/ifconfig eth0:$key $vip up&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_stop_vip = <span class="string">&quot;sudo /sbin/ifconfig eth0:$key down&quot;</span>;</span><br><span class="line"><span class="keyword">my</span> $ssh_Bcast_arp= <span class="string">&quot;sudo /sbin/arping -I eth0 -c 3 -A $vip&quot;</span>;</span><br><span class="line"></span><br><span class="line">GetOptions(</span><br><span class="line">    <span class="string">&#x27;command=s&#x27;</span>          =&gt; \$command,</span><br><span class="line">    <span class="string">&#x27;ssh_user=s&#x27;</span>         =&gt; \$ssh_user,</span><br><span class="line">    <span class="string">&#x27;orig_master_host=s&#x27;</span> =&gt; \$orig_master_host,</span><br><span class="line">    <span class="string">&#x27;orig_master_ip=s&#x27;</span>   =&gt; \$orig_master_ip,</span><br><span class="line">    <span class="string">&#x27;orig_master_port=i&#x27;</span> =&gt; \$orig_master_port,</span><br><span class="line">    <span class="string">&#x27;orig_master_ssh_port=i&#x27;</span> =&gt; \$orig_master_ssh_port,</span><br><span class="line">    <span class="string">&#x27;new_master_host=s&#x27;</span>  =&gt; \$new_master_host,</span><br><span class="line">    <span class="string">&#x27;new_master_ip=s&#x27;</span>    =&gt; \$new_master_ip,</span><br><span class="line">    <span class="string">&#x27;new_master_port=i&#x27;</span>  =&gt; \$new_master_port,</span><br><span class="line">    <span class="string">&#x27;new_master_ssh_port&#x27;</span> =&gt; \$new_master_ssh_port,</span><br><span class="line">    <span class="string">&#x27;new_master_user&#x27;</span> =&gt; \$new_master_user,</span><br><span class="line">    <span class="string">&#x27;new_master_password&#x27;</span> =&gt; \$new_master_password</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">exit</span> &amp;main();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    $ssh_user = <span class="keyword">defined</span> $ssh_user ? $ssh_user : <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;\n\n SCRIPT START \[$ssh_user|$ssh_start_vip\]&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;\n SCRIPT STOP \[$ssh_user|$ssh_stop_vip\]\n\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ( $command eq <span class="string">&quot;stop&quot;</span> || $command eq <span class="string">&quot;stopssh&quot;</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;Disabling the VIP on old master: $orig_master_host \n&quot;</span>;</span><br><span class="line">            &amp;stop_vip();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> <span class="string">&quot;Got Error: $@\n&quot;</span>;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">&quot;start&quot;</span> ) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">my</span> $exit_code = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">eval</span> &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">&quot;Enabling the VIP - $vip on the new master - $new_master_host \n&quot;</span>;</span><br><span class="line">            &amp;start_vip();</span><br><span class="line">        &amp;start_arp();</span><br><span class="line">            $exit_code = <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> ($@) &#123;</span><br><span class="line">            <span class="keyword">warn</span> $@;</span><br><span class="line">            <span class="keyword">exit</span> $exit_code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span> $exit_code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elsif</span> ( $command eq <span class="string">&quot;status&quot;</span> ) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Checking the Status of the script.. OK \n&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        &amp;usage();</span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">start_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$new_master_host \&quot; $ssh_start_vip \&quot;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">stop_vip</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$orig_master_host \&quot; $ssh_stop_vip \&quot;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">start_arp</span>() </span>&#123;</span><br><span class="line">    <span class="string">`ssh $ssh_user\@$new_master_host \&quot; $ssh_Bcast_arp \&quot;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">sub</span> <span class="title">usage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    <span class="string">&quot;Usage: master_ip_failover --command=start|stop|stopssh|status --ssh_user=user --orig_master_host=host --orig_master_ip=ip --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>chmod a+x /etc/mha_master/master_ip_failover_script</code></p></li><li class="lvl-2"><p><code>vim /etc/mha_master/mha.cnf</code>，添加<code>master_ip_failover_script</code>配置</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">…………</span><br><span class="line"><span class="comment">#指定检测间隔时间</span></span><br><span class="line">ping_interval=1</span><br><span class="line"><span class="comment">#指定一个脚本，该脚本实现了在主从切换之后，将虚拟ip漂移到新的master上</span></span><br><span class="line">master_ip_failover_script=/etc/mha_master/master_ip_failover_script</span><br><span class="line"><span class="comment"># mysql主从服务器信息</span></span><br><span class="line">…………</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>虚拟IP为<code>10.250.0.199</code>，将其绑定到mysql-master上</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-118 mha_master]<span class="comment"># ifconfig eth0:1 10.250.0.199/24</span></span><br><span class="line">[root@ip-10-250-0-118 mha_master]<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 9001</span><br><span class="line">        inet 10.250.0.118  netmask 255.255.255.0  broadcast 10.250.0.255</span><br><span class="line">        inet6 fe80::803:41ff:fe19:356a  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 0a:03:41:19:35:6a  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 12260  bytes 2511078 (2.3 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 10202  bytes 5216046 (4.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0:1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 9001</span><br><span class="line">        inet 10.250.0.199  netmask 255.255.255.0  broadcast 10.250.0.255</span><br><span class="line">        ether 0a:03:41:19:35:6a  txqueuelen 1000  (Ethernet)</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 43  bytes 9386 (9.1 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 43  bytes 9386 (9.1 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>再次检查配置参数</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-91 mha_master]<span class="comment"># masterha_check_repl --conf=/etc/mha_master/mha.cnf</span></span><br><span class="line">………………</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info] Checking replication health on 10.250.0.186..</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info]  ok.</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info] Checking replication health on 10.250.0.102..</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info]  ok.</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info] Checking master_ip_failover_script status:</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info]   /etc/mha_master/master_ip_failover_script --<span class="built_in">command</span>=status --ssh_user=root --orig_master_host=10.250.0.118 --orig_master_ip=10.250.0.118 --orig_master_port=3306</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> SCRIPT START [root|sudo /sbin/ifconfig eth0:1 10.250.0.199 up]</span><br><span class="line"> SCRIPT STOP [root|sudo /sbin/ifconfig eth0:1 down]</span><br><span class="line"></span><br><span class="line">Checking the Status of the script.. OK</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info]  OK.</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [warning] shutdown_script is not defined.</span><br><span class="line">Fri Sep 16 07:06:02 2022 - [info] Got <span class="built_in">exit</span> code 0 (Not master dead).</span><br><span class="line"></span><br><span class="line">MySQL Replication Health is OK.</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>重新启动MHA</p></li><li class="lvl-2"><p>停止mysql-master服务</p></li><li class="lvl-2"><p>查看MHA日志</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">----- Failover Report -----</span><br><span class="line"></span><br><span class="line">mha: MySQL Master failover 10.250.0.118(10.250.0.118:3306) to 10.250.0.186(10.250.0.186:3306) succeeded</span><br><span class="line"></span><br><span class="line">Master 10.250.0.118(10.250.0.118:3306) is down!</span><br><span class="line"></span><br><span class="line">Check MHA Manager logs at ip-10-250-0-91.cn-northwest-1.compute.internal:/etc/mha_master/manager.log <span class="keyword">for</span> details.</span><br><span class="line"></span><br><span class="line">Started automated(non-interactive) failover.</span><br><span class="line">Invalidated master IP address on 10.250.0.118(10.250.0.118:3306)</span><br><span class="line">Selected 10.250.0.186(10.250.0.186:3306) as a new master.</span><br><span class="line">10.250.0.186(10.250.0.186:3306): OK: Applying all logs succeeded.</span><br><span class="line">10.250.0.186(10.250.0.186:3306): OK: Activated master IP address.</span><br><span class="line">10.250.0.102(10.250.0.102:3306): OK: Slave started, replicating from 10.250.0.186(10.250.0.186:3306)</span><br><span class="line">10.250.0.186(10.250.0.186:3306): Resetting slave info succeeded.</span><br><span class="line">Master failover to 10.250.0.186(10.250.0.186:3306) completed successfully.</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时查看新的master的ip</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ip-10-250-0-186 mysql8]<span class="comment"># ifconfig</span></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 9001</span><br><span class="line">        inet 10.250.0.186  netmask 255.255.255.0  broadcast 10.250.0.255</span><br><span class="line">        inet6 fe80::895:fcff:fe7f:ee0c  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 0a:95:<span class="built_in">fc</span>:7f:ee:0c  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 12284  bytes 3862460 (3.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 10558  bytes 2559446 (2.4 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0:1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 9001</span><br><span class="line">        inet 10.250.0.199  netmask 255.0.0.0  broadcast 10.255.255.255</span><br><span class="line">        ether 0a:95:<span class="built_in">fc</span>:7f:ee:0c  txqueuelen 1000  (Ethernet)</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 41  bytes 9270 (9.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 41  bytes 9270 (9.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><blockquote><p>另外查询原master，其也已经解除了虚拟IP的绑定，此时说明虚拟IP迁移成功，故障转移成功！</p></blockquote><div class="note danger"><p>AWS不支持在EC2上开启VIP，需要使用其它解决方案，这个不在这里讨论。</p></div><div class="note info"><p>可以在MHA配置文件中配置<code>report_script</code>，其对应一个脚本文件，用于故障转移时发出告警信息。<br>可以发送邮件，也可以调用企业微信或者钉钉的接口实现，这里不再赘述。</p></div>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;MySql-MHA的构建过程&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;,&lt;code&gt;mha4mysql-0.58-0.el7.centos&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySql单节点、主从、双主的构建方法</title>
    <link href="https://blog.hanqunfeng.com/2022/09/14/mysql8-config/"/>
    <id>https://blog.hanqunfeng.com/2022/09/14/mysql8-config/</id>
    <published>2022-09-14T13:30:05.000Z</published>
    <updated>2022-11-10T04:18:32.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">MySql单节点、主从、双主的构建过程，及其配置文件的说明</li><li class="lvl-2">本文基于<code>mysql-8.0.30</code></li></ul><span id="more"></span><h2 id="1-单节点">1.单节点</h2><h3 id="安装">安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.下载</span></span><br><span class="line">wget https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.30-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.解压</span></span><br><span class="line">tar -Jxvf mysql-8.0.30-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.重命名</span></span><br><span class="line"><span class="built_in">mv</span> mysql-8.0.30-linux-glibc2.12-x86_64 mysql8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.切换到root</span></span><br><span class="line">sudo su</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.创建mysql用户和mysql组</span></span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql -s /bin/false mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.创建数据目录并赋予权限</span></span><br><span class="line"><span class="built_in">cd</span> mysql8</span><br><span class="line"><span class="built_in">mkdir</span> -p datas/mysql</span><br><span class="line"><span class="built_in">chown</span> -R mysql:mysql datas</span><br><span class="line"><span class="built_in">chmod</span> -R 750 datas</span><br><span class="line"><span class="built_in">mkdir</span> sock</span><br><span class="line"><span class="built_in">chmod</span> 777 sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.设置环境变量</span></span><br><span class="line">vim /etc/bashrc</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/soft/mysql8/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.创建配置文件</span></span><br><span class="line"><span class="built_in">touch</span> my.cnf</span><br></pre></td></tr></table></figure><div class="warning"><p><strong>警告⚠️</strong><br><strong>默认情况下，mysql按照下面的文件顺序加载配置，后面的配置会覆盖前面的配置</strong><br><code>/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf</code><br>建议将配置文件创建到<code>/etc/my.cnf</code>，这样所有用户都可以使用，特殊配置可以创建在当前用户的<code>~/.my.cnf</code>中。<br>本文以下内容除特殊指定配置文件路径外，都是基于<code>/etc/my.cnf</code>的默认配置文件</p></div><h3 id="配置">配置</h3><div class="tips"><p><strong>配置段说明</strong></p><ul class="lvl-1"><li class="lvl-2">[mysql] 和 [client] 都是针对客户端的配置，后面的配置会覆盖前面的相同配置</li><li class="lvl-2">[mysql] 只针对 <code>mysql</code> 命令</li><li class="lvl-2">[client] 针对 <code>mysql</code>、<code>mysqldump</code>、<code>mysqlimport</code>、<code>mysqladmin</code>, 等等，所有的客户端命令</li><li class="lvl-2">[mysqld] 只是针对服务器端的配置，针对 <code>mysqld</code> 命令</li></ul></div><ul class="lvl-0"><li class="lvl-2"><p>配置文件示例</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">vim my.cnf</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line"><span class="comment"># 默认字符集，utf8mb4每个中文占四个字节，可以存入表情符号</span></span><br><span class="line"><span class="comment"># varchar(255)所表示的单位是字符，而一个汉字一个字母都是一字符。所以这里可以存储255个汉字或者255个字母。</span></span><br><span class="line"><span class="comment"># varchar的存储上限是65535字节，所以utf8mb4的varchar(16383)是上限(65535/4)</span></span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"><span class="comment"># mysqlimport和 load data local infile 导入文件开关，mysql和mysqld都要开通，默认关闭</span></span><br><span class="line">local_infile=ON</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">port       = 3306</span><br><span class="line"><span class="comment"># 本机socket保存路径，执行命令的用户要对该路径有访问权限</span></span><br><span class="line">socket     = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># 关闭mysql服务端对客户端的DNS解析，可以加快连接效率，mysql主机查询DNS很慢或是有很多客户端主机时会导致连接很慢时可以配置这个选项</span></span><br><span class="line">skip-name-resolve</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用MySQL outfile导出文件，mysqldump</span></span><br><span class="line"><span class="comment"># 限制mysql不允许导出，默认值</span></span><br><span class="line"><span class="comment"># secure_file_prive=null</span></span><br><span class="line"><span class="comment"># 限制mysql的导出只能发生在默认的/path/目录下</span></span><br><span class="line"><span class="comment"># secure_file_priv=/path/</span></span><br><span class="line"><span class="comment"># 不对mysql的导出做限制，可以导出到任意目录</span></span><br><span class="line">secure_file_priv=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysqlimport和 load data local infile 导入文件开关，mysql和mysqld都要开通，默认关闭</span></span><br><span class="line">local_infile=ON</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认使用mysql_native_password插件认证</span></span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口号</span></span><br><span class="line">port       = 3306</span><br><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id  = 1001</span><br><span class="line"><span class="comment"># 执行用户</span></span><br><span class="line">user       = mysql</span><br><span class="line"><span class="comment"># 本机socket保存路径</span></span><br><span class="line">socket     = /tmp/mysql.sock</span><br><span class="line"><span class="comment"># 安装目录</span></span><br><span class="line">basedir    = /usr/local/soft/mysql8</span><br><span class="line"><span class="comment"># 数据存放目录</span></span><br><span class="line">datadir    = /usr/local/soft/mysql8/datas/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启binlog日志，定义日志存储路径</span></span><br><span class="line">log-bin    = /usr/local/soft/mysql8/datas/mysql/mysql-bin</span><br><span class="line"><span class="comment"># binlog格式，有3种，statement,row,mixed，</span></span><br><span class="line"><span class="comment"># 推荐row，存储的每个sql的执行结果，安全性高，但是比较占磁盘空间</span></span><br><span class="line"><span class="comment"># statement存储的是sql语句，执行效率高，但是可能主从执行结果不一致</span></span><br><span class="line"><span class="comment"># mixed，statement和row都会存，主从同步时由从库的优化器决定具体的执行内容</span></span><br><span class="line">binlog-format = ROW</span><br><span class="line"><span class="comment"># binlog日志过期时间，单位秒，过期的binlog日志会被删除，保证磁盘空间，这里设置为10天，mysql8以前的版本这个参数是expire-logs-days，单位是天</span></span><br><span class="line">binlog_expire_logs_seconds =864000</span><br><span class="line"><span class="comment"># 1：每次写入都会与磁盘同步，会影响性能，0：事务提交时mysql不做磁盘操作，由系统决定</span></span><br><span class="line">sync-binlog=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># innodb数据存储目录</span></span><br><span class="line">innodb_data_home_dir      =/usr/local/soft/mysql8/datas/mysql</span><br><span class="line">innodb_log_group_home_dir =/usr/local/soft/mysql8/datas/mysql</span><br><span class="line"><span class="comment">#日志及进程数据的存放目录</span></span><br><span class="line">log-error =/usr/local/soft/mysql8/datas/mysql/mysql.log</span><br><span class="line">pid-file  =/usr/local/soft/mysql8/datas/mysql/mysql.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码</span></span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line"><span class="comment"># 不区分表名称大小写</span></span><br><span class="line">lower_case_table_names=1</span><br><span class="line"><span class="comment"># 默认就是1，是否自动提交，如果有事务，则跟着事务提交</span></span><br><span class="line">autocommit =1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 慢查询分析工具</span></span><br><span class="line"><span class="comment"># 1.mysqldumpslow，mysql自带</span></span><br><span class="line"><span class="comment"># 2.pt-query-digest，第三方:https://www.percona.com/downloads/percona-toolkit/LATEST/ß</span></span><br><span class="line"><span class="comment"># 开启慢查询日志，默认关闭</span></span><br><span class="line">slow_query_log=1</span><br><span class="line"><span class="comment"># 慢查询日志存放路径</span></span><br><span class="line">slow_query_log_file=/usr/local/soft/mysql8/datas/mysql/db_slow.log</span><br><span class="line"><span class="comment"># 超过5秒就认为是慢查询语句，默认10秒</span></span><br><span class="line">long_query_time=5</span><br><span class="line"><span class="comment"># 输出类型为文件类型，支持TABLE和FILE类型，如果是TABLE，select * from mysql.slow_log;</span></span><br><span class="line"><span class="comment">#log_output=FILE,TABLE</span></span><br><span class="line"><span class="comment"># 默认就是文件</span></span><br><span class="line">log_output=FILE</span><br><span class="line"><span class="comment"># 记录没有使用索引的查询语句，默认关闭</span></span><br><span class="line">log_queries_not_using_indexes=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳过外部锁定，默认配置。External-locking用于多进程条件下为MyISAM数据表进行锁定</span></span><br><span class="line"><span class="comment"># 当外部锁定（external-locking）起作用时，每个进程若要访问数据表，则必须等待之前的进程完成操作并解除锁定。</span></span><br><span class="line">skip-external-locking</span><br><span class="line"><span class="comment"># 索引块的缓冲区的大小</span></span><br><span class="line">key_buffer_size = 256M</span><br><span class="line"><span class="comment"># 指mysql服务器端和客户端在一次传送数据包的过程当中最大允许的数据包大小</span></span><br><span class="line">max_allowed_packet = 64M</span><br><span class="line"><span class="comment"># 数据库打开表的缓存数量，即表的高速缓存</span></span><br><span class="line"><span class="comment"># 每个连接进来，都会至少打开一个表缓存。例如，对于 200 个并行运行的连接，应该让表的缓存至少有 200 × N ，这里 N 是应用可以执行的SQL语句中所需要表的最大数量。</span></span><br><span class="line">table_open_cache = 1024</span><br><span class="line"><span class="comment"># 排序缓冲区大小</span></span><br><span class="line">sort_buffer_size = 4M</span><br><span class="line">net_buffer_length = 8K</span><br><span class="line">read_buffer_size = 4M</span><br><span class="line">read_rnd_buffer_size = 512K</span><br><span class="line">myisam_sort_buffer_size = 64M</span><br><span class="line"><span class="comment"># 线程缓存的数量，当客户端断开之后，服务器处理此客户的线程将会缓存起来以响应下一个客户而不是销毁(前提是缓存数未达上限)</span></span><br><span class="line">thread_cache_size = 64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时表的内存缓存大小</span></span><br><span class="line">tmp_table_size = 128M</span><br><span class="line"><span class="comment"># 数据行更新时，timestamp类型字段不更新为当前时间</span></span><br><span class="line">explicit_defaults_for_timestamp = <span class="literal">true</span></span><br><span class="line"><span class="comment"># 最大连接数</span></span><br><span class="line">max_connections = 500</span><br><span class="line"><span class="comment"># 某一客户端尝试连接服务器端，允许最大的失败次数，超过这个设置，则服务端会强制阻止该客户端的连接</span></span><br><span class="line">max_connect_errors = 100</span><br><span class="line"><span class="comment"># 使用的最大文件描述(FD)符数量，这个值不一定是这个设置的值，与操作系统设置以及最大连接数等有关</span></span><br><span class="line">open_files_limit = 65535</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line">innodb_data_file_path = ibdata1:10M:autoextend</span><br><span class="line"><span class="comment"># buffer_pool缓冲区大小，默认128M</span></span><br><span class="line">innodb_buffer_pool_size = 1024M</span><br><span class="line"><span class="comment"># redo log 文件大小，默认48M ,该参数已经过期，MySQL8.0.30引入了一个新特性：动态调整redo日志的大小</span></span><br><span class="line"><span class="comment"># innodb_log_file_size = 256M</span></span><br><span class="line"><span class="comment"># redo log buffer缓冲区大小，默认16M</span></span><br><span class="line">innodb_log_buffer_size = 16M</span><br><span class="line">innodb_flush_log_at_trx_commit = 1</span><br><span class="line">innodb_lock_wait_timeout = 50</span><br><span class="line"><span class="comment"># 修改默认的事务隔离级别，默认为REPEATABLE-READ</span></span><br><span class="line"><span class="comment"># transaction-isolation=READ-COMMITTED</span></span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line">quick</span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer_size = 256M</span><br><span class="line">sort_buffer_size = 4M</span><br><span class="line">read_buffer = 2M</span><br><span class="line">write_buffer = 2M</span><br><span class="line"></span><br><span class="line">[mysqlhotcopy]</span><br><span class="line">interactive-timeout</span><br></pre></td></tr></table></figure><h3 id="数据库初始化">数据库初始化</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 说明：--initialize-insecure 初始化时无密码</span></span><br><span class="line"><span class="comment"># 从默认位置查找配置文件</span></span><br><span class="line">sudo mysqld --user=mysql --initialize-insecure</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以指定配置文件的位置</span></span><br><span class="line">sudo mysqld --defaults-file=/usr/local/soft/mysql8/my.cnf --user=mysql --initialize-insecure</span><br></pre></td></tr></table></figure><h3 id="启动数据库">启动数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 后台启动</span></span><br><span class="line"><span class="comment"># 从默认位置查找配置文件</span></span><br><span class="line">sudo mysqld_safe --user=mysql &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以指定配置文件的位置</span></span><br><span class="line">sudo mysqld_safe --defaults-file=/usr/local/soft/mysql8/my.cnf --user=mysql &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否启动成功</span></span><br><span class="line">ps -ef|grep mysql</span><br></pre></td></tr></table></figure><h3 id="开机启动-启动关闭mysql命令">开机启动+启动关闭mysql命令</h3><h4 id="方法1-推荐-使用mysql提供的脚本">方法1[推荐]:使用mysql提供的脚本</h4><ul class="lvl-0"><li class="lvl-2"><p>开机自启动</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/soft/mysql8/support-files/</span><br><span class="line"><span class="comment"># 拷贝mysql启动脚本到启动路径，/etc/init.d 软连接到 /etc/rc.d/init.d</span></span><br><span class="line">sudo <span class="built_in">cp</span> mysql.server /etc/init.d/mysqld</span><br><span class="line"><span class="comment"># 加入开机启动服务,相当于 chkconfig mysqld on</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> mysqld</span><br><span class="line"><span class="comment"># 查看开机启动项</span></span><br><span class="line">chkconfig --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭开机自启动,相当于 chkconfig mysqld off</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> mysqld</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>启动关闭</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动mysql,start/stop/status/reload/restart</span></span><br><span class="line">sudo systemctl start mysqld</span><br><span class="line">sudo systemctl stop mysqld</span><br></pre></td></tr></table></figure><h4 id="方法2-自己写命令">方法2:自己写命令</h4><ul class="lvl-0"><li class="lvl-2"><p>开机自启动</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /etc/rc.d/rc.local</span><br><span class="line"><span class="comment"># /etc/rc.local 软连接到 /etc/rc.d/rc.local</span></span><br><span class="line">sudo vim /etc/rc.local</span><br><span class="line"></span><br><span class="line"><span class="comment"># start mysql8</span></span><br><span class="line"><span class="comment"># 从默认位置查找配置文件</span></span><br><span class="line">sudo /usr/local/soft/mysql8/bin/mysqld_safe --user=mysql &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以指定配置文件的位置</span></span><br><span class="line">sudo /usr/local/soft/mysql8/bin/mysqld_safe --defaults-file=/usr/local/soft/mysql8/my.cnf --user=mysql &amp;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>启动关闭</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 也可以指定配置文件的位置</span></span><br><span class="line">sudo /usr/local/soft/mysql8/bin/mysqld_safe --defaults-file=/usr/local/soft/mysql8/my.cnf --user=mysql &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭mysql</span></span><br><span class="line">sudo /usr/local/soft/mysql8/bin/mysqladmin  -uroot -ppassword  shutdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了方便使用可以设置别名</span></span><br><span class="line">sudo vim /etc/bashrc</span><br><span class="line"><span class="built_in">alias</span> mysql-start=<span class="string">&quot;sudo /usr/local/soft/mysql8/bin/mysqld_safe  --user=mysql &amp;&quot;</span></span><br><span class="line"><span class="built_in">alias</span> mysql-stop=<span class="string">&quot;sudo /usr/local/soft/mysql8/bin/mysqladmin  -uroot -ppassword  shutdown&quot;</span></span><br></pre></td></tr></table></figure><h4 id="检查mysql是否启动成功">检查mysql是否启动成功</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看进程</span></span><br><span class="line">&gt; ps aux | grep mysqld</span><br><span class="line">root      3960  0.0  0.0 124212  3240 ?        S    03:13   0:00 /bin/sh /usr/local/soft/mysql8/bin/mysqld_safe --datadir=/usr/local/soft/mysql8/datas/mysql --pid-file=/usr/local/soft/mysql8/datas/mysql/mysql.pid</span><br><span class="line">mysql     5071  0.9 13.1 3167692 529720 ?      Sl   03:13   0:02 /usr/local/soft/mysql8/bin/mysqld --basedir=/usr/local/soft/mysql8 --datadir=/usr/local/soft/mysql8/datas/mysql --plugin-dir=/usr/local/soft/mysql8/lib/plugin --user=mysql --log-error=/usr/local/soft/mysql8/datas/mysql/mysql.log --open-files-limit=65535 --pid-file=/usr/local/soft/mysql8/datas/mysql/mysql.pid --socket=/tmp/mysql.sock --port=3306</span><br><span class="line">root      5320  0.0  0.0 119448   920 pts/0    S+   03:18   0:00 grep --color=auto mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看端口</span></span><br><span class="line">&gt; netstat -tunpl | grep 3306</span><br><span class="line">tcp6       0      0 :::33060                :::*                    LISTEN      5071/mysqld</span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      5071/mysqld</span><br></pre></td></tr></table></figure><h3 id="登录">登录</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 无密码登录，第一次登录没有密码，所以使用这种方式登录</span></span><br><span class="line">mysql -uroot --skip-password</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密码登录</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程登录</span></span><br><span class="line">mysql -uroot -p -hxxx.xxx.xxx.xxx -P3306</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>遇到的问题</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error <span class="keyword">while</span> loading shared libraries:libtinfo.so.5: cannot open shared object file : No such file or directory</span><br></pre></td></tr></table></figure><blockquote><p>解决方法</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s /usr/lib64/libtinfo.so.6.0 /usr/lib64/libtinfo.so.5</span><br><span class="line"><span class="comment"># 注意：不同系统的版本可能这个文件名称后缀不一样，总之找到类似libtinfo.so.6.x的就行</span></span><br></pre></td></tr></table></figure><h3 id="修改密码">修改密码</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="comment"># 刷新权限</span></span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h3 id="授予root用户system-user权限">授予root用户<code>system_user</code>权限</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant system_user on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><h3 id="开启远程访问">开启远程访问</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许远程访问</span></span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; update user <span class="built_in">set</span> user.Host=<span class="string">&#x27;%&#x27;</span> <span class="built_in">where</span> user.User=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; select user,host from user;</span><br></pre></td></tr></table></figure><div class="warning"><p><strong>警告⚠️</strong><br><strong>非常不建议开启root用户的远程访问权限，建议新创建一个用户，并仅授予必要的权限</strong></p></div><h3 id="关闭mysql">关闭mysql</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysqladmin -uroot -p shutdown</span><br></pre></td></tr></table></figure><h2 id="2-主从">2.主从</h2><ul class="lvl-0"><li class="lvl-2"><p>参照单节点的构建方式搭建好两台mysql，主从计划如下:</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">master: 10.250.0.243</span><br><span class="line">slave:  10.250.0.82</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>master和slave的<code>server-id</code>不能相同</p></li><li class="lvl-2"><p>master必须开启binlog功能</p></li><li class="lvl-2"><p>slave必须开启中继日志</p></li><li class="lvl-2"><p>在云环境中，如果slave是通过master的镜像创建的，要修改slave的<code>datadir</code>中auto.cnf文件中的uuid的值，master和salve是不能相同的。</p></li></ul><blockquote><p>auto.cnf</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[auto]</span><br><span class="line">server-uuid=6e9a571e-330e-11ed-a3f8-0a53e7cced43</span><br></pre></td></tr></table></figure><h3 id="master配置文件">master配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id = 1001</span><br><span class="line"><span class="comment"># 开启binlog日志</span></span><br><span class="line">log-bin    = mysql-bin</span><br></pre></td></tr></table></figure><h3 id="slave配置文件">slave配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id = 1002</span><br><span class="line"><span class="comment"># 打开mysql中继日志，从库必须打开</span></span><br><span class="line">relay-log-index=slave-relay-bin.index</span><br><span class="line">relay-log=slave-relay-bin</span><br><span class="line"><span class="comment"># 是否自动清空不再需要中继日志，默认1：自动清空，0：不清空</span></span><br><span class="line">relay_log_purge=1</span><br><span class="line"><span class="comment"># 默认从库同步主库的数据时，是不会写入从库的binlog日志的，所以要想同步数据也记录binlog，则需要开启该参数</span></span><br><span class="line"><span class="comment"># 如果从库作为其它库的主库时，必须开启该参数</span></span><br><span class="line">log_slave_updates=1</span><br></pre></td></tr></table></figure><h3 id="主库创建同步帐号">主库创建同步帐号</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x27;10.250.%.%&#x27; 表示只能局域网段内的ip才能访问，如果不限制ip，可以配置为&#x27;%&#x27;</span></span><br><span class="line">mysql&gt; CREATE USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><blockquote><p>如果此时主库已经有数据，则需要先将主库数据导入到从库后再开启主从复制</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主库执行导出数据</span></span><br><span class="line">mysqldump -uroot --all-databases --triggers --routines --events -p &gt; all_databases.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出数据时，为了防止数据变化可以先锁表</span></span><br><span class="line"><span class="comment"># 锁</span></span><br><span class="line">mysql&gt; FLUSH TABLES WITH READ LOCK;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解锁</span></span><br><span class="line">mysql&gt; UNLOCK TABLES;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库执行导入数据</span></span><br><span class="line">mysql -uroot -p &lt; all_databases.sql</span><br></pre></td></tr></table></figure><h3 id="从节点设置同步">从节点设置同步</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看主节点master状态信息，记录File和Position两个信息</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000008 |     1140 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从节点设置同步信息，关联master中查询到的File和Position两个信息</span></span><br><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;10.250.0.243&#x27;</span>,</span><br><span class="line">    MASTER_PORT=3306,</span><br><span class="line">    MASTER_USER=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_PASSWORD=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000008&#x27;</span>,</span><br><span class="line">    MASTER_LOG_POS=1140;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动从库的复制线程</span></span><br><span class="line">mysql&gt; START slave;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看从库同步状态</span></span><br><span class="line">mysql&gt; SHOW slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State:</span><br><span class="line">                  Master_Host: 10.250.0.243</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000008</span><br><span class="line">          Read_Master_Log_Pos: 1140</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000001</span><br><span class="line">                Relay_Log_Pos: 4</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000008</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><blockquote><p>如果<code>Slave_IO_Running</code>和<code>Slave_SQL_Running</code>都是<code>Yes</code>，则说明主从复制配置成功。</p></blockquote><blockquote><p>此时在master中执行<code>SHOW PROCESSLIST;</code>可以查看到同步信息</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  SHOW PROCESSLIST;</span><br><span class="line">+----+-----------------+-------------------+------+-------------+------+-----------------------------------------------------------------+------------------+</span><br><span class="line">| Id | User            | Host              | db   | Command     | Time | State                                                           | Info             |</span><br><span class="line">+----+-----------------+-------------------+------+-------------+------+-----------------------------------------------------------------+------------------+</span><br><span class="line">|  5 | event_scheduler | localhost         | NULL | Daemon      |   49 | Waiting on empty queue                                          | NULL             |</span><br><span class="line">|  8 | vagrant         | 10.250.0.82:33924 | NULL | Binlog Dump |   49 | Source has sent all binlog to replica; waiting <span class="keyword">for</span> more updates | NULL             |</span><br><span class="line">|  9 | root            | 127.0.0.1:42410   | NULL | Query       |    0 | init                                                            | SHOW PROCESSLIST |</span><br><span class="line">+----+-----------------+-------------------+------+-------------+------+-----------------------------------------------------------------+------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><blockquote><p>主从架构，从库应该是禁止写操作的，否则有可能会导致主从同步失败（如主键冲突），所以为了保证数据的一致性，应该禁止从库写操作。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从库的配置文件增加如下内容，并重启从库</span></span><br><span class="line"><span class="comment"># 开启普通用户只读</span></span><br><span class="line">read_only=1</span><br><span class="line"><span class="comment"># 开启root用户只读</span></span><br><span class="line">super_read_only=1</span><br></pre></td></tr></table></figure><blockquote><p>开启GTID（全局事务ID）主从复制模式</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master和slave的my.cnf中分别加入，并重启mysql服务</span></span><br><span class="line">gtid_mode=on</span><br><span class="line">enforce_gtid_consistency=on</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当有数据更新后查询master状态，可以看到Executed_Gtid_Set 中有值了，这个值会随着数据更新不断更新</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                      |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| mysql-bin.000014 |     1183 |              |                  | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1 |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SHOW VARIABLES like <span class="string">&quot;%gtid%&quot;</span>;</span><br><span class="line">+----------------------------------+----------------------------------------+</span><br><span class="line">| Variable_name                    | Value                                  |</span><br><span class="line">+----------------------------------+----------------------------------------+</span><br><span class="line">| binlog_gtid_simple_recovery      | ON                                     |</span><br><span class="line">| enforce_gtid_consistency         | ON                                     |</span><br><span class="line">| gtid_executed                    | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1 |</span><br><span class="line">| gtid_executed_compression_period | 0                                      |</span><br><span class="line">| gtid_mode                        | ON                                     |</span><br><span class="line">| gtid_next                        | AUTOMATIC                              |</span><br><span class="line">| gtid_owned                       |                                        |</span><br><span class="line">| gtid_purged                      |                                        |</span><br><span class="line">| session_track_gtids              | OFF                                    |</span><br><span class="line">+----------------------------------+----------------------------------------+</span><br><span class="line">9 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><blockquote><p>主从架构，一个master可以配置多个slave。</p></blockquote><h3 id="主从模式高可用架构，MHA-Master-High-Availability-Manager-and-Tools-for-MySQL">主从模式高可用架构，MHA(Master High Availability Manager and Tools for MySQL)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">是由日本人开发的一个基于Perl脚本写的工具。这个工具专门用于监控主库的状态，</span><br><span class="line">当发现master节点故障时，会提升其中拥有新数据的slave节点成为新的master节点，</span><br><span class="line">在此期间，MHA会通过其他从节点获取额外的信息来避免数据一致性方面的问题。</span><br><span class="line">MHA还提供了mater节点的在线切换功能，即按需切换master-slave节点。</span><br><span class="line">MHA能够在30秒内实现故障切换，并能在故障切换过程中，最大程度的保证数据一致性。</span><br><span class="line">MHA是需要单独部署的，分为Manager节点和Node节点，两种节点。</span><br><span class="line">其中Manager节点一般是单独部署的一台机器。而Node节点一般是部署在每台MySQL机器上的。</span><br><span class="line">Node节点得通过解析各个MySQL的日志来进行一些操作。</span><br><span class="line">Manager节点会通过探测集群里的Node节点去判断各个Node所在机器上的MySQL运行是否正常，</span><br><span class="line">如果发现某个Master故障了，就直接把他的一个Slave提升为Master，然后让其他Slave都挂到新的Master上去，完全透明。</span><br></pre></td></tr></table></figure><blockquote><p>MHA安装包下载地址：<a href="https://github.com/yoshinorim/mha4mysql-manager/releases">https://github.com/yoshinorim/mha4mysql-manager/releases</a><br>MHA使用说明：<a href="https://github.com/yoshinorim/mha4mysql-manager/wiki">https://github.com/yoshinorim/mha4mysql-manager/wiki</a></p></blockquote><h2 id="3-双主">3.双主</h2><ul class="lvl-0"><li class="lvl-2"><p>双主模式就是两个mysql互为主从</p></li><li class="lvl-2"><p>两个master都不能设置只读</p></li><li class="lvl-2"><p>以上面主从为例，我们继续搭建双主架构</p></li></ul><h3 id="从库关闭只读并开启binlog">从库关闭只读并开启binlog</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启普通用户只读</span></span><br><span class="line"><span class="comment"># read_only=1</span></span><br><span class="line"><span class="comment"># 开启root用户只读</span></span><br><span class="line"><span class="comment"># super_read_only=1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id = 1002</span><br><span class="line"><span class="comment"># 开启binlog日志</span></span><br><span class="line">log-bin    = mysql-bin</span><br></pre></td></tr></table></figure><h3 id="主库也要开启中继日志">主库也要开启中继日志</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主从或集群中要保证唯一性</span></span><br><span class="line">server-id = 1001</span><br><span class="line"><span class="comment"># 打开mysql中继日志，从库必须打开</span></span><br><span class="line">relay-log-index=slave-relay-bin.index</span><br><span class="line">relay-log=slave-relay-bin</span><br><span class="line"><span class="comment"># 是否自动清空不再需要中继日志，默认1：自动清空，0：不清空</span></span><br><span class="line">relay_log_purge=1</span><br><span class="line"><span class="comment"># 默认从库同步主库的数据时，是不会写入从库的binlog日志的，所以要想同步数据也记录binlog，则需要开启该参数</span></span><br><span class="line"><span class="comment"># 如果从库作为其它库的主库时，必须开启该参数</span></span><br><span class="line">log_slave_updates=1</span><br></pre></td></tr></table></figure><h3 id="从库上创建同步帐号">从库上创建同步帐号</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x27;10.250.%.%&#x27; 表示只能局域网段内的ip才能访问，如果不限制ip，可以配置为&#x27;%&#x27;</span></span><br><span class="line">mysql&gt; CREATE USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; ALTER USER <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;vagrant&#x27;</span>;</span><br><span class="line">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO <span class="string">&#x27;vagrant&#x27;</span>@<span class="string">&#x27;10.250.%.%&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h3 id="查看从库的master状态">查看从库的master状态</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  SHOW master status;</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                      |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| mysql-bin.000014 |     1183 |              |                  | 6e9a571e-330e-11ed-a3f8-0a53e7cced42:1 |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="主库上配置主从信息">主库上配置主从信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;10.250.0.82&#x27;</span>,</span><br><span class="line">    MASTER_PORT=3306,</span><br><span class="line">    MASTER_USER=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_PASSWORD=<span class="string">&#x27;vagrant&#x27;</span>,</span><br><span class="line">    MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000014&#x27;</span>,</span><br><span class="line">    MASTER_LOG_POS=1183;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动复制线程</span></span><br><span class="line">mysql&gt; START slave;</span><br><span class="line"></span><br><span class="line">mysql&gt; SHOW slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: 10.250.0.82</span><br><span class="line">                  Master_User: vagrant</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000014</span><br><span class="line">          Read_Master_Log_Pos: 1183</span><br><span class="line">               Relay_Log_File: slave-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 326</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000014</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><blockquote><p>此时双主架构搭建完成。<br>双主架构下，每个master还可以配置多个slave用于数据备份。</p></blockquote><h3 id="双主架构自增主键冲突问题解决方法">双主架构自增主键冲突问题解决方法</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master1</span></span><br><span class="line"><span class="comment"># auto_increment字段产生的数值是：1, 3, 5, 7, …等奇数ID了</span></span><br><span class="line">auto_increment_offset = 1</span><br><span class="line">auto_increment_increment = 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># master2</span></span><br><span class="line"><span class="comment"># auto_increment字段产生的数值是：2, 4, 6, 8, …等偶数ID了</span></span><br><span class="line">auto_increment_offset = 2</span><br><span class="line">auto_increment_increment = 2</span><br></pre></td></tr></table></figure><h3 id="双主高可用架构：MMM-Master-Master-replication-managerfor-Mysql，Mysql主主复制管理器">双主高可用架构：MMM(Master-Master replication managerfor Mysql，Mysql主主复制管理器)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">是一套由Perl语言实现的脚本程序，可以对mysql集群进行监控和故障迁移。</span><br><span class="line">他需要两个Master，同一时间只有一个Master对外提供服务，可以说是主备模式。</span><br><span class="line">他是通过一个VIP(虚拟IP)的机制来保证集群的高可用。</span><br><span class="line">整个集群中，在主节点上会通过一个VIP地址来提供数据读写服务，</span><br><span class="line">而当出现故障时，VIP就会从原来的主节点漂移到其他节点，由其他节点提供服务。</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>MMM官网：<a href="https://www.mysql-mmm.org">https://www.mysql-mmm.org</a></p></li></ul><h2 id="4-半同步复制">4.半同步复制</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">无论是主从复制还是双主复制，默认数据同步都是异步进行，主服务在向客户端反馈执行结果时，是不知道binlog是否同步成功了的。</span><br><span class="line">这时候如果主服务宕机了，而从服务还没有备份到新执行的binlog，那就有可能会丢数据。</span><br><span class="line">那怎么解决这个问题呢，这就要靠MySQL的半同步复制机制来保证数据安全。</span><br><span class="line">半同步复制机制是一种介于异步复制和全同步复制之前的机制。</span><br><span class="line">主库在执行完客户端提交的事务后，并不是立即返回客户端响应，而是等待至少一个从库接收并写到relay log中，才会返回给客户端。</span><br><span class="line">MySQL在等待确认时，默认会等10秒，如果超过10秒没有收到ack，就会降级成为异步复制。</span><br></pre></td></tr></table></figure><h3 id="安装半同步复制插件">安装半同步复制插件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># master需要安装</span></span><br><span class="line">mysql&gt; install plugin rpl_semi_sync_master soname <span class="string">&#x27;semisync_master.so&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.02 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从库需要安装</span></span><br><span class="line">mysql&gt; install plugin rpl_semi_sync_slave soname <span class="string">&#x27;semisync_slave.so&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span><br></pre></td></tr></table></figure><blockquote><p>如果是双主架构，则都需要安装两个插件</p></blockquote><blockquote><p>开启配置</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启半同步复制，binlog至少传送到一个从节点，但不保证从节点一定应用了这个binlog，开启这个服务性能会有所下降</span></span><br><span class="line"><span class="comment"># master设置，需要安装插件install plugin rpl_semi_sync_master soname &#x27;semisync_master.so&#x27;;</span></span><br><span class="line">rpl_semi_sync_master_enabled=1</span><br><span class="line"><span class="comment"># slave设置，需要安装插件install plugin rpl_semi_sync_slave soname &#x27;semisync_slave.so&#x27;;</span></span><br><span class="line">rpl_semi_sync_slave_enabled=1</span><br></pre></td></tr></table></figure><blockquote><p>重启mysql后查看是否配置成功</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show global variables like <span class="string">&#x27;rpl_semi%&#x27;</span>;</span><br><span class="line">+-------------------------------------------+------------+</span><br><span class="line">| Variable_name                             | Value      |</span><br><span class="line">+-------------------------------------------+------------+</span><br><span class="line">| rpl_semi_sync_master_enabled              | ON         |</span><br><span class="line">| rpl_semi_sync_master_timeout              | 10000      |</span><br><span class="line">| rpl_semi_sync_master_trace_level          | 32         |</span><br><span class="line">| rpl_semi_sync_master_wait_for_slave_count | 1          |</span><br><span class="line">| rpl_semi_sync_master_wait_no_slave        | ON         |</span><br><span class="line">| rpl_semi_sync_master_wait_point           | AFTER_SYNC |</span><br><span class="line">| rpl_semi_sync_slave_enabled               | ON         |</span><br><span class="line">| rpl_semi_sync_slave_trace_level           | 32         |</span><br><span class="line">+-------------------------------------------+------------+</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;MySql单节点、主从、双主的构建过程，及其配置文件的说明&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于&lt;code&gt;mysql-8.0.30&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/mysql/"/>
    
    
    <category term="mysql" scheme="https://blog.hanqunfeng.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Redis单节点、主从、哨兵、集群构建方法</title>
    <link href="https://blog.hanqunfeng.com/2022/09/09/redis5-config/"/>
    <id>https://blog.hanqunfeng.com/2022/09/09/redis5-config/</id>
    <published>2022-09-09T13:30:05.000Z</published>
    <updated>2022-10-11T03:37:10.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">redis单节点、主从、哨兵、集群的构建过程，及其配置文件的说明</li><li class="lvl-2">本文基于<code>redis-5.0.14</code></li></ul><span id="more"></span><h2 id="redis安装">redis安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://download.redis.io/releases/redis-5.0.14.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf redis-5.0.14.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">sudo yum install gcc</span><br><span class="line"><span class="built_in">cd</span> redis-5.0.14</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑配置文件</span></span><br><span class="line"><span class="built_in">mv</span> redis.conf redis-6379.conf</span><br><span class="line">vim redis-6379.conf <span class="comment">#见下面的配置信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动redis</span></span><br><span class="line"><span class="comment"># 启动前要先创建好相关目录结构</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/soft/dir-redis5/6379</span><br><span class="line">src/redis-server redis-6379.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入环境变量 /etc/bashrc</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/soft/redis-5.0.14/src</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快捷命令</span></span><br><span class="line"><span class="built_in">alias</span> redis-start=<span class="string">&quot;redis-server /usr/local/soft/redis-5.0.14/redis-6379.conf&quot;</span></span><br><span class="line"><span class="built_in">alias</span> redis-stop=<span class="string">&quot;pkill redis-server&quot;</span></span><br></pre></td></tr></table></figure><h2 id="config命令设置">config命令设置</h2><ul class="lvl-0"><li class="lvl-2"><p>对于已经启动的redis服务，如果不想修改配置文件重启服务的话，也可以通过命令对部分参数进行设置，比如慢查询日志设置</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询</span></span><br><span class="line">127.0.0.1:6379&gt; config get slow*</span><br><span class="line">1) <span class="string">&quot;slowlog-log-slower-than&quot;</span></span><br><span class="line">2) <span class="string">&quot;10000&quot;</span></span><br><span class="line">3) <span class="string">&quot;slowlog-max-len&quot;</span></span><br><span class="line">4) <span class="string">&quot;128&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置</span></span><br><span class="line">127.0.0.1:6379&gt; config <span class="built_in">set</span> slowlog-max-len 1024</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入redis.conf</span></span><br><span class="line">127.0.0.1:6379&gt; config rewrite</span><br><span class="line">OK</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="单节点">单节点</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口</span></span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台启动</span></span><br><span class="line">daemonize <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不设置密码，需要关闭保护模式，开启的话只有本机能够访问，建议开启密码保护</span></span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释掉bind，绑定的是自己机器网卡的ip，如果有多块网卡可以配多个ip,代表允许客户端通过机器的哪些网卡ip去访问，内网一般可以不配置</span></span><br><span class="line"><span class="comment">#bind 127.0.0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释掉，因为会启用混合持久化，所以不需要开启rdb快照</span></span><br><span class="line"><span class="comment"># save xx xxx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置dir路径，redis日志、aof和rdb文件都会生成在这个路径下</span></span><br><span class="line"><span class="built_in">dir</span> /usr/local/soft/dir-redis5/6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启aof，实际上只需要开启这个配置，以下aof相关配置默认即可</span></span><br><span class="line">appendonly <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># aof文件名称</span></span><br><span class="line">appendfilename <span class="string">&quot;6379-appendonly.aof&quot;</span></span><br><span class="line"><span class="comment"># aof将数据fsync到磁盘的策略，默认即可，表示每秒一次，故障时最多会丢失一秒的数据</span></span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"><span class="comment"># aof文件至少要达到64M才会自动重写，文件太小恢复速度本来就很快，重写的意义不大，默认即可</span></span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"><span class="comment"># aof文件自上一次重写后文件大小增长了100%则再次触发重写，默认即可</span></span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启混合持久化，4.0以后版本支持，需要先开启aof</span></span><br><span class="line">aof-use-rdb-preamble <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pid文件路径</span></span><br><span class="line">pidfile /usr/local/soft/dir-redis5/6379/redis_6379.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件名称</span></span><br><span class="line">logfile <span class="string">&quot;6379.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定最大内存，单位bytes，这里设置4G</span></span><br><span class="line"><span class="comment"># 如果不设置最大内存，redis会默认为物理内存，达到上限时会频繁与磁盘发生交换，使redis性能急剧下降</span></span><br><span class="line">maxmemory 4294967296</span><br><span class="line"><span class="comment"># 达到最大内存时的清除策略，推荐volatile-lru，淘汰很久没被访问过的数据，基于最近一次的访问时间</span></span><br><span class="line">maxmemory-policy volatile-lru</span><br><span class="line"></span><br><span class="line"><span class="comment"># 慢查询日志</span></span><br><span class="line"><span class="comment"># 单位微妙，这里表示10毫秒，即超过10毫秒的操作都会记录下来</span></span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置慢查询日志记录保存数量，如果数量已满会删除最早的记录</span></span><br><span class="line">slowlog-max-len 1024</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启密码</span></span><br><span class="line">requirepass <span class="string">&quot;password&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果主节点开启了密码认证，则从节点需要设置主节点的密码，哨兵和集群模式时都要设置</span></span><br><span class="line">masterauth <span class="string">&quot;password&quot;</span></span><br></pre></td></tr></table></figure><h3 id="单节点优点">单节点优点</h3><ul class="lvl-0"><li class="lvl-2"><p>单机部署简单方便</p></li></ul><h3 id="单节点缺点">单节点缺点</h3><ul class="lvl-0"><li class="lvl-2"><p>不保证数据的可靠性，不适用于数据可靠性要求高的场景</p></li><li class="lvl-2"><p>单点故障导致无法提供服务，或者硬盘损坏导致数据丢失</p></li><li class="lvl-2"><p>redis单节点最大qps为10w(取决于单核cpu的处理能力)，超过这个qps就需要做前端限流</p></li></ul><h2 id="主从">主从</h2><ul class="lvl-0"><li class="lvl-2"><p>主从配置时，主节点不需要做任何修改，以上面单节点配置为例，其作为主节点</p></li><li class="lvl-2"><p>从节点参照主节点的配置文件进行配置，如果在同一台机器上，需要修改端口号和相关文件路径，如下</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口</span></span><br><span class="line">port 6380</span><br><span class="line"></span><br><span class="line"><span class="comment"># pid文件路径</span></span><br><span class="line">pidfile /usr/local/soft/dir-redis5/6380/redis_6380.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件名称</span></span><br><span class="line">logfile <span class="string">&quot;6380.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置dir路径，redis日志、aof和rdb文件都会生成在这个路径下</span></span><br><span class="line"><span class="built_in">dir</span> /usr/local/soft/dir-redis5/6380</span><br><span class="line"></span><br><span class="line"><span class="comment"># aof文件名称</span></span><br><span class="line">appendfilename <span class="string">&quot;6380-appendonly.aof&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>从节点配置文件增加同步主节点信息</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定主节点，从节点会从主节点同步数据，这里10.250.0.103 6379是主节点的ip和端口号</span></span><br><span class="line">replicaof 10.250.0.103 6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置从节点只读，默认开启，避免数据写入从节点导致主从数据不一致</span></span><br><span class="line">replica-read-only <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果主节点开启了密码认证，则从节点需要设置主节点的密码</span></span><br><span class="line">masterauth <span class="string">&quot;password&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时启动从节点<code>src/redis-server redis-6379.conf</code>，会自动从主节点同步数据，同步前如果从节点已经有数据，则会先清除原有数据再进行同步</p></li><li class="lvl-2"><p>主节点接收到从节点的同步请求后，会通过bgsave将内存数据dump到rdb文件中并传递给从节点</p></li><li class="lvl-2"><p>主节点生成rdb文件并传递给从节点期间会继续处理客户端的请求，并将这部分数据缓存到内存中，待从节点接收到主节点发过来的rdb文件并完成内存加载后，主节点会将这部分缓存在内存中的数据发送给从节点</p></li><li class="lvl-2"><p>从节点相当于主节点的备份，主节点挂了，从节点不能自动切换为主节点，如果需要自动切换，可以使用哨兵或者集群部署方式</p></li><li class="lvl-2"><p>此时登录redis执行<code>info</code>命令可以在<code>Replication</code>中查看到主从配置信息</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">master:</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=10.250.0.217,port=6379,state=online,offset=770728,lag=1</span><br><span class="line">master_replid:23d3f04c39a91dbef52f03c57179932b6d189719</span><br><span class="line">master_replid2:0af821e669f22c03e624d91f6bb88671c9085591</span><br><span class="line">master_repl_offset:770728</span><br><span class="line">second_repl_offset:147042</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:114822</span><br><span class="line">repl_backlog_histlen:655907</span><br><span class="line"></span><br><span class="line">slave:</span><br><span class="line"><span class="comment"># Replication</span></span><br><span class="line">role:slave</span><br><span class="line">master_host:10.250.0.103</span><br><span class="line">master_port:6379</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:1</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_repl_offset:788994</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_replid:23d3f04c39a91dbef52f03c57179932b6d189719</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:788994</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:149845</span><br><span class="line">repl_backlog_histlen:639150</span><br></pre></td></tr></table></figure></li></ul><h3 id="主从优点">主从优点</h3><ul class="lvl-0"><li class="lvl-2"><p>对请求进行读写分离，提高处理效率</p></li><li class="lvl-2"><p>可以提供多个副本，提高数据安全性</p></li></ul><h3 id="主从缺点">主从缺点</h3><ul class="lvl-0"><li class="lvl-2"><p>不具备自动容错和恢复功能，主节点故障，集群则无法进行工作，可用性比较低，从节点升主节点需要人工手动干预</p></li></ul><h2 id="哨兵">哨兵</h2><ul class="lvl-0"><li class="lvl-2"><p>创建三个哨兵</p></li><li class="lvl-2"><p>哨兵模式时，主节点如果开启了密码认证则从节点也要开启密码认证，且密码一致，另外主节点也要配置<code>masterauth &quot;password&quot;</code>，否则主节点挂了重启后不能与从节点进行数据同步</p></li><li class="lvl-2"><p>编辑sentinel.conf</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 端口号</span></span><br><span class="line">port 26379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后台启动</span></span><br><span class="line">daemonize <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pid文件路径</span></span><br><span class="line">pidfile /usr/local/soft/dir-redis5/redis-sentinel.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志文件名称</span></span><br><span class="line">logfile <span class="string">&quot;sentinel.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dir</span></span><br><span class="line"><span class="built_in">dir</span> /usr/local/soft/dir-redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置监听的主节点地址和端口，mymaster为自定义的名称，最后的2表示，只要有2个哨兵节点认为主节点挂了就会进行重新选主，一般设置为sentinel总数/2+1</span></span><br><span class="line">sentinel monitor mymaster 10.250.0.103 6379 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主节点密码</span></span><br><span class="line">sentinel auth-pass mymaster <span class="string">&quot;password&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>分别启动三个哨兵节点<code>redis-sentinel sentinel.conf</code>，此时登录哨兵节点<code>redis-cli -p 26379</code>，并执行<code>info</code>命令，可以在<code>Sentinel</code>查看到其是否正确识别了主从</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sentinel</span></span><br><span class="line">sentinel_masters:1</span><br><span class="line">sentinel_tilt:0</span><br><span class="line">sentinel_running_scripts:0</span><br><span class="line">sentinel_scripts_queue_length:0</span><br><span class="line">sentinel_simulate_failure_flags:0</span><br><span class="line">master0:name=mymaster,status=ok,address=10.250.0.103:6379,slaves=1,sentinels=2</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时查看<code>sentinel.conf</code>可以在文件最后看到从节点信息和其它的哨兵节点信息，如下</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sentinel known-replica mymaster 10.250.0.217 6379</span><br><span class="line">sentinel known-sentinel mymaster 10.250.0.189 26379 228936dfc6bb7a0fafb6a1503330887a94fff478</span><br><span class="line">sentinel known-sentinel mymaster 10.250.0.190 26379 228936dfc6bb7a0fafb6a1503330887a94fff478</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时关闭master节点，然后登录哨兵节点或者从节点查看<code>info</code>，都会发现从节点已经变成了master节点</p></li><li class="lvl-2"><p>此时再次开启原master节点，会发现其变成了从节点，相应的配置文件也发生了变更</p></li></ul><h3 id="哨兵优点">哨兵优点</h3><ul class="lvl-0"><li class="lvl-2"><p>主节点故障，可以自动在从节点中重新选主</p></li></ul><h3 id="哨兵缺点">哨兵缺点</h3><ul class="lvl-0"><li class="lvl-2"><p>哨兵单点故障，则集群无法访问，所以需要对哨兵集群部署</p></li><li class="lvl-2"><p>从节点仅作为备份不提供对外服务，只有当master出现故障时其晋升为master后才能提供服务，所以不支持读写分离</p></li></ul><h2 id="集群">集群</h2><ul class="lvl-0"><li class="lvl-2"><p>还是基于单节点配置文件，注意如果开启了密码认证，则也要配置<code>masterauth &quot;password&quot;</code></p></li><li class="lvl-2"><p>搭建6个redis的集群，3主3从，如果一台服务器上有多个redis，注意修改端口号和dir路径</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">port 6379</span><br><span class="line"><span class="built_in">dir</span> /usr/local/soft/dir-redis5/6379</span><br><span class="line">requirepass <span class="string">&quot;password&quot;</span></span><br><span class="line">masterauth <span class="string">&quot;password&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动集群模式</span></span><br><span class="line">cluster-enabled <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群节点信息文件，这里最好和port对应上</span></span><br><span class="line">cluster-config-file nodes-6379.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群节点间通信的超时时间，单位毫秒，默认15000，这个时间别设置太短，避免网络抖动等原因干扰</span></span><br><span class="line">cluster-node-timeout 15000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写数据成功最少同步的slave数量，默认数据写入master就返回给client了，加上这个配置，就需要数据同步到指定数量的slave后才能返回，</span></span><br><span class="line"><span class="comment"># 注意这个配置不仅会延长client的等待时间，而且可能会影响集群的可用性，比如这里配置至少同步1个slave，但是如果此时master对应可用的slave不足1个，集群就不能提供服务了，所以建议每个master至少配置了2个以上的slave时才开启这个配置</span></span><br><span class="line"><span class="comment"># 开启这个配置可以预防集群脑裂问题</span></span><br><span class="line">min-replicas-to-write 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果集群中某个master/slave全部挂掉，整个集群的其它master/slave是否还可以对外提供服务，默认yes，不能</span></span><br><span class="line"><span class="comment"># 如果设置为no，则表示依旧可以提供服务，不过如果有key落在了挂掉的主从上就会失败</span></span><br><span class="line">cluster-require-full-coverage <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>分别启动6个redis服务</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src/redis-server redis.conf</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>创建集群，3主3从，注意创建集群前所有redis不能有数据，如果有需要先清空</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -a password --cluster create --cluster-replicas 1 10.250.0.67:6379 10.250.0.170:6379 10.250.0.114:6379 10.250.0.110:6379 10.250.0.244:6379 10.250.0.206:6379</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时会列出集群内主从和槽位的分配方案，输入<code>yes</code>即可</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; Performing <span class="built_in">hash</span> slots allocation on 6 nodes...</span><br><span class="line">Master[0] -&gt; Slots 0 - 5460</span><br><span class="line">Master[1] -&gt; Slots 5461 - 10922</span><br><span class="line">Master[2] -&gt; Slots 10923 - 16383</span><br><span class="line">Adding replica 10.250.0.244:6379 to 10.250.0.67:6379</span><br><span class="line">Adding replica 10.250.0.206:6379 to 10.250.0.170:6379</span><br><span class="line">Adding replica 10.250.0.110:6379 to 10.250.0.114:6379</span><br><span class="line">M: df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">M: 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">M: 35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">S: 87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379</span><br><span class="line">   replicates 35ca216e53df5fac37c3996059b19b443ed19e78</span><br><span class="line">S: 812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379</span><br><span class="line">   replicates df05843701533a368831b4d414a867e8350e8ad6</span><br><span class="line">S: 80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379</span><br><span class="line">   replicates 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b</span><br><span class="line">Can I <span class="built_in">set</span> the above configuration? (<span class="built_in">type</span> <span class="string">&#x27;yes&#x27;</span> to accept): <span class="built_in">yes</span></span><br><span class="line">&gt;&gt;&gt; Nodes configuration updated</span><br><span class="line">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER MEET messages to <span class="built_in">join</span> the cluster</span><br><span class="line">Waiting <span class="keyword">for</span> the cluster to <span class="built_in">join</span></span><br><span class="line">..</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 10.250.0.67:6379)</span><br><span class="line">M: df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b</span><br><span class="line">M: 35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: 812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates df05843701533a368831b4d414a867e8350e8ad6</span><br><span class="line">S: 87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 35ca216e53df5fac37c3996059b19b443ed19e78</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check <span class="keyword">for</span> open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>登录集群并查询集群配置信息</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -c 表示以集群模式登录，-h 集群内任意ip</span></span><br><span class="line">src/redis-cli -c -h 10.250.0.67 -p 6379 -a password</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看集群信息</p></li></ul><blockquote><p>cluster info</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cluster_state:ok</span><br><span class="line">cluster_slots_assigned:16384</span><br><span class="line">cluster_slots_ok:16384</span><br><span class="line">cluster_slots_pfail:0</span><br><span class="line">cluster_slots_fail:0</span><br><span class="line">cluster_known_nodes:6</span><br><span class="line">cluster_size:3</span><br><span class="line">cluster_current_epoch:6</span><br><span class="line">cluster_my_epoch:1</span><br><span class="line">cluster_stats_messages_ping_sent:147</span><br><span class="line">cluster_stats_messages_pong_sent:156</span><br><span class="line">cluster_stats_messages_sent:303</span><br><span class="line">cluster_stats_messages_ping_received:151</span><br><span class="line">cluster_stats_messages_pong_received:147</span><br><span class="line">cluster_stats_messages_meet_received:5</span><br><span class="line">cluster_stats_messages_received:303</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>查看节点列表</p></li></ul><blockquote><p>cluster nodes</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379@16379 master - 0 1662724614912 2 connected 5461-10922</span><br><span class="line">80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379@16379 slave 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 0 1662724615000 6 connected</span><br><span class="line">35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379@16379 master - 0 1662724613000 3 connected 10923-16383</span><br><span class="line">df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379@16379 myself,master - 0 1662724614000 1 connected 0-5460</span><br><span class="line">812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379@16379 slave df05843701533a368831b4d414a867e8350e8ad6 0 1662724613910 5 connected</span><br><span class="line">87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379@16379 slave 35ca216e53df5fac37c3996059b19b443ed19e78 0 1662724615914 4 connected</span><br></pre></td></tr></table></figure><blockquote><p>此时查看<code>nodes-6379.conf</code>也会看到和上面一样的节点信息</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>此时关闭其中一个master节点，比如<code>10.250.0.67</code>，则其对以的slave节点<code>10.250.0.244</code>会切换为新的master节点，此时<code>10.250.0.67</code>的状态为<code>fail</code></p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">10.250.0.206:6379&gt; cluster nodes</span><br><span class="line">87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379@16379 slave 35ca216e53df5fac37c3996059b19b443ed19e78 0 1662780661815 4 connected</span><br><span class="line">80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379@16379 myself,slave 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 0 1662780661000 6 connected</span><br><span class="line">df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379@16379 master,fail - 1662780649679 1662780648000 1 connected</span><br><span class="line">812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379@16379 master - 0 1662780661000 7 connected 0-5460</span><br><span class="line">0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379@16379 master - 0 1662780661000 2 connected 5461-10922</span><br><span class="line">35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379@16379 master - 0 1662780662000 3 connected 10923-16383</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>再次启动<code>10.250.0.67</code>，其会变成<code>10.250.0.244</code>的slave节点</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">10.250.0.206:6379&gt; cluster nodes</span><br><span class="line">87509b2809a6c1645416ba03f54ee8a61293bac9 10.250.0.110:6379@16379 slave 35ca216e53df5fac37c3996059b19b443ed19e78 0 1662781012000 4 connected</span><br><span class="line">80e8dcb95905a2c25d8bbb0290e77aa0ca37aa56 10.250.0.206:6379@16379 myself,slave 0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 0 1662781012000 6 connected</span><br><span class="line">df05843701533a368831b4d414a867e8350e8ad6 10.250.0.67:6379@16379 slave 812b99df229ca9143ae72c4447ab4e889f1af113 0 1662781013708 7 connected</span><br><span class="line">812b99df229ca9143ae72c4447ab4e889f1af113 10.250.0.244:6379@16379 master - 0 1662781011000 7 connected 0-5460</span><br><span class="line">0beec83cd2788e35f3b373aad8c60fb5f0f17a3b 10.250.0.170:6379@16379 master - 0 1662781012706 2 connected 5461-10922</span><br><span class="line">35ca216e53df5fac37c3996059b19b443ed19e78 10.250.0.114:6379@16379 master - 0 1662781012000 3 connected 10923-16383</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>redis集群会将2的14次幂(16384)的soft平均分配到所有master上，然后对key进行hash后计算应该存储到那个soft</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HASH_SLOT=CRC16(key) mod 16384</span><br><span class="line"></span><br><span class="line"><span class="comment"># 跳转重定位</span></span><br><span class="line">10.250.0.206:6379&gt; <span class="built_in">set</span> name zhangsan</span><br><span class="line">-&gt; Redirected to slot [5798] located at 10.250.0.170:6379</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>关闭集群，6个redis分别关闭</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src/redis-cli -c -h 10.250.0.67 -p 6379 -a password shutdown</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>重启集群，6个redis分别启动即可</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src/redis-server redis.conf</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>mset/mget要求key都落在同一个soft上，每个key都加上前缀<code>&#123;prefix&#125;</code></p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">10.250.0.170:6379&gt; mset name1 lisi name2 wangwu</span><br><span class="line">(error) CROSSSLOT Keys <span class="keyword">in</span> request don<span class="string">&#x27;t hash to the same slot</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">10.250.0.170:6379&gt; mset &#123;user&#125;:name1 lisi &#123;user&#125;:name2 wangwu</span></span><br><span class="line"><span class="string">OK</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">10.250.0.206:6379&gt; mget &#123;user&#125;:name1 &#123;user&#125;:name2</span></span><br><span class="line"><span class="string">-&gt; Redirected to slot [5474] located at 10.250.0.170:6379</span></span><br><span class="line"><span class="string">1) &quot;lisi&quot;</span></span><br><span class="line"><span class="string">2) &quot;wangwu&quot;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>集群推举新的master时要求至少一半的master同意，所以一个集群至少需要3个master，官方推荐master节点数为奇数，比如3个和4个master节点，都至多允许一个master节点挂掉时进行选主，但是3个master可以节省资源</p></li><li class="lvl-2"><p>集群通过<code>10000+port</code>这个端口号进行集群间通信，所以除了要开放<code>prot</code>这个端口，还要开放<code>10000+port</code>这个端口</p></li><li class="lvl-2"><p>有关redis集群及其水平扩展的进一步说明，可以参看<a href="/2018/12/27/redis-cluster/" title="Redis集群">Redis集群</a></p></li></ul><h3 id="集群优点">集群优点</h3><ul class="lvl-0"><li class="lvl-2"><p>无中心架构，集群内部自行维护数据的分片和主从的切换</p></li><li class="lvl-2"><p>数据分片存储，提供很高的访问效率</p></li><li class="lvl-2"><p>高可用性，可实现部分节点不可用时，集群仍可用</p></li><li class="lvl-2"><p>高扩展性，可以横向扩展1000个节点后依旧保证访问效率，扩容缩容都支持</p></li></ul><h3 id="集群缺点">集群缺点</h3><ul class="lvl-0"><li class="lvl-2"><p>数据通过异步复制，不保证数据的强一致性</p></li><li class="lvl-2"><p>不支持多数据库空间，单机下的redis可以支持到16个数据库，集群模式下只能使用1个数据库空间，即db 0</p></li><li class="lvl-2"><p>不支持跨slot操作，如使用mset、mget目前只支持具有相同slot值的Key执行批量操作</p></li><li class="lvl-2"><p>Key作为数据分区的最小粒度，不能将一个很大的键值对象如hash、list等映射到不同的节点</p></li><li class="lvl-2"><p>Key事务操作支持有限，只支持多key在同一节点上的事务操作，当多个Key分布于不同的节点上时无法使用事务功能</p></li><li class="lvl-2"><p>不建议使用pipeline和multi-keys操作</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;redis单节点、主从、哨兵、集群的构建过程，及其配置文件的说明&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;本文基于&lt;code&gt;redis-5.0.14&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="redis" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/redis/"/>
    
    
    <category term="redis" scheme="https://blog.hanqunfeng.com/tags/redis/"/>
    
    <category term="redis cluster" scheme="https://blog.hanqunfeng.com/tags/redis-cluster/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot2学习笔记--thymeleaf</title>
    <link href="https://blog.hanqunfeng.com/2022/05/19/thymeleaf_study/"/>
    <id>https://blog.hanqunfeng.com/2022/05/19/thymeleaf_study/</id>
    <published>2022-05-19T06:24:04.000Z</published>
    <updated>2022-08-17T07:34:01.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><p>看完本文你将掌握如下知识点：</p><ul class="lvl-0"><li class="lvl-2">Spring Boot(2.4.4)中使用<a href="https://www.thymeleaf.org">thymeleaf(3.0.12)</a>的常用语法</li></ul><span id="more"></span><h2 id="项目准备">项目准备</h2><h3 id="依赖">依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring对thymeleaf的支持--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="开启spring-boot对thymeleaf的支持">开启spring boot对thymeleaf的支持</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##thymeleaf</span></span><br><span class="line"><span class="attr">spring.thymeleaf.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">spring.thymeleaf.prefix</span>=<span class="string">classpath:/templates/</span></span><br><span class="line"><span class="attr">spring.thymeleaf.suffix</span>=<span class="string">.html</span></span><br><span class="line"><span class="attr">spring.thymeleaf.encoding</span>=<span class="string">UTF-8</span></span><br><span class="line"><span class="attr">spring.thymeleaf.mode</span>=<span class="string">HTML</span></span><br><span class="line"><span class="comment">#关闭页面缓存</span></span><br><span class="line"><span class="attr">spring.thymeleaf.cache</span>=<span class="string">false</span></span><br><span class="line"><span class="attr">spring.thymeleaf.servlet.content-type</span>=<span class="string">text/html</span></span><br></pre></td></tr></table></figure><p>也可以通过@Bean的方式开启支持</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> ThymeleafViewResolver <span class="title function_">thymeleafViewResolver</span><span class="params">()</span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;thymeleafViewResolver&quot;</span>);</span><br><span class="line">    <span class="type">ThymeleafViewResolver</span> <span class="variable">viewResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThymeleafViewResolver</span>();</span><br><span class="line">    viewResolver.setTemplateEngine(templateEngine());</span><br><span class="line">    viewResolver.setOrder(<span class="number">1</span>);</span><br><span class="line">    viewResolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    viewResolver.setContentType(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line">    viewResolver.setCache(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> viewResolver;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> SpringResourceTemplateResolver <span class="title function_">templateResolver</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SpringResourceTemplateResolver</span> <span class="variable">templateResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringResourceTemplateResolver</span>();</span><br><span class="line">    templateResolver.setApplicationContext(<span class="built_in">this</span>.applicationContext);</span><br><span class="line">    templateResolver.setPrefix(<span class="string">&quot;classpath:/templates/&quot;</span>);</span><br><span class="line">    templateResolver.setSuffix(<span class="string">&quot;.html&quot;</span>);</span><br><span class="line">    templateResolver.setTemplateMode(TemplateMode.HTML);</span><br><span class="line">    templateResolver.setCacheable(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> templateResolver;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> SpringTemplateEngine <span class="title function_">templateEngine</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">SpringTemplateEngine</span> <span class="variable">templateEngine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringTemplateEngine</span>();</span><br><span class="line">    templateEngine.setTemplateResolver(templateResolver());</span><br><span class="line">    templateEngine.setEnableSpringELCompiler(<span class="literal">true</span>);</span><br><span class="line">    <span class="keyword">return</span> templateEngine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="开启html页面对thymeleaf语法的支持">开启html页面对thymeleaf语法的支持</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="语法">语法</h2><h3 id="各种表达式语法">各种表达式语法</h3><ol><li class="lvl-3"><p>${…} 变量表达式，用于展示后台传递过来的变量（request和session中的值）</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;modify&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;modify&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;dataObj.id&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span>  <span class="attr">name</span>=<span class="string">&quot;logParamData&quot;</span> <span class="attr">id</span>=<span class="string">&quot;logParamData&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;dataObj.logParamData&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">以下两种方式效果一致</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;dataObj.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>[[$&#123;dataObj.name&#125;]]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">字符串拼接，可以使用加号，也可以使用竖线，以下两种方式效果一致</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;accessTypes&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;+&#x27;_&#x27;+$&#123;type.id&#125;&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span> [[$&#123;type.name&#125;]</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;accessTypes&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;|$&#123;item.id&#125;_$&#123;type.id&#125;|&#125;&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span>&gt;</span> [[$&#123;type.name&#125;]</span><br><span class="line"></span><br><span class="line">#dates与java.util.Date对象的方法对应，格式化、日期组件抽取等等</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(item.logTime, &#x27;yyyy-MM-dd&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;#dates.format(item.logTime, &#x27;yyyy-MM-dd&#x27;)&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li class="lvl-3"><p>#{…} 国际化消息表达式，用于展示message.properties等国际化资源文件中的内容</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.choose&#125;&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">消息中需要传递变量的情况，多个变量逗号分割</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.page.summary($&#123;_pageBean.pageCount&#125;,$&#123;_pageBean.total&#125;)&#125;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">以下两种方式效果一致</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.operate&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>[[#&#123;common.operate&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li class="lvl-3"><p>@{…} 链接url表达式，用于封装url，如contextPath补全</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/resource/css/netqin.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>/&gt;</span></span><br><span class="line">用两个竖线来拼接带表达式的字符串</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;|/resource/js/i18n/list.#&#123;locale&#125;.js|&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">带请求参数的url，多个用逗号分割</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/auth/systemLogger/edit.do(id=$&#123;item.id&#125;,flag=$&#123;flag&#125;)&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.edit&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li class="lvl-3"><p>js和css中用到表达式时使用双中括号的方式</p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取服务器完整地址</span></span><br><span class="line"><span class="keyword">var</span> systemAddress = <span class="string">&quot;[[$&#123;#httpServletRequest.getScheme() + &#x27;://&#x27; + #httpServletRequest.getServerName() + &#x27;:&#x27; + #request.getServerPort()&#125;]]&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取contextPath</span></span><br><span class="line"><span class="keyword">var</span> ctxPath  = <span class="string">&quot;[[@&#123;/&#125;]]&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 完整的请求路径前缀，注意后面跟的地址不要以`/`开头</span></span><br><span class="line"><span class="keyword">var</span> serverPath = systemAddress + ctxPath;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取变量</span></span><br><span class="line"><span class="keyword">var</span> modify = <span class="string">&quot;[[$&#123;modify&#125;]]&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(modify != <span class="string">&quot;add&quot;</span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;#password&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;placeholder&quot;</span>,<span class="string">&quot;[[#&#123;user.detail.changeNotice&#125;]]&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li class="lvl-3"><p>*{…} 选择变量表达式，用于简写变量名称，需要配合th:object一起使用</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:object</span>=<span class="string">&quot;$&#123;user&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>firstName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;firstName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>lastName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;lastName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">相当于</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>firstName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.firstName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>lastName: <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.lastName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li class="lvl-3"><p><code>~&#123;...&#125;</code> 代码块表达式，用于在html中复用相同的结构<br>语法：<code>~&#123;templatename::fragmentname&#125;</code><br>示例：<br>common/model.html，<code>th:fragment=&quot;header&quot;</code>指定代码块名称</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span> <span class="attr">th:fragment</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">META</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Pragma&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">META</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Cache-Control&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-cache&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">META</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Expire&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/resource/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/resource/css/ace.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/resource/css/font-awesome.min.css&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/resource/js/jquery-1.11.0.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>demo.html，<code>th:replace=&quot;common/model::header&quot;</code>，模板名称::代码块名称</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">th:replace</span>=<span class="string">&quot;common/model::header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>说明：代码块表达式需要配合th属性（th:insert，th:replace，th:include）一起使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">th:insert：将代码块片段整个插入到使用了th:insert的HTML标签中，</span><br><span class="line">th:replace：将代码块片段整个替换使用了th:replace的HTML标签中，</span><br><span class="line">th:include：将代码块片段包含的内容插入到使用了th:include的HTML标签中，</span><br></pre></td></tr></table></figure><h3 id="遍历">遍历</h3><h4 id="简单示例">简单示例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;item:$&#123;results&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;noborder&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    [[$&#123;#dates.format(item.logTime, &#x27;yyyy-MM-dd&#x27;)&#125;]]</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.logDesc&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.logUser&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="带遍历状态的示例">带遍历状态的示例</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;item,status:$&#123;results&#125;&quot;</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;status.odd&#125;? &#x27;odd&#x27;:&#x27;even&#x27;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;noborder&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    [[$&#123;#dates.format(item.logTime, &#x27;yyyy-MM-dd&#x27;)&#125;]]</span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.logDesc&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.logUser&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>状态说明</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">index：当前遍历索引，从0开始</span><br><span class="line">count：当前遍历索引，从1开始</span><br><span class="line">size：总元素数量</span><br><span class="line">current：每一次遍历的iter变量</span><br><span class="line">even/odd：当前遍历是even还是odd，布尔属性</span><br><span class="line">first：当前遍历是第一个，布尔属性</span><br><span class="line">last：当前遍历是最后一个，布尔属性</span><br></pre></td></tr></table></figure><h4 id="遍历时可以自定义变量">遍历时可以自定义变量</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">th:with：用于定义变量，多个使用逗号分割</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:each</span>=<span class="string">&quot;type,status:$&#123;accessTypes&#125;&quot;</span> <span class="attr">th:with</span>=<span class="string">&quot;shwoName=$&#123;item.id&#125;+&#x27;_&#x27;+$&#123;item.name&#125;&quot;</span>&gt;</span></span><br><span class="line">[[$&#123;shwoName&#125;]]</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not status.last&#125;&quot;</span>&gt;</span>,<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="条件判断">条件判断</h3><h4 id="th-if">th:if</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">判断为true时才会显示div，authorities为Set类型，所以判断是否包含时可以使用#sets.contains()方法，测试时发现使用#arrays.contains()方法时也可以</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;dataObj.reserved&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;item:$&#123;dataObj.authorities&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;authorities&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">th:if</span>=<span class="string">&quot;$&#123;dataObj.authorities ==null or not #sets.contains(dataObj.authorities,item)&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;authorities&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">checked</span>=<span class="string">&quot;checked&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;dataObj.authorities !=null and #sets.contains(dataObj.authorities,item)&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">如果要判断为false时才会显示div，可以判断值是否等于false，或者使用th:unless</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;dataObj.reserved==false&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;item:$&#123;dataObj.authorities&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;authorities&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:unless</span>=<span class="string">&quot;$&#123;dataObj.reserved&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">th:each</span>=<span class="string">&quot;item:$&#123;dataObj.authorities&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;authorities&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;item.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>th:if 以下情况运算为true</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">值不为null</span><br><span class="line">值为boolean且为true</span><br><span class="line">值为数字且非0</span><br><span class="line">值为字符且非0</span><br><span class="line">值是字符串且不是：“false”，“off”，“no”</span><br><span class="line">值是object,但不为null</span><br></pre></td></tr></table></figure><h4 id="th-switch-和-th-case">th:switch 和 th:case</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bool匹配</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;dataObj.reserved&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;true&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;false&quot;</span>&gt;</span>false<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">字符串匹配，要加单引号</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;&#x27;admin&#x27;&quot;</span>&gt;</span>administrator<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;&#x27;manager&#x27;&quot;</span>&gt;</span>manager<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;item.showNameRole&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;&#x27;admin&#x27;&quot;</span>&gt;</span>administrator<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;&#x27;manager&#x27;&quot;</span>&gt;</span>manager<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;*&quot;</span>&gt;</span>unknow<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>说明：th:case=“*” 表示没有匹配成功时显示的内容</p></li></ul><h3 id="运算符">运算符</h3><ul class="lvl-0"><li class="lvl-2"><p>字符串连接</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　+ : $&#123;item.id&#125;+&#x27;_&#x27;+$&#123;type.id&#125;</span><br><span class="line">　　|xxxx| : |The name is $&#123;name&#125;|</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>算术运算</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　+ , - , * , / , %  (二元运算符)</span><br><span class="line">　　-  :负号（一元运算符）</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>布尔操作</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　and :且,or :或 (二元运算符)</span><br><span class="line">　　!,not :非（一元操作符）</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>关系操作符</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　&gt; , &lt; , &gt;= , &lt;= (gt , lt , ge , le)</span><br><span class="line">　　== , != (eq, ne)</span><br></pre></td></tr></table></figure><h3 id="表达式工具对象">表达式工具对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#dates 与java.util.Date对象的方法对应，格式化、日期组件抽取等等，如：$&#123;#dates.format(item.lastupdate, &#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;</span><br><span class="line">#temporals 支持jdk8中新增的LocalDate,LocalDateTime的格式化，如：$&#123;#temporals.format(item.updateTime, &#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;，新版本的spring-boot-starter-thymeleaf中已经默认加入了thymeleaf-extras-java8time依赖</span><br><span class="line">#calendars 类似#dates，与java.util.Calendar对象对应</span><br><span class="line">#numbers 格式化数字对象的工具方法</span><br><span class="line">#strings 与java.lang.String对应的工具方法：contains、startsWith、prepending/appending等等</span><br><span class="line">#objects 用于对象的工具方法</span><br><span class="line">#bools 用于布尔运算的工具方法</span><br><span class="line">#arrays 用于数组的工具方法</span><br><span class="line">#lists 用于列表的工具方法</span><br><span class="line">#sets 用于set的工具方法</span><br><span class="line">#maps 用于map的工具方法</span><br><span class="line">#aggregates 用于创建数组或集合的聚合的工具方法</span><br><span class="line">#messages 用于在变量表达式内部获取外化消息的工具方法，与#&#123;…&#125;语法获取的方式相同</span><br><span class="line">#ids 用于处理可能重复出现（例如，作为遍历的结果）的id属性的工具方法</span><br></pre></td></tr></table></figure><h2 id="获取环境变量和application-properties中的值">获取环境变量和application.properties中的值</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- @environment可以获取环境变量中的属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;@environment.getProperty(&#x27;image.path&#x27;) + item.path&#125;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;90px&quot;</span> <span class="attr">style</span>=<span class="string">&quot;cursor: pointer&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用springsecurity权限标签的方法">使用springsecurity权限标签的方法</h2><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--如果项目中使用到了springsecurity， 则要加入下面的依赖来使用权限标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>开启命名空间支持</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span> <span class="attr">xmlns:sec</span>=<span class="string">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity4&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">使用方式与jsp标签类似：</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/auth/systemLogger/edit.do&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success btn-xs no-hover&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.create&#125;&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;LOGGER_ADD&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger btn-xs&quot;</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;common.delete&#125;&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;LOGGER_DELETE&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="调用spring管理的bean的方法，以及获取HttpSession对象和HttpServletRequest对象">调用spring管理的bean的方法，以及获取HttpSession对象和HttpServletRequest对象</h2><p>语法：${@beanName.methodName(param,…)}<br>说明：beanName就是注册时的名称<br>示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#httpSession就是javax.servlet.http.HttpSession对象，可以简写为session</span><br><span class="line">#httpServletRequest就是javax.servlet.http.HttpServletRequest对象，可以简写为request</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;@commonService.clearSessionMessage(#httpServletRequest)&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="调用类的静态方法">调用类的静态方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:with</span>=<span class="string">&quot;authoritysString=$&#123;T(com.example.function.auth.util.AuthUtil).getAuthoritysHtmlString(dataObj.authorities)&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="参考资料">参考资料</h2><ul class="lvl-0"><li class="lvl-2"><p><a href="https://www.cnblogs.com/itdragon/archive/2018/04/13/8724291.html">https://www.cnblogs.com/itdragon/archive/2018/04/13/8724291.html</a></p></li><li class="lvl-2"><p><a href="https://blog.csdn.net/abap_brave/article/details/53009149">https://blog.csdn.net/abap_brave/article/details/53009149</a></p></li><li class="lvl-2"><p><a href="https://blog.csdn.net/u014748504/article/details/108691712">https://blog.csdn.net/u014748504/article/details/108691712</a></p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;p&gt;看完本文你将掌握如下知识点：&lt;/p&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;Spring Boot(2.4.4)中使用&lt;a href=&quot;https://www.thymeleaf.org&quot;&gt;thymeleaf(3.0.12)&lt;/a&gt;的常用语法&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="springboot2" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot2/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.hanqunfeng.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Maven仓库及镜像配置</title>
    <link href="https://blog.hanqunfeng.com/2021/12/02/maven-setting/"/>
    <id>https://blog.hanqunfeng.com/2021/12/02/maven-setting/</id>
    <published>2021-12-02T10:30:05.000Z</published>
    <updated>2021-12-28T03:01:46.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">maven仓库和镜像的配置及其关联方式</li></ul><span id="more"></span><h2 id="依赖查找顺序-按优先级排序，由高到低">依赖查找顺序(按优先级排序，由高到低)</h2><ul class="lvl-0"><li class="lvl-2"><p>本地仓库，setting.xml中<code>settings.localRepository</code>的配置地址</p></li><li class="lvl-2"><p>settings.xml中profile.repositories配置的仓库，<code>settings.profiles.profile.repositories.repository</code>，注意要激活对应的profile</p></li><li class="lvl-2"><p>pom.xml中profile.repositories配置的仓库，<code>project.profiles.profile.repositories.repository</code>,注意要在settings.xml中激活对应的profile</p></li><li class="lvl-2"><p>pom.xml中repositories配置的仓库，<code>project.repositories.repository</code></p></li><li class="lvl-2"><p>maven默认的中央仓库:<a href="https://repo.maven.apache.org/maven2">https://repo.maven.apache.org/maven2</a></p></li></ul><h3 id="说明，仓库的查找顺序实际上就是最终的pom-xml中仓库的声明顺序，所以可以通过如下命令导出最终的pom信息进行查看">说明，仓库的查找顺序实际上就是最终的pom.xml中仓库的声明顺序，所以可以通过如下命令导出最终的pom信息进行查看</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn help:effective-pom -Doutput=EffectivePom.xml</span><br></pre></td></tr></table></figure><h2 id="仓库配置–repository">仓库配置–repository</h2><ul class="lvl-0"><li class="lvl-2"><p>可以将仓库信息配置在<code>settings.xml</code>或<code>pom.xml</code>中，如下可以配置多个，按顺序依次查找，注意这里的id必须唯一，<code>repository</code>和<code>pluginRepository</code>的id可以相同:</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus.my.local:8080/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus.my.local:8080/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="镜像代理–mirror">镜像代理–mirror</h2><h3 id="说明">说明</h3><ul class="lvl-0"><li class="lvl-2"><p>由于网络等原因导致我们不能很顺利的从仓库下载到对应的依赖，此时我们可以为仓库配置镜像代理，加快下载速度，国内一般会使用阿里云作为镜像代理</p></li><li class="lvl-2"><p>mirror镜像可以配置多个，每个mirrorOf里可以配置如下内容：</p></li></ul><ol><li class="lvl-3"><p><code>*</code> : 匹配所有仓库，一般我们搭建了自己的私服时推荐这样设置</p></li><li class="lvl-3"><p><code>repo1Id</code>  : 匹配仓库id为repo1Id的仓库</p></li><li class="lvl-3"><p><code>repo1Id,repo2Id</code>  : 匹配仓库id为repo1Id和repo2Id的仓库</p></li><li class="lvl-3"><p><code>*,!repo1Id</code>  : 匹配所有仓库，但不包含repo1Id</p></li><li class="lvl-3"><p><code>external:*</code> : 匹配所有不在本机上的远程仓库，也就是说，如果仓库的url里配置的是<code>localhost</code>或者<code>file://</code>则不进行代理</p></li></ol><h3 id="镜像代理需要配置在setting-xml中">镜像代理需要配置在setting.xml中</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun-mirror<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun-mirror<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mirrorOf 里配置要代理的仓库id，这样当请求该仓库时就会走这个镜像代理 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- maven默认配置的仓库id就是central，此时就是使用阿里云作为默认仓库的代理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://maven.aliyun.com/repository/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-mirror<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>nexus-mirror<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mirrorOf 里配置要代理的仓库id，这样当请求该仓库时就会走这个镜像代理 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此时就是使用nexus私服代理所有仓库 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus.my.local:8080/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="maven3-8-1以后的配置中会禁止http协议的仓库地址，该如何处理？">maven3.8.1以后的配置中会禁止http协议的仓库地址，该如何处理？</h3><ul class="lvl-0"><li class="lvl-2"><p>我们可以看到setting.xml中的镜像配置里默认增加了如下配置，其会禁止所有http协议的仓库被请求，目的是推荐使用https协议</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>maven-default-http-blocker<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>external:http:*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Pseudo repository to mirror external repositories initially using HTTP.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://0.0.0.0/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">blocked</span>&gt;</span>true<span class="tag">&lt;/<span class="name">blocked</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时执行mvn时会报告如下错误：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">maven-default-http-blocker (http://0.0.0.0/): Blocked mirror for repositories</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>但是很多公司的私服都没有配置证书，我们可以修改其配置如下，即可解决</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;mirrorOf&gt;external:*&lt;/mirrorOf&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>external:http:*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://nexus.my.local:8081/repository/maven-public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">blocked</span>&gt;</span>false<span class="tag">&lt;/<span class="name">blocked</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;maven仓库和镜像的配置及其关联方式&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="maven" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/maven/"/>
    
    
    <category term="maven" scheme="https://blog.hanqunfeng.com/tags/maven/"/>
    
    <category term="mvn" scheme="https://blog.hanqunfeng.com/tags/mvn/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="https://blog.hanqunfeng.com/2021/10/29/git-command/"/>
    <id>https://blog.hanqunfeng.com/2021/10/29/git-command/</id>
    <published>2021-10-29T13:30:05.000Z</published>
    <updated>2022-01-20T09:25:24.911Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">一起来了解一些git常用命令吧</li><li class="lvl-2">推荐一个学习git命令的网站：<a href="https://learngitbranching.js.org/?locale=zh_CN">https://learngitbranching.js.org/?locale=zh_CN</a><br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/git.png" alt=""></li></ul><span id="more"></span><h2 id="基本概念">基本概念</h2><h3 id="Git的5种工作区域">Git的5种工作区域</h3><ul class="lvl-0"><li class="lvl-2"><p>工作目录：用于新增、修改、删除文件，实际我们用于编写代码的目录</p></li><li class="lvl-2"><p>暂存区：执行<code>add</code>命令可以将工作目录对应的文件提交到暂存区，只有加入到暂存区的文件才会参与版本控制，其实际为一堆索引文件，保存在<code>.git/objects</code>目录下，记录每个文件的快照（hash）</p></li><li class="lvl-2"><p>本地版本库：执行<code>commit</code>命令可以将暂存区的文件提交到本地版本库，每一次提交都会记录版本日志，其实际保存位置也是<code>.git/objects</code>目录下的快照文件，每一次<code>commit</code>如果文件发生变化都会生成新的快照，<code>.git/refs/heads/</code>下记录每个分支的最新一次commit的版本号</p></li><li class="lvl-2"><p>远程跟踪区：<code>.git/refs/remotes/origin/</code>下记录每个分支的最新一次更新后的远程版本号，执行<code>fetch\pull\push</code>时都会更新为最新的远程版本号。如果只执行<code>fetch</code>仅仅会更新远程跟踪区，并不会更新本地目录，执行<code>pull</code>命令会同时更新远程跟踪区和本地目录</p></li><li class="lvl-2"><p>远程版本库：例如github</p></li></ul><h3 id="文件的状态">文件的状态</h3><ul class="lvl-0"><li class="lvl-2"><p>Untracked:未跟踪的文件，尚未加入过暂存区的文件</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) <span class="built_in">touch</span> a.txt</span><br><span class="line">➜  git:(release) ✗ git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支与上游分支 <span class="string">&#x27;origin/release&#x27;</span> 一致。</span><br><span class="line"></span><br><span class="line">未跟踪的文件:</span><br><span class="line">  （使用 <span class="string">&quot;git add &lt;文件&gt;...&quot;</span> 以包含要提交的内容）</span><br><span class="line">a.txt</span><br><span class="line"></span><br><span class="line">提交为空，但是存在尚未跟踪的文件（使用 <span class="string">&quot;git add&quot;</span> 建立跟踪）</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>要提交的变更[新增]，加入暂存区</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) ✗ git add .</span><br><span class="line">➜  git:(release) ✗ git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支与上游分支 <span class="string">&#x27;origin/release&#x27;</span> 一致。</span><br><span class="line"></span><br><span class="line">要提交的变更：</span><br><span class="line">  （使用 <span class="string">&quot;git restore --staged &lt;文件&gt;...&quot;</span> 以取消暂存）</span><br><span class="line">新文件：   a.txt</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>已提交版本库待发布到远端，将暂存区的文件加入本地版本库</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) ✗ git commit -m <span class="string">&#x27;add a.txt&#x27;</span></span><br><span class="line">[release 9292bb2] add a.txt</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 a.txt</span><br><span class="line">➜  git:(release) git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支领先 <span class="string">&#x27;origin/release&#x27;</span> 共 1 个提交。</span><br><span class="line">  （使用 <span class="string">&quot;git push&quot;</span> 来发布您的本地提交）</span><br><span class="line"></span><br><span class="line">无文件要提交，干净的工作区</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>尚未暂存以备提交的变更，加入过暂存区的文件发生修改</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) <span class="built_in">echo</span> <span class="string">&quot;hello&quot;</span> &gt;&gt; a.txt</span><br><span class="line">➜  git:(release) ✗ git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支领先 <span class="string">&#x27;origin/release&#x27;</span> 共 1 个提交。</span><br><span class="line">  （使用 <span class="string">&quot;git push&quot;</span> 来发布您的本地提交）</span><br><span class="line"></span><br><span class="line">尚未暂存以备提交的变更：</span><br><span class="line">  （使用 <span class="string">&quot;git add &lt;文件&gt;...&quot;</span> 更新要提交的内容）</span><br><span class="line">  （使用 <span class="string">&quot;git restore &lt;文件&gt;...&quot;</span> 丢弃工作区的改动）</span><br><span class="line">修改：     a.txt</span><br><span class="line"></span><br><span class="line">修改尚未加入提交（使用 <span class="string">&quot;git add&quot;</span> 和/或 <span class="string">&quot;git commit -a&quot;</span>）</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>要提交的变更[修改]，加入过暂存区的文件重新加入暂存区</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(release) ✗ git add .</span><br><span class="line">➜  git:(release) ✗ git status</span><br><span class="line">位于分支 release</span><br><span class="line">您的分支领先 <span class="string">&#x27;origin/release&#x27;</span> 共 1 个提交。</span><br><span class="line">  （使用 <span class="string">&quot;git push&quot;</span> 来发布您的本地提交）</span><br><span class="line"></span><br><span class="line">要提交的变更：</span><br><span class="line">  （使用 <span class="string">&quot;git restore --staged &lt;文件&gt;...&quot;</span> 以取消暂存）</span><br><span class="line">修改：     a.txt</span><br></pre></td></tr></table></figure><h3 id="切换分支时值得注意的地方">切换分支时值得注意的地方</h3><ul class="lvl-0"><li class="lvl-2"><p>只要文件没有被commit，无论是新增还是修改，切换分支时，文件的状态都会被带到切换后的分支</p></li><li class="lvl-2"><p>所以切换分支前，一定要执行commit</p></li></ul><h3 id="HEAD指针和分支指针">HEAD指针和分支指针</h3><ul class="lvl-0"><li class="lvl-2"><p>我们在查看git的log时会看到类似于<code>* 6d93a15 (HEAD -&gt; master) message</code>这样的信息，6d93a15就是commit时的版本号，master是分支名称，HEAD就是<code>HEAD指针</code>，实际上这里的master也是一个指针，他就是<code>分支指针</code></p></li><li class="lvl-2"><p><code>分支指针</code>永远指向当前分支最新的一次提交版本，分支指针对应版本号保存在<code>.git/refs/heads/</code>目录下对应的分支文件中</p></li><li class="lvl-2"><p><code>HEAD指针</code>表示我们当前的工作目录是基于哪个版本checkout出来的，通常情况下<code>HEAD指针</code>指向<code>分支指针</code>，但当我们通过命令<code>git checkout &lt;commit号&gt;</code>切换到某个版本时，<code>HEAD指针</code>就不再指向<code>分支指针</code>，这个情况有个名字叫作<code>detached HEAD(头分离)</code>，<code>HEAD指针</code>对应的版本号保存在<code>.git/HEAD</code>文件中，这也是为什么我们每次进入项目，git都知道我们当前所在分支或版本号是什么。</p></li><li class="lvl-2"><p>参考资料：<a href="https://www.zsythink.net/archives/3412/">https://www.zsythink.net/archives/3412/</a></p></li></ul><h2 id="问题与方法">问题与方法</h2><h3 id="1-别人在远程仓库中创建了新的branch，我本地执行git-branch-a却看不到，如何才能看到并checkout呢？">1.别人在远程仓库中创建了新的branch，我本地执行<code>git branch -a</code>却看不到，如何才能看到并checkout呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先要获取远端全部信息</span></span><br><span class="line">git fetch origin</span><br><span class="line"><span class="comment"># git fetch 远程名称，通过git remote查看，一般就是origin。</span></span><br><span class="line">git fetch <span class="comment"># 也可以不加远程名称</span></span><br><span class="line"><span class="comment"># 该命令无论在哪个分支上执行，都会更新本地所有的远程分支</span></span><br><span class="line"><span class="comment"># git fetch 完成了仅有的但是很重要的两步:</span></span><br><span class="line"><span class="comment"># 1.从远程仓库下载本地仓库中缺失的提交记录</span></span><br><span class="line"><span class="comment"># 2.更新远程分支指针(如 o/master)</span></span><br><span class="line"><span class="comment"># git fetch 实际上将本地仓库中的远程分支更新成了远程仓库相应分支最新的状态。</span></span><br><span class="line"><span class="comment"># git fetch 并不会改变你本地仓库的状态。它不会更新你的 本地 分支，也不会修改你磁盘上的文件。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.再查看分支信息</span></span><br><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.checkout到本地并切换到新创建的分支</span></span><br><span class="line">git checkout -b release（本地分支名） origin/release（远程分支名）</span><br><span class="line">控制台输出：</span><br><span class="line">分支 <span class="string">&#x27;release&#x27;</span> 设置为跟踪来自 <span class="string">&#x27;origin&#x27;</span> 的远程分支 <span class="string">&#x27;release&#x27;</span>。</span><br><span class="line">切换到一个新分支 <span class="string">&#x27;release&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看当前分支跟踪的远程分支</span></span><br><span class="line">git rev-parse --abbrev-ref --symbolic-full-name @&#123;u&#125;  <span class="comment"># @&#123;u&#125; 是 @&#123;upstream&#125; 的简写</span></span><br><span class="line">控制台输出：</span><br><span class="line">origin/release</span><br></pre></td></tr></table></figure><h3 id="2-如何查看本地分支与远程分支的区别？">2.如何查看本地分支与远程分支的区别？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先要获取远端全部信息</span></span><br><span class="line">git fetch origin</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git fetch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.切换到待比较的本地分支，如master</span></span><br><span class="line">git checkout master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.比较当前分支与origin/master之间的不同，--stat只显示哪些文件有不同，如果要查看每个文件不同的详细信息就去掉--stat</span></span><br><span class="line">git diff origin/master --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.比较任意两个分支的不同，--stat只显示哪些文件有不同，如果要查看每个文件不同的详细信息就去掉--stat</span></span><br><span class="line">git diff origin/master..master --<span class="built_in">stat</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-如何查看本地两个分支之间的区别？">3.如何查看本地两个分支之间的区别？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.比较任意两个分支的区别</span></span><br><span class="line">git diff master..dev --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.比较当前分支与master分支的区别</span></span><br><span class="line">git diff master --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h3 id="4-如何查看本地的发生了哪些更改？">4.如何查看本地的发生了哪些更改？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前工作目录的索引和上次提交索引之间的差异，只有已经被commit过的文件才会被比较，如果是新增的文件则看不到</span></span><br><span class="line">git diff --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过`git status`命令查看本地都有哪些变化，包含新增未加入暂存区的，新增已加入暂存区的，已提交过但有改动的，等等</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看下次执行`git commit`时会被提交的文件</span></span><br><span class="line">git diff --cached --<span class="built_in">stat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看下次执行`git commit -a` 时会被提交的文件，-a表示先add再commit</span></span><br><span class="line">git diff HEAD --<span class="built_in">stat</span></span><br></pre></td></tr></table></figure><h3 id="5-如何提交本地仓库？">5.如何提交本地仓库？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地无论是新增文件或修改文件，都要add后才能commit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.先add再commit</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;message&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.add同时commit，注意，如果存在尚未跟踪的文件，需要使用 &quot;git add&quot; 建立跟踪</span></span><br><span class="line"> git commit -a -m <span class="string">&#x27;message&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="6-git-reset–如何回滚到指定版本或分支">6.<code>git reset</code>–如何回滚到指定版本或分支?</h3><ul class="lvl-0"><li class="lvl-2"><p>git reset的作用是修改HEAD的位置，即将HEAD指向的位置改变为之前存在的某个版本，如果想恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了，就可以用这种方法。</p></li><li class="lvl-2"><p>注意，如果reset包含了已经发布（<code>git push</code>）的的版本，此时如果用<code>git push</code>会报错，因为我们本地库HEAD指向的版本比远程库的要旧，需要执行命令<code>git push -f</code>强制更新远程</p></li><li class="lvl-2"><p>注意参数<code>--hard</code>有和没有的区别，有–hard，则完全回退到上一版本，丢弃所有其它修改，清空暂存区，同步工作目录到指定版本。没有–hard，则该版本之后的变化会变为Modified状态保留在工作目录，只清空暂存区。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.回滚到上一个版本</span></span><br><span class="line">git reset --hard HEAD^ <span class="comment"># 完全回退到上一个版本，丢弃所有其它修改，清空暂存区，同步工作目录到指定版本，也就是说，上一次提交之后新增或修改的文件内容都没有了</span></span><br><span class="line">git reset HEAD~1 <span class="comment"># 则该版本之后的变化会变为Modified状态保留在工作目录，只清空暂存区，也就是说，上一次提交之后新增或修改的文件内容得以保留</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.回滚到上上个版本</span></span><br><span class="line">git reset --hard HEAD^^</span><br><span class="line">git reset HEAD~2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.回滚到指定版本的分支</span></span><br><span class="line">git reset --hard 版本号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.1 查看版本号</span></span><br><span class="line">git <span class="built_in">log</span> --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.回滚到指定分支</span></span><br><span class="line">git reset --hard 分支名称</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.1 回滚到与本地远程分支一样的状态，一般本地仓库搞坏了会这么做</span></span><br><span class="line">git reset --hard origin/master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. `git log`看不到reset的历史，可以通过如下命令查看</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h3 id="7-gitignore–在git中如果想忽略掉某个文件，不让这个文件提交到版本库中，要怎么做呢？">7.<code>.gitignore</code>–在git中如果想忽略掉某个文件，不让这个文件提交到版本库中，要怎么做呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在工作目录下创建 .gitignore 文件</span></span><br><span class="line"><span class="comment"># 其格式为：</span></span><br><span class="line"><span class="comment"># 此为注释 – 将被 Git 忽略</span></span><br><span class="line">*.a       <span class="comment"># 忽略所有 .a 结尾的文件</span></span><br><span class="line">!lib.a    <span class="comment"># 但 lib.a 除外</span></span><br><span class="line">/TODO     <span class="comment"># 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span></span><br><span class="line">build/    <span class="comment"># 忽略 build/ 目录下的所有文件</span></span><br><span class="line">doc/*.txt <span class="comment"># 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略文件默认为当前项目目录下的.gitignore文件，也可以通过如下命令指定文件路径和名称</span></span><br><span class="line">git config core.excludesfile .gitignore_dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可配置为全局文件，这样就不需要为每个项目都创建.gitignore 文件</span></span><br><span class="line">git config --global core.excludesfile ~/.gitignore_global</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># .gitignore 文件 只对git add起作用，如果有文件在被加入到.gitignore 文件前就已经被commit了可以使用如下方法</span></span><br><span class="line"><span class="comment"># 1.删除暂存区、分支上内容，本地保留。解除该文件的追踪关系，脱离版本控制。</span></span><br><span class="line">git <span class="built_in">rm</span> --cached 文件名   <span class="comment"># 删除文件</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached 文件夹   <span class="comment"># 删除文件夹  -r 表示允许递归删除</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached .  <span class="comment"># 删除当前目录下全部文件的暂存区</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">rm</span> -r 文件夹/文件名  <span class="comment">#删除本地、暂存区、分支上内容，如果该文件不需要在本地保留，就可以测底删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.重新加入暂存区</span></span><br><span class="line">git add . <span class="comment"># 将当前目录下所有文件加入暂存区</span></span><br><span class="line">git add file/dir <span class="comment">#将指定文件或目录加入暂存区，支持通配符</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.查看暂存区内容</span></span><br><span class="line">git diff --cached</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.提交</span></span><br><span class="line">git commit -m <span class="string">&quot;message&quot;</span> <span class="comment"># 将暂存区内容提交到本地版本库</span></span><br><span class="line">git commit -am <span class="string">&quot;message&quot;</span> <span class="comment"># 先提交暂存区再提交到本地版本库</span></span><br></pre></td></tr></table></figure><h3 id="8-git-commit-amend–commit后发现有内容要修改或者注释写错了，但是不想创建新的一次commit，要怎么办呢？">8.<code>git commit --amend</code>–commit后发现有内容要修改或者注释写错了，但是不想创建新的一次commit，要怎么办呢？</h3><ul class="lvl-0"><li class="lvl-2"><p>以下命令如果直接合并到已经push过的版本，再次git push时会提示&quot;更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支&quot;，此时可以执行<code>git push -f</code>强行发布即可。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 覆盖上一次提交，这样不会产生新的提交</span></span><br><span class="line">git commit --amend  -am <span class="string">&quot;注释&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在上次提交中附加一些内容，保持提交日志不变</span></span><br><span class="line">git commit -a --amend --no-edit</span><br></pre></td></tr></table></figure><h3 id="9-git-log–如何查看提交日志">9.<code>git log</code>–如何查看提交日志?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示版本历史，如果有用git reset --hard xxxxx回退操作，则只会显示到xxx之前的历史</span></span><br><span class="line">git <span class="built_in">log</span>  <span class="comment"># 显示当前分支之前的全部日志</span></span><br><span class="line">git <span class="built_in">log</span>  --all <span class="comment">#  --all 显示全部分支</span></span><br><span class="line">git <span class="built_in">log</span> --oneline <span class="comment"># 单行显示</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span> --oneline --all --graph <span class="comment"># 图形化显示全部分支log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在所有提交日志中搜索包含「homepage」的提交</span></span><br><span class="line">git <span class="built_in">log</span> --all --grep=<span class="string">&#x27;homepage&#x27;</span> <span class="comment">#模糊匹配</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取某人的提交日志</span></span><br><span class="line">git <span class="built_in">log</span> --author=<span class="string">&quot;hanqf&quot;</span>  <span class="comment">#模糊匹配</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看完整版本历史，也就是说即便有git reset也会显示</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure><h3 id="10-如何创建本地仓库并绑定到远程仓库">10.如何创建本地仓库并绑定到远程仓库?</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.首先要在对应的git服务器创建一个新的仓库，一般的git服务器创建新仓库后都会提示你如何绑定该仓库的</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 创建本地仓库</span></span><br><span class="line">git init <span class="comment">#将当前目录加入版本控制</span></span><br><span class="line">git init <span class="built_in">dir</span> <span class="comment">#将dir加入版本控制</span></span><br><span class="line"><span class="comment"># 默认使用 &#x27;master&#x27; 作为初始分支的名称，如果要修改分支名称，可以执行如下命令：</span></span><br><span class="line">git branch -m &lt;name&gt;</span><br><span class="line"><span class="comment"># 也可以通过设置git config来配置默认的名称，除了 &#x27;master&#x27; 之外，通常选定的名字有 &#x27;main&#x27;、&#x27;trunk&#x27; 和 &#x27;development&#x27;。</span></span><br><span class="line">git config --global init.defaultBranch &lt;名称&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 创建新的文件后提交到本地仓库</span></span><br><span class="line">git add . &amp;&amp; git commit -m <span class="string">&#x27;message&#x27;</span></span><br><span class="line">git commit -am <span class="string">&quot;备注&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.绑定远程仓库</span></span><br><span class="line">git remote add origin https://xxxxx (远程仓库地址)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.提交本地仓库的变更到远程仓库，这里要注意github的主分支名称已经变更为main，所以提交github时要将master替换为main</span></span><br><span class="line">git pull --rebase origin master <span class="comment">#获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</span></span><br><span class="line">git push -u origin master <span class="comment">#提交master到其远程仓库，第一次提交加上-u，以后就不用了</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git push <span class="comment"># 将当前分支提交到其对应的远程仓库</span></span><br></pre></td></tr></table></figure><h3 id="11-远程仓库地址变更后如何更新？">11.远程仓库地址变更后如何更新？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.命令行修改</span></span><br><span class="line">git remote set-url origin [NEW_URL]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.手工编辑.git目录下的config文件</span></span><br><span class="line">[remote <span class="string">&quot;origin&quot;</span>]</span><br><span class="line">    url = https://xxxxxx (修改为新的地址)</span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.查看修改后的地址</span></span><br><span class="line">git remote get-url origin   <span class="comment">#只会显示可以fetch的地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看远程仓库地址</span></span><br><span class="line">git remote -v  <span class="comment"># 会显示push和fetch的地址</span></span><br></pre></td></tr></table></figure><h3 id="12-如何将本地仓库同时绑定到多个远程仓库？">12.如何将本地仓库同时绑定到多个远程仓库？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.按照`10.如何创建本地仓库并绑定到远程仓库?`中的步骤完成第一个仓库的绑定</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.手工编辑.git目录下的config文件</span></span><br><span class="line">[remote <span class="string">&quot;origin&quot;</span>]</span><br><span class="line">    url = https://xxxxxxxx1  <span class="comment"># 此处为第一个远程仓库的地址，即可以push又可以fetch</span></span><br><span class="line">    url = https://xxxxxxxx2  <span class="comment"># 在此添加第二个仓库的地址，以此类推，可以添加多个，只可以push，只能备份使用</span></span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.保存后再次执行，这里要注意github的主分支名称已经变更为main，所以提交github时要将master替换为main</span></span><br><span class="line">git push -u origin master  <span class="comment"># 提交master到其远程仓库，只有第一次执行时需要加上 -u ，以后只需要：git push  origin master</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">git push <span class="comment"># 将当前分支提交到其对应的远程仓库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看远程仓库地址</span></span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure><h3 id="13-如何在git-pull时不用每次都输入密码？">13.如何在<code>git pull</code>时不用每次都输入密码？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入项目目录</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行 git pull 并输入密码，此时当前项目就会记住密码了，下次再执行时就不用密码了</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h3 id="14-如果文件已经git-add到暂存区，但是尚未commit，此时如何将文件从暂存区中移除？">14.如果文件已经<code>git add</code>到暂存区，但是尚未commit，此时如何将文件从暂存区中移除？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 如果文件还没有放入暂存区</span></span><br><span class="line">git checkout -- &lt;文件名&gt; <span class="comment">#放弃对某一个文件已经做出的修改，回到head版本的该文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果文件已经`git add`到暂存区，但是尚未commit</span></span><br><span class="line"><span class="comment"># 移出单个文件</span></span><br><span class="line">git restore --staged &lt;文件路径&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移出本次全都add到暂存区的文件</span></span><br><span class="line">git reset .  <span class="comment"># 重置本次全部索引，.代表当前目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过git status查看文件路径</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果已经commit，可以通过如下方式移除</span></span><br><span class="line"><span class="comment"># 删除暂存区、分支上内容，本地保留。解除该文件的追踪关系，脱离版本控制。</span></span><br><span class="line">git <span class="built_in">rm</span> --cached &lt;文件名&gt;   <span class="comment"># 删除文件</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached &lt;文件夹&gt;   <span class="comment"># 删除文件夹  -r 表示允许递归删除</span></span><br><span class="line">git <span class="built_in">rm</span> -r --cached .  <span class="comment"># 删除当前目录下全部文件的暂存区，.代表当前目录</span></span><br></pre></td></tr></table></figure><h3 id="15-git-config–如何设置和查看git配置信息？">15.<code>git config</code>–如何设置和查看git配置信息？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用git config命令进行设置和查看</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局设置用户名和邮箱，全局配置是保存在 ~/.gitconfig中的</span></span><br><span class="line">git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只对当前项目有效，项目根目录下执行，去掉--global，项目配置优先级更高，项目配置保存在.git/config中，可以直接修改</span></span><br><span class="line">git config user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改你的用户名和邮箱</span></span><br><span class="line">git config --global --replace-all user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global --replace-all user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看配置</span></span><br><span class="line">git config --list  <span class="comment"># 此时项目配置和全局配置都会显示</span></span><br><span class="line"></span><br><span class="line">git config --global --list <span class="comment"># 只显示全局配置，全局配置是保存在 ~/.gitconfig中的</span></span><br><span class="line"></span><br><span class="line">git config user.name <span class="comment"># 查看某个配置的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改全局配置的值，--replace-all会匹配所有行，也可以直接在~/.gitconfig中修改</span></span><br><span class="line">git config --global --replace-all user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --global --replace-all user.email <span class="string">&quot;你的邮箱&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改项目配置的值，--replace-all会匹配所有行，也可以直接在.git/config中修改</span></span><br><span class="line">git config --replace-all user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config --replace-all user.email <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><h3 id="16-提交的文件太大-默认是1M-，导致push失败怎么办？">16.提交的文件太大(默认是1M)，导致push失败怎么办？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加大缓冲区大小（http.postBuffer的参数）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 524288000 的单位代表 B，524288000B 也就是 500MB。</span></span><br><span class="line">git config http.postBuffer 524288000</span><br><span class="line"><span class="comment"># 或全局设置</span></span><br><span class="line">git config --global http.postBuffer 524288000</span><br></pre></td></tr></table></figure><h3 id="17-clone代码最简单的方式是通过https的形式，不过一般这样做需要输入用户名和密码，如果不想输入用户名和密码可以使用git-xxxx的形式，如何实现呢？">17.clone代码最简单的方式是通过https的形式，不过一般这样做需要输入用户名和密码，如果不想输入用户名和密码可以使用<code>git@xxxx</code>的形式，如何实现呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这种方式就是基于ssh的密钥证书来实现</span></span><br><span class="line"><span class="comment"># 生成本地ssh密钥对，按照提示完成三次回车，即可生成 ssh key。此时会在~/.ssh/下创建id_rsa.pub(公钥)和id_rsa(私钥)</span></span><br><span class="line">ssh-keygen -b 4096 -t rsa <span class="comment"># -t 指定生成密钥的算法类型，生成的文件名称就是以其开头的，如这里就是id_rsa</span></span><br><span class="line"><span class="comment"># 支持的密钥算法类型包含：rsa,ed25519,等等，具体参见各个git服务器的配置说明</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此时cat id_rsa.pub 可以看到公钥的内容</span></span><br><span class="line"><span class="comment"># 形式为:sshkey的算法+密文+sshkey的标签，此时sshkey算法为ssh-rsa，sshkey标签为机器名称，若要指定sshkey标签可以通过-C指定</span></span><br><span class="line">ssh-keygen -b 4096 -t rsa -C <span class="string">&quot;xxxxxxx&quot;</span></span><br><span class="line"><span class="comment"># 注意这里-C可以指定任意值，网上说必须指定邮箱其初衷仅仅是为了便于辨识</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将公钥文件内容复制到对应的git服务器配置ssh-key的地方，具体使用方式可以参见各个git服务器的说明。</span></span><br><span class="line"><span class="comment"># Github: settings--SSH and GPG keys--SSH keys--New SSH key</span></span><br><span class="line"><span class="comment"># 测试连接是否正常</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># Coding: 个人帐号设置--个人设置--SSH 公钥--新增公钥</span></span><br><span class="line"><span class="comment"># 测试连接是否正常</span></span><br><span class="line">ssh -T git@e.coding.net</span><br><span class="line"></span><br><span class="line"><span class="comment"># Gitee: 设置--安全设置--SSH公钥</span></span><br><span class="line"><span class="comment"># 测试连接是否正常</span></span><br><span class="line">ssh -T git@gitee.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># clone代码示例</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:hanqunfeng/reactive-redis-cache-annotation-spring-boot-starter.git</span><br></pre></td></tr></table></figure><h3 id="18-git-branch–如何创建分支-切换分支-查看分支-删除分支-发布分支？">18.<code>git branch</code>–如何创建分支\切换分支\查看分支\删除分支\发布分支？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从当前分支创建release分支，但是不切换</span></span><br><span class="line">git branch release</span><br><span class="line"></span><br><span class="line">git checkout release <span class="comment"># 从当前分支切换到release分支</span></span><br><span class="line">git checkout &lt;commit号&gt; <span class="comment"># 从当前分支切换到commit号对应的版本</span></span><br><span class="line"><span class="comment"># 注意，当切换到某个版本号对应的版本时就会发生“头分离”，即HEAD指针不会再指向分支指针，而是指向了那个版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从当前分支创建并切换到release分支，相当于执行git branch release &amp;&amp; git checkout release两个命令</span></span><br><span class="line">git checkout -b release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从dev分支创建release分支，但是不切换</span></span><br><span class="line">git branch release dev</span><br><span class="line"><span class="comment"># 从dev分支创建release分支,并切换</span></span><br><span class="line">git checkout -b release dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从指定版本创建release分支，版本号通过git log --oneline查看</span></span><br><span class="line">git branch release 799fb04</span><br><span class="line">git checkout -b release 799fb04</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从远程分支origin/release创建release分支，并切换</span></span><br><span class="line">git checkout -b release origin/release</span><br><span class="line"></span><br><span class="line"><span class="comment">#跳到上一个分支，比如当前是master分支，是从dev分支通过git checkout master命令切换过来的，那么该命令会重新回到dev分支</span></span><br><span class="line">git checkout -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line">git branch  <span class="comment">#列出所有本地分支，标*的就是当前所在的分支，.git/HEAD 文件中存放的就是当前分支信息</span></span><br><span class="line">git branch --remote   <span class="comment">#列出远程仓库中的所有分支</span></span><br><span class="line">git branch -a  <span class="comment">#同时显示本地和远程的所有分支</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> .git/HEAD  <span class="comment">#查看当前所在分支</span></span><br><span class="line">git symbolic-ref HEAD <span class="comment">#查看当前所在分支，本地分支</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line"><span class="comment"># 删除release分支，不能在release下删除自己</span></span><br><span class="line">git branch -d release</span><br><span class="line"></span><br><span class="line"><span class="comment"># 假设我们通过master创建了release分支，此时release分支发生了变更并执行了commit，但是并没有将更改merge回master，此时删除release分支需要执行如下命令</span></span><br><span class="line">git branch -D release  <span class="comment"># -D 强制删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发布分支</span></span><br><span class="line">git push --set-upstream origin &lt;new branch name&gt; <span class="comment">#推新分支到远程仓库并在本地分支和远程分支之间建立关联</span></span><br><span class="line"><span class="comment"># 也可以分两步完成，但推荐上面的方式</span></span><br><span class="line">git push origin &lt;new branch name&gt; <span class="comment">#推新分支到远程仓库</span></span><br><span class="line">git branch --set-upstream-to=origin/&lt;new branch name&gt; &lt;new branch name&gt; <span class="comment">#关联本地分支到远程分支，否则每一次pull或push的时候都需要明确指定本地和远端分支。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前分支跟踪的远程分支</span></span><br><span class="line">git rev-parse --abbrev-ref --symbolic-full-name @&#123;u&#125;  <span class="comment"># @&#123;u&#125; 是 @&#123;upstream&#125; 的简写</span></span><br></pre></td></tr></table></figure><h3 id="19-merge还是rebase-如何合并分支">19.merge还是rebase? 如何合并分支?</h3><p>一般开发流程：</p><ol><li class="lvl-3"><p>更新主分支 git pull</p></li><li class="lvl-3"><p>从主分支创建一个开发分支 git checkout -b dev，每个开发人员都会创建一个自己的开发分支</p></li><li class="lvl-3"><p>开发分支完成测试后合并回主分支，这里推荐使用git rebase，开发分支的log会被移动到主分支的顶端，这样主分支始终是一条线</p></li><li class="lvl-3"><p>这样主分支在保持干净的同时还保留了每一次commit的log，便于开发人员追溯历史</p></li><li class="lvl-3"><p>也可以使用<code>git merge --no-ff</code>，其也会保留每次的log到主分支上</p></li></ol><p>一般发布流程：</p><ol><li class="lvl-3"><p>将主分支测试完成后合并到发布分支，一般都是由一个专门的人员进行合并，此时推荐使用git merge，这样每次一发布的版本都会产生一个新的节点，而主分支上的多次commit的log不会被记录到发布分支上</p></li><li class="lvl-3"><p>这样发布分支看起来就是每一次大的发布才会合并一次并记录log，log中可以编辑本次发布的内容。</p></li></ol><h4 id="示例准备，初始化一个待合并的目录">示例准备，初始化一个待合并的目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">➜ <span class="built_in">mkdir</span> git_test</span><br><span class="line">➜ <span class="built_in">cd</span> git_test</span><br><span class="line">➜ <span class="built_in">touch</span> 1.txt</span><br><span class="line">➜ git init</span><br><span class="line">[master（根提交） 5b91fc1] init...</span><br><span class="line"> 1 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 1.txt</span><br><span class="line">➜ git:(master) git add . &amp;&amp; git commit -m <span class="string">&#x27;init...&#x27;</span></span><br><span class="line">➜ git:(master) git checkout -b dev</span><br><span class="line">➜ git:(dev) <span class="built_in">echo</span> <span class="string">&quot;dev1&quot;</span> &gt;&gt; a.txt</span><br><span class="line">➜ git:(dev) ✗ git add . &amp;&amp; git commit -m <span class="string">&#x27;dev1&#x27;</span></span><br><span class="line">[dev 8d57739] dev1</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 a.txt</span><br><span class="line">➜ git:(dev) ✗ git checkout master</span><br><span class="line">切换到分支 <span class="string">&#x27;master&#x27;</span></span><br><span class="line">➜ git:(master) ✗ <span class="built_in">echo</span> <span class="string">&quot;master1&quot;</span> &gt;&gt; a.txt</span><br><span class="line">➜ git:(master) ✗ git add . &amp;&amp; git commit -m <span class="string">&#x27;master1&#x27;</span></span><br><span class="line">[master fa2400a] master1</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 a.txt</span><br><span class="line">➜ git:(master) ✗ git checkout dev</span><br><span class="line">切换到分支 <span class="string">&#x27;dev&#x27;</span></span><br><span class="line">➜ git:(dev) ✗ <span class="built_in">echo</span> <span class="string">&quot;dev2&quot;</span> &gt;&gt; a.txt</span><br><span class="line">➜ git:(dev) ✗ git add . &amp;&amp; git commit -m <span class="string">&#x27;dev2&#x27;</span></span><br><span class="line">[dev 0006560] dev2</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">➜ git:(dev) ✗ git checkout master</span><br><span class="line">切换到分支 <span class="string">&#x27;master&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="merge">merge</h4><p>将dev分支merge到当前分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge dev</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>merge会将dev分支和当前分支合并后创建一个新的节点放到当前分支最顶端，所以解决完冲突，需要执行如下命令创建一个新的commit</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . &amp;&amp; git commit -m <span class="string">&#x27;merge dev&#x27;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>merge的log会按照时间顺序显示</p></li><li class="lvl-2"><p>merge后如果删除了dev分支，则在log中就看不到这个分支信息了，但是日志内容还在</p></li></ul><h5 id="merge示例">merge示例</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜ git:(master) ✗ git merge dev</span><br><span class="line">冲突（add/add）：合并冲突于 a.txt</span><br><span class="line">自动合并 a.txt</span><br><span class="line">自动合并失败，修正冲突然后提交修正的结果。</span><br><span class="line">➜ git:(master) ✗ vim a.txt</span><br><span class="line">➜ git:(master) ✗ git add . &amp;&amp; git commit -m <span class="string">&#x27;master merge release&#x27;</span></span><br><span class="line">➜ git:(master) git <span class="built_in">log</span> --oneline   <span class="comment"># 此时才能看到日志</span></span><br><span class="line">➜ git:(master) git branch -D dev</span><br><span class="line">已删除分支 dev（曾为 0006560）。</span><br></pre></td></tr></table></figure><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/merge1.png" alt=""><br>删除dev分支后<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/merge2.png" alt=""></p><h4 id="rebase">rebase</h4><p>将dev分支rebase到当前分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase dev</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>rebase会将dev分支的每一个节点转移到当前分支最顶端，而不会产生一个新的节点，这样rebase后的分支节点看起来就是一条线</p></li><li class="lvl-2"><p>解决完冲突，执行<code>git add .</code>和<code>git rebase --continue</code>，不会产生额外的commit</p></li><li class="lvl-2"><p>rebase后如果删除了dev分支，则在log中就看不到这个分支信息了，但是日志内容还在，这样看起来就是主分支自己的节点，没有产生过新的分支</p></li><li class="lvl-2"><p>如果要放弃本次合并，可以运行<code>git rebase --abort</code></p></li></ul><h5 id="rebase示例">rebase示例</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">➜  git:(master) git rebase dev</span><br><span class="line">冲突（add/add）：合并冲突于 a.txt</span><br><span class="line">自动合并 a.txt</span><br><span class="line">error: 不能应用 0657382... master1</span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">&quot;git add/rm &lt;conflicted_files&gt;&quot;</span>, <span class="keyword">then</span> run <span class="string">&quot;git rebase --continue&quot;</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">&quot;git rebase --skip&quot;</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">&quot;git rebase&quot;</span>, run <span class="string">&quot;git rebase --abort&quot;</span>.</span><br><span class="line">不能应用 0657382... master1</span><br><span class="line">➜  git:(e4410b4) ✗ vim a.txt</span><br><span class="line">➜  git:(e4410b4) ✗ git add .</span><br><span class="line">➜  git:(e4410b4) ✗ git rebase --<span class="built_in">continue</span></span><br><span class="line">[分离头指针 bd01ea0] master1</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">成功变基并更新 refs/heads/master。</span><br><span class="line">➜  git:(master) git <span class="built_in">log</span> --oneline</span><br><span class="line">➜  git:(master) git branch -D dev</span><br><span class="line">已删除分支 dev（曾为 e4410b4）。</span><br></pre></td></tr></table></figure><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase1.png" alt=""><br>删除dev分支后<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase2.png" alt=""></p><h3 id="20-git-rebase-i–我commit了很多次，发现都是干的一件事，此时如果直接rebase到主分支会有很多没必要的log，是否可以合并这些commit为一个呢？">20.<code>git rebase -i</code>–我commit了很多次，发现都是干的一件事，此时如果直接rebase到主分支会有很多没必要的log，是否可以合并这些commit为一个呢？</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git rebase -i 即可以合并多次提交，也可以合并分支，-i表示可以编辑提交过程，编辑过程中将后面的提交命令修改为s即可，保存后会提示你是否重新编辑log内容，按需编写即可。</span></span><br><span class="line">git rebase -i  commit号 <span class="comment">#将commit号到最新的提交合并为一个提交，需要在弹出的交互页面中编辑合并过程</span></span><br><span class="line">git rebase -i  start_commit号 end_commit号  <span class="comment">#合并指定commit号之间的的提交</span></span><br><span class="line">git rebase -i HEAD~3   <span class="comment">#合并最新的三次提交，编辑页面将后两次命令修改为s，wq后编辑新的commit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 该命令也可以合并分支</span></span><br><span class="line">git rebase -i  分支名称 <span class="comment">#将指定分支合并到当前分支，合并时将指定分支的多个提交合并为一次提交，需要在弹出的交互页面中编辑合并过程</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>如果修改的提交节点距离结束的提交节点中间有多个节点，而上一次和下一次都需要合并文件，这个过程就要进行多次。个人感觉这个过程虽然可以重新整理提交节点，使节点更准确清晰，但是如果修改的点比较远，文件内容变化复杂，这个多次合并的过程还是比较痛苦的，不推荐在这种情况下使用。</p></li><li class="lvl-2"><p>推荐的使用场景为，针对同一个功能进行修改，在commit后尚未进行pushsa时发现有些内容需要变化，如果此时没有进行commit，可以执行<code>git commit --amend  -am &quot;注释&quot;</code>,如果已经执行了commit，则可以执行<code>git rebase -i HEAD~2</code>。</p></li></ul><h4 id="示例">示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i HEAD~3</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>注意这里会进入两次编辑页面，一次是多个提交的处理方式，按提示进行修改即可，一般保留第一行的命令pick，后面的行命令修改为s，然后wq保存。</p></li><li class="lvl-2"><p>注意合并多个分支时如果包含已经发布过的分支，就要调整顺序，将已经发布的最后一个分支放到第一行，否则再次发布时会提示需要先执行<code>git pull</code>，这是因为按照上面的逻辑只有第一行的是提交操作，后面的不会产生新的提交，所以版本号就会落后于远端分支，但是即便调整顺序，也会提示版本偏离，还是要先执行<code>git pull</code>，待手工合并冲突后再次提交一个新的commit，所以，最好的方法就是不要包含已经发布过的分支，只针对未发布的分支进行合并。<br>编辑后的：<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase3.png" alt=""></p></li><li class="lvl-2"><p>第二个页面是要求你编辑本次合并的log说明，此时每次的log都会显示在这个页面，去掉不需要的，重新编辑一下保存即可。<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase4.png" alt=""><br>编辑后的：<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase5.png" alt=""></p></li></ul><!-- <div><img src="/images_glob/git-command/rebase5.png" width="60%"></div> --><p>查看日志：git log --oneline<br><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/rebase6.png" alt=""></p><h3 id="21-git-revert–如何撤销指定的提交呢，就是把这次提交回滚到其前一次提交的状态，但是又不影响其之后的提交？">21.<code>git revert</code>–如何撤销指定的提交呢，就是把这次提交回滚到其前一次提交的状态，但是又不影响其之后的提交？</h3><ul class="lvl-0"><li class="lvl-2"><p><code>git revert</code> 是回滚某个commit ，不是回滚“到”某个</p></li><li class="lvl-2"><p><code>git revert</code>是用一次新的commit来回滚之前的commit，<code>git reset</code>是直接删除指定的commit。</p></li><li class="lvl-2"><p><code>git reset</code> 撤销到某次提交, <code>git revert</code> 撤销某次提交，撤销并不意味着删除本次提交，其log里仍然会有这次提交，只不过revert后会产生一个新的节点用于提交，而reset是会删除之前的log。</p></li><li class="lvl-2"><p>需要回滚到上一个版本时，可以通过<code>git reset HEAD~1</code>实现，也可以通过执行<code>git revert HEAD</code>实现。区别就是reset后再次发布需要<code>git push -f</code>，而revert不需要-f参数，因为revert时会在顶端产生一个新的节点，其版本号一定比远端新的。</p></li><li class="lvl-2"><p>还有一点需要注意，例如dev是从 master checkout出来的分支，然后针对dev执行reset时，如果reset的版本master里也包含，此时再将dev merge 回 master时，则master里会保留本应该被reset的内容，而执行revert则不会出现这个问题，因为revert是用一次逆向的commit“中和”之前的提交。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 撤销并commit一次新的提交</span></span><br><span class="line">git revert HEAD        <span class="comment">#撤销前一次 commit</span></span><br><span class="line">git revert HEAD^       <span class="comment">#撤销前前一次 commit</span></span><br><span class="line">git revert HEAD~3      <span class="comment">#撤销倒数第四次提交</span></span><br><span class="line">git revert commit号    <span class="comment">#撤销指定的版本，撤销也会作为一次提交进行保存。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果只撤销，即只改变本地目录和索引，但不执行commit，可以加上-n参数，然后手工执行commit操作</span></span><br><span class="line">git revert -n HEAD~3</span><br><span class="line">git revert -n &lt;commit1&gt;..&lt;commit2&gt; <span class="comment"># 撤销多个版本，commit1 &gt; x &gt;= commit2，此时要加上-n参数，否则每个撤销都会创建一个新的commit号</span></span><br></pre></td></tr></table></figure><h3 id="22-如何打tag">22.如何打tag</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git tag -a <span class="string">&quot;prod_x.x.x&quot;</span> -m <span class="string">&quot;message&quot;</span> <span class="comment">#打标签, -a是标签名 -m注释</span></span><br><span class="line">git push origin <span class="string">&quot;prod_x.x.x&quot;</span> <span class="comment">#将这个新标签推送到远程仓库</span></span><br><span class="line"></span><br><span class="line">git tag <span class="comment">#查看标签信息</span></span><br><span class="line">git show prod_x.x.x <span class="comment">#显示被打标签的commit的详细信息</span></span><br><span class="line"></span><br><span class="line">git checkout -b hotfix_x.x.x prod_x.x.x <span class="comment">#从prod_x.x.x标签的版本上开一个新的修复分支</span></span><br><span class="line">git push origin hotfix_x.x.x <span class="comment">#将hotfix_x.x.x分支推送到远程仓库</span></span><br><span class="line">git branch --set-upstream-to=origin/hotfix_x.x.x hotfix_x.x.x <span class="comment">#关联本地分支到远程分支</span></span><br></pre></td></tr></table></figure><h3 id="23-git-pull-git-fetch-git-merge这种说法对吗？">23.<code>git pull</code> = <code>git fetch</code> + <code>git merge</code>这种说法对吗？</h3><ul class="lvl-0"><li class="lvl-2"><p>先说答案，<code>git pull</code> != <code>git fetch</code> + <code>git merge</code>，但是确实很像。</p></li><li class="lvl-2"><p>其实更好的比较是<code>git pull --rebase</code> 与 <code>git fetch</code> + <code>git merge</code>的区别，其相当于<code>git fetch</code> + <code>git rebase</code></p></li></ul><p>为了说清楚这个问题，我们需要先明白git的三个仓库：</p><ol><li class="lvl-3"><p>本地仓库：如master，修改代码，提交暂存区，然后commit到的就是本地仓库</p></li><li class="lvl-3"><p>本地远程跟踪仓库：如orign/master，这个仓库不能用来直接提交代码，其用来保存上一次从远程仓库拉取到的最新版本，如果不主动执行git fetch，git pull，git push等，是不会更新这个版本的。</p></li><li class="lvl-3"><p>远程仓库：git服务器，如github。执行git push时会将本地仓库的版本发布到远程仓库。</p></li></ol><ul class="lvl-0"><li class="lvl-2"><p><code>git fetch</code>的作用是将远程仓库(如github)的版本与本地远程跟踪仓库(如orign/master)的版本保持一致。之后我们在master分支下执行<code>git merge orign/master</code>就会将远程仓库的代码合并到本地仓库，所以合并后会产出一个新的版本，我们可以发布这个版本到远程仓库。</p></li><li class="lvl-2"><p><code>git pull</code>的作用很像<code>git fetch</code> + <code>git merge</code>，区别就是，<code>git pull</code>时如果没有冲突，就不会产生新的版本。</p></li></ul><h3 id="24-如何确定开发–-测试–-发布流程？">24.如何确定开发–&gt;测试–&gt;发布流程？</h3><h4 id="开发A模型：基于master的主分支开发模型">开发A模型：基于master的主分支开发模型</h4><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/A-git-dev.png" alt=""></p><ul class="lvl-0"><li class="lvl-2"><p>使用git rebase orign将远程分支内容合并到当前master主分支，保证本地master始终是一条线</p></li><li class="lvl-2"><p>模型结构简单，始终记住使用<code>git fetch</code> + <code>git rebase</code>或者<code>git pull --rebase</code>更新主分支版本</p></li></ul><h4 id="开发B模型：基于dev的子分支开发模型">开发B模型：基于dev的子分支开发模型</h4><p><img src="https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/B-git-dev.png" alt=""></p><ul class="lvl-0"><li class="lvl-2"><p>增加了一个dev子分支，合并回master主分支时可以通过<code>git rebase -i</code>的方式合并多个commit为一个commit，减少版本号数量</p></li><li class="lvl-2"><p>每次开发时要创建新的分支，开发完成后删除该分支，虽略显反锁，但也更加灵活，比如上一次的开发任务还没有完成，有一个紧急的任务需要马上处理，此时只需要从master分支checkout出一个子分支进行开发即可。</p></li><li class="lvl-2"><p>使用<code>git pull --rebase</code>更新远程版本，使用<code>git rebase dev</code>合并子分支，总的目标依旧是保证本地master始终是一条线</p></li></ul><h4 id="测试模型：基于A-B模型的master的主分支">测试模型：基于A\B模型的master的主分支</h4><ul class="lvl-0"><li class="lvl-2"><p>开发完成后，从master分支中checkout出一个release分支用于测试</p></li><li class="lvl-2"><p>测试过程中如果有bug，则由开发人员通过开发模型进行修复，修复后merge到release中</p></li><li class="lvl-2"><p>测试通过后，将release分支内容merge到prod分支中（prod表示生产分支，第一次时从release中checkout创建）</p></li><li class="lvl-2"><p>release分支仅仅为了本次发布内容而创建的测试分支，所以发布后可以删除release分支</p></li></ul><h4 id="发布模型">发布模型</h4><ul class="lvl-0"><li class="lvl-2"><p>release分支测试通过够会merge到prod生产分支，此时代码可以发布上线，上线前需要为prod打tag</p></li><li class="lvl-2"><p>只有打了tag的代码才能部署上线，如果线上代码发现bug，则从对应的tag中checkout一个hotfix分支，用于bug修复</p></li><li class="lvl-2"><p>bug修复后从hotfix分支checkout出hotfix_release分支进行测试，测试过程按照<code>测试模型</code>进行</p></li><li class="lvl-2"><p>测试通过后按照<code>发布模型</code>进行</p></li><li class="lvl-2"><p>发布后需要将hotfix_release分支merge到master开发主分支，之后可以删除本次hotfix分支和hotfix_release分支</p></li></ul><h4 id="说明">说明</h4><ul class="lvl-0"><li class="lvl-2"><p>本地和远程始终存在的分支是master开发主分支和prod发布主分支</p></li><li class="lvl-2"><p>每次上线前一定要打tag，tag对应的就是当前生产环境</p></li><li class="lvl-2"><p>测试分支和修复分支根据需要进行创建，用后可以删除。</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;一起来了解一些git常用命令吧&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;推荐一个学习git命令的网站：&lt;a href=&quot;https://learngitbranching.js.org/?locale=zh_CN&quot;&gt;https://learngitbranching.js.org/?locale=zh_CN&lt;/a&gt;&lt;br&gt;
&lt;img src=&quot;https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/git.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="git" scheme="https://blog.hanqunfeng.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot的@Query注解</title>
    <link href="https://blog.hanqunfeng.com/2021/09/08/springboot-query/"/>
    <id>https://blog.hanqunfeng.com/2021/09/08/springboot-query/</id>
    <published>2021-09-08T12:33:15.000Z</published>
    <updated>2022-08-17T07:11:46.240Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">聊聊Spring Boot的@Query注解</li><li class="lvl-2">参考：<a href="/2021/09/06/spring-boot-JpaRepository/" title="Spring Boot自定义JpaRepository基类">Spring Boot自定义JpaRepository基类</a></li></ul><span id="more"></span><h2 id="Query说明">@Query说明</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD, ElementType.ANNOTATION_TYPE&#125;)</span></span><br><span class="line"><span class="meta">@QueryAnnotation</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Query &#123;</span><br><span class="line">    <span class="comment">// 指定JPA Query语句,当nativeQuery=true时是原生的sql语句</span></span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//指定count的JPA Query语句,不指定则自动生成,当nativeQuery=true时是原生的sql语句,countQuery主要用来配合 value实现分页功能</span></span><br><span class="line">    String <span class="title function_">countQuery</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//依据哪个字段来count,如果未配置countQuery（）或countProjection（），将从原始查询派生count查询</span></span><br><span class="line">    String <span class="title function_">countProjection</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// 默认是false，表示value 里面是不是原生的Sql 语句</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">nativeQuery</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//指定一个query 的名字，必须是唯一的。 如果不指定，默认的生成规则是：&#123;$domainClass&#125;.$&#123;queryMethodName&#125;。使用命名查询时会用到。</span></span><br><span class="line">    String <span class="title function_">name</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">//指定一个count 的query 名字，必须是唯一的。如果不指定，默认的生成规则是：&#123;$domainClass&#125;.$&#123;queryMethodName&#125;.count</span></span><br><span class="line">    String <span class="title function_">countName</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本用法示例">基本用法示例</h2><ul class="lvl-0"><li class="lvl-2"><p>@Entity</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_country&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Country</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 主键自增</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line"><span class="meta">@Column(name=&quot;id&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 中文简称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;name_zh&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nameZh;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 英文简称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;name_en&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nameEn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 英文全称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;name_en_full&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String nameEnFull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 两字母代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;code_two&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String codeTwo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 三字母代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;code_three&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String codeThree;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 数字代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;num_code&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String numCode;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 备注</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Column(name=&quot;remark&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Country</span><span class="params">(Long id, String nameZh, String nameEn)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line"><span class="built_in">this</span>.nameZh = nameZh;</span><br><span class="line"><span class="built_in">this</span>.nameEn = nameEn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Country</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Dto</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CountryDto</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 主键自增</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 中文简称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nameZh;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 英文简称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nameEn;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 英文全称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nameEnFull;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 两字母代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String codeTwo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 三字母代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String codeThree;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 数字代码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String numCode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 备注</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CountryDto</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CountryDto</span><span class="params">(Long id, String nameZh, String nameEn)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.nameZh = nameZh;</span><br><span class="line">        <span class="built_in">this</span>.nameEn = nameEn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>Jpa</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title class_">BaseJpaRepository</span>&lt;Country, Long&gt; &#123;</span><br><span class="line">    <span class="comment">//sql查询，只有SELECT * 时才可以直接返回@Entity对象，但要有无参构造方法，page要指定countQuery</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT * FROM tbl_country WHERE id &gt; ?1&quot;, countQuery = &quot;SELECT count(*) FROM tbl_country WHERE id &gt; ?1&quot;, nativeQuery = true)</span></span><br><span class="line">    Page&lt;Country&gt; <span class="title function_">findByIdAfter</span><span class="params">(Long id, Pageable pageable)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql查询，只有SELECT * 时才可以直接返回@Entity对象</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT * FROM tbl_country  WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">    Country <span class="title function_">findCountrySqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//hql查询部分属性时，返回@Entity对象，要在@Entity中创建对应的构造方法</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT new Country(id,nameZh,nameEn) FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">    Country <span class="title function_">findCountryHqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//hql查询部分属性时，返回非@Entity对象，要创建对应的构造方法，且必须使用全路径</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT new com.example.demo.CountryDto(id,nameZh,nameEn) FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">    CountryDto <span class="title function_">findCountryDtoNewHqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="说明">说明</h3><ul class="lvl-0"><li class="lvl-2"><p>返回@Entity对象，查询全部属性时，sql和hql都支持直接转换</p></li><li class="lvl-2"><p>返回@Entity对象，查询部分属性时，sql不支持直接转换，hql时，实体要有对应的构造方法</p></li><li class="lvl-2"><p>hql也可以返回Dto对象，查询部分属性时，同样需要Dto有对应的构造方法，注意Dto必须使用全路径</p></li></ul><h3 id="sql查询部分属性直接转换成对象的方法">sql查询部分属性直接转换成对象的方法</h3><ul class="lvl-0"><li class="lvl-2"><p>方法1，前一篇文章<a href="/2021/09/06/spring-boot-JpaRepository/" title="Spring Boot自定义JpaRepository基类">Spring Boot自定义JpaRepository基类</a>中通过自定义JpaRepository基类，转换@Entity对象和Dto对象都支持</p></li><li class="lvl-2"><p>方法2，注入自定义的结果转换器，只能转换为Dto对象，下面说明如何实现</p></li></ul><h2 id="注入自定义的结果转换器">注入自定义的结果转换器</h2><ul class="lvl-0"><li class="lvl-2"><p>无论是sql还是hql，查询部分属性时，jpa输出的结果都会被转化为Map对象，我们只需要注入一个能将Map转换为指定对象的转换器就可以了</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;注入自定义查询结果转换器&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JpaDtoConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里用到了上文“Spring Boot自定义JpaRepository基类”中介绍过的JpaUtil，通过json作为中间媒介</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JpaUtil jpaUtil;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化注入<span class="doctag">@JpaDto</span>对应的Converter</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = applicationContext.getBeansWithAnnotation(JpaDto.class);</span><br><span class="line">        <span class="keyword">for</span> (Object o : map.values()) &#123;</span><br><span class="line">            <span class="type">Class</span> <span class="variable">c</span> <span class="operator">=</span> o.getClass();</span><br><span class="line">            log.info(<span class="string">&quot;Jpa添加Converter,class=&#123;&#125;&quot;</span>, c.getName());</span><br><span class="line">            <span class="type">DefaultConversionService</span> <span class="variable">defaultConversionService</span> <span class="operator">=</span> ((DefaultConversionService) DefaultConversionService.getSharedInstance());</span><br><span class="line">            <span class="comment">//添加Map对象的转换器，将Map对象转换为指定的对象类型</span></span><br><span class="line">            defaultConversionService.addConverter(Map.class, c, m -&gt; &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> jpaUtil.mapToObject(m, c, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FatalBeanException</span>(<span class="string">&quot;Jpa结果转换出错,class=&quot;</span> + c.getName(), e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>定义标记注解</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;h1&gt;注解标记，声明在Dto对象上，表示该对象作为结果对象时，可以被自定义结果转换器转化&lt;/h1&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Target(value = &#123;ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> JpaDto &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>此时Dto对象上要加上@JpaDto注解</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JpaDto</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CountryDto</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    …………………………</span><br><span class="line">    …………………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>JpaRepository示例</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title class_">BaseJpaRepository</span>&lt;Country, Long&gt; &#123;</span><br><span class="line">    <span class="comment">//hql查询部分属性时，一定有使用as别名，这里返回值不能是@Entity，并且其要标注@JpaDto注解</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id as id,nameZh as nameZh,nameEn as nameEn FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">    CountryDto <span class="title function_">findCountryDtoHqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql查询部分属性时，一定有使用as别名，这里返回值不能是@Entity，并且其要标注@JpaDto注解</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">    CountryDto <span class="title function_">findCountryDtoSqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//sql查询部分属性时，一定有使用as别名，这里返回值不能是@Entity，并且其要标注@JpaDto注解，page要指定countQuery</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE id &gt; ?1&quot;, countQuery = &quot;SELECT count(*) FROM tbl_country WHERE id &gt; ?1&quot;, nativeQuery = true)</span></span><br><span class="line">    Page&lt;CountryDto&gt; <span class="title function_">findByIdAfterDto</span><span class="params">(Long id, Pageable pageable)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="说明-2">说明</h3><ul class="lvl-0"><li class="lvl-2"><p>返回注解了@JpaDto注解的对象时，hql和sql都支持部分字段查询，但要注意字段要加as别名，别名与Dto对象属性名称要一致；</p></li><li class="lvl-2"><p>部分字段查询时，Dto对象中不必创建对应的构造方法；</p></li><li class="lvl-2"><p>查询部分属性时，不支持返回@Entity对象，即使在@Entity类上增加@JpaDto注解也不好使，说明其返回的不是Map对象</p></li><li class="lvl-2"><p>hql返回部分属性时，如果直接返回@Entity对象，会抛异常<code>Failed to convert from type [java.lang.Object[]] to type [com.example.demo.Country]</code>，提示类型转换失败，因其返回类型是java.lang.Object[]，所以也说明为什么要用构造方法的形式接收返回数据，就是要与数组位置一一对应上，所以hql返回部分属性，就要使用构造方法的形式；</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id as id,nameZh as nameZh,nameEn as nameEn FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">Country <span class="title function_">findCountryHqlByNameError</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT new Country(id,nameZh,nameEn) FROM Country WHERE nameZh = ?1&quot;)</span></span><br><span class="line">Country <span class="title function_">findCountryHqlByNameOk</span><span class="params">(String name)</span>;</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>sql返回部分属性时，如果直接返回@Entity对象，会抛异常<code>No such column: 'code_three'.</code>，提示缺少字段。说明该形式在封装@Entity对象时需要遍历其所有@Column字段并为其赋值，此时可以返回Dto或者Map，也可以使用自定义JpaRepository的方式，还有一种方法就是使用命名查询，就是@NamedNativeQuery和@SqlResultSetMapping；</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//错误</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">Country <span class="title function_">findCountrySqlByNameError</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确，之后可以将map转换为@Entity对象，如通过json的方式</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">Map <span class="title function_">findCountrySqlByNameOk</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">Object[] findCountrySqlByNameOk2(String name);</span><br><span class="line"></span><br><span class="line"><span class="comment">//正确，CountryDto要加上@JpaDto注解</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT id,name_zh as nameZh,name_en as nameEn FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">CountryDto <span class="title function_">findCountrySqlByNameOk3</span><span class="params">(String name)</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="命名查询">命名查询</h2><ul class="lvl-0"><li class="lvl-2"><p>@NamedQuery，用于执行hql</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NamedQueries(&#123;</span></span><br><span class="line"><span class="meta">        @NamedQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;HQL_FIND_ALL_COUNTRY&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的hql</span></span><br><span class="line"><span class="meta">                query = &quot;from Country&quot;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_country&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Country</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    …………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>@NamedNativeQuery和@SqlResultSetMapping，用于执行sql，可以指定结果类型，不指定结果类型时返回java.lang.Object[]</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NamedNativeQueries(&#123;</span></span><br><span class="line"><span class="meta">        @NamedNativeQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_FIND_ALL_COUNTRY&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的sql</span></span><br><span class="line"><span class="meta">                query = &quot;select * from tbl_country&quot;,</span></span><br><span class="line"><span class="meta">                //指定返回类型</span></span><br><span class="line"><span class="meta">                resultClass = Country.class</span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @NamedNativeQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_FIND_ALL_COUNTRY2&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的sql</span></span><br><span class="line"><span class="meta">                query = &quot;select * from tbl_country&quot;,</span></span><br><span class="line"><span class="meta">                //通过@SqlResultSetMapping封装返回类型，这里是@SqlResultSetMapping的名称</span></span><br><span class="line"><span class="meta">                resultSetMapping = &quot;SQL_RESULT_COUNTRY_ALL&quot;</span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @NamedNativeQuery(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_FIND_SOME_FIELD_COUNTRY&quot;,</span></span><br><span class="line"><span class="meta">                //要指定的sql</span></span><br><span class="line"><span class="meta">                query = &quot;select id,name_zh as nameZh,name_en as nameEn from tbl_country&quot;,</span></span><br><span class="line"><span class="meta">                //通过@SqlResultSetMapping封装返回类型，这里是@SqlResultSetMapping的名称</span></span><br><span class="line"><span class="meta">                resultSetMapping = &quot;SQL_RESULT_COUNTRY_SOME_FIELD&quot;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@SqlResultSetMappings(&#123;</span></span><br><span class="line"><span class="meta">        @SqlResultSetMapping(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_RESULT_COUNTRY_ALL&quot;,</span></span><br><span class="line"><span class="meta">                //指定返回类的@Entity类型</span></span><br><span class="line"><span class="meta">                entities = &#123;</span></span><br><span class="line"><span class="meta">                        @EntityResult(</span></span><br><span class="line"><span class="meta">                                //指定返回类的@Entity类型</span></span><br><span class="line"><span class="meta">                                entityClass = Country.class</span></span><br><span class="line"><span class="meta">                        )</span></span><br><span class="line"><span class="meta">                &#125;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">        ),</span></span><br><span class="line"><span class="meta">        @SqlResultSetMapping(</span></span><br><span class="line"><span class="meta">                //指定名称，必须全局唯一</span></span><br><span class="line"><span class="meta">                name = &quot;SQL_RESULT_COUNTRY_SOME_FIELD&quot;,</span></span><br><span class="line"><span class="meta">                //查询部分属性时，可以通过构造方法封装结果数据</span></span><br><span class="line"><span class="meta">                classes = &#123;</span></span><br><span class="line"><span class="meta">                        @ConstructorResult(</span></span><br><span class="line"><span class="meta">                                //指定返回类的@Entity类型</span></span><br><span class="line"><span class="meta">                                targetClass = Country.class,</span></span><br><span class="line"><span class="meta">                                //指定调用的构造方法</span></span><br><span class="line"><span class="meta">                                columns = &#123;</span></span><br><span class="line"><span class="meta">                                        @ColumnResult(name = &quot;id&quot;, type = Long.class),</span></span><br><span class="line"><span class="meta">                                        @ColumnResult(name = &quot;nameZh&quot;),</span></span><br><span class="line"><span class="meta">                                        @ColumnResult(name = &quot;nameEn&quot;)</span></span><br><span class="line"><span class="meta">                                &#125;</span></span><br><span class="line"><span class="meta">                        )</span></span><br><span class="line"><span class="meta">                &#125;</span></span><br><span class="line"><span class="meta">        )</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_country&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Country</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    …………</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Country</span><span class="params">(Long id, String nameZh, String nameEn)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.nameZh = nameZh;</span><br><span class="line">        <span class="built_in">this</span>.nameEn = nameEn;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Country</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="说明-3">说明</h3><ul class="lvl-0"><li class="lvl-2"><p>命名查询的注解只能声明在对应的@Entity类型上</p></li><li class="lvl-2"><p>@NamedNativeQuery名称必须全局唯一，可以通过<code>entityManager.createNamedQuery(String queryName)</code>进行调用</p></li><li class="lvl-2"><p>sql查询部分字段时@Entity一定要有对应的构造方法</p></li><li class="lvl-2"><p>返回类型必须是@Entity对象</p></li><li class="lvl-2"><p>@SqlResultSetMapping可以单独使用，其功能就是将sql的查询结果转换为指定的类型,<code>entityManager.createNativeQuery(String sqlString, String resultSetMapping)</code></p></li></ul><h3 id="使用方法">使用方法</h3><ul class="lvl-0"><li class="lvl-2"><p>通过entityManager的方法进行调用</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> entityManager.createNamedQuery(<span class="string">&quot;SQL_FIND_ALL_COUNTRY&quot;</span>).getResultList();</span><br><span class="line"></span><br><span class="line"><span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> entityManager.createNativeQuery(<span class="string">&quot;select id,name_zh as nameZh,name_en as nameEn from tbl_country&quot;</span>,<span class="string">&quot;SQL_RESULT_COUNTRY_SOME_FIELD&quot;</span>).getResultList();</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>通过在JpaRepository声明指定的@Query方法，并指定其name属性为对应的@NamedNativeQuery的name值</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title class_">BaseJpaRepository</span>&lt;Country, Long&gt; &#123;</span><br><span class="line">    <span class="meta">@Query(name = &quot;HQL_FIND_ALL_COUNTRY&quot;)</span></span><br><span class="line">    List&lt;Country&gt; <span class="title function_">nameHqlFindAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(name = &quot;SQL_FIND_ALL_COUNTRY&quot;)</span></span><br><span class="line">    List&lt;Country&gt; <span class="title function_">nameSqlFindAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(name = &quot;SQL_FIND_ALL_COUNTRY2&quot;)</span></span><br><span class="line">    List&lt;Country&gt; <span class="title function_">nameSqlFindAll2</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Query(name = &quot;SQL_FIND_SOME_FIELD_COUNTRY&quot;)</span></span><br><span class="line">    List&lt;Country&gt; <span class="title function_">nameSqlFindSomeField</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="关于在-Query注解中使用Mysql的原生sql时的一些小技巧">关于在@Query注解中使用Mysql的原生sql时的一些小技巧</h2><ul class="lvl-0"><li class="lvl-2"><p>动态sql通过mysql的if语句实现</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query(value = &quot;SELECT * FROM tbl_country WHERE if(?1!=&#x27;&#x27;, name_zh = ?1, 1=1)&quot;,nativeQuery = true)</span></span><br><span class="line">Country <span class="title function_">findCountrySqlByName</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT * FROM tbl_country WHERE if(:name!=&#x27;&#x27;, name_zh = :name, 1=1)&quot;,nativeQuery = true)</span></span><br><span class="line">Country <span class="title function_">findCountrySqlByName</span><span class="params">(<span class="meta">@Param(&quot;name&quot;)</span> String name)</span>;</span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>拼接like使用mysql的CONCAT语句</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query(value = &quot;SELECT * FROM tbl_country WHERE name like CONCAT(&#x27;%&#x27;,?1,&#x27;%&#x27;))</span><span class="string">&quot;,nativeQuery = true)</span></span><br><span class="line"><span class="string">Country findCountrySqlByName(String name);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@Query(value = &quot;</span>SELECT * FROM tbl_country WHERE name like <span class="title function_">CONCAT</span><span class="params">(<span class="string">&#x27;%&#x27;</span>,:name,<span class="string">&#x27;%&#x27;</span>)</span><span class="string">&quot;,nativeQuery = true)</span></span><br><span class="line"><span class="string">Country findCountrySqlByName(@Param(&quot;</span>name<span class="string">&quot;) String name);</span></span><br></pre></td></tr></table></figure></li><li class="lvl-2"><p>日期比较时可以直接使用<code>&gt;</code>和<code>&lt;</code>等比较符号，参数为Date、LocalDate和LocalDateTime</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query(value = &quot;SELECT count(*) from tbl_country r where r.update_time &gt; :lastTime&quot;, nativeQuery = true)</span></span><br><span class="line">Long <span class="title function_">countCountryByDate</span><span class="params">(<span class="meta">@Param(&quot;lastTime&quot;)</span> LocalDateTime lastTime)</span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;聊聊Spring Boot的@Query注解&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;参考：&lt;a href=&quot;/2021/09/06/spring-boot-JpaRepository/&quot; title=&quot;Spring Boot自定义JpaRepository基类&quot;&gt;Spring Boot自定义JpaRepository基类&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.hanqunfeng.com/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot自定义JpaRepository基类</title>
    <link href="https://blog.hanqunfeng.com/2021/09/06/spring-boot-JpaRepository/"/>
    <id>https://blog.hanqunfeng.com/2021/09/06/spring-boot-JpaRepository/</id>
    <published>2021-09-06T12:33:15.000Z</published>
    <updated>2021-09-08T08:42:28.315Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要">摘要</h2><ul class="lvl-0"><li class="lvl-2">SpringBoot基于JPA的数据操作非常方便，我们只需继承JpaRepository就可以拥有强大的数据操控能力，但是偶尔我们需要进行复杂的操作，比如批量插入与更新，或者是复杂sql等等，此时就需要我们对JpaRepository进行一些扩展。</li><li class="lvl-2">@Query注解也可以直接执行sql，但是其有一些局限，比如只有<code>select * </code>时才能直接封装为对象，只查询部分属性时就只能封装为Object[]或Map。如果希望@Query查询部分属性时也可以直接转换为对象，可以查看下一篇内容 <a href="/2021/09/08/springboot-query/" title="Spring Boot的@Query注解">Spring Boot的@Query注解</a></li></ul><span id="more"></span><h2 id="自定义JpaRepository接口">自定义JpaRepository接口</h2><ul class="lvl-0"><li class="lvl-2"><p>包含一些常用操作，可以按需扩展</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jpa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.repository.NoRepositoryBean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@NoRepositoryBean</span> <span class="comment">//接口不参与jpa的代理</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BaseJpaRepository</span>&lt;T, ID <span class="keyword">extends</span> <span class="title class_">Serializable</span>&gt; <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;T, ID&gt;, JpaSpecificationExecutor&lt;T&gt;, Serializable &#123;</span><br><span class="line"></span><br><span class="line">    EntityManager <span class="title function_">getEntityManager</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; List&lt;E&gt; <span class="title function_">findByHql</span><span class="params">(String hql)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql)</span>;</span><br><span class="line">    List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Object[] params)</span>;</span><br><span class="line">    List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql)</span>;</span><br><span class="line">    Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Object[] params)</span>;</span><br><span class="line">    Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * basic == true 表示基本数据类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic)</span>;</span><br><span class="line">    &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span>;</span><br><span class="line">    &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * basic == true 表示基本数据类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic)</span>;</span><br><span class="line">    &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span>;</span><br><span class="line">    &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    T <span class="title function_">findByIdNew</span><span class="params">(ID id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量插入</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;S <span class="keyword">extends</span> <span class="title class_">T</span>&gt; Iterable&lt;S&gt; <span class="title function_">batchSave</span><span class="params">(Iterable&lt;S&gt; iterable)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量更新</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &lt;S <span class="keyword">extends</span> <span class="title class_">T</span>&gt; Iterable&lt;S&gt; <span class="title function_">batchUpdate</span><span class="params">(Iterable&lt;S&gt; iterable)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自定义JpaRepository接口的实现类">自定义JpaRepository接口的实现类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jpa;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.context.ApplicationContextProvider;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.query.internal.NativeQueryImpl;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.transform.Transformers;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Pageable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Sort;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.support.JpaEntityInformation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.support.SimpleJpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.EntityManager;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Query;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseJpaRepositoryImpl</span>&lt;T, ID <span class="keyword">extends</span> <span class="title class_">Serializable</span>&gt; <span class="keyword">extends</span> <span class="title class_">SimpleJpaRepository</span>&lt;T, ID&gt; <span class="keyword">implements</span> <span class="title class_">BaseJpaRepository</span>&lt;T, ID&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//批量更新时的阀值，每500条数据commit一次</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">BATCH_SIZE</span> <span class="operator">=</span> <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过构造方法初始化EntityManager</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> EntityManager entityManager;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BaseJpaRepositoryImpl</span><span class="params">(JpaEntityInformation&lt;T, ID&gt; entityInformation, EntityManager entityManager)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(entityInformation, entityManager);</span><br><span class="line">        <span class="built_in">this</span>.entityManager = entityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> EntityManager <span class="title function_">getEntityManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> entityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">findByHql</span><span class="params">(String hql)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (List&lt;E&gt;) entityManager.createQuery(hql)</span><br><span class="line">                .getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findBySql(sql, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Object[] params)</span> &#123;</span><br><span class="line">        <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                nativeQuery.setParameter(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nativeQuery.setParameter(key, params.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findBySql(sql, clazz, basic, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapListToObjectList(findBySql(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">findBySql</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapListToObjectList(findBySql(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, pageable, clazz, basic, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, countSql, pageable, clazz, basic, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, <span class="literal">null</span>, pageable, clazz, basic, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!sql.toLowerCase().contains(<span class="string">&quot;order by&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(sql);</span><br><span class="line">            stringBuilder.append(<span class="string">&quot; order by &quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Sort</span> <span class="variable">sort</span> <span class="operator">=</span> pageable.getSort();</span><br><span class="line">            <span class="keyword">final</span> List&lt;Sort.Order&gt; orders = sort.toList();</span><br><span class="line">            <span class="keyword">for</span> (Sort.Order order : orders) &#123;</span><br><span class="line">                stringBuilder.append(order.getProperty())</span><br><span class="line">                        .append(<span class="string">&quot; &quot;</span>)</span><br><span class="line">                        .append(order.getDirection().name())</span><br><span class="line">                        .append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sql = stringBuilder.toString();</span><br><span class="line">            sql = sql.substring(<span class="number">0</span>, sql.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        nativeQuery.setFirstResult(pageable.getPageNumber() * pageable.getPageSize());</span><br><span class="line">        nativeQuery.setMaxResults(pageable.getPageSize());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                nativeQuery.setParameter(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Map&gt; resultList = nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).getResultList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List&lt;E&gt; objectList = getJpaUtil().mapListToObjectList(resultList, clazz, basic);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(countSql)) &#123;</span><br><span class="line">            countSql = <span class="string">&quot;select count(*) from ( &quot;</span> + sql + <span class="string">&quot; ) a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">BigInteger</span> <span class="variable">count</span> <span class="operator">=</span> findBySqlFirst(countSql, BigInteger.class, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        Page&lt;E&gt; page = <span class="keyword">new</span> <span class="title class_">PageImpl</span>&lt;&gt;(objectList, pageable, count.longValue());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findPageBySql(sql, <span class="literal">null</span>, pageable, clazz, basic, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; Page&lt;E&gt; <span class="title function_">findPageBySql</span><span class="params">(String sql, String countSql, Pageable pageable, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!sql.toLowerCase().contains(<span class="string">&quot;order by&quot;</span>)) &#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(sql);</span><br><span class="line">            stringBuilder.append(<span class="string">&quot; order by &quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Sort</span> <span class="variable">sort</span> <span class="operator">=</span> pageable.getSort();</span><br><span class="line">            <span class="keyword">final</span> List&lt;Sort.Order&gt; orders = sort.toList();</span><br><span class="line">            <span class="keyword">for</span> (Sort.Order order : orders) &#123;</span><br><span class="line">                stringBuilder.append(order.getProperty())</span><br><span class="line">                        .append(<span class="string">&quot; &quot;</span>)</span><br><span class="line">                        .append(order.getDirection().name())</span><br><span class="line">                        .append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sql = stringBuilder.toString();</span><br><span class="line">            sql = sql.substring(<span class="number">0</span>, sql.length() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        nativeQuery.setFirstResult(pageable.getPageNumber() * pageable.getPageSize());</span><br><span class="line">        nativeQuery.setMaxResults(pageable.getPageSize());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nativeQuery.setParameter(key, params.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        List&lt;Map&gt; resultList = nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).getResultList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List&lt;E&gt; objectList = getJpaUtil().mapListToObjectList(resultList, clazz, basic);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.hasText(countSql)) &#123;</span><br><span class="line">            countSql = <span class="string">&quot;select count(*) from ( &quot;</span> + sql + <span class="string">&quot; ) a&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">BigInteger</span> <span class="variable">count</span> <span class="operator">=</span> findBySqlFirst(countSql, BigInteger.class, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        Page&lt;E&gt; page = <span class="keyword">new</span> <span class="title class_">PageImpl</span>&lt;&gt;(objectList, pageable, count.longValue());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findBySqlFirst(sql, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Object[] params)</span> &#123;</span><br><span class="line">        <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">                nativeQuery.setParameter(i + <span class="number">1</span>, params[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Optional</span> <span class="variable">first</span> <span class="operator">=</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .stream().findFirst();</span><br><span class="line">        <span class="keyword">if</span> (first.isPresent()) &#123;</span><br><span class="line">            <span class="keyword">return</span> (Map) first.get();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="type">Query</span> <span class="variable">nativeQuery</span> <span class="operator">=</span> entityManager.createNativeQuery(sql);</span><br><span class="line">        <span class="keyword">if</span> (params != <span class="literal">null</span> &amp;&amp; params.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                nativeQuery.setParameter(key, params.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Optional</span> <span class="variable">first</span> <span class="operator">=</span> nativeQuery.unwrap(NativeQueryImpl.class)</span><br><span class="line">                .setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP)</span><br><span class="line">                .stream().findFirst();</span><br><span class="line">        <span class="keyword">if</span> (first.isPresent()) &#123;</span><br><span class="line">            <span class="keyword">return</span> (Map) first.get();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> findBySqlFirst(sql, clazz, basic, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Object[] params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapToObject(findBySqlFirst(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; E <span class="title function_">findBySqlFirst</span><span class="params">(String sql, Class clazz, <span class="type">boolean</span> basic, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getJpaUtil().mapToObject(findBySqlFirst(sql, params), clazz, basic);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">findByIdNew</span><span class="params">(ID id)</span> &#123;</span><br><span class="line">        <span class="type">T</span> <span class="variable">t</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        Optional&lt;T&gt; optional = <span class="built_in">this</span>.findById(id);</span><br><span class="line">        <span class="keyword">if</span> (optional.isPresent()) &#123;</span><br><span class="line">            t = optional.get();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> &lt;S <span class="keyword">extends</span> <span class="title class_">T</span>&gt; Iterable&lt;S&gt; <span class="title function_">batchSave</span><span class="params">(Iterable&lt;S&gt; iterable)</span> &#123;</span><br><span class="line">        Iterator&lt;S&gt; iterator = iterable.iterator();</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            entityManager.persist(iterator.next());</span><br><span class="line">            index++;</span><br><span class="line">            <span class="keyword">if</span> (index % BATCH_SIZE == <span class="number">0</span>) &#123;</span><br><span class="line">                entityManager.flush();</span><br><span class="line">                entityManager.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index % BATCH_SIZE != <span class="number">0</span>) &#123;</span><br><span class="line">            entityManager.flush();</span><br><span class="line">            entityManager.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> iterable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> &lt;S <span class="keyword">extends</span> <span class="title class_">T</span>&gt; Iterable&lt;S&gt; <span class="title function_">batchUpdate</span><span class="params">(Iterable&lt;S&gt; iterable)</span> &#123;</span><br><span class="line">        Iterator&lt;S&gt; iterator = iterable.iterator();</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">            entityManager.merge(iterator.next());</span><br><span class="line">            index++;</span><br><span class="line">            <span class="keyword">if</span> (index % BATCH_SIZE == <span class="number">0</span>) &#123;</span><br><span class="line">                entityManager.flush();</span><br><span class="line">                entityManager.clear();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index % BATCH_SIZE != <span class="number">0</span>) &#123;</span><br><span class="line">            entityManager.flush();</span><br><span class="line">            entityManager.clear();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> iterable;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JpaUtil <span class="title function_">getJpaUtil</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">JpaUtil</span> <span class="variable">objectUtil</span> <span class="operator">=</span> (JpaUtil) ApplicationContextProvider.getBean(<span class="string">&quot;jpaUtil&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> objectUtil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="工具类JpaUtil">工具类JpaUtil</h2><ul class="lvl-0"><li class="lvl-2"><p>其功能就是将Map对象通过json转换成指定对象</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jpa;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component(&quot;jpaUtil&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JpaUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询结果为List&lt;Map&gt;时，可以通过该方法转换为对象List，注意Map中key要与对象属性匹配，或者对象属性标注了<span class="doctag">@JsonProperty</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">mapListToObjectList</span><span class="params">(List&lt;Map&gt; mapList, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line"></span><br><span class="line">        List&lt;E&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Map map : mapList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (basic) &#123;</span><br><span class="line">                list.add((E) map.values().stream().findFirst().get());</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">valueAsString</span> <span class="operator">=</span> objectMapper.writeValueAsString(map);</span><br><span class="line">                    <span class="type">E</span> <span class="variable">newInstance</span> <span class="operator">=</span> (E) objectMapper.readValue(valueAsString, clazz);</span><br><span class="line">                    list.add(newInstance);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询结果为Map时，可以通过该方法转换为对象，注意Map中key要与对象属性匹配，或者对象属性标注了<span class="doctag">@JsonProperty</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; E <span class="title function_">mapToObject</span><span class="params">(Map map, Class clazz, <span class="type">boolean</span> basic)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(map == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">E</span> <span class="variable">newInstance</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//基本类型，说明返回值只有一列</span></span><br><span class="line">        <span class="keyword">if</span> (basic) &#123;</span><br><span class="line">            newInstance = (E) map.values().stream().findFirst().get();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="type">String</span> <span class="variable">valueAsString</span> <span class="operator">=</span> objectMapper.writeValueAsString(map);</span><br><span class="line">                newInstance = (E) objectMapper.readValue(valueAsString, clazz);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newInstance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ApplicationContextProvider">ApplicationContextProvider</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.common.support;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.i18n.LocaleContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ApplicationContextProvider</span></span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上下文对象实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取applicationContext</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ApplicationContext <span class="title function_">getApplicationContext</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        ApplicationContextProvider.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过name获取 Bean.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getBean</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过class获取Bean.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">getBean</span><span class="params">(Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过name,以及Clazz返回指定的Bean</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">getBean</span><span class="params">(String name, Class&lt;T&gt; clazz)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getBean(name, clazz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述 : &lt;获得多语言的资源内容&gt;. &lt;br&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;使用方法说明&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getMessage</span><span class="params">(String code, Object[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getMessage(code, args, LocaleContextHolder.getLocale());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述 : &lt;获得多语言的资源内容&gt;. &lt;br&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;使用方法说明&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> defaultMessage</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getMessage</span><span class="params">(String code, Object[] args,</span></span><br><span class="line"><span class="params">                                    String defaultMessage)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getApplicationContext().getMessage(code, args, defaultMessage,</span><br><span class="line">                LocaleContextHolder.getLocale());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="配置类上增加-EnableJpaRepositories-repositoryBaseClass-BaseJpaRepositoryImpl-class">配置类上增加 @EnableJpaRepositories(repositoryBaseClass = BaseJpaRepositoryImpl.class)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories(repositoryBaseClass = BaseJpaRepositoryImpl.class, basePackages = &quot;com.example.demo&quot;)</span></span><br><span class="line"><span class="meta">@EntityScan(basePackages = &quot;com.example.demo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JpaConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="业务Jpa对象继承BaseJpaRepository">业务Jpa对象继承BaseJpaRepository</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CountryJpaRepository</span> <span class="keyword">extends</span> <span class="title class_">BaseJpaRepository</span>&lt;Country, Long&gt; &#123;</span><br><span class="line">    <span class="comment">//这种SELECT * 的形式也可以转换成对象，但是如果只查询某几个属性时，就会转换失败</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT * FROM tbl_country&quot;, countQuery = &quot;SELECT count(*) FROM tbl_country&quot;, nativeQuery = true)</span></span><br><span class="line">    Page&lt;Country&gt; <span class="title function_">findAll</span><span class="params">(Pageable pageable)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//失败</span></span><br><span class="line">    <span class="meta">@Query(value = &quot;SELECT id,name_zh FROM tbl_country WHERE name_zh = ?1&quot;,nativeQuery = true)</span></span><br><span class="line">    Country <span class="title function_">findByName</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="示例">示例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Map <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查询总数，注意count求和返回的对象是BigInteger类型</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">BigInteger</span> <span class="variable">size</span> <span class="operator">=</span> countryJpaRepository.findBySqlFirst(<span class="string">&quot;SELECT count(*) as count FROM tbl_country&quot;</span>, BigInteger.class, <span class="literal">true</span>);</span><br><span class="line">        map.put(<span class="string">&quot;size&quot;</span>, size);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//分页查询</span></span><br><span class="line">        <span class="type">Pageable</span> <span class="variable">pageable</span> <span class="operator">=</span> PageRequest.of(<span class="number">1</span>, <span class="number">20</span>, Sort.by(Sort.Direction.DESC, <span class="string">&quot;id&quot;</span>).and(Sort.by(Sort.Direction.ASC, <span class="string">&quot;name_zh&quot;</span>)));</span><br><span class="line">        <span class="keyword">final</span> Page&lt;Country&gt; pages = countryJpaRepository.findPageBySql(<span class="string">&quot;SELECT id,name_zh as nameZh ,name_en as nameEn FROM tbl_country&quot;</span>, pageable, Country.class, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">&quot;pages&quot;</span>, pages);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//批量新增</span></span><br><span class="line">        List&lt;DemoEntity&gt; entityList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="type">DemoEntity</span> <span class="variable">demoEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DemoEntity</span>();</span><br><span class="line">            demoEntity.setName(<span class="string">&quot;测试&quot;</span> + i);</span><br><span class="line">            demoEntity.initInsert();</span><br><span class="line">            entityList.add(demoEntity);</span><br><span class="line">        &#125;</span><br><span class="line">        demoEntityJpaRepository.batchSave(entityList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Page&lt;DemoEntity&gt; demoEntities = demoEntityJpaRepository.findAll(PageRequest.of(<span class="number">1</span>, <span class="number">100</span>, Sort.by(Sort.Direction.DESC, <span class="string">&quot;name&quot;</span>)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//批量删除</span></span><br><span class="line">        demoEntityJpaRepository.deleteAllInBatch(demoEntities.getContent());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;摘要&quot;&gt;摘要&lt;/h2&gt;
&lt;ul class=&quot;lvl-0&quot;&gt;
&lt;li class=&quot;lvl-2&quot;&gt;SpringBoot基于JPA的数据操作非常方便，我们只需继承JpaRepository就可以拥有强大的数据操控能力，但是偶尔我们需要进行复杂的操作，比如批量插入与更新，或者是复杂sql等等，此时就需要我们对JpaRepository进行一些扩展。&lt;/li&gt;
&lt;li class=&quot;lvl-2&quot;&gt;@Query注解也可以直接执行sql，但是其有一些局限，比如只有&lt;code&gt;select * &lt;/code&gt;时才能直接封装为对象，只查询部分属性时就只能封装为Object[]或Map。如果希望@Query查询部分属性时也可以直接转换为对象，可以查看下一篇内容 &lt;a href=&quot;/2021/09/08/springboot-query/&quot; title=&quot;Spring Boot的@Query注解&quot;&gt;Spring Boot的@Query注解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="技术" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="Java" scheme="https://blog.hanqunfeng.com/categories/Java/"/>
    
    <category term="springboot" scheme="https://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/springboot/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.hanqunfeng.com/tags/Spring-Boot/"/>
    
  </entry>
  
</feed>
