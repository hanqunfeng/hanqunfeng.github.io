<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hanqunfeng&#39;s blog</title>
  <subtitle>Spring--java程序员的春天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.hanqunfeng.com/"/>
  <updated>2016-12-02T07:25:50.000Z</updated>
  <id>http://blog.hanqunfeng.com/</id>
  
  <author>
    <name>hanqunfeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习资料</title>
    <link href="http://blog.hanqunfeng.com/2016/12/02/book/"/>
    <id>http://blog.hanqunfeng.com/2016/12/02/book/</id>
    <published>2016-12-02T11:24:04.000Z</published>
    <updated>2016-12-02T07:25:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="资料列表"><a href="#资料列表" class="headerlink" title="资料列表"></a>资料列表</h2><ul>
<li><a href="/book/zabbix">CentOS7下zabbix3.2的安装及使用</a></li>
<li><a href="/book/rancher">Rancher–Docker的管理控制台</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;资料列表&quot;&gt;&lt;a href=&quot;#资料列表&quot; class=&quot;headerlink&quot; title=&quot;资料列表&quot;&gt;&lt;/a&gt;资料列表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/book/zabbix&quot;&gt;CentOS7下zabbix3.2的安装及使用&lt;/a&gt;&lt;/li&gt;

    
    </summary>
    
      <category term="技术" scheme="http://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="学习资料" scheme="http://blog.hanqunfeng.com/tags/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>Dubbo初体验</title>
    <link href="http://blog.hanqunfeng.com/2016/12/01/dubbo_dubbox/"/>
    <id>http://blog.hanqunfeng.com/2016/12/01/dubbo_dubbox/</id>
    <published>2016-12-01T11:24:04.000Z</published>
    <updated>2016-12-02T02:06:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li><a href="http://dubbo.io/Home-zh.htm" target="_blank" rel="external">官网地址</a>，官网有完整的资料以帮助使用者快速熟悉dubbo，不过目前相关下载地址已经失效，代码已经迁移到github，请参看下面的代码地址，自行编译打包</li>
</ul>
<a id="more"></a>
<h2 id="dubbo代码地址"><a href="#dubbo代码地址" class="headerlink" title="dubbo代码地址"></a>dubbo代码地址</h2><blockquote>
<ul>
<li><a href="https://github.com/alibaba/dubbo" target="_blank" rel="external">2.5.4(官方版本)</a>，基于spring3.2.16.RELEASE</li>
<li><a href="https://github.com/dangdangdotcom/dubbox" target="_blank" rel="external">2.8.4(第三方基于2.5.3修改)</a>，基于spring3.2.9.RELEASE,项目名称为dubbox，但生成的包名依然是dubbo</li>
</ul>
</blockquote>
<h2 id="git、maven、jdk、tomcat、nexus请自行安装，我安装的版本如下"><a href="#git、maven、jdk、tomcat、nexus请自行安装，我安装的版本如下" class="headerlink" title="git、maven、jdk、tomcat、nexus请自行安装，我安装的版本如下"></a>git、maven、jdk、tomcat、nexus请自行安装，我安装的版本如下</h2><blockquote>
<p>git version 2.9.3<br>Apache Maven 3.3.9<br>java version “1.8.0_31”<br>tomcat version 8.5.4<br>nexus version 2.5.0-04</p>
</blockquote>
<h2 id="编译打包"><a href="#编译打包" class="headerlink" title="编译打包"></a>编译打包</h2><h3 id="以dubbo2-8-4为例"><a href="#以dubbo2-8-4为例" class="headerlink" title="以dubbo2.8.4为例"></a>以dubbo2.8.4为例</h3><blockquote>
<ul>
<li>git clone <a href="https://github.com/dangdangdotcom/dubbox.git" target="_blank" rel="external">https://github.com/dangdangdotcom/dubbox.git</a></li>
<li>cd dubbox </li>
<li>mvn clean package install -Dmaven.test.skip=true</li>
</ul>
</blockquote>
<h3 id="发布dubbo2-8-4到nexus的3rd-party仓库"><a href="#发布dubbo2-8-4到nexus的3rd-party仓库" class="headerlink" title="发布dubbo2.8.4到nexus的3rd party仓库"></a>发布dubbo2.8.4到nexus的3rd party仓库</h3><blockquote>
<ul>
<li>登录nexus，设置3rd party的Deployment Policy=Allow Redeploy(在Configuration中配置)</li>
<li><p>vi ~/.m2/settings.xml，在servers中增加如下配置</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>thirdparty<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改dubbox的pom.xml，增加如下配置</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>thirdparty<span class="tag">&lt;/<span class="name">id</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.36.49:8080/nexus/content/repositories/thirdparty/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>mvn clean package deploy -Dmaven.test.skip=true</p>
</li>
</ul>
</blockquote>
<h3 id="发布dubbo2-5-4到nexus的3rd-party仓库"><a href="#发布dubbo2-5-4到nexus的3rd-party仓库" class="headerlink" title="发布dubbo2.5.4到nexus的3rd party仓库"></a>发布dubbo2.5.4到nexus的3rd party仓库</h3><blockquote>
<ul>
<li>因为目前2.5.4是Snapshots版本，所以不能直接发布到3rd party中，如果要发布到3rd party，需要修改pom.xml，去掉版本号中的Snapshots，比如在intellij IDEA中，使用快捷键Command+Shift+R；</li>
</ul>
</blockquote>
<h2 id="dubbo包含四个组件"><a href="#dubbo包含四个组件" class="headerlink" title="dubbo包含四个组件"></a>dubbo包含四个组件</h2><ul>
<li>Provider: 暴露服务的服务提供方。这里我们自己提供(基于2.8.4)；</li>
<li>Consumer: 调用远程服务的服务消费方。这里我们自己提供(基于2.8.4)；</li>
<li>Registry: 服务注册与发现的注册中心。这里使用zookeeper；</li>
<li>Monitor: 统计服务的调用次调和调用时间的监控中心。这里介绍两个，一个是dubbo提供的dubbo-monitor-simple，另一个是第三方对dubbo-monitor-simple的改进版本：<a href="http://git.oschina.net/handu/dubbo-monitor" target="_blank" rel="external">改版的monitor(基于2.8.4)</a></li>
</ul>
<hr>
<p>下面分别介绍：顺序为Registry，Provider，Consumer，Monitor。</p>
<hr>
<h2 id="ZooKeeper-Registry注册中心"><a href="#ZooKeeper-Registry注册中心" class="headerlink" title="ZooKeeper Registry注册中心"></a>ZooKeeper Registry注册中心</h2><p><a href="http://zookeeper.apache.org" target="_blank" rel="external">官网地址</a></p>
<h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ wget http://apache.fayea.com/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz</div><div class="line">$ tar zxvf zookeeper-3.4.9.tar.gz</div><div class="line">$ <span class="built_in">cd</span> zookeeper-3.4.9</div><div class="line">$ cp conf/zoo_sample.cfg conf/zoo.cfg</div></pre></td></tr></table></figure>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>$ vi conf/zoo.cfg<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">tickTime=2000</div><div class="line">initLimit=10</div><div class="line">syncLimit=5</div><div class="line"><span class="comment">#实际上只需要配置dataDir，这里修改为自己的存储目录</span></div><div class="line">dataDir=/usr/<span class="built_in">local</span>/zookeeper-3.4.9/data</div><div class="line">clientPort=2181</div></pre></td></tr></table></figure></p>
<h3 id="集群配置"><a href="#集群配置" class="headerlink" title="集群配置"></a>集群配置</h3><ul>
<li>分别在两台主机上按上述方法安装zookeeper，比如两台主机的IP分别为192.168.37.144、192.168.37.143；</li>
<li><p>分别在两台主机的zoo.cfg中增加如下配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">server.1=192.168.37.144:2555:3555</div><div class="line">server.2=192.168.37.143:2555:3555</div></pre></td></tr></table></figure>
</li>
<li><p>在144主机的dataDir指定的目录(/usr/local/zookeeper-3.4.9/data)下创建文件myid</p>
<blockquote>
<p>vi myid<br>设置内容为1  #就是zoo.cfg中server.后面对应的数字</p>
</blockquote>
</li>
<li><p>同理将143的myid文件中内容设置为2</p>
</li>
</ul>
<h3 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h3><ul>
<li><p>两台主机分别开放2181，2555，3555端口<br>vi /etc/sysconfig/iptablse，加入如下内容</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#zookeeper</span></div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 2181 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 2555 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 3555 -j ACCEPT</div></pre></td></tr></table></figure>
</li>
<li><p>重启iptables</p>
</li>
</ul>
<h3 id="启动与关闭zookeeper"><a href="#启动与关闭zookeeper" class="headerlink" title="启动与关闭zookeeper"></a>启动与关闭zookeeper</h3><p>./bin/zkServer.sh start<br>./bin/zkServer.sh stop</p>
<h3 id="查看在zookeeper中注册的信息"><a href="#查看在zookeeper中注册的信息" class="headerlink" title="查看在zookeeper中注册的信息"></a>查看在zookeeper中注册的信息</h3><p>echo dump | nc 192.168.37.144 2181<br>OR<br>telnet 192.168.37.144 2188<br>dump</p>
<hr>
<p>关于Provider&amp;Consumer，阿里官方的实例很详细了，网上也有很多资料，这里只做简单的说明，示例项目依赖于dubbo2.8.4,spring替换为4.3.3，使用中并未见异常，示例源码地址:<a href="https://github.com/hanqunfeng/DubboStudy" target="_blank" rel="external">https://github.com/hanqunfeng/DubboStudy</a></p>
<hr>
<h2 id="Provider-服务提供者"><a href="#Provider-服务提供者" class="headerlink" title="Provider 服务提供者"></a>Provider 服务提供者</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:dubbo</span>=<span class="string">"http://code.alibabatech.com/schema/dubbo"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></div><div class="line">    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd"&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 一个项目中只能有一个dubbo:application配置项 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">"demo-provider"</span> <span class="attr">owner</span>=<span class="string">"hanqf"</span> <span class="attr">organization</span>=<span class="string">"dubbox"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 使用zookeeper注册中心暴露服务地址--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span></span></div><div class="line">            <span class="attr">address</span>=<span class="string">"zookeeper://192.168.37.144:2181?backup=192.168.37.143:2181"</span> <span class="attr">timeout</span>=<span class="string">"50000"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 用dubbo协议在20880端口暴露服务 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:protocol</span> <span class="attr">name</span>=<span class="string">"dubbo"</span> <span class="attr">port</span>=<span class="string">"20880"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 声明需要暴露的服务接口 服务实现类是通过注解注册的，所以此处不需要声明实现类 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:service</span> <span class="attr">interface</span>=<span class="string">"web.function.demo.service.DemoService"</span> <span class="attr">ref</span>=<span class="string">"demoService"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:service</span> <span class="attr">interface</span>=<span class="string">"web.function.demo.service.Demo2Service"</span> <span class="attr">ref</span>=<span class="string">"demo2Service"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 启用monitor服务，只有配置这个，才会主动向monitor推送信息 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:monitor</span> <span class="attr">protocol</span>=<span class="string">"registry"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>不同的Provider之间可以使用相同的应用名称（比如这里是name=”demo-provider”），因为注册的服务只基于服务所在服务器的ip地址和dubbo协议开放的端口号，两者有一个不相同即可，但是不建议这样做。</li>
<li>对于提供相同服务的Provider，也就是副本（同一个war包，部署到不同主机），则可以不去修改name，但是对于提供不同服务的Provider，不要使用相同的name，这样不便于在monitor中查看。</li>
<li>对于同一个Provider，要在同一台主机中部署（同一个war包，部署到同一台主机），则需要修改duboo协议端口，比如示例代码中的dubbo-provider和dubbo-provider02，因为两者提供相同的服务，所以应用名称相同，但是因为都在本机部署，所以一个用20880，一个使用20881</li>
</ul>
</blockquote>
<h2 id="Consumer-服务消费者"><a href="#Consumer-服务消费者" class="headerlink" title="Consumer 服务消费者"></a>Consumer 服务消费者</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xmlns:dubbo</span>=<span class="string">"http://code.alibabatech.com/schema/dubbo"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd</span></div><div class="line">    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd"&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">"demo-consumer"</span> <span class="attr">owner</span>=<span class="string">"hanqf"</span> <span class="attr">organization</span>=<span class="string">"dubbox"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 设置check的缺省值，如果配置中有显式的声明，如：&lt;dubbo:reference check="true"/&gt;，不会受影响 --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 关闭所有服务的启动时检查,注意：如果关闭某个服务的启动时检查，需要在指定的服务单独配置check="false" --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:consumer</span> <span class="attr">check</span>=<span class="string">"false"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">protocol</span>=<span class="string">"zookeeper"</span></span></div><div class="line">                    <span class="attr">address</span>=<span class="string">"192.168.37.144:2181,192.168.37.143:2181"</span> <span class="attr">timeout</span>=<span class="string">"50000"</span>/&gt;</div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 用dubbo协议在20880端口暴露服务 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:protocol</span> <span class="attr">name</span>=<span class="string">"dubbo"</span> <span class="attr">port</span>=<span class="string">"20880"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 声明需要暴露的服务接口 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:reference</span> <span class="attr">interface</span>=<span class="string">"web.function.demo.service.DemoService"</span> <span class="attr">id</span>=<span class="string">"demoService"</span> <span class="attr">timeout</span>=<span class="string">"50000"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:reference</span> <span class="attr">interface</span>=<span class="string">"web.function.demo.service.Demo2Service"</span> <span class="attr">id</span>=<span class="string">"demo2Service"</span> <span class="attr">timeout</span>=<span class="string">"50000"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dubbo:monitor</span> <span class="attr">protocol</span>=<span class="string">"registry"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>Consumer和Provider如果部署在同一台主机，可以使用相同的dubbo协议端口，两者不受影响</li>
</ul>
</blockquote>
<hr>
<p>关于相关配置属性的说明，还是参考官方资料吧，在dubbo源码中已经包含了Consumer和Provider的示例，可以作为参考。</p>
<hr>
<h2 id="Monitor"><a href="#Monitor" class="headerlink" title="Monitor"></a>Monitor</h2><h3 id="dubbo-monitor-simple-简易监控中心"><a href="#dubbo-monitor-simple-简易监控中心" class="headerlink" title="dubbo-monitor-simple 简易监控中心"></a>dubbo-monitor-simple 简易监控中心</h3><ul>
<li>dubbo项目源码中已经自带了一个Monitor，就是dubbo-monitor-simple，使用maven编译后，会在dubbox/dubbo-simple/dubbo-monitor-simple/target下生成dubbo-monitor-simple-2.8.4-assembly.tar.gz</li>
<li><p>将dubbo-monitor-simple-2.8.4-assembly.tar.gz拷贝的合适的地方并解压</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ tar -zxvf dubbo-monitor-simple-2.8.4-assembly.tar.gz</div><div class="line">$ <span class="built_in">cd</span> dubbo-monitor-simple-2.8.4</div><div class="line">$ vi conf/dubbo.properties</div></pre></td></tr></table></figure>
</li>
<li><p>主要修改zookeeper地址、端口、绘图目录（该目录必须手工创建，比如这里是/Users/hanqunfeng/monitor）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">dubbo.container=<span class="built_in">log</span>4j,spring,registry,jetty</div><div class="line">dubbo.application.name=simple-monitor</div><div class="line">dubbo.application.owner=</div><div class="line"><span class="comment">#dubbo.registry.address=multicast://224.5.6.7:1234</span></div><div class="line">dubbo.registry.address=zookeeper://192.168.37.144:2181?backup=192.168.37.143:2181</div><div class="line"><span class="comment">#dubbo.registry.address=redis://127.0.0.1:6379</span></div><div class="line"><span class="comment">#dubbo.registry.address=dubbo://127.0.0.1:9090</span></div><div class="line">dubbo.protocol.port=7070</div><div class="line">dubbo.jetty.port=8085</div><div class="line">dubbo.jetty.directory=/Users/hanqunfeng/monitor</div><div class="line">dubbo.charts.directory=<span class="variable">$&#123;dubbo.jetty.directory&#125;</span>/charts</div><div class="line">dubbo.statistics.directory=/Users/hanqunfeng/monitor/statistics</div><div class="line">dubbo.log4j.file=logs/dubbo-monitor-simple.log</div><div class="line">dubbo.log4j.level=WARN</div></pre></td></tr></table></figure>
</li>
<li><p>启动与关闭</p>
<blockquote>
<p>./bin/start.sh<br>./bin/stop.sh</p>
</blockquote>
</li>
<li>浏览器访问<a href="http://localhost:8085，图表中的效果是注册了Provider，Consumer的效果" target="_blank" rel="external">http://localhost:8085，图表中的效果是注册了Provider，Consumer的效果</a><br><img src="/images_glob/dubbo_simple_monitor.png" alt=""></li>
</ul>
<h3 id="改版的monitor-基于2-8-4"><a href="#改版的monitor-基于2-8-4" class="headerlink" title="改版的monitor(基于2.8.4)"></a>改版的monitor(基于2.8.4)</h3><ul>
<li>特点：使用mysql作为数据存储，界面使用bootstrap进行优化</li>
<li><p>下载</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> http://git.oschina.net/handu/dubbo-monitor</div><div class="line">$ <span class="built_in">cd</span> dubbo-monitor</div></pre></td></tr></table></figure>
</li>
<li><p>配置<br>vi src/main/resources/application.properties，修改zookeeper地址，端口，数据库信息</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">dubbo.application.name=dubbo-monitor</div><div class="line">dubbo.application.owner=hanqunfeng</div><div class="line">dubbo.registry.address=zookeeper://192.168.37.144:2181?backup=192.168.37.143:2181</div><div class="line">dubbo.protocol.port=6060</div><div class="line"></div><div class="line"><span class="comment"># Database Settings</span></div><div class="line">db.url=jdbc:mysql://127.0.0.1:3306/monitor?prepStmtCacheSize=517&amp;cachePrepStmts=<span class="literal">true</span>&amp;autoReconnect=<span class="literal">true</span>&amp;characterEncoding=utf-8</div><div class="line">db.username=root</div><div class="line">db.password=password</div><div class="line">db.maxActive=500</div><div class="line"></div><div class="line"><span class="comment"># System Manager</span></div><div class="line">manager.username=admin</div><div class="line">manager.password=admin</div></pre></td></tr></table></figure>
</li>
<li><p>数据库初始化</p>
<blockquote>
<ul>
<li>创建monitor数据库</li>
<li>执行sql目录下的create.sql</li>
</ul>
</blockquote>
</li>
<li><p>打包<br>mvn clean package -Dmaven.test.skip=true</p>
<blockquote>
<p>基于本地nexus编译打包时，提示找不到jetbrick-template-2.0.10.jar，去maven中央仓库<a href="http://mvnrepository.com/artifact/com.github.subchen/jetbrick-template/2.0.10" target="_blank" rel="external">下载</a>再上传到nexus中吧。</p>
</blockquote>
</li>
<li><p>部署<br>将生成的dubbo-monitor.war包部署到tomcat中，启动tomcat（端口8084）<br>访问地址<a href="http://localhost:8084/dubbo-monitor" target="_blank" rel="external">http://localhost:8084/dubbo-monitor</a><br><img src="/images_glob/dubbo-monitor.png" alt=""></p>
</li>
</ul>
<hr>
<p>最后说一下dubbo-admin，这个是dubbo官方提供的dubbo管理控制台<br>官方说明：管理控制台为内部裁剪版本，开源部分主要包含：路由规则，动态配置，服务降级，访问控制，权重调整，负载均衡，等管理功能。</p>
<hr>
<h2 id="dubbo-admin-管理控制台"><a href="#dubbo-admin-管理控制台" class="headerlink" title="dubbo-admin 管理控制台"></a>dubbo-admin 管理控制台</h2><p>dubbo项目源码中有一个模块叫做dubbo-admin</p>
<blockquote>
<p>cd dubbox/dubbo-admin/src/main/webapp/WEB-INF<br>vi dubbo.properties<br>配置dubbo.registry.address=zookeeper://192.168.37.144:2181?backup=192.168.37.143:2181<br>编译打包，将生成的dubbo-admin-2.8.4.war部署到tomcat<br><img src="/images_glob/dubbo-admin.png" alt=""></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dubbo.io/Home-zh.htm&quot;&gt;官网地址&lt;/a&gt;，官网有完整的资料以帮助使用者快速熟悉dubbo，不过目前相关下载地址已经失效，代码已经迁移到github，请参看下面的代码地址，自行编译打包&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="dubbo" scheme="http://blog.hanqunfeng.com/tags/dubbo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo--NexT主题</title>
    <link href="http://blog.hanqunfeng.com/2016/11/17/hexo-theme-next/"/>
    <id>http://blog.hanqunfeng.com/2016/11/17/hexo-theme-next/</id>
    <published>2016-11-17T13:33:15.000Z</published>
    <updated>2016-11-17T15:22:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NexT主题简介"><a href="#NexT主题简介" class="headerlink" title="NexT主题简介"></a>NexT主题简介</h2><ul>
<li>NexT有着完善的使用文档，<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">NexT官方资料</a>；</li>
<li>NexT整合了常用的插件，如评论、分享、统计；</li>
<li><p>下载安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/blog</div><div class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
</li>
<li><p><a href="http://www.joryhe.com/2016-05-17-hexoxo-series-for-site-build-basic.html" target="_blank" rel="external">第三方参考资料</a></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;NexT主题简介&quot;&gt;&lt;a href=&quot;#NexT主题简介&quot; class=&quot;headerlink&quot; title=&quot;NexT主题简介&quot;&gt;&lt;/a&gt;NexT主题简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;NexT有着完善的使用文档，&lt;a href=&quot;http://theme-next
    
    </summary>
    
      <category term="随笔" scheme="http://blog.hanqunfeng.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="hexo" scheme="http://blog.hanqunfeng.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo--绑定域名到githubpage</title>
    <link href="http://blog.hanqunfeng.com/2016/11/17/hexo-domain-name/"/>
    <id>http://blog.hanqunfeng.com/2016/11/17/hexo-domain-name/</id>
    <published>2016-11-17T06:24:04.000Z</published>
    <updated>2016-11-17T15:19:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="申请域名"><a href="#申请域名" class="headerlink" title="申请域名"></a>申请域名</h2><ul>
<li>可以通过<a href="https://wanwang.aliyun.com" target="_blank" rel="external">万网</a>购买域名;</li>
<li>比如博主的域名为<code>hanqunfeng.com</code>;</li>
</ul>
<h2 id="添加解析规则"><a href="#添加解析规则" class="headerlink" title="添加解析规则"></a>添加解析规则</h2><ul>
<li>登录阿里云的控制台，进入【域名】，找到自己的域名，点击【解析】</li>
<li>点击【添加解析】<blockquote>
<ul>
<li>『记录类型』：CNAME</li>
<li>『主机记录』：blog #说明：设置为二级域名，也可以设置为www的一级域名</li>
<li>『记录值』：hanqunfeng.github.io.  #注意最后面有个点</li>
</ul>
</blockquote>
</li>
<li>上面的配置表示将blog.hanqunfeng.com的请求定向到hanqunfeng.github.io</li>
</ul>
<a id="more"></a>
<h2 id="blog目录下创建CNAME文件"><a href="#blog目录下创建CNAME文件" class="headerlink" title="blog目录下创建CNAME文件"></a>blog目录下创建CNAME文件</h2><ul>
<li>在自己的blog目录下的<code>/source</code>目录下新建一个文件，命名为CNAME，内容为：blog.hanqunfeng.com</li>
<li><code>hexo cl</code>，<code>hexo g</code>，<code>hexo d</code>，发布到github page</li>
</ul>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul>
<li>购买域名需要进行实名认证；</li>
<li>官方说域名解析最长等待48小时就可以全球生效；</li>
<li>博主配置时，只是提交了实名认证申请，域名解析不到5分钟就可以访问了；</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;申请域名&quot;&gt;&lt;a href=&quot;#申请域名&quot; class=&quot;headerlink&quot; title=&quot;申请域名&quot;&gt;&lt;/a&gt;申请域名&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;可以通过&lt;a href=&quot;https://wanwang.aliyun.com&quot;&gt;万网&lt;/a&gt;购买域名;&lt;/li&gt;
&lt;li&gt;比如博主的域名为&lt;code&gt;hanqunfeng.com&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;添加解析规则&quot;&gt;&lt;a href=&quot;#添加解析规则&quot; class=&quot;headerlink&quot; title=&quot;添加解析规则&quot;&gt;&lt;/a&gt;添加解析规则&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;登录阿里云的控制台，进入【域名】，找到自己的域名，点击【解析】&lt;/li&gt;
&lt;li&gt;点击【添加解析】&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;『记录类型』：CNAME&lt;/li&gt;
&lt;li&gt;『主机记录』：blog #说明：设置为二级域名，也可以设置为www的一级域名&lt;/li&gt;
&lt;li&gt;『记录值』：hanqunfeng.github.io.  #注意最后面有个点&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;上面的配置表示将blog.hanqunfeng.com的请求定向到hanqunfeng.github.io&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="http://blog.hanqunfeng.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo--添加多说评论插件和百度统计插件</title>
    <link href="http://blog.hanqunfeng.com/2016/11/16/hexo_duoshuo_baidutongji/"/>
    <id>http://blog.hanqunfeng.com/2016/11/16/hexo_duoshuo_baidutongji/</id>
    <published>2016-11-16T04:10:05.000Z</published>
    <updated>2016-11-17T15:21:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加多说评论插件"><a href="#添加多说评论插件" class="headerlink" title="添加多说评论插件"></a>添加多说评论插件</h2><ul>
<li>登录<a href="http://duoshuo.com" target="_blank" rel="external">多说官网</a>，多说不支持注册，仅支持绑定社交帐号登录，比如QQ，新浪微博，等等。</li>
<li>登录后会要求进行站点设置，这里需要设置域名、站点名称、首页网址等信息，域名的后缀已经默认为<code>.duoshuo.com</code>,所以我们只需要设置前缀，记住这个前缀。站点名称随便起个名字，首页网站填写<code>https://hanqunfeng.github.io</code>；</li>
</ul>
<a id="more"></a>
<ul>
<li>编辑yilia主题的_config.yml文件，设置如下：<blockquote>
<p> duoshuo: 域名前缀</p>
</blockquote>
</li>
<li>重新发布即可，效果见页面下方的评论区；</li>
<li>在多说管理后台中可以对评论进行管理。</li>
</ul>
<h2 id="添加百度统计插件"><a href="#添加百度统计插件" class="headerlink" title="添加百度统计插件"></a>添加百度统计插件</h2><ul>
<li>注册<a href="http://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">百度统计</a>帐号;</li>
<li>新注册用户会要求创建一个网站，设置如下：<br><img src="/images_glob/baidu_tj_net.png" alt="baidu_tj"></li>
<li>登录后在<code>代码管理--》代码获取</code>中复制代码，将其粘贴到yilia主题下的<code>layout/_partial/after-footer.gjs</code>的最下面；</li>
<li>重新发布到github page；</li>
<li>在百度统计管理平台中的<code>代码管理--》代码安装检查</code>查看是否配置正确；</li>
<li>配置无误后，可以通过百度统计平台查看统计数据。</li>
</ul>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="http://m.blog.csdn.net/article/details?id=51049695" target="_blank" rel="external">http://m.blog.csdn.net/article/details?id=51049695</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;添加多说评论插件&quot;&gt;&lt;a href=&quot;#添加多说评论插件&quot; class=&quot;headerlink&quot; title=&quot;添加多说评论插件&quot;&gt;&lt;/a&gt;添加多说评论插件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;登录&lt;a href=&quot;http://duoshuo.com&quot;&gt;多说官网&lt;/a&gt;，多说不支持注册，仅支持绑定社交帐号登录，比如QQ，新浪微博，等等。&lt;/li&gt;
&lt;li&gt;登录后会要求进行站点设置，这里需要设置域名、站点名称、首页网址等信息，域名的后缀已经默认为&lt;code&gt;.duoshuo.com&lt;/code&gt;,所以我们只需要设置前缀，记住这个前缀。站点名称随便起个名字，首页网站填写&lt;code&gt;https://hanqunfeng.github.io&lt;/code&gt;；&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="http://blog.hanqunfeng.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub Page搭建自己的Blog</title>
    <link href="http://blog.hanqunfeng.com/2016/11/14/hexo_gitpage/"/>
    <id>http://blog.hanqunfeng.com/2016/11/14/hexo_gitpage/</id>
    <published>2016-11-14T09:43:05.000Z</published>
    <updated>2016-11-17T15:21:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h2><ul>
<li><p><a href="https://hexo.io" target="_blank" rel="external">Hexo</a> 是一个简单地、轻量地、基于Node的一个静态博客框架，可以方便的生成静态网页托管在github和Heroku上，引用Hexo作者 @tommy351 的话：</p>
</li>
<li><p>快速、简单且功能强大的 Node.js 博客框架。A fast, simple &amp; powerful blog framework, powered by Node.js.</p>
</li>
</ul>
<h2 id="GitHub-Pages是什么？"><a href="#GitHub-Pages是什么？" class="headerlink" title="GitHub Pages是什么？"></a>GitHub Pages是什么？</h2><ul>
<li><a href="https://pages.github.com" target="_blank" rel="external">GitHub Pages</a> 可以被认为是用户编写的、托管在github上的静态网页。由于它的空间免费稳定， 可以用于介绍托管在github上的Project或者搭建网站。</li>
</ul>
<a id="more"></a>
<p>以下环境为mac下安装。</p>
<h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>需要安装git和Node.js运行环境</p>
<h3 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h3><ul>
<li>mac自带git，如果需要重新安装，可去<a href="https://git-scm.com/downloads" target="_blank" rel="external">官网下载</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git --version</div><div class="line">git version 2.9.3 (Apple Git-75)</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="安装npm"><a href="#安装npm" class="headerlink" title="安装npm"></a>安装npm</h3><ul>
<li>基于<a href="http://brew.sh" target="_blank" rel="external">brew</a>方式安装npm<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ brew install npm</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div></pre></td></tr></table></figure>
<p>npm安装Hexo：<a href="https://www.npmjs.com/package/hexo" target="_blank" rel="external">参考资料</a></p>
<h3 id="查看Hexo版本"><a href="#查看Hexo版本" class="headerlink" title="查看Hexo版本"></a>查看Hexo版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ hexo version</div><div class="line">hexo: 3.2.2</div><div class="line">hexo-cli: 1.0.2</div><div class="line">os: Darwin 16.1.0 darwin x64</div><div class="line">http_parser: 2.7.0</div><div class="line">node: 6.6.0</div><div class="line">v8: 5.1.281.83</div><div class="line">uv: 1.9.1</div><div class="line">zlib: 1.2.8</div><div class="line">ares: 1.10.1-DEV</div><div class="line">icu: 57.1</div><div class="line">modules: 48</div><div class="line">openssl: 1.0.2h</div></pre></td></tr></table></figure>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Setup-your-blog"><a href="#Setup-your-blog" class="headerlink" title="Setup your blog"></a>Setup your blog</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~</div><div class="line">$ hexo init blog</div><div class="line">$ <span class="built_in">cd</span> blog</div></pre></td></tr></table></figure>
<ul>
<li>此命令会在当前用户的家目录下创建一个blog目录，并初始化相关文件，如下为初始化的目录结构：<br><img src="/images_glob/blog_dir.png" alt="blog目录结构" title="blog目录结构"></li>
</ul>
<h3 id="blog目录结构说明"><a href="#blog目录结构说明" class="headerlink" title="blog目录结构说明"></a>blog目录结构说明</h3><ul>
<li>scaffolds ：模板文件夹，新建文章时，Hexo 会根据 scaffold 来建立文件。Hexo 有三种默认布局： post 、 page 和 draft ，它们分别对应不同的路径。新建文件的默认布局是 post ，可以在配置文件中更改布局。用 draft 布局生成的文件会被保存到 source/_drafts 文件夹。</li>
<li>source ：资源文件夹是存放用户资源的地方。</li>
<li>source/_post ：文件箱。除 <em>posts 文件夹之外，开头命名为 </em> (下划线)的文件或者文件夹和隐藏的文件将会被忽略。Markdown文件会被解析并放到 public 文件夹。</li>
<li>themes ：主题 文件夹。Hexo 会根据主题来生成静态页面。我们可以将自己的主题放到该目录下，然后在_config.yml中修改默认的主题即可。</li>
<li>themes/landscape ：默认的皮肤文件夹</li>
<li>_config.yml ：全局的配置文件，每次更改要重启服务。</li>
</ul>
<h3 id="config-yml简介"><a href="#config-yml简介" class="headerlink" title="_config.yml简介"></a>_config.yml简介</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></div><div class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></div><div class="line"></div><div class="line"><span class="comment"># Site 站点配置</span></div><div class="line">title: Study Zone <span class="comment">#网站标题</span></div><div class="line">subtitle: Spring--java程序员的春天 <span class="comment">#网站副标题</span></div><div class="line">description: 分享成长与快乐的地方 <span class="comment">#网站描述</span></div><div class="line">author: hanqunfeng <span class="comment">#作者，网站所有者</span></div><div class="line">language: zh-CN <span class="comment">#网站使用的语言</span></div><div class="line">timezone: Asia/Shanghai <span class="comment">#网站时区</span></div><div class="line"></div><div class="line"><span class="comment"># URL 可以不配置</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line">url: http://hanqunfeng.github.io <span class="comment">#网址，搜索时会在搜索引擎中显示</span></div><div class="line">root: / <span class="comment">#网站根目录 </span></div><div class="line">permalink: :year/:month/:day/:title/ <span class="comment">#永久链接格式</span></div><div class="line">permalink_defaults: <span class="comment">#永久链接中各部分的默认值</span></div><div class="line"></div><div class="line"><span class="comment"># Directory 目录配置</span></div><div class="line">source_dir: <span class="built_in">source</span> <span class="comment">#资源文件夹，这个文件夹用来存放内容</span></div><div class="line">public_dir: public <span class="comment">#公共文件夹，这个文件夹用于存放生成的站点文件</span></div><div class="line">tag_dir: tags <span class="comment">#标签文件夹</span></div><div class="line">archive_dir: archives <span class="comment">#归档文件夹</span></div><div class="line">category_dir: categories <span class="comment">#分类文件夹</span></div><div class="line">code_dir: downloads/code <span class="comment">#Include code 文件夹</span></div><div class="line">i18n_dir: :lang <span class="comment">#国际化文件夹</span></div><div class="line">skip_render: <span class="comment">#跳过指定文件的渲染，您可使用 glob 来配置路径</span></div><div class="line"></div><div class="line"><span class="comment"># Writing 写作配置</span></div><div class="line">new_post_name: :title.md <span class="comment"># File name of new posts # 新文章的文件名称</span></div><div class="line">default_layout: post <span class="comment">#默认布局</span></div><div class="line">titlecase: <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></div><div class="line">external_link: <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></div><div class="line">filename_case: 0 <span class="comment">#把文件名称转换为 (1) 小写或 (2) 大写</span></div><div class="line">render_drafts: <span class="literal">false</span> <span class="comment">#显示草稿</span></div><div class="line">post_asset_folder: <span class="literal">false</span> <span class="comment">#是否启动资源文件夹</span></div><div class="line">relative_link: <span class="literal">false</span> <span class="comment">#把链接改为与根目录的相对位址</span></div><div class="line">future: <span class="literal">true</span></div><div class="line">highlight: <span class="comment">#代码块的设置</span></div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  line_number: <span class="literal">true</span></div><div class="line">  auto_detect: <span class="literal">false</span></div><div class="line">  tab_replace:</div><div class="line"></div><div class="line"><span class="comment"># Category &amp; Tag 分类 &amp; 标签</span></div><div class="line">default_category: uncategorized <span class="comment">#默认分类</span></div><div class="line">category_map: <span class="comment">#分类别名</span></div><div class="line">tag_map: <span class="comment">#标签别名</span></div><div class="line"></div><div class="line"><span class="comment"># Date / Time format 时间和日期</span></div><div class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></div><div class="line"><span class="comment">## You can customize the date format as defined in</span></div><div class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"><span class="comment"># Pagination 分页</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line">per_page: 10 <span class="comment">#每页显示的文章量 (0 = 关闭分页功能)</span></div><div class="line">pagination_dir: page <span class="comment">#分页目录</span></div><div class="line"></div><div class="line"><span class="comment"># Extensions 扩展</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/ 插件</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/ 主题</span></div><div class="line"><span class="comment"># theme: landscape #当前主题名称</span></div><div class="line">theme: yilia <span class="comment">#当前主题名称</span></div><div class="line"></div><div class="line"><span class="comment"># Deployment #部署到github</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repo: https://github.com/hanqunfeng/hanqunfeng.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>注意：以下所有命令，都必须在blog目录下执行。</p>
<h3 id="Start-the-server"><a href="#Start-the-server" class="headerlink" title="Start the server"></a>Start the server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure>
<ul>
<li>我们可以通过浏览器访问<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>，就可以看到blog的页面了。</li>
<li>创建文件、生成静态文件以及发布到github，都不需要启动服务，启动服务的目的仅是为了能在本地看到效果。</li>
<li><code>hexo server</code> == <code>hexo s</code></li>
</ul>
<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"Hello Hexo"</span></div><div class="line">INFO  Created: ~/blog/<span class="built_in">source</span>/_posts/Hello-Hexo.md</div></pre></td></tr></table></figure>
<ul>
<li>创建好的文件基于<a href="http://www.appinn.com/markdown/" target="_blank" rel="external">makedown</a>语法，可以使用sublime或者atom编辑器，进行编辑与管理。</li>
<li>编辑完成后不需要执行<code>hexo generate</code>命令即可在浏览器中查看效果，但是修改了主题内容，有时会不生效，需要先生成静态文件才能看到最终效果。</li>
<li><code>hexo new</code> == <code>hexo n</code></li>
</ul>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<ul>
<li>该命令用于将makedown文件转换为静态html文件，并放到public文件夹下。</li>
<li>可以使用<code>hexo clean</code>命令来删除public文件夹，之后再使用<code>hexo generate</code>来重新生成静态文件。</li>
<li><code>hexo generate</code> == <code>hexo g</code></li>
</ul>
<h3 id="Clean-static-files"><a href="#Clean-static-files" class="headerlink" title="Clean static files"></a>Clean static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">INFO  Deleted database.</div><div class="line">INFO  Deleted public folder.</div></pre></td></tr></table></figure>
<ul>
<li><code>hexo clean</code> == <code>hexo cl</code></li>
</ul>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><ul>
<li>github上有许多技术达人为Hexo制作的主题，可以clone到本地，并拷贝到themes文件夹下，然后修改_config.yml中的theme属性，修改主题需要重启Hexo才能生效。</li>
<li><p>比如博主使用主题为<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">yilia下载地址</a>:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/blog</div><div class="line">$ git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</div></pre></td></tr></table></figure>
</li>
<li><p>更新主题时，在themes/yilia目录下执行<code>git pull</code>。</p>
</li>
</ul>
<h3 id="添加资源"><a href="#添加资源" class="headerlink" title="添加资源"></a>添加资源</h3><ul>
<li>可以在当前主题的source目录下放入自己的资源，执行<code>hexo generate</code>命令时，会将主题中的source目录下的内容拷贝到public目录下。</li>
<li>但是这样做如果更换主题，则资源就失效了，所以一般是在source目录下创建资源文件，执行<code>hexo generate</code>命令时，会将source目录下的内容拷贝到public目录下。</li>
</ul>
<h2 id="发布到Github"><a href="#发布到Github" class="headerlink" title="发布到Github"></a>发布到Github</h2><h3 id="安装hexo的git发布包"><a href="#安装hexo的git发布包" class="headerlink" title="安装hexo的git发布包"></a>安装hexo的git发布包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git -S</div></pre></td></tr></table></figure>
<h3 id="创建SSH密钥"><a href="#创建SSH密钥" class="headerlink" title="创建SSH密钥"></a>创建SSH密钥</h3><ul>
<li>创建密钥可以在执行发布时不需要每次都输入用户名和密码，具体创建方法查看如下资料:<blockquote>
<ul>
<li><a href="https://help.github.com/articles/generating-an-ssh-key/" target="_blank" rel="external">github官网</a></li>
<li><a href="http://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html" target="_blank" rel="external">图文教程</a></li>
</ul>
</blockquote>
</li>
</ul>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><ul>
<li>因为使用<a href="https://pages.github.com" target="_blank" rel="external">GitPage</a>，所以需要申请一个Github帐号，并创建一个仓库，仓库名称为”your_name.github.io”。</li>
<li>创建好仓库后，在_config.yml中按上文中的内容配置好deploy属性。</li>
<li>执行如下命令，会将public下的文件发布到该仓库中，一般执行deploy前先执行clean和generate保证文件最新。</li>
<li>访问<a href="https://hanqunfeng.github.io" target="_blank" rel="external">https://hanqunfeng.github.io</a>，查看blog页面。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<ul>
<li><code>hexo deploy</code> == <code>hexo d</code></li>
</ul>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="http://www.tuicool.com/articles/ueI7naV" target="_blank" rel="external">http://www.tuicool.com/articles/ueI7naV</a></li>
<li><a href="http://www.jianshu.com/p/465830080ea9" target="_blank" rel="external">http://www.jianshu.com/p/465830080ea9</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是Hexo&quot;&gt;&lt;a href=&quot;#什么是Hexo&quot; class=&quot;headerlink&quot; title=&quot;什么是Hexo&quot;&gt;&lt;/a&gt;什么是Hexo&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt; 是一个简单地、轻量地、基于Node的一个静态博客框架，可以方便的生成静态网页托管在github和Heroku上，引用Hexo作者 @tommy351 的话：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;快速、简单且功能强大的 Node.js 博客框架。A fast, simple &amp;amp; powerful blog framework, powered by Node.js.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;GitHub-Pages是什么？&quot;&gt;&lt;a href=&quot;#GitHub-Pages是什么？&quot; class=&quot;headerlink&quot; title=&quot;GitHub Pages是什么？&quot;&gt;&lt;/a&gt;GitHub Pages是什么？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt; 可以被认为是用户编写的、托管在github上的静态网页。由于它的空间免费稳定， 可以用于介绍托管在github上的Project或者搭建网站。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术" scheme="http://blog.hanqunfeng.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="http://blog.hanqunfeng.com/tags/hexo/"/>
    
  </entry>
  
</feed>
