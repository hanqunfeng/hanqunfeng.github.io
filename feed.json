{"version":"https://jsonfeed.org/version/1","name":"飘逸峰的博客","home_page_url":"https://blog.hanqunfeng.com","feed_url":"https://blog.hanqunfeng.com/feed.json","author":{"name":"飘逸峰"},"items":[{"id":"https://blog.hanqunfeng.com/2025/03/25/elasticsearch-03-plugins/","url":"https://blog.hanqunfeng.com/2025/03/25/elasticsearch-03-plugins/","title":"linux下Elasticsearch插件安装","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍如何在linux为Elasticsearch安装插件</p>\n</li>\n<li class=\"lvl-2\">\n<p>Elasticsearch版本8.17.3</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"安装Elasticsearch核心库插件\">安装Elasticsearch核心库插件</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>以安装 <code>analysis-icu</code> 这个分词插件为例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入Elasticsearch安装目录，插件的安装路径在 plugins 目录下</span></span><br><span class=\"line\"><span class=\"comment\"># 安装插件</span></span><br><span class=\"line\">bin/elasticsearch-plugin install analysis-icu</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装或卸载插件后，需要重启Elasticsearch服务</p>\n</li>\n</ul>\n<h2 id=\"安装其它来源的插件\">安装其它来源的插件</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>以安装 <code>analysis-ik</code> 这个中文分词插件为例</p>\n</li>\n<li class=\"lvl-2\">\n<p>从<a href=\"https://release.infinilabs.com/analysis-ik/stable/\">https://release.infinilabs.com/analysis-ik/stable/</a>找到对应版本的插件连接，这里以<code>8.17.3</code>为例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.基于url安装插件</span></span><br><span class=\"line\">bin/elasticsearch-plugin install https://release.infinilabs.com/analysis-ik/stable/elasticsearch-analysis-ik-8.17.3.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.基于本地文件安装插件，我们可以先将插件下载的本地目录</span></span><br><span class=\"line\">wget https://release.infinilabs.com/analysis-ik/stable/elasticsearch-analysis-ik-8.17.3.zip -P /tmp/</span><br><span class=\"line\">bin/elasticsearch-plugin install file:///tmp/elasticsearch-analysis-ik-8.17.3.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.可以将下载好的包解压到plugins目录下，然后重启Elasticsearch服务</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> /usr/local/elasticsearch/elasticsearch-8.17.3/plugins/analysis-ik</span><br><span class=\"line\">unzip elasticsearch-analysis-ik-8.17.3.zip -d /usr/local/elasticsearch/elasticsearch-8.17.3/plugins/analysis-ik</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看和卸载插件\">查看和卸载插件</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出所有插件</span></span><br><span class=\"line\">bin/elasticsearch-plugin list</span><br><span class=\"line\"><span class=\"comment\"># 卸载插件</span></span><br><span class=\"line\">bin/elasticsearch-plugin remove analysis-ik</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过curl命令查看插件信息</span></span><br><span class=\"line\">curl -u elastic:123456 -k https://localhost:9200/_cat/plugins?v</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装或卸载插件后，需要重启Elasticsearch服务</p>\n</li>\n</ul>\n<h2 id=\"analysis-ik-中文分词插件的使用\"><code>analysis-ik</code> 中文分词插件的使用</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>测试分词效果</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#ES的默认分词器是standard，会单字拆分</span></span><br><span class=\"line\">POST _analyze</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;analyzer&quot;</span>: <span class=\"string\">&quot;standard&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;中华人民共和国&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#analysis-ik的ik_smart分词器:会做最粗粒度的拆</span></span><br><span class=\"line\">POST _analyze</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;analyzer&quot;</span>: <span class=\"string\">&quot;ik_smart&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;中华人民共和国&quot;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#analysis-ik的ik_max_word分词器:会将文本做最细粒度的拆分</span></span><br><span class=\"line\">POST _analyze</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;analyzer&quot;</span>: <span class=\"string\">&quot;ik_max_word&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;text&quot;</span>: <span class=\"string\">&quot;中华人民共和国&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>配置索引的分词器</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建索引，并指定默认分词器为ik_max_word</span></span><br><span class=\"line\">PUT /test_index</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;settings&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;index&quot;</span> : &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;analysis.analyzer.default.type&quot;</span>: <span class=\"string\">&quot;ik_max_word&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 查看索引setting信息</span></span><br><span class=\"line\">GET /test_index/_settings</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>配置索引字段的分词器</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#创建索引</span></span><br><span class=\"line\">PUT /index</span><br><span class=\"line\"><span class=\"comment\"># 指定content字段使用ik分词器</span></span><br><span class=\"line\">POST /index/_mapping</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;content&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;analyzer&quot;</span>: <span class=\"string\">&quot;ik_max_word&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;search_analyzer&quot;</span>: <span class=\"string\">&quot;ik_smart&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#索引文档，也就是插入文档</span></span><br><span class=\"line\">POST /index/_create/1</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;content&quot;</span>:<span class=\"string\">&quot;美国留给伊拉克的是个烂摊子吗&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">POST /index/_create/2</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;content&quot;</span>:<span class=\"string\">&quot;公安部：各地校车将享最高路权&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">POST /index/_create/3</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;content&quot;</span>:<span class=\"string\">&quot;中韩渔警冲突调查：韩警平均每天扣1艘中国渔船&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">POST /index/_create/4</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;content&quot;</span>:<span class=\"string\">&quot;中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#带高亮的查询</span></span><br><span class=\"line\">POST /index/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;match&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;content&quot;</span>: <span class=\"string\">&quot;中国&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;highlight&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;pre_tags&quot;</span>: [</span><br><span class=\"line\">      <span class=\"string\">&quot;&lt;tag1&gt;&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;&lt;tag2&gt;&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;post_tags&quot;</span>: [</span><br><span class=\"line\">      <span class=\"string\">&quot;&lt;/tag1&gt;&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;&lt;/tag2&gt;&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;fields&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;content&quot;</span>: &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 本文介绍如何在linux为Elasticsearch安装插件 Elasticsearch版本8.17.3 安装Elasticsearch核心库插件 以安装 analysis-icu 这个分词插件为例 123# 进入Elasticsearch安装目录，插件的安装路径在 plugins 目录下# 安装插件bin/elasticsearch-plugin install analysis-icu 安装或卸载插件后，需要重启Elasticsearch服务 安装其它来源的插件 以安装 analysis-ik 这个中文分词插件为例 从https://release.infinilabs.com/analysis-ik/stable/找到对应版本的插件连接，这里以8.17.3为例 12345678910# 1.基于url安装插件bin/elasticsearch-plugin install https://release.infinilabs.com/analysis-ik/stable/elasticsearch-analysis-ik-8.17.3.zip# 2.基于本地文件安装插件，我们可以先将插件下载的本地目录wget https://release.infinilabs.com/analysis-ik/stable/elasticsearch-analysis-ik-8.17.3.zip -P /tmp/bin/elasticsearch-plugin install file:///tmp/elasticsearch-analysis-ik-8.17.3.zip# 3.可以将下载好的包解压到plugins目录下，然后重启Elasticsearch服务mkdir /usr/local/elasticsearch/elasticsearch-8.17.3/plugins/analysis-ikunzip elasticsearch-analysis-ik-8.17.3.zip -d /usr/local/elasticsearch/elasticsearch-8.17.3/plugins/analysis-ik 查看和卸载插件 1234567# 列出所有插件bin/elasticsearch-plugin list# 卸载插件bin/elasticsearch-plugin remove analysis-ik# 通过curl命令查看插件信息curl -u elastic:123456 -k https://localhost:9200/_cat/plugins?v 安装或卸载插件后，需要重启Elasticsearch服务 analysis-ik 中文分词插件的使用 测试分词效果 1234567891011121314151617181920#ES的默认分词器是standard，会单字拆分POST _analyze&#123; &quot;analyzer&quot;: &quot;standard&quot;, &quot;text&quot;: &quot;中华人民共和国&quot;&#125;#analysis-ik的ik_smart分词器:会做最粗粒度的拆POST _analyze&#123; &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;text&quot;: &quot;中华人民共和国&quot; &#125;#analysis-ik的ik_max_word分词器:会将文本做最细粒度的拆分POST _analyze&#123; &quot;analyzer&quot;: &quot;ik_max_word&quot;, &quot;text&quot;: &quot;中华人民共和国&quot;&#125; 配置索引的分词器 1234567891011# 创建索引，并指定默认分词器为ik_max_wordPUT /test_index&#123; &quot;settings&quot; : &#123; &quot;index&quot; : &#123; &quot;analysis.analyzer.default.type&quot;: &quot;ik_max_word&quot; &#125; &#125;&#125;# 查看索引setting信息GET /test_index/_settings 配置索引字段的分词器 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#创建索引PUT /index# 指定content字段使用ik分词器POST /index/_mapping&#123; &quot;properties&quot;: &#123; &quot;content&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;analyzer&quot;: &quot;ik_max_word&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125; &#125;&#125;#索引文档，也就是插入文档POST /index/_create/1&#123;&quot;content&quot;:&quot;美国留给伊拉克的是个烂摊子吗&quot;&#125;POST /index/_create/2&#123;&quot;content&quot;:&quot;公安部：各地校车将享最高路权&quot;&#125;POST /index/_create/3&#123;&quot;content&quot;:&quot;中韩渔警冲突调查：韩警平均每天扣1艘中国渔船&quot;&#125;POST /index/_create/4&#123;&quot;content&quot;:&quot;中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首&quot;&#125;#带高亮的查询POST /index/_search&#123; &quot;query&quot;: &#123; &quot;match&quot;: &#123; &quot;content&quot;: &quot;中国&quot; &#125; &#125;, &quot;highlight&quot;: &#123; &quot;pre_tags&quot;: [ &quot;&lt;tag1&gt;&quot;, &quot;&lt;tag2&gt;&quot; ], &quot;post_tags&quot;: [ &quot;&lt;/tag1&gt;&quot;, &quot;&lt;/tag2&gt;&quot; ], &quot;fields&quot;: &#123; &quot;content&quot;: &#123;&#125; &#125; &#125;&#125;","summary":"摘要 本文介绍如何在linux为Elasticsearch安装插件 Elasticsearch版本8.17.3","date_published":"2025-03-25T13:30:05.000Z","tags":["技术","elastic","elasticsearch","elasticsearch"]},{"id":"https://blog.hanqunfeng.com/2025/03/24/elasticsearch-02-install-cluster/","url":"https://blog.hanqunfeng.com/2025/03/24/elasticsearch-02-install-cluster/","title":"linux下安装Elasticsearch集群","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍如何在linux下安装Elasticsearch集群(三节点)</p>\n</li>\n<li class=\"lvl-2\">\n<p>Elasticsearch版本8.17.3</p>\n</li>\n<li class=\"lvl-2\">\n<p>单节点安装参考<a href=\"/2025/03/20/elasticsearch-01-install/\" title=\"linux下安装Elasticsearch\">linux下安装Elasticsearch</a>，本文在此基础上完成集群安装</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"集群安装\">集群安装</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>三个节点分别安照单节点的安装方式完成下载，用户配置，环境变量配置，系统参数配置，等等。</p>\n</li>\n<li class=\"lvl-2\">\n<p>任选一个节点作为集群的master节点，我们命名为<code>node-1</code>，其它节点命名为<code>node-2</code>和<code>node-3</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>先配置<code>node-1</code>节点的配置文件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 集群名称</span></span><br><span class=\"line\">cluster.name: test-elk</span><br><span class=\"line\"><span class=\"comment\"># 节点名称</span></span><br><span class=\"line\">node.name: node-1</span><br><span class=\"line\"><span class=\"comment\"># 数据存储路径，默认值 $ES_HOME/data</span></span><br><span class=\"line\">path.data: /usr/local/elasticsearch/data</span><br><span class=\"line\"><span class=\"comment\"># 日志存储路径，默认值 $ES_HOME/logs</span></span><br><span class=\"line\">path.logs: /usr/local/elasticsearch/logs</span><br><span class=\"line\"><span class=\"comment\"># 配置ES启动时是否进行内存锁定检查，默认值true，本机内存比较小时设置为false</span></span><br><span class=\"line\">bootstrap.memory_lock: <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 允许通过任何地址访问，开启远程访问</span></span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\"><span class=\"comment\"># 配置当前ES节点对外提供服务的http端口，默认 9200</span></span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\"><span class=\"comment\"># 配置当前ES节点对外提供服务的tcp端口，默认 9300</span></span><br><span class=\"line\">transport.port: 9300</span><br><span class=\"line\"><span class=\"comment\"># 集群内的主机列表，开启安全认证时无需配置，注意这里不要进行配置</span></span><br><span class=\"line\"><span class=\"comment\"># discovery.seed_hosts: [&quot;127.0.0.1&quot;]</span></span><br><span class=\"line\"><span class=\"comment\"># 第一次启动时需要参与选主的节点名称，这里只配置node-1</span></span><br><span class=\"line\">cluster.initial_master_nodes: [<span class=\"string\">&quot;node-1&quot;</span>]</span><br><span class=\"line\"><span class=\"comment\">#解决跨域问题</span></span><br><span class=\"line\">http.cors.enabled: <span class=\"literal\">true</span></span><br><span class=\"line\">http.cors.allow-origin: <span class=\"string\">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>配置<code>node-2</code>节点的配置文件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 集群名称</span></span><br><span class=\"line\">cluster.name: test-elk</span><br><span class=\"line\"><span class=\"comment\"># 节点名称</span></span><br><span class=\"line\">node.name: node-2</span><br><span class=\"line\"><span class=\"comment\"># 数据存储路径，默认值 $ES_HOME/data</span></span><br><span class=\"line\">path.data: /usr/local/elasticsearch/data</span><br><span class=\"line\"><span class=\"comment\"># 日志存储路径，默认值 $ES_HOME/logs</span></span><br><span class=\"line\">path.logs: /usr/local/elasticsearch/logs</span><br><span class=\"line\"><span class=\"comment\"># 配置ES启动时是否进行内存锁定检查，默认值true，本机内存比较小时设置为false</span></span><br><span class=\"line\">bootstrap.memory_lock: <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 允许通过任何地址访问，开启远程访问</span></span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\"><span class=\"comment\"># 配置当前ES节点对外提供服务的http端口，默认 9200</span></span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\"><span class=\"comment\"># 配置当前ES节点对外提供服务的tcp端口，默认 9300</span></span><br><span class=\"line\">transport.port: 9300</span><br><span class=\"line\"><span class=\"comment\">#解决跨域问题</span></span><br><span class=\"line\">http.cors.enabled: <span class=\"literal\">true</span></span><br><span class=\"line\">http.cors.allow-origin: <span class=\"string\">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>配置<code>node-3</code>节点的配置文件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 集群名称</span></span><br><span class=\"line\">cluster.name: test-elk</span><br><span class=\"line\"><span class=\"comment\"># 节点名称</span></span><br><span class=\"line\">node.name: node-3</span><br><span class=\"line\"><span class=\"comment\"># 数据存储路径，默认值 $ES_HOME/data</span></span><br><span class=\"line\">path.data: /usr/local/elasticsearch/data</span><br><span class=\"line\"><span class=\"comment\"># 日志存储路径，默认值 $ES_HOME/logs</span></span><br><span class=\"line\">path.logs: /usr/local/elasticsearch/logs</span><br><span class=\"line\"><span class=\"comment\"># 配置ES启动时是否进行内存锁定检查，默认值true，本机内存比较小时设置为false</span></span><br><span class=\"line\">bootstrap.memory_lock: <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 允许通过任何地址访问，开启远程访问</span></span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\"><span class=\"comment\"># 配置当前ES节点对外提供服务的http端口，默认 9200</span></span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\"><span class=\"comment\"># 配置当前ES节点对外提供服务的tcp端口，默认 9300</span></span><br><span class=\"line\">transport.port: 9300</span><br><span class=\"line\"><span class=\"comment\">#解决跨域问题</span></span><br><span class=\"line\">http.cors.enabled: <span class=\"literal\">true</span></span><br><span class=\"line\">http.cors.allow-origin: <span class=\"string\">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>启动<code>node-1</code>，启动成功后我们会在日志中看到如下安全认证信息信息，记录其中的加入集群的节点的token信息</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span><br><span class=\"line\"><span class=\"comment\"># 这些日志信息提供了 Elasticsearch 8 在首次启动时自动配置的安全特性、生成的默认密码、证书指纹以及如何配置 Kibana 和其他节点加入集群的详细说明。</span></span><br><span class=\"line\">✅ Elasticsearch security features have been automatically configured!</span><br><span class=\"line\">✅ Authentication is enabled and cluster connections are encrypted.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这是 elastic 用户的默认密码。系统建议你使用 bin/elasticsearch-reset-password -u elastic 命令来重置此密码。</span></span><br><span class=\"line\">ℹ️  Password <span class=\"keyword\">for</span> the elastic user (reset with `bin/elasticsearch-reset-password -u elastic`):</span><br><span class=\"line\">  BNb=*qz6_M*mXL9uZiSP <span class=\"comment\"># 这里会打印出ES自动生成的密码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这是 HTTP CA 证书的 SHA-256 指纹。CA 证书用于验证 HTTPS 连接的身份。</span></span><br><span class=\"line\">ℹ️  HTTP CA certificate SHA-256 fingerprint:</span><br><span class=\"line\">  3f141c16dfc6e165894bc1672084b220dcdd22ffe02116d51ac18003cfaa5a1d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提供了将 Kibana 配置为使用此 Elasticsearch 集群的步骤。</span></span><br><span class=\"line\">ℹ️  Configure Kibana to use this cluster:</span><br><span class=\"line\"><span class=\"comment\"># 启动 Kibana 并按照终端中显示的配置链接进行操作。</span></span><br><span class=\"line\">• Run Kibana and click the configuration <span class=\"built_in\">link</span> <span class=\"keyword\">in</span> the terminal when Kibana starts.</span><br><span class=\"line\"><span class=\"comment\"># 复制提供的注册令牌，并在浏览器中打开 Kibana 时粘贴此令牌。令牌在接下来的 30 分钟内有效。</span></span><br><span class=\"line\"><span class=\"comment\"># 补充说明：生成新的kibana注册令牌：bin/elasticsearch-create-enrollment-token -s kibana</span></span><br><span class=\"line\">• Copy the following enrollment token and <span class=\"built_in\">paste</span> it into Kibana <span class=\"keyword\">in</span> your browser (valid <span class=\"keyword\">for</span> the next 30 minutes):</span><br><span class=\"line\">  eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImFSWFBzcFVCTVVmc1d5aUJnbjBtOmRzbVBLQV95UXhDZkJpXzQyWDNEMVEifQ==</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提供了将新的 Elasticsearch 节点加入现有集群的步骤。</span></span><br><span class=\"line\">ℹ️ Configure other nodes to <span class=\"built_in\">join</span> this cluster:</span><br><span class=\"line\"><span class=\"comment\"># 使用 bin/elasticsearch --enrollment-token &lt;token&gt; 命令启动新的 Elasticsearch 节点。令牌在接下来的 30 分钟内有效。</span></span><br><span class=\"line\"><span class=\"comment\"># 补充说明：生成新的节点注册令牌：bin/elasticsearch-create-enrollment-token -s node</span></span><br><span class=\"line\">• Copy the following enrollment token and start new Elasticsearch nodes with `bin/elasticsearch --enrollment-token &lt;token&gt;` (valid <span class=\"keyword\">for</span> the next 30 minutes):</span><br><span class=\"line\">  eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImF4WFBzcFVCTVVmc1d5aUJnbjFtOkFEallPdnpzUzh1MGJqOFpfVFE4a3cifQ==</span><br><span class=\"line\"><span class=\"comment\"># 如果你在 Docker 中运行 Elasticsearch，可以使用 docker run -e &quot;ENROLLMENT_TOKEN=&lt;token&gt;&quot; docker.elastic.co/elasticsearch/elasticsearch:8.17.3 命令启动新节点。</span></span><br><span class=\"line\">  If you<span class=\"string\">&#x27;re running in Docker, copy the enrollment token and run:</span></span><br><span class=\"line\"><span class=\"string\">  `docker run -e &quot;ENROLLMENT_TOKEN=&lt;token&gt;&quot; docker.elastic.co/elasticsearch/elasticsearch:8.17.3`</span></span><br><span class=\"line\"><span class=\"string\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>token信息有效时间只有30分钟，超时后可以使用如下命令重新生成新的token</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入node-1节点的ES安装目录，此命令会生成新的节点注册令牌</span></span><br><span class=\"line\">bin/elasticsearch-create-enrollment-token -s node</span><br><span class=\"line\">eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6IlpoRVZ4NVVCeXRPajdLeTBqb3BvOmdHRW44ZW5mU0RDZHA2Yy1uSDF4eGcifQ==</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>启动<code>node-2</code>节点，启动时要带上token信息，<code>node-3</code>与此一样。这里要注意，只有第一次加入集群时启动才需要带上注册令牌，后续启动不需要token信息</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入node-2节点的ES安装目录，此命令会启动ES节点，并加入到集群中</span></span><br><span class=\"line\"><span class=\"comment\"># bin/elasticsearch --enrollment-token &lt;token&gt;</span></span><br><span class=\"line\">bin/elasticsearch --enrollment-token eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6IlpoRVZ4NVVCeXRPajdLeTBqb3BvOmdHRW44ZW5mU0RDZHA2Yy1uSDF4eGcifQ==</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>加入集群失败</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">在执行<code>bin/elasticsearch --enrollment-token &lt;token&gt;</code>时有可能会遇到如下异常：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR: Aborting auto configuration because the node keystore contains password settings already, with <span class=\"built_in\">exit</span> code 78</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">这通常意味着节点的 <code>keystore</code> 已经包含了密码设置，因此自动配置过程被中止。</li>\n<li class=\"lvl-2\">产生这种错误的原因大概率是当前ES是从已经安装好的服务器上拷贝过来的，而不是全新安装的，此时我们除了需要清空<code>data</code>目录外，还需要删除 <code>keystore</code> 中的密码</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看keystore中的密码</span></span><br><span class=\"line\">$ bin/elasticsearch-keystore list</span><br><span class=\"line\">keystore.seed</span><br><span class=\"line\">xpack.security.http.ssl.keystore.secure_password</span><br><span class=\"line\">xpack.security.transport.ssl.keystore.secure_password</span><br><span class=\"line\">xpack.security.transport.ssl.truststore.secure_password</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除keystore中的密码</span></span><br><span class=\"line\">$ bin/elasticsearch-keystore remove xpack.security.http.ssl.keystore.secure_password</span><br><span class=\"line\">$ bin/elasticsearch-keystore remove xpack.security.transport.ssl.keystore.secure_password</span><br><span class=\"line\">$ bin/elasticsearch-keystore remove xpack.security.transport.ssl.truststore.secure_password</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p>再次执行<code>bin/elasticsearch --enrollment-token &lt;token&gt;</code>即可。</p>\n</li>\n<li class=\"lvl-2\">\n<p>另外还可能遇到如下报错：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR: Aborting enrolling to cluster. Could not communicate with the node on any of the addresses from the enrollment token. All of [10.250.0.239:9200] were attempted., with <span class=\"built_in\">exit</span> code 69</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">这是由于token过期了，重新生成新的token即可</li>\n</ul>\n</div>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>启动成功后会在<code>node-2</code>的配置文件中看到如下配置信息</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#----------------------- BEGIN SECURITY AUTO CONFIGURATION -----------------------</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># The following settings, TLS certificates, and keys have been automatically</span></span><br><span class=\"line\"><span class=\"comment\"># generated to configure Elasticsearch security features on 24-03-2025 07:45:11</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># --------------------------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable security features</span></span><br><span class=\"line\">xpack.security.enabled: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">xpack.security.enrollment.enabled: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents</span></span><br><span class=\"line\">xpack.security.http.ssl:</span><br><span class=\"line\">  enabled: <span class=\"literal\">true</span></span><br><span class=\"line\">  keystore.path: certs/http.p12</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable encryption and mutual authentication between cluster nodes</span></span><br><span class=\"line\">xpack.security.transport.ssl:</span><br><span class=\"line\">  enabled: <span class=\"literal\">true</span></span><br><span class=\"line\">  verification_mode: certificate</span><br><span class=\"line\">  keystore.path: certs/transport.p12</span><br><span class=\"line\">  truststore.path: certs/transport.p12</span><br><span class=\"line\"><span class=\"comment\"># Discover existing nodes in the cluster</span></span><br><span class=\"line\">discovery.seed_hosts: [<span class=\"string\">&quot;10.250.0.239:9300&quot;</span>] <span class=\"comment\"># 这里是node-1节点的IP地址和端口号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 而node-3这里会显示如下信息，也就是越是后来加入进来的，这里就会加上之前所有节点的IP地址和端口号</span></span><br><span class=\"line\">discovery.seed_hosts: [<span class=\"string\">&quot;10.250.0.239:9300&quot;</span>, <span class=\"string\">&quot;10.250.0.17:9300&quot;</span>] <span class=\"comment\"># 这里是node-1和node-2节点的IP地址和端口号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#----------------------- END SECURITY AUTO CONFIGURATION -------------------------</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"验证集群状态\">验证集群状态</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>启动完成后，可以通过如下命令查看集群状态：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看集群状态</span></span><br><span class=\"line\">$ curl -u elastic:123456 --cacert /usr/local/elasticsearch/elasticsearch-8.17.3/config/certs/http_ca.crt  https://127.0.0.1:9200/_cluster/health?pretty</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;cluster_name&quot;</span> : <span class=\"string\">&quot;test-elk&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;status&quot;</span> : <span class=\"string\">&quot;green&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;timed_out&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;number_of_nodes&quot;</span> : 3,</span><br><span class=\"line\">  <span class=\"string\">&quot;number_of_data_nodes&quot;</span> : 3,</span><br><span class=\"line\">  <span class=\"string\">&quot;active_primary_shards&quot;</span> : 31,</span><br><span class=\"line\">  <span class=\"string\">&quot;active_shards&quot;</span> : 62,</span><br><span class=\"line\">  <span class=\"string\">&quot;relocating_shards&quot;</span> : 0,</span><br><span class=\"line\">  <span class=\"string\">&quot;initializing_shards&quot;</span> : 0,</span><br><span class=\"line\">  <span class=\"string\">&quot;unassigned_shards&quot;</span> : 0,</span><br><span class=\"line\">  <span class=\"string\">&quot;unassigned_primary_shards&quot;</span> : 0,</span><br><span class=\"line\">  <span class=\"string\">&quot;delayed_unassigned_shards&quot;</span> : 0,</span><br><span class=\"line\">  <span class=\"string\">&quot;number_of_pending_tasks&quot;</span> : 0,</span><br><span class=\"line\">  <span class=\"string\">&quot;number_of_in_flight_fetch&quot;</span> : 0,</span><br><span class=\"line\">  <span class=\"string\">&quot;task_max_waiting_in_queue_millis&quot;</span> : 0,</span><br><span class=\"line\">  <span class=\"string\">&quot;active_shards_percent_as_number&quot;</span> : 100.0</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 查看节点信息，其中 * 表示当前节点为master节点</span></span><br><span class=\"line\">$ curl -u elastic:123456 --cacert /usr/local/elasticsearch/elasticsearch-8.17.3/config/certs/http_ca.crt  https://127.0.0.1:9200/_cat/nodes?v</span><br><span class=\"line\">ip           heap.percent ram.percent cpu load_1m load_5m load_15m node.role   master name</span><br><span class=\"line\">10.250.0.17             8          63  28    1.03    0.38     0.14 cdfhilmrstw -      node-2</span><br><span class=\"line\">10.250.0.173            9          63  22    0.86    0.37     0.19 cdfhilmrstw -      node-3</span><br><span class=\"line\">10.250.0.239            9          78   6    0.38    0.22     0.16 cdfhilmrstw *      node-1</span><br></pre></td></tr></table></figure>\n<h2 id=\"重要说明\">重要说明</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>集群一旦创建完成，则至少需要两个节点运行才能保证集群可用性，否则集群将无法运行。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果<code>node-1</code>节点挂了，集群中剩下的两个节点会重新选择一个新的<code>master</code>节点，不会影响集群的可用性。</p>\n</li>\n<li class=\"lvl-2\">\n<p>一旦关闭<code>node-1</code>，则重新启动<code>node-1</code>节点前要修改其配置文件，否则无法启动成功。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注释掉该配置</span></span><br><span class=\"line\"><span class=\"comment\"># cluster.initial_master_nodes: [&quot;node-1&quot;]</span></span><br><span class=\"line\"><span class=\"comment\"># 加入该配置，实际上最好在重启每个节点前，将每个节点都配置为这样</span></span><br><span class=\"line\">discovery.seed_hosts: [<span class=\"string\">&quot;10.250.0.239:9300&quot;</span>, <span class=\"string\">&quot;10.250.0.17:9300&quot;</span>, <span class=\"string\">&quot;10.250.0.173:9300&quot;</span>]</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 本文介绍如何在linux下安装Elasticsearch集群(三节点) Elasticsearch版本8.17.3 单节点安装参考linux下安装Elasticsearch，本文在此基础上完成集群安装 集群安装 三个节点分别安照单节点的安装方式完成下载，用户配置，环境变量配置，系统参数配置，等等。 任选一个节点作为集群的master节点，我们命名为node-1，其它节点命名为node-2和node-3 先配置node-1节点的配置文件 1234567891011121314151617181920212223# 集群名称cluster.name: test-elk# 节点名称node.name: node-1# 数据存储路径，默认值 $ES_HOME/datapath.data: /usr/local/elasticsearch/data# 日志存储路径，默认值 $ES_HOME/logspath.logs: /usr/local/elasticsearch/logs# 配置ES启动时是否进行内存锁定检查，默认值true，本机内存比较小时设置为falsebootstrap.memory_lock: false# 允许通过任何地址访问，开启远程访问network.host: 0.0.0.0# 配置当前ES节点对外提供服务的http端口，默认 9200http.port: 9200# 配置当前ES节点对外提供服务的tcp端口，默认 9300transport.port: 9300# 集群内的主机列表，开启安全认证时无需配置，注意这里不要进行配置# discovery.seed_hosts: [&quot;127.0.0.1&quot;]# 第一次启动时需要参与选主的节点名称，这里只配置node-1cluster.initial_master_nodes: [&quot;node-1&quot;]#解决跨域问题http.cors.enabled: truehttp.cors.allow-origin: &quot;*&quot; 配置node-2节点的配置文件 12345678910111213141516171819# 集群名称cluster.name: test-elk# 节点名称node.name: node-2# 数据存储路径，默认值 $ES_HOME/datapath.data: /usr/local/elasticsearch/data# 日志存储路径，默认值 $ES_HOME/logspath.logs: /usr/local/elasticsearch/logs# 配置ES启动时是否进行内存锁定检查，默认值true，本机内存比较小时设置为falsebootstrap.memory_lock: false# 允许通过任何地址访问，开启远程访问network.host: 0.0.0.0# 配置当前ES节点对外提供服务的http端口，默认 9200http.port: 9200# 配置当前ES节点对外提供服务的tcp端口，默认 9300transport.port: 9300#解决跨域问题http.cors.enabled: truehttp.cors.allow-origin: &quot;*&quot; 配置node-3节点的配置文件 12345678910111213141516171819# 集群名称cluster.name: test-elk# 节点名称node.name: node-3# 数据存储路径，默认值 $ES_HOME/datapath.data: /usr/local/elasticsearch/data# 日志存储路径，默认值 $ES_HOME/logspath.logs: /usr/local/elasticsearch/logs# 配置ES启动时是否进行内存锁定检查，默认值true，本机内存比较小时设置为falsebootstrap.memory_lock: false# 允许通过任何地址访问，开启远程访问network.host: 0.0.0.0# 配置当前ES节点对外提供服务的http端口，默认 9200http.port: 9200# 配置当前ES节点对外提供服务的tcp端口，默认 9300transport.port: 9300#解决跨域问题http.cors.enabled: truehttp.cors.allow-origin: &quot;*&quot; 启动node-1，启动成功后我们会在日志中看到如下安全认证信息信息，记录其中的加入集群的节点的token信息 1234567891011121314151617181920212223242526272829303132━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━# 这些日志信息提供了 Elasticsearch 8 在首次启动时自动配置的安全特性、生成的默认密码、证书指纹以及如何配置 Kibana 和其他节点加入集群的详细说明。✅ Elasticsearch security features have been automatically configured!✅ Authentication is enabled and cluster connections are encrypted.# 这是 elastic 用户的默认密码。系统建议你使用 bin/elasticsearch-reset-password -u elastic 命令来重置此密码。ℹ️ Password for the elastic user (reset with `bin/elasticsearch-reset-password -u elastic`): BNb=*qz6_M*mXL9uZiSP # 这里会打印出ES自动生成的密码# 这是 HTTP CA 证书的 SHA-256 指纹。CA 证书用于验证 HTTPS 连接的身份。ℹ️ HTTP CA certificate SHA-256 fingerprint: 3f141c16dfc6e165894bc1672084b220dcdd22ffe02116d51ac18003cfaa5a1d# 提供了将 Kibana 配置为使用此 Elasticsearch 集群的步骤。ℹ️ Configure Kibana to use this cluster:# 启动 Kibana 并按照终端中显示的配置链接进行操作。• Run Kibana and click the configuration link in the terminal when Kibana starts.# 复制提供的注册令牌，并在浏览器中打开 Kibana 时粘贴此令牌。令牌在接下来的 30 分钟内有效。# 补充说明：生成新的kibana注册令牌：bin/elasticsearch-create-enrollment-token -s kibana• Copy the following enrollment token and paste it into Kibana in your browser (valid for the next 30 minutes): eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImFSWFBzcFVCTVVmc1d5aUJnbjBtOmRzbVBLQV95UXhDZkJpXzQyWDNEMVEifQ==# 提供了将新的 Elasticsearch 节点加入现有集群的步骤。ℹ️ Configure other nodes to join this cluster:# 使用 bin/elasticsearch --enrollment-token &lt;token&gt; 命令启动新的 Elasticsearch 节点。令牌在接下来的 30 分钟内有效。# 补充说明：生成新的节点注册令牌：bin/elasticsearch-create-enrollment-token -s node• Copy the following enrollment token and start new Elasticsearch nodes with `bin/elasticsearch --enrollment-token &lt;token&gt;` (valid for the next 30 minutes): eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImF4WFBzcFVCTVVmc1d5aUJnbjFtOkFEallPdnpzUzh1MGJqOFpfVFE4a3cifQ==# 如果你在 Docker 中运行 Elasticsearch，可以使用 docker run -e &quot;ENROLLMENT_TOKEN=&lt;token&gt;&quot; docker.elastic.co/elasticsearch/elasticsearch:8.17.3 命令启动新节点。 If you&#x27;re running in Docker, copy the enrollment token and run: `docker run -e &quot;ENROLLMENT_TOKEN=&lt;token&gt;&quot; docker.elastic.co/elasticsearch/elasticsearch:8.17.3`━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ token信息有效时间只有30分钟，超时后可以使用如下命令重新生成新的token 123# 进入node-1节点的ES安装目录，此命令会生成新的节点注册令牌bin/elasticsearch-create-enrollment-token -s nodeeyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6IlpoRVZ4NVVCeXRPajdLeTBqb3BvOmdHRW44ZW5mU0RDZHA2Yy1uSDF4eGcifQ== 启动node-2节点，启动时要带上token信息，node-3与此一样。这里要注意，只有第一次加入集群时启动才需要带上注册令牌，后续启动不需要token信息 123# 进入node-2节点的ES安装目录，此命令会启动ES节点，并加入到集群中# bin/elasticsearch --enrollment-token &lt;token&gt;bin/elasticsearch --enrollment-token eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6IlpoRVZ4NVVCeXRPajdLeTBqb3BvOmdHRW44ZW5mU0RDZHA2Yy1uSDF4eGcifQ== 加入集群失败 在执行bin/elasticsearch --enrollment-token &lt;token&gt;时有可能会遇到如下异常： 1ERROR: Aborting auto configuration because the node keystore contains password settings already, with exit code 78 这通常意味着节点的 keystore 已经包含了密码设置，因此自动配置过程被中止。 产生这种错误的原因大概率是当前ES是从已经安装好的服务器上拷贝过来的，而不是全新安装的，此时我们除了需要清空data目录外，还需要删除 keystore 中的密码 1234567891011# 查看keystore中的密码$ bin/elasticsearch-keystore listkeystore.seedxpack.security.http.ssl.keystore.secure_passwordxpack.security.transport.ssl.keystore.secure_passwordxpack.security.transport.ssl.truststore.secure_password# 删除keystore中的密码$ bin/elasticsearch-keystore remove xpack.security.http.ssl.keystore.secure_password$ bin/elasticsearch-keystore remove xpack.security.transport.ssl.keystore.secure_password$ bin/elasticsearch-keystore remove xpack.security.transport.ssl.truststore.secure_password 再次执行bin/elasticsearch --enrollment-token &lt;token&gt;即可。 另外还可能遇到如下报错： 1ERROR: Aborting enrolling to cluster. Could not communicate with the node on any of the addresses from the enrollment token. All of [10.250.0.239:9200] were attempted., with exit code 69 这是由于token过期了，重新生成新的token即可 启动成功后会在node-2的配置文件中看到如下配置信息 123456789101112131415161718192021222324252627282930#----------------------- BEGIN SECURITY AUTO CONFIGURATION -----------------------## The following settings, TLS certificates, and keys have been automatically# generated to configure Elasticsearch security features on 24-03-2025 07:45:11## --------------------------------------------------------------------------------# Enable security featuresxpack.security.enabled: truexpack.security.enrollment.enabled: true# Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agentsxpack.security.http.ssl: enabled: true keystore.path: certs/http.p12# Enable encryption and mutual authentication between cluster nodesxpack.security.transport.ssl: enabled: true verification_mode: certificate keystore.path: certs/transport.p12 truststore.path: certs/transport.p12# Discover existing nodes in the clusterdiscovery.seed_hosts: [&quot;10.250.0.239:9300&quot;] # 这里是node-1节点的IP地址和端口号## 而node-3这里会显示如下信息，也就是越是后来加入进来的，这里就会加上之前所有节点的IP地址和端口号discovery.seed_hosts: [&quot;10.250.0.239:9300&quot;, &quot;10.250.0.17:9300&quot;] # 这里是node-1和node-2节点的IP地址和端口号#----------------------- END SECURITY AUTO CONFIGURATION ------------------------- 验证集群状态 启动完成后，可以通过如下命令查看集群状态： 1234567891011121314151617181920212223242526# 查看集群状态$ curl -u elastic:123456 --cacert /usr/local/elasticsearch/elasticsearch-8.17.3/config/certs/http_ca.crt https://127.0.0.1:9200/_cluster/health?pretty&#123; &quot;cluster_name&quot; : &quot;test-elk&quot;, &quot;status&quot; : &quot;green&quot;, &quot;timed_out&quot; : false, &quot;number_of_nodes&quot; : 3, &quot;number_of_data_nodes&quot; : 3, &quot;active_primary_shards&quot; : 31, &quot;active_shards&quot; : 62, &quot;relocating_shards&quot; : 0, &quot;initializing_shards&quot; : 0, &quot;unassigned_shards&quot; : 0, &quot;unassigned_primary_shards&quot; : 0, &quot;delayed_unassigned_shards&quot; : 0, &quot;number_of_pending_tasks&quot; : 0, &quot;number_of_in_flight_fetch&quot; : 0, &quot;task_max_waiting_in_queue_millis&quot; : 0, &quot;active_shards_percent_as_number&quot; : 100.0&#125;# 查看节点信息，其中 * 表示当前节点为master节点$ curl -u elastic:123456 --cacert /usr/local/elasticsearch/elasticsearch-8.17.3/config/certs/http_ca.crt https://127.0.0.1:9200/_cat/nodes?vip heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name10.250.0.17 8 63 28 1.03 0.38 0.14 cdfhilmrstw - node-210.250.0.173 9 63 22 0.86 0.37 0.19 cdfhilmrstw - node-310.250.0.239 9 78 6 0.38 0.22 0.16 cdfhilmrstw * node-1 重要说明 集群一旦创建完成，则至少需要两个节点运行才能保证集群可用性，否则集群将无法运行。 如果node-1节点挂了，集群中剩下的两个节点会重新选择一个新的master节点，不会影响集群的可用性。 一旦关闭node-1，则重新启动node-1节点前要修改其配置文件，否则无法启动成功。 1234# 注释掉该配置# cluster.initial_master_nodes: [&quot;node-1&quot;]# 加入该配置，实际上最好在重启每个节点前，将每个节点都配置为这样discovery.seed_hosts: [&quot;10.250.0.239:9300&quot;, &quot;10.250.0.17:9300&quot;, &quot;10.250.0.173:9300&quot;]","summary":"摘要 本文介绍如何在linux下安装Elasticsearch集群(三节点) Elasticsearch版本8.17.3 单节点安装参考linux下安装Elasticsearch，本文在此基础上完成集群安装","date_published":"2025-03-24T13:30:05.000Z","tags":["技术","elastic","elasticsearch","elasticsearch"]},{"id":"https://blog.hanqunfeng.com/2025/03/21/kibana-01-install/","url":"https://blog.hanqunfeng.com/2025/03/21/kibana-01-install/","title":"linux下安装Kibana","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍如何在linux下安装Kibana</p>\n</li>\n<li class=\"lvl-2\">\n<p>Kibana版本8.17.3</p>\n</li>\n<li class=\"lvl-2\">\n<p>Elasticsearch版本8.17.3，<a href=\"/2025/03/20/elasticsearch-01-install/\" title=\"linux下安装Elasticsearch\">linux下安装Elasticsearch</a></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"下载\">下载</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>下载地址：<a href=\"https://www.elastic.co/cn/downloads/past-releases#kibana\">https://www.elastic.co/cn/downloads/past-releases#kibana</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>选择对应的版本：这里选择当前的最新版<code>Kibana 8.17.3</code>，之后选择对应的操作系统<code>LINUX X86_64</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://artifacts.elastic.co/downloads/kibana/kibana-8.17.3-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>下载完成后解压到<code>/usr/local/kibana</code>目录下，解压命令如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /usr/local/kibana</span><br><span class=\"line\">tar -zxvf kibana-8.17.3-linux-x86_64.tar.gz -C /usr/local/kibana</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建启动用户\">创建启动用户</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>elasticsearch和kibana都不能用root用户启动</p>\n</li>\n<li class=\"lvl-2\">\n<p>创建用户<code>elastic</code>，并设置密码，这一步我们在安装elasticsearch的时候已经配置过了，这里就不再赘述了</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd elastic</span><br><span class=\"line\">passwd elastic</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>修改elasticsearch安装目录的用户权限</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chown</span> -R elastic:elastic /usr/local/kibana</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>切换到elastic用户下执行命令</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su - elastic</span><br></pre></td></tr></table></figure>\n<h2 id=\"关联Kibana和Elasticsearch\">关联Kibana和Elasticsearch</h2>\n<h3 id=\"方法1：注册令牌Token关联-官方推荐\">方法1：注册令牌Token关联[官方推荐]</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>注意此方法要求<code>elasticsearch</code>必须开启安全认证，而且<code>xpack.security.http.ssl.enabled</code> 必须设置为 true</p>\n</li>\n<li class=\"lvl-2\">\n<p>配置启动文件，进入<code>/usr/local/kibana/kibana-8.17.3/config</code>目录，修改<code>kibana.yml</code>文件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 端口</span></span><br><span class=\"line\">server.port: 5601</span><br><span class=\"line\"><span class=\"comment\"># kibana服务器的ip，4个0表示任何一个网卡都可以访问</span></span><br><span class=\"line\">server.host: <span class=\"string\">&quot;0.0.0.0&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 中文</span></span><br><span class=\"line\">i18n.locale: <span class=\"string\">&quot;zh-CN&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 配置https</span></span><br><span class=\"line\">elasticsearch.ssl.verificationMode: <span class=\"string\">&#x27;certificate&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进入elasticsearch安装目录，创建kibana注册令牌</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/elasticsearch-create-enrollment-token -s kibana</span><br><span class=\"line\"><span class=\"comment\"># 输出结果如下</span></span><br><span class=\"line\">eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImxlTWh1SlVCcVJWQUw4WGFjMk1HOkVHYTYxcWlfVEotQWQ1Y3dQdXcyckEifQ==</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进入kibana安装目录，通过下面的命令注册 Kibana</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># bin/kibana-setup --enrollment-token &lt;enrollment-token&gt;</span></span><br><span class=\"line\">bin/kibana-setup --enrollment-token eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImxlTWh1SlVCcVJWQUw4WGFjMk1HOkVHYTYxcWlfVEotQWQ1Y3dQdXcyckEifQ==</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注册成功会输出</span></span><br><span class=\"line\">✔ Kibana configured successfully.</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p>如果ES的<code>xpack.security.http.ssl.enabled</code> 设置为 false，注册Kibana时会报错，报错信息如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">✖ Unable to connect to Elasticsearch with the provided enrollment token: Unable to connect to any of the provided hosts.</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">注册成功后会在<code>/usr/local/kibana/kibana-8.17.3/config/kibana.yml</code>文件中添加如下内容：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># This section was automatically generated during setup.</span></span><br><span class=\"line\"><span class=\"comment\"># ES服务URL</span></span><br><span class=\"line\">elasticsearch.hosts: [<span class=\"string\">&#x27;https://10.250.0.239:9200&#x27;</span>] <span class=\"comment\"># 10.250.0.239是本机的内网IP</span></span><br><span class=\"line\"><span class=\"comment\"># 指定用于认证的服务账户令牌</span></span><br><span class=\"line\">elasticsearch.serviceAccountToken: AAEAAWVsYXN0aWMva2liYW5hL2Vucm9sbC1wcm9jZXNzLXRva2VuLTE3NDI1NTA5ODU0MTg6Z2lJUERGaG1TR3VNcC1sb0RyMnMydw</span><br><span class=\"line\"><span class=\"comment\"># 指定用来验证 Elasticsearch 服务器 SSL 证书的 CA 证书路径</span></span><br><span class=\"line\">elasticsearch.ssl.certificateAuthorities: [/usr/local/kibana/kibana-8.17.3/data/ca_1742550986498.crt]</span><br><span class=\"line\"><span class=\"comment\"># 配置 Fleet 的输出目标。Fleet 是 Elastic 的一个管理工具，用于管理和监控弹性栈（Elastic Stack）。这个配置定义了 Fleet 默认输出的目标，即 Elasticsearch。</span></span><br><span class=\"line\">xpack.fleet.outputs: [&#123;<span class=\"built_in\">id</span>: fleet-default-output, name: default, is_default: <span class=\"literal\">true</span>, is_default_monitoring: <span class=\"literal\">true</span>, <span class=\"built_in\">type</span>: elasticsearch, hosts: [<span class=\"string\">&#x27;https://10.250.0.239:9200&#x27;</span>], ca_trusted_fingerprint: 3f141c16dfc6e165894bc1672084b220dcdd22ffe02116d51ac18003cfaa5a1d&#125;]</span><br><span class=\"line\">  <span class=\"comment\"># id: fleet-default-output：输出的唯一标识符。</span></span><br><span class=\"line\">  <span class=\"comment\"># name: default：输出的名称。</span></span><br><span class=\"line\">  <span class=\"comment\"># is_default: true：表示这是默认输出。</span></span><br><span class=\"line\">  <span class=\"comment\"># is_default_monitoring: true：表示这是默认的监控输出。</span></span><br><span class=\"line\">  <span class=\"comment\"># type: elasticsearch：输出类型是 Elasticsearch。</span></span><br><span class=\"line\">  <span class=\"comment\"># hosts: [&#x27;https://10.250.0.239:9200&#x27;]：连接到的 Elasticsearch 主机地址。</span></span><br><span class=\"line\">  <span class=\"comment\"># ca_trusted_fingerprint: 3f141c16dfc6e165894bc1672084b220dcdd22ffe02116d51ac18003cfaa5a1d：CA 证书的信任指纹，用于验证 CA 证书的身份。</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"方法2：用户名密码关联\">方法2：用户名密码关联</h3>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p>创建kibana连接elasticsearch的用户密码，不能用 <code>elastic</code> 这个用户，因为这个是超级用户，要使用 kibana_system 用户</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入elasticsearch安装目录，执行下面的命令重置 kibana_system 用户的密码</span></span><br><span class=\"line\">bin/elasticsearch-reset-password -u kibana_system -i</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p>配置启动文件，进入<code>/usr/local/kibana/kibana-8.17.3/config</code>目录，修改<code>kibana.yml</code>文件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 端口</span></span><br><span class=\"line\">server.port: 5601</span><br><span class=\"line\"><span class=\"comment\"># kibana服务器的ip，4个0表示任何一个网卡都可以访问</span></span><br><span class=\"line\">server.host: <span class=\"string\">&quot;0.0.0.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># elasctisearch关联，我这里将elasticsearch与kibana安装在同一台机器上了</span></span><br><span class=\"line\"><span class=\"comment\"># 注意这里是https，而且要配置证书路径</span></span><br><span class=\"line\">elasticsearch.hosts: [<span class=\"string\">&quot;https://localhost:9200&quot;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 指定https证书路径</span></span><br><span class=\"line\">elasticsearch.ssl.certificateAuthorities: [<span class=\"string\">&quot;/usr/local/elasticsearch/elasticsearch-8.17.3/config/certs/http_ca.crt&quot;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 用户名密码</span></span><br><span class=\"line\">elasticsearch.username: <span class=\"string\">&quot;kibana_system&quot;</span></span><br><span class=\"line\">elasticsearch.password: <span class=\"string\">&quot;123456&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 中文</span></span><br><span class=\"line\">i18n.locale: <span class=\"string\">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p>如果ES没有开启安全认证，则只需要进行如下配置即可：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 端口</span></span><br><span class=\"line\">server.port: 5601</span><br><span class=\"line\"><span class=\"comment\"># kibana服务器的ip，4个0表示任何一个网卡都可以访问</span></span><br><span class=\"line\">server.host: <span class=\"string\">&quot;0.0.0.0&quot;</span></span><br><span class=\"line\">elasticsearch.hosts: [<span class=\"string\">&quot;http://localhost:9200&quot;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 中文</span></span><br><span class=\"line\">i18n.locale: <span class=\"string\">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure>\n</div>\n<h2 id=\"启动Kibana服务\">启动Kibana服务</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进入<code>/usr/local/kibana/kibana-8.17.3</code>目录，执行以下命令启动服务</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./bin/kibana</span><br><span class=\"line\"><span class=\"comment\"># 后台启动，并将日志写入到logs/kibana.log</span></span><br><span class=\"line\"><span class=\"built_in\">nohup</span> bin/kibana &gt; logs/kibana.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>访问地址：<a href=\"http://localhost:5601\">http://localhost:5601</a>，这里注意登录用户需要使用：<code>elastic</code>，而不是<code>kibana_system</code>。</p>\n</li>\n</ul>\n<h2 id=\"启动Kibana服务后的日志告警\">启动Kibana服务后的日志告警</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Kibana服务启动后，会在<code>/usr/local/kibana/kibana-8.17.3/logs/kibana.log</code>文件中记录一些错误日志，如果出现错误，可以查看日志，解决错误。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[WARN ][plugins.fleet] xpack.encryptedSavedObjects.encryptionKey is not configured, private key passphrase is being stored <span class=\"keyword\">in</span> plain text</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这个警告信息表明 Kibana 的某些插件（如 Fleet）在缺少 xpack.encryptedSavedObjects.encryptionKey 配置的情况下运行，导致私钥密码和代理卸载令牌以明文形式存储。为了提高安全性，建议配置一个加密密钥。</p>\n</li>\n<li class=\"lvl-2\">\n<p>生成加密密钥</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ bin/kibana-encryption-keys generate</span><br><span class=\"line\">Kibana is currently running with legacy OpenSSL providers enabled! For details and instructions on how to <span class=\"built_in\">disable</span> see https://www.elastic.co/guide/en/kibana/8.17/production.html#openssl-legacy-provider</span><br><span class=\"line\"><span class=\"comment\">## Kibana Encryption Key Generation Utility</span></span><br><span class=\"line\"></span><br><span class=\"line\">The <span class=\"string\">&#x27;generate&#x27;</span> <span class=\"built_in\">command</span> guides you through the process of setting encryption keys <span class=\"keyword\">for</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">xpack.encryptedSavedObjects.encryptionKey</span><br><span class=\"line\">    Used to encrypt stored objects such as dashboards and visualizations</span><br><span class=\"line\">    https://www.elastic.co/guide/en/kibana/current/xpack-security-secure-saved-objects.html#xpack-security-secure-saved-objects</span><br><span class=\"line\"></span><br><span class=\"line\">xpack.reporting.encryptionKey</span><br><span class=\"line\">    Used to encrypt saved reports</span><br><span class=\"line\">    https://www.elastic.co/guide/en/kibana/current/reporting-settings-kb.html#general-reporting-settings</span><br><span class=\"line\"></span><br><span class=\"line\">xpack.security.encryptionKey</span><br><span class=\"line\">    Used to encrypt session information</span><br><span class=\"line\">    https://www.elastic.co/guide/en/kibana/current/security-settings-kb.html#security-session-and-cookie-settings</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Already defined settings are ignored and can be regenerated using the --force flag.  Check the documentation links <span class=\"keyword\">for</span> instructions on how to rotate encryption keys.</span><br><span class=\"line\">Definitions should be <span class=\"built_in\">set</span> <span class=\"keyword\">in</span> the kibana.yml used configure Kibana.</span><br><span class=\"line\"></span><br><span class=\"line\">Settings:</span><br><span class=\"line\">xpack.encryptedSavedObjects.encryptionKey: 47967e4b78bd26decb622b78f0ddd324</span><br><span class=\"line\">xpack.reporting.encryptionKey: 78b5f603f3b0e6ad76c13a0f5d00cde0</span><br><span class=\"line\">xpack.security.encryptionKey: 8aa7f4dfbc4e734a2a9f92a2730b36af</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>配置 Kibana 以使用加密密钥，添加到 kibana.yml 文件中：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xpack.encryptedSavedObjects.encryptionKey: 47967e4b78bd26decb622b78f0ddd324</span><br><span class=\"line\">xpack.reporting.encryptionKey: 78b5f603f3b0e6ad76c13a0f5d00cde0</span><br><span class=\"line\">xpack.security.encryptionKey: 8aa7f4dfbc4e734a2a9f92a2730b36af</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>重启 Kibana 服务 以应用更改。</p>\n</li>\n</ul>\n<h2 id=\"Kibana-自启动脚本\">Kibana 自启动脚本</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建服务文件</span></span><br><span class=\"line\">$ vim /usr/lib/systemd/system/kibana.service</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=kibana</span><br><span class=\"line\">Documentation=https://www.elastic.co</span><br><span class=\"line\">After=es.service</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">PrivateTmp=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 指定ES用户</span></span><br><span class=\"line\">User=elastic</span><br><span class=\"line\">Group=elastic</span><br><span class=\"line\">LimitNOFILE=100000</span><br><span class=\"line\">LimitNPROC=100000</span><br><span class=\"line\">Restart=<span class=\"built_in\">yes</span></span><br><span class=\"line\"><span class=\"comment\"># 启动命令</span></span><br><span class=\"line\">ExecStart=/usr/local/kibana/kibana-8.17.3/bin/kibana</span><br><span class=\"line\">ExecRestart=/bin/kill -s HUP <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\">ExecStop=/bin/kill -s QUIT <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新加载</span></span><br><span class=\"line\">$ systemctl daemon-reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">$ systemctl start kibana</span><br><span class=\"line\"><span class=\"comment\"># 停止</span></span><br><span class=\"line\">$ systemctl stop kibana</span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">$ systemctl status kibana</span><br><span class=\"line\"><span class=\"comment\"># 设置开机启动</span></span><br><span class=\"line\">$ systemctl <span class=\"built_in\">enable</span> kibana</span><br></pre></td></tr></table></figure>","content_text":"摘要 本文介绍如何在linux下安装Kibana Kibana版本8.17.3 Elasticsearch版本8.17.3，linux下安装Elasticsearch 下载 下载地址：https://www.elastic.co/cn/downloads/past-releases#kibana 选择对应的版本：这里选择当前的最新版Kibana 8.17.3，之后选择对应的操作系统LINUX X86_64 1wget https://artifacts.elastic.co/downloads/kibana/kibana-8.17.3-linux-x86_64.tar.gz 下载完成后解压到/usr/local/kibana目录下，解压命令如下： 12mkdir /usr/local/kibanatar -zxvf kibana-8.17.3-linux-x86_64.tar.gz -C /usr/local/kibana 创建启动用户 elasticsearch和kibana都不能用root用户启动 创建用户elastic，并设置密码，这一步我们在安装elasticsearch的时候已经配置过了，这里就不再赘述了 12useradd elasticpasswd elastic 修改elasticsearch安装目录的用户权限 1chown -R elastic:elastic /usr/local/kibana 切换到elastic用户下执行命令 1su - elastic 关联Kibana和Elasticsearch 方法1：注册令牌Token关联[官方推荐] 注意此方法要求elasticsearch必须开启安全认证，而且xpack.security.http.ssl.enabled 必须设置为 true 配置启动文件，进入/usr/local/kibana/kibana-8.17.3/config目录，修改kibana.yml文件 12345678# 端口server.port: 5601# kibana服务器的ip，4个0表示任何一个网卡都可以访问server.host: &quot;0.0.0.0&quot;# 中文i18n.locale: &quot;zh-CN&quot;# 配置httpselasticsearch.ssl.verificationMode: &#x27;certificate&#x27; 进入elasticsearch安装目录，创建kibana注册令牌 123bin/elasticsearch-create-enrollment-token -s kibana# 输出结果如下eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImxlTWh1SlVCcVJWQUw4WGFjMk1HOkVHYTYxcWlfVEotQWQ1Y3dQdXcyckEifQ== 进入kibana安装目录，通过下面的命令注册 Kibana 12345# bin/kibana-setup --enrollment-token &lt;enrollment-token&gt;bin/kibana-setup --enrollment-token eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImxlTWh1SlVCcVJWQUw4WGFjMk1HOkVHYTYxcWlfVEotQWQ1Y3dQdXcyckEifQ==# 注册成功会输出✔ Kibana configured successfully. 如果ES的xpack.security.http.ssl.enabled 设置为 false，注册Kibana时会报错，报错信息如下： 1✖ Unable to connect to Elasticsearch with the provided enrollment token: Unable to connect to any of the provided hosts. 注册成功后会在/usr/local/kibana/kibana-8.17.3/config/kibana.yml文件中添加如下内容： 12345678910111213141516# This section was automatically generated during setup.# ES服务URLelasticsearch.hosts: [&#x27;https://10.250.0.239:9200&#x27;] # 10.250.0.239是本机的内网IP# 指定用于认证的服务账户令牌elasticsearch.serviceAccountToken: AAEAAWVsYXN0aWMva2liYW5hL2Vucm9sbC1wcm9jZXNzLXRva2VuLTE3NDI1NTA5ODU0MTg6Z2lJUERGaG1TR3VNcC1sb0RyMnMydw# 指定用来验证 Elasticsearch 服务器 SSL 证书的 CA 证书路径elasticsearch.ssl.certificateAuthorities: [/usr/local/kibana/kibana-8.17.3/data/ca_1742550986498.crt]# 配置 Fleet 的输出目标。Fleet 是 Elastic 的一个管理工具，用于管理和监控弹性栈（Elastic Stack）。这个配置定义了 Fleet 默认输出的目标，即 Elasticsearch。xpack.fleet.outputs: [&#123;id: fleet-default-output, name: default, is_default: true, is_default_monitoring: true, type: elasticsearch, hosts: [&#x27;https://10.250.0.239:9200&#x27;], ca_trusted_fingerprint: 3f141c16dfc6e165894bc1672084b220dcdd22ffe02116d51ac18003cfaa5a1d&#125;] # id: fleet-default-output：输出的唯一标识符。 # name: default：输出的名称。 # is_default: true：表示这是默认输出。 # is_default_monitoring: true：表示这是默认的监控输出。 # type: elasticsearch：输出类型是 Elasticsearch。 # hosts: [&#x27;https://10.250.0.239:9200&#x27;]：连接到的 Elasticsearch 主机地址。 # ca_trusted_fingerprint: 3f141c16dfc6e165894bc1672084b220dcdd22ffe02116d51ac18003cfaa5a1d：CA 证书的信任指纹，用于验证 CA 证书的身份。 方法2：用户名密码关联 创建kibana连接elasticsearch的用户密码，不能用 elastic 这个用户，因为这个是超级用户，要使用 kibana_system 用户 12# 进入elasticsearch安装目录，执行下面的命令重置 kibana_system 用户的密码bin/elasticsearch-reset-password -u kibana_system -i 配置启动文件，进入/usr/local/kibana/kibana-8.17.3/config目录，修改kibana.yml文件 123456789101112131415# 端口server.port: 5601# kibana服务器的ip，4个0表示任何一个网卡都可以访问server.host: &quot;0.0.0.0&quot;# elasctisearch关联，我这里将elasticsearch与kibana安装在同一台机器上了# 注意这里是https，而且要配置证书路径elasticsearch.hosts: [&quot;https://localhost:9200&quot;]# 指定https证书路径elasticsearch.ssl.certificateAuthorities: [&quot;/usr/local/elasticsearch/elasticsearch-8.17.3/config/certs/http_ca.crt&quot;]# 用户名密码elasticsearch.username: &quot;kibana_system&quot;elasticsearch.password: &quot;123456&quot;# 中文i18n.locale: &quot;zh-CN&quot; 如果ES没有开启安全认证，则只需要进行如下配置即可： 1234567# 端口server.port: 5601# kibana服务器的ip，4个0表示任何一个网卡都可以访问server.host: &quot;0.0.0.0&quot;elasticsearch.hosts: [&quot;http://localhost:9200&quot;]# 中文i18n.locale: &quot;zh-CN&quot; 启动Kibana服务 进入/usr/local/kibana/kibana-8.17.3目录，执行以下命令启动服务 123./bin/kibana# 后台启动，并将日志写入到logs/kibana.lognohup bin/kibana &gt; logs/kibana.log 2&gt;&amp;1 &amp; 访问地址：http://localhost:5601，这里注意登录用户需要使用：elastic，而不是kibana_system。 启动Kibana服务后的日志告警 Kibana服务启动后，会在/usr/local/kibana/kibana-8.17.3/logs/kibana.log文件中记录一些错误日志，如果出现错误，可以查看日志，解决错误。 1[WARN ][plugins.fleet] xpack.encryptedSavedObjects.encryptionKey is not configured, private key passphrase is being stored in plain text 这个警告信息表明 Kibana 的某些插件（如 Fleet）在缺少 xpack.encryptedSavedObjects.encryptionKey 配置的情况下运行，导致私钥密码和代理卸载令牌以明文形式存储。为了提高安全性，建议配置一个加密密钥。 生成加密密钥 1234567891011121314151617181920212223242526$ bin/kibana-encryption-keys generateKibana is currently running with legacy OpenSSL providers enabled! For details and instructions on how to disable see https://www.elastic.co/guide/en/kibana/8.17/production.html#openssl-legacy-provider## Kibana Encryption Key Generation UtilityThe &#x27;generate&#x27; command guides you through the process of setting encryption keys for:xpack.encryptedSavedObjects.encryptionKey Used to encrypt stored objects such as dashboards and visualizations https://www.elastic.co/guide/en/kibana/current/xpack-security-secure-saved-objects.html#xpack-security-secure-saved-objectsxpack.reporting.encryptionKey Used to encrypt saved reports https://www.elastic.co/guide/en/kibana/current/reporting-settings-kb.html#general-reporting-settingsxpack.security.encryptionKey Used to encrypt session information https://www.elastic.co/guide/en/kibana/current/security-settings-kb.html#security-session-and-cookie-settingsAlready defined settings are ignored and can be regenerated using the --force flag. Check the documentation links for instructions on how to rotate encryption keys.Definitions should be set in the kibana.yml used configure Kibana.Settings:xpack.encryptedSavedObjects.encryptionKey: 47967e4b78bd26decb622b78f0ddd324xpack.reporting.encryptionKey: 78b5f603f3b0e6ad76c13a0f5d00cde0xpack.security.encryptionKey: 8aa7f4dfbc4e734a2a9f92a2730b36af 配置 Kibana 以使用加密密钥，添加到 kibana.yml 文件中： 123xpack.encryptedSavedObjects.encryptionKey: 47967e4b78bd26decb622b78f0ddd324xpack.reporting.encryptionKey: 78b5f603f3b0e6ad76c13a0f5d00cde0xpack.security.encryptionKey: 8aa7f4dfbc4e734a2a9f92a2730b36af 重启 Kibana 服务 以应用更改。 Kibana 自启动脚本 1234567891011121314151617181920212223242526272829303132333435# 创建服务文件$ vim /usr/lib/systemd/system/kibana.service[Unit]Description=kibanaDocumentation=https://www.elastic.coAfter=es.service[Service]Type=simplePrivateTmp=true# 指定ES用户User=elasticGroup=elasticLimitNOFILE=100000LimitNPROC=100000Restart=yes# 启动命令ExecStart=/usr/local/kibana/kibana-8.17.3/bin/kibanaExecRestart=/bin/kill -s HUP $MAINPIDExecStop=/bin/kill -s QUIT $MAINPID[Install]WantedBy=multi-user.target# 重新加载$ systemctl daemon-reload# 启动$ systemctl start kibana# 停止$ systemctl stop kibana# 查看状态$ systemctl status kibana# 设置开机启动$ systemctl enable kibana","summary":"摘要 本文介绍如何在linux下安装Kibana Kibana版本8.17.3 Elasticsearch版本8.17.3，linux下安装Elasticsearch","date_published":"2025-03-21T13:30:05.000Z","tags":["技术","elastic","kibana","elasticsearch","kibana"]},{"id":"https://blog.hanqunfeng.com/2025/03/20/elasticsearch-01-install/","url":"https://blog.hanqunfeng.com/2025/03/20/elasticsearch-01-install/","title":"linux下安装Elasticsearch","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍如何在linux下安装Elasticsearch</p>\n</li>\n<li class=\"lvl-2\">\n<p>Elasticsearch版本8.17.3</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"下载\">下载</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>下载地址：<a href=\"https://www.elastic.co/cn/downloads/past-releases#elasticsearch\">https://www.elastic.co/cn/downloads/past-releases#elasticsearch</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>选择对应的版本：这里选择当前的最新版<code>Elasticsearch 8.17.3</code>，之后选择对应的操作系统<code>LINUX X86_64</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.17.3-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>下载完成后解压到<code>/usr/local/elasticsearch</code>目录下，解压命令如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /usr/local/elasticsearch</span><br><span class=\"line\">tar -zxvf elasticsearch-8.17.3-linux-x86_64.tar.gz -C /usr/local/elasticsearch</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建启动用户\">创建启动用户</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>elasticsearch和kibana都不能用root用户启动</p>\n</li>\n<li class=\"lvl-2\">\n<p>创建用户<code>elastic</code>，并设置密码</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd elastic</span><br><span class=\"line\">passwd elastic</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>修改elasticsearch安装目录的用户权限</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chown</span> -R elastic:elastic /usr/local/elasticsearch</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置环境变量\">配置环境变量</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进入elastic用户主目录，/home/elastic目录下，设置用户级别的环境变量</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到elastic用户</span></span><br><span class=\"line\">su - elastic</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>vim .bash_profile</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Elasticsearch安装目录，它用于定位Elasticsearch的配置文件、插件和其他相关资源。</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> ES_HOME=/usr/local/elasticsearch/elasticsearch-8.17.3</span><br><span class=\"line\"><span class=\"comment\"># Elasticsearch使用的JDK安装目录，在启动Elasticsearch时，它会检查ES_JAVA_HOME环境变量并使用其中的Java路径。</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> ES_JAVA_HOME=/usr/local/elasticsearch/elasticsearch-8.17.3/jdk/</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>执行以下命令使配置生效</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> .bash_profile</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置JVM参数（可选）\">配置JVM参数（可选）</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进入<code>/usr/local/elasticsearch/elasticsearch-8.17.3/config</code>目录，修改<code>jvm.options</code>文件，调整jvm堆内存大小</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Xms4g <span class=\"comment\"># 设置最小堆内存，默认4g，不能小于1g</span></span><br><span class=\"line\">-Xmx4g <span class=\"comment\"># 设置最大堆内存，默认4g，Xmx不要超过机器内存的50%，不要超过30g</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"创建数据和日志存储目录\">创建数据和日志存储目录</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到elastic用户</span></span><br><span class=\"line\">su - elastic</span><br><span class=\"line\"><span class=\"comment\"># 创建目录</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> /usr/local/elasticsearch/data /usr/local/elasticsearch/log</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置启动文件\">配置启动文件</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进入<code>/usr/local/elasticsearch/elasticsearch-8.17.3/config</code>目录，修改<code>elasticsearch.yml</code>文件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 集群名称</span></span><br><span class=\"line\">cluster.name: test-elk</span><br><span class=\"line\"><span class=\"comment\"># 节点名称</span></span><br><span class=\"line\">node.name: node-1</span><br><span class=\"line\"><span class=\"comment\"># 数据存储路径，默认值 $ES_HOME/data</span></span><br><span class=\"line\">path.data: /usr/local/elasticsearch/data</span><br><span class=\"line\"><span class=\"comment\"># 日志存储路径，默认值 $ES_HOME/logs</span></span><br><span class=\"line\">path.logs: /usr/local/elasticsearch/logs</span><br><span class=\"line\"><span class=\"comment\"># 配置ES启动时是否进行内存锁定检查，默认值true，本机内存比较小时设置为false</span></span><br><span class=\"line\">bootstrap.memory_lock: <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 允许通过任何地址访问，开启远程访问</span></span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\"><span class=\"comment\"># 配置当前ES节点对外提供服务的http端口，默认 9200</span></span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\"><span class=\"comment\"># 配置当前ES节点对外提供服务的tcp端口，默认 9300</span></span><br><span class=\"line\">transport.port: 9300</span><br><span class=\"line\"><span class=\"comment\"># 集群内的主机列表，开启安全认证时无需配置</span></span><br><span class=\"line\"><span class=\"comment\"># discovery.seed_hosts: [&quot;127.0.0.1&quot;]</span></span><br><span class=\"line\"><span class=\"comment\"># 第一次启动时需要参与选主的节点名称</span></span><br><span class=\"line\">cluster.initial_master_nodes: [<span class=\"string\">&quot;node-1&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#解决跨域问题</span></span><br><span class=\"line\">http.cors.enabled: <span class=\"literal\">true</span></span><br><span class=\"line\">http.cors.allow-origin: <span class=\"string\">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"启动ElasticSearch服务\">启动ElasticSearch服务</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进入<code>/usr/local/elasticsearch/elasticsearch-8.17.3</code>目录，执行以下命令启动服务</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./bin/elasticsearch</span><br><span class=\"line\"><span class=\"comment\"># 后台启动</span></span><br><span class=\"line\">./bin/elasticsearch -d</span><br></pre></td></tr></table></figure>\n<h2 id=\"ES启动前的引导检查\">ES启动前的引导检查</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ES启动时，默认会进行引导检查，所谓引导检查就是在服务启动之前对一些重要的配置项进行检查，检查其配置值是否是合理的。引导检查包括对JVM大小、内存锁、虚拟内存、最大线程数、集群发现相关配置等相关的检查，如果某一项或者几项的配置不合理，ES会拒绝启动服务。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果启动服务时，报以下错误，则需要解决引导检查中的问题</p>\n</li>\n<li class=\"lvl-2\">\n<p>1.max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144];</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">原因：最大虚拟内存太小,调大系统的虚拟内存</li>\n<li class=\"lvl-6\">解决办法：</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># root用户下运行</span></span><br><span class=\"line\">vim /etc/sysctl.conf</span><br><span class=\"line\"><span class=\"comment\"># 追加以下内容：</span></span><br><span class=\"line\">vm.max_map_count=262144</span><br><span class=\"line\"><span class=\"comment\"># 保存退出之后执行如下命令：</span></span><br><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-2\">\n<p>2.max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">原因：文件描述符太小，调大系统的文件描述符</li>\n<li class=\"lvl-6\">解决办法：</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># root用户下运行</span></span><br><span class=\"line\">vim /etc/security/limits.conf</span><br><span class=\"line\"><span class=\"comment\"># 末尾添加如下配置：</span></span><br><span class=\"line\">* soft nofile 65536</span><br><span class=\"line\">* hard nofile 65536</span><br><span class=\"line\">* soft <span class=\"built_in\">nproc</span> 4096</span><br><span class=\"line\">* hard <span class=\"built_in\">nproc</span> 4096</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-2\">\n<p>如果只是单节点的开发环境，则可以关闭引导检查，生成环境不建议这样做，因为关闭引导检查后，ES服务将无法保证集群的高可用性。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入elasticsearch安装目录</span></span><br><span class=\"line\">vim config/elasticsearch.yml</span><br><span class=\"line\"><span class=\"comment\"># 添加如下配置：</span></span><br><span class=\"line\"><span class=\"comment\"># 指定节点为单节点，可以绕过引导检查</span></span><br><span class=\"line\">discovery.type: single-node</span><br></pre></td></tr></table></figure>\n<h2 id=\"服务正常启动后仍然不能正常访问\">服务正常启动后仍然不能正常访问</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>访问服务</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://127.0.0.1:9200</span><br><span class=\"line\">curl: (52) Empty reply from server</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看日志<code>/usr/local/elasticsearch/elasticsearch-8.17.3/logs/test-elk.log</code>，发现报如下警告：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[WARN ][o.e.h.n.Netty4HttpServerTransport] [node-1] received plaintext http traffic on an https channel, closing connection Netty4HttpChannel&#123;localAddress=/127.0.0.1:9200, remoteAddress=/127.0.0.1:38426&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>原因是ES在启动服务时默认开启了 <code>X-Pack 安全功能</code>，查看配置文件<code>/usr/local/elasticsearch/elasticsearch-8.17.3/config/elasticsearch.yml</code>，发现配置项<code>xpack.security.xxx</code>相关配置项被自动添加了，如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#----------------------- BEGIN SECURITY AUTO CONFIGURATION -----------------------</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># The following settings, TLS certificates, and keys have been automatically</span></span><br><span class=\"line\"><span class=\"comment\"># generated to configure Elasticsearch security features on 20-03-2025 08:53:20</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># --------------------------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable security features</span></span><br><span class=\"line\"><span class=\"comment\"># 启用 Elasticsearch 的安全特性，包括用户认证、角色管理、加密等。</span></span><br><span class=\"line\"><span class=\"comment\"># 开启了 X-Pack 安全功能，这意味着你需要进行用户认证才能访问 Elasticsearch。</span></span><br><span class=\"line\"><span class=\"comment\"># 如果需要关闭 X-Pack 安全功能，你可以将 xpack.security.enabled 设置为 false。</span></span><br><span class=\"line\">xpack.security.enabled: <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 启用安全注册功能，允许通过交互式向导来配置安全设置。</span></span><br><span class=\"line\"><span class=\"comment\"># 这使得你可以通过 Kibana 或命令行工具来自动配置 SSL 证书和其他安全设置。</span></span><br><span class=\"line\">xpack.security.enrollment.enabled: <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents</span></span><br><span class=\"line\"><span class=\"comment\"># 启用 HTTP API 客户端连接的加密</span></span><br><span class=\"line\"><span class=\"comment\"># Kibana、Logstash 和其他通过 HTTP API 连接到 Elasticsearch 的客户端将使用 HTTPS 进行通信，增强安全性。</span></span><br><span class=\"line\">xpack.security.http.ssl:</span><br><span class=\"line\">  enabled: <span class=\"literal\">true</span> <span class=\"comment\"># 启用 HTTP 层的 SSL 加密，即https访问，确保客户端与 Elasticsearch 之间的通信是加密的。设置为false时，关闭加密，即http访问</span></span><br><span class=\"line\">  keystore.path: certs/http.p12 <span class=\"comment\"># 指定用于 HTTP 层加密的密钥库文件路径。这是一个 PKCS12 文件，包含用于加密和验证的公钥和私钥。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Enable encryption and mutual authentication between cluster nodes</span></span><br><span class=\"line\"><span class=\"comment\"># 启用节点间的加密和双向认证</span></span><br><span class=\"line\"><span class=\"comment\"># Elasticsearch 集群中的节点之间的通信将使用 SSL 加密，并且每个节点都会验证其他节点的身份，从而增强集群的安全性。</span></span><br><span class=\"line\"><span class=\"comment\"># 所有节点要配置相同的证书</span></span><br><span class=\"line\">xpack.security.transport.ssl:</span><br><span class=\"line\">  enabled: <span class=\"literal\">true</span> <span class=\"comment\"># 启用传输层的 SSL 加密，确保节点之间的内部通信是加密的。</span></span><br><span class=\"line\">  verification_mode: certificate <span class=\"comment\"># 设置验证模式为 certificate，这意味着节点之间需要双向认证（即每个节点都需要验证对方的身份）。</span></span><br><span class=\"line\">  keystore.path: certs/transport.p12 <span class=\"comment\"># 指定用于传输层加密的密钥库文件路径。这是另一个 PKCS12 文件，包含用于加密和验证的公钥和私钥。</span></span><br><span class=\"line\">  truststore.path: certs/transport.p12 <span class=\"comment\"># 指定用于存储信任证书的信任库文件路径。这通常与密钥库相同，但可以不同。</span></span><br><span class=\"line\"><span class=\"comment\">#----------------------- END SECURITY AUTO CONFIGURATION -------------------------</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>解决方法：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">1.不想开启安全认证，将 <code>xpack.security.enabled</code> 设置为 false，这样即便下面的配置都设置为true也不会有效。</li>\n<li class=\"lvl-6\">2.不想https访问，将 <code>xpack.security.http.ssl.enabled</code> 设置为 false，但这样会导致无法通过认证Token添加其它节点或Kibana。</li>\n<li class=\"lvl-6\">3.不想节点间通信加密，将 <code>xpack.security.transport.ssl.enabled</code> 设置为 false</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>为了办证ES的安全，我这里就开启安全认证，只通过http访问ES，配置后重启ES服务，登录用户为<code>elastic</code>[其角色为超级用户]，密码可以通过如下命令重置：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重置密码，密码自动生成</span></span><br><span class=\"line\">bin/elasticsearch-reset-password -u elastic</span><br><span class=\"line\"><span class=\"comment\"># 重置密码，自己输入要设置的密码，比如我这里这是为 123456</span></span><br><span class=\"line\">bin/elasticsearch-reset-password -u elastic -i</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>curl 访问ES服务</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -k 忽略证书校验</span></span><br><span class=\"line\">curl -u elastic:123456 -k https://127.0.0.1:9200</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;node-1&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;cluster_name&quot;</span> : <span class=\"string\">&quot;test-elk&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;cluster_uuid&quot;</span> : <span class=\"string\">&quot;RykjCSPnSCi4Hsi37uziWw&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span> : &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;number&quot;</span> : <span class=\"string\">&quot;8.17.3&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_flavor&quot;</span> : <span class=\"string\">&quot;default&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_type&quot;</span> : <span class=\"string\">&quot;tar&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_hash&quot;</span> : <span class=\"string\">&quot;a091390de485bd4b127884f7e565c0cad59b10d2&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_date&quot;</span> : <span class=\"string\">&quot;2025-02-28T10:07:26.089129809Z&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_snapshot&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;lucene_version&quot;</span> : <span class=\"string\">&quot;9.12.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;minimum_wire_compatibility_version&quot;</span> : <span class=\"string\">&quot;7.17.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;minimum_index_compatibility_version&quot;</span> : <span class=\"string\">&quot;7.0.0&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;tagline&quot;</span> : <span class=\"string\">&quot;You Know, for Search&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过证书访问https服务，这个证书就是ES在开启安全认证启动时自动生成的</span></span><br><span class=\"line\">curl -u elastic:123456 --cacert /usr/local/elasticsearch/elasticsearch-8.17.3/config/certs/http_ca.crt  https://127.0.0.1:9200</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;node-1&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;cluster_name&quot;</span> : <span class=\"string\">&quot;test-elk&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;cluster_uuid&quot;</span> : <span class=\"string\">&quot;RykjCSPnSCi4Hsi37uziWw&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span> : &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;number&quot;</span> : <span class=\"string\">&quot;8.17.3&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_flavor&quot;</span> : <span class=\"string\">&quot;default&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_type&quot;</span> : <span class=\"string\">&quot;tar&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_hash&quot;</span> : <span class=\"string\">&quot;a091390de485bd4b127884f7e565c0cad59b10d2&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_date&quot;</span> : <span class=\"string\">&quot;2025-02-28T10:07:26.089129809Z&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;build_snapshot&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;lucene_version&quot;</span> : <span class=\"string\">&quot;9.12.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;minimum_wire_compatibility_version&quot;</span> : <span class=\"string\">&quot;7.17.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;minimum_index_compatibility_version&quot;</span> : <span class=\"string\">&quot;7.0.0&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;tagline&quot;</span> : <span class=\"string\">&quot;You Know, for Search&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>实际上在ES第一次正常启动时其日志中就打印了自动配置的安全相关的信息提示</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span><br><span class=\"line\"><span class=\"comment\"># 这些日志信息提供了 Elasticsearch 8 在首次启动时自动配置的安全特性、生成的默认密码、证书指纹以及如何配置 Kibana 和其他节点加入集群的详细说明。</span></span><br><span class=\"line\">✅ Elasticsearch security features have been automatically configured!</span><br><span class=\"line\">✅ Authentication is enabled and cluster connections are encrypted.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这是 elastic 用户的默认密码。系统建议你使用 bin/elasticsearch-reset-password -u elastic 命令来重置此密码。</span></span><br><span class=\"line\">ℹ️  Password <span class=\"keyword\">for</span> the elastic user (reset with `bin/elasticsearch-reset-password -u elastic`):</span><br><span class=\"line\">  BNb=*qz6_M*mXL9uZiSP <span class=\"comment\"># 这里会打印出ES自动生成的密码</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这是 HTTP CA 证书的 SHA-256 指纹。CA 证书用于验证 HTTPS 连接的身份。</span></span><br><span class=\"line\">ℹ️  HTTP CA certificate SHA-256 fingerprint:</span><br><span class=\"line\">  3f141c16dfc6e165894bc1672084b220dcdd22ffe02116d51ac18003cfaa5a1d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提供了将 Kibana 配置为使用此 Elasticsearch 集群的步骤。</span></span><br><span class=\"line\">ℹ️  Configure Kibana to use this cluster:</span><br><span class=\"line\"><span class=\"comment\"># 启动 Kibana 并按照终端中显示的配置链接进行操作。</span></span><br><span class=\"line\">• Run Kibana and click the configuration <span class=\"built_in\">link</span> <span class=\"keyword\">in</span> the terminal when Kibana starts.</span><br><span class=\"line\"><span class=\"comment\"># 复制提供的注册令牌，并在浏览器中打开 Kibana 时粘贴此令牌。令牌在接下来的 30 分钟内有效。</span></span><br><span class=\"line\"><span class=\"comment\"># 补充说明：生成新的kibana注册令牌：bin/elasticsearch-create-enrollment-token -s kibana</span></span><br><span class=\"line\">• Copy the following enrollment token and <span class=\"built_in\">paste</span> it into Kibana <span class=\"keyword\">in</span> your browser (valid <span class=\"keyword\">for</span> the next 30 minutes):</span><br><span class=\"line\">  eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImFSWFBzcFVCTVVmc1d5aUJnbjBtOmRzbVBLQV95UXhDZkJpXzQyWDNEMVEifQ==</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提供了将新的 Elasticsearch 节点加入现有集群的步骤。</span></span><br><span class=\"line\">ℹ️ Configure other nodes to <span class=\"built_in\">join</span> this cluster:</span><br><span class=\"line\"><span class=\"comment\"># 使用 bin/elasticsearch --enrollment-token &lt;token&gt; 命令启动新的 Elasticsearch 节点。令牌在接下来的 30 分钟内有效。</span></span><br><span class=\"line\"><span class=\"comment\"># 补充说明：生成新的节点注册令牌：bin/elasticsearch-create-enrollment-token -s node</span></span><br><span class=\"line\">• Copy the following enrollment token and start new Elasticsearch nodes with `bin/elasticsearch --enrollment-token &lt;token&gt;` (valid <span class=\"keyword\">for</span> the next 30 minutes):</span><br><span class=\"line\">  eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImF4WFBzcFVCTVVmc1d5aUJnbjFtOkFEallPdnpzUzh1MGJqOFpfVFE4a3cifQ==</span><br><span class=\"line\"><span class=\"comment\"># 如果你在 Docker 中运行 Elasticsearch，可以使用 docker run -e &quot;ENROLLMENT_TOKEN=&lt;token&gt;&quot; docker.elastic.co/elasticsearch/elasticsearch:8.17.3 命令启动新节点。</span></span><br><span class=\"line\">  If you<span class=\"string\">&#x27;re running in Docker, copy the enrollment token and run:</span></span><br><span class=\"line\"><span class=\"string\">  `docker run -e &quot;ENROLLMENT_TOKEN=&lt;token&gt;&quot; docker.elastic.co/elasticsearch/elasticsearch:8.17.3`</span></span><br><span class=\"line\"><span class=\"string\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ES浏览器插件\">ES浏览器插件</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://elasticvue.com/\">Elasticvue</a> : chrome/edge 插件，用于在浏览器中查看ES集群信息，功能非常强大</p>\n</li>\n</ul>\n<h2 id=\"ES自启动脚本\">ES自启动脚本</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建服务文件</span></span><br><span class=\"line\">$ vim /usr/lib/systemd/system/es.service</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=elasticsearch</span><br><span class=\"line\">Documentation=https://www.elastic.co</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">PrivateTmp=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 指定ES用户</span></span><br><span class=\"line\">User=elastic</span><br><span class=\"line\">Group=elastic</span><br><span class=\"line\">LimitNOFILE=100000</span><br><span class=\"line\">LimitNPROC=100000</span><br><span class=\"line\">Restart=<span class=\"built_in\">yes</span></span><br><span class=\"line\"><span class=\"comment\"># 启动命令</span></span><br><span class=\"line\">ExecStart=/usr/local/elasticsearch/elasticsearch-8.17.3/bin/elasticsearch</span><br><span class=\"line\">ExecRestart=/bin/kill -s HUP <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\">ExecStop=/bin/kill -s QUIT <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新加载</span></span><br><span class=\"line\">$ systemctl daemon-reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">$ systemctl start es</span><br><span class=\"line\"><span class=\"comment\"># 停止</span></span><br><span class=\"line\">$ systemctl stop es</span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">$ systemctl status es</span><br><span class=\"line\"><span class=\"comment\"># 设置开机启动</span></span><br><span class=\"line\">$ systemctl <span class=\"built_in\">enable</span> es</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 本文介绍如何在linux下安装Elasticsearch Elasticsearch版本8.17.3 下载 下载地址：https://www.elastic.co/cn/downloads/past-releases#elasticsearch 选择对应的版本：这里选择当前的最新版Elasticsearch 8.17.3，之后选择对应的操作系统LINUX X86_64 1wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.17.3-linux-x86_64.tar.gz 下载完成后解压到/usr/local/elasticsearch目录下，解压命令如下： 12mkdir /usr/local/elasticsearchtar -zxvf elasticsearch-8.17.3-linux-x86_64.tar.gz -C /usr/local/elasticsearch 创建启动用户 elasticsearch和kibana都不能用root用户启动 创建用户elastic，并设置密码 12useradd elasticpasswd elastic 修改elasticsearch安装目录的用户权限 1chown -R elastic:elastic /usr/local/elasticsearch 配置环境变量 进入elastic用户主目录，/home/elastic目录下，设置用户级别的环境变量 12# 切换到elastic用户su - elastic vim .bash_profile 1234# Elasticsearch安装目录，它用于定位Elasticsearch的配置文件、插件和其他相关资源。export ES_HOME=/usr/local/elasticsearch/elasticsearch-8.17.3# Elasticsearch使用的JDK安装目录，在启动Elasticsearch时，它会检查ES_JAVA_HOME环境变量并使用其中的Java路径。export ES_JAVA_HOME=/usr/local/elasticsearch/elasticsearch-8.17.3/jdk/ 执行以下命令使配置生效 1source .bash_profile 配置JVM参数（可选） 进入/usr/local/elasticsearch/elasticsearch-8.17.3/config目录，修改jvm.options文件，调整jvm堆内存大小 12-Xms4g # 设置最小堆内存，默认4g，不能小于1g-Xmx4g # 设置最大堆内存，默认4g，Xmx不要超过机器内存的50%，不要超过30g 创建数据和日志存储目录 1234# 切换到elastic用户su - elastic# 创建目录mkdir /usr/local/elasticsearch/data /usr/local/elasticsearch/log 配置启动文件 进入/usr/local/elasticsearch/elasticsearch-8.17.3/config目录，修改elasticsearch.yml文件 123456789101112131415161718192021222324# 集群名称cluster.name: test-elk# 节点名称node.name: node-1# 数据存储路径，默认值 $ES_HOME/datapath.data: /usr/local/elasticsearch/data# 日志存储路径，默认值 $ES_HOME/logspath.logs: /usr/local/elasticsearch/logs# 配置ES启动时是否进行内存锁定检查，默认值true，本机内存比较小时设置为falsebootstrap.memory_lock: false# 允许通过任何地址访问，开启远程访问network.host: 0.0.0.0# 配置当前ES节点对外提供服务的http端口，默认 9200http.port: 9200# 配置当前ES节点对外提供服务的tcp端口，默认 9300transport.port: 9300# 集群内的主机列表，开启安全认证时无需配置# discovery.seed_hosts: [&quot;127.0.0.1&quot;]# 第一次启动时需要参与选主的节点名称cluster.initial_master_nodes: [&quot;node-1&quot;]#解决跨域问题http.cors.enabled: truehttp.cors.allow-origin: &quot;*&quot; 启动ElasticSearch服务 进入/usr/local/elasticsearch/elasticsearch-8.17.3目录，执行以下命令启动服务 123./bin/elasticsearch# 后台启动./bin/elasticsearch -d ES启动前的引导检查 ES启动时，默认会进行引导检查，所谓引导检查就是在服务启动之前对一些重要的配置项进行检查，检查其配置值是否是合理的。引导检查包括对JVM大小、内存锁、虚拟内存、最大线程数、集群发现相关配置等相关的检查，如果某一项或者几项的配置不合理，ES会拒绝启动服务。 如果启动服务时，报以下错误，则需要解决引导检查中的问题 1.max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]; 原因：最大虚拟内存太小,调大系统的虚拟内存 解决办法： 123456# root用户下运行vim /etc/sysctl.conf# 追加以下内容：vm.max_map_count=262144# 保存退出之后执行如下命令：sysctl -p 2.max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536] 原因：文件描述符太小，调大系统的文件描述符 解决办法： 1234567# root用户下运行vim /etc/security/limits.conf# 末尾添加如下配置：* soft nofile 65536* hard nofile 65536* soft nproc 4096* hard nproc 4096 如果只是单节点的开发环境，则可以关闭引导检查，生成环境不建议这样做，因为关闭引导检查后，ES服务将无法保证集群的高可用性。 12345# 进入elasticsearch安装目录vim config/elasticsearch.yml# 添加如下配置：# 指定节点为单节点，可以绕过引导检查discovery.type: single-node 服务正常启动后仍然不能正常访问 访问服务 12curl http://127.0.0.1:9200curl: (52) Empty reply from server 查看日志/usr/local/elasticsearch/elasticsearch-8.17.3/logs/test-elk.log，发现报如下警告： 1[WARN ][o.e.h.n.Netty4HttpServerTransport] [node-1] received plaintext http traffic on an https channel, closing connection Netty4HttpChannel&#123;localAddress=/127.0.0.1:9200, remoteAddress=/127.0.0.1:38426&#125; 原因是ES在启动服务时默认开启了 X-Pack 安全功能，查看配置文件/usr/local/elasticsearch/elasticsearch-8.17.3/config/elasticsearch.yml，发现配置项xpack.security.xxx相关配置项被自动添加了，如下： 123456789101112131415161718192021222324252627282930313233#----------------------- BEGIN SECURITY AUTO CONFIGURATION -----------------------## The following settings, TLS certificates, and keys have been automatically# generated to configure Elasticsearch security features on 20-03-2025 08:53:20## --------------------------------------------------------------------------------# Enable security features# 启用 Elasticsearch 的安全特性，包括用户认证、角色管理、加密等。# 开启了 X-Pack 安全功能，这意味着你需要进行用户认证才能访问 Elasticsearch。# 如果需要关闭 X-Pack 安全功能，你可以将 xpack.security.enabled 设置为 false。xpack.security.enabled: true# 启用安全注册功能，允许通过交互式向导来配置安全设置。# 这使得你可以通过 Kibana 或命令行工具来自动配置 SSL 证书和其他安全设置。xpack.security.enrollment.enabled: true# Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents# 启用 HTTP API 客户端连接的加密# Kibana、Logstash 和其他通过 HTTP API 连接到 Elasticsearch 的客户端将使用 HTTPS 进行通信，增强安全性。xpack.security.http.ssl: enabled: true # 启用 HTTP 层的 SSL 加密，即https访问，确保客户端与 Elasticsearch 之间的通信是加密的。设置为false时，关闭加密，即http访问 keystore.path: certs/http.p12 # 指定用于 HTTP 层加密的密钥库文件路径。这是一个 PKCS12 文件，包含用于加密和验证的公钥和私钥。# Enable encryption and mutual authentication between cluster nodes# 启用节点间的加密和双向认证# Elasticsearch 集群中的节点之间的通信将使用 SSL 加密，并且每个节点都会验证其他节点的身份，从而增强集群的安全性。# 所有节点要配置相同的证书xpack.security.transport.ssl: enabled: true # 启用传输层的 SSL 加密，确保节点之间的内部通信是加密的。 verification_mode: certificate # 设置验证模式为 certificate，这意味着节点之间需要双向认证（即每个节点都需要验证对方的身份）。 keystore.path: certs/transport.p12 # 指定用于传输层加密的密钥库文件路径。这是另一个 PKCS12 文件，包含用于加密和验证的公钥和私钥。 truststore.path: certs/transport.p12 # 指定用于存储信任证书的信任库文件路径。这通常与密钥库相同，但可以不同。#----------------------- END SECURITY AUTO CONFIGURATION ------------------------- 解决方法： 1.不想开启安全认证，将 xpack.security.enabled 设置为 false，这样即便下面的配置都设置为true也不会有效。 2.不想https访问，将 xpack.security.http.ssl.enabled 设置为 false，但这样会导致无法通过认证Token添加其它节点或Kibana。 3.不想节点间通信加密，将 xpack.security.transport.ssl.enabled 设置为 false 为了办证ES的安全，我这里就开启安全认证，只通过http访问ES，配置后重启ES服务，登录用户为elastic[其角色为超级用户]，密码可以通过如下命令重置： 1234# 重置密码，密码自动生成bin/elasticsearch-reset-password -u elastic# 重置密码，自己输入要设置的密码，比如我这里这是为 123456bin/elasticsearch-reset-password -u elastic -i curl 访问ES服务 123456789101112131415161718192021222324252627282930313233343536373839# -k 忽略证书校验curl -u elastic:123456 -k https://127.0.0.1:9200&#123; &quot;name&quot; : &quot;node-1&quot;, &quot;cluster_name&quot; : &quot;test-elk&quot;, &quot;cluster_uuid&quot; : &quot;RykjCSPnSCi4Hsi37uziWw&quot;, &quot;version&quot; : &#123; &quot;number&quot; : &quot;8.17.3&quot;, &quot;build_flavor&quot; : &quot;default&quot;, &quot;build_type&quot; : &quot;tar&quot;, &quot;build_hash&quot; : &quot;a091390de485bd4b127884f7e565c0cad59b10d2&quot;, &quot;build_date&quot; : &quot;2025-02-28T10:07:26.089129809Z&quot;, &quot;build_snapshot&quot; : false, &quot;lucene_version&quot; : &quot;9.12.0&quot;, &quot;minimum_wire_compatibility_version&quot; : &quot;7.17.0&quot;, &quot;minimum_index_compatibility_version&quot; : &quot;7.0.0&quot; &#125;, &quot;tagline&quot; : &quot;You Know, for Search&quot;&#125;# 通过证书访问https服务，这个证书就是ES在开启安全认证启动时自动生成的curl -u elastic:123456 --cacert /usr/local/elasticsearch/elasticsearch-8.17.3/config/certs/http_ca.crt https://127.0.0.1:9200&#123; &quot;name&quot; : &quot;node-1&quot;, &quot;cluster_name&quot; : &quot;test-elk&quot;, &quot;cluster_uuid&quot; : &quot;RykjCSPnSCi4Hsi37uziWw&quot;, &quot;version&quot; : &#123; &quot;number&quot; : &quot;8.17.3&quot;, &quot;build_flavor&quot; : &quot;default&quot;, &quot;build_type&quot; : &quot;tar&quot;, &quot;build_hash&quot; : &quot;a091390de485bd4b127884f7e565c0cad59b10d2&quot;, &quot;build_date&quot; : &quot;2025-02-28T10:07:26.089129809Z&quot;, &quot;build_snapshot&quot; : false, &quot;lucene_version&quot; : &quot;9.12.0&quot;, &quot;minimum_wire_compatibility_version&quot; : &quot;7.17.0&quot;, &quot;minimum_index_compatibility_version&quot; : &quot;7.0.0&quot; &#125;, &quot;tagline&quot; : &quot;You Know, for Search&quot;&#125; 实际上在ES第一次正常启动时其日志中就打印了自动配置的安全相关的信息提示 1234567891011121314151617181920212223242526272829303132━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━# 这些日志信息提供了 Elasticsearch 8 在首次启动时自动配置的安全特性、生成的默认密码、证书指纹以及如何配置 Kibana 和其他节点加入集群的详细说明。✅ Elasticsearch security features have been automatically configured!✅ Authentication is enabled and cluster connections are encrypted.# 这是 elastic 用户的默认密码。系统建议你使用 bin/elasticsearch-reset-password -u elastic 命令来重置此密码。ℹ️ Password for the elastic user (reset with `bin/elasticsearch-reset-password -u elastic`): BNb=*qz6_M*mXL9uZiSP # 这里会打印出ES自动生成的密码# 这是 HTTP CA 证书的 SHA-256 指纹。CA 证书用于验证 HTTPS 连接的身份。ℹ️ HTTP CA certificate SHA-256 fingerprint: 3f141c16dfc6e165894bc1672084b220dcdd22ffe02116d51ac18003cfaa5a1d# 提供了将 Kibana 配置为使用此 Elasticsearch 集群的步骤。ℹ️ Configure Kibana to use this cluster:# 启动 Kibana 并按照终端中显示的配置链接进行操作。• Run Kibana and click the configuration link in the terminal when Kibana starts.# 复制提供的注册令牌，并在浏览器中打开 Kibana 时粘贴此令牌。令牌在接下来的 30 分钟内有效。# 补充说明：生成新的kibana注册令牌：bin/elasticsearch-create-enrollment-token -s kibana• Copy the following enrollment token and paste it into Kibana in your browser (valid for the next 30 minutes): eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImFSWFBzcFVCTVVmc1d5aUJnbjBtOmRzbVBLQV95UXhDZkJpXzQyWDNEMVEifQ==# 提供了将新的 Elasticsearch 节点加入现有集群的步骤。ℹ️ Configure other nodes to join this cluster:# 使用 bin/elasticsearch --enrollment-token &lt;token&gt; 命令启动新的 Elasticsearch 节点。令牌在接下来的 30 分钟内有效。# 补充说明：生成新的节点注册令牌：bin/elasticsearch-create-enrollment-token -s node• Copy the following enrollment token and start new Elasticsearch nodes with `bin/elasticsearch --enrollment-token &lt;token&gt;` (valid for the next 30 minutes): eyJ2ZXIiOiI4LjE0LjAiLCJhZHIiOlsiMTAuMjUwLjAuMjM5OjkyMDAiXSwiZmdyIjoiM2YxNDFjMTZkZmM2ZTE2NTg5NGJjMTY3MjA4NGIyMjBkY2RkMjJmZmUwMjExNmQ1MWFjMTgwMDNjZmFhNWExZCIsImtleSI6ImF4WFBzcFVCTVVmc1d5aUJnbjFtOkFEallPdnpzUzh1MGJqOFpfVFE4a3cifQ==# 如果你在 Docker 中运行 Elasticsearch，可以使用 docker run -e &quot;ENROLLMENT_TOKEN=&lt;token&gt;&quot; docker.elastic.co/elasticsearch/elasticsearch:8.17.3 命令启动新节点。 If you&#x27;re running in Docker, copy the enrollment token and run: `docker run -e &quot;ENROLLMENT_TOKEN=&lt;token&gt;&quot; docker.elastic.co/elasticsearch/elasticsearch:8.17.3`━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ES浏览器插件 Elasticvue : chrome/edge 插件，用于在浏览器中查看ES集群信息，功能非常强大 ES自启动脚本 1234567891011121314151617181920212223242526272829303132333435# 创建服务文件$ vim /usr/lib/systemd/system/es.service[Unit]Description=elasticsearchDocumentation=https://www.elastic.coAfter=network.target[Service]Type=simplePrivateTmp=true# 指定ES用户User=elasticGroup=elasticLimitNOFILE=100000LimitNPROC=100000Restart=yes# 启动命令ExecStart=/usr/local/elasticsearch/elasticsearch-8.17.3/bin/elasticsearchExecRestart=/bin/kill -s HUP $MAINPIDExecStop=/bin/kill -s QUIT $MAINPID[Install]WantedBy=multi-user.target# 重新加载$ systemctl daemon-reload# 启动$ systemctl start es# 停止$ systemctl stop es# 查看状态$ systemctl status es# 设置开机启动$ systemctl enable es","summary":"摘要 本文介绍如何在linux下安装Elasticsearch Elasticsearch版本8.17.3","date_published":"2025-03-20T13:30:05.000Z","tags":["技术","elastic","elasticsearch","elasticsearch"]},{"id":"https://blog.hanqunfeng.com/2025/03/13/npm-study/","url":"https://blog.hanqunfeng.com/2025/03/13/npm-study/","title":"npm使用手册","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍如何使用npm</p>\n</li>\n<li class=\"lvl-2\">\n<p>npm版本10.5.0</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"npm简介\">npm简介</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm（Node Package Manager）是 Node.js 的包管理工具，也是 JavaScript 编程社区中最常用的管理和分享代码的工具。</p>\n</li>\n<li class=\"lvl-2\">\n<p>它允许开发者轻松地安装、共享、和管理在项目中使用的 JavaScript 包。</p>\n</li>\n<li class=\"lvl-2\">\n<p>npm 分为两个主要部分：命令行工具（CLI）和 npm 注册表。</p>\n</li>\n<li class=\"lvl-2\">\n<p>命令行工具（CLI）：用于与注册表进行交互，安装和管理项目中的依赖。</p>\n</li>\n<li class=\"lvl-2\">\n<p>npm 注册表：一个在线的数据库，存储了数百万个开源的 Node.js 包，开发者可以在自己的项目中使用这些包。</p>\n</li>\n</ul>\n<h2 id=\"npm-的安装与配置\">npm 的安装与配置</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm 通常与 Node.js 一起安装，因此安装 Node.js 会自动安装 npm。</p>\n</li>\n<li class=\"lvl-2\">\n<p>从 <a href=\"https://nodejs.org/zh-cn\">Node.js 官网</a>下载并安装 Node.js。</p>\n</li>\n<li class=\"lvl-2\">\n<p>跟随<a href=\"https://nodejs.org/zh-cn/download\">Node.js 官网–Download</a>的提示完成 Node.js 的安装，</p>\n</li>\n<li class=\"lvl-2\">\n<p>现在官方更推荐使用<a href=\"https://github.com/nvm-sh/nvm\">nvm</a>的方式进行安装，当然你也可以选择对应系统的二进制包进行安装（此种方法要将node的bin目录配置到PATH环境变量），node.js安装完成后，npm 也会一起安装。</p>\n</li>\n<li class=\"lvl-2\">\n<p>打开命令行或终端工具，输入以下命令来验证是否成功安装</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -v</span><br><span class=\"line\">node -v</span><br></pre></td></tr></table></figure>\n<h2 id=\"npm-常用命令\">npm 常用命令</h2>\n<h3 id=\"npm-init：初始化项目\">npm init：初始化项目</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm init命令用于初始化一个新的 Node.js 项目，生成一个package.json文件，其中包含项目的元数据和配置。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> my-project</span><br><span class=\"line\"><span class=\"built_in\">cd</span> my-project</span><br><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>执行该命令后，会按照提示输入一些项目相关的信息，如名称、版本、描述等。也可以使用 <code>npm init -y</code> 跳过提示，生成一个默认的package.json文件。</p>\n</li>\n</ul>\n<h3 id=\"npm-create：基于模板创建项目\">npm create：基于模板创建项目</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm create命令用于基于模板创建一个新的 Node.js 项目，比如我们创建一个基于Vue的Web项目，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm create vue@latest</span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-install：安装依赖包\">npm install：安装依赖包</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm install命令用于安装项目中所需的依赖包，比如在package.json文件中指定了依赖包，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装完成后，会在node_modules目录下生成依赖包，并更新package-lock.json文件。</p>\n</li>\n<li class=\"lvl-2\">\n<p>安装指定依赖包，默认安装最新版，自动将依赖包添加到 package.json 的 “dependencies” 部分。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install express</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>如果需要安装特定的版本，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install express@4.17.1</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装开发依赖包，安装并写入package.json的&quot;devDependencies&quot;中</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install express -D</span><br><span class=\"line\"><span class=\"comment\"># 等价于</span></span><br><span class=\"line\">npm install express --save-dev</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装全局依赖包</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局安装的包会被安装到全局的node_modules目录下，不会被安装到项目目录下，也不会出现在package.json中</span></span><br><span class=\"line\">npm install express -g</span><br><span class=\"line\"><span class=\"comment\"># 等价于</span></span><br><span class=\"line\">npm install express --global</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 全局node_modules目录路径查看</span></span><br><span class=\"line\">npm root -g</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>从本地安装依赖包</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从本地安装</span></span><br><span class=\"line\">npm install ./path/to/local_project</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>从远程Git仓库安装依赖包</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装公共项目：</span></span><br><span class=\"line\"><span class=\"comment\"># npm install https://github.com/user_name/node_project</span></span><br><span class=\"line\">npm install https://github.com/trentm/json.git</span><br><span class=\"line\"><span class=\"comment\"># 缩写，如果是gitlab仓库，则需要使用gitlab前缀，推荐使用上面的完整语义版本</span></span><br><span class=\"line\">npm install github:trentm/json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装特定提交：</span></span><br><span class=\"line\"><span class=\"comment\"># npm install https://github.com/user_name/node_project#commit</span></span><br><span class=\"line\">npm install https://github.com/trentm/json.git\\#6912b25272312d0f13ad32e98ebc1b4deb6334cc</span><br><span class=\"line\"><span class=\"comment\"># 安装特定分支：</span></span><br><span class=\"line\"><span class=\"comment\"># npm install https://github.com/user_name/node_project#branchName</span></span><br><span class=\"line\">npm install https://github.com/trentm/json.git\\#streaming</span><br><span class=\"line\"><span class=\"comment\"># 通过标签安装：</span></span><br><span class=\"line\"><span class=\"comment\"># npm install https://github.com/user_name/node_project#tag</span></span><br><span class=\"line\">npm install https://github.com/trentm/json.git\\#10.0.0</span><br><span class=\"line\"><span class=\"comment\"># 安装特定版本：</span></span><br><span class=\"line\"><span class=\"comment\"># npm install https://github.com/user_name/node_project#version</span></span><br><span class=\"line\">npm install https://github.com/trentm/json.git\\#10.0.0</span><br><span class=\"line\"><span class=\"comment\"># 完整的语义版本：</span></span><br><span class=\"line\">npm install https://github.com/trentm/json.git\\#semver:v10.0.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用git的ssh repo link 安装私有库：后面同样可以接 commit、branchName、tag、version等</span></span><br><span class=\"line\"><span class=\"comment\"># npm install git+ssh://git@github.com:user_name/node_project.git</span></span><br><span class=\"line\">npm install git+ssh://git@github.com/trentm/json.git</span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-update：更新依赖包\">npm update：更新依赖包</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm update命令用于更新项目中的依赖包，比如要更新express依赖包到最新版本，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更新生产环境依赖包</span></span><br><span class=\"line\">npm update express</span><br><span class=\"line\"><span class=\"comment\"># 更新开发环境依赖包</span></span><br><span class=\"line\">npm update express -D</span><br><span class=\"line\"><span class=\"comment\"># 全局更新</span></span><br><span class=\"line\">npm update express -g</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>修改了package.json文件，并希望更新依赖包，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># #为了避免不必要的麻烦，可以先删除项目中的node_modules文件夹在执行，此时和 npm install 一样</span></span><br><span class=\"line\">npm update</span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-outdate：检查哪些包可以升级\">npm outdate：检查哪些包可以升级</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm outdate命令用于检查哪些包可以升级</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 检查当前项目下哪些包可以升级</span></span><br><span class=\"line\">npm outdate</span><br><span class=\"line\"><span class=\"comment\"># 检查指定包</span></span><br><span class=\"line\">npm outdated express</span><br><span class=\"line\"><span class=\"comment\"># 检查全局模块</span></span><br><span class=\"line\">npm outdate -g</span><br><span class=\"line\">npm outdated -g express</span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-upgrade：判断package-json哪些包需要升级\">npm-upgrade：判断package.json哪些包需要升级</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g npm-upgrade</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 判断package.json哪些包需要升级，用户确认后会自动更新package.json文件，此时只是更新文件，并没有真正升级</span></span><br><span class=\"line\">npm-upgrade</span><br><span class=\"line\"><span class=\"comment\"># 基于package.json中的配置进行升级，可以先删除node_modules再执行，此时和 npm install 一样</span></span><br><span class=\"line\">npm update</span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-list：列出依赖包\">npm list：列出依赖包</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm list命令用于列出项目中的依赖包，比如要列出当前项目下的依赖包，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此时列出的是package.json中的dependencies依赖包</span></span><br><span class=\"line\">npm list</span><br><span class=\"line\"><span class=\"comment\"># 列出开发依赖包，此时会列出package.json中的devDependencies和dependencies依赖包</span></span><br><span class=\"line\">npm list -D</span><br><span class=\"line\"><span class=\"comment\"># 列出指定包</span></span><br><span class=\"line\">npm list express</span><br><span class=\"line\"><span class=\"comment\"># 列出全局模块</span></span><br><span class=\"line\">npm list -g</span><br><span class=\"line\">npm list -g express</span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-uninstall：卸载依赖包\">npm uninstall：卸载依赖包</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm uninstall命令用于卸载项目中的依赖包，比如要卸载express依赖包，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall express</span><br><span class=\"line\"><span class=\"comment\"># 删除全局模块</span></span><br><span class=\"line\">npm uninstall -g express</span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-search：搜索依赖包\">npm search：搜索依赖包</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm search命令用于搜索依赖包，比如要搜索express依赖包，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm search express</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>可以使用正则表达式搜索依赖包，比如要搜索以express开头的依赖包，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm search /^express/</span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-view-npm-info：查看包信息\">npm view == npm info：查看包信息</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm view命令用于查看包的信息，比如要查看express依赖包的信息，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm view express</span><br><span class=\"line\"><span class=\"comment\"># 或者，view与info命令可以互换使用</span></span><br><span class=\"line\">npm info express</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm view命令还可以查看包的所有版本信息，比如要查看express依赖包的所有版本信息，可以执行以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此时我们从结果中选择一个版本进行安装即可</span></span><br><span class=\"line\">npm view express versions</span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-home：打开包的主页\">npm home：打开包的主页</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>打开某个 npm 包的主页（通常是 GitHub 主页或 npm 页面）。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm home express</span><br></pre></td></tr></table></figure>\n<h2 id=\"npm-镜像源\">npm 镜像源</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>npm 默认使用官方的镜像源，但是官方的镜像源速度很慢，我们可以使用第三方的镜像源来加速下载。</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm 官方原始镜像网址是：https://registry.npmjs.org/</span><br><span class=\"line\">淘宝 NPM 镜像：http://registry.npmmirror.com</span><br><span class=\"line\">阿里云 NPM 镜像：https://npm.aliyun.com</span><br><span class=\"line\">腾讯云 NPM 镜像：https://mirrors.cloud.tencent.com/npm/</span><br><span class=\"line\">华为云 NPM 镜像：https://mirrors.huaweicloud.com/repository/npm/</span><br><span class=\"line\">网易 NPM 镜像：https://mirrors.163.com/npm/</span><br><span class=\"line\">中国科学技术大学开源镜像站：http://mirrors.ustc.edu.cn/</span><br><span class=\"line\">清华大学开源镜像站：https://mirrors.tuna.tsinghua.edu.cn/</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>可以通过以下命令来查看当前使用的镜像源：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config get registry</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>可以通过以下命令来设置镜像源：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>可以通过以下命令来删除用户配置的镜像源，删除后恢复为默认镜像源：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config delete registry</span><br></pre></td></tr></table></figure>\n<h2 id=\"npm-配置\">npm 配置</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>可以通过以下命令来查看npm的配置信息：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看全局配置信息，只显示用户自定义的配置信息</span></span><br><span class=\"line\">npm config list</span><br><span class=\"line\"><span class=\"comment\"># 查看全局配置信息，显示所有配置信息及其默认缺省值</span></span><br><span class=\"line\">npm config <span class=\"built_in\">ls</span> -l</span><br><span class=\"line\"><span class=\"comment\"># json 格式 显示全部配置信息</span></span><br><span class=\"line\">npm config list --json</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>默认全局配置在当前用户HOME目录下的.npmrc文件中，可以通过以下命令来查看全局配置信息：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> ~/.npmrc</span><br><span class=\"line\"><span class=\"built_in\">cat</span> ~/.npmrc | grep registry</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在项目根目录创建一个.npmrc 文件可以为该项目单独设置 npm 配置。</p>\n</li>\n<li class=\"lvl-2\">\n<p>npm config 允许你控制 npm 的行为，包括 安装目录、代理、日志级别、依赖管理 等。</p>\n</li>\n<li class=\"lvl-2\">\n<p>你可以使用 <code>npm config get &lt;key&gt;</code> 查看值，<code>npm config set &lt;key&gt; &lt;value&gt;</code> 进行修改，<code>npm config delete &lt;key&gt;</code> 删除设置。</p>\n</li>\n<li class=\"lvl-2\">\n<p>npm常用配置</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>作用</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>prefix</td>\n<td>设置 npm 全局安装的路径（npm install -g 影响的目录）</td>\n<td>环境变量 NODE_HOME 或 /usr/local（系统）</td>\n</tr>\n<tr>\n<td>cache</td>\n<td>npm 的缓存目录</td>\n<td>~/.npm</td>\n</tr>\n<tr>\n<td>registry</td>\n<td>指定 npm 的包管理仓库地址（如官方、淘宝镜像）</td>\n<td><a href=\"https://registry.npmjs.org/\">https://registry.npmjs.org/</a></td>\n</tr>\n<tr>\n<td>strict-ssl</td>\n<td>是否强制使用 HTTPS 进行 npm 操作</td>\n<td>true</td>\n</tr>\n<tr>\n<td>proxy</td>\n<td>配置 HTTP 代理</td>\n<td>null</td>\n</tr>\n<tr>\n<td>https-proxy</td>\n<td>配置 HTTPS 代理</td>\n<td>null</td>\n</tr>\n<tr>\n<td>init-author-name</td>\n<td>设置 package.json 默认作者名称</td>\n<td>“”</td>\n</tr>\n<tr>\n<td>init-author-email</td>\n<td>设置 package.json 默认作者邮箱</td>\n<td>“”</td>\n</tr>\n<tr>\n<td>init-author-url</td>\n<td>设置 package.json 默认作者网站</td>\n<td>“”</td>\n</tr>\n<tr>\n<td>init-license</td>\n<td>设置 package.json 默认许可证</td>\n<td>“ISC”</td>\n</tr>\n<tr>\n<td>init-version</td>\n<td>package.json 默认版本号</td>\n<td>“1.0.0”</td>\n</tr>\n<tr>\n<td>save-exact</td>\n<td>true 时，安装依赖时不使用 ^ 或 ~，直接锁定版本</td>\n<td>false</td>\n</tr>\n<tr>\n<td>engine-strict</td>\n<td>是否强制匹配 package.json 的 engines 字段</td>\n<td>false</td>\n</tr>\n<tr>\n<td>loglevel</td>\n<td>设置日志输出级别（silent, error, warn, notice, info, verbose, silly）</td>\n<td>notice</td>\n</tr>\n<tr>\n<td>fund</td>\n<td>是否显示 package 的资金支持信息</td>\n<td>true</td>\n</tr>\n<tr>\n<td>audit</td>\n<td>是否启用安全审计</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"npm-config-save-exact\">npm config save-exact</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>推荐配置为 true，避免因为版本更新导致依赖包版本不匹配</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> save-exact <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-config-loglevel\">npm config loglevel</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>loglevel 可选值</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>级别</th>\n<th>说明</th>\n<th>适用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>silent</td>\n<td>不输出任何日志（除非发生错误）</td>\n<td>适用于 CI/CD 需要最少日志的环境</td>\n</tr>\n<tr>\n<td>error</td>\n<td>仅显示错误信息</td>\n<td>只关心 npm 运行是否出错</td>\n</tr>\n<tr>\n<td>warn</td>\n<td>显示警告和错误</td>\n<td>发现潜在问题但不影响使用</td>\n</tr>\n<tr>\n<td>notice (默认)</td>\n<td>显示关键信息、警告和错误</td>\n<td>npm 默认值，适合大多数场景</td>\n</tr>\n<tr>\n<td>http</td>\n<td>记录 HTTP 请求的详细信息</td>\n<td>用于调试 npm 下载速度问题</td>\n</tr>\n<tr>\n<td>info</td>\n<td>显示一般信息、依赖安装情况等</td>\n<td>适用于一般开发者调试</td>\n</tr>\n<tr>\n<td>verbose</td>\n<td>详细的调试信息</td>\n<td>适用于深入分析 npm 运行情况</td>\n</tr>\n<tr>\n<td>silly</td>\n<td>最详细的日志，包含所有调试信息</td>\n<td>适用于 npm 开发者或极端调试需求</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>设置方法</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> loglevel verbose</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>临时使用</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm --loglevel verbose install</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">npm -<span class=\"built_in\">dd</span> install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  支持快捷方式的值：</span></span><br><span class=\"line\"><span class=\"comment\"># • -s, --silent: --loglevel silent</span></span><br><span class=\"line\"><span class=\"comment\"># • -q, --quiet: --loglevel warn</span></span><br><span class=\"line\"><span class=\"comment\"># • -d: --loglevel info</span></span><br><span class=\"line\"><span class=\"comment\"># • -dd, --verbose: --loglevel verbose</span></span><br><span class=\"line\"><span class=\"comment\"># • -ddd: --loglevel silly</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-config-timing\">npm config timing</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>timing 是 npm 的一个 日志输出配置项，用于控制是否在命令执行时显示详细的时间信息，默认值为 false。</p>\n</li>\n<li class=\"lvl-2\">\n<p>当 timing 设为 true 时，npm 会在命令执行结束后 打印详细的时间统计信息，包括：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">每个子任务的执行时间（如解析 package.json、解析 node_modules、下载依赖等）</li>\n<li class=\"lvl-6\">网络请求的耗时</li>\n<li class=\"lvl-6\">依赖解析和安装的耗时</li>\n<li class=\"lvl-6\">整体执行的时间开销</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>这对分析 npm 性能、优化依赖安装速度非常有用，特别是在大项目或 CI/CD 环境中。</p>\n</li>\n<li class=\"lvl-2\">\n<p>启用 timing</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> timing <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>临时启用</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm --timing install</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>适用场景</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">分析 npm 命令执行时间，优化构建速度</li>\n<li class=\"lvl-6\">CI/CD 环境中排查 npm 安装变慢的原因</li>\n<li class=\"lvl-6\">排查 npm 依赖解析、安装或下载过程的性能瓶颈</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>一般日常开发：日志会变长，可能影响可读性，所以再没有遇到问题时不建议开启</p>\n</li>\n</ul>\n<h2 id=\"npm、pnpm、yarn-之间的联系和区别\">npm、pnpm、yarn 之间的联系和区别</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这三者都是 JavaScript 生态中的包管理工具，主要用于安装、管理和运行 Node.js 项目的依赖。它们的关系如下：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">npm（Node Package Manager）是 Node.js 官方自带的包管理工具。</li>\n<li class=\"lvl-6\"><a href=\"https://classic.yarnpkg.com/en/docs\">yarn（Yet Another Resource Negotiator）</a>是 Facebook 开发的替代 npm 的工具，提供更快、更安全的依赖管理。</li>\n<li class=\"lvl-6\"><a href=\"https://pnpm.io/zh/\">pnpm（Performant npm）</a>是一个更高效的 npm 替代品，使用硬链接和去重机制来减少磁盘占用并加快安装速度。</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>npm、pnpm、yarn 的主要区别</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>npm</th>\n<th>yarn</th>\n<th>pnpm</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>默认包管理方式</td>\n<td>直接安装到 node_modules/</td>\n<td>直接安装到 node_modules/</td>\n<td>使用 硬链接 + 共享依赖，占用更少磁盘</td>\n</tr>\n<tr>\n<td>安装速度</td>\n<td>5+ 版本后速度较快，但依赖解析仍有性能问题</td>\n<td>速度较快，支持并行下载</td>\n<td>最快，去重能力强</td>\n</tr>\n<tr>\n<td>磁盘占用</td>\n<td>较大（每个项目都会存一份完整的依赖）</td>\n<td>较大（和 npm 类似）</td>\n<td>最小（共享全局缓存，多个项目共用依赖）</td>\n</tr>\n<tr>\n<td>锁文件</td>\n<td>package-lock.json</td>\n<td>yarn.lock</td>\n<td>pnpm-lock.yaml</td>\n</tr>\n<tr>\n<td>并发安装</td>\n<td>支持（npm 5+ 优化）</td>\n<td>支持（更快）</td>\n<td>支持（最优化）</td>\n</tr>\n<tr>\n<td>全局缓存</td>\n<td>支持（但项目仍会存副本）</td>\n<td>支持（仍会拷贝到 node_modules/）</td>\n<td>强制启用（多个项目共用依赖，节省空间）</td>\n</tr>\n<tr>\n<td>monorepo（多包管理）</td>\n<td>需要手动配置</td>\n<td>支持 Workspaces</td>\n<td>原生支持 Workspaces（最强大）</td>\n</tr>\n<tr>\n<td>命令兼容性</td>\n<td>标准</td>\n<td>兼容 npm，部分不同</td>\n<td>兼容 npm，大部分命令相同</td>\n</tr>\n<tr>\n<td>自动修复 package.json</td>\n<td>是</td>\n<td>是</td>\n<td>是</td>\n</tr>\n<tr>\n<td>生态兼容性</td>\n<td>官方标准，兼容性最好</td>\n<td>兼容 npm，但部分特性不同</td>\n<td>兼容 npm，但采用不同的依赖管理方式</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常见命令对比</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>任务</th>\n<th>npm</th>\n<th>yarn</th>\n<th>pnpm</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>初始化项目</td>\n<td>npm init</td>\n<td>yarn init</td>\n<td>pnpm init</td>\n</tr>\n<tr>\n<td>安装依赖</td>\n<td>npm install</td>\n<td>yarn install</td>\n<td>pnpm install</td>\n</tr>\n<tr>\n<td>安装特定依赖</td>\n<td>npm install lodash</td>\n<td>yarn add lodash</td>\n<td>pnpm add lodash</td>\n</tr>\n<tr>\n<td>安装开发依赖</td>\n<td>npm install lodash -D</td>\n<td>yarn add lodash -D</td>\n<td>pnpm add lodash -D</td>\n</tr>\n<tr>\n<td>删除依赖</td>\n<td>npm uninstall lodash</td>\n<td>yarn remove lodash</td>\n<td>pnpm remove lodash</td>\n</tr>\n<tr>\n<td>更新依赖</td>\n<td>npm update lodash</td>\n<td>yarn upgrade lodash</td>\n<td>pnpm update lodash</td>\n</tr>\n<tr>\n<td>全局安装</td>\n<td>npm install -g serve</td>\n<td>yarn global add serve</td>\n<td>pnpm add -g serve</td>\n</tr>\n<tr>\n<td>运行脚本</td>\n<td>npm run dev</td>\n<td>yarn dev</td>\n<td>pnpm dev</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>什么时候使用 npm、yarn、pnpm？</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">\n<p>✅ 使用 pnpm（推荐）：<br>\n1.你希望减少磁盘占用、加快安装速度<br>\n2.你正在开发 monorepo（多包）项目<br>\n3.你希望更高效地管理依赖</p>\n</li>\n<li class=\"lvl-6\">\n<p>✅ 使用 yarn：<br>\n1.你希望更快的安装速度，但又不想改变 npm 传统结构<br>\n2.你的团队习惯使用 yarn.lock 文件<br>\n3.你在用 React Native（官方推荐 yarn）</p>\n</li>\n<li class=\"lvl-6\">\n<p>✅ 使用 npm（适合简单项目）：<br>\n1.你希望使用 Node.js 官方的默认工具<br>\n2.你不想安装额外的包管理工具<br>\n3.你在开发小型项目，不需要 workspaces</p>\n</li>\n</ul>\n</li>\n</ul>\n","content_text":"摘要 本文介绍如何使用npm npm版本10.5.0 npm简介 npm（Node Package Manager）是 Node.js 的包管理工具，也是 JavaScript 编程社区中最常用的管理和分享代码的工具。 它允许开发者轻松地安装、共享、和管理在项目中使用的 JavaScript 包。 npm 分为两个主要部分：命令行工具（CLI）和 npm 注册表。 命令行工具（CLI）：用于与注册表进行交互，安装和管理项目中的依赖。 npm 注册表：一个在线的数据库，存储了数百万个开源的 Node.js 包，开发者可以在自己的项目中使用这些包。 npm 的安装与配置 npm 通常与 Node.js 一起安装，因此安装 Node.js 会自动安装 npm。 从 Node.js 官网下载并安装 Node.js。 跟随Node.js 官网–Download的提示完成 Node.js 的安装， 现在官方更推荐使用nvm的方式进行安装，当然你也可以选择对应系统的二进制包进行安装（此种方法要将node的bin目录配置到PATH环境变量），node.js安装完成后，npm 也会一起安装。 打开命令行或终端工具，输入以下命令来验证是否成功安装 12npm -vnode -v npm 常用命令 npm init：初始化项目 npm init命令用于初始化一个新的 Node.js 项目，生成一个package.json文件，其中包含项目的元数据和配置。 123mkdir my-projectcd my-projectnpm init 执行该命令后，会按照提示输入一些项目相关的信息，如名称、版本、描述等。也可以使用 npm init -y 跳过提示，生成一个默认的package.json文件。 npm create：基于模板创建项目 npm create命令用于基于模板创建一个新的 Node.js 项目，比如我们创建一个基于Vue的Web项目，可以执行以下命令： 1npm create vue@latest npm install：安装依赖包 npm install命令用于安装项目中所需的依赖包，比如在package.json文件中指定了依赖包，可以执行以下命令： 1npm install 安装完成后，会在node_modules目录下生成依赖包，并更新package-lock.json文件。 安装指定依赖包，默认安装最新版，自动将依赖包添加到 package.json 的 “dependencies” 部分。 1npm install express 如果需要安装特定的版本，可以执行以下命令： 1npm install express@4.17.1 安装开发依赖包，安装并写入package.json的&quot;devDependencies&quot;中 123npm install express -D# 等价于npm install express --save-dev 安装全局依赖包 1234567# 全局安装的包会被安装到全局的node_modules目录下，不会被安装到项目目录下，也不会出现在package.json中npm install express -g# 等价于npm install express --global# 全局node_modules目录路径查看npm root -g 从本地安装依赖包 12# 从本地安装npm install ./path/to/local_project 从远程Git仓库安装依赖包 123456789101112131415161718192021222324# 安装公共项目：# npm install https://github.com/user_name/node_projectnpm install https://github.com/trentm/json.git# 缩写，如果是gitlab仓库，则需要使用gitlab前缀，推荐使用上面的完整语义版本npm install github:trentm/json# 安装特定提交：# npm install https://github.com/user_name/node_project#commitnpm install https://github.com/trentm/json.git\\#6912b25272312d0f13ad32e98ebc1b4deb6334cc# 安装特定分支：# npm install https://github.com/user_name/node_project#branchNamenpm install https://github.com/trentm/json.git\\#streaming# 通过标签安装：# npm install https://github.com/user_name/node_project#tagnpm install https://github.com/trentm/json.git\\#10.0.0# 安装特定版本：# npm install https://github.com/user_name/node_project#versionnpm install https://github.com/trentm/json.git\\#10.0.0# 完整的语义版本：npm install https://github.com/trentm/json.git\\#semver:v10.0.0# 使用git的ssh repo link 安装私有库：后面同样可以接 commit、branchName、tag、version等# npm install git+ssh://git@github.com:user_name/node_project.gitnpm install git+ssh://git@github.com/trentm/json.git npm update：更新依赖包 npm update命令用于更新项目中的依赖包，比如要更新express依赖包到最新版本，可以执行以下命令： 123456# 更新生产环境依赖包npm update express# 更新开发环境依赖包npm update express -D# 全局更新npm update express -g 修改了package.json文件，并希望更新依赖包，可以执行以下命令： 12# #为了避免不必要的麻烦，可以先删除项目中的node_modules文件夹在执行，此时和 npm install 一样npm update npm outdate：检查哪些包可以升级 npm outdate命令用于检查哪些包可以升级 1234567# 检查当前项目下哪些包可以升级npm outdate# 检查指定包npm outdated express# 检查全局模块npm outdate -gnpm outdated -g express npm-upgrade：判断package.json哪些包需要升级 安装 1npm install -g npm-upgrade 使用 1234# 判断package.json哪些包需要升级，用户确认后会自动更新package.json文件，此时只是更新文件，并没有真正升级npm-upgrade# 基于package.json中的配置进行升级，可以先删除node_modules再执行，此时和 npm install 一样npm update npm list：列出依赖包 npm list命令用于列出项目中的依赖包，比如要列出当前项目下的依赖包，可以执行以下命令： 123456789# 此时列出的是package.json中的dependencies依赖包npm list# 列出开发依赖包，此时会列出package.json中的devDependencies和dependencies依赖包npm list -D# 列出指定包npm list express# 列出全局模块npm list -gnpm list -g express npm uninstall：卸载依赖包 npm uninstall命令用于卸载项目中的依赖包，比如要卸载express依赖包，可以执行以下命令： 123npm uninstall express# 删除全局模块npm uninstall -g express npm search：搜索依赖包 npm search命令用于搜索依赖包，比如要搜索express依赖包，可以执行以下命令： 1npm search express 可以使用正则表达式搜索依赖包，比如要搜索以express开头的依赖包，可以执行以下命令： 1npm search /^express/ npm view == npm info：查看包信息 npm view命令用于查看包的信息，比如要查看express依赖包的信息，可以执行以下命令： 123npm view express# 或者，view与info命令可以互换使用npm info express npm view命令还可以查看包的所有版本信息，比如要查看express依赖包的所有版本信息，可以执行以下命令： 12# 此时我们从结果中选择一个版本进行安装即可npm view express versions npm home：打开包的主页 打开某个 npm 包的主页（通常是 GitHub 主页或 npm 页面）。 1npm home express npm 镜像源 npm 默认使用官方的镜像源，但是官方的镜像源速度很慢，我们可以使用第三方的镜像源来加速下载。 12345678npm 官方原始镜像网址是：https://registry.npmjs.org/淘宝 NPM 镜像：http://registry.npmmirror.com阿里云 NPM 镜像：https://npm.aliyun.com腾讯云 NPM 镜像：https://mirrors.cloud.tencent.com/npm/华为云 NPM 镜像：https://mirrors.huaweicloud.com/repository/npm/网易 NPM 镜像：https://mirrors.163.com/npm/中国科学技术大学开源镜像站：http://mirrors.ustc.edu.cn/清华大学开源镜像站：https://mirrors.tuna.tsinghua.edu.cn/ 可以通过以下命令来查看当前使用的镜像源： 1npm config get registry 可以通过以下命令来设置镜像源： 1npm config set registry https://registry.npmmirror.com 可以通过以下命令来删除用户配置的镜像源，删除后恢复为默认镜像源： 1npm config delete registry npm 配置 可以通过以下命令来查看npm的配置信息： 123456# 查看全局配置信息，只显示用户自定义的配置信息npm config list# 查看全局配置信息，显示所有配置信息及其默认缺省值npm config ls -l# json 格式 显示全部配置信息npm config list --json 默认全局配置在当前用户HOME目录下的.npmrc文件中，可以通过以下命令来查看全局配置信息： 12cat ~/.npmrccat ~/.npmrc | grep registry 在项目根目录创建一个.npmrc 文件可以为该项目单独设置 npm 配置。 npm config 允许你控制 npm 的行为，包括 安装目录、代理、日志级别、依赖管理 等。 你可以使用 npm config get &lt;key&gt; 查看值，npm config set &lt;key&gt; &lt;value&gt; 进行修改，npm config delete &lt;key&gt; 删除设置。 npm常用配置 配置项 作用 默认值 prefix 设置 npm 全局安装的路径（npm install -g 影响的目录） 环境变量 NODE_HOME 或 /usr/local（系统） cache npm 的缓存目录 ~/.npm registry 指定 npm 的包管理仓库地址（如官方、淘宝镜像） https://registry.npmjs.org/ strict-ssl 是否强制使用 HTTPS 进行 npm 操作 true proxy 配置 HTTP 代理 null https-proxy 配置 HTTPS 代理 null init-author-name 设置 package.json 默认作者名称 “” init-author-email 设置 package.json 默认作者邮箱 “” init-author-url 设置 package.json 默认作者网站 “” init-license 设置 package.json 默认许可证 “ISC” init-version package.json 默认版本号 “1.0.0” save-exact true 时，安装依赖时不使用 ^ 或 ~，直接锁定版本 false engine-strict 是否强制匹配 package.json 的 engines 字段 false loglevel 设置日志输出级别（silent, error, warn, notice, info, verbose, silly） notice fund 是否显示 package 的资金支持信息 true audit 是否启用安全审计 true npm config save-exact 推荐配置为 true，避免因为版本更新导致依赖包版本不匹配 1npm config set save-exact true npm config loglevel loglevel 可选值 级别 说明 适用场景 silent 不输出任何日志（除非发生错误） 适用于 CI/CD 需要最少日志的环境 error 仅显示错误信息 只关心 npm 运行是否出错 warn 显示警告和错误 发现潜在问题但不影响使用 notice (默认) 显示关键信息、警告和错误 npm 默认值，适合大多数场景 http 记录 HTTP 请求的详细信息 用于调试 npm 下载速度问题 info 显示一般信息、依赖安装情况等 适用于一般开发者调试 verbose 详细的调试信息 适用于深入分析 npm 运行情况 silly 最详细的日志，包含所有调试信息 适用于 npm 开发者或极端调试需求 设置方法 1npm config set loglevel verbose 临时使用 12345678910npm --loglevel verbose install# 或者npm -dd install# 支持快捷方式的值：# • -s, --silent: --loglevel silent# • -q, --quiet: --loglevel warn# • -d: --loglevel info# • -dd, --verbose: --loglevel verbose# • -ddd: --loglevel silly npm config timing timing 是 npm 的一个 日志输出配置项，用于控制是否在命令执行时显示详细的时间信息，默认值为 false。 当 timing 设为 true 时，npm 会在命令执行结束后 打印详细的时间统计信息，包括： 每个子任务的执行时间（如解析 package.json、解析 node_modules、下载依赖等） 网络请求的耗时 依赖解析和安装的耗时 整体执行的时间开销 这对分析 npm 性能、优化依赖安装速度非常有用，特别是在大项目或 CI/CD 环境中。 启用 timing 1npm config set timing true 临时启用 1npm --timing install 适用场景 分析 npm 命令执行时间，优化构建速度 CI/CD 环境中排查 npm 安装变慢的原因 排查 npm 依赖解析、安装或下载过程的性能瓶颈 一般日常开发：日志会变长，可能影响可读性，所以再没有遇到问题时不建议开启 npm、pnpm、yarn 之间的联系和区别 这三者都是 JavaScript 生态中的包管理工具，主要用于安装、管理和运行 Node.js 项目的依赖。它们的关系如下： npm（Node Package Manager）是 Node.js 官方自带的包管理工具。 yarn（Yet Another Resource Negotiator）是 Facebook 开发的替代 npm 的工具，提供更快、更安全的依赖管理。 pnpm（Performant npm）是一个更高效的 npm 替代品，使用硬链接和去重机制来减少磁盘占用并加快安装速度。 npm、pnpm、yarn 的主要区别 特性 npm yarn pnpm 默认包管理方式 直接安装到 node_modules/ 直接安装到 node_modules/ 使用 硬链接 + 共享依赖，占用更少磁盘 安装速度 5+ 版本后速度较快，但依赖解析仍有性能问题 速度较快，支持并行下载 最快，去重能力强 磁盘占用 较大（每个项目都会存一份完整的依赖） 较大（和 npm 类似） 最小（共享全局缓存，多个项目共用依赖） 锁文件 package-lock.json yarn.lock pnpm-lock.yaml 并发安装 支持（npm 5+ 优化） 支持（更快） 支持（最优化） 全局缓存 支持（但项目仍会存副本） 支持（仍会拷贝到 node_modules/） 强制启用（多个项目共用依赖，节省空间） monorepo（多包管理） 需要手动配置 支持 Workspaces 原生支持 Workspaces（最强大） 命令兼容性 标准 兼容 npm，部分不同 兼容 npm，大部分命令相同 自动修复 package.json 是 是 是 生态兼容性 官方标准，兼容性最好 兼容 npm，但部分特性不同 兼容 npm，但采用不同的依赖管理方式 常见命令对比 任务 npm yarn pnpm 初始化项目 npm init yarn init pnpm init 安装依赖 npm install yarn install pnpm install 安装特定依赖 npm install lodash yarn add lodash pnpm add lodash 安装开发依赖 npm install lodash -D yarn add lodash -D pnpm add lodash -D 删除依赖 npm uninstall lodash yarn remove lodash pnpm remove lodash 更新依赖 npm update lodash yarn upgrade lodash pnpm update lodash 全局安装 npm install -g serve yarn global add serve pnpm add -g serve 运行脚本 npm run dev yarn dev pnpm dev 什么时候使用 npm、yarn、pnpm？ ✅ 使用 pnpm（推荐）： 1.你希望减少磁盘占用、加快安装速度 2.你正在开发 monorepo（多包）项目 3.你希望更高效地管理依赖 ✅ 使用 yarn： 1.你希望更快的安装速度，但又不想改变 npm 传统结构 2.你的团队习惯使用 yarn.lock 文件 3.你在用 React Native（官方推荐 yarn） ✅ 使用 npm（适合简单项目）： 1.你希望使用 Node.js 官方的默认工具 2.你不想安装额外的包管理工具 3.你在开发小型项目，不需要 workspaces","summary":"摘要 本文介绍如何使用npm npm版本10.5.0","date_published":"2025-03-13T13:30:05.000Z","tags":["技术","npm","nodejs","npm"]},{"id":"https://blog.hanqunfeng.com/2025/01/02/mermaid/","url":"https://blog.hanqunfeng.com/2025/01/02/mermaid/","title":"Hexo-Next 主题的图形工具 -- Mermaid","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n-->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/intro/\">Mermaid</a> 是一个支持在Markdown文档中绘制流程图、甘特图、序列图等图形的工具。它基于JavaScript实现，能够将Markdown中的元素渲染成HTML元素，从而在网页上直观地展示各种图表‌</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://theme-next.js.org/docs/tag-plugins/mermaid\">Next主题中使用Mermaid说明</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>本文介绍如何在 <code>Hexo-Next</code> 主题中使用 <code>Mermaid</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"配置和使用方法\">配置和使用方法</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>NexT config file 中找到<code>mermaid</code>配置，并设置为<code>true</code>，<code>theme</code> 可以设置浅色和深色背景的样式，共有4个可用选项</p>\n</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mermaid:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Available themes: default | dark | forest | neutral</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span></span><br><span class=\"line\">    <span class=\"attr\">light:</span> <span class=\"string\">dark</span></span><br><span class=\"line\">    <span class=\"attr\">dark:</span> <span class=\"string\">dark</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用方法，其中mermaid与endmermaid是固定搭配，type 用于设置图形的种类，如流程图、时序图、甘特图等，下面示例中会介绍</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid type %&#125;</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>有些小伙伴喜欢使用代码块的形式，使用时去掉前面的<code>#</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#```mermaid</span><br><span class=\"line\">type</span><br><span class=\"line\"></span><br><span class=\"line\">#```</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>但是此时需要在 Hexo config file 中找到<code>highlight</code>，并添加如下内容，才会使代码块的形式生效</p>\n</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">exclude_languages:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">mermaid</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"图形示例\">图形示例</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里只介绍常用的一些图表，更多图表的使用方法可以参考<a href=\"https://mermaid.js.org/intro/\">Mermaid帮助文档</a></p>\n</li>\n</ul>\n<h3 id=\"Flowchart\">Flowchart</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制流程图，支持方向（例如从左到右、从上到下）和节点间关系的定义。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/flowchart.html\">Mermaid Flowchart</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;graph TD&quot;</code>或者<code>&quot;graph LR&quot;</code>，分别表示从上到下和从左到右的方向</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 流程图方向:</span><br><span class=\"line\">  - TB - 从上到下</span><br><span class=\"line\">  - TD - 自上而下，等同于TB</span><br><span class=\"line\">  - BT - 从下到上</span><br><span class=\"line\">  - RL - 从右到左</span><br><span class=\"line\">  - LR - 从左到右</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>&quot;graph TD&quot;</code>：从上到下</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid graph TD %&#125;</span><br><span class=\"line\">A[Hard] --&gt;|Text| B(Round)</span><br><span class=\"line\">B --&gt; C&#123;Decision&#125;</span><br><span class=\"line\">C --&gt;|One| D[Result 1]</span><br><span class=\"line\">C --&gt;|Two| E[Result 2]</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">graph TD\nA[Hard] --&gt;|Text| B(Round)\nB --&gt; C&#123;Decision&#125;\nC --&gt;|One| D[Result 1]\nC --&gt;|Two| E[Result 2]</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph TD，定义一个从上到下的流程图。</span><br><span class=\"line\">TD 是 Top to Down 的缩写，表示流程图从上向下排列。</span><br><span class=\"line\"></span><br><span class=\"line\">A[Hard] --&gt;|Text| B(Round)，定义了一个节点 A，显示为 Hard。</span><br><span class=\"line\">一个带标签的箭头 --&gt;|Text| 指向节点 B，箭头上的标签为 Text。</span><br><span class=\"line\">节点 B 被定义为 Round，这是一个椭圆形节点。</span><br><span class=\"line\"></span><br><span class=\"line\">B --&gt; C&#123;Decision&#125;，节点 B 指向节点 C。</span><br><span class=\"line\">节点 C 被定义为 Decision，这是一个决策节点，用大括号 &#123;&#125; 表示。</span><br><span class=\"line\"></span><br><span class=\"line\">C --&gt;|One| D[Result 1]，决策节点 C 的一个分支，带标签 One，指向节点 D。</span><br><span class=\"line\">节点 D 显示为 Result 1，这是一个矩形节点。</span><br><span class=\"line\"></span><br><span class=\"line\">C --&gt;|Two| E[Result 2]，决策节点 C 的另一个分支，带标签 Two，指向节点 E。</span><br><span class=\"line\">节点 E 显示为 Result 2，也是一个矩形节点。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>&quot;graph LR&quot;</code>：从左到右</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid graph LR %&#125;</span><br><span class=\"line\">A[长方形] -- 链接 --&gt; B((圆))</span><br><span class=\"line\">A --&gt; C(圆角长方形)</span><br><span class=\"line\">B --&gt; D&#123;菱形&#125;</span><br><span class=\"line\">C --&gt; D</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">graph LR\nA[长方形] -- 链接 --&gt; B((圆))\nA --&gt; C(圆角长方形)\nB --&gt; D&#123;菱形&#125;\nC --&gt; D</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR，定义流程图的方向是从左到右（Left to Right）。</span><br><span class=\"line\">节点和箭头从左向右排列。</span><br><span class=\"line\"></span><br><span class=\"line\">A[长方形] -- 链接 --&gt; B((圆))，定义了节点 A 和节点 B。</span><br><span class=\"line\">A 是一个长方形节点，显示内容为“长方形”。</span><br><span class=\"line\">B 是一个圆形节点，内容为空。</span><br><span class=\"line\">它们之间通过一个带标签的箭头 -- 链接 --&gt; 连接，箭头上标注了“链接”。</span><br><span class=\"line\"></span><br><span class=\"line\">A --&gt; C(圆角长方形)，节点 A 指向节点 C。</span><br><span class=\"line\">C 是一个圆角长方形节点，显示内容为“圆角长方形”。</span><br><span class=\"line\"></span><br><span class=\"line\">B --&gt; D&#123;菱形&#125;，节点 B 指向节点 D。</span><br><span class=\"line\">D 是一个菱形节点，显示内容为“菱形”。</span><br><span class=\"line\"></span><br><span class=\"line\">C --&gt; D，节点 C 也指向节点 D，箭头不带标签。</span><br><span class=\"line\"></span><br><span class=\"line\">节点类型和形状</span><br><span class=\"line\">长方形 [] ：如 A[长方形]，是默认的矩形节点。</span><br><span class=\"line\">圆形 (()) ：如 B((圆))，用于表示一个圆形节点。</span><br><span class=\"line\">圆角长方形 () ：如 C(圆角长方形)，用于表示圆角矩形节点。</span><br><span class=\"line\">菱形 &#123;&#125; ：如 D&#123;菱形&#125;，用于表示决策点或条件分支。</span><br></pre></td></tr></table></figure>\n<h3 id=\"Sequence-Diagram\">Sequence Diagram</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制时序图，显示多个实体之间的交互关系，包括消息、时间、状态和数据交换。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/sequenceDiagram.html\">Mermaid Sequence Diagram</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;sequenceDiagram&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid sequenceDiagram %&#125;</span><br><span class=\"line\">Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class=\"line\">loop Healthcheck</span><br><span class=\"line\">    John-&gt;&gt;John: Fight against hypochondria</span><br><span class=\"line\">end</span><br><span class=\"line\">Note right of John: Rational thoughts!</span><br><span class=\"line\">John--&gt;&gt;Alice: Great!</span><br><span class=\"line\">John-&gt;&gt;Bob: How about you?</span><br><span class=\"line\">Bob--&gt;&gt;John: Jolly good!</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">sequenceDiagram\nAlice-&gt;&gt;John: Hello John, how are you?\nloop Healthcheck\n    John-&gt;&gt;John: Fight against hypochondria\nend\nNote right of John: Rational thoughts!\nJohn--&gt;&gt;Alice: Great!\nJohn-&gt;&gt;Bob: How about you?\nBob--&gt;&gt;John: Jolly good!</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构说明</span><br><span class=\"line\">sequenceDiagram: 定义一个序列图，表示消息和事件的时间顺序。</span><br><span class=\"line\">参与者</span><br><span class=\"line\">    Alice、John 和 Bob 是参与者。</span><br><span class=\"line\">    每个参与者在图中会以垂直排列的形式显示。</span><br><span class=\"line\">消息和箭头</span><br><span class=\"line\">    -&gt;&gt; 表示一个消息的发送，方向由箭头决定。</span><br><span class=\"line\">    消息内容写在箭头旁边。</span><br><span class=\"line\">循环（loop）</span><br><span class=\"line\">    使用 loop 定义一个循环块，循环中的消息会重复执行，表示某种持续行为。</span><br><span class=\"line\">备注（Note）</span><br><span class=\"line\">    Note right of John 定义了一条备注，显示在 John 的右侧，用来补充说明。</span><br><span class=\"line\"></span><br><span class=\"line\">代码逐步解析</span><br><span class=\"line\">Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class=\"line\">    表示 Alice 给 John 发送一条消息：“Hello John, how are you?”</span><br><span class=\"line\">loop Healthcheck</span><br><span class=\"line\">    定义一个循环块，标题为“Healthcheck”（健康检查）。</span><br><span class=\"line\">    循环内容是：</span><br><span class=\"line\">        John-&gt;&gt;John: Fight against hypochondria</span><br><span class=\"line\">        表示 John 自己向自己发送一条消息：“Fight against hypochondria”（与疑病症抗争）。</span><br><span class=\"line\">Note right of John: Rational thoughts!</span><br><span class=\"line\">    定义了一条备注，显示在 John 的右侧。</span><br><span class=\"line\">    备注内容为：“Rational thoughts!”（理性思考！）。</span><br><span class=\"line\">John--&gt;&gt;Alice: Great!</span><br><span class=\"line\">    John 回复 Alice 一条消息：“Great!”（很好！）。</span><br><span class=\"line\">    使用 --&gt;&gt; 表示回复消息。</span><br><span class=\"line\">John-&gt;&gt;Bob: How about you?</span><br><span class=\"line\">    John 询问 Bob 一条消息：“How about you?”（你怎么样？）。</span><br><span class=\"line\">Bob--&gt;&gt;John: Jolly good!</span><br><span class=\"line\">    Bob 回复 John 一条消息：“Jolly good!”（非常好！）。</span><br></pre></td></tr></table></figure>\n<h3 id=\"Class-Diagram\">Class Diagram</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制类图，显示对象之间的关系，包括继承、关联、依赖等。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/classDiagram.html\">Mermaid Class Diagram</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;classDiagram&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid classDiagram %&#125;</span><br><span class=\"line\">Class01 &lt;|-- AveryLongClass : Cool</span><br><span class=\"line\">&lt;&lt;interface&gt;&gt; Class01</span><br><span class=\"line\">Class09 --&gt; C2 : Where am i?</span><br><span class=\"line\">Class09 --* C3</span><br><span class=\"line\">Class09 --|&gt; Class07</span><br><span class=\"line\">Class07 : equals()</span><br><span class=\"line\">Class07 : Object[] elementData</span><br><span class=\"line\">Class01 : size()</span><br><span class=\"line\">Class01 : int chimp</span><br><span class=\"line\">Class01 : int gorilla</span><br><span class=\"line\">class Class10 &#123;</span><br><span class=\"line\">  &lt;&lt;service&gt;&gt;</span><br><span class=\"line\">  int id</span><br><span class=\"line\">  size()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">classDiagram\nClass01 &lt;|-- AveryLongClass : Cool\n&lt;&lt;interface&gt;&gt; Class01\nClass09 --&gt; C2 : Where am i?\nClass09 --* C3\nClass09 --|&gt; Class07\nClass07 : equals()\nClass07 : Object[] elementData\nClass01 : size()\nClass01 : int chimp\nClass01 : int gorilla\nclass Class10 &#123;\n  &lt;&lt;service&gt;&gt;\n  int id\n  size()\n&#125;</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">classDiagram</span><br><span class=\"line\">    定义一个类图，展示类的属性、方法以及它们之间的关系。</span><br><span class=\"line\">类和修饰符</span><br><span class=\"line\">    使用 class ClassName 定义一个类。</span><br><span class=\"line\">    类的属性和方法定义在 class 块内。</span><br><span class=\"line\">    特殊修饰符如 &lt;&lt;interface&gt;&gt; 和 &lt;&lt;service&gt;&gt; 用于说明类的角色或类型。</span><br><span class=\"line\">关系符号</span><br><span class=\"line\">    &lt;|-- 表示继承（extends）。</span><br><span class=\"line\">    --|&gt; 表示实现（implements，接口的实现）。</span><br><span class=\"line\">    --&gt; 表示关联（普通引用）。</span><br><span class=\"line\">    --* 表示组合关系（一个类包含另一个类）。</span><br><span class=\"line\">    : 后跟关系的说明或注释。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">代码逐步解析</span><br><span class=\"line\">Class01 &lt;|-- AveryLongClass : Cool</span><br><span class=\"line\">    表示 AveryLongClass 继承了 Class01，关系名称为 Cool。</span><br><span class=\"line\">    &lt;|-- 表示继承（父类到子类）。</span><br><span class=\"line\">&lt;&lt;interface&gt;&gt; Class01</span><br><span class=\"line\">    将 Class01 标记为一个接口。</span><br><span class=\"line\">Class09 --&gt; C2 : Where am i?</span><br><span class=\"line\">    表示 Class09 与 C2 有一个关联关系，注释为 “Where am i?”。</span><br><span class=\"line\">Class09 --* C3</span><br><span class=\"line\">    表示 Class09 与 C3 有一个组合关系。</span><br><span class=\"line\">    Class09 包含一个或多个 C3 的实例。</span><br><span class=\"line\">Class09 --|&gt; Class07</span><br><span class=\"line\">    表示 Class09 实现了 Class07。</span><br><span class=\"line\">    --|&gt; 通常用于表示接口实现。</span><br><span class=\"line\">Class07 : equals()</span><br><span class=\"line\">    表示 Class07 定义了一个方法 equals()。</span><br><span class=\"line\">Class07 : Object[] elementData</span><br><span class=\"line\">    表示 Class07 有一个属性 elementData，类型是 Object[]（数组）。</span><br><span class=\"line\">Class01 : size()</span><br><span class=\"line\">    表示 Class01 有一个方法 size()。</span><br><span class=\"line\">Class01 : int chimp 和 Class01 : int gorilla</span><br><span class=\"line\">    表示 Class01 有两个整型属性：chimp 和 gorilla。</span><br><span class=\"line\">class Class10 &#123; ... &#125;</span><br><span class=\"line\">    定义了一个名为 Class10 的类。</span><br><span class=\"line\">    类中有一个修饰符 &lt;&lt;service&gt;&gt;，表示这是一个服务类。</span><br><span class=\"line\">    属性和方法：</span><br><span class=\"line\">        int id：整型属性。</span><br><span class=\"line\">        size()：方法。</span><br></pre></td></tr></table></figure>\n<h3 id=\"State-Diagram\">State Diagram</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制状态图，显示对象的状态转移和行为。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/stateDiagram.html\">Mermaid State Diagram</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;stateDiagram&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid stateDiagram %&#125;</span><br><span class=\"line\">[*] --&gt; Still</span><br><span class=\"line\">Still --&gt; [*]</span><br><span class=\"line\">Still --&gt; Moving</span><br><span class=\"line\">Moving --&gt; Still</span><br><span class=\"line\">Moving --&gt; Crash</span><br><span class=\"line\">Crash --&gt; [*]</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">stateDiagram\n[*] --&gt; Still\nStill --&gt; [*]\nStill --&gt; Moving\nMoving --&gt; Still\nMoving --&gt; Crash\nCrash --&gt; [*]</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">stateDiagram</span><br><span class=\"line\">    定义这是一个状态图，用于表示状态和状态之间的转换。</span><br><span class=\"line\">[*]</span><br><span class=\"line\">    表示初始状态或终止状态。</span><br><span class=\"line\">    起始状态通常有箭头指向第一个状态。</span><br><span class=\"line\">    终止状态通常有箭头指向它。</span><br><span class=\"line\">状态</span><br><span class=\"line\">    用状态名称定义状态，例如 Still、Moving、Crash。</span><br><span class=\"line\">箭头</span><br><span class=\"line\">    --&gt; 表示状态之间的转换方向。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">代码逐步解析</span><br><span class=\"line\">[*] --&gt; Still</span><br><span class=\"line\">    系统从初始状态进入 Still 状态。</span><br><span class=\"line\">Still --&gt; [*]</span><br><span class=\"line\">    系统从 Still 状态可以直接进入终止状态（系统结束）。</span><br><span class=\"line\">Still --&gt; Moving</span><br><span class=\"line\">    系统从 Still 状态可以转换为 Moving 状态。</span><br><span class=\"line\">Moving --&gt; Still</span><br><span class=\"line\">    系统从 Moving 状态可以返回到 Still 状态。</span><br><span class=\"line\">Moving --&gt; Crash</span><br><span class=\"line\">    系统从 Moving 状态可以进入 Crash 状态。</span><br><span class=\"line\">Crash --&gt; [*]</span><br><span class=\"line\">    系统从 Crash 状态可以进入终止状态（表示系统崩溃或终止）。</span><br></pre></td></tr></table></figure>\n<h3 id=\"Entity-Relationship-Diagram\">Entity Relationship Diagram</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制实体关系图，显示实体之间的关系，包括关联、依赖等。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/entityRelationshipDiagram.html\">Mermaid Entity Relationship Diagram</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;erDiagram&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid erDiagram %&#125;</span><br><span class=\"line\">CUSTOMER ||--o&#123; ORDER : places</span><br><span class=\"line\">ORDER ||--|&#123; ITEM : contains</span><br><span class=\"line\">CUSTOMER &#125;|..|&#123; DELIVERY-ADDRESS : has</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">erDiagram\nCUSTOMER ||--o&#123; ORDER : places\nORDER ||--|&#123; ITEM : contains\nCUSTOMER &#125;|..|&#123; DELIVERY-ADDRESS : has</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">erDiagram</span><br><span class=\"line\">    定义这是一个实体关系图。</span><br><span class=\"line\">    展示数据库中表（实体）之间的关系。</span><br><span class=\"line\">实体</span><br><span class=\"line\">    例如 CUSTOMER、ORDER 和 ITEM，每个实体对应数据库中的一个表。</span><br><span class=\"line\">关系</span><br><span class=\"line\">    ||--o&#123; 表示一对多关系（1:N）。</span><br><span class=\"line\">    ||--|&#123; 表示一对多关系（1:N），但强调实体的唯一性（每个子记录属于唯一的父记录）。</span><br><span class=\"line\">    &#125;|..|&#123; 表示多对多关系（N:M）。</span><br><span class=\"line\">注释</span><br><span class=\"line\">    : 后的文字是关系的描述，例如 places、contains、has。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">代码逐步解析</span><br><span class=\"line\">CUSTOMER ||--o&#123; ORDER : places</span><br><span class=\"line\">    表示一个客户 (CUSTOMER) 可以下多个订单 (ORDER)。</span><br><span class=\"line\">    ||--o&#123; 表示 一对多关系（1:N），即一个客户对应多个订单。</span><br><span class=\"line\">ORDER ||--|&#123; ITEM : contains</span><br><span class=\"line\">    表示一个订单 (ORDER) 包含多个商品 (ITEM)。</span><br><span class=\"line\">    ||--|&#123; 表示 一对多关系，且每个商品的记录与某个订单唯一对应。</span><br><span class=\"line\">CUSTOMER &#125;|..|&#123; DELIVERY-ADDRESS : has</span><br><span class=\"line\">    表示一个客户 (CUSTOMER) 可以有多个配送地址 (DELIVERY-ADDRESS)，而每个配送地址也可能对应多个客户。</span><br><span class=\"line\">    &#125;|..|&#123; 表示 多对多关系（N:M）。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Gantt-Chart\">Gantt Chart</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制甘特图，显示任务计划、进度和资源分配。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/gantt.html\">Mermaid Gantt Chart</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;gantt&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid gantt %&#125;</span><br><span class=\"line\">title Project Timeline</span><br><span class=\"line\">dateFormat  YYYY-MM-DD</span><br><span class=\"line\">section Section1</span><br><span class=\"line\">Completed :done,    des1, 2014-01-06,2014-01-08</span><br><span class=\"line\">Active        :active,  des2, 2014-01-07, 3d</span><br><span class=\"line\">Parallel 1   :         des3, after des1, 1d</span><br><span class=\"line\">Parallel 2   :         des4, after des1, 1d</span><br><span class=\"line\">Parallel 3   :         des5, after des3, 1d</span><br><span class=\"line\">Parallel 4   :         des6, after des4, 1d</span><br><span class=\"line\">section Section2</span><br><span class=\"line\">Task 1 :  t1,after des6,5d</span><br><span class=\"line\">Task 2 :  t2,after t1,3d</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">gantt\ntitle Project Timeline\ndateFormat  YYYY-MM-DD\nsection Section1\nCompleted :done,    des1, 2014-01-06,2014-01-08\nActive        :active,  des2, 2014-01-07, 3d\nParallel 1   :         des3, after des1, 1d\nParallel 2   :         des4, after des1, 1d\nParallel 3   :         des5, after des3, 1d\nParallel 4   :         des6, after des4, 1d\nsection Section2\nTask 1 :  t1,after des6,5d\nTask 2 :  t2,after t1,3d</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">gantt</span><br><span class=\"line\">    定义一个甘特图，用于表示任务的时间分布和依赖关系。</span><br><span class=\"line\">title</span><br><span class=\"line\">    定义甘特图的标题，这里是 Project Timeline。</span><br><span class=\"line\">dateFormat</span><br><span class=\"line\">    定义日期格式，这里是 YYYY-MM-DD（年-月-日）。</span><br><span class=\"line\">section</span><br><span class=\"line\">    定义任务的分类（部分）。</span><br><span class=\"line\">    每个 section 下包含一组任务，任务在图表中分组显示。</span><br><span class=\"line\">任务格式</span><br><span class=\"line\">    每个任务按以下格式定义：</span><br><span class=\"line\">        任务名称 : 状态, 标识符, 开始日期或依赖, 持续时间</span><br><span class=\"line\">    任务名称：任务的描述。</span><br><span class=\"line\">    状态：可选，表示任务状态：</span><br><span class=\"line\">        done：已完成。</span><br><span class=\"line\">        active：正在进行。</span><br><span class=\"line\">    标识符：任务的唯一标识符，用于定义依赖关系。</span><br><span class=\"line\">    时间：可以是开始日期、结束日期、或依赖任务。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">代码逐步解析</span><br><span class=\"line\">section Section1</span><br><span class=\"line\">    定义一个名为 Section1 的部分，包含一组任务。</span><br><span class=\"line\">Completed :done, des1, 2014-01-06,2014-01-08</span><br><span class=\"line\">    任务名称：Completed。</span><br><span class=\"line\">    状态：done（已完成）。</span><br><span class=\"line\">    标识符：des1。</span><br><span class=\"line\">    开始日期：2014-01-06。</span><br><span class=\"line\">    结束日期：2014-01-08。</span><br><span class=\"line\">Active :active, des2, 2014-01-07, 3d</span><br><span class=\"line\">    任务名称：Active。</span><br><span class=\"line\">    状态：active（正在进行）。</span><br><span class=\"line\">    标识符：des2。</span><br><span class=\"line\">    开始日期：2014-01-07。</span><br><span class=\"line\">    持续时间：3d（3天）。</span><br><span class=\"line\">Parallel 1 : des3, after des1, 1d</span><br><span class=\"line\">    任务名称：Parallel 1。</span><br><span class=\"line\">    无状态（默认值）。</span><br><span class=\"line\">    标识符：des3。</span><br><span class=\"line\">    开始时间：依赖任务 des1（在任务 Completed 后开始）。</span><br><span class=\"line\">    持续时间：1d（1天）。</span><br><span class=\"line\">Parallel 2 : des4, after des1, 1d</span><br><span class=\"line\">    任务名称：Parallel 2。</span><br><span class=\"line\">    无状态。</span><br><span class=\"line\">    标识符：des4。</span><br><span class=\"line\">    开始时间：依赖任务 des1（在任务 Completed 后开始）。</span><br><span class=\"line\">    持续时间：1d（1天）。</span><br><span class=\"line\">Parallel 3 : des5, after des3, 1d</span><br><span class=\"line\">    任务名称：Parallel 3。</span><br><span class=\"line\">    无状态。</span><br><span class=\"line\">    标识符：des5。</span><br><span class=\"line\">    开始时间：依赖任务 des3（在任务 Parallel 1 后开始）。</span><br><span class=\"line\">    持续时间：1d（1天）。</span><br><span class=\"line\">Parallel 4 : des6, after des4, 1d</span><br><span class=\"line\">    任务名称：Parallel 4。</span><br><span class=\"line\">    无状态。</span><br><span class=\"line\">    标识符：des6。</span><br><span class=\"line\">    开始时间：依赖任务 des4（在任务 Parallel 2 后开始）。</span><br><span class=\"line\">    持续时间：1d（1天）。</span><br><span class=\"line\">section Section2</span><br><span class=\"line\">    定义甘特图的第二部分，用于分组显示后续任务。</span><br><span class=\"line\">    任务属于不同的部分以便分类和分组。</span><br><span class=\"line\">Task 1 : t1, after des6, 5d</span><br><span class=\"line\">    任务名称：Task 1。</span><br><span class=\"line\">    标识符：t1。</span><br><span class=\"line\">    开始时间：依赖任务 des6（Parallel 4）完成后开始。</span><br><span class=\"line\">    持续时间：5d（5天）。</span><br><span class=\"line\">Task 2 : t2, after t1, 3d</span><br><span class=\"line\">    任务名称：Task 2。</span><br><span class=\"line\">    标识符：t2。</span><br><span class=\"line\">    开始时间：依赖任务 t1（Task 1）完成后开始。</span><br><span class=\"line\">    持续时间：3d（3天）。</span><br></pre></td></tr></table></figure>\n<h3 id=\"Pie-Chart\">Pie Chart</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制饼状图，显示数据分布情况。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/pie.html\">Mermaid Pie Chart</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;pie&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid pie showData %&#125;</span><br><span class=\"line\">%%&#123;init: &#123;&quot;pie&quot;: &#123;&quot;textPosition&quot;: 0.4&#125;, &quot;themeVariables&quot;: &#123;&quot;pieOuterStrokeWidth&quot;: &quot;5px&quot;,&quot;pie1&quot;: &quot;#ff9999&quot;,&quot;pie2&quot;: &quot;#99ccff&quot;,&quot;pie3&quot;: &quot;#99ff99&quot;&#125;&#125; &#125;%%</span><br><span class=\"line\">title Expenses</span><br><span class=\"line\">&quot;Rent&quot; : 200</span><br><span class=\"line\">&quot;Food&quot; : 200</span><br><span class=\"line\">&quot;Transport&quot; : 400</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">%%&#123;init: &#123;&quot;pie&quot;: &#123;&quot;textPosition&quot;: 0.4&#125;, &quot;themeVariables&quot;: &#123;&quot;pieOuterStrokeWidth&quot;: &quot;5px&quot;,&quot;pie1&quot;: &quot;#ff9999&quot;,&quot;pie2&quot;: &quot;#99ccff&quot;,&quot;pie3&quot;: &quot;#99ff99&quot;&#125;&#125; &#125;%%\npie showData\ntitle Expenses\n&quot;Rent&quot; : 200\n&quot;Food&quot; : 200\n&quot;Transport&quot; : 400</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">%%&#123;init: ...&#125;%%：</span><br><span class=\"line\">    Mermaid.js 的初始化配置，用于全局设置图表属性和样式。</span><br><span class=\"line\">    pie 属性</span><br><span class=\"line\">        textPosition: 设置饼图数据标签的相对位置。</span><br><span class=\"line\">            值范围为 0 到 1，表示标签距离饼图中心的比例。0.4 表示标签距离中心较近，接近 40% 的半径位置。</span><br><span class=\"line\">    themeVariables</span><br><span class=\"line\">        pieOuterStrokeWidth: 设置饼图外环的宽度。设置为 5px，表示饼图有明显的外边框。</span><br><span class=\"line\">        &quot;pie1&quot;: &quot;#ff9999&quot;,&quot;pie2&quot;: &quot;#99ccff&quot;,&quot;pie3&quot;: &quot;#99ff99&quot;: 配置每个分区的颜色。</span><br><span class=\"line\">pie</span><br><span class=\"line\">    定义这是一个饼图。</span><br><span class=\"line\">showData</span><br><span class=\"line\">    显示数据项的数值。</span><br><span class=\"line\">title Expenses</span><br><span class=\"line\">    设置饼图的标题为 Expenses（费用）。</span><br><span class=\"line\">数据项</span><br><span class=\"line\">    数据项定义了饼图的各个部分：</span><br><span class=\"line\">        &quot;Rent&quot; : 200，占比：200 / (200 + 200 + 400) = 1/4 = 25%。</span><br><span class=\"line\">        &quot;Food&quot; : 200，占比：200 / (200 + 200 + 400) = 1/4 = 25%。</span><br><span class=\"line\">        &quot;Transport&quot; : 400，占比：400 / (200 + 200 + 400) = 1/2 = 50%。</span><br><span class=\"line\">    每个数据项包含：</span><br><span class=\"line\">        标签：如 &quot;Rent&quot;、&quot;Food&quot;、&quot;Transport&quot;。</span><br><span class=\"line\">        数值：如 200、400，表示该部分的权重或数值大小。</span><br></pre></td></tr></table></figure>\n<h3 id=\"XY-Chart\">XY Chart</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制 XY 轴图(柱状图和折线图)，显示数据分布和趋势。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/xyChart.html\">Mermaid XY Chart</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;xychart-beta&quot;</code>，目前 xychart-beta 还处在改进阶段</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid xychart-beta %&#125;</span><br><span class=\"line\">%%&#123;init: &#123;&quot;xyChart&quot;: &#123;&quot;width&quot;: 900,&quot;height&quot;:600&#125;, &quot;themeVariables&quot;: &#123;&quot;xyChart&quot;:&#123;&quot;titleColor&quot;: &quot;#ff0000&quot;&#125;&#125;&#125; &#125;%%</span><br><span class=\"line\">title &quot;Sales Revenue&quot;</span><br><span class=\"line\">x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec]</span><br><span class=\"line\">y-axis &quot;Revenue (in $)&quot; 4000 --&gt; 11000</span><br><span class=\"line\">bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]</span><br><span class=\"line\">line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">---\nconfig:\n    xyChart:\n        width: 900\n        height: 600\n    themeVariables:\n        xyChart:\n            titleColor: &quot;#ff0000&quot;\n---\nxychart-beta\ntitle &quot;Sales Revenue&quot;\nx-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec]\ny-axis &quot;Revenue (in $)&quot; 4000 --&gt; 11000\nbar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]\nline [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码结构解析</span><br><span class=\"line\">%%&#123;init: ...&#125;%%：</span><br><span class=\"line\">    Mermaid.js 的初始化配置，用于全局设置图表属性和样式。</span><br><span class=\"line\">    xyChart.width 和 xyChart.height : 设置图表的宽度和高度。</span><br><span class=\"line\">    themeVariables.xyChart.titleColor: 设置标题的颜色。</span><br><span class=\"line\">title</span><br><span class=\"line\">    设置图表的标题。</span><br><span class=\"line\">坐标轴定义</span><br><span class=\"line\">    x-axis：X轴标签为月份（从1月到12月）。</span><br><span class=\"line\">    y-axis：Y轴范围从 $4000 到 $11000，单位为美元。</span><br><span class=\"line\">数据</span><br><span class=\"line\">    bar：柱状图数据，表示每个月的销售收入。</span><br><span class=\"line\">    line：折线图数据，表示每个月的销量趋势。</span><br></pre></td></tr></table></figure>\n<h3 id=\"Journey-Diagram\">Journey Diagram</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制旅程图，显示用户的体验流程，包括用户进入系统、操作、退出系统等。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/userJourney.html\">Mermaid Journey Diagram</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;journey&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid journey %&#125;</span><br><span class=\"line\">title My working day</span><br><span class=\"line\">section Morning</span><br><span class=\"line\">  wake up : 5 : me</span><br><span class=\"line\">  go to work : 3 : me,you</span><br><span class=\"line\">section Lunch</span><br><span class=\"line\">  have lunch : 5 : me,you</span><br><span class=\"line\">  go to work : 1 : me,you</span><br><span class=\"line\">section Dinner</span><br><span class=\"line\">  finish your meal : 5 : me</span><br><span class=\"line\">section Go home</span><br><span class=\"line\">  go home : 5 : me</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">journey\ntitle My working day\nsection Morning\n  wake up : 5 : me\n  go to work : 3 : me,you\nsection Lunch\n  have lunch : 5 : me,you\n  go to work : 1 : me,you\nsection Dinner\n  finish your meal : 5 : me\nsection Go home\n  go home : 5 : me</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">journey</span><br><span class=\"line\">    定义这是一个旅程图。</span><br><span class=\"line\">title My working day</span><br><span class=\"line\">    设置旅程图的标题为 &quot;My working day&quot;（我的工作日）。</span><br><span class=\"line\">section</span><br><span class=\"line\">    定义旅程图的分段，用于表示一天中的不同阶段，例如：</span><br><span class=\"line\">        Morning（早晨）。</span><br><span class=\"line\">        Lunch（午餐时间）。</span><br><span class=\"line\">        Dinner（晚餐）。</span><br><span class=\"line\">        Go home（回家）。</span><br><span class=\"line\">任务格式</span><br><span class=\"line\">    任务描述 : 满意度评分 : 参与者</span><br><span class=\"line\">        任务描述：描述具体的任务或活动。</span><br><span class=\"line\">        满意度评分：从 1 到 5，表示对任务或活动的满意程度。</span><br><span class=\"line\">        参与者：参与任务的人，可以是 me（自己）、you（其他人）或两者。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">代码逐步解析</span><br><span class=\"line\">section Morning</span><br><span class=\"line\">    wake up : 5 : me</span><br><span class=\"line\">        活动：wake up（起床）。</span><br><span class=\"line\">        满意度：5（非常满意）。</span><br><span class=\"line\">        参与者：me（自己）。</span><br><span class=\"line\">    go to work : 3 : me,you</span><br><span class=\"line\">        活动：go to work（去工作）。</span><br><span class=\"line\">        满意度：3（中等满意）。</span><br><span class=\"line\">        参与者：me 和 you（自己和其他人）。</span><br><span class=\"line\">section Lunch</span><br><span class=\"line\">    have lunch : 5 : me,you</span><br><span class=\"line\">        活动：have lunch（吃午饭）。</span><br><span class=\"line\">        满意度：5（非常满意）。</span><br><span class=\"line\">        参与者：me 和 you（自己和其他人）。</span><br><span class=\"line\">    go to work : 1 : me,you</span><br><span class=\"line\">        活动：go to work（吃完饭继续工作）。</span><br><span class=\"line\">        满意度：1（非常不满意）。</span><br><span class=\"line\">        参与者：me 和 you。</span><br><span class=\"line\">section Dinner</span><br><span class=\"line\">    finish your meal : 5 : me</span><br><span class=\"line\">        活动：finish your meal（吃完饭）。</span><br><span class=\"line\">        满意度：5（非常满意）。</span><br><span class=\"line\">        参与者：me（自己）。</span><br><span class=\"line\">section Go home</span><br><span class=\"line\">    go home : 5 : me</span><br><span class=\"line\">        活动：go home（回家）。</span><br><span class=\"line\">        满意度：5（非常满意）。</span><br><span class=\"line\">        参与者：me（自己）。</span><br></pre></td></tr></table></figure>\n<h3 id=\"Requirement-Diagram\">Requirement Diagram</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制需求图，显示系统的功能需求和依赖关系。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/requirementDiagram.html\">Mermaid Requirement Diagram</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;requirementDiagram&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid requirementDiagram %&#125;</span><br><span class=\"line\">requirement &quot;测试需求&quot; &#123;</span><br><span class=\"line\">    id: 1</span><br><span class=\"line\">    text: &quot;测试文本&quot;</span><br><span class=\"line\">    risk: High</span><br><span class=\"line\">    verifymethod: test</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">requirement &quot;测试需求2&quot; &#123;</span><br><span class=\"line\">    id: 2</span><br><span class=\"line\">    text: &quot;测试文本&quot;</span><br><span class=\"line\">    risk: High</span><br><span class=\"line\">    verifymethod: test</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">element &quot;测试实体&quot; &#123;</span><br><span class=\"line\">    type: &quot;模拟&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&quot;测试实体&quot; - satisfies -&gt; &quot;测试需求&quot;</span><br><span class=\"line\">&quot;测试实体&quot; - satisfies -&gt; &quot;测试需求2&quot;</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">requirementDiagram\nrequirement &quot;测试需求&quot; &#123;\n    id: 1\n    text: &quot;测试文本&quot;\n    risk: High\n    verifymethod: test\n&#125;\nrequirement &quot;测试需求2&quot; &#123;\n    id: 2\n    text: &quot;测试文本&quot;\n    risk: High\n    verifymethod: test\n&#125;\nelement &quot;测试实体&quot; &#123;\n    type: &quot;模拟&quot;\n&#125;\n&quot;测试实体&quot; - satisfies -&gt; &quot;测试需求&quot;\n&quot;测试实体&quot; - satisfies -&gt; &quot;测试需求2&quot;</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">requirementDiagram</span><br><span class=\"line\">    定义这是一个需求图。</span><br><span class=\"line\">requirement</span><br><span class=\"line\">    定义一个需求节点，包含需求的详细属性，如：</span><br><span class=\"line\">        id：需求编号。</span><br><span class=\"line\">        text：需求的描述。</span><br><span class=\"line\">        risk：需求的风险级别（如 High 表示高风险）。</span><br><span class=\"line\">        verifymethod：验证需求的方法（如 test 表示通过测试验证）。</span><br><span class=\"line\">element</span><br><span class=\"line\">    定义一个元素，用于表示系统中的某个实体或对象。</span><br><span class=\"line\">    包含属性，如：</span><br><span class=\"line\">        type：实体的类型（如 模拟 表示模拟实体）。</span><br><span class=\"line\">关系定义</span><br><span class=\"line\">    定义了两个关系：</span><br><span class=\"line\">        &quot;测试实体&quot; - satisfies -&gt; &quot;测试需求&quot;  : 测试实体 满足了 测试需求</span><br><span class=\"line\">        &quot;测试实体&quot; - satisfies -&gt; &quot;测试需求2&quot; : 测试实体 满足了 测试需求2</span><br><span class=\"line\">    - satisfies -&gt;：satisfies 表示满足关系，箭头方向从实体指向需求</span><br><span class=\"line\"></span><br><span class=\"line\">代码逐步解析</span><br><span class=\"line\">需求定义</span><br><span class=\"line\">    requirement &quot;测试需求&quot;</span><br><span class=\"line\">        定义第一个需求，显示名称为 测试需求。</span><br><span class=\"line\">        属性：</span><br><span class=\"line\">            id: 1（需求编号为 1）。</span><br><span class=\"line\">            text: &quot;测试文本&quot;（描述文本为 &quot;测试文本&quot;）。</span><br><span class=\"line\">            risk: High（高风险需求）。</span><br><span class=\"line\">            verifymethod: test（验证方法为测试）。</span><br><span class=\"line\">    requirement &quot;测试需求2&quot;</span><br><span class=\"line\">        定义第二个需求，显示名称为 测试需求2。</span><br><span class=\"line\">        属性：</span><br><span class=\"line\">            id: 2（需求编号为 2）。</span><br><span class=\"line\">            text: &quot;测试文本&quot;（描述文本与第一个需求相同）。</span><br><span class=\"line\">            risk: High（高风险需求）。</span><br><span class=\"line\">            verifymethod: test（验证方法为测试）。</span><br><span class=\"line\">实体定义</span><br><span class=\"line\">    element &quot;测试实体&quot;</span><br><span class=\"line\">        定义一个系统实体，显示名称为 测试实体。</span><br><span class=\"line\">        属性：</span><br><span class=\"line\">            type: &quot;模拟&quot;（实体类型为 &quot;模拟&quot;）。</span><br></pre></td></tr></table></figure>\n<h3 id=\"Gitgraph-Diagram\">Gitgraph Diagram</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制Git图，显示代码仓库的提交历史和分支关系。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/gitgraph.html\">Mermaid Gitgraph Diagram</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;gitgraph&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid gitGraph %&#125;</span><br><span class=\"line\">commit</span><br><span class=\"line\">commit</span><br><span class=\"line\">commit</span><br><span class=\"line\">branch newbranch</span><br><span class=\"line\">checkout newbranch</span><br><span class=\"line\">commit</span><br><span class=\"line\">commit</span><br><span class=\"line\">checkout main</span><br><span class=\"line\">merge newbranch</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">gitGraph\ncommit\ncommit\ncommit\nbranch newbranch\ncheckout newbranch\ncommit\ncommit\ncheckout main\nmerge newbranch</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">gitGraph</span><br><span class=\"line\">    定义这是一个 Git 图。</span><br><span class=\"line\">commit</span><br><span class=\"line\">    表示一次提交操作，每个 commit 节点代表代码仓库的某个提交点。</span><br><span class=\"line\">branch</span><br><span class=\"line\">    创建一个新分支。</span><br><span class=\"line\">    格式：branch 分支名称。</span><br><span class=\"line\">checkout</span><br><span class=\"line\">    切换到指定分支。</span><br><span class=\"line\">    格式：checkout 分支名称。</span><br><span class=\"line\">merge</span><br><span class=\"line\">    将指定分支合并到当前分支。</span><br><span class=\"line\">    格式：merge 分支名称。</span><br></pre></td></tr></table></figure>\n<h3 id=\"Mindmap\">Mindmap</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制思维导图，显示主题和子主题之间的 hierarchical 关系。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/mindmap.html\">Mermaid Mindmap</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;mindmap&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid mindmap %&#125;</span><br><span class=\"line\">root((mindmap))</span><br><span class=\"line\">    (origins)</span><br><span class=\"line\">        Long history</span><br><span class=\"line\">        ::icon(fa fa-book)</span><br><span class=\"line\">        Popularisation</span><br><span class=\"line\">            British popular psychology author Tony Buzan</span><br><span class=\"line\">    [Research]</span><br><span class=\"line\">        On effectivness&lt;br/&gt;and features</span><br><span class=\"line\">        On Automatic creation</span><br><span class=\"line\">            Uses</span><br><span class=\"line\">                Creative techniques</span><br><span class=\"line\">                Strategic planning</span><br><span class=\"line\">                Argument mapping</span><br><span class=\"line\">    Tools</span><br><span class=\"line\">        Pen and paper</span><br><span class=\"line\">        Mermaid</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">mindmap\nroot((mindmap))\n    (origins)\n        Long history\n        ::icon(fa fa-book)\n        Popularisation\n            British popular psychology author Tony Buzan\n    [Research]\n        On effectivness&lt;br/&gt;and features\n        On Automatic creation\n            Uses\n                Creative techniques\n                Strategic planning\n                Argument mapping\n    Tools\n        Pen and paper\n        Mermaid</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">mindmap</span><br><span class=\"line\">    定义这是一个思维导图。</span><br><span class=\"line\">root((mindmap))</span><br><span class=\"line\">    定义思维导图的根节点，显示为圆形并标注为 &quot;mindmap&quot;。</span><br><span class=\"line\">子节点使用缩进表示从属关系：</span><br><span class=\"line\">    每一级缩进代表一个层级的子节点。</span><br><span class=\"line\">    子节点可以直接添加内容或通过 &lt;br/&gt; 换行。</span><br><span class=\"line\">::icon(...)</span><br><span class=\"line\">    为节点添加图标。Mermaid.js 支持使用 FontAwesome 的图标。</span><br><span class=\"line\"></span><br><span class=\"line\">节点形状</span><br><span class=\"line\">长方形 [] ：如 [长方形]，是默认的矩形节点。这个是默认的节点类型。</span><br><span class=\"line\">圆形 (()) ：如 ((圆))，用于表示一个圆形节点。</span><br><span class=\"line\">圆角长方形 () ：如 (圆角长方形)，用于表示圆角矩形节点。</span><br></pre></td></tr></table></figure>\n<h3 id=\"QuadrantChart\">QuadrantChart</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于绘制象限图，显示不同维度之间的比较关系。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://mermaid.js.org/syntax/quadrantChart.html\">Mermaid QuadrantChart</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>type 为 <code>&quot;quadrantChart&quot;</code></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% mermaid quadrantChart %&#125;</span><br><span class=\"line\">%%&#123;init: &#123;&quot;quadrantChart&quot;: &#123;&quot;chartHeight&quot;: 600, &quot;chartWidth&quot;: 800, &quot;pointTextPadding&quot;: 10&#125;, &quot;themeVariables&quot;: &#123;&quot;quadrant1Fill&quot;: &quot;#ff0000&quot;, &quot;quadrant2Fill&quot;: &quot;#FFFF00&quot;, &quot;quadrant3Fill&quot;: &quot;#32CD32&quot;, &quot;quadrant4Fill&quot;: &quot;#800080&quot;&#125;&#125;&#125;%%</span><br><span class=\"line\">title Reach and engagement of carpaigns</span><br><span class=\"line\">x-axis Low Reach --&gt; High Reach</span><br><span class=\"line\">y-axis Low Engagement --&gt; High Engagement</span><br><span class=\"line\">quadrant-1 we should expand</span><br><span class=\"line\">quadrant-2 Need to promote</span><br><span class=\"line\">quadrant-3 Re-evaluate</span><br><span class=\"line\">quadrant-4 May be improved</span><br><span class=\"line\">Campaign A: [0.3,0.6]</span><br><span class=\"line\">Campaign B: [0.45,0.23]</span><br><span class=\"line\">Campaign C: [0.57,0.69]</span><br><span class=\"line\">Campaign D: [0.78,0.34]</span><br><span class=\"line\">Campaign E: [0.40,0.34]</span><br><span class=\"line\">Campaign F: [0.35,0.78]</span><br><span class=\"line\">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>效果</p>\n</li>\n</ul>\n<pre><code class=\"highlight mermaid\">%%&#123;init: &#123;&quot;quadrantChart&quot;: &#123;&quot;chartHeight&quot;: 600, &quot;chartWidth&quot;: 800, &quot;pointTextPadding&quot;: 10&#125;, &quot;themeVariables&quot;: &#123;&quot;quadrant1Fill&quot;: &quot;#ff0000&quot;, &quot;quadrant2Fill&quot;: &quot;#FFFF00&quot;, &quot;quadrant3Fill&quot;: &quot;#32CD32&quot;, &quot;quadrant4Fill&quot;: &quot;#800080&quot;&#125;&#125;&#125;%%\nquadrantChart\ntitle Reach and engagement of carpaigns\nx-axis Low Reach --&gt; High Reach\ny-axis Low Engagement --&gt; High Engagement\nquadrant-1 we should expand\nquadrant-2 Need to promote\nquadrant-3 Re-evaluate\nquadrant-4 May be improved\nCampaign A: [0.3,0.6]\nCampaign B: [0.45,0.23]\nCampaign C: [0.57,0.69]\nCampaign D: [0.78,0.34]\nCampaign E: [0.40,0.34]\nCampaign F: [0.35,0.78]</code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本结构</span><br><span class=\"line\">%%&#123;init: ...&#125;%%</span><br><span class=\"line\">    这是 Mermaid.js 的初始化配置块，用于自定义图表的全局参数和样式。</span><br><span class=\"line\">    配置内容，详见下文：</span><br><span class=\"line\">        quadrantChart：自定义象限图的相关参数。</span><br><span class=\"line\">        themeVariables： 图表主题配色。</span><br><span class=\"line\">quadrantChart</span><br><span class=\"line\">    定义这是一个象限图。</span><br><span class=\"line\">title</span><br><span class=\"line\">    标题</span><br><span class=\"line\"></span><br><span class=\"line\">坐标轴，定义 X 轴和 Y 轴的范围和方向：</span><br><span class=\"line\">x-axis Low Reach --&gt; High Reach</span><br><span class=\"line\">    X 轴 从 “Low Reach” 到 “High Reach”。</span><br><span class=\"line\">y-axis Low Engagement --&gt; High Engagement</span><br><span class=\"line\">    Y 轴 从 “Low Engagement” 到 “High Engagement”。</span><br><span class=\"line\"></span><br><span class=\"line\">象限定义</span><br><span class=\"line\">quadrant-1 we should expand</span><br><span class=\"line\">    象限 1（右上）：&quot;we should expand&quot;</span><br><span class=\"line\">quadrant-2 Need to promote</span><br><span class=\"line\">    象限 2（左上）：&quot;Need to promote&quot;</span><br><span class=\"line\">quadrant-3 Re-evaluate</span><br><span class=\"line\">    象限 3（左下）：&quot;Re-evaluate&quot;</span><br><span class=\"line\">quadrant-4 May be improved</span><br><span class=\"line\">    象限 4（右下）：&quot;May be improved&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">数据点</span><br><span class=\"line\">Campaign A: [0.3,0.6]</span><br><span class=\"line\">Campaign B: [0.45,0.23]</span><br><span class=\"line\">Campaign C: [0.57,0.69]</span><br><span class=\"line\">Campaign D: [0.78,0.34]</span><br><span class=\"line\">Campaign E: [0.40,0.34]</span><br><span class=\"line\">Campaign F: [0.35,0.78]</span><br><span class=\"line\">定义了 6 个活动（Campaign）的数据点，使用 [name]: [x, y] 的格式来添加数据点，其中 [name] 是数据点的名称，[x, y] 是数据点在 x 轴和 y 轴上的坐标值，对于点x和y值，最小值为0，最大值为1。</span><br><span class=\"line\">X 值：表示活动的 Reach（覆盖面）。</span><br><span class=\"line\">Y 值：表示活动的 Engagement（参与度）。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>初始化配置</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">quadrantChart：自定义象限图的相关参数</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chartHeight</td>\n<td>图表的高度</td>\n<td>500</td>\n</tr>\n<tr>\n<td>chartWidth</td>\n<td>图表的宽度</td>\n<td>500</td>\n</tr>\n<tr>\n<td>pointLabelFontSize</td>\n<td>点文本字体大小</td>\n<td>12</td>\n</tr>\n<tr>\n<td>pointRadius</td>\n<td>要绘制的点的半径</td>\n<td>5</td>\n</tr>\n<tr>\n<td>pointTextPadding</td>\n<td>点和下面文本之间的填充</td>\n<td>5</td>\n</tr>\n<tr>\n<td>quadrantExternalBorderStrokeWidth</td>\n<td>象限外边框描边宽度</td>\n<td>2</td>\n</tr>\n<tr>\n<td>quadrantInternalBorderStrokeWidth</td>\n<td>象限内的边框描边宽度</td>\n<td>1</td>\n</tr>\n<tr>\n<td>quadrantLabelFontSize</td>\n<td>象限文本字体大小</td>\n<td>16</td>\n</tr>\n<tr>\n<td>quadrantPadding</td>\n<td>所有象限外的填充</td>\n<td>5</td>\n</tr>\n<tr>\n<td>quadrantTextTopPadding</td>\n<td>当文本绘制在顶部时象限文本顶部填充（那里没有数据点）</td>\n<td>5</td>\n</tr>\n<tr>\n<td>titlePadding</td>\n<td>标题的顶部和底部填充</td>\n<td>10</td>\n</tr>\n<tr>\n<td>titleFontSize</td>\n<td>标题字体大小</td>\n<td>20</td>\n</tr>\n<tr>\n<td>xAxisLabelPadding</td>\n<td>x 轴文本的顶部和底部填充</td>\n<td>5</td>\n</tr>\n<tr>\n<td>xAxisLabelFontSize</td>\n<td>X 轴文本字体大小</td>\n<td>16</td>\n</tr>\n<tr>\n<td>xAxisPosition</td>\n<td>x 轴的位置（顶部、底部）如果有点，则 x 轴将始终渲染在底部</td>\n<td>‘top’</td>\n</tr>\n<tr>\n<td>yAxisLabelPadding</td>\n<td>y 轴文本的左右填充</td>\n<td>5</td>\n</tr>\n<tr>\n<td>yAxisLabelFontSize</td>\n<td>Y 轴文本字体大小</td>\n<td>16</td>\n</tr>\n<tr>\n<td>yAxisPosition</td>\n<td>y 轴位置（左、右）</td>\n<td>‘left’</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">\n<p>themeVariables： 图表主题配色</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>quadrant1Fill</td>\n<td>右上象限的填充颜色</td>\n</tr>\n<tr>\n<td>quadrant2Fill</td>\n<td>左上象限的填充颜色</td>\n</tr>\n<tr>\n<td>quadrant3Fill</td>\n<td>左下象限的填充颜色</td>\n</tr>\n<tr>\n<td>quadrant4Fill</td>\n<td>右下象限的填充颜色</td>\n</tr>\n<tr>\n<td>quadrant1TextFill</td>\n<td>右上象限的文本颜色</td>\n</tr>\n<tr>\n<td>quadrant2TextFill</td>\n<td>左上象限的文本颜色</td>\n</tr>\n<tr>\n<td>quadrant3TextFill</td>\n<td>左下象限的文本颜色</td>\n</tr>\n<tr>\n<td>quadrant4TextFill</td>\n<td>右下象限的文本颜色</td>\n</tr>\n<tr>\n<td>quadrantPointFill</td>\n<td>点填充颜色</td>\n</tr>\n<tr>\n<td>quadrantPointTextFill</td>\n<td>点文本颜色</td>\n</tr>\n<tr>\n<td>quadrantXAxisTextFill</td>\n<td>X 轴文本颜色</td>\n</tr>\n<tr>\n<td>quadrantYAxisTextFill</td>\n<td>Y 轴文本颜色</td>\n</tr>\n<tr>\n<td>quadrantInternalBorderStrokeFill</td>\n<td>象限内边框颜色</td>\n</tr>\n<tr>\n<td>quadrantExternalBorderStrokeFill</td>\n<td>象限外边框颜色</td>\n</tr>\n<tr>\n<td>quadrantTitleFill</td>\n<td>标题颜色</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n","content_text":"摘要 Mermaid 是一个支持在Markdown文档中绘制流程图、甘特图、序列图等图形的工具。它基于JavaScript实现，能够将Markdown中的元素渲染成HTML元素，从而在网页上直观地展示各种图表‌ Next主题中使用Mermaid说明 本文介绍如何在 Hexo-Next 主题中使用 Mermaid 配置和使用方法 NexT config file 中找到mermaid配置，并设置为true，theme 可以设置浅色和深色背景的样式，共有4个可用选项 123456mermaid: enable: true # Available themes: default | dark | forest | neutral theme: light: dark dark: dark 使用方法，其中mermaid与endmermaid是固定搭配，type 用于设置图形的种类，如流程图、时序图、甘特图等，下面示例中会介绍 12&#123;% mermaid type %&#125;&#123;% endmermaid %&#125; 有些小伙伴喜欢使用代码块的形式，使用时去掉前面的# 1234#```mermaidtype#``` 但是此时需要在 Hexo config file 中找到highlight，并添加如下内容，才会使代码块的形式生效 123highlight: exclude_languages: - mermaid 图形示例 这里只介绍常用的一些图表，更多图表的使用方法可以参考Mermaid帮助文档 Flowchart 用于绘制流程图，支持方向（例如从左到右、从上到下）和节点间关系的定义。 Mermaid Flowchart type 为 &quot;graph TD&quot;或者&quot;graph LR&quot;，分别表示从上到下和从左到右的方向 123456- 流程图方向: - TB - 从上到下 - TD - 自上而下，等同于TB - BT - 从下到上 - RL - 从右到左 - LR - 从左到右 &quot;graph TD&quot;：从上到下 123456&#123;% mermaid graph TD %&#125;A[Hard] --&gt;|Text| B(Round)B --&gt; C&#123;Decision&#125;C --&gt;|One| D[Result 1]C --&gt;|Two| E[Result 2]&#123;% endmermaid %&#125; 效果 graph TD A[Hard] --&gt;|Text| B(Round) B --&gt; C&#123;Decision&#125; C --&gt;|One| D[Result 1] C --&gt;|Two| E[Result 2] 说明 123456789101112131415graph TD，定义一个从上到下的流程图。TD 是 Top to Down 的缩写，表示流程图从上向下排列。A[Hard] --&gt;|Text| B(Round)，定义了一个节点 A，显示为 Hard。一个带标签的箭头 --&gt;|Text| 指向节点 B，箭头上的标签为 Text。节点 B 被定义为 Round，这是一个椭圆形节点。B --&gt; C&#123;Decision&#125;，节点 B 指向节点 C。节点 C 被定义为 Decision，这是一个决策节点，用大括号 &#123;&#125; 表示。C --&gt;|One| D[Result 1]，决策节点 C 的一个分支，带标签 One，指向节点 D。节点 D 显示为 Result 1，这是一个矩形节点。C --&gt;|Two| E[Result 2]，决策节点 C 的另一个分支，带标签 Two，指向节点 E。节点 E 显示为 Result 2，也是一个矩形节点。 &quot;graph LR&quot;：从左到右 123456&#123;% mermaid graph LR %&#125;A[长方形] -- 链接 --&gt; B((圆))A --&gt; C(圆角长方形)B --&gt; D&#123;菱形&#125;C --&gt; D&#123;% endmermaid %&#125; 效果 graph LR A[长方形] -- 链接 --&gt; B((圆)) A --&gt; C(圆角长方形) B --&gt; D&#123;菱形&#125; C --&gt; D 说明 123456789101112131415161718192021graph LR，定义流程图的方向是从左到右（Left to Right）。节点和箭头从左向右排列。A[长方形] -- 链接 --&gt; B((圆))，定义了节点 A 和节点 B。A 是一个长方形节点，显示内容为“长方形”。B 是一个圆形节点，内容为空。它们之间通过一个带标签的箭头 -- 链接 --&gt; 连接，箭头上标注了“链接”。A --&gt; C(圆角长方形)，节点 A 指向节点 C。C 是一个圆角长方形节点，显示内容为“圆角长方形”。B --&gt; D&#123;菱形&#125;，节点 B 指向节点 D。D 是一个菱形节点，显示内容为“菱形”。C --&gt; D，节点 C 也指向节点 D，箭头不带标签。节点类型和形状长方形 [] ：如 A[长方形]，是默认的矩形节点。圆形 (()) ：如 B((圆))，用于表示一个圆形节点。圆角长方形 () ：如 C(圆角长方形)，用于表示圆角矩形节点。菱形 &#123;&#125; ：如 D&#123;菱形&#125;，用于表示决策点或条件分支。 Sequence Diagram 用于绘制时序图，显示多个实体之间的交互关系，包括消息、时间、状态和数据交换。 Mermaid Sequence Diagram type 为 &quot;sequenceDiagram&quot; 12345678910&#123;% mermaid sequenceDiagram %&#125;Alice-&gt;&gt;John: Hello John, how are you?loop Healthcheck John-&gt;&gt;John: Fight against hypochondriaendNote right of John: Rational thoughts!John--&gt;&gt;Alice: Great!John-&gt;&gt;Bob: How about you?Bob--&gt;&gt;John: Jolly good!&#123;% endmermaid %&#125; 效果 sequenceDiagram Alice-&gt;&gt;John: Hello John, how are you? loop Healthcheck John-&gt;&gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--&gt;&gt;Alice: Great! John-&gt;&gt;Bob: How about you? Bob--&gt;&gt;John: Jolly good! 说明 12345678910111213141516171819202122232425262728293031基本结构说明sequenceDiagram: 定义一个序列图，表示消息和事件的时间顺序。参与者 Alice、John 和 Bob 是参与者。 每个参与者在图中会以垂直排列的形式显示。消息和箭头 -&gt;&gt; 表示一个消息的发送，方向由箭头决定。 消息内容写在箭头旁边。循环（loop） 使用 loop 定义一个循环块，循环中的消息会重复执行，表示某种持续行为。备注（Note） Note right of John 定义了一条备注，显示在 John 的右侧，用来补充说明。代码逐步解析Alice-&gt;&gt;John: Hello John, how are you? 表示 Alice 给 John 发送一条消息：“Hello John, how are you?”loop Healthcheck 定义一个循环块，标题为“Healthcheck”（健康检查）。 循环内容是： John-&gt;&gt;John: Fight against hypochondria 表示 John 自己向自己发送一条消息：“Fight against hypochondria”（与疑病症抗争）。Note right of John: Rational thoughts! 定义了一条备注，显示在 John 的右侧。 备注内容为：“Rational thoughts!”（理性思考！）。John--&gt;&gt;Alice: Great! John 回复 Alice 一条消息：“Great!”（很好！）。 使用 --&gt;&gt; 表示回复消息。John-&gt;&gt;Bob: How about you? John 询问 Bob 一条消息：“How about you?”（你怎么样？）。Bob--&gt;&gt;John: Jolly good! Bob 回复 John 一条消息：“Jolly good!”（非常好！）。 Class Diagram 用于绘制类图，显示对象之间的关系，包括继承、关联、依赖等。 Mermaid Class Diagram type 为 &quot;classDiagram&quot; 1234567891011121314151617&#123;% mermaid classDiagram %&#125;Class01 &lt;|-- AveryLongClass : Cool&lt;&lt;interface&gt;&gt; Class01Class09 --&gt; C2 : Where am i?Class09 --* C3Class09 --|&gt; Class07Class07 : equals()Class07 : Object[] elementDataClass01 : size()Class01 : int chimpClass01 : int gorillaclass Class10 &#123; &lt;&lt;service&gt;&gt; int id size()&#125;&#123;% endmermaid %&#125; 效果 classDiagram Class01 &lt;|-- AveryLongClass : Cool &lt;&lt;interface&gt;&gt; Class01 Class09 --&gt; C2 : Where am i? Class09 --* C3 Class09 --|&gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 &#123; &lt;&lt;service&gt;&gt; int id size() &#125; 说明 12345678910111213141516171819202122232425262728293031323334353637383940414243基本结构classDiagram 定义一个类图，展示类的属性、方法以及它们之间的关系。类和修饰符 使用 class ClassName 定义一个类。 类的属性和方法定义在 class 块内。 特殊修饰符如 &lt;&lt;interface&gt;&gt; 和 &lt;&lt;service&gt;&gt; 用于说明类的角色或类型。关系符号 &lt;|-- 表示继承（extends）。 --|&gt; 表示实现（implements，接口的实现）。 --&gt; 表示关联（普通引用）。 --* 表示组合关系（一个类包含另一个类）。 : 后跟关系的说明或注释。代码逐步解析Class01 &lt;|-- AveryLongClass : Cool 表示 AveryLongClass 继承了 Class01，关系名称为 Cool。 &lt;|-- 表示继承（父类到子类）。&lt;&lt;interface&gt;&gt; Class01 将 Class01 标记为一个接口。Class09 --&gt; C2 : Where am i? 表示 Class09 与 C2 有一个关联关系，注释为 “Where am i?”。Class09 --* C3 表示 Class09 与 C3 有一个组合关系。 Class09 包含一个或多个 C3 的实例。Class09 --|&gt; Class07 表示 Class09 实现了 Class07。 --|&gt; 通常用于表示接口实现。Class07 : equals() 表示 Class07 定义了一个方法 equals()。Class07 : Object[] elementData 表示 Class07 有一个属性 elementData，类型是 Object[]（数组）。Class01 : size() 表示 Class01 有一个方法 size()。Class01 : int chimp 和 Class01 : int gorilla 表示 Class01 有两个整型属性：chimp 和 gorilla。class Class10 &#123; ... &#125; 定义了一个名为 Class10 的类。 类中有一个修饰符 &lt;&lt;service&gt;&gt;，表示这是一个服务类。 属性和方法： int id：整型属性。 size()：方法。 State Diagram 用于绘制状态图，显示对象的状态转移和行为。 Mermaid State Diagram type 为 &quot;stateDiagram&quot; 12345678&#123;% mermaid stateDiagram %&#125;[*] --&gt; StillStill --&gt; [*]Still --&gt; MovingMoving --&gt; StillMoving --&gt; CrashCrash --&gt; [*]&#123;% endmermaid %&#125; 效果 stateDiagram [*] --&gt; Still Still --&gt; [*] Still --&gt; Moving Moving --&gt; Still Moving --&gt; Crash Crash --&gt; [*] 说明 123456789101112131415161718192021222324252627基本结构stateDiagram 定义这是一个状态图，用于表示状态和状态之间的转换。[*] 表示初始状态或终止状态。 起始状态通常有箭头指向第一个状态。 终止状态通常有箭头指向它。状态 用状态名称定义状态，例如 Still、Moving、Crash。箭头 --&gt; 表示状态之间的转换方向。代码逐步解析[*] --&gt; Still 系统从初始状态进入 Still 状态。Still --&gt; [*] 系统从 Still 状态可以直接进入终止状态（系统结束）。Still --&gt; Moving 系统从 Still 状态可以转换为 Moving 状态。Moving --&gt; Still 系统从 Moving 状态可以返回到 Still 状态。Moving --&gt; Crash 系统从 Moving 状态可以进入 Crash 状态。Crash --&gt; [*] 系统从 Crash 状态可以进入终止状态（表示系统崩溃或终止）。 Entity Relationship Diagram 用于绘制实体关系图，显示实体之间的关系，包括关联、依赖等。 Mermaid Entity Relationship Diagram type 为 &quot;erDiagram&quot; 12345&#123;% mermaid erDiagram %&#125;CUSTOMER ||--o&#123; ORDER : placesORDER ||--|&#123; ITEM : containsCUSTOMER &#125;|..|&#123; DELIVERY-ADDRESS : has&#123;% endmermaid %&#125; 效果 erDiagram CUSTOMER ||--o&#123; ORDER : places ORDER ||--|&#123; ITEM : contains CUSTOMER &#125;|..|&#123; DELIVERY-ADDRESS : has 说明 12345678910111213141516171819202122232425基本结构erDiagram 定义这是一个实体关系图。 展示数据库中表（实体）之间的关系。实体 例如 CUSTOMER、ORDER 和 ITEM，每个实体对应数据库中的一个表。关系 ||--o&#123; 表示一对多关系（1:N）。 ||--|&#123; 表示一对多关系（1:N），但强调实体的唯一性（每个子记录属于唯一的父记录）。 &#125;|..|&#123; 表示多对多关系（N:M）。注释 : 后的文字是关系的描述，例如 places、contains、has。代码逐步解析CUSTOMER ||--o&#123; ORDER : places 表示一个客户 (CUSTOMER) 可以下多个订单 (ORDER)。 ||--o&#123; 表示 一对多关系（1:N），即一个客户对应多个订单。ORDER ||--|&#123; ITEM : contains 表示一个订单 (ORDER) 包含多个商品 (ITEM)。 ||--|&#123; 表示 一对多关系，且每个商品的记录与某个订单唯一对应。CUSTOMER &#125;|..|&#123; DELIVERY-ADDRESS : has 表示一个客户 (CUSTOMER) 可以有多个配送地址 (DELIVERY-ADDRESS)，而每个配送地址也可能对应多个客户。 &#125;|..|&#123; 表示 多对多关系（N:M）。 Gantt Chart 用于绘制甘特图，显示任务计划、进度和资源分配。 Mermaid Gantt Chart type 为 &quot;gantt&quot; 1234567891011121314&#123;% mermaid gantt %&#125;title Project TimelinedateFormat YYYY-MM-DDsection Section1Completed :done, des1, 2014-01-06,2014-01-08Active :active, des2, 2014-01-07, 3dParallel 1 : des3, after des1, 1dParallel 2 : des4, after des1, 1dParallel 3 : des5, after des3, 1dParallel 4 : des6, after des4, 1dsection Section2Task 1 : t1,after des6,5dTask 2 : t2,after t1,3d&#123;% endmermaid %&#125; 效果 gantt title Project Timeline dateFormat YYYY-MM-DD section Section1 Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d section Section2 Task 1 : t1,after des6,5d Task 2 : t2,after t1,3d 说明 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273基本结构gantt 定义一个甘特图，用于表示任务的时间分布和依赖关系。title 定义甘特图的标题，这里是 Project Timeline。dateFormat 定义日期格式，这里是 YYYY-MM-DD（年-月-日）。section 定义任务的分类（部分）。 每个 section 下包含一组任务，任务在图表中分组显示。任务格式 每个任务按以下格式定义： 任务名称 : 状态, 标识符, 开始日期或依赖, 持续时间 任务名称：任务的描述。 状态：可选，表示任务状态： done：已完成。 active：正在进行。 标识符：任务的唯一标识符，用于定义依赖关系。 时间：可以是开始日期、结束日期、或依赖任务。代码逐步解析section Section1 定义一个名为 Section1 的部分，包含一组任务。Completed :done, des1, 2014-01-06,2014-01-08 任务名称：Completed。 状态：done（已完成）。 标识符：des1。 开始日期：2014-01-06。 结束日期：2014-01-08。Active :active, des2, 2014-01-07, 3d 任务名称：Active。 状态：active（正在进行）。 标识符：des2。 开始日期：2014-01-07。 持续时间：3d（3天）。Parallel 1 : des3, after des1, 1d 任务名称：Parallel 1。 无状态（默认值）。 标识符：des3。 开始时间：依赖任务 des1（在任务 Completed 后开始）。 持续时间：1d（1天）。Parallel 2 : des4, after des1, 1d 任务名称：Parallel 2。 无状态。 标识符：des4。 开始时间：依赖任务 des1（在任务 Completed 后开始）。 持续时间：1d（1天）。Parallel 3 : des5, after des3, 1d 任务名称：Parallel 3。 无状态。 标识符：des5。 开始时间：依赖任务 des3（在任务 Parallel 1 后开始）。 持续时间：1d（1天）。Parallel 4 : des6, after des4, 1d 任务名称：Parallel 4。 无状态。 标识符：des6。 开始时间：依赖任务 des4（在任务 Parallel 2 后开始）。 持续时间：1d（1天）。section Section2 定义甘特图的第二部分，用于分组显示后续任务。 任务属于不同的部分以便分类和分组。Task 1 : t1, after des6, 5d 任务名称：Task 1。 标识符：t1。 开始时间：依赖任务 des6（Parallel 4）完成后开始。 持续时间：5d（5天）。Task 2 : t2, after t1, 3d 任务名称：Task 2。 标识符：t2。 开始时间：依赖任务 t1（Task 1）完成后开始。 持续时间：3d（3天）。 Pie Chart 用于绘制饼状图，显示数据分布情况。 Mermaid Pie Chart type 为 &quot;pie&quot; 1234567&#123;% mermaid pie showData %&#125;%%&#123;init: &#123;&quot;pie&quot;: &#123;&quot;textPosition&quot;: 0.4&#125;, &quot;themeVariables&quot;: &#123;&quot;pieOuterStrokeWidth&quot;: &quot;5px&quot;,&quot;pie1&quot;: &quot;#ff9999&quot;,&quot;pie2&quot;: &quot;#99ccff&quot;,&quot;pie3&quot;: &quot;#99ff99&quot;&#125;&#125; &#125;%%title Expenses&quot;Rent&quot; : 200&quot;Food&quot; : 200&quot;Transport&quot; : 400&#123;% endmermaid %&#125; 效果 %%&#123;init: &#123;&quot;pie&quot;: &#123;&quot;textPosition&quot;: 0.4&#125;, &quot;themeVariables&quot;: &#123;&quot;pieOuterStrokeWidth&quot;: &quot;5px&quot;,&quot;pie1&quot;: &quot;#ff9999&quot;,&quot;pie2&quot;: &quot;#99ccff&quot;,&quot;pie3&quot;: &quot;#99ff99&quot;&#125;&#125; &#125;%% pie showData title Expenses &quot;Rent&quot; : 200 &quot;Food&quot; : 200 &quot;Transport&quot; : 400 说明 1234567891011121314151617181920212223基本结构%%&#123;init: ...&#125;%%： Mermaid.js 的初始化配置，用于全局设置图表属性和样式。 pie 属性 textPosition: 设置饼图数据标签的相对位置。 值范围为 0 到 1，表示标签距离饼图中心的比例。0.4 表示标签距离中心较近，接近 40% 的半径位置。 themeVariables pieOuterStrokeWidth: 设置饼图外环的宽度。设置为 5px，表示饼图有明显的外边框。 &quot;pie1&quot;: &quot;#ff9999&quot;,&quot;pie2&quot;: &quot;#99ccff&quot;,&quot;pie3&quot;: &quot;#99ff99&quot;: 配置每个分区的颜色。pie 定义这是一个饼图。showData 显示数据项的数值。title Expenses 设置饼图的标题为 Expenses（费用）。数据项 数据项定义了饼图的各个部分： &quot;Rent&quot; : 200，占比：200 / (200 + 200 + 400) = 1/4 = 25%。 &quot;Food&quot; : 200，占比：200 / (200 + 200 + 400) = 1/4 = 25%。 &quot;Transport&quot; : 400，占比：400 / (200 + 200 + 400) = 1/2 = 50%。 每个数据项包含： 标签：如 &quot;Rent&quot;、&quot;Food&quot;、&quot;Transport&quot;。 数值：如 200、400，表示该部分的权重或数值大小。 XY Chart 用于绘制 XY 轴图(柱状图和折线图)，显示数据分布和趋势。 Mermaid XY Chart type 为 &quot;xychart-beta&quot;，目前 xychart-beta 还处在改进阶段 12345678&#123;% mermaid xychart-beta %&#125;%%&#123;init: &#123;&quot;xyChart&quot;: &#123;&quot;width&quot;: 900,&quot;height&quot;:600&#125;, &quot;themeVariables&quot;: &#123;&quot;xyChart&quot;:&#123;&quot;titleColor&quot;: &quot;#ff0000&quot;&#125;&#125;&#125; &#125;%%title &quot;Sales Revenue&quot;x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec]y-axis &quot;Revenue (in $)&quot; 4000 --&gt; 11000bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000]&#123;% endmermaid %&#125; 效果 --- config: xyChart: width: 900 height: 600 themeVariables: xyChart: titleColor: &quot;#ff0000&quot; --- xychart-beta title &quot;Sales Revenue&quot; x-axis [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec] y-axis &quot;Revenue (in $)&quot; 4000 --&gt; 11000 bar [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000] line [5000, 6000, 7500, 8200, 9500, 10500, 11000, 10200, 9200, 8500, 7000, 6000] 说明 12345678910111213代码结构解析%%&#123;init: ...&#125;%%： Mermaid.js 的初始化配置，用于全局设置图表属性和样式。 xyChart.width 和 xyChart.height : 设置图表的宽度和高度。 themeVariables.xyChart.titleColor: 设置标题的颜色。title 设置图表的标题。坐标轴定义 x-axis：X轴标签为月份（从1月到12月）。 y-axis：Y轴范围从 $4000 到 $11000，单位为美元。数据 bar：柱状图数据，表示每个月的销售收入。 line：折线图数据，表示每个月的销量趋势。 Journey Diagram 用于绘制旅程图，显示用户的体验流程，包括用户进入系统、操作、退出系统等。 Mermaid Journey Diagram type 为 &quot;journey&quot; 12345678910111213&#123;% mermaid journey %&#125;title My working daysection Morning wake up : 5 : me go to work : 3 : me,yousection Lunch have lunch : 5 : me,you go to work : 1 : me,yousection Dinner finish your meal : 5 : mesection Go home go home : 5 : me&#123;% endmermaid %&#125; 效果 journey title My working day section Morning wake up : 5 : me go to work : 3 : me,you section Lunch have lunch : 5 : me,you go to work : 1 : me,you section Dinner finish your meal : 5 : me section Go home go home : 5 : me 说明 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748基本结构journey 定义这是一个旅程图。title My working day 设置旅程图的标题为 &quot;My working day&quot;（我的工作日）。section 定义旅程图的分段，用于表示一天中的不同阶段，例如： Morning（早晨）。 Lunch（午餐时间）。 Dinner（晚餐）。 Go home（回家）。任务格式 任务描述 : 满意度评分 : 参与者 任务描述：描述具体的任务或活动。 满意度评分：从 1 到 5，表示对任务或活动的满意程度。 参与者：参与任务的人，可以是 me（自己）、you（其他人）或两者。代码逐步解析section Morning wake up : 5 : me 活动：wake up（起床）。 满意度：5（非常满意）。 参与者：me（自己）。 go to work : 3 : me,you 活动：go to work（去工作）。 满意度：3（中等满意）。 参与者：me 和 you（自己和其他人）。section Lunch have lunch : 5 : me,you 活动：have lunch（吃午饭）。 满意度：5（非常满意）。 参与者：me 和 you（自己和其他人）。 go to work : 1 : me,you 活动：go to work（吃完饭继续工作）。 满意度：1（非常不满意）。 参与者：me 和 you。section Dinner finish your meal : 5 : me 活动：finish your meal（吃完饭）。 满意度：5（非常满意）。 参与者：me（自己）。section Go home go home : 5 : me 活动：go home（回家）。 满意度：5（非常满意）。 参与者：me（自己）。 Requirement Diagram 用于绘制需求图，显示系统的功能需求和依赖关系。 Mermaid Requirement Diagram type 为 &quot;requirementDiagram&quot; 12345678910111213141516171819&#123;% mermaid requirementDiagram %&#125;requirement &quot;测试需求&quot; &#123; id: 1 text: &quot;测试文本&quot; risk: High verifymethod: test&#125;requirement &quot;测试需求2&quot; &#123; id: 2 text: &quot;测试文本&quot; risk: High verifymethod: test&#125;element &quot;测试实体&quot; &#123; type: &quot;模拟&quot;&#125;&quot;测试实体&quot; - satisfies -&gt; &quot;测试需求&quot;&quot;测试实体&quot; - satisfies -&gt; &quot;测试需求2&quot;&#123;% endmermaid %&#125; 效果 requirementDiagram requirement &quot;测试需求&quot; &#123; id: 1 text: &quot;测试文本&quot; risk: High verifymethod: test &#125; requirement &quot;测试需求2&quot; &#123; id: 2 text: &quot;测试文本&quot; risk: High verifymethod: test &#125; element &quot;测试实体&quot; &#123; type: &quot;模拟&quot; &#125; &quot;测试实体&quot; - satisfies -&gt; &quot;测试需求&quot; &quot;测试实体&quot; - satisfies -&gt; &quot;测试需求2&quot; 说明 12345678910111213141516171819202122232425262728293031323334353637383940基本结构requirementDiagram 定义这是一个需求图。requirement 定义一个需求节点，包含需求的详细属性，如： id：需求编号。 text：需求的描述。 risk：需求的风险级别（如 High 表示高风险）。 verifymethod：验证需求的方法（如 test 表示通过测试验证）。element 定义一个元素，用于表示系统中的某个实体或对象。 包含属性，如： type：实体的类型（如 模拟 表示模拟实体）。关系定义 定义了两个关系： &quot;测试实体&quot; - satisfies -&gt; &quot;测试需求&quot; : 测试实体 满足了 测试需求 &quot;测试实体&quot; - satisfies -&gt; &quot;测试需求2&quot; : 测试实体 满足了 测试需求2 - satisfies -&gt;：satisfies 表示满足关系，箭头方向从实体指向需求代码逐步解析需求定义 requirement &quot;测试需求&quot; 定义第一个需求，显示名称为 测试需求。 属性： id: 1（需求编号为 1）。 text: &quot;测试文本&quot;（描述文本为 &quot;测试文本&quot;）。 risk: High（高风险需求）。 verifymethod: test（验证方法为测试）。 requirement &quot;测试需求2&quot; 定义第二个需求，显示名称为 测试需求2。 属性： id: 2（需求编号为 2）。 text: &quot;测试文本&quot;（描述文本与第一个需求相同）。 risk: High（高风险需求）。 verifymethod: test（验证方法为测试）。实体定义 element &quot;测试实体&quot; 定义一个系统实体，显示名称为 测试实体。 属性： type: &quot;模拟&quot;（实体类型为 &quot;模拟&quot;）。 Gitgraph Diagram 用于绘制Git图，显示代码仓库的提交历史和分支关系。 Mermaid Gitgraph Diagram type 为 &quot;gitgraph&quot; 1234567891011&#123;% mermaid gitGraph %&#125;commitcommitcommitbranch newbranchcheckout newbranchcommitcommitcheckout mainmerge newbranch&#123;% endmermaid %&#125; 效果 gitGraph commit commit commit branch newbranch checkout newbranch commit commit checkout main merge newbranch 说明 1234567891011121314基本结构gitGraph 定义这是一个 Git 图。commit 表示一次提交操作，每个 commit 节点代表代码仓库的某个提交点。branch 创建一个新分支。 格式：branch 分支名称。checkout 切换到指定分支。 格式：checkout 分支名称。merge 将指定分支合并到当前分支。 格式：merge 分支名称。 Mindmap 用于绘制思维导图，显示主题和子主题之间的 hierarchical 关系。 Mermaid Mindmap type 为 &quot;mindmap&quot; 123456789101112131415161718&#123;% mermaid mindmap %&#125;root((mindmap)) (origins) Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan [Research] On effectivness&lt;br/&gt;and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid&#123;% endmermaid %&#125; 效果 mindmap root((mindmap)) (origins) Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan [Research] On effectivness&lt;br/&gt;and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid 说明 123456789101112131415基本结构mindmap 定义这是一个思维导图。root((mindmap)) 定义思维导图的根节点，显示为圆形并标注为 &quot;mindmap&quot;。子节点使用缩进表示从属关系： 每一级缩进代表一个层级的子节点。 子节点可以直接添加内容或通过 &lt;br/&gt; 换行。::icon(...) 为节点添加图标。Mermaid.js 支持使用 FontAwesome 的图标。节点形状长方形 [] ：如 [长方形]，是默认的矩形节点。这个是默认的节点类型。圆形 (()) ：如 ((圆))，用于表示一个圆形节点。圆角长方形 () ：如 (圆角长方形)，用于表示圆角矩形节点。 QuadrantChart 用于绘制象限图，显示不同维度之间的比较关系。 Mermaid QuadrantChart type 为 &quot;quadrantChart&quot; 12345678910111213141516&#123;% mermaid quadrantChart %&#125;%%&#123;init: &#123;&quot;quadrantChart&quot;: &#123;&quot;chartHeight&quot;: 600, &quot;chartWidth&quot;: 800, &quot;pointTextPadding&quot;: 10&#125;, &quot;themeVariables&quot;: &#123;&quot;quadrant1Fill&quot;: &quot;#ff0000&quot;, &quot;quadrant2Fill&quot;: &quot;#FFFF00&quot;, &quot;quadrant3Fill&quot;: &quot;#32CD32&quot;, &quot;quadrant4Fill&quot;: &quot;#800080&quot;&#125;&#125;&#125;%%title Reach and engagement of carpaignsx-axis Low Reach --&gt; High Reachy-axis Low Engagement --&gt; High Engagementquadrant-1 we should expandquadrant-2 Need to promotequadrant-3 Re-evaluatequadrant-4 May be improvedCampaign A: [0.3,0.6]Campaign B: [0.45,0.23]Campaign C: [0.57,0.69]Campaign D: [0.78,0.34]Campaign E: [0.40,0.34]Campaign F: [0.35,0.78]&#123;% endmermaid %&#125; 效果 %%&#123;init: &#123;&quot;quadrantChart&quot;: &#123;&quot;chartHeight&quot;: 600, &quot;chartWidth&quot;: 800, &quot;pointTextPadding&quot;: 10&#125;, &quot;themeVariables&quot;: &#123;&quot;quadrant1Fill&quot;: &quot;#ff0000&quot;, &quot;quadrant2Fill&quot;: &quot;#FFFF00&quot;, &quot;quadrant3Fill&quot;: &quot;#32CD32&quot;, &quot;quadrant4Fill&quot;: &quot;#800080&quot;&#125;&#125;&#125;%% quadrantChart title Reach and engagement of carpaigns x-axis Low Reach --&gt; High Reach y-axis Low Engagement --&gt; High Engagement quadrant-1 we should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3,0.6] Campaign B: [0.45,0.23] Campaign C: [0.57,0.69] Campaign D: [0.78,0.34] Campaign E: [0.40,0.34] Campaign F: [0.35,0.78] 说明 12345678910111213141516171819202122232425262728293031323334353637基本结构%%&#123;init: ...&#125;%% 这是 Mermaid.js 的初始化配置块，用于自定义图表的全局参数和样式。 配置内容，详见下文： quadrantChart：自定义象限图的相关参数。 themeVariables： 图表主题配色。quadrantChart 定义这是一个象限图。title 标题坐标轴，定义 X 轴和 Y 轴的范围和方向：x-axis Low Reach --&gt; High Reach X 轴 从 “Low Reach” 到 “High Reach”。y-axis Low Engagement --&gt; High Engagement Y 轴 从 “Low Engagement” 到 “High Engagement”。象限定义quadrant-1 we should expand 象限 1（右上）：&quot;we should expand&quot;quadrant-2 Need to promote 象限 2（左上）：&quot;Need to promote&quot;quadrant-3 Re-evaluate 象限 3（左下）：&quot;Re-evaluate&quot;quadrant-4 May be improved 象限 4（右下）：&quot;May be improved&quot;数据点Campaign A: [0.3,0.6]Campaign B: [0.45,0.23]Campaign C: [0.57,0.69]Campaign D: [0.78,0.34]Campaign E: [0.40,0.34]Campaign F: [0.35,0.78]定义了 6 个活动（Campaign）的数据点，使用 [name]: [x, y] 的格式来添加数据点，其中 [name] 是数据点的名称，[x, y] 是数据点在 x 轴和 y 轴上的坐标值，对于点x和y值，最小值为0，最大值为1。X 值：表示活动的 Reach（覆盖面）。Y 值：表示活动的 Engagement（参与度）。 初始化配置 quadrantChart：自定义象限图的相关参数 参数 描述 默认值 chartHeight 图表的高度 500 chartWidth 图表的宽度 500 pointLabelFontSize 点文本字体大小 12 pointRadius 要绘制的点的半径 5 pointTextPadding 点和下面文本之间的填充 5 quadrantExternalBorderStrokeWidth 象限外边框描边宽度 2 quadrantInternalBorderStrokeWidth 象限内的边框描边宽度 1 quadrantLabelFontSize 象限文本字体大小 16 quadrantPadding 所有象限外的填充 5 quadrantTextTopPadding 当文本绘制在顶部时象限文本顶部填充（那里没有数据点） 5 titlePadding 标题的顶部和底部填充 10 titleFontSize 标题字体大小 20 xAxisLabelPadding x 轴文本的顶部和底部填充 5 xAxisLabelFontSize X 轴文本字体大小 16 xAxisPosition x 轴的位置（顶部、底部）如果有点，则 x 轴将始终渲染在底部 ‘top’ yAxisLabelPadding y 轴文本的左右填充 5 yAxisLabelFontSize Y 轴文本字体大小 16 yAxisPosition y 轴位置（左、右） ‘left’ themeVariables： 图表主题配色 参数 描述 quadrant1Fill 右上象限的填充颜色 quadrant2Fill 左上象限的填充颜色 quadrant3Fill 左下象限的填充颜色 quadrant4Fill 右下象限的填充颜色 quadrant1TextFill 右上象限的文本颜色 quadrant2TextFill 左上象限的文本颜色 quadrant3TextFill 左下象限的文本颜色 quadrant4TextFill 右下象限的文本颜色 quadrantPointFill 点填充颜色 quadrantPointTextFill 点文本颜色 quadrantXAxisTextFill X 轴文本颜色 quadrantYAxisTextFill Y 轴文本颜色 quadrantInternalBorderStrokeFill 象限内边框颜色 quadrantExternalBorderStrokeFill 象限外边框颜色 quadrantTitleFill 标题颜色","summary":"摘要 Mermaid 是一个支持在Markdown文档中绘制流程图、甘特图、序列图等图形的工具。它基于JavaScript实现，能够将Markdown中的元素渲染成HTML元素，从而在网页上直观地展示各种图表‌ Next主题中使用Mermaid说明 本文介绍如何在 Hexo-Next 主题中使用 Mermaid","date_published":"2025-01-02T13:55:05.000Z","tags":["Hexo","Hexo"]},{"id":"https://blog.hanqunfeng.com/2024/11/28/brew/","url":"https://blog.hanqunfeng.com/2024/11/28/brew/","title":"MacOS软件包管理器--brew","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n-->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://brew.sh\">brew</a>是一个软件包管理器，同时支持MacOS和Linux，可以很方便地安装各种软件，比如<code>git</code>、<code>node</code>、<code>python</code>等。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>brew</code>虽然支持linux，但是实际使用中很少会使用brew来管理linux的软件包。</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文介绍如何在macos下安装brew，以及如何使用brew管理各种软件包。</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于 MacOS Intel Ventura 13.7.1，brew 版本为4.4.8。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"安装\">安装</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>首先要确保系统中安装了 <code>git</code> 和 <code>curl</code>，对于 macOS 用户来说，这些系统都自带了，唯一需额外要求安装的是<code>Command Line Tools (CLT) for Xcode</code>。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 检查系统中是否安装了 Command Line Tools (CLT) for Xcode</span></span><br><span class=\"line\">xcode-select --version <span class=\"comment\"># 能够输出版本号说明安装了，否则需要安装。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 Command Line Tools (CLT) for Xcode</span></span><br><span class=\"line\">xcode-select --install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印当前的 Command Line Tools (CLT) for Xcode 的安装路径</span></span><br><span class=\"line\">xcode-select -p <span class=\"comment\"># /Library/Developer/CommandLineTools</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"在MacOS上安装brew的方法\">在MacOS上安装brew的方法</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://github.com/Homebrew/install\">参考资料</a></p>\n</li>\n</ul>\n<h4 id=\"方法一：使用脚本安装\">方法一：使用脚本安装</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装时可以指定镜像下载源，默认是<a href=\"https://github.com/Homebrew/brew.git\">Homebrew的GitHub下载源</a>，也可以选择国内的镜像源，比如使用<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/\">清华大学的Homebrew</a>镜像源</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 控制了 Homebrew 在安装软件包时是否从 Homebrew 的 API 服务器获取信息，brew4.0后是默认行为，无需设置</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_INSTALL_FROM_API=1</span><br><span class=\"line\"><span class=\"comment\"># 设置brew仓库上游</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_BREW_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 设置homebrew核心上游</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_CORE_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;</span></span><br><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：使用PKG文件安装\">方法二：使用PKG文件安装</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>从<a href=\"https://github.com/Homebrew/brew\">Homebrew的github</a>上下载最新版的<a href=\"https://github.com/Homebrew/brew/releases/latest\">Homebrew-x.x.x.pkg</a></p>\n</li>\n</ul>\n<h4 id=\"方法三：国内无法访问github地址时可以使用国内镜像源\">方法三：国内无法访问github地址时可以使用国内镜像源</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里依旧以清华大学的Homebrew镜像源为例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_BREW_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_CORE_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 从镜像下载安装脚本并安装 Homebrew / Linuxbrew</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> --depth=1 https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/install.git brew-install</span><br><span class=\"line\">/bin/bash brew-install/install.sh</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf brew-install</span><br></pre></td></tr></table></figure>\n<h4 id=\"验证是否安装成功\">验证是否安装成功</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>brew</code> 命令本身及通过brew安装的所有命令都会被软链接到<code>/usr/local/bin/</code>下，所以需要将该路径加入系统环境PATH中</p>\n</li>\n<li class=\"lvl-2\">\n<p>重启终端，然后执行<code>brew -v</code>命令查看brew的版本，如果安装成功，会输出类似如下内容</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew -v</span><br><span class=\"line\">Homebrew 4.4.8-40-g13c3def</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Homebrew本身的安装位置可以通过<code>brew --repo</code>查看，默认为<code>/usr/local/Homebrew</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>通过brew安装的软件包默认会被安装到<code>/usr/local/Cellar/</code>下，比如<code>git</code>安装后会在<code>/usr/local/Cellar/git/</code>目录下，可以通过<code>brew info git</code>查看安装信息，包括依赖库等。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示 Homebrew 安装路径，macOS ARM: /opt/homebrew，macOS Intel: /usr/local</span></span><br><span class=\"line\">$ brew --prefix</span><br><span class=\"line\">/usr/local</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示 Homebrew 本地的 Git 仓库</span></span><br><span class=\"line\">$ brew --repo</span><br><span class=\"line\">/usr/local/Homebrew</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示 Homebrew Cellar 路径，命令行工具的安装路径</span></span><br><span class=\"line\">$ brew --cellar</span><br><span class=\"line\">/usr/local/Cellar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示 Homebrew Caskroom 路径，GUI工具的安装路径</span></span><br><span class=\"line\">$ brew --caskroom</span><br><span class=\"line\">/usr/local/Caskroom</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 缓存路径，下载安装包的缓存路径，通过 brew cleanup 清理</span></span><br><span class=\"line\">$ brew --cache</span><br><span class=\"line\">~/Library/Caches/Homebrew</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置命令补全\">配置命令补全</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参考官网<a href=\"https://docs.brew.sh/Shell-Completion\">Homebrew Documentation–brew Shell Completion</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>我这里使用的是<code>zsh</code>，在<code>~/.zshrc</code>中加入如下内容并重启终端即可生效</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">autoload</span> -Uz compinit</span><br><span class=\"line\">compinit</span><br></pre></td></tr></table></figure>\n<h4 id=\"卸载brew\">卸载brew</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash -c <span class=\"string\">&quot;<span class=\"subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"常用命令\">常用命令</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>brew</code>支持安装<code>命令行工具(formula)</code>和<code>GUI工具(cask)</code></p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-5\"><code>brew install xxx</code> 安装命令行工具，这个最为常用，比如 <code>brew install fd</code></li>\n<li class=\"lvl-5\"><code>brew install --cask xxx</code> 安装GUI工具，一般很少使用brew安装GUI工具，比如 <code>brew install --cask firefox</code></li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>brew的命令和参数非常多，但日常使用只需要记住常用的几个就够了，详细的命令列表可以参考<a href=\"https://docs.brew.sh/Manpage\">Homebrew Documentation</a></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看brew支持哪些命令</span></span><br><span class=\"line\">brew commands</span><br><span class=\"line\"><span class=\"comment\"># 查看命令的帮助信息，比如</span></span><br><span class=\"line\">brew install --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"一些常用的命令\">一些常用的命令</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew update <span class=\"comment\"># 更新brew到最新版本</span></span><br><span class=\"line\">brew --version <span class=\"comment\"># 查看brew的版本，可以简写为 brew -v</span></span><br><span class=\"line\">brew config <span class=\"comment\"># 查看brew的配置信息，这个命令很有用，可以查看到与brew相关的环境变量的值</span></span><br><span class=\"line\">brew home <span class=\"comment\"># 浏览器打开brew官网</span></span><br><span class=\"line\">brew home xxx <span class=\"comment\"># 浏览器打开xxx官网 如：打开fd命令的官网 brew home fd ,具体的名称可以通过brew list查看</span></span><br><span class=\"line\">brew cleanup <span class=\"comment\"># 清理缓存及日志文件，建议定期清理，当运行brew时会自动清理（2.0以后的版本）</span></span><br><span class=\"line\">brew cleanup -n <span class=\"comment\"># 显示将要清理的缓存及日志文件，只查看不删除</span></span><br><span class=\"line\">brew doctor <span class=\"comment\"># 检查是否有依赖问题，比如没有安装依赖库，或者依赖库版本过低，当运行brew报错时可以通过该命令进行检查并根据提示进行修改</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看已安装的包</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看</span></span><br><span class=\"line\">brew list <span class=\"comment\"># 查看已安装的包</span></span><br><span class=\"line\">brew list --versions <span class=\"comment\"># 查看已安装的包及版本</span></span><br><span class=\"line\">brew info xxx <span class=\"comment\"># 查看xxx的安装信息</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装、卸载</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查找、安装、卸载</span></span><br><span class=\"line\">brew search xxx <span class=\"comment\"># 查找软件包，也可以通过 https://formulae.brew.sh 网页进行搜索</span></span><br><span class=\"line\">brew install xxx <span class=\"comment\"># 安装软件包，此命令相当于加上了 --formula ，安装时会自动下载依赖库，比如安装`nginx`时，会自动下载`openssl@3`和`pcre2`等</span></span><br><span class=\"line\">brew install --cask xxx <span class=\"comment\"># 安装GUI工具，比如`firefox`</span></span><br><span class=\"line\">brew uninstall xxx <span class=\"comment\"># 卸载软件包，此命令相当于加上了 --formula ，只会卸载当前包，不会卸载依赖库，这样就有可能存在很多冗余包</span></span><br><span class=\"line\">brew uninstall --cask xxx <span class=\"comment\"># 卸载GUI工具</span></span><br><span class=\"line\">brew autoremove <span class=\"comment\"># 删除所有仅作为另一个软件包的依赖项安装并且现在不再需要的包</span></span><br><span class=\"line\">brew autoremove --dry-run <span class=\"comment\"># --dry-run 仅查看哪些包可以删除，并不会真的删除</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>升级</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 升级</span></span><br><span class=\"line\">brew outdated <span class=\"comment\"># 查看需要升级的包</span></span><br><span class=\"line\">brew upgrade xxx <span class=\"comment\"># 升级xxx到最新版</span></span><br><span class=\"line\">brew upgrade <span class=\"comment\"># 更新全部命令到最新版</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>依赖关系</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 依赖关系</span></span><br><span class=\"line\">brew deps --tree xxx <span class=\"comment\"># 树形显示包的依赖树</span></span><br><span class=\"line\">brew deps --installed --tree <span class=\"comment\"># 树形显示所有安装包的依赖关系</span></span><br><span class=\"line\">brew deps --installed xxx <span class=\"comment\"># 显示当前安装包的依赖关系，纵向展示</span></span><br><span class=\"line\">brew deps --installed --for-each xxx <span class=\"comment\"># 显示当前安装包的依赖关系，横向展示</span></span><br><span class=\"line\">brew uses --installed xxx <span class=\"comment\"># 查看已经安装的哪些工具依赖当前包</span></span><br><span class=\"line\">brew leaves <span class=\"comment\"># 查看顶级安装包，即你通过brew直接安装的包，而不是通过安装其他软件包间接安装的</span></span><br><span class=\"line\">brew leaves | xargs brew deps --installed --for-each --formula <span class=\"comment\"># 查看顶级包，并列出每个顶级包的已安装依赖</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>仓库管理，参考资料<a href=\"https://docs.brew.sh/Taps\">Homebrew Documentation–Taps</a></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 仓库管理</span></span><br><span class=\"line\">brew tap <span class=\"comment\"># 查看所有已安装的仓库，tap安装路径 /usr/local/Homebrew/Library/Taps/</span></span><br><span class=\"line\">brew tap user/repo <span class=\"comment\"># 添加一个仓库，从gitthub下载</span></span><br><span class=\"line\">brew tap repo_url <span class=\"comment\"># 添加一个仓库，从给定的仓库地址下载</span></span><br><span class=\"line\">brew untap user/repo <span class=\"comment\"># 删除一个仓库</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从第三方仓库安装工具，此时会自动将 homebrew-ffmpeg/ffmpeg 这个仓库添加到本地</span></span><br><span class=\"line\">brew install homebrew-ffmpeg/ffmpeg/ffmpeg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新仓库，无论是brew自己的仓库还是第三方仓库，都会自动更新</span></span><br><span class=\"line\">brew update</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>brew services</code>: brew的服务管理工具，可以方便的管理通过brew安装的服务，包括启动、停止、重启服务，等等，比如<code>nginx、redis、mysql</code>等，具体命令可以参考<a href=\"https://docs.brew.sh/Manpage#services-subcommand\">Homebrew Documentation</a></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 第一次执行 services 相关的命令时会自动下载 homebrew/services，也可以 通过 brew tap homebrew/services 提前下载</span></span><br><span class=\"line\">brew services list <span class=\"comment\"># 查看已安装的所有服务</span></span><br><span class=\"line\">brew services start nginx <span class=\"comment\"># 启动服务，并注册到系统启动服务列表，即创建系统自启动文件： ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</span></span><br><span class=\"line\">brew services stop nginx <span class=\"comment\"># 停止服务，并从系统启动服务列表中移除，即删除系统自启动文件</span></span><br><span class=\"line\">brew services <span class=\"built_in\">kill</span> nginx <span class=\"comment\"># 立即杀死服务，但不从系统启动服务列表中移除</span></span><br><span class=\"line\">brew services restart nginx <span class=\"comment\"># 重启服务</span></span><br><span class=\"line\">brew services info nginx <span class=\"comment\"># 查看服务的状态和进程IP</span></span><br><span class=\"line\">brew services run nginx <span class=\"comment\"># 运行服务，但不会保存到服务列表中</span></span><br><span class=\"line\">brew services cleanup <span class=\"comment\"># 清理无效的服务，即已卸载应用的无用的配置</span></span><br><span class=\"line\">brew services --<span class=\"built_in\">help</span> <span class=\"comment\"># 查看帮助</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置国内镜像源\">配置国内镜像源</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>上面安装部分介绍了如何在安装brew时就指定镜像源，但有些时候因为我们在安装时忘记配置，或者原来的镜像源已经失效需要重新配置，此时可以按照下面的方法进行配置。</p>\n</li>\n<li class=\"lvl-2\">\n<p>此处以配置<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/\">清华镜像源</a>为例，阿里镜像源请参考<a href=\"https://developer.aliyun.com/mirror/homebrew/\">阿里的官网文档–Homebrew镜像</a>，科大源参考<a href=\"https://mirrors.ustc.edu.cn/help/brew.git.html\">Homebrew</a></p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## 临时替换</span></span><br><span class=\"line\"><span class=\"comment\"># 配置brew国内镜像源</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> HOMEBREW_BREW_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 配置brew-core国内镜像源</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> HOMEBREW_CORE_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 配置brew-bottle国内镜像源</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> HOMEBREW_API_DOMAIN=<span class=\"string\">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;</span></span><br><span class=\"line\">$ <span class=\"built_in\">export</span> HOMEBREW_BOTTLE_DOMAIN=<span class=\"string\">&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 更新配置</span></span><br><span class=\"line\">$ brew update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 配置永久生效，zsh用户</span></span><br><span class=\"line\"><span class=\"comment\"># 配置brew国内镜像源</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_BREW_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\"><span class=\"comment\"># 配置brew-core国内镜像源</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_CORE_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\"><span class=\"comment\"># 配置brew-bottle国内镜像源</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_API_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_BOTTLE_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.zshrc</span><br><span class=\"line\"><span class=\"comment\"># 更新配置</span></span><br><span class=\"line\">$ brew update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此时查看brew配置信息，可以看到已经生效了</span></span><br><span class=\"line\">$ brew config</span><br><span class=\"line\">HOMEBREW_VERSION: 4.4.8-38-g6089077</span><br><span class=\"line\">ORIGIN: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class=\"line\">HEAD: 60890774e0a70fe93f94973b080068cf7b0d1c93</span><br><span class=\"line\">Last commit: 9 hours ago</span><br><span class=\"line\">Branch: master</span><br><span class=\"line\">Core tap origin: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class=\"line\">Core tap HEAD: 787d1587bfa92794f7d141063a31773064ef9107</span><br><span class=\"line\">Core tap last commit: 11 minutes ago</span><br><span class=\"line\">Core tap JSON: 29 Nov 09:56 UTC</span><br><span class=\"line\">Core cask tap HEAD: 4c34bd8c418e13160fc79f1ca9312555d2edc254</span><br><span class=\"line\">Core cask tap last commit: 19 minutes ago</span><br><span class=\"line\">Core cask tap JSON: 29 Nov 09:56 UTC</span><br><span class=\"line\">HOMEBREW_PREFIX: /usr/local</span><br><span class=\"line\">HOMEBREW_API_DOMAIN: https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api</span><br><span class=\"line\">HOMEBREW_BOTTLE_DOMAIN: https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles</span><br><span class=\"line\">HOMEBREW_BREW_GIT_REMOTE: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class=\"line\">HOMEBREW_CASK_OPTS: []</span><br><span class=\"line\">HOMEBREW_CORE_GIT_REMOTE: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class=\"line\">HOMEBREW_GITHUB_API_TOKEN: <span class=\"built_in\">set</span></span><br><span class=\"line\">HOMEBREW_MAKE_JOBS: 12</span><br><span class=\"line\">HOMEBREW_SORBET_RUNTIME: <span class=\"built_in\">set</span></span><br><span class=\"line\">Homebrew Ruby: 3.3.6 =&gt; /usr/local/Homebrew/Library/Homebrew/vendor/portable-ruby/3.3.6/bin/ruby</span><br><span class=\"line\">CPU: dodeca-core 64-bit kabylake</span><br><span class=\"line\">Clang: 15.0.0 build 1500</span><br><span class=\"line\">Git: 2.43.0 =&gt; /usr/local/bin/git</span><br><span class=\"line\">Curl: 8.7.1 =&gt; /usr/bin/curl</span><br><span class=\"line\">macOS: 13.7.1-x86_64</span><br><span class=\"line\">CLT: 15.0.0.0.1.1694021235</span><br><span class=\"line\">Xcode: N/A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过brew升级fd，可以看到使用了清华源</span></span><br><span class=\"line\">$ brew upgrade fd</span><br><span class=\"line\">==&gt; Upgrading 1 outdated package:</span><br><span class=\"line\">fd 8.2.1 -&gt; 10.2.0</span><br><span class=\"line\">==&gt; Fetching fd</span><br><span class=\"line\">==&gt; Downloading https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/fd-10.2.0.ventura.bottle.tar.gz</span><br><span class=\"line\"><span class=\"comment\">################################################################################################################################################################################### 100.0%</span></span><br><span class=\"line\">==&gt; Verifying attestation <span class=\"keyword\">for</span> fd</span><br><span class=\"line\">==&gt; Upgrading fd</span><br><span class=\"line\">  8.2.1 -&gt; 10.2.0</span><br><span class=\"line\">==&gt; Pouring fd-10.2.0.ventura.bottle.tar.gz</span><br><span class=\"line\">==&gt; Caveats</span><br><span class=\"line\">zsh completions have been installed to:</span><br><span class=\"line\">  /usr/local/share/zsh/site-functions</span><br><span class=\"line\">==&gt; Summary</span><br><span class=\"line\">🍺  /usr/local/Cellar/fd/10.2.0: 14 files, 2.9MB</span><br><span class=\"line\">==&gt; Running `brew cleanup fd`...</span><br><span class=\"line\">Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.</span><br><span class=\"line\">Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).</span><br><span class=\"line\">Removing: /usr/local/Cellar/fd/8.2.1... (13 files, 2.4MB)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>恢复为默认的GitHub镜像源</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">unset</span> HOMEBREW_BREW_GIT_REMOTE</span><br><span class=\"line\">$ <span class=\"built_in\">unset</span> HOMEBREW_CORE_GIT_REMOTE</span><br><span class=\"line\">$ <span class=\"built_in\">unset</span> HOMEBREW_API_DOMAIN</span><br><span class=\"line\">$ <span class=\"built_in\">unset</span> HOMEBREW_BOTTLE_DOMAIN</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果您之前永久配置了 HOMEBREW 环境变量，还需要在对应的 ~/.bash_profile 或者 ~/.zshrc 配置文件中，将对应的 HOMEBREW 环境变量配置行删除</span></span><br><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新brew</span></span><br><span class=\"line\">$ git -C <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo)</span>&quot;</span> remote set-url origin https://github.com/Homebrew/brew</span><br><span class=\"line\"><span class=\"comment\"># 更新brew-core，brew4.0后不会再下载brew-core，所以可以忽略</span></span><br><span class=\"line\"><span class=\"comment\"># 不过从低版本升级上来的还会有这个仓库，可以通过 brew tap 查看是否存在，实际上改不改都不会有影响，看着不舒服就修改吧</span></span><br><span class=\"line\">$ git -C <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo homebrew/core)</span>&quot;</span> remote set-url origin https://github.com/Homebrew/homebrew-core</span><br><span class=\"line\">$ brew update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看brew配置信息</span></span><br><span class=\"line\">$ brew config</span><br><span class=\"line\">HOMEBREW_VERSION: 4.4.8-38-g6089077</span><br><span class=\"line\">ORIGIN: https://github.com/Homebrew/brew</span><br><span class=\"line\">HEAD: 60890774e0a70fe93f94973b080068cf7b0d1c93</span><br><span class=\"line\">Last commit: 9 hours ago</span><br><span class=\"line\">Branch: master</span><br><span class=\"line\">Core tap HEAD: 787d1587bfa92794f7d141063a31773064ef9107</span><br><span class=\"line\">Core tap last commit: 13 minutes ago</span><br><span class=\"line\">Core tap JSON: 29 Nov 10:09 UTC</span><br><span class=\"line\">Core cask tap HEAD: 871fe2e8b93aac896a1808571ff11f8b89e6d90e</span><br><span class=\"line\">Core cask tap last commit: 48 seconds ago</span><br><span class=\"line\">Core cask tap JSON: 29 Nov 10:09 UTC</span><br><span class=\"line\">HOMEBREW_PREFIX: /usr/local</span><br><span class=\"line\">HOMEBREW_CASK_OPTS: []</span><br><span class=\"line\">HOMEBREW_GITHUB_API_TOKEN: <span class=\"built_in\">set</span></span><br><span class=\"line\">HOMEBREW_MAKE_JOBS: 12</span><br><span class=\"line\">HOMEBREW_SORBET_RUNTIME: <span class=\"built_in\">set</span></span><br><span class=\"line\">Homebrew Ruby: 3.3.6 =&gt; /usr/local/Homebrew/Library/Homebrew/vendor/portable-ruby/3.3.6/bin/ruby</span><br><span class=\"line\">CPU: dodeca-core 64-bit kabylake</span><br><span class=\"line\">Clang: 15.0.0 build 1500</span><br><span class=\"line\">Git: 2.43.0 =&gt; /usr/local/bin/git</span><br><span class=\"line\">Curl: 8.7.1 =&gt; /usr/bin/curl</span><br><span class=\"line\">macOS: 13.7.1-x86_64</span><br><span class=\"line\">CLT: 15.0.0.0.1.1694021235</span><br><span class=\"line\">Xcode: N/A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过brew升级telnet，可以看到使用了GitHub源</span></span><br><span class=\"line\">$ brew upgrade telnet</span><br><span class=\"line\">==&gt; Upgrading 1 outdated package:</span><br><span class=\"line\">telnet 294 -&gt; 303.141.1</span><br><span class=\"line\">==&gt; Downloading https://ghcr.io/v2/homebrew/core/telnet/manifests/303.141.1</span><br><span class=\"line\"><span class=\"comment\">################################################################################################################################################################################### 100.0%</span></span><br><span class=\"line\">==&gt; Fetching telnet</span><br><span class=\"line\">==&gt; Downloading https://ghcr.io/v2/homebrew/core/telnet/blobs/sha256:1be6b7b6a17a311fb3a2f1bffe7dae52284f3239b8af03f651c4fac11362f702</span><br><span class=\"line\"><span class=\"comment\">################################################################################################################################################################################### 100.0%</span></span><br><span class=\"line\">==&gt; Verifying attestation <span class=\"keyword\">for</span> telnet</span><br><span class=\"line\">==&gt; Upgrading telnet</span><br><span class=\"line\">  294 -&gt; 303.141.1</span><br><span class=\"line\">==&gt; Pouring telnet--303.141.1.ventura.bottle.tar.gz</span><br><span class=\"line\">🍺  /usr/local/Cellar/telnet/303.141.1: 5 files, 207.5KB</span><br><span class=\"line\">==&gt; Running `brew cleanup telnet`...</span><br><span class=\"line\">Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.</span><br><span class=\"line\">Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).</span><br><span class=\"line\">Removing: /usr/local/Cellar/telnet/294... (4 files, 208.2KB)</span><br></pre></td></tr></table></figure>\n<h2 id=\"重要的说明\">重要的说明</h2>\n<h3 id=\"环境变量\">环境变量</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>brew安装的软件包会被软连接到<code>/usr/local/bin/</code>下，所以需要将该路径加入系统环境PATH中</p>\n</li>\n<li class=\"lvl-2\">\n<p>这里要注意一点，如果该路径在PATH中声明的比较靠前，就可能会被优先使用，比如我们已经手工在系统中安装了<code>python</code>的某个版本，但通过brew安装某些软件包时因为其依赖python，就会通过brew同时安装对应的python版本，此时我们在使用python命令时，就会优先使用这个</p>\n</li>\n<li class=\"lvl-2\">\n<p>有两种方法可以解决，1是通过<code>brew unlink python</code>来解除链接，此时并不是删除，而只是解除了软链，不会影响依赖它的工具的使用，如果需要恢复链接，可以通过<code>brew link python</code>来恢复链接；2是将我们的系统中自己安装的一些工具的路径声明在<code>/usr/local/bin/</code>之前，这样就不会有影响了。</p>\n</li>\n</ul>\n<h3 id=\"Homebrew-4-0-带来的新变化\">Homebrew 4.0 带来的新变化</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Homebrew 4.0 进行了一项最大的改动，组织方式从Git仓库管理改为<a href=\"https://formulae.brew.sh/api/formula.jws.json\">JSON文件</a>下载。</p>\n</li>\n<li class=\"lvl-2\">\n<p>JSON文件会从<a href=\"https://formulae.brew.sh\">formulae.brew.sh</a>下载，而不再使用<code>homebrew/core</code>、<code>homebrew/cask</code>两个仓库，所以升级到4.0后，本地的<code>homebrew/core</code>、<code>homebrew/cask</code> 仓库都可以删除以释放磁盘空间。</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看本地仓库</span></span><br><span class=\"line\">$ brew tap</span><br><span class=\"line\">homebrew/cask <span class=\"comment\"># cask 仓库，GUI的工具会从此下载，brew4.0后不再使用</span></span><br><span class=\"line\">homebrew/core <span class=\"comment\"># core 仓库，即 formula 仓库，命令行工具会从此下载，brew4.0后不再使用</span></span><br><span class=\"line\">homebrew/services <span class=\"comment\"># services 仓库，services 工具本身会从此下载，brew4.0后依旧使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除本地仓库</span></span><br><span class=\"line\">$ brew untap homebrew/core</span><br><span class=\"line\">$ brew untap homebrew/cask</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此时再次执行 brew outdated 等命令时，会看到json文件被下载了，默认情况下，该json文件间隔24小时更新一次</span></span><br><span class=\"line\">$ brew outdated</span><br><span class=\"line\">==&gt; Downloading https://formulae.brew.sh/api/formula.jws.json</span><br><span class=\"line\"><span class=\"comment\">##################################################################################### 100.0%</span></span><br><span class=\"line\">==&gt; Downloading https://formulae.brew.sh/api/cask.jws.json</span><br><span class=\"line\"><span class=\"comment\">##################################################################################### 100.0%</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>如果还想使用旧的仓库模式，只要配置下环境变量</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_NO_INSTALL_FROM_API=1&#x27;</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure>\n<h3 id=\"从镜像源的切换来理解brew下载安装包的过程\">从镜像源的切换来理解brew下载安装包的过程</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>前面我们介绍过，切换镜像源时要设置4个环境变量，那么为什么要设置这几个变量呢？它们的作用是什么呢，下面我就一个一个说明：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-4\">\n<p>HOMEBREW_BREW_GIT_REMOTE</p>\n<ul class=\"lvl-4\">\n<li class=\"lvl-6\">设置brew仓库，用于更新brew命令本身，这个比较容易理解</li>\n</ul>\n</li>\n<li class=\"lvl-4\">\n<p>HOMEBREW_CORE_GIT_REMOTE</p>\n<ul class=\"lvl-4\">\n<li class=\"lvl-6\">设置core仓库，用于更新formula的安装脚本</li>\n<li class=\"lvl-6\">当通过<code>brew info xxx</code>查看安装包信息时，可以看到<code>From</code>信息，这个就是命令的安装脚本，比如下面的<code>fd.rb</code></li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew info fd</span><br><span class=\"line\">==&gt; fd: stable 10.2.0 (bottled), HEAD</span><br><span class=\"line\">Simple, fast and user-friendly alternative to find</span><br><span class=\"line\">https://github.com/sharkdp/fd</span><br><span class=\"line\">Conflicts with:</span><br><span class=\"line\">  fdclone (because both install `fd` binaries)</span><br><span class=\"line\">Installed</span><br><span class=\"line\">/usr/local/Cellar/fd/10.2.0 (14 files, 2.9MB) *</span><br><span class=\"line\">  Poured from bottle using the formulae.brew.sh API on 2024-11-29 at 18:02:16</span><br><span class=\"line\">From: https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/f/fd.rb</span><br><span class=\"line\">License: Apache-2.0 OR MIT</span><br><span class=\"line\">==&gt; Dependencies</span><br><span class=\"line\">Build: rust ✘</span><br><span class=\"line\">==&gt; Options</span><br><span class=\"line\">--HEAD</span><br><span class=\"line\">  Install HEAD version</span><br><span class=\"line\">==&gt; Caveats</span><br><span class=\"line\">zsh completions have been installed to:</span><br><span class=\"line\">  /usr/local/share/zsh/site-functions</span><br><span class=\"line\">==&gt; Analytics</span><br><span class=\"line\">install: 6,327 (30 days), 24,518 (90 days), 116,476 (365 days)</span><br><span class=\"line\">install-on-request: 6,326 (30 days), 24,515 (90 days), 116,363 (365 days)</span><br><span class=\"line\">build-error: 0 (30 days)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-4\">\n<li class=\"lvl-6\">这个安装脚本中包含<code>bottle do</code>部分，其作用是当安装脚本时，优先从该部分获取对应的操作系统的二进制预编译包的sha256校验值，如果从对应的二进制源中找到，则直接从二进制预编译包的地址进行下载，该预编译下载地址由<code>HOMEBREW_BOTTLE_DOMAIN</code>指定，默认从官方源下载。</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Fd &lt; Formula</span><br><span class=\"line\">  desc <span class=\"string\">&quot;Simple, fast and user-friendly alternative to find&quot;</span></span><br><span class=\"line\">  homepage <span class=\"string\">&quot;https://github.com/sharkdp/fd&quot;</span></span><br><span class=\"line\">  url <span class=\"string\">&quot;https://github.com/sharkdp/fd/archive/refs/tags/v10.2.0.tar.gz&quot;</span></span><br><span class=\"line\">  sha256 <span class=\"string\">&quot;73329fe24c53f0ca47cd0939256ca5c4644742cb7c14cf4114c8c9871336d342&quot;</span></span><br><span class=\"line\">  license any_of: [<span class=\"string\">&quot;Apache-2.0&quot;</span>, <span class=\"string\">&quot;MIT&quot;</span>]</span><br><span class=\"line\">  <span class=\"built_in\">head</span> <span class=\"string\">&quot;https://github.com/sharkdp/fd.git&quot;</span>, branch: <span class=\"string\">&quot;master&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  bottle <span class=\"keyword\">do</span></span><br><span class=\"line\">    sha256 cellar: :any_skip_relocation, arm64_sequoia:  <span class=\"string\">&quot;9d17cfb029fbdc6ed31c732108f7aa746d3082dd4783ed35471ef79340615509&quot;</span></span><br><span class=\"line\">    sha256 cellar: :any_skip_relocation, arm64_sonoma:   <span class=\"string\">&quot;82d5c2ffc2e2d0d8643a7c3f620c81ed49d7b23920aa23b6a7f4c50be69abc0b&quot;</span></span><br><span class=\"line\">    sha256 cellar: :any_skip_relocation, arm64_ventura:  <span class=\"string\">&quot;354412ababb7d6c52abd9153ff96f133391406ce292b2122c76b96c2ab714f87&quot;</span></span><br><span class=\"line\">    sha256 cellar: :any_skip_relocation, arm64_monterey: <span class=\"string\">&quot;0b41f292041767fd1c3c5b92daaa6c823fb07c1d7cd11b0427a415f08463f035&quot;</span></span><br><span class=\"line\">    sha256 cellar: :any_skip_relocation, sonoma:         <span class=\"string\">&quot;4fa0fb4b3f512e45d35c569953efc7c59ebd8976caac9b2c1b1394b7e29157a0&quot;</span></span><br><span class=\"line\">    sha256 cellar: :any_skip_relocation, ventura:        <span class=\"string\">&quot;b1406e5414252b1e1b90cfad188454eb31058256ed6246baed48c4e1cfe593a1&quot;</span></span><br><span class=\"line\">    sha256 cellar: :any_skip_relocation, monterey:       <span class=\"string\">&quot;0ac060bf7d1529aa1f65e634f64b98b906df533d71f2185c883165c01f59ad53&quot;</span></span><br><span class=\"line\">    sha256 cellar: :any_skip_relocation, x86_64_linux:   <span class=\"string\">&quot;2464fb21cc981166ffa9783fa14a09265790af4d89ce3a763421ddaf29119541&quot;</span></span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  depends_on <span class=\"string\">&quot;rust&quot;</span> =&gt; :build</span><br><span class=\"line\"></span><br><span class=\"line\">  conflicts_with <span class=\"string\">&quot;fdclone&quot;</span>, because: <span class=\"string\">&quot;both install `fd` binaries&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  def install</span><br><span class=\"line\">    system <span class=\"string\">&quot;cargo&quot;</span>, <span class=\"string\">&quot;install&quot;</span>, *std_cargo_args</span><br><span class=\"line\">    man1.install <span class=\"string\">&quot;doc/fd.1&quot;</span></span><br><span class=\"line\">    generate_completions_from_executable(bin/<span class=\"string\">&quot;fd&quot;</span>, <span class=\"string\">&quot;--gen-completions&quot;</span>, shells: [:bash, :fish])</span><br><span class=\"line\">    zsh_completion.install <span class=\"string\">&quot;contrib/completion/_fd&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># Bash completions are not compatible with Bash 3 so don&#x27;t use v1 directory.</span></span><br><span class=\"line\">    <span class=\"comment\"># bash: complete: nosort: invalid option name</span></span><br><span class=\"line\">    <span class=\"comment\"># Issue ref: https://github.com/clap-rs/clap/issues/5190</span></span><br><span class=\"line\">    (share/<span class=\"string\">&quot;bash-completion/completions&quot;</span>).install bash_completion.children</span><br><span class=\"line\">  end</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">test</span> <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">touch</span> <span class=\"string\">&quot;foo_file&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">touch</span> <span class=\"string\">&quot;test_file&quot;</span></span><br><span class=\"line\">    assert_equal <span class=\"string\">&quot;test_file&quot;</span>, shell_output(<span class=\"string\">&quot;#&#123;bin&#125;/fd test&quot;</span>).chomp</span><br><span class=\"line\">  end</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-4\">\n<li class=\"lvl-6\">注意，brew4.0后不再使用从该git仓库中获取安装脚本，因为formula的安装源代码已经全部存储在json文件中(见<code>HOMEBREW_API_DOMAIN</code>说明)，不再需要通过Git仓库下载</li>\n<li class=\"lvl-6\">切换镜像源时，brew4.0后不需要设置该环境变量</li>\n</ul>\n</li>\n<li class=\"lvl-4\">\n<p>HOMEBREW_API_DOMAIN</p>\n<ul class=\"lvl-4\">\n<li class=\"lvl-6\">设置<code>formula\\cask</code>的安装脚本下载源，默认<a href=\"https://formulae.brew.sh\">https://formulae.brew.sh</a></li>\n<li class=\"lvl-6\">brew4.0后不再从git仓库获取安装脚本，而是从这个json文件中一次性获取所有工具的安装脚本，默认24小时更新一次</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">官方源：</span><br><span class=\"line\">  formula源：https://formulae.brew.sh/api/formula.jws.json</span><br><span class=\"line\">  cask源：https://formulae.brew.sh/api/cask.jws.json</span><br><span class=\"line\"></span><br><span class=\"line\">清华源：</span><br><span class=\"line\">  formula源：https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api/formula.jws.json</span><br><span class=\"line\">  cask源：https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api/cask.jws.json</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-4\">\n<li class=\"lvl-6\">如果还想使用旧的仓库模式，只要配置下环境变量，这样即使你升级后已经删除了对应的仓库，它也会在第一次使用到时自动下载</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 官方也提到，非开发人员没必要这样做</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;export HOMEBREW_NO_INSTALL_FROM_API=1&#x27;</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-4\">\n<p>HOMEBREW_BOTTLE_DOMAIN</p>\n<ul class=\"lvl-4\">\n<li class=\"lvl-6\">指定预编译二进制包（也称为 bottles）的下载地址，Homebrew 使用这些 bottles 来加速软件安装过程，避免在每个用户的计算机上都重新从源代码构建软件。</li>\n<li class=\"lvl-6\">当我们通过<code>brew install xxx</code>安装软件时，brew会先从该formula的安装脚本（4.0以前从HOMEBREW_CORE_GIT_REMOTE指定的git仓库获取，4.0以后从HOMEBREW_API_DOMAIN指定的json文件中获取）中获取该软件的安装信息，然后根据安装信息从bottle中下载对应的预编译二进制包，再将其安装到本地。</li>\n<li class=\"lvl-6\">下载后的二进制包会被保存到缓存目录中(<code>brew --cache</code>)，安装后的软件包存储到Cellar目录中(<code>brew --cellar</code>)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>通过上面的分析，我们可以得出结论，切换镜像源时，实际上只需要设置3个变量就够了</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HOMEBREW_BREW_GIT_REMOTE</span><br><span class=\"line\">HOMEBREW_API_DOMAIN</span><br><span class=\"line\">HOMEBREW_BOTTLE_DOMAIN</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 brew是一个软件包管理器，同时支持MacOS和Linux，可以很方便地安装各种软件，比如git、node、python等。 brew虽然支持linux，但是实际使用中很少会使用brew来管理linux的软件包。 本文介绍如何在macos下安装brew，以及如何使用brew管理各种软件包。 本文基于 MacOS Intel Ventura 13.7.1，brew 版本为4.4.8。 安装 首先要确保系统中安装了 git 和 curl，对于 macOS 用户来说，这些系统都自带了，唯一需额外要求安装的是Command Line Tools (CLT) for Xcode。 12345678# 检查系统中是否安装了 Command Line Tools (CLT) for Xcodexcode-select --version # 能够输出版本号说明安装了，否则需要安装。# 安装 Command Line Tools (CLT) for Xcodexcode-select --install# 打印当前的 Command Line Tools (CLT) for Xcode 的安装路径xcode-select -p # /Library/Developer/CommandLineTools 在MacOS上安装brew的方法 参考资料 方法一：使用脚本安装 1/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; 安装时可以指定镜像下载源，默认是Homebrew的GitHub下载源，也可以选择国内的镜像源，比如使用清华大学的Homebrew镜像源 1234567# 控制了 Homebrew 在安装软件包时是否从 Homebrew 的 API 服务器获取信息，brew4.0后是默认行为，无需设置export HOMEBREW_INSTALL_FROM_API=1# 设置brew仓库上游export HOMEBREW_BREW_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;# 设置homebrew核心上游export HOMEBREW_CORE_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; 方法二：使用PKG文件安装 从Homebrew的github上下载最新版的Homebrew-x.x.x.pkg 方法三：国内无法访问github地址时可以使用国内镜像源 这里依旧以清华大学的Homebrew镜像源为例 123456export HOMEBREW_BREW_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;export HOMEBREW_CORE_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;# 从镜像下载安装脚本并安装 Homebrew / Linuxbrewgit clone --depth=1 https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/install.git brew-install/bin/bash brew-install/install.shrm -rf brew-install 验证是否安装成功 brew 命令本身及通过brew安装的所有命令都会被软链接到/usr/local/bin/下，所以需要将该路径加入系统环境PATH中 重启终端，然后执行brew -v命令查看brew的版本，如果安装成功，会输出类似如下内容 12$ brew -vHomebrew 4.4.8-40-g13c3def Homebrew本身的安装位置可以通过brew --repo查看，默认为/usr/local/Homebrew 通过brew安装的软件包默认会被安装到/usr/local/Cellar/下，比如git安装后会在/usr/local/Cellar/git/目录下，可以通过brew info git查看安装信息，包括依赖库等。 12345678910111213141516171819# 显示 Homebrew 安装路径，macOS ARM: /opt/homebrew，macOS Intel: /usr/local$ brew --prefix/usr/local# 显示 Homebrew 本地的 Git 仓库$ brew --repo/usr/local/Homebrew# 显示 Homebrew Cellar 路径，命令行工具的安装路径$ brew --cellar/usr/local/Cellar# 显示 Homebrew Caskroom 路径，GUI工具的安装路径$ brew --caskroom/usr/local/Caskroom# 缓存路径，下载安装包的缓存路径，通过 brew cleanup 清理$ brew --cache~/Library/Caches/Homebrew 配置命令补全 参考官网Homebrew Documentation–brew Shell Completion 我这里使用的是zsh，在~/.zshrc中加入如下内容并重启终端即可生效 12autoload -Uz compinitcompinit 卸载brew 1/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)&quot; 常用命令 brew支持安装命令行工具(formula)和GUI工具(cask) brew install xxx 安装命令行工具，这个最为常用，比如 brew install fd brew install --cask xxx 安装GUI工具，一般很少使用brew安装GUI工具，比如 brew install --cask firefox brew的命令和参数非常多，但日常使用只需要记住常用的几个就够了，详细的命令列表可以参考Homebrew Documentation 1234# 查看brew支持哪些命令brew commands# 查看命令的帮助信息，比如brew install --help 一些常用的命令 12345678brew update # 更新brew到最新版本brew --version # 查看brew的版本，可以简写为 brew -vbrew config # 查看brew的配置信息，这个命令很有用，可以查看到与brew相关的环境变量的值brew home # 浏览器打开brew官网brew home xxx # 浏览器打开xxx官网 如：打开fd命令的官网 brew home fd ,具体的名称可以通过brew list查看brew cleanup # 清理缓存及日志文件，建议定期清理，当运行brew时会自动清理（2.0以后的版本）brew cleanup -n # 显示将要清理的缓存及日志文件，只查看不删除brew doctor # 检查是否有依赖问题，比如没有安装依赖库，或者依赖库版本过低，当运行brew报错时可以通过该命令进行检查并根据提示进行修改 查看已安装的包 1234# 查看brew list # 查看已安装的包brew list --versions # 查看已安装的包及版本brew info xxx # 查看xxx的安装信息 安装、卸载 12345678# 查找、安装、卸载brew search xxx # 查找软件包，也可以通过 https://formulae.brew.sh 网页进行搜索brew install xxx # 安装软件包，此命令相当于加上了 --formula ，安装时会自动下载依赖库，比如安装`nginx`时，会自动下载`openssl@3`和`pcre2`等brew install --cask xxx # 安装GUI工具，比如`firefox`brew uninstall xxx # 卸载软件包，此命令相当于加上了 --formula ，只会卸载当前包，不会卸载依赖库，这样就有可能存在很多冗余包brew uninstall --cask xxx # 卸载GUI工具brew autoremove # 删除所有仅作为另一个软件包的依赖项安装并且现在不再需要的包brew autoremove --dry-run # --dry-run 仅查看哪些包可以删除，并不会真的删除 升级 1234# 升级brew outdated # 查看需要升级的包brew upgrade xxx # 升级xxx到最新版brew upgrade # 更新全部命令到最新版 依赖关系 12345678# 依赖关系brew deps --tree xxx # 树形显示包的依赖树brew deps --installed --tree # 树形显示所有安装包的依赖关系brew deps --installed xxx # 显示当前安装包的依赖关系，纵向展示brew deps --installed --for-each xxx # 显示当前安装包的依赖关系，横向展示brew uses --installed xxx # 查看已经安装的哪些工具依赖当前包brew leaves # 查看顶级安装包，即你通过brew直接安装的包，而不是通过安装其他软件包间接安装的brew leaves | xargs brew deps --installed --for-each --formula # 查看顶级包，并列出每个顶级包的已安装依赖 仓库管理，参考资料Homebrew Documentation–Taps 1234567891011# 仓库管理brew tap # 查看所有已安装的仓库，tap安装路径 /usr/local/Homebrew/Library/Taps/brew tap user/repo # 添加一个仓库，从gitthub下载brew tap repo_url # 添加一个仓库，从给定的仓库地址下载brew untap user/repo # 删除一个仓库# 从第三方仓库安装工具，此时会自动将 homebrew-ffmpeg/ffmpeg 这个仓库添加到本地brew install homebrew-ffmpeg/ffmpeg/ffmpeg# 更新仓库，无论是brew自己的仓库还是第三方仓库，都会自动更新brew update brew services: brew的服务管理工具，可以方便的管理通过brew安装的服务，包括启动、停止、重启服务，等等，比如nginx、redis、mysql等，具体命令可以参考Homebrew Documentation 12345678910# 第一次执行 services 相关的命令时会自动下载 homebrew/services，也可以 通过 brew tap homebrew/services 提前下载brew services list # 查看已安装的所有服务brew services start nginx # 启动服务，并注册到系统启动服务列表，即创建系统自启动文件： ~/Library/LaunchAgents/homebrew.mxcl.nginx.plistbrew services stop nginx # 停止服务，并从系统启动服务列表中移除，即删除系统自启动文件brew services kill nginx # 立即杀死服务，但不从系统启动服务列表中移除brew services restart nginx # 重启服务brew services info nginx # 查看服务的状态和进程IPbrew services run nginx # 运行服务，但不会保存到服务列表中brew services cleanup # 清理无效的服务，即已卸载应用的无用的配置brew services --help # 查看帮助 配置国内镜像源 上面安装部分介绍了如何在安装brew时就指定镜像源，但有些时候因为我们在安装时忘记配置，或者原来的镜像源已经失效需要重新配置，此时可以按照下面的方法进行配置。 此处以配置清华镜像源为例，阿里镜像源请参考阿里的官网文档–Homebrew镜像，科大源参考Homebrew 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475## 临时替换# 配置brew国内镜像源$ export HOMEBREW_BREW_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;# 配置brew-core国内镜像源$ export HOMEBREW_CORE_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;# 配置brew-bottle国内镜像源$ export HOMEBREW_API_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;$ export HOMEBREW_BOTTLE_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;# 更新配置$ brew update## 配置永久生效，zsh用户# 配置brew国内镜像源$ echo &#x27;export HOMEBREW_BREW_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;&#x27; &gt;&gt; ~/.zshrc# 配置brew-core国内镜像源$ echo &#x27;export HOMEBREW_CORE_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;&#x27; &gt;&gt; ~/.zshrc# 配置brew-bottle国内镜像源$ echo &#x27;export HOMEBREW_API_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;&#x27; &gt;&gt; ~/.zshrc$ echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;&#x27; &gt;&gt; ~/.zshrc$ source ~/.zshrc# 更新配置$ brew update# 此时查看brew配置信息，可以看到已经生效了$ brew configHOMEBREW_VERSION: 4.4.8-38-g6089077ORIGIN: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.gitHEAD: 60890774e0a70fe93f94973b080068cf7b0d1c93Last commit: 9 hours agoBranch: masterCore tap origin: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.gitCore tap HEAD: 787d1587bfa92794f7d141063a31773064ef9107Core tap last commit: 11 minutes agoCore tap JSON: 29 Nov 09:56 UTCCore cask tap HEAD: 4c34bd8c418e13160fc79f1ca9312555d2edc254Core cask tap last commit: 19 minutes agoCore cask tap JSON: 29 Nov 09:56 UTCHOMEBREW_PREFIX: /usr/localHOMEBREW_API_DOMAIN: https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/apiHOMEBREW_BOTTLE_DOMAIN: https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottlesHOMEBREW_BREW_GIT_REMOTE: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.gitHOMEBREW_CASK_OPTS: []HOMEBREW_CORE_GIT_REMOTE: https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.gitHOMEBREW_GITHUB_API_TOKEN: setHOMEBREW_MAKE_JOBS: 12HOMEBREW_SORBET_RUNTIME: setHomebrew Ruby: 3.3.6 =&gt; /usr/local/Homebrew/Library/Homebrew/vendor/portable-ruby/3.3.6/bin/rubyCPU: dodeca-core 64-bit kabylakeClang: 15.0.0 build 1500Git: 2.43.0 =&gt; /usr/local/bin/gitCurl: 8.7.1 =&gt; /usr/bin/curlmacOS: 13.7.1-x86_64CLT: 15.0.0.0.1.1694021235Xcode: N/A# 通过brew升级fd，可以看到使用了清华源$ brew upgrade fd==&gt; Upgrading 1 outdated package:fd 8.2.1 -&gt; 10.2.0==&gt; Fetching fd==&gt; Downloading https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/fd-10.2.0.ventura.bottle.tar.gz################################################################################################################################################################################### 100.0%==&gt; Verifying attestation for fd==&gt; Upgrading fd 8.2.1 -&gt; 10.2.0==&gt; Pouring fd-10.2.0.ventura.bottle.tar.gz==&gt; Caveatszsh completions have been installed to: /usr/local/share/zsh/site-functions==&gt; Summary🍺 /usr/local/Cellar/fd/10.2.0: 14 files, 2.9MB==&gt; Running `brew cleanup fd`...Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).Removing: /usr/local/Cellar/fd/8.2.1... (13 files, 2.4MB) 恢复为默认的GitHub镜像源 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960$ unset HOMEBREW_BREW_GIT_REMOTE$ unset HOMEBREW_CORE_GIT_REMOTE$ unset HOMEBREW_API_DOMAIN$ unset HOMEBREW_BOTTLE_DOMAIN# 如果您之前永久配置了 HOMEBREW 环境变量，还需要在对应的 ~/.bash_profile 或者 ~/.zshrc 配置文件中，将对应的 HOMEBREW 环境变量配置行删除$ source ~/.zshrc# 更新brew$ git -C &quot;$(brew --repo)&quot; remote set-url origin https://github.com/Homebrew/brew# 更新brew-core，brew4.0后不会再下载brew-core，所以可以忽略# 不过从低版本升级上来的还会有这个仓库，可以通过 brew tap 查看是否存在，实际上改不改都不会有影响，看着不舒服就修改吧$ git -C &quot;$(brew --repo homebrew/core)&quot; remote set-url origin https://github.com/Homebrew/homebrew-core$ brew update# 查看brew配置信息$ brew configHOMEBREW_VERSION: 4.4.8-38-g6089077ORIGIN: https://github.com/Homebrew/brewHEAD: 60890774e0a70fe93f94973b080068cf7b0d1c93Last commit: 9 hours agoBranch: masterCore tap HEAD: 787d1587bfa92794f7d141063a31773064ef9107Core tap last commit: 13 minutes agoCore tap JSON: 29 Nov 10:09 UTCCore cask tap HEAD: 871fe2e8b93aac896a1808571ff11f8b89e6d90eCore cask tap last commit: 48 seconds agoCore cask tap JSON: 29 Nov 10:09 UTCHOMEBREW_PREFIX: /usr/localHOMEBREW_CASK_OPTS: []HOMEBREW_GITHUB_API_TOKEN: setHOMEBREW_MAKE_JOBS: 12HOMEBREW_SORBET_RUNTIME: setHomebrew Ruby: 3.3.6 =&gt; /usr/local/Homebrew/Library/Homebrew/vendor/portable-ruby/3.3.6/bin/rubyCPU: dodeca-core 64-bit kabylakeClang: 15.0.0 build 1500Git: 2.43.0 =&gt; /usr/local/bin/gitCurl: 8.7.1 =&gt; /usr/bin/curlmacOS: 13.7.1-x86_64CLT: 15.0.0.0.1.1694021235Xcode: N/A# 通过brew升级telnet，可以看到使用了GitHub源$ brew upgrade telnet==&gt; Upgrading 1 outdated package:telnet 294 -&gt; 303.141.1==&gt; Downloading https://ghcr.io/v2/homebrew/core/telnet/manifests/303.141.1################################################################################################################################################################################### 100.0%==&gt; Fetching telnet==&gt; Downloading https://ghcr.io/v2/homebrew/core/telnet/blobs/sha256:1be6b7b6a17a311fb3a2f1bffe7dae52284f3239b8af03f651c4fac11362f702################################################################################################################################################################################### 100.0%==&gt; Verifying attestation for telnet==&gt; Upgrading telnet 294 -&gt; 303.141.1==&gt; Pouring telnet--303.141.1.ventura.bottle.tar.gz🍺 /usr/local/Cellar/telnet/303.141.1: 5 files, 207.5KB==&gt; Running `brew cleanup telnet`...Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).Removing: /usr/local/Cellar/telnet/294... (4 files, 208.2KB) 重要的说明 环境变量 brew安装的软件包会被软连接到/usr/local/bin/下，所以需要将该路径加入系统环境PATH中 这里要注意一点，如果该路径在PATH中声明的比较靠前，就可能会被优先使用，比如我们已经手工在系统中安装了python的某个版本，但通过brew安装某些软件包时因为其依赖python，就会通过brew同时安装对应的python版本，此时我们在使用python命令时，就会优先使用这个 有两种方法可以解决，1是通过brew unlink python来解除链接，此时并不是删除，而只是解除了软链，不会影响依赖它的工具的使用，如果需要恢复链接，可以通过brew link python来恢复链接；2是将我们的系统中自己安装的一些工具的路径声明在/usr/local/bin/之前，这样就不会有影响了。 Homebrew 4.0 带来的新变化 Homebrew 4.0 进行了一项最大的改动，组织方式从Git仓库管理改为JSON文件下载。 JSON文件会从formulae.brew.sh下载，而不再使用homebrew/core、homebrew/cask两个仓库，所以升级到4.0后，本地的homebrew/core、homebrew/cask 仓库都可以删除以释放磁盘空间。 12345678910111213141516# 查看本地仓库$ brew taphomebrew/cask # cask 仓库，GUI的工具会从此下载，brew4.0后不再使用homebrew/core # core 仓库，即 formula 仓库，命令行工具会从此下载，brew4.0后不再使用homebrew/services # services 仓库，services 工具本身会从此下载，brew4.0后依旧使用# 删除本地仓库$ brew untap homebrew/core$ brew untap homebrew/cask# 此时再次执行 brew outdated 等命令时，会看到json文件被下载了，默认情况下，该json文件间隔24小时更新一次$ brew outdated==&gt; Downloading https://formulae.brew.sh/api/formula.jws.json##################################################################################### 100.0%==&gt; Downloading https://formulae.brew.sh/api/cask.jws.json##################################################################################### 100.0% 如果还想使用旧的仓库模式，只要配置下环境变量 1echo &#x27;export HOMEBREW_NO_INSTALL_FROM_API=1&#x27; &gt;&gt; ~/.zshrc 从镜像源的切换来理解brew下载安装包的过程 前面我们介绍过，切换镜像源时要设置4个环境变量，那么为什么要设置这几个变量呢？它们的作用是什么呢，下面我就一个一个说明： HOMEBREW_BREW_GIT_REMOTE 设置brew仓库，用于更新brew命令本身，这个比较容易理解 HOMEBREW_CORE_GIT_REMOTE 设置core仓库，用于更新formula的安装脚本 当通过brew info xxx查看安装包信息时，可以看到From信息，这个就是命令的安装脚本，比如下面的fd.rb 1234567891011121314151617181920212223$ brew info fd==&gt; fd: stable 10.2.0 (bottled), HEADSimple, fast and user-friendly alternative to findhttps://github.com/sharkdp/fdConflicts with: fdclone (because both install `fd` binaries)Installed/usr/local/Cellar/fd/10.2.0 (14 files, 2.9MB) * Poured from bottle using the formulae.brew.sh API on 2024-11-29 at 18:02:16From: https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/f/fd.rbLicense: Apache-2.0 OR MIT==&gt; DependenciesBuild: rust ✘==&gt; Options--HEAD Install HEAD version==&gt; Caveatszsh completions have been installed to: /usr/local/share/zsh/site-functions==&gt; Analyticsinstall: 6,327 (30 days), 24,518 (90 days), 116,476 (365 days)install-on-request: 6,326 (30 days), 24,515 (90 days), 116,363 (365 days)build-error: 0 (30 days) 这个安装脚本中包含bottle do部分，其作用是当安装脚本时，优先从该部分获取对应的操作系统的二进制预编译包的sha256校验值，如果从对应的二进制源中找到，则直接从二进制预编译包的地址进行下载，该预编译下载地址由HOMEBREW_BOTTLE_DOMAIN指定，默认从官方源下载。 12345678910111213141516171819202122232425262728293031323334353637383940class Fd &lt; Formula desc &quot;Simple, fast and user-friendly alternative to find&quot; homepage &quot;https://github.com/sharkdp/fd&quot; url &quot;https://github.com/sharkdp/fd/archive/refs/tags/v10.2.0.tar.gz&quot; sha256 &quot;73329fe24c53f0ca47cd0939256ca5c4644742cb7c14cf4114c8c9871336d342&quot; license any_of: [&quot;Apache-2.0&quot;, &quot;MIT&quot;] head &quot;https://github.com/sharkdp/fd.git&quot;, branch: &quot;master&quot; bottle do sha256 cellar: :any_skip_relocation, arm64_sequoia: &quot;9d17cfb029fbdc6ed31c732108f7aa746d3082dd4783ed35471ef79340615509&quot; sha256 cellar: :any_skip_relocation, arm64_sonoma: &quot;82d5c2ffc2e2d0d8643a7c3f620c81ed49d7b23920aa23b6a7f4c50be69abc0b&quot; sha256 cellar: :any_skip_relocation, arm64_ventura: &quot;354412ababb7d6c52abd9153ff96f133391406ce292b2122c76b96c2ab714f87&quot; sha256 cellar: :any_skip_relocation, arm64_monterey: &quot;0b41f292041767fd1c3c5b92daaa6c823fb07c1d7cd11b0427a415f08463f035&quot; sha256 cellar: :any_skip_relocation, sonoma: &quot;4fa0fb4b3f512e45d35c569953efc7c59ebd8976caac9b2c1b1394b7e29157a0&quot; sha256 cellar: :any_skip_relocation, ventura: &quot;b1406e5414252b1e1b90cfad188454eb31058256ed6246baed48c4e1cfe593a1&quot; sha256 cellar: :any_skip_relocation, monterey: &quot;0ac060bf7d1529aa1f65e634f64b98b906df533d71f2185c883165c01f59ad53&quot; sha256 cellar: :any_skip_relocation, x86_64_linux: &quot;2464fb21cc981166ffa9783fa14a09265790af4d89ce3a763421ddaf29119541&quot; end depends_on &quot;rust&quot; =&gt; :build conflicts_with &quot;fdclone&quot;, because: &quot;both install `fd` binaries&quot; def install system &quot;cargo&quot;, &quot;install&quot;, *std_cargo_args man1.install &quot;doc/fd.1&quot; generate_completions_from_executable(bin/&quot;fd&quot;, &quot;--gen-completions&quot;, shells: [:bash, :fish]) zsh_completion.install &quot;contrib/completion/_fd&quot; # Bash completions are not compatible with Bash 3 so don&#x27;t use v1 directory. # bash: complete: nosort: invalid option name # Issue ref: https://github.com/clap-rs/clap/issues/5190 (share/&quot;bash-completion/completions&quot;).install bash_completion.children end test do touch &quot;foo_file&quot; touch &quot;test_file&quot; assert_equal &quot;test_file&quot;, shell_output(&quot;#&#123;bin&#125;/fd test&quot;).chomp endend 注意，brew4.0后不再使用从该git仓库中获取安装脚本，因为formula的安装源代码已经全部存储在json文件中(见HOMEBREW_API_DOMAIN说明)，不再需要通过Git仓库下载 切换镜像源时，brew4.0后不需要设置该环境变量 HOMEBREW_API_DOMAIN 设置formula\\cask的安装脚本下载源，默认https://formulae.brew.sh brew4.0后不再从git仓库获取安装脚本，而是从这个json文件中一次性获取所有工具的安装脚本，默认24小时更新一次 1234567官方源： formula源：https://formulae.brew.sh/api/formula.jws.json cask源：https://formulae.brew.sh/api/cask.jws.json清华源： formula源：https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api/formula.jws.json cask源：https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api/cask.jws.json 如果还想使用旧的仓库模式，只要配置下环境变量，这样即使你升级后已经删除了对应的仓库，它也会在第一次使用到时自动下载 12# 官方也提到，非开发人员没必要这样做echo &#x27;export HOMEBREW_NO_INSTALL_FROM_API=1&#x27; &gt;&gt; ~/.zshrc HOMEBREW_BOTTLE_DOMAIN 指定预编译二进制包（也称为 bottles）的下载地址，Homebrew 使用这些 bottles 来加速软件安装过程，避免在每个用户的计算机上都重新从源代码构建软件。 当我们通过brew install xxx安装软件时，brew会先从该formula的安装脚本（4.0以前从HOMEBREW_CORE_GIT_REMOTE指定的git仓库获取，4.0以后从HOMEBREW_API_DOMAIN指定的json文件中获取）中获取该软件的安装信息，然后根据安装信息从bottle中下载对应的预编译二进制包，再将其安装到本地。 下载后的二进制包会被保存到缓存目录中(brew --cache)，安装后的软件包存储到Cellar目录中(brew --cellar) 通过上面的分析，我们可以得出结论，切换镜像源时，实际上只需要设置3个变量就够了 123HOMEBREW_BREW_GIT_REMOTEHOMEBREW_API_DOMAINHOMEBREW_BOTTLE_DOMAIN","summary":"摘要 brew是一个软件包管理器，同时支持MacOS和Linux，可以很方便地安装各种软件，比如git、node、python等。 brew虽然支持linux，但是实际使用中很少会使用brew来管理linux的软件包。 本文介绍如何在macos下安装brew，以及如何使用brew管理各种软件包。 本文基于 MacOS Intel Ventura 13.7.1，brew 版本为4.4.8。","date_published":"2024-11-28T13:55:05.000Z","tags":["macos","macos","brew"]},{"id":"https://blog.hanqunfeng.com/2024/11/22/python_poetry/","url":"https://blog.hanqunfeng.com/2024/11/22/python_poetry/","title":"Poetry--轻量级的python包管理器","content_html":"<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\"><a href=\"https://python-poetry.org/docs/\">Poetry</a>是一个轻量级的python包管理器，其目标是帮助开发者快速、轻松地构建、发布和分享python包。说它轻量，是与 <a href=\"https://docs.conda.io/projects/conda/en/stable/\">conda</a> 相比 poetry 更轻量，同时与 <code>venv + pip</code> <a href=\"/2018/04/28/python_virtualenv/\" title=\"Python--virtualenv\">Python--virtualenv</a> 的方式相比具有如下优点：\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">使用缓存机制，避免重复下载依赖包</li>\n<li class=\"lvl-6\">包管理上更加精确，删除不需要的包时会同时删除与其关联的且没有被使用的那些依赖包，避免无用的依赖包造成打包体积过大</li>\n<li class=\"lvl-6\">打包和发布更加简单，只需要一个命令就可以打包和发布</li>\n</ul>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"安装\">安装</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参考官方文档<a href=\"https://python-poetry.org/docs/#installation\">Installation</a></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 官方推荐使用pipx安装，当然也可以使用 pip</span></span><br><span class=\"line\">$ pipx install poetry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看是否安装成功</span></span><br><span class=\"line\">$ poetry --version</span><br><span class=\"line\">Poetry (version 1.8.4)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加命令自动补全</span></span><br><span class=\"line\">$ <span class=\"built_in\">mkdir</span>  ~/.zfunc</span><br><span class=\"line\">$ poetry completions zsh &gt; ~/.zfunc/_poetry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 ~/.zshrc 中添加以下配置（我是用的是zsh，其他shell可以参考官方文档）</span></span><br><span class=\"line\">fpath+=~/.zfunc</span><br><span class=\"line\"><span class=\"built_in\">autoload</span> -Uz compinit &amp;&amp; compinit</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>pipx简介</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p><a href=\"https://github.com/pypa/pipx\">pipx</a> 是一个 Python 包管理工具，使用pipx安装工具包时，每个工具都会被安装在一个独立的虚拟环境中，避免不同工具之间的依赖冲突。</p>\n</li>\n<li class=\"lvl-2\">\n<p>场景：两个工具依赖不同版本的同一个库<br>\n假设我们有两个命令行工具：</p>\n<p>工具A 依赖于 requests 库的版本 2.27.1。<br>\n工具B 依赖于 requests 库的版本 2.31.0。</p>\n<p>如果使用 pip 安装<br>\n工具会被安装到全局环境，共享相同的依赖版本：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install toolA  <span class=\"comment\"># 安装时会安装 requests 2.27.1</span></span><br><span class=\"line\">pip install toolB  <span class=\"comment\"># 安装时会将 requests 升级到 2.31.0</span></span><br></pre></td></tr></table></figure>\n<p>结果：<br>\n当你运行工具A时，它可能会报错，因为它依赖的 requests 2.27.1 已被 requests 2.31.0 替换。<br>\n全局环境中的所有工具都共享一个 requests，版本冲突不可避免。</p>\n<p>如果使用 pipx 安装<br>\n每个工具会被安装到独立的虚拟环境中，各自的依赖互不影响：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipx install toolA  <span class=\"comment\"># 在虚拟环境A中安装 toolA 和 requests 2.27.1</span></span><br><span class=\"line\">pipx install toolB  <span class=\"comment\"># 在虚拟环境B中安装 toolB 和 requests 2.31.0</span></span><br></pre></td></tr></table></figure>\n<p>结果：<br>\n虚拟环境A 只包含 toolA 和它的依赖 requests 2.27.1。<br>\n虚拟环境B 只包含 toolB 和它的依赖 requests 2.31.0。<br>\n工具之间完全隔离，不会因为依赖版本冲突而导致问题。</p>\n</li>\n<li class=\"lvl-2\">\n<p>所以，当需要安装全局命令行工具时，使用pipx是个很好的选择</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://github.com/pypa/pipx\">pipx</a> 的安装</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装pipx</span></span><br><span class=\"line\">pip install pipx</span><br><span class=\"line\"><span class=\"comment\"># 配置环境变量，运行该命令会将</span></span><br><span class=\"line\">pipx ensurepath</span><br><span class=\"line\"><span class=\"comment\"># 运行上面的命令会将如下内容加入你的shell配置文件中，我的是 .zshrc 文件，实际上你也可以手工添加该配置，将$HOME/.local/bin放到前面更好一些。</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"string\">&quot;<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/.local/bin&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 注意添加完成后要重启shell</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加pipx自动代码补全</span></span><br><span class=\"line\"><span class=\"comment\"># 运行如下命令，并根据提示完成</span></span><br><span class=\"line\">pipx completions</span><br><span class=\"line\"><span class=\"comment\"># 我的是zsh，所以在 .zshrc中添加如下内容</span></span><br><span class=\"line\"><span class=\"built_in\">autoload</span> -Uz compinit &amp;&amp; compinit <span class=\"comment\"># 如果没有添加过就需要先添加这个</span></span><br><span class=\"line\"><span class=\"built_in\">eval</span> <span class=\"string\">&quot;<span class=\"subst\">$(register-python-argcomplete pipx)</span>&quot;</span> <span class=\"comment\"># 添加自动代码补全</span></span><br><span class=\"line\"><span class=\"comment\"># 注意添加完成后要重启shell</span></span><br></pre></td></tr></table></figure>\n</div>\n<h2 id=\"查看所有命令\">查看所有命令</h2>\n<blockquote>\n<p>我已经将其翻译为中文</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ poetry list</span><br><span class=\"line\">Poetry (版本 1.8.4)</span><br><span class=\"line\"></span><br><span class=\"line\">用法：</span><br><span class=\"line\">  <span class=\"built_in\">command</span> [选项] [参数]</span><br><span class=\"line\"></span><br><span class=\"line\">选项：</span><br><span class=\"line\">  -h, --<span class=\"built_in\">help</span>                 显示给定命令的帮助。如果没有指定命令，则显示列表命令的帮助。</span><br><span class=\"line\">  -q, --quiet                不输出任何消息。</span><br><span class=\"line\">  -V, --version              显示此应用程序版本。</span><br><span class=\"line\">      --ansi                强制输出ANSI格式。</span><br><span class=\"line\">      --no-ansi             禁用ANSI输出。</span><br><span class=\"line\">  -n, --no-interaction       不要提问任何交互性问题。</span><br><span class=\"line\">      --no-plugins           禁用插件。</span><br><span class=\"line\">      --no-cache            禁用源缓存。</span><br><span class=\"line\">  -C, --directory=目录      Poetry命令的工作目录（默认为当前工作目录）。</span><br><span class=\"line\">  -v|vv|vvv, --verbose       增加消息的冗长度：1 表示正常输出，2 表示更详细的输出，3 表示调试。</span><br><span class=\"line\"></span><br><span class=\"line\">可用命令：</span><br><span class=\"line\">  about              显示关于Poetry的信息。</span><br><span class=\"line\">  add                将新依赖项添加到pyproject.toml并安装它。</span><br><span class=\"line\">  build              默认构建一个包，分别是tarball和wheel。</span><br><span class=\"line\">  check              验证pyproject.toml文件的内容及其与poetry.lock文件的一致性。</span><br><span class=\"line\">  config             管理配置设置。</span><br><span class=\"line\">  <span class=\"built_in\">export</span>             将锁文件导出到其他格式。</span><br><span class=\"line\">  <span class=\"built_in\">help</span>               显示特定命令的帮助。</span><br><span class=\"line\">  init               在当前目录创建一个基础的pyproject.toml文件。</span><br><span class=\"line\">  install            安装项目依赖项。</span><br><span class=\"line\">  list               列出命令。</span><br><span class=\"line\">  lock              锁定项目依赖项。</span><br><span class=\"line\">  new               在&lt;path&gt;处创建一个新的Python项目。</span><br><span class=\"line\">  publish           将包发布到远程仓库。</span><br><span class=\"line\">  remove            从项目依赖项中移除包。</span><br><span class=\"line\">  run                在适当的环境中运行命令。</span><br><span class=\"line\">  search            在远程仓库中搜索包。</span><br><span class=\"line\">  shell            在虚拟环境中启动shell。</span><br><span class=\"line\">  show              显示有关包的信息。</span><br><span class=\"line\">  update            根据pyproject.toml文件更新依赖项。</span><br><span class=\"line\">  version           显示项目的版本或在提供有效版本规则时更新它。</span><br><span class=\"line\"></span><br><span class=\"line\">缓存</span><br><span class=\"line\">  cache clear        按名称清除Poetry缓存。</span><br><span class=\"line\">  cache list         列出Poetry的缓存列表。</span><br><span class=\"line\"></span><br><span class=\"line\">调试</span><br><span class=\"line\">  debug info        显示调试信息。</span><br><span class=\"line\">  debug resolve    调试依赖项解析。</span><br><span class=\"line\"></span><br><span class=\"line\">环境</span><br><span class=\"line\">  <span class=\"built_in\">env</span> info         显示当前环境的信息。</span><br><span class=\"line\">  <span class=\"built_in\">env</span> list          列出与当前项目关联的所有虚拟环境。</span><br><span class=\"line\">  <span class=\"built_in\">env</span> remove        移除与项目关联的虚拟环境。</span><br><span class=\"line\">  <span class=\"built_in\">env</span> use           激活或创建当前项目的新的虚拟环境。</span><br><span class=\"line\"></span><br><span class=\"line\">自身</span><br><span class=\"line\">  self add          向Poetry的运行时环境添加其他包。</span><br><span class=\"line\">  self install      安装此Poetry安装所需的锁定包（包括插件）。</span><br><span class=\"line\">  self lock         锁定Poetry安装的系统要求。</span><br><span class=\"line\">  self remove       从Poetry的运行时环境中移除其他包。</span><br><span class=\"line\">  self show         显示Poetry运行时环境中的包。</span><br><span class=\"line\">  self show plugins 显示当前已安装插件的信息。</span><br><span class=\"line\">  self update       更新Poetry到最新版本。</span><br><span class=\"line\"></span><br><span class=\"line\">源</span><br><span class=\"line\">  <span class=\"built_in\">source</span> add         为项目添加源配置。</span><br><span class=\"line\">  <span class=\"built_in\">source</span> remove      移除为项目配置的源。</span><br><span class=\"line\">  <span class=\"built_in\">source</span> show        显示为项目配置的源信息。</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用命令\">常用命令</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里只对日常开发中比较常用的命令进行简要说明，详细介绍可以参考<a href=\"https://python-poetry.org/docs/\">官方文档</a></p>\n</li>\n</ul>\n<h3 id=\"new-创建项目\">new : 创建项目</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 按照默认规则创建一个基于 poetry 的项目</span></span><br><span class=\"line\">$ poetry new my-project</span><br><span class=\"line\">Created package my_project <span class=\"keyword\">in</span> my-project</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> my-project</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看生成的目录结构</span></span><br><span class=\"line\">$ exa -T</span><br><span class=\"line\">.</span><br><span class=\"line\">├── my_project</span><br><span class=\"line\">│  └── __init__.py</span><br><span class=\"line\">├── pyproject.toml</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">└── tests</span><br><span class=\"line\">   └── __init__.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看 pyproject.toml 内容，该文件为项目的配置的配置文件</span></span><br><span class=\"line\">$ more pyproject.toml</span><br><span class=\"line\">[tool.poetry]</span><br><span class=\"line\">name = <span class=\"string\">&quot;my-project&quot;</span></span><br><span class=\"line\">version = <span class=\"string\">&quot;0.1.0&quot;</span></span><br><span class=\"line\">description = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">authors = [<span class=\"string\">&quot;hanqunfeng &lt;hanqf2008@163.com&gt;&quot;</span>]</span><br><span class=\"line\">readme = <span class=\"string\">&quot;README.md&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[tool.poetry.dependencies]</span><br><span class=\"line\">python = <span class=\"string\">&quot;^3.11&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[build-system]</span><br><span class=\"line\">requires = [<span class=\"string\">&quot;poetry-core&quot;</span>]</span><br><span class=\"line\">build-backend = <span class=\"string\">&quot;poetry.core.masonry.api&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"init-初始化一个已有的项目目录\">init : 初始化一个已有的项目目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 假设我们已经有个项目目录，目录名称为 poetryDemo</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> poetryDemo</span><br><span class=\"line\"><span class=\"comment\"># 初始化 poetryDemo ，在当前目录下创建 pyproject.toml 文件，注意该操作只会创建该文件，包目录以及readme文件都没有，需要手工创建</span></span><br><span class=\"line\">$ poetry init</span><br><span class=\"line\">This <span class=\"built_in\">command</span> will guide you through creating your pyproject.toml config.</span><br><span class=\"line\"></span><br><span class=\"line\">Package name [poetrydemo]:  <span class=\"comment\"># 包名称</span></span><br><span class=\"line\">Version [0.1.0]:  <span class=\"comment\"># 版本号</span></span><br><span class=\"line\">Description []:   <span class=\"comment\"># 描述信息</span></span><br><span class=\"line\">Author [hanqunfeng &lt;hanqf2008@163.com&gt;, n to skip]:  <span class=\"comment\"># 作者</span></span><br><span class=\"line\">License []:  <span class=\"comment\"># License</span></span><br><span class=\"line\">Compatible Python versions [^3.11]:  <span class=\"comment\"># python 版本</span></span><br><span class=\"line\"></span><br><span class=\"line\">Would you like to define your main dependencies interactively? (<span class=\"built_in\">yes</span>/no) [<span class=\"built_in\">yes</span>] <span class=\"comment\"># 您想以交互方式定义您的主环境依赖关系吗？默认yes</span></span><br><span class=\"line\">You can specify a package <span class=\"keyword\">in</span> the following forms:  <span class=\"comment\"># 您可以按以下形式指定包：</span></span><br><span class=\"line\">  - A single name (requests): this will search <span class=\"keyword\">for</span> matches on PyPI <span class=\"comment\"># 单个名称（requests）：这将在官方仓库PyPI上搜索匹配项，如果指定了其它镜像源就会从指定的源下载</span></span><br><span class=\"line\">  - A name and a constraint (requests@^2.23.0) <span class=\"comment\"># 名称和版本约束</span></span><br><span class=\"line\">  - A git url (git+https://github.com/python-poetry/poetry.git) <span class=\"comment\"># git地址</span></span><br><span class=\"line\">  - A git url with a revision (git+https://github.com/python-poetry/poetry.git#develop) <span class=\"comment\"># git地址，指定某个分支</span></span><br><span class=\"line\">  - A file path (../my-package/my-package.whl) <span class=\"comment\"># 文件路径</span></span><br><span class=\"line\">  - A directory (../my-package/) <span class=\"comment\"># 目录路径</span></span><br><span class=\"line\">  - A url (https://example.com/packages/my-package-0.1.0.tar.gz) <span class=\"comment\"># 一个安装包的地址</span></span><br><span class=\"line\"></span><br><span class=\"line\">Package to add or search <span class=\"keyword\">for</span> (leave blank to skip): <span class=\"comment\"># 添加主环境依赖，按上面的格式要求填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">Would you like to define your development dependencies interactively? (<span class=\"built_in\">yes</span>/no) [<span class=\"built_in\">yes</span>] <span class=\"comment\"># 您想以交互方式定义您的开发依赖关系吗？默认yes</span></span><br><span class=\"line\">Package to add or search <span class=\"keyword\">for</span> (leave blank to skip): <span class=\"comment\"># 添加开发环境依赖，按上面的格式要求填写</span></span><br><span class=\"line\"></span><br><span class=\"line\">Generated file</span><br><span class=\"line\"><span class=\"comment\"># 要生成的 pyproject.toml 内容</span></span><br><span class=\"line\">[tool.poetry]</span><br><span class=\"line\">name = <span class=\"string\">&quot;poetrydemo&quot;</span>  <span class=\"comment\"># 包名称</span></span><br><span class=\"line\">version = <span class=\"string\">&quot;0.1.0&quot;</span>    <span class=\"comment\"># 版本</span></span><br><span class=\"line\">description = <span class=\"string\">&quot;&quot;</span>     <span class=\"comment\"># 描述信息</span></span><br><span class=\"line\">authors = [<span class=\"string\">&quot;hanqunfeng &lt;hanqf2008@163.com&gt;&quot;</span>] <span class=\"comment\"># 作者信息</span></span><br><span class=\"line\">readme = <span class=\"string\">&quot;README.md&quot;</span> <span class=\"comment\"># 说明文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">[tool.poetry.dependencies] <span class=\"comment\"># 主环境依赖</span></span><br><span class=\"line\">python = <span class=\"string\">&quot;^3.11&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[build-system]</span><br><span class=\"line\">requires = [<span class=\"string\">&quot;poetry-core&quot;</span>]</span><br><span class=\"line\">build-backend = <span class=\"string\">&quot;poetry.core.masonry.api&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Do you confirm generation? (<span class=\"built_in\">yes</span>/no) [<span class=\"built_in\">yes</span>] <span class=\"comment\"># 确认是否按照上面的内容创建 pyproject.toml 文件，默认yes</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>上面的方式在初始化时会询问你相关的信息，如果你希望都用默认值的话，可以使用如下命令</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">poetry init -n</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-poetry的全局配置\">config : poetry的全局配置</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看全局配置</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ poetry config --list</span><br><span class=\"line\">cache-dir = <span class=\"string\">&quot;/Users/hanqf/Library/Caches/pypoetry&quot;</span>  <span class=\"comment\"># 缓存目录,用于存储项目依赖和虚拟环境等缓存信息。</span></span><br><span class=\"line\">experimental.system-git-client = <span class=\"literal\">false</span>              <span class=\"comment\"># 是否使用系统自带的git客户端,false表示使用Poetry内置的git客户端</span></span><br><span class=\"line\">installer.max-workers = null                        <span class=\"comment\"># 安装依赖时的最大线程数,null表示使用默认线程数，可以设置为cpu核数+4</span></span><br><span class=\"line\">installer.modern-installation = <span class=\"literal\">true</span>                <span class=\"comment\"># 是否使用Poetry的现代安装方案,true表示使用</span></span><br><span class=\"line\">installer.no-binary = null                          <span class=\"comment\"># 是否不使用预编译的二进制包,null表示不限制</span></span><br><span class=\"line\">installer.parallel = <span class=\"literal\">true</span>                           <span class=\"comment\"># 是否并行安装依赖,true表示并行安装</span></span><br><span class=\"line\">keyring.enabled = <span class=\"literal\">true</span>                              <span class=\"comment\"># 是否启用密钥环（keyring）以保存认证信息。true 表示启用。</span></span><br><span class=\"line\">solver.lazy-wheel = <span class=\"literal\">true</span>                            <span class=\"comment\"># 是否延迟解析 wheel 包。true 表示延迟解析。</span></span><br><span class=\"line\">virtualenvs.create = <span class=\"literal\">true</span>                           <span class=\"comment\"># 是否自动创建虚拟环境,true表示创建</span></span><br><span class=\"line\">virtualenvs.in-project = null                       <span class=\"comment\"># 是否在项目内创建虚拟环境，null 表示使用默认值（通常为 false），即不在项目中创建。true表示在项目中创建</span></span><br><span class=\"line\">virtualenvs.options.always-copy = <span class=\"literal\">false</span>             <span class=\"comment\"># 如果设置为 true，Poetry 会始终复制文件到虚拟环境中，而不是使用符号链接（symlinks）。这可以避免某些系统上的权限问题，但会增加虚拟环境的存储需求。</span></span><br><span class=\"line\">virtualenvs.options.no-pip = <span class=\"literal\">false</span>                  <span class=\"comment\"># 如果设置为 true，Poetry 在创建虚拟环境时不会安装 pip。如果你的项目不需要直接使用 pip，并且你希望通过 Poetry 管理所有的依赖项，可以将 no-pip 设置为 true，以减少虚拟环境中的不必要的依赖项。</span></span><br><span class=\"line\">virtualenvs.options.no-setuptools = <span class=\"literal\">false</span>           <span class=\"comment\"># 如果设置为 true，Poetry 在创建虚拟环境时不会安装 setuptools。默认情况下，Poetry 会安装 pip 和 setuptools，以便你可以使用这些工具来管理依赖项。</span></span><br><span class=\"line\">virtualenvs.options.system-site-packages = <span class=\"literal\">false</span>    <span class=\"comment\"># 默认值false，此时 Poetry 创建的虚拟环境将不会包含全局 Python 安装的 site-packages 目录中的包。这有助于确保项目依赖项的隔离性，避免与系统中的其他包发生冲突。</span></span><br><span class=\"line\">virtualenvs.path = <span class=\"string\">&quot;&#123;cache-dir&#125;/virtualenvs&quot;</span>  <span class=\"comment\"># /Users/hanqf/Library/Caches/pypoetry/virtualenvs # 虚拟环境存放的路径，如果virtualenvs.in-project设置为true，就只会在项目中创建</span></span><br><span class=\"line\">virtualenvs.prefer-active-python = <span class=\"literal\">false</span>            <span class=\"comment\"># 是否优先使用系统激活的Python解释器</span></span><br><span class=\"line\">virtualenvs.prompt = <span class=\"string\">&quot;&#123;project_name&#125;-py&#123;python_version&#125;&quot;</span>  <span class=\"comment\"># 虚拟环境的命令提示格式</span></span><br><span class=\"line\">warnings.export = <span class=\"literal\">true</span>                              <span class=\"comment\"># 是否在导出时显示警告信息。true 表示显示</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>修改全局配置</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 修改全局配置，此后会在项目目录下创建 .venv 目录存放虚拟环境</span></span><br><span class=\"line\">$ poetry config virtualenvs.in-project <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 进入虚拟环境，如果虚拟环境尚未创建会自动创建</span></span><br><span class=\"line\">$ poetry shell</span><br><span class=\"line\"><span class=\"comment\"># 退出虚拟环境</span></span><br><span class=\"line\">$ <span class=\"built_in\">exit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只对当前项目有效，此时会在当前项目目录下创建 poetry.toml 来保存这些配置信息</span></span><br><span class=\"line\">$ poetry config virtualenvs.in-project <span class=\"literal\">true</span> --<span class=\"built_in\">local</span></span><br><span class=\"line\">$ poetry config virtualenvs.options.system-site-packages <span class=\"literal\">true</span> --<span class=\"built_in\">local</span></span><br><span class=\"line\">$ more poetry.toml</span><br><span class=\"line\">[virtualenvs]</span><br><span class=\"line\">in-project = <span class=\"literal\">true</span></span><br><span class=\"line\">[virtualenvs.options]</span><br><span class=\"line\">system-site-packages = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里要注意 virtualenvs 下的属性必须在创建虚拟环境前设置才会有效</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"env-虚拟环境管理\">env : 虚拟环境管理</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Poetry 会在你第一次运行某些命令（如 <code>poetry shell</code> 或者 <code>poetry add somepackage</code>）时自动创建虚拟环境。</p>\n</li>\n<li class=\"lvl-2\">\n<p>不过这种时候都是使用系统默认的python来创建虚拟环境，如果系统中安装了多个python，则可以通过如下方式设置虚拟环境要使用哪个python版本</p>\n</li>\n<li class=\"lvl-2\">\n<p>创建/切换虚拟环境</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 指定python的版本，这会从python的默认安装路径下查找对应的版本</span></span><br><span class=\"line\"><span class=\"comment\"># 比如macOs会从该路径下查找：/Library/Frameworks/Python.framework/Versions</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> use 3.11</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果可以直接在命令行使用python命令,比如：python3.12 -V，则可以使用如下方式创建虚拟环境</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> use python3.12</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果python安装到了其它路径，可以指定python安装路径</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> use /pythonDir/3.13/bin/python3</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看当前项目的虚拟环境信息</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建一个基于 python3.13 的虚拟环境</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> use python3.13</span><br><span class=\"line\">Creating virtualenv poetrydemo-fyqYbfje-py3.13 <span class=\"keyword\">in</span> /Users/hanqf/Library/Caches/pypoetry/virtualenvs</span><br><span class=\"line\">Using virtualenv: /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.13</span><br><span class=\"line\"><span class=\"comment\"># 再创建一个基于 python3.11 的虚拟环境，最后被use的处于默认激活状态</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> use python3.11</span><br><span class=\"line\">Creating virtualenv poetrydemo-fyqYbfje-py3.11 <span class=\"keyword\">in</span> /Users/hanqf/Library/Caches/pypoetry/virtualenvs</span><br><span class=\"line\">Using virtualenv: /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11</span><br><span class=\"line\"><span class=\"comment\"># 查看当前项目有多少个虚拟环境</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> list</span><br><span class=\"line\">poetrydemo-fyqYbfje-py3.11 (Activated) <span class=\"comment\"># poetrydemo-fyqYbfje-py3.11 表示虚拟环境名称，Activated表示当前虚拟环境已经被激活</span></span><br><span class=\"line\">poetrydemo-fyqYbfje-py3.13</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看虚拟化环境路径</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> list  --full-path</span><br><span class=\"line\">/Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11 (Activated)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前激活的虚拟环境信息</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> info</span><br><span class=\"line\"></span><br><span class=\"line\">Virtualenv</span><br><span class=\"line\">Python:         3.11.3</span><br><span class=\"line\">Implementation: CPython</span><br><span class=\"line\">Path:           /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11</span><br><span class=\"line\">Executable:     /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11/bin/python</span><br><span class=\"line\">Valid:          True</span><br><span class=\"line\"></span><br><span class=\"line\">Base</span><br><span class=\"line\">Platform:   darwin</span><br><span class=\"line\">OS:         posix</span><br><span class=\"line\">Python:     3.11.3</span><br><span class=\"line\">Path:       /Library/Frameworks/Python.framework/Versions/3.11</span><br><span class=\"line\">Executable: /Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除虚拟环境</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> remove python3.13</span><br><span class=\"line\">Deleted virtualenv: /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.13</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除全部虚拟环境</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> remove --all</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>注意，当<code>virtualenvs.in-project</code>被设置为<code>true</code>时，即只在项目目录下创建虚拟环境时，只会保留一个环境，即<code>.venv</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>切换到新的虚拟环境时会全新创建一个新的环境，原先的环境会被删除，所以要使用<code>poetry install</code>命令重新安装依赖</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> use python3.11</span><br><span class=\"line\">Recreating virtualenv poetrydemo <span class=\"keyword\">in</span> /Users/hanqf/Desktop/pythonDir/poetryDir/poetryDemo/.venv</span><br><span class=\"line\">Using virtualenv: /Users/hanqf/Desktop/pythonDir/poetryDir/poetryDemo/.venv</span><br><span class=\"line\"></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> list <span class=\"comment\"># 虽然可以通过 poetry env use 的方式来创建新的虚拟环境，但实际上只会有一个环境被保留，所以这里只会显示一个</span></span><br><span class=\"line\">.venv (Activated) <span class=\"comment\"># .venv 表示虚拟环境名称，Activated表示当前虚拟环境已经被激活</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看虚拟环境信息</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">env</span> info</span><br><span class=\"line\"></span><br><span class=\"line\">Virtualenv</span><br><span class=\"line\">Python:         3.11.3</span><br><span class=\"line\">Implementation: CPython</span><br><span class=\"line\">Path:           /Users/hanqf/Desktop/pythonDir/poetryDir/poetryDemo/.venv</span><br><span class=\"line\">Executable:     /Users/hanqf/Desktop/pythonDir/poetryDir/poetryDemo/.venv/bin/python</span><br><span class=\"line\">Valid:          True</span><br><span class=\"line\"></span><br><span class=\"line\">Base</span><br><span class=\"line\">Platform:   darwin</span><br><span class=\"line\">OS:         posix</span><br><span class=\"line\">Python:     3.11.3</span><br><span class=\"line\">Path:       /Library/Frameworks/Python.framework/Versions/3.11</span><br><span class=\"line\">Executable: /Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11</span><br></pre></td></tr></table></figure>\n<h3 id=\"依赖包管理\">依赖包管理</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>add : 安装依赖包</p>\n</li>\n</ul>\n<blockquote>\n<p>这个命令会修改 pyproject.toml 文件，在 [tool.poetry.dependencies] 部分添加新的依赖项。还会自动更新 poetry.lock 文件，锁定依赖的确切版本。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装依赖，安装后会将依赖信息写入 pyproject.toml 中</span></span><br><span class=\"line\"><span class=\"comment\"># 不指定版本则安装最新版</span></span><br><span class=\"line\">$ poetry add fastapi</span><br><span class=\"line\">Using version ^0.115.5 <span class=\"keyword\">for</span> fastapi</span><br><span class=\"line\"></span><br><span class=\"line\">Updating dependencies</span><br><span class=\"line\">Resolving dependencies... (1.3s)</span><br><span class=\"line\"></span><br><span class=\"line\">Package operations: 9 installs, 0 updates, 0 removals</span><br><span class=\"line\"></span><br><span class=\"line\">  - Installing idna (3.10)</span><br><span class=\"line\">  - Installing sniffio (1.3.1)</span><br><span class=\"line\">  - Installing typing-extensions (4.12.2)</span><br><span class=\"line\">  - Installing annotated-types (0.7.0)</span><br><span class=\"line\">  - Installing anyio (4.6.2.post1)</span><br><span class=\"line\">  - Installing pydantic-core (2.23.4)</span><br><span class=\"line\">  - Installing pydantic (2.9.2)</span><br><span class=\"line\">  - Installing starlette (0.41.3)</span><br><span class=\"line\">  - Installing fastapi (0.115.5)</span><br><span class=\"line\"></span><br><span class=\"line\">Writing lock file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定版本号安装依赖</span></span><br><span class=\"line\">poetry add package_name@^1.2.3</span><br><span class=\"line\">    <span class=\"comment\"># 规则说明</span></span><br><span class=\"line\">    ^1.2.3 表示兼容 1.2.3 及更高的小版本，但不包括 2.0.0。    如：poetry add requests@^2.28.0</span><br><span class=\"line\">    ~1.2.3：允许升级到 1.2.x，但不包括 1.3.0。               如：poetry add requests@~2.28.0</span><br><span class=\"line\">    1.2.3：固定为 1.2.3。                                   如：poetry add requests@2.28.0</span><br><span class=\"line\">    &gt;=1.2.3：允许使用 1.2.3 及以上版本。注意zsh下要加上双引号，如：poetry add <span class=\"string\">&quot;requests@&gt;=2.28.0&quot;</span></span><br><span class=\"line\">    &lt;2.0.0：允许使用小于 2.0.0 的版本。 注意zsh下要加上双引号，如：poetry add <span class=\"string\">&quot;requests@&lt;3.0.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装到指定的分组，默认都是安装到主环境中的，poetry build默认只会打包主环境的依赖</span></span><br><span class=\"line\">poetry add flask <span class=\"comment\"># 安装到主环境中</span></span><br><span class=\"line\">poetry add flask --group=<span class=\"built_in\">test</span> <span class=\"comment\">#添加分组名 test</span></span><br><span class=\"line\">poetry add flask --dev  <span class=\"comment\">#相当于--group=dev</span></span><br><span class=\"line\"><span class=\"comment\"># 分别执行上面3个安装命令后，输出 pyproject.toml 的内容如下</span></span><br><span class=\"line\">[tool.poetry]</span><br><span class=\"line\">name = <span class=\"string\">&quot;poetrydemo&quot;</span></span><br><span class=\"line\">version = <span class=\"string\">&quot;0.1.0&quot;</span></span><br><span class=\"line\">description = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">authors = [<span class=\"string\">&quot;hanqunfeng &lt;hanqf2008@163.com&gt;&quot;</span>]</span><br><span class=\"line\">readme = <span class=\"string\">&quot;README.md&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[tool.poetry.dependencies] <span class=\"comment\"># 主环境</span></span><br><span class=\"line\">python = <span class=\"string\">&quot;^3.11&quot;</span></span><br><span class=\"line\">flask = <span class=\"string\">&quot;^3.1.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[tool.poetry.group.test.dependencies] <span class=\"comment\"># test分组依赖</span></span><br><span class=\"line\">flask = <span class=\"string\">&quot;^3.1.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[tool.poetry.group.dev.dependencies] <span class=\"comment\"># dev分组依赖</span></span><br><span class=\"line\">flask = <span class=\"string\">&quot;^3.1.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[build-system]</span><br><span class=\"line\">requires = [<span class=\"string\">&quot;poetry-core&quot;</span>]</span><br><span class=\"line\">build-backend = <span class=\"string\">&quot;poetry.core.masonry.api&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>show : 查看依赖包</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前项目都需要哪些依赖，这些依赖不一定都安装了，它只是解析 pyproject.toml 中的声明来解析依赖树</span></span><br><span class=\"line\">$ poetry show</span><br><span class=\"line\">annotated-types   0.7.0       Reusable constraint types to use with typing.Annotated</span><br><span class=\"line\">anyio             4.6.2.post1 High level compatibility layer <span class=\"keyword\">for</span> multiple asynchronous ...</span><br><span class=\"line\">fastapi           0.115.5     FastAPI framework, high performance, easy to learn, fast ...</span><br><span class=\"line\">idna              3.10        Internationalized Domain Names <span class=\"keyword\">in</span> Applications (IDNA)</span><br><span class=\"line\">pydantic          2.9.2       Data validation using Python <span class=\"built_in\">type</span> hints</span><br><span class=\"line\">pydantic-core     2.23.4      Core functionality <span class=\"keyword\">for</span> Pydantic validation and serialization</span><br><span class=\"line\">sniffio           1.3.1       Sniff out <span class=\"built_in\">which</span> async library your code is running under</span><br><span class=\"line\">starlette         0.41.3      The little ASGI library that shines.</span><br><span class=\"line\">typing-extensions 4.12.2      Backported and Experimental Type Hints <span class=\"keyword\">for</span> Python 3.8+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只查看顶级依赖，即只查看在 pyproject.toml 中声明的依赖</span></span><br><span class=\"line\">$ poetry show --top-level</span><br><span class=\"line\">fastapi           0.115.5     FastAPI framework, high performance, easy to learn, fast ...</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>remove : 删除依赖包</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除依赖，此时会将当前包及其所有依赖一块删除</span></span><br><span class=\"line\">$ poetry remove fastapi</span><br><span class=\"line\">Updating dependencies</span><br><span class=\"line\">Resolving dependencies... (0.1s)</span><br><span class=\"line\"></span><br><span class=\"line\">Package operations: 0 installs, 0 updates, 9 removals</span><br><span class=\"line\"></span><br><span class=\"line\">  - Removing annotated-types (0.7.0)</span><br><span class=\"line\">  - Removing anyio (4.6.2.post1)</span><br><span class=\"line\">  - Removing fastapi (0.115.5)</span><br><span class=\"line\">  - Removing idna (3.10)</span><br><span class=\"line\">  - Removing pydantic (2.9.2)</span><br><span class=\"line\">  - Removing pydantic-core (2.23.4)</span><br><span class=\"line\">  - Removing sniffio (1.3.1)</span><br><span class=\"line\">  - Removing starlette (0.41.3)</span><br><span class=\"line\">  - Removing typing-extensions (4.12.2)</span><br><span class=\"line\"></span><br><span class=\"line\">Writing lock file</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>search : 搜索远程仓库</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 搜索远程仓库</span></span><br><span class=\"line\">$ poetry search fastapi</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>install 和 update : 安装和更新依赖包<br>\n<em><strong>在 Poetry 中，install 和 update 是两个常用的命令，但它们的作用和使用场景不同</strong></em></p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-7\">\n<p><code>poetry install</code> 的作用是根据现有的 poetry.lock 文件来安装依赖，确保安装的依赖版本与锁文件中记录的版本完全一致。<br>\n核心特点：</p>\n<ul class=\"lvl-4\">\n<li class=\"lvl-10\">安装锁定的版本：它只会安装 poetry.lock 文件中指定的版本，即使 pyproject.toml 文件中定义的版本范围已经有更新版本。</li>\n<li class=\"lvl-10\">重现依赖环境：适用于团队协作或部署环境，确保所有人或机器安装的依赖版本完全相同。</li>\n<li class=\"lvl-10\">锁文件存在时更高效：如果 poetry.lock 文件存在，poetry install 不会重新解析依赖树。</li>\n<li class=\"lvl-10\">首次运行时生成锁文件：如果没有 poetry.lock 文件，poetry install 会解析依赖并生成锁文件。<br>\n使用场景：</li>\n<li class=\"lvl-10\">新克隆的项目，需要安装依赖环境。</li>\n<li class=\"lvl-10\">部署生产环境，确保依赖版本的稳定性。</li>\n<li class=\"lvl-10\">重新安装之前已定义的依赖（例如清空了虚拟环境）。</li>\n</ul>\n</li>\n<li class=\"lvl-6\">\n<p><code>poetry update</code> 的作用是根据 pyproject.toml 文件中定义的依赖范围重新解析依赖树，并更新 poetry.lock 文件为最新的版本。<br>\n核心特点：</p>\n<ul class=\"lvl-4\">\n<li class=\"lvl-10\">更新到最新版本：它会尝试安装依赖范围内的最新版本，并更新 poetry.lock 文件。</li>\n<li class=\"lvl-10\">解析新的依赖树：即使 poetry.lock 文件存在，poetry update 也会忽略它并重新解析依赖。</li>\n<li class=\"lvl-10\">更改锁文件：它会覆盖现有的 poetry.lock 文件，因此团队其他成员需要重新运行 poetry install 以同步。<br>\n使用场景：</li>\n<li class=\"lvl-10\">更新依赖到最新版本（在依赖范围内）。</li>\n<li class=\"lvl-10\">当添加新依赖后，想要安装并更新锁文件。</li>\n<li class=\"lvl-10\">修复可能的版本冲突或不兼容问题。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"lock-锁定依赖包\">lock : 锁定依赖包</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>poetry lock</code> 是 Poetry（一个 Python 包管理工具）中的一个命令，用于锁定项目的依赖关系。使用这个命令可以创建或更新 <code>poetry.lock</code> 文件，确保你的项目中所使用的每个包的版本都被明确记录下来。这样做对于项目的可复现性和稳定性至关重要。</p>\n</li>\n<li class=\"lvl-2\">\n<p>实际上，当运行 <code>poetry install</code> 、 <code>poetry update</code> 或者 <code>poetry add</code> 等命令时， poetry 都会根据<br>\n<code>pyproject.toml</code> 文件中的依赖范围，解析依赖树，并在项目目录下创建或更新 <code>poetry.lock</code> 文件。</p>\n</li>\n<li class=\"lvl-2\">\n<p>当我们手工修改了 <code>pyproject.toml</code> 文件中的依赖范围，此时又不想立刻更新依赖，而是希望在某个时机再更新，此时就可以使用 <code>poetry lock</code> 命令，先锁定这些依赖，之后再通过 <code>poetry install</code> 命令安装。</p>\n</li>\n<li class=\"lvl-2\">\n<p>可以使用 <code>poetry check</code> 命令检查 <code>pyproject.toml</code> 文件 与 <code>poetry.lock</code> 文件的一致性。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 比如我手工删除了 `pyproject.toml` 文件中的某个依赖</span></span><br><span class=\"line\"><span class=\"comment\"># 此时运行 check 检查一致性会报错</span></span><br><span class=\"line\">$ poetry check</span><br><span class=\"line\">Error: pyproject.toml changed significantly since poetry.lock was last generated. Run `poetry lock [--no-update]` to fix the lock file.</span><br><span class=\"line\"><span class=\"comment\"># 锁定依赖</span></span><br><span class=\"line\">$ poetry lock</span><br><span class=\"line\">Updating dependencies</span><br><span class=\"line\">Resolving dependencies... (0.1s)</span><br><span class=\"line\"></span><br><span class=\"line\">Writing lock file</span><br><span class=\"line\"><span class=\"comment\"># 检查一致性通过</span></span><br><span class=\"line\">$ poetry check</span><br><span class=\"line\">All <span class=\"built_in\">set</span>!</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">注意，此时通过 <code>poetry show</code> 查看不到那个手工删除的依赖包，但实际上依赖依旧在于虚拟环境中</li>\n<li class=\"lvl-2\">所以尽量避免手工删除依赖，而是通过 <code>poetry remove</code> 命令来删除依赖</li>\n</ul>\n</div>\n<h3 id=\"source-镜像源管理\">source : 镜像源管理</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>默认情况下都是从Pypi的官方仓库下载，国内一般需要指定镜像源来加速下载</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加镜像源，默认就是主要源，注意该方式只对当前项目有效</span></span><br><span class=\"line\"><span class=\"comment\"># 命令格式：poetry source add [选项] [--] &lt;name&gt; [&lt;url&gt;]，name：源仓库的名称，url：源仓库的 URL</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">source</span> add tsinghua https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">Adding <span class=\"built_in\">source</span> with name tsinghua.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --priority=PRIORITY设置此源的优先级。可以是以下值之一：default（默认）、primary（主要）、supplemental（备用）、explicit（显式源，只有当包明确声明使用该源时才会被使用）。默认为 primary。</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">source</span> add  --priority=supplemental aliyun http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看镜像源信息</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">source</span> show</span><br><span class=\"line\"> name      : tsinghua</span><br><span class=\"line\"> url       : https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\"> priority  : primary</span><br><span class=\"line\"></span><br><span class=\"line\"> name      : aliyun</span><br><span class=\"line\"> url       : http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\"> priority  : supplemental</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此时查看 pyproject.toml 文件可以看到镜像源信息</span></span><br><span class=\"line\">[[tool.poetry.source]]</span><br><span class=\"line\">name = <span class=\"string\">&quot;tsinghua&quot;</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;</span></span><br><span class=\"line\">priority = <span class=\"string\">&quot;primary&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[tool.poetry.source]]</span><br><span class=\"line\">name = <span class=\"string\">&quot;aliyun&quot;</span></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://mirrors.aliyun.com/pypi/simple/&quot;</span></span><br><span class=\"line\">priority = <span class=\"string\">&quot;supplemental&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除镜像源</span></span><br><span class=\"line\">$ poetry <span class=\"built_in\">source</span> remove aliyun <span class=\"comment\"># 指定镜像源名称</span></span><br><span class=\"line\">Removing <span class=\"built_in\">source</span> with name aliyun.</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行\">运行</h3>\n<p>这里以一个小示例来说明这个功能</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>创建一个新的项目</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ poetry new poetryDemo</span><br><span class=\"line\">Created package poetrydemo <span class=\"keyword\">in</span> poetryDemo</span><br><span class=\"line\"><span class=\"comment\"># 进入项目目录</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> poetryDemo</span><br><span class=\"line\"><span class=\"comment\"># 查看生成的文件</span></span><br><span class=\"line\">$ ll</span><br><span class=\"line\">total 8</span><br><span class=\"line\">drwxr-xr-x  6 hanqf  staff  192 11 21 17:32 .</span><br><span class=\"line\">drwxr-xr-x  4 hanqf  staff  128 11 21 17:32 ..</span><br><span class=\"line\">-rw-r--r--  1 hanqf  staff    0 11 21 17:32 README.md</span><br><span class=\"line\">drwxr-xr-x  3 hanqf  staff   96 11 21 17:32 poetrydemo</span><br><span class=\"line\">-rw-r--r--  1 hanqf  staff  266 11 21 17:32 pyproject.toml</span><br><span class=\"line\">drwxr-xr-x  3 hanqf  staff   96 11 21 17:32 tests</span><br><span class=\"line\"><span class=\"comment\"># 进入包目录</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> poetrydemo</span><br><span class=\"line\"><span class=\"comment\"># 查看包目录下的文件</span></span><br><span class=\"line\">$ ll</span><br><span class=\"line\">total 0</span><br><span class=\"line\">drwxr-xr-x  3 hanqf  staff   96 11 21 17:32 .</span><br><span class=\"line\">drwxr-xr-x  6 hanqf  staff  192 11 21 17:32 ..</span><br><span class=\"line\">-rw-r--r--  1 hanqf  staff    0 11 21 17:32 __init__.py</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在包目录下创建 array_util.py，内容如下</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">def generate_random_array(shape, distribution=<span class=\"string\">&quot;uniform&quot;</span>, params=None, seed=None):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;</span><span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">    生成随机数组的工具方法。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param shape: tuple，指定数组的形状，例如 (3, 4) 表示 3 行 4 列。</span></span><br><span class=\"line\"><span class=\"string\">    :param distribution: str，指定随机数分布类型，可选值：</span></span><br><span class=\"line\"><span class=\"string\">        - &quot;</span>uniform<span class=\"string\">&quot;：均匀分布（默认）。</span></span><br><span class=\"line\"><span class=\"string\">        - &quot;</span>normal<span class=\"string\">&quot;：正态分布。</span></span><br><span class=\"line\"><span class=\"string\">        - &quot;</span><span class=\"built_in\">integer</span><span class=\"string\">&quot;：随机整数。</span></span><br><span class=\"line\"><span class=\"string\">    :param params: dict，分布的参数配置：</span></span><br><span class=\"line\"><span class=\"string\">        - 均匀分布：&#123;&quot;</span>low<span class=\"string\">&quot;: 最小值, &quot;</span>high<span class=\"string\">&quot;: 最大值&#125;，默认 low=0, high=1。</span></span><br><span class=\"line\"><span class=\"string\">        - 正态分布：&#123;&quot;</span>mean<span class=\"string\">&quot;: 均值, &quot;</span>std<span class=\"string\">&quot;: 标准差&#125;，默认 mean=0, std=1。</span></span><br><span class=\"line\"><span class=\"string\">        - 随机整数：&#123;&quot;</span>low<span class=\"string\">&quot;: 最小值, &quot;</span>high<span class=\"string\">&quot;: 最大值, &quot;</span>dtype<span class=\"string\">&quot;: 类型&#125;，默认 low=0, high=10。</span></span><br><span class=\"line\"><span class=\"string\">    :param seed: int，随机数种子（可选），用于结果可复现。</span></span><br><span class=\"line\"><span class=\"string\">    :return: np.ndarray，生成的随机数组。</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span><span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> seed is not None:</span><br><span class=\"line\">        np.random.seed(seed)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> params is None:</span><br><span class=\"line\">        params = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> distribution == <span class=\"string\">&quot;uniform&quot;</span>:</span><br><span class=\"line\">        low = params.get(<span class=\"string\">&quot;low&quot;</span>, 0)</span><br><span class=\"line\">        high = params.get(<span class=\"string\">&quot;high&quot;</span>, 1)</span><br><span class=\"line\">        <span class=\"built_in\">return</span> np.random.uniform(low, high, size=shape)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> distribution == <span class=\"string\">&quot;normal&quot;</span>:</span><br><span class=\"line\">        mean = params.get(<span class=\"string\">&quot;mean&quot;</span>, 0)</span><br><span class=\"line\">        std = params.get(<span class=\"string\">&quot;std&quot;</span>, 1)</span><br><span class=\"line\">        <span class=\"built_in\">return</span> np.random.normal(mean, std, size=shape)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> distribution == <span class=\"string\">&quot;integer&quot;</span>:</span><br><span class=\"line\">        low = params.get(<span class=\"string\">&quot;low&quot;</span>, 0)</span><br><span class=\"line\">        high = params.get(<span class=\"string\">&quot;high&quot;</span>, 10)</span><br><span class=\"line\">        dtype = params.get(<span class=\"string\">&quot;dtype&quot;</span>, int)</span><br><span class=\"line\">        <span class=\"built_in\">return</span> np.random.randint(low, high, size=shape, dtype=dtype)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        raise ValueError(<span class=\"string\">&quot;不支持的分布类型！可选值为 &#x27;uniform&#x27;, &#x27;normal&#x27;, &#x27;integer&#x27;。&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例用法</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    array_uniform = generate_random_array((<span class=\"number\">3</span>, <span class=\"number\">4</span>), distribution=&quot;uniform&quot;, params=&#123;&quot;low&quot;: <span class=\"number\">1</span>, &quot;high&quot;: <span class=\"number\">10</span>&#125;)</span><br><span class=\"line\">    array_normal = generate_random_array((<span class=\"number\">2</span>, <span class=\"number\">3</span>), distribution=&quot;normal&quot;, params=&#123;&quot;mean&quot;: <span class=\"number\">0</span>, &quot;std&quot;: <span class=\"number\">1</span>&#125;, seed=<span class=\"number\">42</span>)</span><br><span class=\"line\">    array_integer = generate_random_array((<span class=\"number\">4</span>, <span class=\"number\">5</span>), distribution=&quot;integer&quot;, params=&#123;&quot;low&quot;: <span class=\"number\">0</span>, &quot;high&quot;: <span class=\"number\">20</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(&quot;均匀分布随机数组：\\n&quot;, array_uniform)</span><br><span class=\"line\">    print(&quot;正态分布随机数组：\\n&quot;, array_normal)</span><br><span class=\"line\">    print(&quot;随机整数数组：\\n&quot;, array_integer)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装依赖</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ poetry add numpy</span><br><span class=\"line\">Using version ^2.1.3 <span class=\"keyword\">for</span> numpy</span><br><span class=\"line\"></span><br><span class=\"line\">Updating dependencies</span><br><span class=\"line\">Resolving dependencies... (1.1s)</span><br><span class=\"line\"></span><br><span class=\"line\">Package operations: 1 install, 0 updates, 0 removals</span><br><span class=\"line\"></span><br><span class=\"line\">  - Installing numpy (2.1.3)</span><br><span class=\"line\"></span><br><span class=\"line\">Writing lock file</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>运行，两种方法</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>poetry run</code></li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ poetry run python array_util.py</span><br><span class=\"line\">均匀分布随机数组：</span><br><span class=\"line\">[[7.44623063 1.89415788 4.81008329 4.25556572]</span><br><span class=\"line\">[3.31925154 6.44037063 5.3216543  7.54950573]</span><br><span class=\"line\">[3.97160747 5.04800698 3.28299934 3.42841887]]</span><br><span class=\"line\">正态分布随机数组：</span><br><span class=\"line\">[[ 0.49671415 -0.1382643   0.64768854]</span><br><span class=\"line\">[ 1.52302986 -0.23415337 -0.23413696]]</span><br><span class=\"line\">随机整数数组：</span><br><span class=\"line\">[[10 10  3  7  2]</span><br><span class=\"line\">[ 1 11  5  1  0]</span><br><span class=\"line\">[11 11 16  9 15]</span><br><span class=\"line\">[14 14 18 11 19]]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>poetry shell</code> : 此时会开启一个新的shell，并开启虚拟环境</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 开启虚拟环境</span></span><br><span class=\"line\">$ poetry shell</span><br><span class=\"line\">Spawning shell within /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11</span><br><span class=\"line\">Restored session: 2024年11月21日 星期四 15时31分52秒 CST</span><br><span class=\"line\">➜  poetrydemo <span class=\"built_in\">emulate</span> bash -c <span class=\"string\">&#x27;. /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11/bin/activate&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 在虚拟环境下运行</span></span><br><span class=\"line\">$ python array_util.py</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"打包和发布\">打包和发布</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>接着上面的项目</p>\n</li>\n<li class=\"lvl-2\">\n<p>打包</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 会在项目目录下创建 dist 目录，并将打好的包存放于此</span></span><br><span class=\"line\">$ poetry build</span><br><span class=\"line\">Building poetrydemo (0.1.0)</span><br><span class=\"line\">  - Building sdist</span><br><span class=\"line\">  - Built poetrydemo-0.1.0.tar.gz</span><br><span class=\"line\">  - Building wheel</span><br><span class=\"line\">  - Built poetrydemo-0.1.0-py3-none-any.whl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看生成的打包文件</span></span><br><span class=\"line\">$ exa -1 dist</span><br><span class=\"line\">hqf_poetrydemo-0.1.0-py3-none-any.whl</span><br><span class=\"line\">hqf_poetrydemo-0.1.0.tar.gz</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>发布</p>\n</li>\n<li class=\"lvl-2\">\n<p>首先要先在<a href=\"https://pypi.org/\">PyPI</a>上注册个帐号，需要开启“双要素身份验证 （2FA）”，否则不能获取发布时的API令牌。</p>\n</li>\n<li class=\"lvl-2\">\n<p>获取API令牌<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/iShot_2024-11-21_18.00.50.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>发布，不过这次发布提示包名已经存在了</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 发布时提示包名已经存在了</span></span><br><span class=\"line\">$ poetry publish -u __token__  -p pypi-AgEIcHlwaS5vcmcCJDU0Y2Q5NjhkLWYyYTEtN</span><br><span class=\"line\">Publishing poetrydemo (0.1.0) to PyPI</span><br><span class=\"line\"> - Uploading poetrydemo-0.1.0-py3-none-any.whl FAILED</span><br><span class=\"line\"></span><br><span class=\"line\">HTTP Error 400: The name <span class=\"string\">&#x27;poetrydemo&#x27;</span> is too similar to an existing project. See https://pypi.org/help/#project-name <span class=\"keyword\">for</span> more information. | b<span class=\"string\">&quot;&lt;html&gt;\\n &lt;head&gt;\\n  &lt;title&gt;400 The name &#x27;poetrydemo&#x27; is too similar to an existing project. See https://pypi.org/help/#project-name for more information.\\n \\n &lt;body&gt;\\n  &lt;h1&gt;400 The name &#x27;poetrydemo&#x27; is too similar to an existing project. See https://pypi.org/help/#project-name for more information.\\n  The server could not comply with the request since it is either malformed or otherwise incorrect.&lt;br/&gt;&lt;br/&gt;\\nThe name &amp;#x27;poetrydemo&amp;#x27; is too similar to an existing project. See https://pypi.org/help/#project-name for more information.\\n\\n\\n \\n&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>先修改包名，直接编辑 pyproject.toml 即可，将name属性修改为“hqf_poetrydemo”，然后将包目录的名称也修改为这个<code>mv poetrydemo hqf_poetrydemo</code>，并删除dist目录，之后重新打包<code>poetry build</code>，再次发布</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim pyproject.toml <span class=\"comment\"># 将name属性修改为“hqf_poetrydemo”</span></span><br><span class=\"line\">$ <span class=\"built_in\">mv</span> poetrydemo hqf_poetrydemo <span class=\"comment\"># 将包目录的名称也修改为这个</span></span><br><span class=\"line\">$ <span class=\"built_in\">rm</span> -rf dist <span class=\"comment\"># 删除dist目录</span></span><br><span class=\"line\">$ poetry build    <span class=\"comment\"># 重新打包</span></span><br><span class=\"line\">Creating virtualenv hqf-poetrydemo-fyqYbfje-py3.11 <span class=\"keyword\">in</span> /Users/hanqf/Library/Caches/pypoetry/virtualenvs</span><br><span class=\"line\">Building hqf_poetrydemo (0.1.0)</span><br><span class=\"line\">  - Building sdist</span><br><span class=\"line\">  - Built hqf_poetrydemo-0.1.0.tar.gz</span><br><span class=\"line\">  - Building wheel</span><br><span class=\"line\">  - Built hqf_poetrydemo-0.1.0-py3-none-any.whl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 再次发布</span></span><br><span class=\"line\">$ poetry publish -u __token__  -p pypi-AgEIcHlwaS5vcmcCJDU0Y2Q5NjhkLWYyYTEtN</span><br><span class=\"line\"></span><br><span class=\"line\">Publishing hqf_poetrydemo (0.1.0) to PyPI</span><br><span class=\"line\"> - Uploading hqf_poetrydemo-0.1.0-py3-none-any.whl 100%</span><br><span class=\"line\"> - Uploading hqf_poetrydemo-0.1.0.tar.gz 100%</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/iShot_2024-11-21_18.13.21.png\" alt=\"\"></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>之后就可以在其它项目中安装这个包了</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># pip install</span></span><br><span class=\"line\">$ pip install hqf_poetrydemo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># poetry add</span></span><br><span class=\"line\">$ poetry add hqf_poetrydemo</span><br><span class=\"line\">Using version ^0.1.0 <span class=\"keyword\">for</span> hqf-poetrydemo</span><br><span class=\"line\"></span><br><span class=\"line\">Updating dependencies</span><br><span class=\"line\">Resolving dependencies... (0.5s)</span><br><span class=\"line\"></span><br><span class=\"line\">Package operations: 2 installs, 0 updates, 0 removals</span><br><span class=\"line\"></span><br><span class=\"line\">  - Installing numpy (2.1.3)</span><br><span class=\"line\">  - Installing hqf-poetrydemo (0.1.0)</span><br><span class=\"line\"></span><br><span class=\"line\">Writing lock file</span><br></pre></td></tr></table></figure>\n<h3 id=\"self-update-升级-poetry-版本\"><code>self update</code> : 升级 poetry 版本</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>self 相关命令主要用于 poetry 自身安装插件使用</p>\n</li>\n<li class=\"lvl-2\">\n<p>估计插件功能目前还不成熟，官网也没有进行详细的说明，并且 windows 下无法使用，所以这里不讨论。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>self</code>命令下目前只需要记住一个命令： <code>self update</code> : 升级 poetry 版本</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ poetry self update</span><br></pre></td></tr></table></figure>\n<h3 id=\"debug-resolve-查看包的依赖关系\"><code>debug resolve</code> : 查看包的依赖关系</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 只查看，不安装</span></span><br><span class=\"line\">$ poetry debug resolve requests</span><br><span class=\"line\">Resolving dependencies... (0.4s)</span><br><span class=\"line\"></span><br><span class=\"line\">Resolution results:</span><br><span class=\"line\"></span><br><span class=\"line\">certifi            2024.8.30</span><br><span class=\"line\">charset-normalizer 3.4.0</span><br><span class=\"line\">idna               3.10</span><br><span class=\"line\">urllib3            2.2.3</span><br><span class=\"line\">requests           2.32.3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看指定版本的依赖关系</span></span><br><span class=\"line\">$ poetry debug resolve requests@2.32.3</span><br></pre></td></tr></table></figure>\n<h3 id=\"cache-缓存管理\">cache : 缓存管理</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>poetry一个很重要的功能就是缓存安装包，可以 <code>减少</code> 相同的安装包被重复下载。为什么是减少而不是避免呢？因为不同的镜像源的包是分别缓存的。</p>\n</li>\n<li class=\"lvl-2\">\n<p>通过 <code>poetry config --list </code> 可以看到 <code>cache-dir</code> 的地址，这里就是缓存下载包的目录。</p>\n</li>\n<li class=\"lvl-2\">\n<p>以下是一些常见的使用场景</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">解决依赖安装问题：<br>\n如果你在安装或更新依赖时遇到问题（例如，某个包无法正确安装或版本不对），清空缓存可以帮助你确保 Poetry 重新下载所有必要的文件，从而解决问题。</li>\n<li class=\"lvl-6\">清理磁盘空间：<br>\n如果你的项目很多或者经常修改依赖项，缓存可能会变得非常大。使用 poetry cache clear 可以帮助释放磁盘空间，特别是当你不经常使用某些包时。</li>\n<li class=\"lvl-6\">测试最新版本的依赖：<br>\n如果你想测试某个包的新版本是否解决了某个问题，或者想确保你使用的确实是最新的版本，清除缓存可以强制 Poetry 从远程仓库重新下载最新的包。</li>\n<li class=\"lvl-6\">环境变化：<br>\n如果你的开发或生产环境发生了变化（例如，切换了操作系统、更新了 Python 版本等），清除缓存可以帮助你确保依赖项在新环境中正确安装。</li>\n<li class=\"lvl-6\">调试依赖问题：<br>\n在调试依赖项问题时，有时候清除缓存可以帮助你确定问题是否与缓存中的旧版本有关。</li>\n<li class=\"lvl-6\">CI/CD 环境的一致性：<br>\n在持续集成或持续部署 (CI/CD) 环境中，为了确保每次构建都基于最新的依赖，有时会在构建脚本中包含清除缓存的步骤。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看缓存列表，这里会按镜像源进行分组</span></span><br><span class=\"line\">$ poetry cache list</span><br><span class=\"line\">PyPI</span><br><span class=\"line\">_default_cache</span><br><span class=\"line\">tsinghua</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清除指定源的全部缓存</span></span><br><span class=\"line\">$ poetry cache clear pypi --all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清除指定源下某个包的缓存</span></span><br><span class=\"line\">$ poetry cache clear pypi:requests:2.24.0</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 Poetry是一个轻量级的python包管理器，其目标是帮助开发者快速、轻松地构建、发布和分享python包。说它轻量，是与 conda 相比 poetry 更轻量，同时与 venv + pip Python--virtualenv 的方式相比具有如下优点： 使用缓存机制，避免重复下载依赖包 包管理上更加精确，删除不需要的包时会同时删除与其关联的且没有被使用的那些依赖包，避免无用的依赖包造成打包体积过大 打包和发布更加简单，只需要一个命令就可以打包和发布 安装 参考官方文档Installation 1234567891011121314# 官方推荐使用pipx安装，当然也可以使用 pip$ pipx install poetry# 查看是否安装成功$ poetry --versionPoetry (version 1.8.4)# 添加命令自动补全$ mkdir ~/.zfunc$ poetry completions zsh &gt; ~/.zfunc/_poetry# 在 ~/.zshrc 中添加以下配置（我是用的是zsh，其他shell可以参考官方文档）fpath+=~/.zfuncautoload -Uz compinit &amp;&amp; compinit pipx简介 pipx 是一个 Python 包管理工具，使用pipx安装工具包时，每个工具都会被安装在一个独立的虚拟环境中，避免不同工具之间的依赖冲突。 场景：两个工具依赖不同版本的同一个库 假设我们有两个命令行工具： 工具A 依赖于 requests 库的版本 2.27.1。 工具B 依赖于 requests 库的版本 2.31.0。 如果使用 pip 安装 工具会被安装到全局环境，共享相同的依赖版本： 12pip install toolA # 安装时会安装 requests 2.27.1pip install toolB # 安装时会将 requests 升级到 2.31.0 结果： 当你运行工具A时，它可能会报错，因为它依赖的 requests 2.27.1 已被 requests 2.31.0 替换。 全局环境中的所有工具都共享一个 requests，版本冲突不可避免。 如果使用 pipx 安装 每个工具会被安装到独立的虚拟环境中，各自的依赖互不影响： 12pipx install toolA # 在虚拟环境A中安装 toolA 和 requests 2.27.1pipx install toolB # 在虚拟环境B中安装 toolB 和 requests 2.31.0 结果： 虚拟环境A 只包含 toolA 和它的依赖 requests 2.27.1。 虚拟环境B 只包含 toolB 和它的依赖 requests 2.31.0。 工具之间完全隔离，不会因为依赖版本冲突而导致问题。 所以，当需要安装全局命令行工具时，使用pipx是个很好的选择 pipx 的安装 123456789101112131415# 安装pipxpip install pipx# 配置环境变量，运行该命令会将pipx ensurepath# 运行上面的命令会将如下内容加入你的shell配置文件中，我的是 .zshrc 文件，实际上你也可以手工添加该配置，将$HOME/.local/bin放到前面更好一些。export PATH=&quot;$PATH:$HOME/.local/bin&quot;# 注意添加完成后要重启shell# 添加pipx自动代码补全# 运行如下命令，并根据提示完成pipx completions# 我的是zsh，所以在 .zshrc中添加如下内容autoload -Uz compinit &amp;&amp; compinit # 如果没有添加过就需要先添加这个eval &quot;$(register-python-argcomplete pipx)&quot; # 添加自动代码补全# 注意添加完成后要重启shell 查看所有命令 我已经将其翻译为中文 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667$ poetry listPoetry (版本 1.8.4)用法： command [选项] [参数]选项： -h, --help 显示给定命令的帮助。如果没有指定命令，则显示列表命令的帮助。 -q, --quiet 不输出任何消息。 -V, --version 显示此应用程序版本。 --ansi 强制输出ANSI格式。 --no-ansi 禁用ANSI输出。 -n, --no-interaction 不要提问任何交互性问题。 --no-plugins 禁用插件。 --no-cache 禁用源缓存。 -C, --directory=目录 Poetry命令的工作目录（默认为当前工作目录）。 -v|vv|vvv, --verbose 增加消息的冗长度：1 表示正常输出，2 表示更详细的输出，3 表示调试。可用命令： about 显示关于Poetry的信息。 add 将新依赖项添加到pyproject.toml并安装它。 build 默认构建一个包，分别是tarball和wheel。 check 验证pyproject.toml文件的内容及其与poetry.lock文件的一致性。 config 管理配置设置。 export 将锁文件导出到其他格式。 help 显示特定命令的帮助。 init 在当前目录创建一个基础的pyproject.toml文件。 install 安装项目依赖项。 list 列出命令。 lock 锁定项目依赖项。 new 在&lt;path&gt;处创建一个新的Python项目。 publish 将包发布到远程仓库。 remove 从项目依赖项中移除包。 run 在适当的环境中运行命令。 search 在远程仓库中搜索包。 shell 在虚拟环境中启动shell。 show 显示有关包的信息。 update 根据pyproject.toml文件更新依赖项。 version 显示项目的版本或在提供有效版本规则时更新它。缓存 cache clear 按名称清除Poetry缓存。 cache list 列出Poetry的缓存列表。调试 debug info 显示调试信息。 debug resolve 调试依赖项解析。环境 env info 显示当前环境的信息。 env list 列出与当前项目关联的所有虚拟环境。 env remove 移除与项目关联的虚拟环境。 env use 激活或创建当前项目的新的虚拟环境。自身 self add 向Poetry的运行时环境添加其他包。 self install 安装此Poetry安装所需的锁定包（包括插件）。 self lock 锁定Poetry安装的系统要求。 self remove 从Poetry的运行时环境中移除其他包。 self show 显示Poetry运行时环境中的包。 self show plugins 显示当前已安装插件的信息。 self update 更新Poetry到最新版本。源 source add 为项目添加源配置。 source remove 移除为项目配置的源。 source show 显示为项目配置的源信息。 常用命令 这里只对日常开发中比较常用的命令进行简要说明，详细介绍可以参考官方文档 new : 创建项目 12345678910111213141516171819202122232425262728293031# 按照默认规则创建一个基于 poetry 的项目$ poetry new my-projectCreated package my_project in my-project$ cd my-project# 查看生成的目录结构$ exa -T.├── my_project│ └── __init__.py├── pyproject.toml├── README.md└── tests └── __init__.py# 查看 pyproject.toml 内容，该文件为项目的配置的配置文件$ more pyproject.toml[tool.poetry]name = &quot;my-project&quot;version = &quot;0.1.0&quot;description = &quot;&quot;authors = [&quot;hanqunfeng &lt;hanqf2008@163.com&gt;&quot;]readme = &quot;README.md&quot;[tool.poetry.dependencies]python = &quot;^3.11&quot;[build-system]requires = [&quot;poetry-core&quot;]build-backend = &quot;poetry.core.masonry.api&quot; init : 初始化一个已有的项目目录 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647# 假设我们已经有个项目目录，目录名称为 poetryDemo$ cd poetryDemo# 初始化 poetryDemo ，在当前目录下创建 pyproject.toml 文件，注意该操作只会创建该文件，包目录以及readme文件都没有，需要手工创建$ poetry initThis command will guide you through creating your pyproject.toml config.Package name [poetrydemo]: # 包名称Version [0.1.0]: # 版本号Description []: # 描述信息Author [hanqunfeng &lt;hanqf2008@163.com&gt;, n to skip]: # 作者License []: # LicenseCompatible Python versions [^3.11]: # python 版本Would you like to define your main dependencies interactively? (yes/no) [yes] # 您想以交互方式定义您的主环境依赖关系吗？默认yesYou can specify a package in the following forms: # 您可以按以下形式指定包： - A single name (requests): this will search for matches on PyPI # 单个名称（requests）：这将在官方仓库PyPI上搜索匹配项，如果指定了其它镜像源就会从指定的源下载 - A name and a constraint (requests@^2.23.0) # 名称和版本约束 - A git url (git+https://github.com/python-poetry/poetry.git) # git地址 - A git url with a revision (git+https://github.com/python-poetry/poetry.git#develop) # git地址，指定某个分支 - A file path (../my-package/my-package.whl) # 文件路径 - A directory (../my-package/) # 目录路径 - A url (https://example.com/packages/my-package-0.1.0.tar.gz) # 一个安装包的地址Package to add or search for (leave blank to skip): # 添加主环境依赖，按上面的格式要求填写Would you like to define your development dependencies interactively? (yes/no) [yes] # 您想以交互方式定义您的开发依赖关系吗？默认yesPackage to add or search for (leave blank to skip): # 添加开发环境依赖，按上面的格式要求填写Generated file# 要生成的 pyproject.toml 内容[tool.poetry]name = &quot;poetrydemo&quot; # 包名称version = &quot;0.1.0&quot; # 版本description = &quot;&quot; # 描述信息authors = [&quot;hanqunfeng &lt;hanqf2008@163.com&gt;&quot;] # 作者信息readme = &quot;README.md&quot; # 说明文件[tool.poetry.dependencies] # 主环境依赖python = &quot;^3.11&quot;[build-system]requires = [&quot;poetry-core&quot;]build-backend = &quot;poetry.core.masonry.api&quot;Do you confirm generation? (yes/no) [yes] # 确认是否按照上面的内容创建 pyproject.toml 文件，默认yes 上面的方式在初始化时会询问你相关的信息，如果你希望都用默认值的话，可以使用如下命令 1poetry init -n config : poetry的全局配置 查看全局配置 12345678910111213141516171819$ poetry config --listcache-dir = &quot;/Users/hanqf/Library/Caches/pypoetry&quot; # 缓存目录,用于存储项目依赖和虚拟环境等缓存信息。experimental.system-git-client = false # 是否使用系统自带的git客户端,false表示使用Poetry内置的git客户端installer.max-workers = null # 安装依赖时的最大线程数,null表示使用默认线程数，可以设置为cpu核数+4installer.modern-installation = true # 是否使用Poetry的现代安装方案,true表示使用installer.no-binary = null # 是否不使用预编译的二进制包,null表示不限制installer.parallel = true # 是否并行安装依赖,true表示并行安装keyring.enabled = true # 是否启用密钥环（keyring）以保存认证信息。true 表示启用。solver.lazy-wheel = true # 是否延迟解析 wheel 包。true 表示延迟解析。virtualenvs.create = true # 是否自动创建虚拟环境,true表示创建virtualenvs.in-project = null # 是否在项目内创建虚拟环境，null 表示使用默认值（通常为 false），即不在项目中创建。true表示在项目中创建virtualenvs.options.always-copy = false # 如果设置为 true，Poetry 会始终复制文件到虚拟环境中，而不是使用符号链接（symlinks）。这可以避免某些系统上的权限问题，但会增加虚拟环境的存储需求。virtualenvs.options.no-pip = false # 如果设置为 true，Poetry 在创建虚拟环境时不会安装 pip。如果你的项目不需要直接使用 pip，并且你希望通过 Poetry 管理所有的依赖项，可以将 no-pip 设置为 true，以减少虚拟环境中的不必要的依赖项。virtualenvs.options.no-setuptools = false # 如果设置为 true，Poetry 在创建虚拟环境时不会安装 setuptools。默认情况下，Poetry 会安装 pip 和 setuptools，以便你可以使用这些工具来管理依赖项。virtualenvs.options.system-site-packages = false # 默认值false，此时 Poetry 创建的虚拟环境将不会包含全局 Python 安装的 site-packages 目录中的包。这有助于确保项目依赖项的隔离性，避免与系统中的其他包发生冲突。virtualenvs.path = &quot;&#123;cache-dir&#125;/virtualenvs&quot; # /Users/hanqf/Library/Caches/pypoetry/virtualenvs # 虚拟环境存放的路径，如果virtualenvs.in-project设置为true，就只会在项目中创建virtualenvs.prefer-active-python = false # 是否优先使用系统激活的Python解释器virtualenvs.prompt = &quot;&#123;project_name&#125;-py&#123;python_version&#125;&quot; # 虚拟环境的命令提示格式warnings.export = true # 是否在导出时显示警告信息。true 表示显示 修改全局配置 1234567891011121314151617# 修改全局配置，此后会在项目目录下创建 .venv 目录存放虚拟环境$ poetry config virtualenvs.in-project true# 进入虚拟环境，如果虚拟环境尚未创建会自动创建$ poetry shell# 退出虚拟环境$ exit# 只对当前项目有效，此时会在当前项目目录下创建 poetry.toml 来保存这些配置信息$ poetry config virtualenvs.in-project true --local$ poetry config virtualenvs.options.system-site-packages true --local$ more poetry.toml[virtualenvs]in-project = true[virtualenvs.options]system-site-packages = true# 这里要注意 virtualenvs 下的属性必须在创建虚拟环境前设置才会有效 env : 虚拟环境管理 Poetry 会在你第一次运行某些命令（如 poetry shell 或者 poetry add somepackage）时自动创建虚拟环境。 不过这种时候都是使用系统默认的python来创建虚拟环境，如果系统中安装了多个python，则可以通过如下方式设置虚拟环境要使用哪个python版本 创建/切换虚拟环境 123456789# 指定python的版本，这会从python的默认安装路径下查找对应的版本# 比如macOs会从该路径下查找：/Library/Frameworks/Python.framework/Versions$ poetry env use 3.11# 如果可以直接在命令行使用python命令,比如：python3.12 -V，则可以使用如下方式创建虚拟环境$ poetry env use python3.12# 如果python安装到了其它路径，可以指定python安装路径$ poetry env use /pythonDir/3.13/bin/python3 查看当前项目的虚拟环境信息 12345678910111213141516171819202122232425262728293031323334353637383940# 创建一个基于 python3.13 的虚拟环境$ poetry env use python3.13Creating virtualenv poetrydemo-fyqYbfje-py3.13 in /Users/hanqf/Library/Caches/pypoetry/virtualenvsUsing virtualenv: /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.13# 再创建一个基于 python3.11 的虚拟环境，最后被use的处于默认激活状态$ poetry env use python3.11Creating virtualenv poetrydemo-fyqYbfje-py3.11 in /Users/hanqf/Library/Caches/pypoetry/virtualenvsUsing virtualenv: /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11# 查看当前项目有多少个虚拟环境$ poetry env listpoetrydemo-fyqYbfje-py3.11 (Activated) # poetrydemo-fyqYbfje-py3.11 表示虚拟环境名称，Activated表示当前虚拟环境已经被激活poetrydemo-fyqYbfje-py3.13# 查看虚拟化环境路径$ poetry env list --full-path/Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11 (Activated)# 查看当前激活的虚拟环境信息$ poetry env infoVirtualenvPython: 3.11.3Implementation: CPythonPath: /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11Executable: /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11/bin/pythonValid: TrueBasePlatform: darwinOS: posixPython: 3.11.3Path: /Library/Frameworks/Python.framework/Versions/3.11Executable: /Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11# 删除虚拟环境$ poetry env remove python3.13Deleted virtualenv: /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.13# 删除全部虚拟环境$ poetry env remove --all 注意，当virtualenvs.in-project被设置为true时，即只在项目目录下创建虚拟环境时，只会保留一个环境，即.venv 切换到新的虚拟环境时会全新创建一个新的环境，原先的环境会被删除，所以要使用poetry install命令重新安装依赖 123456789101112131415161718192021222324$ poetry env use python3.11Recreating virtualenv poetrydemo in /Users/hanqf/Desktop/pythonDir/poetryDir/poetryDemo/.venvUsing virtualenv: /Users/hanqf/Desktop/pythonDir/poetryDir/poetryDemo/.venv$ poetry env list # 虽然可以通过 poetry env use 的方式来创建新的虚拟环境，但实际上只会有一个环境被保留，所以这里只会显示一个.venv (Activated) # .venv 表示虚拟环境名称，Activated表示当前虚拟环境已经被激活# 查看虚拟环境信息$ poetry env infoVirtualenvPython: 3.11.3Implementation: CPythonPath: /Users/hanqf/Desktop/pythonDir/poetryDir/poetryDemo/.venvExecutable: /Users/hanqf/Desktop/pythonDir/poetryDir/poetryDemo/.venv/bin/pythonValid: TrueBasePlatform: darwinOS: posixPython: 3.11.3Path: /Library/Frameworks/Python.framework/Versions/3.11Executable: /Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11 依赖包管理 add : 安装依赖包 这个命令会修改 pyproject.toml 文件，在 [tool.poetry.dependencies] 部分添加新的依赖项。还会自动更新 poetry.lock 文件，锁定依赖的确切版本。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556# 安装依赖，安装后会将依赖信息写入 pyproject.toml 中# 不指定版本则安装最新版$ poetry add fastapiUsing version ^0.115.5 for fastapiUpdating dependenciesResolving dependencies... (1.3s)Package operations: 9 installs, 0 updates, 0 removals - Installing idna (3.10) - Installing sniffio (1.3.1) - Installing typing-extensions (4.12.2) - Installing annotated-types (0.7.0) - Installing anyio (4.6.2.post1) - Installing pydantic-core (2.23.4) - Installing pydantic (2.9.2) - Installing starlette (0.41.3) - Installing fastapi (0.115.5)Writing lock file# 指定版本号安装依赖poetry add package_name@^1.2.3 # 规则说明 ^1.2.3 表示兼容 1.2.3 及更高的小版本，但不包括 2.0.0。 如：poetry add requests@^2.28.0 ~1.2.3：允许升级到 1.2.x，但不包括 1.3.0。 如：poetry add requests@~2.28.0 1.2.3：固定为 1.2.3。 如：poetry add requests@2.28.0 &gt;=1.2.3：允许使用 1.2.3 及以上版本。注意zsh下要加上双引号，如：poetry add &quot;requests@&gt;=2.28.0&quot; &lt;2.0.0：允许使用小于 2.0.0 的版本。 注意zsh下要加上双引号，如：poetry add &quot;requests@&lt;3.0.0&quot;# 安装到指定的分组，默认都是安装到主环境中的，poetry build默认只会打包主环境的依赖poetry add flask # 安装到主环境中poetry add flask --group=test #添加分组名 testpoetry add flask --dev #相当于--group=dev# 分别执行上面3个安装命令后，输出 pyproject.toml 的内容如下[tool.poetry]name = &quot;poetrydemo&quot;version = &quot;0.1.0&quot;description = &quot;&quot;authors = [&quot;hanqunfeng &lt;hanqf2008@163.com&gt;&quot;]readme = &quot;README.md&quot;[tool.poetry.dependencies] # 主环境python = &quot;^3.11&quot;flask = &quot;^3.1.0&quot;[tool.poetry.group.test.dependencies] # test分组依赖flask = &quot;^3.1.0&quot;[tool.poetry.group.dev.dependencies] # dev分组依赖flask = &quot;^3.1.0&quot;[build-system]requires = [&quot;poetry-core&quot;]build-backend = &quot;poetry.core.masonry.api&quot; show : 查看依赖包 123456789101112131415# 查看当前项目都需要哪些依赖，这些依赖不一定都安装了，它只是解析 pyproject.toml 中的声明来解析依赖树$ poetry showannotated-types 0.7.0 Reusable constraint types to use with typing.Annotatedanyio 4.6.2.post1 High level compatibility layer for multiple asynchronous ...fastapi 0.115.5 FastAPI framework, high performance, easy to learn, fast ...idna 3.10 Internationalized Domain Names in Applications (IDNA)pydantic 2.9.2 Data validation using Python type hintspydantic-core 2.23.4 Core functionality for Pydantic validation and serializationsniffio 1.3.1 Sniff out which async library your code is running understarlette 0.41.3 The little ASGI library that shines.typing-extensions 4.12.2 Backported and Experimental Type Hints for Python 3.8+# 只查看顶级依赖，即只查看在 pyproject.toml 中声明的依赖$ poetry show --top-levelfastapi 0.115.5 FastAPI framework, high performance, easy to learn, fast ... remove : 删除依赖包 123456789101112131415161718# 删除依赖，此时会将当前包及其所有依赖一块删除$ poetry remove fastapiUpdating dependenciesResolving dependencies... (0.1s)Package operations: 0 installs, 0 updates, 9 removals - Removing annotated-types (0.7.0) - Removing anyio (4.6.2.post1) - Removing fastapi (0.115.5) - Removing idna (3.10) - Removing pydantic (2.9.2) - Removing pydantic-core (2.23.4) - Removing sniffio (1.3.1) - Removing starlette (0.41.3) - Removing typing-extensions (4.12.2)Writing lock file search : 搜索远程仓库 12# 搜索远程仓库$ poetry search fastapi install 和 update : 安装和更新依赖包 在 Poetry 中，install 和 update 是两个常用的命令，但它们的作用和使用场景不同 poetry install 的作用是根据现有的 poetry.lock 文件来安装依赖，确保安装的依赖版本与锁文件中记录的版本完全一致。 核心特点： 安装锁定的版本：它只会安装 poetry.lock 文件中指定的版本，即使 pyproject.toml 文件中定义的版本范围已经有更新版本。 重现依赖环境：适用于团队协作或部署环境，确保所有人或机器安装的依赖版本完全相同。 锁文件存在时更高效：如果 poetry.lock 文件存在，poetry install 不会重新解析依赖树。 首次运行时生成锁文件：如果没有 poetry.lock 文件，poetry install 会解析依赖并生成锁文件。 使用场景： 新克隆的项目，需要安装依赖环境。 部署生产环境，确保依赖版本的稳定性。 重新安装之前已定义的依赖（例如清空了虚拟环境）。 poetry update 的作用是根据 pyproject.toml 文件中定义的依赖范围重新解析依赖树，并更新 poetry.lock 文件为最新的版本。 核心特点： 更新到最新版本：它会尝试安装依赖范围内的最新版本，并更新 poetry.lock 文件。 解析新的依赖树：即使 poetry.lock 文件存在，poetry update 也会忽略它并重新解析依赖。 更改锁文件：它会覆盖现有的 poetry.lock 文件，因此团队其他成员需要重新运行 poetry install 以同步。 使用场景： 更新依赖到最新版本（在依赖范围内）。 当添加新依赖后，想要安装并更新锁文件。 修复可能的版本冲突或不兼容问题。 lock : 锁定依赖包 poetry lock 是 Poetry（一个 Python 包管理工具）中的一个命令，用于锁定项目的依赖关系。使用这个命令可以创建或更新 poetry.lock 文件，确保你的项目中所使用的每个包的版本都被明确记录下来。这样做对于项目的可复现性和稳定性至关重要。 实际上，当运行 poetry install 、 poetry update 或者 poetry add 等命令时， poetry 都会根据 pyproject.toml 文件中的依赖范围，解析依赖树，并在项目目录下创建或更新 poetry.lock 文件。 当我们手工修改了 pyproject.toml 文件中的依赖范围，此时又不想立刻更新依赖，而是希望在某个时机再更新，此时就可以使用 poetry lock 命令，先锁定这些依赖，之后再通过 poetry install 命令安装。 可以使用 poetry check 命令检查 pyproject.toml 文件 与 poetry.lock 文件的一致性。 12345678910111213# 比如我手工删除了 `pyproject.toml` 文件中的某个依赖# 此时运行 check 检查一致性会报错$ poetry checkError: pyproject.toml changed significantly since poetry.lock was last generated. Run `poetry lock [--no-update]` to fix the lock file.# 锁定依赖$ poetry lockUpdating dependenciesResolving dependencies... (0.1s)Writing lock file# 检查一致性通过$ poetry checkAll set! 小贴士 注意，此时通过 poetry show 查看不到那个手工删除的依赖包，但实际上依赖依旧在于虚拟环境中 所以尽量避免手工删除依赖，而是通过 poetry remove 命令来删除依赖 source : 镜像源管理 默认情况下都是从Pypi的官方仓库下载，国内一般需要指定镜像源来加速下载 123456789101112131415161718192021222324252627282930313233# 添加镜像源，默认就是主要源，注意该方式只对当前项目有效# 命令格式：poetry source add [选项] [--] &lt;name&gt; [&lt;url&gt;]，name：源仓库的名称，url：源仓库的 URL$ poetry source add tsinghua https://pypi.tuna.tsinghua.edu.cn/simpleAdding source with name tsinghua.# --priority=PRIORITY设置此源的优先级。可以是以下值之一：default（默认）、primary（主要）、supplemental（备用）、explicit（显式源，只有当包明确声明使用该源时才会被使用）。默认为 primary。$ poetry source add --priority=supplemental aliyun http://mirrors.aliyun.com/pypi/simple/# 查看镜像源信息$ poetry source show name : tsinghua url : https://pypi.tuna.tsinghua.edu.cn/simple priority : primary name : aliyun url : http://mirrors.aliyun.com/pypi/simple/ priority : supplemental# 此时查看 pyproject.toml 文件可以看到镜像源信息[[tool.poetry.source]]name = &quot;tsinghua&quot;url = &quot;https://pypi.tuna.tsinghua.edu.cn/simple&quot;priority = &quot;primary&quot;[[tool.poetry.source]]name = &quot;aliyun&quot;url = &quot;http://mirrors.aliyun.com/pypi/simple/&quot;priority = &quot;supplemental&quot;# 删除镜像源$ poetry source remove aliyun # 指定镜像源名称Removing source with name aliyun. 运行 这里以一个小示例来说明这个功能 创建一个新的项目 123456789101112131415161718192021$ poetry new poetryDemoCreated package poetrydemo in poetryDemo# 进入项目目录$ cd poetryDemo# 查看生成的文件$ lltotal 8drwxr-xr-x 6 hanqf staff 192 11 21 17:32 .drwxr-xr-x 4 hanqf staff 128 11 21 17:32 ..-rw-r--r-- 1 hanqf staff 0 11 21 17:32 README.mddrwxr-xr-x 3 hanqf staff 96 11 21 17:32 poetrydemo-rw-r--r-- 1 hanqf staff 266 11 21 17:32 pyproject.tomldrwxr-xr-x 3 hanqf staff 96 11 21 17:32 tests# 进入包目录$ cd poetrydemo# 查看包目录下的文件$ lltotal 0drwxr-xr-x 3 hanqf staff 96 11 21 17:32 .drwxr-xr-x 6 hanqf staff 192 11 21 17:32 ..-rw-r--r-- 1 hanqf staff 0 11 21 17:32 __init__.py 在包目录下创建 array_util.py，内容如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152import numpy as npdef generate_random_array(shape, distribution=&quot;uniform&quot;, params=None, seed=None): &quot;&quot;&quot; 生成随机数组的工具方法。 :param shape: tuple，指定数组的形状，例如 (3, 4) 表示 3 行 4 列。 :param distribution: str，指定随机数分布类型，可选值： - &quot;uniform&quot;：均匀分布（默认）。 - &quot;normal&quot;：正态分布。 - &quot;integer&quot;：随机整数。 :param params: dict，分布的参数配置： - 均匀分布：&#123;&quot;low&quot;: 最小值, &quot;high&quot;: 最大值&#125;，默认 low=0, high=1。 - 正态分布：&#123;&quot;mean&quot;: 均值, &quot;std&quot;: 标准差&#125;，默认 mean=0, std=1。 - 随机整数：&#123;&quot;low&quot;: 最小值, &quot;high&quot;: 最大值, &quot;dtype&quot;: 类型&#125;，默认 low=0, high=10。 :param seed: int，随机数种子（可选），用于结果可复现。 :return: np.ndarray，生成的随机数组。 &quot;&quot;&quot; if seed is not None: np.random.seed(seed) if params is None: params = &#123;&#125; if distribution == &quot;uniform&quot;: low = params.get(&quot;low&quot;, 0) high = params.get(&quot;high&quot;, 1) return np.random.uniform(low, high, size=shape) elif distribution == &quot;normal&quot;: mean = params.get(&quot;mean&quot;, 0) std = params.get(&quot;std&quot;, 1) return np.random.normal(mean, std, size=shape) elif distribution == &quot;integer&quot;: low = params.get(&quot;low&quot;, 0) high = params.get(&quot;high&quot;, 10) dtype = params.get(&quot;dtype&quot;, int) return np.random.randint(low, high, size=shape, dtype=dtype) else: raise ValueError(&quot;不支持的分布类型！可选值为 &#x27;uniform&#x27;, &#x27;normal&#x27;, &#x27;integer&#x27;。&quot;)# 示例用法if __name__ == &quot;__main__&quot;: array_uniform = generate_random_array((3, 4), distribution=&quot;uniform&quot;, params=&#123;&quot;low&quot;: 1, &quot;high&quot;: 10&#125;) array_normal = generate_random_array((2, 3), distribution=&quot;normal&quot;, params=&#123;&quot;mean&quot;: 0, &quot;std&quot;: 1&#125;, seed=42) array_integer = generate_random_array((4, 5), distribution=&quot;integer&quot;, params=&#123;&quot;low&quot;: 0, &quot;high&quot;: 20&#125;) print(&quot;均匀分布随机数组：\\n&quot;, array_uniform) print(&quot;正态分布随机数组：\\n&quot;, array_normal) print(&quot;随机整数数组：\\n&quot;, array_integer) 安装依赖 1234567891011$ poetry add numpyUsing version ^2.1.3 for numpyUpdating dependenciesResolving dependencies... (1.1s)Package operations: 1 install, 0 updates, 0 removals - Installing numpy (2.1.3)Writing lock file 运行，两种方法 poetry run 12345678910111213$ poetry run python array_util.py均匀分布随机数组：[[7.44623063 1.89415788 4.81008329 4.25556572][3.31925154 6.44037063 5.3216543 7.54950573][3.97160747 5.04800698 3.28299934 3.42841887]]正态分布随机数组：[[ 0.49671415 -0.1382643 0.64768854][ 1.52302986 -0.23415337 -0.23413696]]随机整数数组：[[10 10 3 7 2][ 1 11 5 1 0][11 11 16 9 15][14 14 18 11 19]] poetry shell : 此时会开启一个新的shell，并开启虚拟环境 1234567# 开启虚拟环境$ poetry shellSpawning shell within /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11Restored session: 2024年11月21日 星期四 15时31分52秒 CST➜ poetrydemo emulate bash -c &#x27;. /Users/hanqf/Library/Caches/pypoetry/virtualenvs/poetrydemo-fyqYbfje-py3.11/bin/activate&#x27;# 在虚拟环境下运行$ python array_util.py 打包和发布 接着上面的项目 打包 123456789101112# 会在项目目录下创建 dist 目录，并将打好的包存放于此$ poetry buildBuilding poetrydemo (0.1.0) - Building sdist - Built poetrydemo-0.1.0.tar.gz - Building wheel - Built poetrydemo-0.1.0-py3-none-any.whl# 查看生成的打包文件$ exa -1 disthqf_poetrydemo-0.1.0-py3-none-any.whlhqf_poetrydemo-0.1.0.tar.gz 发布 首先要先在PyPI上注册个帐号，需要开启“双要素身份验证 （2FA）”，否则不能获取发布时的API令牌。 获取API令牌 发布，不过这次发布提示包名已经存在了 123456# 发布时提示包名已经存在了$ poetry publish -u __token__ -p pypi-AgEIcHlwaS5vcmcCJDU0Y2Q5NjhkLWYyYTEtNPublishing poetrydemo (0.1.0) to PyPI - Uploading poetrydemo-0.1.0-py3-none-any.whl FAILEDHTTP Error 400: The name &#x27;poetrydemo&#x27; is too similar to an existing project. See https://pypi.org/help/#project-name for more information. | b&quot;&lt;html&gt;\\n &lt;head&gt;\\n &lt;title&gt;400 The name &#x27;poetrydemo&#x27; is too similar to an existing project. See https://pypi.org/help/#project-name for more information.\\n \\n &lt;body&gt;\\n &lt;h1&gt;400 The name &#x27;poetrydemo&#x27; is too similar to an existing project. See https://pypi.org/help/#project-name for more information.\\n The server could not comply with the request since it is either malformed or otherwise incorrect.&lt;br/&gt;&lt;br/&gt;\\nThe name &amp;#x27;poetrydemo&amp;#x27; is too similar to an existing project. See https://pypi.org/help/#project-name for more information.\\n\\n\\n \\n&quot; 先修改包名，直接编辑 pyproject.toml 即可，将name属性修改为“hqf_poetrydemo”，然后将包目录的名称也修改为这个mv poetrydemo hqf_poetrydemo，并删除dist目录，之后重新打包poetry build，再次发布 1234567891011121314151617$ vim pyproject.toml # 将name属性修改为“hqf_poetrydemo”$ mv poetrydemo hqf_poetrydemo # 将包目录的名称也修改为这个$ rm -rf dist # 删除dist目录$ poetry build # 重新打包Creating virtualenv hqf-poetrydemo-fyqYbfje-py3.11 in /Users/hanqf/Library/Caches/pypoetry/virtualenvsBuilding hqf_poetrydemo (0.1.0) - Building sdist - Built hqf_poetrydemo-0.1.0.tar.gz - Building wheel - Built hqf_poetrydemo-0.1.0-py3-none-any.whl# 再次发布$ poetry publish -u __token__ -p pypi-AgEIcHlwaS5vcmcCJDU0Y2Q5NjhkLWYyYTEtNPublishing hqf_poetrydemo (0.1.0) to PyPI - Uploading hqf_poetrydemo-0.1.0-py3-none-any.whl 100% - Uploading hqf_poetrydemo-0.1.0.tar.gz 100% 之后就可以在其它项目中安装这个包了 12345678910111213141516# pip install$ pip install hqf_poetrydemo# poetry add$ poetry add hqf_poetrydemoUsing version ^0.1.0 for hqf-poetrydemoUpdating dependenciesResolving dependencies... (0.5s)Package operations: 2 installs, 0 updates, 0 removals - Installing numpy (2.1.3) - Installing hqf-poetrydemo (0.1.0)Writing lock file self update : 升级 poetry 版本 self 相关命令主要用于 poetry 自身安装插件使用 估计插件功能目前还不成熟，官网也没有进行详细的说明，并且 windows 下无法使用，所以这里不讨论。 self命令下目前只需要记住一个命令： self update : 升级 poetry 版本 1$ poetry self update debug resolve : 查看包的依赖关系 1234567891011121314# 只查看，不安装$ poetry debug resolve requestsResolving dependencies... (0.4s)Resolution results:certifi 2024.8.30charset-normalizer 3.4.0idna 3.10urllib3 2.2.3requests 2.32.3# 查看指定版本的依赖关系$ poetry debug resolve requests@2.32.3 cache : 缓存管理 poetry一个很重要的功能就是缓存安装包，可以 减少 相同的安装包被重复下载。为什么是减少而不是避免呢？因为不同的镜像源的包是分别缓存的。 通过 poetry config --list 可以看到 cache-dir 的地址，这里就是缓存下载包的目录。 以下是一些常见的使用场景 解决依赖安装问题： 如果你在安装或更新依赖时遇到问题（例如，某个包无法正确安装或版本不对），清空缓存可以帮助你确保 Poetry 重新下载所有必要的文件，从而解决问题。 清理磁盘空间： 如果你的项目很多或者经常修改依赖项，缓存可能会变得非常大。使用 poetry cache clear 可以帮助释放磁盘空间，特别是当你不经常使用某些包时。 测试最新版本的依赖： 如果你想测试某个包的新版本是否解决了某个问题，或者想确保你使用的确实是最新的版本，清除缓存可以强制 Poetry 从远程仓库重新下载最新的包。 环境变化： 如果你的开发或生产环境发生了变化（例如，切换了操作系统、更新了 Python 版本等），清除缓存可以帮助你确保依赖项在新环境中正确安装。 调试依赖问题： 在调试依赖项问题时，有时候清除缓存可以帮助你确定问题是否与缓存中的旧版本有关。 CI/CD 环境的一致性： 在持续集成或持续部署 (CI/CD) 环境中，为了确保每次构建都基于最新的依赖，有时会在构建脚本中包含清除缓存的步骤。 1234567891011# 查看缓存列表，这里会按镜像源进行分组$ poetry cache listPyPI_default_cachetsinghua# 清除指定源的全部缓存$ poetry cache clear pypi --all# 清除指定源下某个包的缓存$ poetry cache clear pypi:requests:2.24.0","summary":"摘要 Poetry是一个轻量级的python包管理器，其目标是帮助开发者快速、轻松地构建、发布和分享python包。说它轻量，是与 conda 相比 poetry 更轻量，同时与 venv + pip Python--virtualenv 的方式相比具有如下优点： 使用缓存机制，避免重复下载依赖包 包管理上更加精确，删除不需要的包时会同时删除与其关联的且没有被使用的那些依赖包，避免无用的依赖包造成打包体积过大 打包和发布更加简单，只需要一个命令就可以打包和发布","date_published":"2024-11-22T15:33:15.000Z","tags":["技术","Python"]},{"id":"https://blog.hanqunfeng.com/2024/11/18/python_pip/","url":"https://blog.hanqunfeng.com/2024/11/18/python_pip/","title":"pip--CERTIFICATE_VERIFY_FAILED","content_html":"<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">测试环境：macOS 13.7.1，Python 3.11.3</li>\n<li class=\"lvl-2\">今天将<code>pip</code>升级(<code>pip install --upgrade pip</code>)到<code>24.3.1</code>版本后，通过<code>pip install</code>命令安装依赖时会报错，比如：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install certifi</span><br><span class=\"line\">Could not fetch URL https://pypi.org/simple/certifi/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host=<span class=\"string\">&#x27;pypi.org&#x27;</span>, port=443): Max retries exceeded with url: /simple/certifi/ (Caused by SSLError(SSLCertVerificationError(1, <span class=\"string\">&#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;</span>))) - skipping</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">很奇怪，从<code>pip</code>自己的网站上下载依赖都会出现证书无法验证的错误。测试了一下，该问题只在macOS上遇到，其他平台没有遇到过。</li>\n<li class=\"lvl-2\">先说结论，推荐使用第五种方法。</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"解决方法\">解决方法</h2>\n<h3 id=\"1-trusted-host-忽略证书验证\">1. <code>--trusted-host</code>: 忽略证书验证</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>指定信任的证书域名，从而不进行验证证书，可以指定多个</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install certifi --trusted-host pypi.org --trusted-host files.pythonhosted.org</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-cert-指定证书文件\">2. <code>--cert</code>: 指定证书文件</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>此时需要先下载证书文件，用Chrome浏览器打开<a href=\"https://pypi.org\">https://pypi.org</a>，按如下步骤导出证书文件<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/tMocyD.png\" alt=\"\" width=\"300\" height=\"300\"><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/uS4W2W.png\" alt=\"\" width=\"300\" height=\"300\"><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/OiZf9R.png\" alt=\"\" width=\"400\" height=\"500\"><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/JHw2ML.png\" alt=\"\" width=\"400\" height=\"300\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>然后再执行如下命令进行安装</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install certifi --cert ~/Downloads/GlobalSign.pem</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-pip-conf-配置全局证书文件\">3. <code>pip.conf</code>: 配置全局证书文件</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>还是需要先下载证书文件，参考上面方法</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>pip</code> 的配置文件位置因操作系统而异。可以通过以下命令找到配置文件路径：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 我使用的是 macOS</span></span><br><span class=\"line\">$ pip config -v list</span><br><span class=\"line\">For variant <span class=\"string\">&#x27;global&#x27;</span>, will try loading <span class=\"string\">&#x27;/Library/Application Support/pip/pip.conf&#x27;</span></span><br><span class=\"line\">For variant <span class=\"string\">&#x27;user&#x27;</span>, will try loading <span class=\"string\">&#x27;/Users/hanqf/.pip/pip.conf&#x27;</span></span><br><span class=\"line\">For variant <span class=\"string\">&#x27;user&#x27;</span>, will try loading <span class=\"string\">&#x27;/Users/hanqf/.config/pip/pip.conf&#x27;</span></span><br><span class=\"line\">For variant <span class=\"string\">&#x27;site&#x27;</span>, will try loading <span class=\"string\">&#x27;/Library/Frameworks/Python.framework/Versions/3.11/pip.conf&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>pip</code>会从上面的路径中查找配置信息，我这里选择第二个，如果不存在就创建<code>~/.pip/pip.conf</code>文件，内容如下：</p>\n</li>\n</ul>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[global]</span></span><br><span class=\"line\"><span class=\"attr\">cert</span> = ~/Downloads/GlobalSign.pem</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>配置好后可以通过如下命令查看配置信息</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip config list</span><br><span class=\"line\">global.cert=<span class=\"string\">&#x27;~/.pip/GlobalSign.pem&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>然后再执行如下命令进行安装</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install certifi</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-将证书添加到系统信任的证书存储\">4.将证书添加到系统信任的证书存储</h3>\n<h4 id=\"对于-macOS：\">对于 macOS：</h4>\n<div class=\"danger\">\n<p><em><strong>我设置后依旧报错，暂不清楚原因</strong></em></p>\n</div>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>打开 <code>钥匙串访问</code> 应用程序，并选择 <code>系统钥匙串</code> 中的 <code>系统</code> (从网上查询说是要加入<code>系统根证书</code>，但是我没有加入成功)</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>文件</code> 》<code>导入项目</code> 》 <code>选择证书文件</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>会提示你输入密码，如果证书不受信任，可以将证书设置为为始终信任该证书 (双击证书 》 信任 》 使用此证书时 》设置为<code>始终信任</code>)。</p>\n</li>\n</ul>\n<h3 id=\"5-使用-Python-官方推荐的证书修复工具-（推荐）\">5.使用 Python 官方推荐的证书修复工具 （推荐）</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这个方法最简单</p>\n</li>\n<li class=\"lvl-2\">\n<p>运行这个脚本前需要先安装 <code>certifi</code>，其主要用于提供权威的CA根证书列表</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pip install certifi --trusted-host pypi.org --trusted-host files.pythonhosted.org</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>运行证书安装脚本（适用于 macOS 内置的 Python）</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 首次运行依旧会报错，但实际上已经进行了修复，主要就是最后4步进行的操作</span></span><br><span class=\"line\"><span class=\"comment\"># 注意替换你自己的Python版本号</span></span><br><span class=\"line\">$ /Applications/Python\\ 3.11/Install\\ Certificates.<span class=\"built_in\">command</span></span><br><span class=\"line\"></span><br><span class=\"line\"> -- pip install --upgrade certifi</span><br><span class=\"line\">Requirement already satisfied: certifi <span class=\"keyword\">in</span> /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (2024.8.30)</span><br><span class=\"line\">WARNING: Retrying (Retry(total=4, connect=None, <span class=\"built_in\">read</span>=None, redirect=None, status=None)) after connection broken by <span class=\"string\">&#x27;SSLError(SSLCertVerificationError(1, &#x27;</span>[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get <span class=\"built_in\">local</span> issuer certificate (_ssl.c:1002)<span class=\"string\">&#x27;))&#x27;</span>: /simple/certifi/</span><br><span class=\"line\">WARNING: Retrying (Retry(total=3, connect=None, <span class=\"built_in\">read</span>=None, redirect=None, status=None)) after connection broken by <span class=\"string\">&#x27;SSLError(SSLCertVerificationError(1, &#x27;</span>[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get <span class=\"built_in\">local</span> issuer certificate (_ssl.c:1002)<span class=\"string\">&#x27;))&#x27;</span>: /simple/certifi/</span><br><span class=\"line\">WARNING: Retrying (Retry(total=2, connect=None, <span class=\"built_in\">read</span>=None, redirect=None, status=None)) after connection broken by <span class=\"string\">&#x27;SSLError(SSLCertVerificationError(1, &#x27;</span>[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get <span class=\"built_in\">local</span> issuer certificate (_ssl.c:1002)<span class=\"string\">&#x27;))&#x27;</span>: /simple/certifi/</span><br><span class=\"line\">WARNING: Retrying (Retry(total=1, connect=None, <span class=\"built_in\">read</span>=None, redirect=None, status=None)) after connection broken by <span class=\"string\">&#x27;SSLError(SSLCertVerificationError(1, &#x27;</span>[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get <span class=\"built_in\">local</span> issuer certificate (_ssl.c:1002)<span class=\"string\">&#x27;))&#x27;</span>: /simple/certifi/</span><br><span class=\"line\">WARNING: Retrying (Retry(total=0, connect=None, <span class=\"built_in\">read</span>=None, redirect=None, status=None)) after connection broken by <span class=\"string\">&#x27;SSLError(SSLCertVerificationError(1, &#x27;</span>[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get <span class=\"built_in\">local</span> issuer certificate (_ssl.c:1002)<span class=\"string\">&#x27;))&#x27;</span>: /simple/certifi/</span><br><span class=\"line\">Could not fetch URL https://pypi.org/simple/certifi/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host=<span class=\"string\">&#x27;pypi.org&#x27;</span>, port=443): Max retries exceeded with url: /simple/certifi/ (Caused by SSLError(SSLCertVerificationError(1, <span class=\"string\">&#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;</span>))) - skipping</span><br><span class=\"line\"> -- removing any existing file or <span class=\"built_in\">link</span></span><br><span class=\"line\"> -- creating symlink to certifi certificate bundle</span><br><span class=\"line\"> -- setting permissions</span><br><span class=\"line\"> -- update complete</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>之后再运行<code>pip install</code>命令，就不会报错了</p>\n</li>\n</ul>\n<h3 id=\"6-使用其它镜像源\">6.使用其它镜像源</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>该问题是因为Pypi软件仓库官网的证书文件存在问题导致的，只要我们不从官网下载就不会有问题。</p>\n</li>\n<li class=\"lvl-2\">\n<p>在国内为了加速下载我们一般会使用国内的镜像源，例如<a href=\"https://developer.aliyun.com/mirror/pypi\">阿里云的Pypi镜像源</a>或者<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/pypi/\">清华大学的Pypi镜像源</a>，具体使用方法参考各自的官网说明即可。</p>\n</li>\n</ul>\n","content_text":"摘要 测试环境：macOS 13.7.1，Python 3.11.3 今天将pip升级(pip install --upgrade pip)到24.3.1版本后，通过pip install命令安装依赖时会报错，比如： 12$ pip install certifiCould not fetch URL https://pypi.org/simple/certifi/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host=&#x27;pypi.org&#x27;, port=443): Max retries exceeded with url: /simple/certifi/ (Caused by SSLError(SSLCertVerificationError(1, &#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;))) - skipping 很奇怪，从pip自己的网站上下载依赖都会出现证书无法验证的错误。测试了一下，该问题只在macOS上遇到，其他平台没有遇到过。 先说结论，推荐使用第五种方法。 解决方法 1. --trusted-host: 忽略证书验证 指定信任的证书域名，从而不进行验证证书，可以指定多个 1pip install certifi --trusted-host pypi.org --trusted-host files.pythonhosted.org 2. --cert: 指定证书文件 此时需要先下载证书文件，用Chrome浏览器打开https://pypi.org，按如下步骤导出证书文件 然后再执行如下命令进行安装 1pip install certifi --cert ~/Downloads/GlobalSign.pem 3. pip.conf: 配置全局证书文件 还是需要先下载证书文件，参考上面方法 pip 的配置文件位置因操作系统而异。可以通过以下命令找到配置文件路径： 123456# 我使用的是 macOS$ pip config -v listFor variant &#x27;global&#x27;, will try loading &#x27;/Library/Application Support/pip/pip.conf&#x27;For variant &#x27;user&#x27;, will try loading &#x27;/Users/hanqf/.pip/pip.conf&#x27;For variant &#x27;user&#x27;, will try loading &#x27;/Users/hanqf/.config/pip/pip.conf&#x27;For variant &#x27;site&#x27;, will try loading &#x27;/Library/Frameworks/Python.framework/Versions/3.11/pip.conf&#x27; pip会从上面的路径中查找配置信息，我这里选择第二个，如果不存在就创建~/.pip/pip.conf文件，内容如下： 12[global]cert = ~/Downloads/GlobalSign.pem 配置好后可以通过如下命令查看配置信息 12$ pip config listglobal.cert=&#x27;~/.pip/GlobalSign.pem&#x27; 然后再执行如下命令进行安装 1pip install certifi 4.将证书添加到系统信任的证书存储 对于 macOS： 我设置后依旧报错，暂不清楚原因 打开 钥匙串访问 应用程序，并选择 系统钥匙串 中的 系统 (从网上查询说是要加入系统根证书，但是我没有加入成功) 文件 》导入项目 》 选择证书文件 会提示你输入密码，如果证书不受信任，可以将证书设置为为始终信任该证书 (双击证书 》 信任 》 使用此证书时 》设置为始终信任)。 5.使用 Python 官方推荐的证书修复工具 （推荐） 这个方法最简单 运行这个脚本前需要先安装 certifi，其主要用于提供权威的CA根证书列表 1$ pip install certifi --trusted-host pypi.org --trusted-host files.pythonhosted.org 运行证书安装脚本（适用于 macOS 内置的 Python） 12345678910111213141516# 首次运行依旧会报错，但实际上已经进行了修复，主要就是最后4步进行的操作# 注意替换你自己的Python版本号$ /Applications/Python\\ 3.11/Install\\ Certificates.command -- pip install --upgrade certifiRequirement already satisfied: certifi in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (2024.8.30)WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by &#x27;SSLError(SSLCertVerificationError(1, &#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;))&#x27;: /simple/certifi/WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by &#x27;SSLError(SSLCertVerificationError(1, &#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;))&#x27;: /simple/certifi/WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by &#x27;SSLError(SSLCertVerificationError(1, &#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;))&#x27;: /simple/certifi/WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by &#x27;SSLError(SSLCertVerificationError(1, &#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;))&#x27;: /simple/certifi/WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by &#x27;SSLError(SSLCertVerificationError(1, &#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;))&#x27;: /simple/certifi/Could not fetch URL https://pypi.org/simple/certifi/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host=&#x27;pypi.org&#x27;, port=443): Max retries exceeded with url: /simple/certifi/ (Caused by SSLError(SSLCertVerificationError(1, &#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;))) - skipping -- removing any existing file or link -- creating symlink to certifi certificate bundle -- setting permissions -- update complete 之后再运行pip install命令，就不会报错了 6.使用其它镜像源 该问题是因为Pypi软件仓库官网的证书文件存在问题导致的，只要我们不从官网下载就不会有问题。 在国内为了加速下载我们一般会使用国内的镜像源，例如阿里云的Pypi镜像源或者清华大学的Pypi镜像源，具体使用方法参考各自的官网说明即可。","summary":"摘要 测试环境：macOS 13.7.1，Python 3.11.3 今天将pip升级(pip install --upgrade pip)到24.3.1版本后，通过pip install命令安装依赖时会报错，比如： 12$ pip install certifiCould not fetch URL https://pypi.org/simple/certifi/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host=&#x27;pypi.org&#x27;, port=443): Max retries exceeded with url: /simple/certifi/ (Caused by SSLError(SSLCertVerificationError(1, &#x27;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)&#x27;))) - skipping 很奇怪，从pip自己的网站上下载依赖都会出现证书无法验证的错误。测试了一下，该问题只在macOS上遇到，其他平台没有遇到过。 先说结论，推荐使用第五种方法。","date_published":"2024-11-18T15:33:15.000Z","tags":["技术","Python"]},{"id":"https://blog.hanqunfeng.com/2024/11/12/mathjax-demo/","url":"https://blog.hanqunfeng.com/2024/11/12/mathjax-demo/","title":"Hexo NexT -- 数学公式","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n-->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Hexo是基于markdown的，所以可以使用LaTex语法来编写数学公式，只不过需要安装相应的公式渲染插件来实现。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Next主题 支持的公式插件为<code>MathJax</code>和<code>KaTeX</code>，它们都支持LaTex语法，参考: <a href=\"https://theme-next.js.org/docs/third-party-services/math-equations\">https://theme-next.js.org/docs/third-party-services/math-equations</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>本文使用的是<a href=\"https://katex.org/docs/supported\">Katex</a>，原因是我已经使用了<a href=\"https://github.com/hexojs/hexo-renderer-markdown-it\">hexo-renderer-markdown-it</a>渲染器，其与 mathjax 的 <a href=\"https://github.com/hexojs/hexo-renderer-pandoc\">hexo-renderer-pandoc</a>渲染器不能并存，所以只能选<code>Katex</code>了。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"安装\">安装</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>详细的安装方法请参考:<a href=\"https://theme-next.js.org/docs/third-party-services/math-equations\">Math Equations</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>因为已经使用了<a href=\"https://github.com/hexojs/hexo-renderer-markdown-it\">hexo-renderer-markdown-it</a>渲染器，所以这里就没有使用<a href=\"https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus\">hexo-renderer-markdown-it-plus</a>渲染器，其实两者也没有太大的区别，只不过后者默认就加载了一些插件，而前者需要自己安装插件并配置才可以使用。</p>\n</li>\n<li class=\"lvl-2\">\n<p>但是测试时发现，按照官网的配置<code>hexo-renderer-markdown-it</code> + <code>markdown-it-katex</code> 的方式并不能很好的进行公式的渲染，所以这里参考了 <code>hexo-renderer-markdown-it-plus</code> 渲染器，将其更换为<a href=\"https://github.com/iktakahiro/markdown-it-katex#readme\">@iktakahiro/markdown-it-katex</a>。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @iktakahiro/markdown-it-katex --save</span><br></pre></td></tr></table></figure>\n<p>在<code>_config.yml</code>配置上该插件</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># config of hexo-renderer-markdown-it</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\">  <span class=\"attr\">render:</span></span><br><span class=\"line\">    <span class=\"attr\">html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">quotes:</span> <span class=\"string\">&#x27;“”‘’&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">plugins:</span></span><br><span class=\"line\">    <span class=\"comment\"># katex公式</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&quot;@iktakahiro/markdown-it-katex&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装后遇到的问题\">安装后遇到的问题</h2>\n<h3 id=\"1-安装后发现通过hexo编译时会报类似如下警告\">1.安装后发现通过hexo编译时会报类似如下警告</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LaTeX-incompatible input and strict mode is set to &#x27;warn&#x27;: Unicode text character &quot;即&quot; used in math mode [unicodeTextInMathMode]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>原因是<code>@iktakahiro/markdown-it-katex</code>插件默认开启的是严格模式，不能在<code>$$...$$</code>或<code>$...$</code>中包含中文，虽然我设置的是<code>math -- every_page: false</code>，但其在编译阶段依旧会检查所有的页面，不过报这个警告并不会有什么影响，所以可以忽略。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果不希望看到这个警告，可以为 <code>@iktakahiro/markdown-it-katex</code> 添加模式的控制行为</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># config of hexo-renderer-markdown-it</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\">  <span class=\"attr\">render:</span></span><br><span class=\"line\">    <span class=\"attr\">html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">quotes:</span> <span class=\"string\">&#x27;“”‘’&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">plugins:</span></span><br><span class=\"line\">    <span class=\"comment\"># katex公式</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">&quot;@iktakahiro/markdown-it-katex&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">options:</span></span><br><span class=\"line\">         <span class=\"attr\">strict:</span> <span class=\"string\">error</span> <span class=\"comment\"># 默认为warn，这里设置为error，只有当解析器遇到不支持的公式时才报错，也可以设置为 false，表示不检查</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"不支持Katex的Auto-render-Extension\">不支持<code>Katex</code>的<code>Auto-render Extension</code></h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>通过查看<code>Katex</code>官网可以知道，开启<a href=\"https://katex.org/docs/autorender\">Auto-render Extension</a>后，<code>Katex</code>可以渲染更多的公式语法，但要注意这并不是<code>LaTex</code>的标准语法</p>\n</li>\n<li class=\"lvl-2\">\n<p>但是<code>@iktakahiro/markdown-it-katex</code>中并没有相应的配置，为了解决这个问题，简单的方法就是将所需要的资源添加到页面中，比如我在<code>source\\_data\\post-body-start.njk</code>中添加了如下内容</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%- if page.mathjax %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/katex.min.css&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-nB0miv6/jRmo5UMMR1wu3Gz6NLsoTkbqJghGIsx//Rlm+ZU03BU6SQNC66uf4l5+&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">defer</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/katex.min.js&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-7zkQWkzuo3B5mTepMUcHkMB5jZaolc2xDwL6VFqjFALcbeS9Ggm/Yr2r3Dy4lfFg&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">defer</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/contrib/auto-render.min.js&quot;</span> <span class=\"attr\">integrity</span>=<span class=\"string\">&quot;sha384-43gviWU0YVjaDtb/GhzOouOXtZMP/7XUzwPTstBeZFe/+rCMvRwr4yROQP43s0Xk&quot;</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;DOMContentLoaded&quot;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">renderMathInElement</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>, &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"comment\">// customised options</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"comment\">// • auto-render specific keys, e.g.:</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"attr\">delimiters</span>: [</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;$$&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;$$&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">true</span>&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;\\\\(&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;\\\\)&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">false</span>&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;\\\\begin&#123;equation&#125;&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;\\\\end&#123;equation&#125;&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">true</span>&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;\\\\begin&#123;align&#125;&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;\\\\end&#123;align&#125;&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">true</span>&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;\\\\begin&#123;alignat&#125;&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;\\\\end&#123;alignat&#125;&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">true</span>&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;\\\\begin&#123;gather&#125;&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;\\\\end&#123;gather&#125;&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">true</span>&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;\\\\begin&#123;CD&#125;&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;\\\\end&#123;CD&#125;&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">true</span>&#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123;<span class=\"attr\">left</span>: <span class=\"string\">&quot;\\\\[&quot;</span>, <span class=\"attr\">right</span>: <span class=\"string\">&quot;\\\\]&quot;</span>, <span class=\"attr\">display</span>: <span class=\"literal\">true</span>&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            ],</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"comment\">// • rendering keys, e.g.:</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          throwOnError : <span class=\"literal\">false</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n可以通过next模板的<code>_config.yml</code>中的<code>custom_file_path</code>配置项来自定义渲染页面的某个部分，这样对应的每个页面都会加上该模板内容</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">postBodyStart:</span> <span class=\"string\">source/_data/post-body-start.njk</span></span><br></pre></td></tr></table></figure>\n</div>\n<hr>\n<div class=\"warning\">\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p>使用<code>hexo-renderer-markdown-it-plus</code>渲染器时，如果修改了页面的内容，此时刷新页面，会发现页面中的公式不能被渲染了，只能重新启动hexo服务。</p>\n</li>\n<li class=\"lvl-2\">\n<p>但是使用<code>hexo-renderer-markdown-it</code>渲染器时，刷新页面后公式就可以被渲染了。</p>\n</li>\n</ul>\n</div>\n<hr>\n<h2 id=\"使用\">使用</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>每个页面的<code>front-matter</code>中要添加<code>mathjax: true</code>，这样在页面中就可以使用公式了。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>Katex</code>公式的渲染方式支持<code>$...$</code>和<code>$$...$$</code>两种方式</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-5\"><code>$...$</code>为行级公式</li>\n</ul>\n <figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span>sin(<span class=\"keyword\">\\omega</span> t)=<span class=\"keyword\">\\frac</span>&#123;1&#125;&#123;2j&#125;(e<span class=\"built_in\">^</span>&#123;j<span class=\"keyword\">\\omega</span> t&#125;-e<span class=\"built_in\">^</span>&#123;-j<span class=\"keyword\">\\omega</span> t&#125;)<span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>ω</mi><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>j</mi></mrow></mfrac><mo stretchy=\"false\">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi><mi>t</mi></mrow></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi><mi>t</mi></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">sin(\\omega t)=\\frac{1}{2j}(e^{j\\omega t}-e^{-j\\omega t})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.326216em;vertical-align:-0.481108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.481108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0746639999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-5\"><code>$$...$$</code>为块级公式，独占一行且居中展示</li>\n</ul>\n <figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\">sin(<span class=\"keyword\">\\omega</span> t)=<span class=\"keyword\">\\frac</span>&#123;1&#125;&#123;2j&#125;(e<span class=\"built_in\">^</span>&#123;j<span class=\"keyword\">\\omega</span> t&#125;-e<span class=\"built_in\">^</span>&#123;-j<span class=\"keyword\">\\omega</span> t&#125;)</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>ω</mi><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>j</mi></mrow></mfrac><mo stretchy=\"false\">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>ω</mi><mi>t</mi></mrow></msup><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>ω</mi><mi>t</mi></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">sin(\\omega t)=\\frac{1}{2j}(e^{j\\omega t}-e^{-j\\omega t})\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.20188em;vertical-align:-0.8804400000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804400000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.124664em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.874664em;\"><span style=\"top:-3.1130000000000004em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$$...$$</code>和<code>$...$</code>中不能出现Unicode字符，否则会报错，即不支持中文，如果需要显示中文，则需要使用<code>\\text&#123;中文&#125;</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>块级公式，在开头的<code>$$</code>之前和结尾的<code>$$</code>之后，不得有任何字符（空格除外）</p>\n</li>\n<li class=\"lvl-2\">\n<p>行级公式，在开头的<code>$</code>之后和结尾的<code>$</code>之前，不得有空格</p>\n</li>\n</ul>\n<h2 id=\"示例\">示例</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用方式可以参考 <a href=\"https://katex.org/docs/supported\">KaTeX公式符号</a> 以及 <a href=\"https://zh.wikipedia.org/wiki/Help:%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F\">维基百科：LaTeX公式手册</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>不过记住这些公式符号还是比较困难的，这里推荐两个工具</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-5\"><a href=\"https://webdemo.myscript.com/views/math/index.html\">MyScript</a>: 手写转LaTeX公式，直接将你需要的数学公式画出来，它会自动将其转换为LaTeX公式，然后复制即可</li>\n<li class=\"lvl-5\"><a href=\"https://www.latexlive.com/home\">LaTeX公式编辑器</a>: 提供公式模板、图片识别(有次数限制)等功能，并且支持输出各种格式。</li>\n<li class=\"lvl-5\"><a href=\"https://simpletex.cn/ai/latex_ocr\">Simpletex</a>: 支持LaTex公式图片识别和手写转公式，且无次数限制，但是需要注册账号。同时也提供了客户端版本。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里随便给几个示例，以下是<code>LaTeX</code>的标准语法</p>\n</li>\n</ul>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\"><span class=\"keyword\">\\left</span>(<span class=\"keyword\">\\beta</span> m c<span class=\"built_in\">^</span>2 + c <span class=\"keyword\">\\left</span>(<span class=\"keyword\">\\sum</span><span class=\"built_in\">_</span>&#123;n=1&#125;<span class=\"built_in\">^</span>3<span class=\"keyword\">\\alpha</span><span class=\"built_in\">_</span>n p<span class=\"built_in\">_</span>n<span class=\"keyword\">\\right</span>)<span class=\"keyword\">\\right</span>) <span class=\"keyword\">\\psi</span>(x,t)</span><br><span class=\"line\">= i<span class=\"keyword\">\\hbar</span> <span class=\"keyword\">\\frac</span>&#123;<span class=\"keyword\">\\partial</span> <span class=\"keyword\">\\psi</span>(x,t)&#125;&#123;<span class=\"keyword\">\\partial</span> t&#125;</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mrow><mo fence=\"true\">(</mo><mi>β</mi><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup><mo>+</mo><mi>c</mi><mrow><mo fence=\"true\">(</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mn>3</mn></munderover><msub><mi>α</mi><mi>n</mi></msub><msub><mi>p</mi><mi>n</mi></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>i</mi><mi mathvariant=\"normal\">ℏ</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\left(\\beta m c^2 + c \\left(\\sum_{n=1}^3\\alpha_n p_n\\right)\\right) \\psi(x,t)\n= i\\hbar \\frac{\\partial \\psi(x,t)}{\\partial t}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.068226em;vertical-align:-1.267113em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord mathnormal\">m</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">(</span></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011130000000004em;\"><span style=\"top:-1.882887em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.267113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord\">ℏ</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Aha! <span class=\"built_in\">$</span>E = mc<span class=\"built_in\">^</span>&#123;2&#125;<span class=\"built_in\">$</span>.</span><br></pre></td></tr></table></figure>\n<p>Aha! <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>=</mo><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">E = mc^{2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>.</p>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\"><span class=\"keyword\">\\left</span>(<span class=\"keyword\">\\LARGE</span>&#123;AB&#125;<span class=\"keyword\">\\right</span>)</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">(</mo><mstyle mathsize=\"1.728em\"><mrow><mi>A</mi><mi>B</mi></mrow></mstyle><mo fence=\"true\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\left(\\LARGE{AB}\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.83081424em;vertical-align:-0.65002em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord sizing reset-size6 size9\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span></span></p>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;matrix&#125;</span><br><span class=\"line\">   a <span class=\"built_in\">&amp;</span> b <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">   c <span class=\"built_in\">&amp;</span> d</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;matrix&#125;</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>d</mi></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{matrix}\n   a &amp; b \\\\\n   c &amp; d\n\\end{matrix}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.4000000000000004em;vertical-align:-0.9500000000000004em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\"><span class=\"keyword\">\\def</span><span class=\"keyword\">\\arraystretch</span>&#123;1.5&#125;</span><br><span class=\"line\">   <span class=\"keyword\">\\begin</span>&#123;array&#125;&#123;c:c:c&#125;</span><br><span class=\"line\">   a <span class=\"built_in\">&amp;</span> b <span class=\"built_in\">&amp;</span> c <span class=\"keyword\">\\\\</span> <span class=\"keyword\">\\hline</span></span><br><span class=\"line\">   d <span class=\"built_in\">&amp;</span> e <span class=\"built_in\">&amp;</span> f <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">   <span class=\"keyword\">\\hdashline</span></span><br><span class=\"line\">   g <span class=\"built_in\">&amp;</span> h <span class=\"built_in\">&amp;</span> i</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;array&#125;</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.6599999999999999em\" columnalign=\"center center center\" columnlines=\"dashed dashed\" columnspacing=\"1em\" rowlines=\"solid dashed\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>c</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>f</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>g</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>h</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>i</mi></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\def\\arraystretch{1.5}\n   \\begin{array}{c:c:c}\n   a &amp; b &amp; c \\\\ \\hline\n   d &amp; e &amp; f \\\\\n   \\hdashline\n   g &amp; h &amp; i\n\\end{array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.4em;vertical-align:-2.45em;\"></span><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-4.95em;\"><span class=\"pstrut\" style=\"height:4.95em;\"></span><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-4.95em;\"><span class=\"pstrut\" style=\"height:3.26em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.26em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span></span></span><span style=\"top:-1.3499999999999996em;\"><span class=\"pstrut\" style=\"height:3.26em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"vertical-separator\" style=\"height:5.4em;border-right-width:0.04em;border-right-style:dashed;margin:0 -0.02em;vertical-align:-2.45em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-4.95em;\"><span class=\"pstrut\" style=\"height:3.26em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.26em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span></span></span><span style=\"top:-1.3499999999999996em;\"><span class=\"pstrut\" style=\"height:3.26em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"vertical-separator\" style=\"height:5.4em;border-right-width:0.04em;border-right-style:dashed;margin:0 -0.02em;vertical-align:-2.45em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-4.95em;\"><span class=\"pstrut\" style=\"height:3.26em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.26em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-1.3499999999999996em;\"><span class=\"pstrut\" style=\"height:3.26em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span><span style=\"top:-4.300000000000001em;\"><span class=\"pstrut\" style=\"height:4.95em;\"></span><span class=\"hdashline\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-6.1000000000000005em;\"><span class=\"pstrut\" style=\"height:4.95em;\"></span><span class=\"hline\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"keyword\">\\tilde</span>&#123;a&#125;<span class=\"built_in\">$</span>  <span class=\"built_in\">&amp;</span>nbsp;<span class=\"built_in\">&amp;</span>nbsp; <span class=\"built_in\">&amp;</span>nbsp; <span class=\"built_in\">&amp;</span>nbsp; <span class=\"built_in\">&amp;</span>nbsp; <span class=\"built_in\">$</span><span class=\"keyword\">\\underrightarrow</span>&#123;AB&#125;<span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>a</mi><mo>~</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\tilde{a}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6678599999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span></span></span></span>           <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><munder accentunder=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo stretchy=\"true\">→</mo></munder></mrow><annotation encoding=\"application/x-tex\">\\underrightarrow{AB}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.20533em;vertical-align:-0.522em;\"></span><span class=\"mord accentunder\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span class=\"svg-align\" style=\"top:-2.4779999999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:0.888em;\"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.522em;\"><span></span></span></span></span></span></span></span></span></p>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\"><span class=\"keyword\">\\tilde</span>&#123;a&#125; <span class=\"keyword\">\\underrightarrow</span>&#123;AB&#125;<span class=\"keyword\">\\begin</span>&#123;array&#125;&#123;l&#125;</span><br><span class=\"line\">  a<span class=\"keyword\">\\mathop</span>&#123;x&#125;<span class=\"keyword\">\\nolimits</span><span class=\"built_in\">^</span>&#123;2&#125;+bx+c=0 <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">  <span class=\"keyword\">\\Delta</span> =<span class=\"keyword\">\\mathop</span>&#123;b&#125;<span class=\"keyword\">\\nolimits</span><span class=\"built_in\">^</span>&#123;2&#125;-4ac <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">  <span class=\"keyword\">\\left</span><span class=\"keyword\">\\&#123;</span><span class=\"keyword\">\\begin</span>&#123;matrix&#125;</span><br><span class=\"line\">  <span class=\"keyword\">\\Delta</span> <span class=\"keyword\">\\gt</span> 0<span class=\"keyword\">\\text</span>&#123;方程有两个不相等的实根&#125; <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">  <span class=\"keyword\">\\Delta</span> = 0<span class=\"keyword\">\\text</span>&#123;方程有两个相等的实根&#125; <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">  <span class=\"keyword\">\\Delta</span> <span class=\"keyword\">\\lt</span> 0<span class=\"keyword\">\\text</span>&#123;方程无实根&#125;</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;matrix&#125;<span class=\"keyword\">\\right</span>.</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;array&#125;</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mover accent=\"true\"><mi>a</mi><mo>~</mo></mover><munder accentunder=\"true\"><mrow><mi>A</mi><mi>B</mi></mrow><mo stretchy=\"true\">→</mo></munder><mtable rowspacing=\"0.15999999999999992em\" columnalign=\"left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>a</mi><msup><mo><mi>x</mi></mo><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">Δ</mi><mo>=</mo><msup><mo><mi>b</mi></mo><mn>2</mn></msup><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">Δ</mi><mo>&gt;</mo><mn>0</mn><mtext> 方程有两个不相等的实根</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">Δ</mi><mo>=</mo><mn>0</mn><mtext> 方程有两个相等的实根</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi mathvariant=\"normal\">Δ</mi><mo>&lt;</mo><mn>0</mn><mtext> 方程无实根</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\tilde{a} \\underrightarrow{AB}\\begin{array}{l}\n  a\\mathop{x}\\nolimits^{2}+bx+c=0 \\\\\n  \\Delta =\\mathop{b}\\nolimits^{2}-4ac \\\\\n  \\left\\{\\begin{matrix}\n  \\Delta \\gt 0\\text{ 方程有两个不相等的实根} \\\\\n  \\Delta = 0\\text{ 方程有两个相等的实根} \\\\\n  \\Delta \\lt 0\\text{ 方程无实根}\n\\end{matrix}\\right.\n\\end{array}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.0584880000000005em;vertical-align:-2.7792439999999994em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6678599999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.35em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">~</span></span></span></span></span></span></span><span class=\"mord accentunder\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span class=\"svg-align\" style=\"top:-2.4779999999999998em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:0.888em;\"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.522em;\"><span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2792440000000007em;\"><span style=\"top:-6.489264000000001em;\"><span class=\"pstrut\" style=\"height:4.05002em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop mathnormal\" style=\"position:relative;top:-0.03472em;\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">+</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-5.230816em;\"><span class=\"pstrut\" style=\"height:4.05002em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mop\"><span class=\"mop mathnormal\" style=\"position:relative;top:0.09721999999999997em;\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8984479999999999em;\"><span style=\"top:-3.1473400000000002em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">4</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span></span></span><span style=\"top:-2.8207960000000005em;\"><span class=\"pstrut\" style=\"height:4.05002em;\"></span><span class=\"mord\"><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05002em;\"><span style=\"top:-2.49999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-2.20499em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.15001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.00501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.30002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.55002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.05em;\"><span style=\"top:-4.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">方程有两个不相等的实根</span></span></span></span><span style=\"top:-3.0099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">方程有两个相等的实根</span></span></span></span><span style=\"top:-1.8099999999999994em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span><span class=\"mord text\"><span class=\"mord\"> </span><span class=\"mord cjk_fallback\">方程无实根</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5500000000000007em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7792439999999994em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></p>\n<hr>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>以下为开启<code>Auto-render Extension</code>后支持的公式语法，并不是<code>LaTex</code>的标准语法</p>\n</li>\n</ul>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;equation&#125;</span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;split&#125;   a <span class=\"built_in\">&amp;</span>=b+c<span class=\"keyword\">\\\\</span></span><br><span class=\"line\">      <span class=\"built_in\">&amp;</span>=e+f</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;split&#125;</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;equation&#125;</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: equation at position 7: \\begin{̲e̲q̲u̲a̲t̲i̲o̲n̲}̲\n\\begin{split} …'>\\begin{equation}\n\\begin{split}   a &amp;=b+c\\\\\n      &amp;=e+f\n\\end{split}\n\\end{equation}\n</p>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;align&#125;</span><br><span class=\"line\">   a<span class=\"built_in\">&amp;</span>=b+c <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">   d+e<span class=\"built_in\">&amp;</span>=f</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;align&#125;</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \\begin{̲a̲l̲i̲g̲n̲}̲\n   a&amp;=b+c \\\\\n …'>\\begin{align}\n   a&amp;=b+c \\\\\n   d+e&amp;=f\n\\end{align}\n</p>\n<hr>\n<figure class=\"highlight latex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br><span class=\"line\"><span class=\"keyword\">\\begin</span>&#123;CD&#125;</span><br><span class=\"line\">   A @&gt;a&gt;&gt; B <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">@VbVV @AAcA <span class=\"keyword\">\\\\</span></span><br><span class=\"line\">   C @= D</span><br><span class=\"line\"><span class=\"keyword\">\\end</span>&#123;CD&#125;</span><br><span class=\"line\"><span class=\"built_in\">$</span><span class=\"built_in\">$</span></span><br></pre></td></tr></table></figure>\n<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: CD at position 7: \\begin{̲C̲D̲}̲\n   A @&gt;a&gt;&gt; B \\…'>\\begin{CD}\n   A @&gt;a&gt;&gt; B \\\\\n@VbVV @AAcA \\\\\n   C @= D\n\\end{CD}\n</p>\n","content_text":"摘要 Hexo是基于markdown的，所以可以使用LaTex语法来编写数学公式，只不过需要安装相应的公式渲染插件来实现。 Next主题 支持的公式插件为MathJax和KaTeX，它们都支持LaTex语法，参考: https://theme-next.js.org/docs/third-party-services/math-equations 本文使用的是Katex，原因是我已经使用了hexo-renderer-markdown-it渲染器，其与 mathjax 的 hexo-renderer-pandoc渲染器不能并存，所以只能选Katex了。 安装 详细的安装方法请参考:Math Equations 因为已经使用了hexo-renderer-markdown-it渲染器，所以这里就没有使用hexo-renderer-markdown-it-plus渲染器，其实两者也没有太大的区别，只不过后者默认就加载了一些插件，而前者需要自己安装插件并配置才可以使用。 但是测试时发现，按照官网的配置hexo-renderer-markdown-it + markdown-it-katex 的方式并不能很好的进行公式的渲染，所以这里参考了 hexo-renderer-markdown-it-plus 渲染器，将其更换为@iktakahiro/markdown-it-katex。 1npm install @iktakahiro/markdown-it-katex --save 在_config.yml配置上该插件 123456789101112# config of hexo-renderer-markdown-itmarkdown: render: html: true xhtmlOut: false breaks: true linkify: true typographer: true quotes: &#x27;“”‘’&#x27; plugins: # katex公式 - &quot;@iktakahiro/markdown-it-katex&quot; 安装后遇到的问题 1.安装后发现通过hexo编译时会报类似如下警告 1LaTeX-incompatible input and strict mode is set to &#x27;warn&#x27;: Unicode text character &quot;即&quot; used in math mode [unicodeTextInMathMode] 原因是@iktakahiro/markdown-it-katex插件默认开启的是严格模式，不能在$$...$$或$...$中包含中文，虽然我设置的是math -- every_page: false，但其在编译阶段依旧会检查所有的页面，不过报这个警告并不会有什么影响，所以可以忽略。 如果不希望看到这个警告，可以为 @iktakahiro/markdown-it-katex 添加模式的控制行为 1234567891011121314# config of hexo-renderer-markdown-itmarkdown: render: html: true xhtmlOut: false breaks: true linkify: true typographer: true quotes: &#x27;“”‘’&#x27; plugins: # katex公式 - name: &quot;@iktakahiro/markdown-it-katex&quot; options: strict: error # 默认为warn，这里设置为error，只有当解析器遇到不支持的公式时才报错，也可以设置为 false，表示不检查 不支持Katex的Auto-render Extension 通过查看Katex官网可以知道，开启Auto-render Extension后，Katex可以渲染更多的公式语法，但要注意这并不是LaTex的标准语法 但是@iktakahiro/markdown-it-katex中并没有相应的配置，为了解决这个问题，简单的方法就是将所需要的资源添加到页面中，比如我在source\\_data\\post-body-start.njk中添加了如下内容 1234567891011121314151617181920212223242526&#123;%- if page.mathjax %&#125;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/katex.min.css&quot; integrity=&quot;sha384-nB0miv6/jRmo5UMMR1wu3Gz6NLsoTkbqJghGIsx//Rlm+ZU03BU6SQNC66uf4l5+&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/katex.min.js&quot; integrity=&quot;sha384-7zkQWkzuo3B5mTepMUcHkMB5jZaolc2xDwL6VFqjFALcbeS9Ggm/Yr2r3Dy4lfFg&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&lt;script defer src=&quot;https://cdn.jsdelivr.net/npm/katex@0.16.11/dist/contrib/auto-render.min.js&quot; integrity=&quot;sha384-43gviWU0YVjaDtb/GhzOouOXtZMP/7XUzwPTstBeZFe/+rCMvRwr4yROQP43s0Xk&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&lt;script&gt; document.addEventListener(&quot;DOMContentLoaded&quot;, function() &#123; renderMathInElement(document.body, &#123; // customised options // • auto-render specific keys, e.g.: delimiters: [ &#123;left: &quot;$$&quot;, right: &quot;$$&quot;, display: true&#125;, &#123;left: &quot;\\\\(&quot;, right: &quot;\\\\)&quot;, display: false&#125;, &#123;left: &quot;\\\\begin&#123;equation&#125;&quot;, right: &quot;\\\\end&#123;equation&#125;&quot;, display: true&#125;, &#123;left: &quot;\\\\begin&#123;align&#125;&quot;, right: &quot;\\\\end&#123;align&#125;&quot;, display: true&#125;, &#123;left: &quot;\\\\begin&#123;alignat&#125;&quot;, right: &quot;\\\\end&#123;alignat&#125;&quot;, display: true&#125;, &#123;left: &quot;\\\\begin&#123;gather&#125;&quot;, right: &quot;\\\\end&#123;gather&#125;&quot;, display: true&#125;, &#123;left: &quot;\\\\begin&#123;CD&#125;&quot;, right: &quot;\\\\end&#123;CD&#125;&quot;, display: true&#125;, &#123;left: &quot;\\\\[&quot;, right: &quot;\\\\]&quot;, display: true&#125; ], // • rendering keys, e.g.: throwOnError : false &#125;); &#125;);&lt;/script&gt;&#123;%- endif %&#125; 小贴士 可以通过next模板的_config.yml中的custom_file_path配置项来自定义渲染页面的某个部分，这样对应的每个页面都会加上该模板内容 12custom_file_path: postBodyStart: source/_data/post-body-start.njk 使用hexo-renderer-markdown-it-plus渲染器时，如果修改了页面的内容，此时刷新页面，会发现页面中的公式不能被渲染了，只能重新启动hexo服务。 但是使用hexo-renderer-markdown-it渲染器时，刷新页面后公式就可以被渲染了。 使用 每个页面的front-matter中要添加mathjax: true，这样在页面中就可以使用公式了。 Katex公式的渲染方式支持$...$和$$...$$两种方式 $...$为行级公式 1$sin(\\omega t)=\\frac&#123;1&#125;&#123;2j&#125;(e^&#123;j\\omega t&#125;-e^&#123;-j\\omega t&#125;)$ sin(ωt)=12j(ejωt−e−jωt)sin(\\omega t)=\\frac{1}{2j}(e^{j\\omega t}-e^{-j\\omega t})sin(ωt)=2j1​(ejωt−e−jωt) $$...$$为块级公式，独占一行且居中展示 123$$sin(\\omega t)=\\frac&#123;1&#125;&#123;2j&#125;(e^&#123;j\\omega t&#125;-e^&#123;-j\\omega t&#125;)$$ sin(ωt)=12j(ejωt−e−jωt)sin(\\omega t)=\\frac{1}{2j}(e^{j\\omega t}-e^{-j\\omega t}) sin(ωt)=2j1​(ejωt−e−jωt) $$...$$和$...$中不能出现Unicode字符，否则会报错，即不支持中文，如果需要显示中文，则需要使用\\text&#123;中文&#125; 块级公式，在开头的$$之前和结尾的$$之后，不得有任何字符（空格除外） 行级公式，在开头的$之后和结尾的$之前，不得有空格 示例 使用方式可以参考 KaTeX公式符号 以及 维基百科：LaTeX公式手册 不过记住这些公式符号还是比较困难的，这里推荐两个工具 MyScript: 手写转LaTeX公式，直接将你需要的数学公式画出来，它会自动将其转换为LaTeX公式，然后复制即可 LaTeX公式编辑器: 提供公式模板、图片识别(有次数限制)等功能，并且支持输出各种格式。 Simpletex: 支持LaTex公式图片识别和手写转公式，且无次数限制，但是需要注册账号。同时也提供了客户端版本。 这里随便给几个示例，以下是LaTeX的标准语法 1234$$\\left(\\beta m c^2 + c \\left(\\sum_&#123;n=1&#125;^3\\alpha_n p_n\\right)\\right) \\psi(x,t)= i\\hbar \\frac&#123;\\partial \\psi(x,t)&#125;&#123;\\partial t&#125;$$ (βmc2+c(∑n=13αnpn))ψ(x,t)=iℏ∂ψ(x,t)∂t\\left(\\beta m c^2 + c \\left(\\sum_{n=1}^3\\alpha_n p_n\\right)\\right) \\psi(x,t) = i\\hbar \\frac{\\partial \\psi(x,t)}{\\partial t} (βmc2+c(n=1∑3​αn​pn​))ψ(x,t)=iℏ∂t∂ψ(x,t)​ 1Aha! $E = mc^&#123;2&#125;$. Aha! E=mc2E = mc^{2}E=mc2. 123$$\\left(\\LARGE&#123;AB&#125;\\right)$$ (AB)\\left(\\LARGE{AB}\\right) (AB) 123456$$\\begin&#123;matrix&#125; a &amp; b \\\\ c &amp; d\\end&#123;matrix&#125;$$ abcd\\begin{matrix} a &amp; b \\\\ c &amp; d \\end{matrix} ac​bd​ 123456789$$\\def\\arraystretch&#123;1.5&#125; \\begin&#123;array&#125;&#123;c:c:c&#125; a &amp; b &amp; c \\\\ \\hline d &amp; e &amp; f \\\\ \\hdashline g &amp; h &amp; i\\end&#123;array&#125;$$ abcdefghi\\def\\arraystretch{1.5} \\begin{array}{c:c:c} a &amp; b &amp; c \\\\ \\hline d &amp; e &amp; f \\\\ \\hdashline g &amp; h &amp; i \\end{array} adg​beh​cfi​​ 1$\\tilde&#123;a&#125;$ &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $\\underrightarrow&#123;AB&#125;$ a~\\tilde{a}a~ AB→\\underrightarrow{AB}AB​ 1234567891011$$\\tilde&#123;a&#125; \\underrightarrow&#123;AB&#125;\\begin&#123;array&#125;&#123;l&#125; a\\mathop&#123;x&#125;\\nolimits^&#123;2&#125;+bx+c=0 \\\\ \\Delta =\\mathop&#123;b&#125;\\nolimits^&#123;2&#125;-4ac \\\\ \\left\\&#123;\\begin&#123;matrix&#125; \\Delta \\gt 0\\text&#123;方程有两个不相等的实根&#125; \\\\ \\Delta = 0\\text&#123;方程有两个相等的实根&#125; \\\\ \\Delta \\lt 0\\text&#123;方程无实根&#125;\\end&#123;matrix&#125;\\right.\\end&#123;array&#125;$$ a~AB→ax2+bx+c=0Δ=b2−4ac{Δ&gt;0 方程有两个不相等的实根Δ=0 方程有两个相等的实根Δ&lt;0 方程无实根\\tilde{a} \\underrightarrow{AB}\\begin{array}{l} a\\mathop{x}\\nolimits^{2}+bx+c=0 \\\\ \\Delta =\\mathop{b}\\nolimits^{2}-4ac \\\\ \\left\\{\\begin{matrix} \\Delta \\gt 0\\text{ 方程有两个不相等的实根} \\\\ \\Delta = 0\\text{ 方程有两个相等的实根} \\\\ \\Delta \\lt 0\\text{ 方程无实根} \\end{matrix}\\right. \\end{array} a~AB​ax2+bx+c=0Δ=b2−4ac⎩⎪⎨⎪⎧​Δ&gt;0 方程有两个不相等的实根Δ=0 方程有两个相等的实根Δ&lt;0 方程无实根​​ 以下为开启Auto-render Extension后支持的公式语法，并不是LaTex的标准语法 1234567$$\\begin&#123;equation&#125;\\begin&#123;split&#125; a &amp;=b+c\\\\ &amp;=e+f\\end&#123;split&#125;\\end&#123;equation&#125;$$ \\begin{equation} \\begin{split} a &amp;=b+c\\\\ &amp;=e+f \\end{split} \\end{equation} 123456$$\\begin&#123;align&#125; a&amp;=b+c \\\\ d+e&amp;=f\\end&#123;align&#125;$$ \\begin{align} a&amp;=b+c \\\\ d+e&amp;=f \\end{align} 1234567$$\\begin&#123;CD&#125; A @&gt;a&gt;&gt; B \\\\@VbVV @AAcA \\\\ C @= D\\end&#123;CD&#125;$$ \\begin{CD} A @&gt;a&gt;&gt; B \\\\ @VbVV @AAcA \\\\ C @= D \\end{CD}","summary":"摘要 Hexo是基于markdown的，所以可以使用LaTex语法来编写数学公式，只不过需要安装相应的公式渲染插件来实现。 Next主题 支持的公式插件为MathJax和KaTeX，它们都支持LaTex语法，参考: https://theme-next.js.org/docs/third-party-services/math-equations 本文使用的是Katex，原因是我已经使用了hexo-renderer-markdown-it渲染器，其与 mathjax 的 hexo-renderer-pandoc渲染器不能并存，所以只能选Katex了。","date_published":"2024-11-12T13:55:05.000Z","tags":["Hexo","Hexo"]},{"id":"https://blog.hanqunfeng.com/2024/09/05/linux-zabbix_vfs_fs_inode/","url":"https://blog.hanqunfeng.com/2024/09/05/linux-zabbix_vfs_fs_inode/","title":"zabbix监控告警--vfs.fs.inode不足5%的解决过程","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>解决Linux索引节点(inode)用满导致故障的方法</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"zabbix告警\">zabbix告警</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vfs.fs.inode[/,pfree]):5 %</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决过程\">解决过程</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>登录linux系统后查看inode使用情况和磁盘使用情况</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># inode 不足了</span></span><br><span class=\"line\"><span class=\"built_in\">df</span> -hi</span><br><span class=\"line\">文件系统\t      Inode  已用(I)  可用(I) 已用(I)%% 挂载点</span><br><span class=\"line\">/dev/xvda1              1.9M    1.8M     96K   96% /</span><br><span class=\"line\">tmpfs                   251K       1    251K    1% /dev/shm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># disk 充足</span></span><br><span class=\"line\"><span class=\"built_in\">df</span> -hT</span><br><span class=\"line\">文件系统    类型      容量  已用  可用 已用%% 挂载点</span><br><span class=\"line\">/dev/xvda1    ext4     30G   18G   12G  61% /</span><br><span class=\"line\">tmpfs        tmpfs   1003M     0 1003M   0% /dev/shm</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>根据上面的查询结果初步判断是系统产生了大量的临时文件导致inode用尽了</p>\n</li>\n<li class=\"lvl-2\">\n<p>排查到底哪个目录下的文件数过多</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过下面的命令统计文件数量前十名，这里发现是/var目录中文件异常的多</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> /*; <span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(find $i |wc -l)</span>:<span class=\"variable\">$i</span>&quot;</span>; <span class=\"keyword\">done</span> | <span class=\"built_in\">sort</span> -nr | <span class=\"built_in\">head</span> -n 10</span><br><span class=\"line\">1815728:/var</span><br><span class=\"line\">52498:/usr</span><br><span class=\"line\">18804:/proc</span><br><span class=\"line\">7333:/sys</span><br><span class=\"line\">1834:/lib</span><br><span class=\"line\">1447:/opt</span><br><span class=\"line\">1047:/etc</span><br><span class=\"line\">457:/dev</span><br><span class=\"line\">411:/lib64</span><br><span class=\"line\">245:/sbin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 接着查看/var中的文件数量</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> /var/*; <span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(find $i |wc -l)</span>:<span class=\"variable\">$i</span>&quot;</span>; <span class=\"keyword\">done</span> | <span class=\"built_in\">sort</span> -nr | <span class=\"built_in\">head</span> -n 10</span><br><span class=\"line\">1813442:/var/spool</span><br><span class=\"line\">2033:/var/lib</span><br><span class=\"line\">85:/var/cache</span><br><span class=\"line\">82:/var/log</span><br><span class=\"line\">39:/var/run</span><br><span class=\"line\">24:/var/lock</span><br><span class=\"line\">7:/var/db</span><br><span class=\"line\">3:/var/yp</span><br><span class=\"line\">2:/var/empty</span><br><span class=\"line\">2:/var/account</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 接着查看/var/spool中的文件数量，这里基本定位到是/var/spool/clientmqueue目录</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> /var/spool/*; <span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"subst\">$(find $i |wc -l)</span>:<span class=\"variable\">$i</span>&quot;</span>; <span class=\"keyword\">done</span> | <span class=\"built_in\">sort</span> -nr | <span class=\"built_in\">head</span> -n 10</span><br><span class=\"line\">1812413:/var/spool/clientmqueue</span><br><span class=\"line\">7:/var/spool/mail</span><br><span class=\"line\">4:/var/spool/anacron</span><br><span class=\"line\">3:/var/spool/at</span><br><span class=\"line\">2:/var/spool/cron</span><br><span class=\"line\">1:/var/spool/mqueue</span><br><span class=\"line\">1:/var/spool/lpd</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>百度一下<code>/var/spool/clientmqueue</code>目录的作用</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">‌Linux文件目录 /var/spool/clientmqueue/ 下的文件主要是由cron任务产生的输出文件。‌ 当cron任务中有输出内容时，如果服务器上没有配置sendmail服务，这些输出内容就会被保存到 /var/spool/clientmqueue/ 目录内。这是因为cron任务中的命令如果有输出（比如错误信息或者正常的输出信息），默认会通过sendmail发送，但如果服务器上没有配置sendmail服务，这些输出内容就会被保存到 /var/spool/clientmqueue/ 目录中。因此，这个目录下主要包含的是由cron任务产生的输出文件，这些文件记录了cron任务执行过程中的输出信息。</span><br><span class=\"line\"></span><br><span class=\"line\">如果需要处理这些文件，可以通过修改crontab配置来实现。具体来说，可以在每个cron任务命令的末尾添加重定向操作，将输出内容抛弃，例如使用命令 &gt;/dev/null 2&gt;&amp;1。这样，无论标准输出还是错误输出都会被重定向到 /dev/null，即被抛弃，从而避免在 /var/spool/clientmqueue/ 目录下产生不必要的文件。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>上面的解释说明<code>/var/spool/clientmqueue</code>目录下的文件可以被删除，所以直接删了就可以解决该问题了</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 文件数量过多，不能这么删除</span></span><br><span class=\"line\"><span class=\"comment\"># rm -rf /var/spool/clientmqueue/*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正确方法</span></span><br><span class=\"line\">find /var/spool/clientmqueue -name <span class=\"string\">&quot;*&quot;</span> -<span class=\"built_in\">type</span> f | xargs <span class=\"built_in\">rm</span> -rf</span><br></pre></td></tr></table></figure>\n<h2 id=\"详解inode\">详解inode</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>inode是文件系统内一个重要的数据结构，它用来描述一个文件，包括文件名、文件类型、权限、所有者、创建时间、修改时间等。在Linux系统中，每个文件都有一个唯一的inode号，这个inode号是分配给该文件的，并且不能被改变。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前目录的inode号</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -li</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>操作系统打开文件时会按如下步骤执行：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">查找文件名称对应的inode号</li>\n<li class=\"lvl-6\">根据inode号获取inode信息</li>\n<li class=\"lvl-6\">根据inode信息找到文件对应的数据块，读出数据</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>inode的大小是有限制的，通常取决于文件系统和操作系统。在大多数Linux文件系统中，inode大小通常是128字节或256字节。这是由文件系统在格式化时决定的，并且格式化后不能更改。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看inode大小</span></span><br><span class=\"line\">dumpe2fs /dev/xvda1 | grep <span class=\"string\">&quot;Inode size&quot;</span></span><br><span class=\"line\">dumpe2fs 1.43.5 (04-Aug-2017)</span><br><span class=\"line\">Inode size:\t          256</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看文件系统的inode总数</p>\n</li>\n</ul>\n<blockquote>\n<p>一个inode只对应一个实际文件，所以inodes最大数量就是文件的最大数量。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看所有挂载磁盘</span></span><br><span class=\"line\"><span class=\"built_in\">df</span> -i</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看指定磁盘</span></span><br><span class=\"line\"><span class=\"built_in\">df</span> -i /dev/xvda1</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>不同的文件系统默认的inode数量不同，以<code>1G</code>磁盘空间为例，<code>ext4</code>文件系统默认为<code>65536</code>，<code>xfs</code>文件系统默认为<code>52万</code>(每2k设置一个inode)，并且<code>xfs</code>会动态扩容inode数量。</p>\n</li>\n</ul>\n","content_text":"摘要 解决Linux索引节点(inode)用满导致故障的方法 zabbix告警 1vfs.fs.inode[/,pfree]):5 % 解决过程 登录linux系统后查看inode使用情况和磁盘使用情况 1234567891011# inode 不足了df -hi文件系统 Inode 已用(I) 可用(I) 已用(I)%% 挂载点/dev/xvda1 1.9M 1.8M 96K 96% /tmpfs 251K 1 251K 1% /dev/shm# disk 充足df -hT文件系统 类型 容量 已用 可用 已用%% 挂载点/dev/xvda1 ext4 30G 18G 12G 61% /tmpfs tmpfs 1003M 0 1003M 0% /dev/shm 根据上面的查询结果初步判断是系统产生了大量的临时文件导致inode用尽了 排查到底哪个目录下的文件数过多 1234567891011121314151617181920212223242526272829303132333435# 通过下面的命令统计文件数量前十名，这里发现是/var目录中文件异常的多for i in /*; do echo &quot;$(find $i |wc -l):$i&quot;; done | sort -nr | head -n 101815728:/var52498:/usr18804:/proc7333:/sys1834:/lib1447:/opt1047:/etc457:/dev411:/lib64245:/sbin# 接着查看/var中的文件数量for i in /var/*; do echo &quot;$(find $i |wc -l):$i&quot;; done | sort -nr | head -n 101813442:/var/spool2033:/var/lib85:/var/cache82:/var/log39:/var/run24:/var/lock7:/var/db3:/var/yp2:/var/empty2:/var/account# 接着查看/var/spool中的文件数量，这里基本定位到是/var/spool/clientmqueue目录for i in /var/spool/*; do echo &quot;$(find $i |wc -l):$i&quot;; done | sort -nr | head -n 101812413:/var/spool/clientmqueue7:/var/spool/mail4:/var/spool/anacron3:/var/spool/at2:/var/spool/cron1:/var/spool/mqueue1:/var/spool/lpd 百度一下/var/spool/clientmqueue目录的作用 123‌Linux文件目录 /var/spool/clientmqueue/ 下的文件主要是由cron任务产生的输出文件。‌ 当cron任务中有输出内容时，如果服务器上没有配置sendmail服务，这些输出内容就会被保存到 /var/spool/clientmqueue/ 目录内。这是因为cron任务中的命令如果有输出（比如错误信息或者正常的输出信息），默认会通过sendmail发送，但如果服务器上没有配置sendmail服务，这些输出内容就会被保存到 /var/spool/clientmqueue/ 目录中。因此，这个目录下主要包含的是由cron任务产生的输出文件，这些文件记录了cron任务执行过程中的输出信息。如果需要处理这些文件，可以通过修改crontab配置来实现。具体来说，可以在每个cron任务命令的末尾添加重定向操作，将输出内容抛弃，例如使用命令 &gt;/dev/null 2&gt;&amp;1。这样，无论标准输出还是错误输出都会被重定向到 /dev/null，即被抛弃，从而避免在 /var/spool/clientmqueue/ 目录下产生不必要的文件。 上面的解释说明/var/spool/clientmqueue目录下的文件可以被删除，所以直接删了就可以解决该问题了 12345# 文件数量过多，不能这么删除# rm -rf /var/spool/clientmqueue/*# 正确方法find /var/spool/clientmqueue -name &quot;*&quot; -type f | xargs rm -rf 详解inode inode是文件系统内一个重要的数据结构，它用来描述一个文件，包括文件名、文件类型、权限、所有者、创建时间、修改时间等。在Linux系统中，每个文件都有一个唯一的inode号，这个inode号是分配给该文件的，并且不能被改变。 12# 查看当前目录的inode号ls -li 操作系统打开文件时会按如下步骤执行： 查找文件名称对应的inode号 根据inode号获取inode信息 根据inode信息找到文件对应的数据块，读出数据 inode的大小是有限制的，通常取决于文件系统和操作系统。在大多数Linux文件系统中，inode大小通常是128字节或256字节。这是由文件系统在格式化时决定的，并且格式化后不能更改。 1234# 查看inode大小dumpe2fs /dev/xvda1 | grep &quot;Inode size&quot;dumpe2fs 1.43.5 (04-Aug-2017)Inode size: 256 查看文件系统的inode总数 一个inode只对应一个实际文件，所以inodes最大数量就是文件的最大数量。 12345# 查看所有挂载磁盘df -i# 查看指定磁盘df -i /dev/xvda1 不同的文件系统默认的inode数量不同，以1G磁盘空间为例，ext4文件系统默认为65536，xfs文件系统默认为52万(每2k设置一个inode)，并且xfs会动态扩容inode数量。","summary":"摘要 解决Linux索引节点(inode)用满导致故障的方法","date_published":"2024-09-05T14:30:05.000Z","tags":["技术","linux","zabbix","linux","zabbix"]},{"id":"https://blog.hanqunfeng.com/2024/08/02/gradle-depoly-maven-center-repository-new/","url":"https://blog.hanqunfeng.com/2024/08/02/gradle-depoly-maven-center-repository-new/","title":"发布Jar到Maven中央仓库--Gradle版(最新方式)","content_html":"<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\"><a href=\"https://oss.sonatype.org\">https://oss.sonatype.org</a>已经不再支持新用户注册，新的注册地址为<a href=\"https://central.sonatype.com\">https://central.sonatype.com</a></li>\n<li class=\"lvl-2\">通过本文，你将知道如何将Gradle构建的项目发布到Maven中央仓库</li>\n<li class=\"lvl-2\">Maven构建方式请看 <a href=\"/2024/08/01/mvn-depoly-maven-center-repository-new/\" title=\"发布Jar到Maven中央仓库--Maven版(最新方式)\">发布Jar到Maven中央仓库--Maven版(最新方式)</a> 。</li>\n<li class=\"lvl-2\">前三个步骤与 <a href=\"/2024/08/01/mvn-depoly-maven-center-repository-new/\" title=\"发布Jar到Maven中央仓库--Maven版(最新方式)\">发布Jar到Maven中央仓库--Maven版(最新方式)</a> 相同，不在赘述。</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"一、将项目推送到远程仓库，如-Github或者Gitee\">一、将项目推送到远程仓库，如 <code>Github</code>或者<code>Gitee</code></h2>\n<h2 id=\"二、注册-Sonatype-账户\">二、注册 <code>Sonatype</code> 账户</h2>\n<h2 id=\"三、登录-Sonatype-创建Namespace\">三、登录 Sonatype 创建<code>Namespace</code></h2>\n<p>前三个步骤与 <a href=\"/2024/08/01/mvn-depoly-maven-center-repository-new/\" title=\"发布Jar到Maven中央仓库--Maven版(最新方式)\">发布Jar到Maven中央仓库--Maven版(最新方式)</a> 相同，不在赘述。</p>\n<h2 id=\"四、发布\">四、发布</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>签名<br>\n我是mac电脑，于是签名工具使用的是<a href=\"https://gpgtools.org\">https://gpgtools.org</a>，gradle签名时需要使用到<code>.gpg</code>证书文件，这个工具不支持直接导出<code>.gpg</code>，其导出的证书文件是<code>.asc</code>格式的，<code>asc</code>其实就是<code>字符串</code>，可以用记事本打开查看。</p>\n<p>使用如下命令导出<code>.gpg</code>格式的证书：</p>\n  <figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出当前全部证书</span></span><br><span class=\"line\">gpg -k</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导出私钥，qunfeng_han@126.com是创建证书时使用的邮箱，会要求你输入创建证书时的密码</span></span><br><span class=\"line\">gpg --output private.pgp --armor --export-secret-key qunfeng_han@126.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导出公钥</span></span><br><span class=\"line\">gpg --output public.pgp --armor --<span class=\"built_in\">export</span> qunfeng_han@126.com</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-2\">\n<p>build.gradle<br>\n官方没有出gradle发布插件，但是<a href=\"https://central.sonatype.org/publish/publish-portal-gradle/\">官网</a>推荐使用第三方的<a href=\"https://jreleaser.org/guide/latest/examples/maven/maven-central.html#_gradle\">jreleaser</a>插件。</p>\n</li>\n</ul>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins &#123;</span><br><span class=\"line\"><span class=\"comment\">//    id &#x27;io.spring.dependency-management&#x27; version &#x27;1.0.10.RELEASE&#x27;</span></span><br><span class=\"line\">    id <span class=\"string\">&#x27;io.spring.dependency-management&#x27;</span> version <span class=\"string\">&#x27;1.1.6&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">//此处必须是java-library，如果是java则api方法不可用，api可以理解为就是compile，支持传递依赖</span></span><br><span class=\"line\">    id <span class=\"string\">&#x27;java-library&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">//发布插件</span></span><br><span class=\"line\">    id <span class=\"string\">&#x27;maven-publish&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">//自动发布到maven中央仓库插件</span></span><br><span class=\"line\">    <span class=\"comment\">//https://jreleaser.org/guide/latest/examples/maven/maven-central.html#_gradle</span></span><br><span class=\"line\">    id <span class=\"string\">&#x27;org.jreleaser&#x27;</span> version <span class=\"string\">&#x27;1.13.1&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">group</span> = <span class=\"string\">&#x27;io.github.hanqunfeng&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">//version = &#x27;1.0.0-SNAPSHOT&#x27;</span></span><br><span class=\"line\">version = <span class=\"string\">&#x27;1.0.1&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">sourceCompatibility</span> = <span class=\"string\">&#x27;1.8&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">java &#123;</span><br><span class=\"line\">    withJavadocJar()</span><br><span class=\"line\">    withSourcesJar()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">    maven &#123; url <span class=\"string\">&#x27;https://maven.aliyun.com/repository/public/&#x27;</span> &#125;</span><br><span class=\"line\">    mavenLocal()</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencyManagement &#123;</span><br><span class=\"line\">    imports &#123; mavenBom(<span class=\"string\">&quot;software.amazon.awssdk:bom:2.23.10&quot;</span>) &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//lombok</span></span><br><span class=\"line\">    compileOnly <span class=\"string\">&#x27;org.projectlombok:lombok:1.18.32&#x27;</span></span><br><span class=\"line\">    annotationProcessor <span class=\"string\">&#x27;org.projectlombok:lombok:1.18.32&#x27;</span></span><br><span class=\"line\">    api <span class=\"string\">&#x27;software.amazon.awssdk:s3&#x27;</span></span><br><span class=\"line\">    api <span class=\"string\">&#x27;software.amazon.awssdk:apache-client&#x27;</span></span><br><span class=\"line\">    api <span class=\"string\">&#x27;software.amazon.awssdk:s3-transfer-manager&#x27;</span></span><br><span class=\"line\">    api <span class=\"string\">&#x27;software.amazon.awssdk:aws-crt-client&#x27;</span></span><br><span class=\"line\">    api <span class=\"string\">&#x27;org.springframework:spring-core:5.3.29&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// java编译的时候缺省状态下会因为中文字符而失败</span></span><br><span class=\"line\">[compileJava, compileTestJava]*.<span class=\"keyword\">options</span>*.encoding = <span class=\"string\">&#x27;UTF-8&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 发布插件</span></span><br><span class=\"line\"><span class=\"comment\"> * 参考：https://docs.gradle.org/6.6.1/userguide/publishing_maven.html#publishing_maven:resolved_dependencies</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 发布为bom，参考：https://zhuanlan.zhihu.com/p/195678201</span></span><br><span class=\"line\"><span class=\"comment\"> * 注意：java-platform不能与java和java-library同时存在</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">publishing &#123;</span><br><span class=\"line\">    publications &#123;</span><br><span class=\"line\">        maven(MavenPublication) &#123;</span><br><span class=\"line\">            groupId = <span class=\"keyword\">project</span>.<span class=\"keyword\">group</span></span><br><span class=\"line\">            artifactId = <span class=\"keyword\">project</span>.name</span><br><span class=\"line\">            version = <span class=\"keyword\">project</span>.version</span><br><span class=\"line\">            <span class=\"comment\">//如果不定义，则会按照以上默认值执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">from</span> components.java</span><br><span class=\"line\"></span><br><span class=\"line\">            pom &#123;</span><br><span class=\"line\">                name = <span class=\"string\">&#x27;aws-s3-v2-tools-gradle&#x27;</span></span><br><span class=\"line\">                <span class=\"keyword\">description</span> = <span class=\"string\">&#x27;AWS S3 Tools.&#x27;</span></span><br><span class=\"line\">                url = <span class=\"string\">&#x27;https://blog.hanqunfeng.com&#x27;</span></span><br><span class=\"line\">                licenses &#123;</span><br><span class=\"line\">                    license &#123;</span><br><span class=\"line\">                        name = <span class=\"string\">&#x27;The Apache License, Version 2.0&#x27;</span></span><br><span class=\"line\">                        url = <span class=\"string\">&#x27;http://www.apache.org/licenses/LICENSE-2.0.txt&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                developers &#123;</span><br><span class=\"line\">                    developer &#123;</span><br><span class=\"line\">                        id = <span class=\"string\">&#x27;hanqf&#x27;</span></span><br><span class=\"line\">                        name = <span class=\"string\">&#x27;han qunfeng&#x27;</span></span><br><span class=\"line\">                        email = <span class=\"string\">&#x27;qunfeng_han@126.com&#x27;</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                scm &#123;</span><br><span class=\"line\">                    connection = <span class=\"string\">&#x27;scm:git:https://github.com/hanqunfeng/aws-s3-v2-tools-gradle.git&#x27;</span></span><br><span class=\"line\">                    developerConnection = <span class=\"string\">&#x27;scm:git:https://github.com:hanqunfeng/aws-s3-v2-tools-gradle.git&#x27;</span></span><br><span class=\"line\">                    url = <span class=\"string\">&#x27;https://github.com/hanqunfeng/aws-s3-v2-tools-gradle&#x27;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            versionMapping &#123;</span><br><span class=\"line\">                usage(<span class=\"string\">&#x27;java-api&#x27;</span>) &#123;</span><br><span class=\"line\">                    fromResolutionOf(<span class=\"string\">&#x27;runtimeClasspath&#x27;</span>)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                usage(<span class=\"string\">&#x27;java-runtime&#x27;</span>) &#123;</span><br><span class=\"line\">                    fromResolutionResult()</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\">            url = layout.buildDirectory.dir(<span class=\"string\">&#x27;staging-deploy&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">tasks.withType(JavaCompile) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">options</span>.encoding = <span class=\"string\">&#x27;UTF-8&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//javadoc，如果用jdk11，默认就支持中文</span></span><br><span class=\"line\"><span class=\"comment\">//查看可以配置的属性：https://docs.gradle.org/current/javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.html</span></span><br><span class=\"line\">tasks.withType(Javadoc) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">options</span>.version = <span class=\"keyword\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">options</span>.author = <span class=\"keyword\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">options</span>.encoding = <span class=\"string\">&quot;UTF-8&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">options</span>.charSet = <span class=\"string\">&quot;UTF-8&quot;</span>  <span class=\"comment\">//解决中文乱码</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">javadoc &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (JavaVersion.current().isJava9Compatible()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">options</span>.addBooleanOption(<span class=\"string\">&#x27;html5&#x27;</span>, <span class=\"keyword\">true</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (JavaVersion.current().isJava8Compatible()) &#123;</span><br><span class=\"line\">        tasks.withType(Javadoc) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// disable the crazy super-strict doclint tool in Java 8</span></span><br><span class=\"line\">            <span class=\"comment\">// noinspection SpellCheckingInspection</span></span><br><span class=\"line\">            <span class=\"keyword\">options</span>.addStringOption(<span class=\"string\">&#x27;Xdoclint:none&#x27;</span>, <span class=\"string\">&#x27;-quiet&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// jreleaser配置文件：~/.jreleaser/config.toml</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">JRELEASER_MAVENCENTRAL_USERNAME = &quot;&lt;your-publisher-portal-username&gt;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">JRELEASER_MAVENCENTRAL_PASSWORD = &quot;&lt;your-publisher-portal-password&gt;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">JRELEASER_NEXUS2_USERNAME = &quot;&lt;your-sonatype-account-username&gt;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">JRELEASER_NEXUS2_PASSWORD = &quot;&lt;your-sonatype-account-password&gt;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">JRELEASER_GPG_PASSPHRASE = &quot;&lt;your-pgp-passphrase&gt;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">JRELEASER_GITHUB_TOKEN = &quot;&lt;your-github-token&quot;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">jreleaser &#123;</span><br><span class=\"line\">    signing &#123;</span><br><span class=\"line\">        active = <span class=\"string\">&#x27;ALWAYS&#x27;</span></span><br><span class=\"line\">        armored = <span class=\"keyword\">true</span></span><br><span class=\"line\">        mode = <span class=\"string\">&#x27;FILE&#x27;</span></span><br><span class=\"line\">        publicKey = <span class=\"string\">&#x27;/Users/hanqf/develop_soft/gpg_key/hanqf/public.pgp&#x27;</span></span><br><span class=\"line\">        secretKey = <span class=\"string\">&#x27;/Users/hanqf/develop_soft/gpg_key/hanqf/private.pgp&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    deploy &#123;</span><br><span class=\"line\">        maven &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">/* Portal Publisher API */</span></span><br><span class=\"line\">            mavenCentral &#123;</span><br><span class=\"line\">                sonatype &#123;</span><br><span class=\"line\">                    active = <span class=\"string\">&#x27;ALWAYS&#x27;</span></span><br><span class=\"line\">                    url = <span class=\"string\">&#x27;https://central.sonatype.com/api/v1/publisher&#x27;</span></span><br><span class=\"line\">                    stagingRepository(<span class=\"string\">&#x27;build/staging-deploy&#x27;</span>)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>~/.jreleaser/config.toml ：配置相关认证信息</p>\n</li>\n</ul>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># https://central.sonatype.com 的认证信息</span></span><br><span class=\"line\"><span class=\"attr\">JRELEASER_MAVENCENTRAL_USERNAME</span> = <span class=\"string\">&quot;&lt;your-publisher-portal-username&gt;&quot;</span></span><br><span class=\"line\"><span class=\"attr\">JRELEASER_MAVENCENTRAL_PASSWORD</span> = <span class=\"string\">&quot;&lt;your-publisher-portal-password&gt;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># https://oss.sonatype.org 的认证信息，这里没有用到，可以不进行配置</span></span><br><span class=\"line\"><span class=\"attr\">JRELEASER_NEXUS2_USERNAME</span> = <span class=\"string\">&quot;&lt;your-sonatype-account-username&gt;&quot;</span></span><br><span class=\"line\"><span class=\"attr\">JRELEASER_NEXUS2_PASSWORD</span> = <span class=\"string\">&quot;&lt;your-sonatype-account-password&gt;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 创建 pgp 密钥时的密码</span></span><br><span class=\"line\"><span class=\"attr\">JRELEASER_GPG_PASSPHRASE</span> = <span class=\"string\">&quot;&lt;your-pgp-passphrase&gt;&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># github token</span></span><br><span class=\"line\"><span class=\"attr\">JRELEASER_GITHUB_TOKEN</span> = <span class=\"string\">&quot;&lt;your-github-token&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>执行命令</p>\n</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew jreleaserConfig <span class=\"comment\"># 验证配置文件是否正确</span></span><br><span class=\"line\">./gradlew clean publish <span class=\"comment\"># 发布到本地 build/staging-deploy</span></span><br><span class=\"line\">./gradlew jreleaserFullRelease <span class=\"comment\"># 发布到远程Maven中央仓库</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>更新部署<br>\n与 <a href=\"/2024/08/01/mvn-depoly-maven-center-repository-new/\" title=\"发布Jar到Maven中央仓库--Maven版(最新方式)\">发布Jar到Maven中央仓库--Maven版(最新方式)</a> 中的描述类似，只需要修改<code>build.gradle</code>中对应的版本号后重新执行上面的发布命令即可，发布的jar包可以在<a href=\"https://central.sonatype.com\">https://central.sonatype.com</a>中检索。</p>\n</li>\n</ul>\n","content_text":"摘要 https://oss.sonatype.org已经不再支持新用户注册，新的注册地址为https://central.sonatype.com 通过本文，你将知道如何将Gradle构建的项目发布到Maven中央仓库 Maven构建方式请看 发布Jar到Maven中央仓库--Maven版(最新方式) 。 前三个步骤与 发布Jar到Maven中央仓库--Maven版(最新方式) 相同，不在赘述。 一、将项目推送到远程仓库，如 Github或者Gitee 二、注册 Sonatype 账户 三、登录 Sonatype 创建Namespace 前三个步骤与 发布Jar到Maven中央仓库--Maven版(最新方式) 相同，不在赘述。 四、发布 签名 我是mac电脑，于是签名工具使用的是https://gpgtools.org，gradle签名时需要使用到.gpg证书文件，这个工具不支持直接导出.gpg，其导出的证书文件是.asc格式的，asc其实就是字符串，可以用记事本打开查看。 使用如下命令导出.gpg格式的证书： 12345678# 列出当前全部证书gpg -k# 导出私钥，qunfeng_han@126.com是创建证书时使用的邮箱，会要求你输入创建证书时的密码gpg --output private.pgp --armor --export-secret-key qunfeng_han@126.com# 导出公钥gpg --output public.pgp --armor --export qunfeng_han@126.com build.gradle 官方没有出gradle发布插件，但是官网推荐使用第三方的jreleaser插件。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170plugins &#123;// id &#x27;io.spring.dependency-management&#x27; version &#x27;1.0.10.RELEASE&#x27; id &#x27;io.spring.dependency-management&#x27; version &#x27;1.1.6&#x27; //此处必须是java-library，如果是java则api方法不可用，api可以理解为就是compile，支持传递依赖 id &#x27;java-library&#x27; //发布插件 id &#x27;maven-publish&#x27; //自动发布到maven中央仓库插件 //https://jreleaser.org/guide/latest/examples/maven/maven-central.html#_gradle id &#x27;org.jreleaser&#x27; version &#x27;1.13.1&#x27;&#125;group = &#x27;io.github.hanqunfeng&#x27;//version = &#x27;1.0.0-SNAPSHOT&#x27;version = &#x27;1.0.1&#x27;sourceCompatibility = &#x27;1.8&#x27;java &#123; withJavadocJar() withSourcesJar()&#125;repositories &#123; maven &#123; url &#x27;https://maven.aliyun.com/repository/public/&#x27; &#125; mavenLocal() mavenCentral()&#125;dependencyManagement &#123; imports &#123; mavenBom(&quot;software.amazon.awssdk:bom:2.23.10&quot;) &#125;&#125;dependencies &#123; //lombok compileOnly &#x27;org.projectlombok:lombok:1.18.32&#x27; annotationProcessor &#x27;org.projectlombok:lombok:1.18.32&#x27; api &#x27;software.amazon.awssdk:s3&#x27; api &#x27;software.amazon.awssdk:apache-client&#x27; api &#x27;software.amazon.awssdk:s3-transfer-manager&#x27; api &#x27;software.amazon.awssdk:aws-crt-client&#x27; api &#x27;org.springframework:spring-core:5.3.29&#x27;&#125;// java编译的时候缺省状态下会因为中文字符而失败[compileJava, compileTestJava]*.options*.encoding = &#x27;UTF-8&#x27;/** * 发布插件 * 参考：https://docs.gradle.org/6.6.1/userguide/publishing_maven.html#publishing_maven:resolved_dependencies * * 发布为bom，参考：https://zhuanlan.zhihu.com/p/195678201 * 注意：java-platform不能与java和java-library同时存在 */publishing &#123; publications &#123; maven(MavenPublication) &#123; groupId = project.group artifactId = project.name version = project.version //如果不定义，则会按照以上默认值执行 from components.java pom &#123; name = &#x27;aws-s3-v2-tools-gradle&#x27; description = &#x27;AWS S3 Tools.&#x27; url = &#x27;https://blog.hanqunfeng.com&#x27; licenses &#123; license &#123; name = &#x27;The Apache License, Version 2.0&#x27; url = &#x27;http://www.apache.org/licenses/LICENSE-2.0.txt&#x27; &#125; &#125; developers &#123; developer &#123; id = &#x27;hanqf&#x27; name = &#x27;han qunfeng&#x27; email = &#x27;qunfeng_han@126.com&#x27; &#125; &#125; scm &#123; connection = &#x27;scm:git:https://github.com/hanqunfeng/aws-s3-v2-tools-gradle.git&#x27; developerConnection = &#x27;scm:git:https://github.com:hanqunfeng/aws-s3-v2-tools-gradle.git&#x27; url = &#x27;https://github.com/hanqunfeng/aws-s3-v2-tools-gradle&#x27; &#125; &#125; versionMapping &#123; usage(&#x27;java-api&#x27;) &#123; fromResolutionOf(&#x27;runtimeClasspath&#x27;) &#125; usage(&#x27;java-runtime&#x27;) &#123; fromResolutionResult() &#125; &#125; &#125; &#125; repositories &#123; maven &#123; url = layout.buildDirectory.dir(&#x27;staging-deploy&#x27;) &#125; &#125;&#125;tasks.withType(JavaCompile) &#123; options.encoding = &#x27;UTF-8&#x27;&#125;//javadoc，如果用jdk11，默认就支持中文//查看可以配置的属性：https://docs.gradle.org/current/javadoc/org/gradle/external/javadoc/StandardJavadocDocletOptions.htmltasks.withType(Javadoc) &#123; options.version = true options.author = true options.encoding = &quot;UTF-8&quot; options.charSet = &quot;UTF-8&quot; //解决中文乱码&#125;javadoc &#123; if (JavaVersion.current().isJava9Compatible()) &#123; options.addBooleanOption(&#x27;html5&#x27;, true) &#125; if (JavaVersion.current().isJava8Compatible()) &#123; tasks.withType(Javadoc) &#123; // disable the crazy super-strict doclint tool in Java 8 // noinspection SpellCheckingInspection options.addStringOption(&#x27;Xdoclint:none&#x27;, &#x27;-quiet&#x27;) &#125; &#125;&#125;// jreleaser配置文件：~/.jreleaser/config.toml/*JRELEASER_MAVENCENTRAL_USERNAME = &quot;&lt;your-publisher-portal-username&gt;&quot;JRELEASER_MAVENCENTRAL_PASSWORD = &quot;&lt;your-publisher-portal-password&gt;&quot;JRELEASER_NEXUS2_USERNAME = &quot;&lt;your-sonatype-account-username&gt;&quot;JRELEASER_NEXUS2_PASSWORD = &quot;&lt;your-sonatype-account-password&gt;&quot;JRELEASER_GPG_PASSPHRASE = &quot;&lt;your-pgp-passphrase&gt;&quot;JRELEASER_GITHUB_TOKEN = &quot;&lt;your-github-token&quot; */jreleaser &#123; signing &#123; active = &#x27;ALWAYS&#x27; armored = true mode = &#x27;FILE&#x27; publicKey = &#x27;/Users/hanqf/develop_soft/gpg_key/hanqf/public.pgp&#x27; secretKey = &#x27;/Users/hanqf/develop_soft/gpg_key/hanqf/private.pgp&#x27; &#125; deploy &#123; maven &#123; /* Portal Publisher API */ mavenCentral &#123; sonatype &#123; active = &#x27;ALWAYS&#x27; url = &#x27;https://central.sonatype.com/api/v1/publisher&#x27; stagingRepository(&#x27;build/staging-deploy&#x27;) &#125; &#125; &#125; &#125;&#125; ~/.jreleaser/config.toml ：配置相关认证信息 12345678910# https://central.sonatype.com 的认证信息JRELEASER_MAVENCENTRAL_USERNAME = &quot;&lt;your-publisher-portal-username&gt;&quot;JRELEASER_MAVENCENTRAL_PASSWORD = &quot;&lt;your-publisher-portal-password&gt;&quot;# https://oss.sonatype.org 的认证信息，这里没有用到，可以不进行配置JRELEASER_NEXUS2_USERNAME = &quot;&lt;your-sonatype-account-username&gt;&quot;JRELEASER_NEXUS2_PASSWORD = &quot;&lt;your-sonatype-account-password&gt;&quot;# 创建 pgp 密钥时的密码JRELEASER_GPG_PASSPHRASE = &quot;&lt;your-pgp-passphrase&gt;&quot;# github tokenJRELEASER_GITHUB_TOKEN = &quot;&lt;your-github-token&quot; 执行命令 123./gradlew jreleaserConfig # 验证配置文件是否正确./gradlew clean publish # 发布到本地 build/staging-deploy./gradlew jreleaserFullRelease # 发布到远程Maven中央仓库 更新部署 与 发布Jar到Maven中央仓库--Maven版(最新方式) 中的描述类似，只需要修改build.gradle中对应的版本号后重新执行上面的发布命令即可，发布的jar包可以在https://central.sonatype.com中检索。","summary":"摘要 https://oss.sonatype.org已经不再支持新用户注册，新的注册地址为https://central.sonatype.com 通过本文，你将知道如何将Gradle构建的项目发布到Maven中央仓库 Maven构建方式请看 发布Jar到Maven中央仓库--Maven版(最新方式) 。 前三个步骤与 发布Jar到Maven中央仓库--Maven版(最新方式) 相同，不在赘述。","date_published":"2024-08-02T13:30:05.000Z","tags":["技术","maven","gradle"]},{"id":"https://blog.hanqunfeng.com/2024/08/01/mvn-depoly-maven-center-repository-new/","url":"https://blog.hanqunfeng.com/2024/08/01/mvn-depoly-maven-center-repository-new/","title":"发布Jar到Maven中央仓库--Maven版(最新方式)","content_html":"<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\"><a href=\"https://oss.sonatype.org\">https://oss.sonatype.org</a>已经不再支持新用户注册，新的注册地址为<a href=\"https://central.sonatype.com\">https://central.sonatype.com</a></li>\n<li class=\"lvl-2\">通过本文，你将知道如何将Maven构建的项目发布到Maven中央仓库</li>\n<li class=\"lvl-2\">Gradle构建方式请看 <a href=\"/2024/08/02/gradle-depoly-maven-center-repository-new/\" title=\"发布Jar到Maven中央仓库--Gradle版(最新方式)\">发布Jar到Maven中央仓库--Gradle版(最新方式)</a> 。</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"一、将项目推送到远程仓库，如-Github或者Gitee\">一、将项目推送到远程仓库，如 <code>Github</code>或者<code>Gitee</code></h2>\n<h2 id=\"二、注册-Sonatype-账户\">二、注册 <code>Sonatype</code> 账户</h2>\n<p>进入 <a href=\"https://central.sonatype.com\">https://central.sonatype.com</a> 注册一个账号，邮箱要真实。</p>\n<h2 id=\"三、登录-Sonatype-创建Namespace\">三、登录 Sonatype 创建<code>Namespace</code></h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进入 Namespace 模块，然后点击 Add Namespace 按钮，Namespace 具有唯一性</p>\n</li>\n<li class=\"lvl-2\">\n<p>发布前一定要创建<code>Namespace</code>，实际上就是项目的<code>Group Id</code>，因为要进行验证，所以这里不能随便填写，你可以配置为你拥有的域名，比如我的域名是<code>hanqunfeng.com</code>，这里就填写<code>com.hanqunfeng</code>。域名的验证方法是配置DNS TXT记录。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果你没有域名，也可以使用Github的域名，比如我的Github用户名是<code>hanqunfeng</code>，则这里可以配置为<code>io.github.hanqunfeng</code>。Github的验证方式是根据给定个名称创建一个public repository。</p>\n</li>\n</ul>\n<h2 id=\"四、发布\">四、发布</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>1.准备签名</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">可以使用工具创建密钥对<br>\n需要下载一个签名工具，我是mac电脑，下载的是<a href=\"https://gpgtools.org\">https://gpgtools.org</a>。<br>\n安装后点击新建，按照提示创建一个密钥对即可，注意高级选项里有个过期时间，默认是<code>3年</code>。创建好后会主动提示你是否将公钥发布到<code>key server</code>，点击<code>Upload Public key</code>即可。也可以在创建后的证书列表页面邮件选择<code>证书</code>–&gt;<code>Send Public Key To Key Server</code>。</li>\n</ul>\n<p>导出证书时，勾选密码并设置密码就是私钥和公钥证书，不勾选密码就是公钥，看生成文件的名称就可以，公开就是公钥，私密就是私钥，格式都是<code>asc</code>，其实就是<code>字符串</code>，可以用记事本打开查看。</p>\n<p>如果windows系统，可以下载<a href=\"https://www.gpg4win.org/\">https://www.gpg4win.org/</a> ，使用方式差不多，最后点击“将公钥上传的目录服务”。</p>\n<p>公钥发布到<code>key server</code>后要稍微等一会，大约<code>10分钟</code>吧，因为<code>key server</code>有多个，同步需要一些时间。<br>\n记住你创建密钥对时的密码，发布项目时要使用。</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">\n<p>也可以使用命令行创建密钥对，版本<code>[gpg (GnuPG/MacGPG2) 2.2.24]</code></p>\n  <figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建密钥对，按提示输入用户名称和邮箱地址</span></span><br><span class=\"line\">gpg --generate-key</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出密钥，hanqunfeng就是创建密钥对是的用户名，此处也可以使用邮箱</span></span><br><span class=\"line\"><span class=\"comment\"># 结果中第二行一长串的后8位就是keyId，比如：30FF8D58，gradle构建时会用到</span></span><br><span class=\"line\">gpg --list-keys hanqunfeng</span><br><span class=\"line\"><span class=\"comment\"># 也可以直接通过id查询</span></span><br><span class=\"line\">gpg --list-keys 30FF8D58</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上传公钥到server key，默认上传到hkps://keys.openpgp.org，但是提示上传失败</span></span><br><span class=\"line\"><span class=\"comment\"># 看到网上的示例可以通过--keyserver指定上传的服务器地址，但是我这个版本[gpg (GnuPG/MacGPG2) 2.2.24]没有这个参数</span></span><br><span class=\"line\"><span class=\"comment\"># 使用 https://gpgtools.org 上传公钥就会成功</span></span><br><span class=\"line\">gpg --send-keys 30FF8D58</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看指纹</span></span><br><span class=\"line\">gpg --fingerprint 30FF8D58</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除私钥，这里也可以使用用户名称或者邮箱，如果唯一的话</span></span><br><span class=\"line\">gpg --delete-secret-keys 30FF8D58</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除公钥</span></span><br><span class=\"line\">gpg --delete-keys 30FF8D58</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>2.settings.xml<br>\n配置 <code>maven</code> 的 <code>settings.xml</code> 文件，设置一个 <code>server</code>，里面添加 <code>User Token</code>。</p>\n</li>\n</ul>\n<blockquote>\n<p>登录<a href=\"https://central.sonatype.com\">https://central.sonatype.com</a>后点击右上角的用户名称–&gt; View Account --&gt; Generate User Token</p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">    [...]</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\">       [...]</span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>maven-central<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span>username<span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>token<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>3.pom.xml，重点是后面几个plugin<br>\n这里重点说一下<code>central-publishing-maven-plugin</code>这个插件，该插件会将jar包推送到<code>Maven Central</code>仓库，如果插件没有配置参数<code>autoPublish</code>为<code>true</code>，则但此时发布的jar会处于<code>VALIDATED</code>状态，需要登录<a href=\"https://central.sonatype.com\">https://central.sonatype.com</a>后切换到Deployment，找到我们刚刚上传的包名，然后点击右侧的<code>Publish</code>按钮，如果一切顺利，大于10分钟后其状态变为<code>PUBLISHED</code>，表示发布成功。如果发布失败，其状态会变更为<code>FAILED</code>，可以在<code>Component Summary</code>中查看失败原因，重新发布即可。</p>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>io.github.hanqunfeng<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>aws-s3-v2-tools<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>aws-s3-v2-tools<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        AWS S3 Tools.</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://blog.hanqunfeng.com<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>The Apache License, Version 2.0<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://www.apache.org/licenses/LICENSE-2.0.txt<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">license</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">licenses</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>hanqf<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hanqunfeng<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">email</span>&gt;</span>qunfeng_han@126.com<span class=\"tag\">&lt;/<span class=\"name\">email</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">developer</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">developers</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scm</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">connection</span>&gt;</span>scm:git:https://github.com/hanqunfeng/aws-s3-v2-tools.git</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">connection</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">developerConnection</span>&gt;</span></span><br><span class=\"line\">            scm:git:https://github.com:hanqunfeng/aws-s3-v2-tools.git</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">developerConnection</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>https://github.com/hanqunfeng/aws-s3-v2-tools<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">scm</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">java.version</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">java.version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>software.amazon.awssdk<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>bom<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.23.10<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>software.amazon.awssdk<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>s3<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 为避免Potential Conflicts，你应该将commons-logging.jar从classpath中删除。你可以尝试从项目依赖中排除commons-logging，这样你的应用程序就会被强制使用Spring JCL而不是Commons Logging。 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 问题：Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>software.amazon.awssdk<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>apache-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>commons-logging<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commons-logging<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>software.amazon.awssdk<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>s3-transfer-manager<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>software.amazon.awssdk<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>aws-crt-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.18.32<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.3.29<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.8.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">source</span>&gt;</span>$&#123;java.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">source</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">target</span>&gt;</span>$&#123;java.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-source-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>attach-source<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>verify<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"comment\">&lt;!--生成源代码的jar --&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-javadoc-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>attach-javadoc<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>verify<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"comment\">&lt;!--生成javadoc的jar --&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"comment\">&lt;!--生成javadoc的html --&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>javadoc<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"comment\">&lt;!--不显示javadoc警告--&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">additionalOptions</span>&gt;</span>-Xdoclint:none<span class=\"tag\">&lt;/<span class=\"name\">additionalOptions</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">additionalJOption</span>&gt;</span>-Xdoclint:none<span class=\"tag\">&lt;/<span class=\"name\">additionalJOption</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- gpg plugin,用于签名认证 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-gpg-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>sign-artifacts<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">phase</span>&gt;</span>verify<span class=\"tag\">&lt;/<span class=\"name\">phase</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                            <span class=\"tag\">&lt;<span class=\"name\">goal</span>&gt;</span>sign<span class=\"tag\">&lt;/<span class=\"name\">goal</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;/<span class=\"name\">goals</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">execution</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">executions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 发布到私服时需要注释掉下面两个插件 --&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--staging puglin,用于自动执行发布阶段(免手动)--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.sonatype.central<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>central-publishing-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.5.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">extensions</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">extensions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- 这里的publishingServerId是在settings.xml中配置的server认证信息 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">publishingServerId</span>&gt;</span>maven-central<span class=\"tag\">&lt;/<span class=\"name\">publishingServerId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- 这里的autoPublish是自动发布，而不是手动发布 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">autoPublish</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">autoPublish</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- 这里的waitUntil配置为published是等待发布完成，因为发布完成的时间比较长，所以可以不加这个参数 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">waitUntil</span>&gt;</span>published<span class=\"tag\">&lt;/<span class=\"name\">waitUntil</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- 这里的deploymentName是发布到中央仓库的名称 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">deploymentName</span>&gt;</span>$&#123;project.groupId&#125;:$&#123;project.artifactId&#125;:$&#123;project.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">deploymentName</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- release plugin,用于发布到release仓库部署插件 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-release-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.5.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        &lt;repository&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--            &lt;id&gt;maven-releases&lt;/id&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--            &lt;name&gt;Nexus Release Repository&lt;/name&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--            &lt;url&gt;http://nexus.cxzh.ltd:8081/repository/maven-releases/&lt;/url&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        &lt;/repository&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        &lt;snapshotRepository&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--            &lt;id&gt;maven-snapshots&lt;/id&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--            &lt;name&gt;Nexus Snapshot Repository&lt;/name&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--            &lt;url&gt;http://nexus.cxzh.ltd:8081/repository/maven-snapshots/&lt;/url&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--        &lt;/snapshotRepository&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">distributionManagement</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>4.执行命令</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package <span class=\"comment\"># 完成打包和测试</span></span><br><span class=\"line\">mvn clean verify  <span class=\"comment\"># 完成源码打包和javadoc打包，同时完成签名</span></span><br><span class=\"line\">mvn clean deploy  <span class=\"comment\"># 完成本地部署和maven中央仓库部署</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>4.1 执行过程中会提示你输入创建密钥对时的密码，如果不想人工参与，也可以使用如下方式（参考：<a href=\"http://maven.apache.org/plugins/maven-gpg-plugin/usage.html%EF%BC%89\">http://maven.apache.org/plugins/maven-gpg-plugin/usage.html）</a></p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>a.在执行命令时指定密码：</p>\n  <figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean deploy -Dgpg.passphrase=thephrase</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-2\">\n<p>b.setting.xml中创建一个server</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">[...]</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\">    [...]</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>gpg.passphrase<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">passphrase</span>&gt;</span>clear or encrypted text<span class=\"tag\">&lt;/<span class=\"name\">passphrase</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">server</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">servers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>6.更新部署<br>\n修改<code>pom.xml</code>中的版本号，重新执行<code>mvn clean deploy</code>即可。发布的jar包可以在<a href=\"https://central.sonatype.com\">https://central.sonatype.com</a>中检索。</p>\n</li>\n</ul>\n","content_text":"摘要 https://oss.sonatype.org已经不再支持新用户注册，新的注册地址为https://central.sonatype.com 通过本文，你将知道如何将Maven构建的项目发布到Maven中央仓库 Gradle构建方式请看 发布Jar到Maven中央仓库--Gradle版(最新方式) 。 一、将项目推送到远程仓库，如 Github或者Gitee 二、注册 Sonatype 账户 进入 https://central.sonatype.com 注册一个账号，邮箱要真实。 三、登录 Sonatype 创建Namespace 进入 Namespace 模块，然后点击 Add Namespace 按钮，Namespace 具有唯一性 发布前一定要创建Namespace，实际上就是项目的Group Id，因为要进行验证，所以这里不能随便填写，你可以配置为你拥有的域名，比如我的域名是hanqunfeng.com，这里就填写com.hanqunfeng。域名的验证方法是配置DNS TXT记录。 如果你没有域名，也可以使用Github的域名，比如我的Github用户名是hanqunfeng，则这里可以配置为io.github.hanqunfeng。Github的验证方式是根据给定个名称创建一个public repository。 四、发布 1.准备签名 可以使用工具创建密钥对 需要下载一个签名工具，我是mac电脑，下载的是https://gpgtools.org。 安装后点击新建，按照提示创建一个密钥对即可，注意高级选项里有个过期时间，默认是3年。创建好后会主动提示你是否将公钥发布到key server，点击Upload Public key即可。也可以在创建后的证书列表页面邮件选择证书–&gt;Send Public Key To Key Server。 导出证书时，勾选密码并设置密码就是私钥和公钥证书，不勾选密码就是公钥，看生成文件的名称就可以，公开就是公钥，私密就是私钥，格式都是asc，其实就是字符串，可以用记事本打开查看。 如果windows系统，可以下载https://www.gpg4win.org/ ，使用方式差不多，最后点击“将公钥上传的目录服务”。 公钥发布到key server后要稍微等一会，大约10分钟吧，因为key server有多个，同步需要一些时间。 记住你创建密钥对时的密码，发布项目时要使用。 也可以使用命令行创建密钥对，版本[gpg (GnuPG/MacGPG2) 2.2.24] 12345678910111213141516171819202122# 创建密钥对，按提示输入用户名称和邮箱地址gpg --generate-key# 列出密钥，hanqunfeng就是创建密钥对是的用户名，此处也可以使用邮箱# 结果中第二行一长串的后8位就是keyId，比如：30FF8D58，gradle构建时会用到gpg --list-keys hanqunfeng# 也可以直接通过id查询gpg --list-keys 30FF8D58# 上传公钥到server key，默认上传到hkps://keys.openpgp.org，但是提示上传失败# 看到网上的示例可以通过--keyserver指定上传的服务器地址，但是我这个版本[gpg (GnuPG/MacGPG2) 2.2.24]没有这个参数# 使用 https://gpgtools.org 上传公钥就会成功gpg --send-keys 30FF8D58# 查看指纹gpg --fingerprint 30FF8D58# 删除私钥，这里也可以使用用户名称或者邮箱，如果唯一的话gpg --delete-secret-keys 30FF8D58# 删除公钥gpg --delete-keys 30FF8D58 2.settings.xml 配置 maven 的 settings.xml 文件，设置一个 server，里面添加 User Token。 登录https://central.sonatype.com后点击右上角的用户名称–&gt; View Account --&gt; Generate User Token 1234567891011&lt;settings&gt; [...] &lt;servers&gt; [...] &lt;server&gt; &lt;id&gt;maven-central&lt;/id&gt; &lt;username&gt;username&lt;/username&gt; &lt;password&gt;token&lt;/password&gt; &lt;/server&gt; &lt;/servers&gt;&lt;/settings&gt; 3.pom.xml，重点是后面几个plugin 这里重点说一下central-publishing-maven-plugin这个插件，该插件会将jar包推送到Maven Central仓库，如果插件没有配置参数autoPublish为true，则但此时发布的jar会处于VALIDATED状态，需要登录https://central.sonatype.com后切换到Deployment，找到我们刚刚上传的包名，然后点击右侧的Publish按钮，如果一切顺利，大于10分钟后其状态变为PUBLISHED，表示发布成功。如果发布失败，其状态会变更为FAILED，可以在Component Summary中查看失败原因，重新发布即可。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;io.github.hanqunfeng&lt;/groupId&gt; &lt;artifactId&gt;aws-s3-v2-tools&lt;/artifactId&gt; &lt;version&gt;1.0.1&lt;/version&gt; &lt;packaging&gt;jar&lt;/packaging&gt; &lt;name&gt;aws-s3-v2-tools&lt;/name&gt; &lt;description&gt; AWS S3 Tools. &lt;/description&gt; &lt;url&gt;https://blog.hanqunfeng.com&lt;/url&gt; &lt;licenses&gt; &lt;license&gt; &lt;name&gt;The Apache License, Version 2.0&lt;/name&gt; &lt;url&gt;http://www.apache.org/licenses/LICENSE-2.0.txt&lt;/url&gt; &lt;/license&gt; &lt;/licenses&gt; &lt;developers&gt; &lt;developer&gt; &lt;id&gt;hanqf&lt;/id&gt; &lt;name&gt;hanqunfeng&lt;/name&gt; &lt;email&gt;qunfeng_han@126.com&lt;/email&gt; &lt;/developer&gt; &lt;/developers&gt; &lt;scm&gt; &lt;connection&gt;scm:git:https://github.com/hanqunfeng/aws-s3-v2-tools.git &lt;/connection&gt; &lt;developerConnection&gt; scm:git:https://github.com:hanqunfeng/aws-s3-v2-tools.git &lt;/developerConnection&gt; &lt;url&gt;https://github.com/hanqunfeng/aws-s3-v2-tools&lt;/url&gt; &lt;/scm&gt; &lt;properties&gt; &lt;java.version&gt;1.8&lt;/java.version&gt; &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;/properties&gt; &lt;dependencyManagement&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;software.amazon.awssdk&lt;/groupId&gt; &lt;artifactId&gt;bom&lt;/artifactId&gt; &lt;version&gt;2.23.10&lt;/version&gt; &lt;type&gt;pom&lt;/type&gt; &lt;scope&gt;import&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;/dependencyManagement&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;software.amazon.awssdk&lt;/groupId&gt; &lt;artifactId&gt;s3&lt;/artifactId&gt; &lt;/dependency&gt; &lt;!-- 为避免Potential Conflicts，你应该将commons-logging.jar从classpath中删除。你可以尝试从项目依赖中排除commons-logging，这样你的应用程序就会被强制使用Spring JCL而不是Commons Logging。 --&gt; &lt;!-- 问题：Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts --&gt; &lt;dependency&gt; &lt;groupId&gt;software.amazon.awssdk&lt;/groupId&gt; &lt;artifactId&gt;apache-client&lt;/artifactId&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;commons-logging&lt;/groupId&gt; &lt;artifactId&gt;commons-logging&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;software.amazon.awssdk&lt;/groupId&gt; &lt;artifactId&gt;s3-transfer-manager&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;software.amazon.awssdk&lt;/groupId&gt; &lt;artifactId&gt;aws-crt-client&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;version&gt;1.18.32&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-core&lt;/artifactId&gt; &lt;version&gt;5.3.29&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;version&gt;3.8.1&lt;/version&gt; &lt;configuration&gt; &lt;source&gt;$&#123;java.version&#125;&lt;/source&gt; &lt;target&gt;$&#123;java.version&#125;&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt; &lt;version&gt;3.2.1&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;attach-source&lt;/id&gt; &lt;phase&gt;verify&lt;/phase&gt; &lt;goals&gt; &lt;!--生成源代码的jar --&gt; &lt;goal&gt;jar&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt; &lt;version&gt;3.2.0&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;attach-javadoc&lt;/id&gt; &lt;phase&gt;verify&lt;/phase&gt; &lt;goals&gt; &lt;!--生成javadoc的jar --&gt; &lt;goal&gt;jar&lt;/goal&gt; &lt;!--生成javadoc的html --&gt; &lt;goal&gt;javadoc&lt;/goal&gt; &lt;/goals&gt; &lt;configuration&gt; &lt;!--不显示javadoc警告--&gt; &lt;additionalOptions&gt;-Xdoclint:none&lt;/additionalOptions&gt; &lt;additionalJOption&gt;-Xdoclint:none&lt;/additionalJOption&gt; &lt;/configuration&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;!-- gpg plugin,用于签名认证 --&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-gpg-plugin&lt;/artifactId&gt; &lt;version&gt;1.6&lt;/version&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;sign-artifacts&lt;/id&gt; &lt;phase&gt;verify&lt;/phase&gt; &lt;goals&gt; &lt;goal&gt;sign&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;/plugin&gt; &lt;!-- 发布到私服时需要注释掉下面两个插件 --&gt; &lt;!--staging puglin,用于自动执行发布阶段(免手动)--&gt; &lt;plugin&gt; &lt;groupId&gt;org.sonatype.central&lt;/groupId&gt; &lt;artifactId&gt;central-publishing-maven-plugin&lt;/artifactId&gt; &lt;version&gt;0.5.0&lt;/version&gt; &lt;extensions&gt;true&lt;/extensions&gt; &lt;configuration&gt; &lt;!-- 这里的publishingServerId是在settings.xml中配置的server认证信息 --&gt; &lt;publishingServerId&gt;maven-central&lt;/publishingServerId&gt; &lt;!-- 这里的autoPublish是自动发布，而不是手动发布 --&gt; &lt;autoPublish&gt;true&lt;/autoPublish&gt; &lt;!-- 这里的waitUntil配置为published是等待发布完成，因为发布完成的时间比较长，所以可以不加这个参数 --&gt; &lt;waitUntil&gt;published&lt;/waitUntil&gt; &lt;!-- 这里的deploymentName是发布到中央仓库的名称 --&gt; &lt;deploymentName&gt;$&#123;project.groupId&#125;:$&#123;project.artifactId&#125;:$&#123;project.version&#125;&lt;/deploymentName&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;!-- release plugin,用于发布到release仓库部署插件 --&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-release-plugin&lt;/artifactId&gt; &lt;version&gt;2.5.3&lt;/version&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; &lt;distributionManagement&gt; &lt;!-- &lt;repository&gt;--&gt; &lt;!-- &lt;id&gt;maven-releases&lt;/id&gt;--&gt; &lt;!-- &lt;name&gt;Nexus Release Repository&lt;/name&gt;--&gt; &lt;!-- &lt;url&gt;http://nexus.cxzh.ltd:8081/repository/maven-releases/&lt;/url&gt;--&gt; &lt;!-- &lt;/repository&gt;--&gt; &lt;!-- &lt;snapshotRepository&gt;--&gt; &lt;!-- &lt;id&gt;maven-snapshots&lt;/id&gt;--&gt; &lt;!-- &lt;name&gt;Nexus Snapshot Repository&lt;/name&gt;--&gt; &lt;!-- &lt;url&gt;http://nexus.cxzh.ltd:8081/repository/maven-snapshots/&lt;/url&gt;--&gt; &lt;!-- &lt;/snapshotRepository&gt;--&gt; &lt;/distributionManagement&gt;&lt;/project&gt; 4.执行命令 123mvn clean package # 完成打包和测试mvn clean verify # 完成源码打包和javadoc打包，同时完成签名mvn clean deploy # 完成本地部署和maven中央仓库部署 4.1 执行过程中会提示你输入创建密钥对时的密码，如果不想人工参与，也可以使用如下方式（参考：http://maven.apache.org/plugins/maven-gpg-plugin/usage.html） a.在执行命令时指定密码： 1mvn clean deploy -Dgpg.passphrase=thephrase b.setting.xml中创建一个server 12345678910&lt;settings&gt;[...]&lt;servers&gt; [...] &lt;server&gt; &lt;id&gt;gpg.passphrase&lt;/id&gt; &lt;passphrase&gt;clear or encrypted text&lt;/passphrase&gt; &lt;/server&gt;&lt;/servers&gt;&lt;/settings&gt; 6.更新部署 修改pom.xml中的版本号，重新执行mvn clean deploy即可。发布的jar包可以在https://central.sonatype.com中检索。","summary":"摘要 https://oss.sonatype.org已经不再支持新用户注册，新的注册地址为https://central.sonatype.com 通过本文，你将知道如何将Maven构建的项目发布到Maven中央仓库 Gradle构建方式请看 发布Jar到Maven中央仓库--Gradle版(最新方式) 。","date_published":"2024-08-01T13:30:05.000Z","tags":["技术","maven","maven"]},{"id":"https://blog.hanqunfeng.com/2024/05/08/mysql8-upgrade/","url":"https://blog.hanqunfeng.com/2024/05/08/mysql8-upgrade/","title":"MySql--从Mysql5.7升级到Mysql8","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>MySql知识点介绍:从Mysql5.7升级到Mysql8</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>mysql-8.0.30</code>，<a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">https://dev.mysql.com/doc/refman/8.0/en/</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>2024-04-30，<a href=\"https://dev.mysql.com/doc/relnotes/mysql/8.4/en/news-8-4-0.html\">mysql-8.4.0 LTS</a>版本发布，本文在将mysql从5.7.44升级到8.0.30的基础上，升级到8.4.0 LTS版本。<a href=\"https://dev.mysql.com/doc/refman/8.4/en/\">mysql-8.4.0 LTS官方文档</a></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"从Mysql5-7升级到Mysql8\">从Mysql5.7升级到Mysql8</h2>\n<p><em><strong>升级前，请先备份数据库，防止升级失败</strong></em></p>\n<h3 id=\"mysqlsh\">mysqlsh</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在mysql8以前，升级mysql还是比较麻烦的，除了要处理不兼容的参数和语法外，而且不支持跨版本的升级，比如5.5必须先升级到5.6，然后再升级到5.7。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>mysqlsh</code>是mysql官方提供的一个命令行工具，是MySQL的高级客户端和代码编辑器。其不仅可以像使用<code>mysql</code>命令一样执行sql，而且还支持js脚本、python脚本，等等，具体可以查看<a href=\"https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-shell-commands.html\">官网</a>。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>mysqlsh</code>的众多功能之一就是可以检测当前版本是否可以升级到与当前<code>mysqlsh</code>相同的版本。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果你当前的版本是5.6，你甚至都不需要先将数据库升级到5.7就可以直接升级到8.0，因为mysql8.0支持mysql5.5到mysql8.0的升级。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://dev.mysql.com/doc/mysql-shell/8.0/en/\">mysqlsh官方文档</a></p>\n</li>\n</ul>\n<h4 id=\"安装mysqlsh\">安装mysqlsh</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://dev.mysql.com/downloads/shell/\">官网下载地址</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>选择需要的版本进行下载，我这里选择下载的版本是<a href=\"https://downloads.mysql.com/archives/get/p/43/file/mysql-shell-8.0.30-linux-glibc2.12-x86-64bit.tar.gz\">linux的8.0.30版本</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>下载后解压即可</p>\n</li>\n</ul>\n<h4 id=\"检查是否可以升级\">检查是否可以升级</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-shell-utilities-upgrade.html\">官网说明</a></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># mysqlsh8.4以前可以使用如下方法，因为其默认就是执行js代码</span></span><br><span class=\"line\">./mysqlsh username:password@host -e <span class=\"string\">&quot;util.checkForServerUpgrade()&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># mysqlsh8.4后默认执行的是sql代码，所以要先登录，切换到js环境后再运行上面的代码</span></span><br><span class=\"line\"><span class=\"comment\"># 登录</span></span><br><span class=\"line\">./mysqlsh username:password@host</span><br><span class=\"line\"> MySQL  localhost  SQL  &gt; \\js</span><br><span class=\"line\">Switching to JavaScript mode...</span><br><span class=\"line\"> MySQL  localhost  JS  &gt; util.checkForServerUpgrade()</span><br><span class=\"line\"> ……………………………………………………</span><br><span class=\"line\"> <span class=\"comment\"># 退出</span></span><br><span class=\"line\"> MySQL  localhost  JS &gt; \\q</span><br><span class=\"line\">Bye!</span><br></pre></td></tr></table></figure>\n<h4 id=\"检查输出信息说明\">检查输出信息说明</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WARNING: Using a password on the <span class=\"built_in\">command</span> line interface can be insecure.</span><br><span class=\"line\">The MySQL server at</span><br><span class=\"line\">localhost:3306, version</span><br><span class=\"line\">5.7.44-<span class=\"built_in\">log</span> - Please upgrade to 8.0 or opt-in to the paid RDS Extended Support</span><br><span class=\"line\">service before 5.7 reaches end of standard support on 29 February, 2024:</span><br><span class=\"line\">https://a.co/hQqiIn0, will now be checked <span class=\"keyword\">for</span> compatibility issues <span class=\"keyword\">for</span> upgrade</span><br><span class=\"line\">to MySQL 8.0.30...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 旧时间类型的使用</span></span><br><span class=\"line\">1) Usage of old temporal <span class=\"built_in\">type</span></span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用与新保留关键字冲突的数据库对象名称</span></span><br><span class=\"line\">2) Usage of db objects with names conflicting with new reserved keywords</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用utf8mb3字符集</span></span><br><span class=\"line\">3) Usage of utf8mb3 charset</span><br><span class=\"line\">  Warning: The following objects use the utf8mb3 character <span class=\"built_in\">set</span>. It is</span><br><span class=\"line\">    recommended to convert them to use utf8mb4 instead, <span class=\"keyword\">for</span> improved Unicode</span><br><span class=\"line\">    support.</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf8mb3.html</span><br><span class=\"line\"></span><br><span class=\"line\">  mydb - schema<span class=\"string\">&#x27;s default character set: utf8</span></span><br><span class=\"line\"><span class=\"string\">  mysql - schema&#x27;</span>s default character <span class=\"built_in\">set</span>: utf8</span><br><span class=\"line\">  mydb.tbl_info_i.a_product - column<span class=\"string\">&#x27;s default character set: utf8</span></span><br><span class=\"line\"><span class=\"string\">  mydb.tbl_info_i.a_country - column&#x27;</span>s default character <span class=\"built_in\">set</span>: utf8</span><br><span class=\"line\">  mydb.tbl_info_i.a_version - column<span class=\"string\">&#x27;s default character set: utf8</span></span><br><span class=\"line\"><span class=\"string\">  mydb.tbl_info_i.a_placement - column&#x27;</span>s default character <span class=\"built_in\">set</span>: utf8</span><br><span class=\"line\">………………………………………………………………………………………………………………………………</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># MySQL模式中的表名与8.0中的新表冲突</span></span><br><span class=\"line\">4) Table names <span class=\"keyword\">in</span> the mysql schema conflicting with new tables <span class=\"keyword\">in</span> 8.0</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用非本机分区引擎的分区表</span></span><br><span class=\"line\">5) Partitioned tables using engines with non native partitioning</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 外键约束名称超过64个字符</span></span><br><span class=\"line\">6) Foreign key constraint names longer than 64 characters</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用过时的MAXDB sql_mode标志</span></span><br><span class=\"line\">7) Usage of obsolete MAXDB sql_mode flag</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用过时的sql_mode标志</span></span><br><span class=\"line\">8) Usage of obsolete sql_mode flags</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ENUM/SET列定义包含超过255个字符的元素</span></span><br><span class=\"line\">9) ENUM/SET column definitions containing elements longer than 255 characters</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在共享表空间中使用分区表</span></span><br><span class=\"line\">10) Usage of partitioned tables <span class=\"keyword\">in</span> shared tablespaces</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 表空间数据文件路径中的循环目录引用</span></span><br><span class=\"line\">11) Circular directory references <span class=\"keyword\">in</span> tablespace data file paths</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用已删除的函数</span></span><br><span class=\"line\">12) Usage of removed <span class=\"built_in\">functions</span></span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用已删除的GROUP BY ASC/DESC语法</span></span><br><span class=\"line\">13) Usage of removed GROUP BY ASC/DESC syntax</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 已删除的用于错误日志记录到系统日志配置的系统变量</span></span><br><span class=\"line\">14) Removed system variables <span class=\"keyword\">for</span> error logging to the system <span class=\"built_in\">log</span> configuration</span><br><span class=\"line\">  To run this check requires full path to MySQL server configuration file to be specified at <span class=\"string\">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-13.html#mysqld-8-0-13-logging</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 已删除的系统变量</span></span><br><span class=\"line\">15) Removed system variables</span><br><span class=\"line\">  To run this check requires full path to MySQL server configuration file to be specified at <span class=\"string\">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html#optvars-removed</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 具有新默认值的系统变量</span></span><br><span class=\"line\">16) System variables with new default values</span><br><span class=\"line\">  To run this check requires full path to MySQL server configuration file to be specified at <span class=\"string\">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://mysqlserverteam.com/new-defaults-in-mysql-8-0/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 零日期、日期时间和时间戳值</span></span><br><span class=\"line\">17) Zero Date, Datetime, and Timestamp values</span><br><span class=\"line\">  Warning: By default zero <span class=\"built_in\">date</span>/datetime/timestamp values are no longer allowed</span><br><span class=\"line\">    <span class=\"keyword\">in</span> MySQL, as of 5.7.8 NO_ZERO_IN_DATE and NO_ZERO_DATE are included <span class=\"keyword\">in</span></span><br><span class=\"line\">    SQL_MODE by default. These modes should be used with strict mode as they will</span><br><span class=\"line\">    be merged with strict mode <span class=\"keyword\">in</span> a future release. If you <span class=\"keyword\">do</span> not include these</span><br><span class=\"line\">    modes <span class=\"keyword\">in</span> your SQL_MODE setting, you are able to insert</span><br><span class=\"line\">    <span class=\"built_in\">date</span>/datetime/timestamp values that contain zeros. It is strongly advised to</span><br><span class=\"line\">    replace zero values with valid ones, as they may not work correctly <span class=\"keyword\">in</span> the</span><br><span class=\"line\">    future.</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://lefred.be/content/mysql-8-0-and-wrong-dates/</span><br><span class=\"line\"></span><br><span class=\"line\">  global.sql_mode - does not contain either NO_ZERO_DATE or NO_ZERO_IN_DATE</span><br><span class=\"line\">    <span class=\"built_in\">which</span> allows insertion of zero dates</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 由文件删除或损坏导致的模式不一致</span></span><br><span class=\"line\">18) Schema inconsistencies resulting from file removal or corruption</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 被InnoDB识别但属于不同引擎的表</span></span><br><span class=\"line\">19) Tables recognized by InnoDB that belong to a different engine</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &#x27;check table x for upgrade&#x27;命令报告的问题</span></span><br><span class=\"line\">20) Issues reported by <span class=\"string\">&#x27;check table x for upgrade&#x27;</span> <span class=\"built_in\">command</span></span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新的默认认证插件考虑</span></span><br><span class=\"line\">21) New default authentication plugin considerations</span><br><span class=\"line\">  Warning: The new default authentication plugin <span class=\"string\">&#x27;caching_sha2_password&#x27;</span> offers</span><br><span class=\"line\">    more secure password hashing than previously used <span class=\"string\">&#x27;mysql_native_password&#x27;</span></span><br><span class=\"line\">    (and consequent improved client connection authentication). However, it also</span><br><span class=\"line\">    has compatibility implications that may affect existing MySQL installations.</span><br><span class=\"line\">    If your MySQL installation must serve pre-8.0 clients and you encounter</span><br><span class=\"line\">    compatibility issues after upgrading, the simplest way to address those</span><br><span class=\"line\">    issues is to reconfigure the server to revert to the previous default</span><br><span class=\"line\">    authentication plugin (mysql_native_password). For example, use these lines</span><br><span class=\"line\">    <span class=\"keyword\">in</span> the server option file:</span><br><span class=\"line\"></span><br><span class=\"line\">    [mysqld]</span><br><span class=\"line\">    default_authentication_plugin=mysql_native_password</span><br><span class=\"line\"></span><br><span class=\"line\">    However, the setting should be viewed as temporary, not as a long term or</span><br><span class=\"line\">    permanent solution, because it causes new accounts created with the setting</span><br><span class=\"line\">    <span class=\"keyword\">in</span> effect to forego the improved authentication security.</span><br><span class=\"line\">    If you are using replication please take time to understand how the</span><br><span class=\"line\">    authentication plugin changes may impact you.</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-compatibility-issues</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-replication</span><br><span class=\"line\"></span><br><span class=\"line\">Errors:   0</span><br><span class=\"line\">Warnings: 98</span><br><span class=\"line\">Notices:  0</span><br><span class=\"line\"></span><br><span class=\"line\">NOTE: No fatal errors were found that would prevent an upgrade, but some potential issues were detected. Please ensure that the reported issues are not significant before upgrading.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>可以看到，其检查的数据库版本是5.7.44，其检查是否可以升级到8.0.30</p>\n</li>\n<li class=\"lvl-2\">\n<p>检测项共有21个，其中警告有98个，错误有0个，注意，如果有错误，则不能直接升级，需要解决错误问题，否则升级会失败。至于警告暂时可以不处理。</p>\n</li>\n<li class=\"lvl-2\">\n<p>警告集中体现在字符集上，5.7.44的字符集是utf8(实际就是utf8mb3)，而mysql8以后的默认字符集是utf8mb4，这个警告不影响升级，可以忽略。如果需要修改字符集到utf8mb4，需要注意原来的字段字符串长度是否符合要求，因为utf8mb4是4字节，而utf8mb3是3字节。另外如果使用了存储过程也要注意参数的长度是否符合要求。</p>\n</li>\n<li class=\"lvl-2\">\n<p>这里说一下<code>default_authentication_plugin</code>，mysql8.0.13开始，默认的认证插件是<code>caching_sha2_password</code>，而之前是<code>mysql_native_password</code>，这个警告虽然可以忽略，但是升级后建议尽快将认证插件修改为<code>caching_sha2_password</code>，因为<code>mysql_native_password</code>的认证方式存在安全漏洞，可以参考<a href=\"https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-compatibility-issues\">官方文档</a>。另外，从mysql8.4.0开始，不再支持<code>default_authentication_plugin</code>，若要使其支持<code>mysql_native_password</code>插件，8.4.0开始为我们增加了一个新的配置项<code>mysql-native-password</code>，在[mysqld]中配置<code>mysql-native-password=ON</code>即可开启支持，默认为<code>OFF</code>。</p>\n</li>\n<li class=\"lvl-2\">\n<p>另外还要注意<code>关键词</code>和<code>保留词</code>的问题，mysql8.0以后，又增加了很多个<code>关键词</code>和<code>保留词</code>，如果检查到则需要修改一下，不然升级会失败。即便表和字段里没有使用这些保留字，也要检查一下业务代码中是否有使用。关于<code>关键词</code>和<code>保留词</code>可以查看官网<a href=\"https://dev.mysql.com/doc/refman/8.0/en/keywords.html\">Keywords and Reserved Words</a>，相比于MySQL 5.7，增加了大约130个，同时也减少了6个。</p>\n<blockquote>\n<p>这里建议设置表名称和字段名称时，可以为其设置前缀，比如：表名称为：t_user、字段名称为：f_user_id</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p>还有一点需要注意，Mysql8修改了很多参数的默认值，具体可以查看<a href=\"https://dev.mysql.com/blog-archive/new-defaults-in-mysql-8-0/\">官方网站的说明</a>，如果你不希望使用默认值，则需要将其配置到配置文件中，这里强调一下，重点关注 <code>character_set_server</code> 和 <code>collation_server</code> 这两个参数。所有的参数配置参考<a href=\"https://dev.mysql.com/doc/refman/8.0/en/programs.html\">官方文档</a></p>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>关于字符集还想多说两句</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">mysql8的<code>character_set_server</code>默认是<code>utf8mb4</code>，<code>collation_server</code>默认是<code>utf8mb4_0900_ai_ci</code></li>\n<li class=\"lvl-2\">如果创建数据库或者表的时候没有指定字符集，则默认使用<code>character_set_server</code>和<code>collation_server</code>的默认值</li>\n<li class=\"lvl-2\">此时新创建的表就有可能与旧表字符集不一致，关联查询时就有可能导致错误或因为需要进行字符集转换导致查询性能下降。</li>\n<li class=\"lvl-2\">最好的方式是创建数据库或表时明确指定字符集，或者在<code>my.cnf</code>配置文件中配置<code>character_set_server</code>和<code>collation_server</code>的值。</li>\n</ul>\n</div>\n<h3 id=\"升级数据库的过程\">升级数据库的过程</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>因为我们要升级到mysql8.0.30，所以需要先下载并安装mysql8.0.30</p>\n</li>\n<li class=\"lvl-2\">\n<p>关闭mysql5.7的数据库</p>\n</li>\n<li class=\"lvl-2\">\n<p>备份数据目录(一定要做好备份，升级后不能降级的)</p>\n</li>\n<li class=\"lvl-2\">\n<p>根据检查提示修改<code>my.cnf</code>配置文件中的配置(主要是不兼容的配置，如果检查提示没有则不需要修改)</p>\n</li>\n<li class=\"lvl-2\">\n<p>非常重要的一步，就是修改<code>my.cnf</code>配置文件中的<code>basedir</code>，将其指向mysql8.0.30的安装目录</p>\n</li>\n<li class=\"lvl-2\">\n<p>直接使用mysql8.0.30的命令启动数据库，启动过程中就会完成数据库的升级，可以通过mysql的日志文件(log-error)查看升级情况</p>\n</li>\n<li class=\"lvl-2\">\n<p>升级完成后尽快使用新的密码认证插件修改密码，注意要修改所有用户的密码，包括root用户</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">ALTER</span> <span class=\"keyword\">USER</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED <span class=\"keyword\">WITH</span> caching_sha2_password <span class=\"keyword\">BY</span> <span class=\"string\">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">mysql8.4.0相比于之前的版本变化比较大，具体可以查看<a href=\"https://dev.mysql.com/doc/refman/8.4/en/mysql-nutshell.html\">官网文档</a></li>\n<li class=\"lvl-2\">mysql5.7不要直接升级到8.4.0及以后的版本，可以先升级到8.0.30，然后再升级到8.4.0</li>\n<li class=\"lvl-2\">升级到8.4.0前依旧要先使用<code>mysqlsh</code>检查是否可以升级，注意要下载对应的<code>mysqlsh</code>版本</li>\n<li class=\"lvl-2\">升级前要先检查是否所有用户的密码插件都是<code>caching_sha2_password</code>，如果没有则需要修改</li>\n<li class=\"lvl-2\">升级前要先检查<code>my.cnf</code>中是否配置了default_authentication_plugin，如果有则删除，如果必须要配置<code>mysql_native_password</code>认证插件，则需要配置<code>mysql-native-password=ON</code></li>\n<li class=\"lvl-2\">修改<code>my.cnf</code>中的<code>basedir</code>使其指向8.4.0的安装目录</li>\n<li class=\"lvl-2\">使用8.4.0的命令启动mysql，检查日志是否有错误。</li>\n</ul>\n</div>\n<h2 id=\"mysql5-7-44升级到8-0-30，再升级到8-4-0的完整过程\">mysql5.7.44升级到8.0.30，再升级到8.4.0的完整过程</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>准备好各个版本的mysql和mysqlsh</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 目录结构</span></span><br><span class=\"line\">mysql5 <span class=\"comment\"># 5.7.44安装目录</span></span><br><span class=\"line\">mysql8.0.30 <span class=\"comment\"># 8.0.30安装目录</span></span><br><span class=\"line\">mysql8.4.0 <span class=\"comment\"># 8.4.0安装目录</span></span><br><span class=\"line\">mysqlsh8.0.30 <span class=\"comment\"># 8.0.30的mysqlsh安装目录</span></span><br><span class=\"line\">mysqlsh8.4.0 <span class=\"comment\"># 8.4.0的mysqlsh安装目录</span></span><br><span class=\"line\">datas/mysql <span class=\"comment\"># 存放数据目录</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>mysql5/my.cnf</code>配置</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8mb4</span><br><span class=\"line\">local_infile=ON</span><br><span class=\"line\"></span><br><span class=\"line\">[client]</span><br><span class=\"line\">default-character-set=utf8mb4</span><br><span class=\"line\">port       = 3306</span><br><span class=\"line\">socket     = /tmp/mysql.sock</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">skip-name-resolve</span><br><span class=\"line\">secure_file_priv=&quot;&quot;</span><br><span class=\"line\">local_infile=ON</span><br><span class=\"line\"></span><br><span class=\"line\">default_authentication_plugin=mysql_native_password</span><br><span class=\"line\"></span><br><span class=\"line\">port       = 3306</span><br><span class=\"line\">server-id  = 1001</span><br><span class=\"line\">user       = mysql</span><br><span class=\"line\">socket     = /tmp/mysql.sock</span><br><span class=\"line\">basedir    = /usr/local/soft/mysql5</span><br><span class=\"line\">datadir    = /usr/local/soft/datas/mysql</span><br><span class=\"line\"></span><br><span class=\"line\">log-bin    = mysql-bin</span><br><span class=\"line\">binlog-format = ROW</span><br><span class=\"line\"></span><br><span class=\"line\">expire-logs-days=10</span><br><span class=\"line\"></span><br><span class=\"line\">sync-binlog=0</span><br><span class=\"line\">innodb_data_home_dir      =./</span><br><span class=\"line\">innodb_log_group_home_dir =./</span><br><span class=\"line\">log-error =mysql.log</span><br><span class=\"line\">pid-file  =mysql.pid</span><br><span class=\"line\">character-set-server=utf8mb4</span><br><span class=\"line\">lower_case_table_names=1</span><br><span class=\"line\">autocommit =1</span><br><span class=\"line\">slow_query_log=1</span><br><span class=\"line\">slow_query_log_file=db_slow.log</span><br><span class=\"line\">long_query_time=5</span><br><span class=\"line\">log_output=FILE</span><br><span class=\"line\">log_queries_not_using_indexes=1</span><br><span class=\"line\">skip-external-locking</span><br><span class=\"line\">key_buffer_size = 256M</span><br><span class=\"line\">max_allowed_packet = 64M</span><br><span class=\"line\">table_open_cache = 1024</span><br><span class=\"line\">sort_buffer_size = 4M</span><br><span class=\"line\">net_buffer_length = 8K</span><br><span class=\"line\">read_buffer_size = 4M</span><br><span class=\"line\">read_rnd_buffer_size = 512K</span><br><span class=\"line\">myisam_sort_buffer_size = 64M</span><br><span class=\"line\">thread_cache_size = 64</span><br><span class=\"line\">tmp_table_size = 128M</span><br><span class=\"line\">explicit_defaults_for_timestamp = true</span><br><span class=\"line\">max_connections = 500</span><br><span class=\"line\">max_connect_errors = 100</span><br><span class=\"line\">open_files_limit = 65535</span><br><span class=\"line\">default_storage_engine = InnoDB</span><br><span class=\"line\">innodb_data_file_path = ibdata1:10M:autoextend</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-7-44升级到8-0-30\">5.7.44升级到8.0.30</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>升级检查</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 升级检查</span></span><br><span class=\"line\">./mysqlsh8.0.30/bin/mysqlsh --uri root:123456@localhost  -e <span class=\"string\">&quot;util.checkForServerUpgrade()&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 输出</span></span><br><span class=\"line\">WARNING: Using a password on the <span class=\"built_in\">command</span> line interface can be insecure.</span><br><span class=\"line\">The MySQL server at /tmp%2Fmysql.sock, version 5.7.44-<span class=\"built_in\">log</span> - MySQL Community</span><br><span class=\"line\">Server (GPL), will now be checked <span class=\"keyword\">for</span> compatibility issues <span class=\"keyword\">for</span> upgrade to MySQL</span><br><span class=\"line\">8.0.30...</span><br><span class=\"line\"></span><br><span class=\"line\">1) Usage of old temporal <span class=\"built_in\">type</span></span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">2) Usage of db objects with names conflicting with new reserved keywords</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">3) Usage of utf8mb3 charset</span><br><span class=\"line\">  Warning: The following objects use the utf8mb3 character <span class=\"built_in\">set</span>. It is</span><br><span class=\"line\">    recommended to convert them to use utf8mb4 instead, <span class=\"keyword\">for</span> improved Unicode</span><br><span class=\"line\">    support.</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf8mb3.html</span><br><span class=\"line\"></span><br><span class=\"line\">  mydb - schema<span class=\"string\">&#x27;s default character set: utf8</span></span><br><span class=\"line\"><span class=\"string\">  mysql - schema&#x27;</span>s default character <span class=\"built_in\">set</span>: utf8</span><br><span class=\"line\">  mydb.tbl_info_i.a_product - column<span class=\"string\">&#x27;s default character set: utf8</span></span><br><span class=\"line\"><span class=\"string\">  mydb.tbl_info_i.a_country - column&#x27;</span>s default character <span class=\"built_in\">set</span>: utf8</span><br><span class=\"line\">  mydb.tbl_info_i.a_version - column<span class=\"string\">&#x27;s default character set: utf8</span></span><br><span class=\"line\"><span class=\"string\">  mydb.tbl_info_i.a_placement - column&#x27;</span>s default character <span class=\"built_in\">set</span>: utf8</span><br><span class=\"line\"> …………………………………………………………………………………………</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4) Table names <span class=\"keyword\">in</span> the mysql schema conflicting with new tables <span class=\"keyword\">in</span> 8.0</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">5) Partitioned tables using engines with non native partitioning</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">6) Foreign key constraint names longer than 64 characters</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">7) Usage of obsolete MAXDB sql_mode flag</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">8) Usage of obsolete sql_mode flags</span><br><span class=\"line\">  Notice: The following DB objects have obsolete options persisted <span class=\"keyword\">for</span></span><br><span class=\"line\">    sql_mode, <span class=\"built_in\">which</span> will be cleared during upgrade to 8.0.</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html#mysql-nutshell-removals</span><br><span class=\"line\"></span><br><span class=\"line\">  global system variable sql_mode - defined using obsolete NO_AUTO_CREATE_USER</span><br><span class=\"line\">    option</span><br><span class=\"line\"></span><br><span class=\"line\">9) ENUM/SET column definitions containing elements longer than 255 characters</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">10) Usage of partitioned tables <span class=\"keyword\">in</span> shared tablespaces</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">11) Circular directory references <span class=\"keyword\">in</span> tablespace data file paths</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">12) Usage of removed <span class=\"built_in\">functions</span></span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">13) Usage of removed GROUP BY ASC/DESC syntax</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">14) Removed system variables <span class=\"keyword\">for</span> error logging to the system <span class=\"built_in\">log</span> configuration</span><br><span class=\"line\">  To run this check requires full path to MySQL server configuration file to be specified at <span class=\"string\">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-13.html#mysqld-8-0-13-logging</span><br><span class=\"line\"></span><br><span class=\"line\">15) Removed system variables</span><br><span class=\"line\">  To run this check requires full path to MySQL server configuration file to be specified at <span class=\"string\">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html#optvars-removed</span><br><span class=\"line\"></span><br><span class=\"line\">16) System variables with new default values</span><br><span class=\"line\">  To run this check requires full path to MySQL server configuration file to be specified at <span class=\"string\">&#x27;configPath&#x27;</span> key of options dictionary</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://mysqlserverteam.com/new-defaults-in-mysql-8-0/</span><br><span class=\"line\"></span><br><span class=\"line\">17) Zero Date, Datetime, and Timestamp values</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">18) Schema inconsistencies resulting from file removal or corruption</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">19) Tables recognized by InnoDB that belong to a different engine</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">20) Issues reported by <span class=\"string\">&#x27;check table x for upgrade&#x27;</span> <span class=\"built_in\">command</span></span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">21) New default authentication plugin considerations</span><br><span class=\"line\">  Warning: The new default authentication plugin <span class=\"string\">&#x27;caching_sha2_password&#x27;</span> offers</span><br><span class=\"line\">    more secure password hashing than previously used <span class=\"string\">&#x27;mysql_native_password&#x27;</span></span><br><span class=\"line\">    (and consequent improved client connection authentication). However, it also</span><br><span class=\"line\">    has compatibility implications that may affect existing MySQL installations.</span><br><span class=\"line\">    If your MySQL installation must serve pre-8.0 clients and you encounter</span><br><span class=\"line\">    compatibility issues after upgrading, the simplest way to address those</span><br><span class=\"line\">    issues is to reconfigure the server to revert to the previous default</span><br><span class=\"line\">    authentication plugin (mysql_native_password). For example, use these lines</span><br><span class=\"line\">    <span class=\"keyword\">in</span> the server option file:</span><br><span class=\"line\"></span><br><span class=\"line\">    [mysqld]</span><br><span class=\"line\">    default_authentication_plugin=mysql_native_password</span><br><span class=\"line\"></span><br><span class=\"line\">    However, the setting should be viewed as temporary, not as a long term or</span><br><span class=\"line\">    permanent solution, because it causes new accounts created with the setting</span><br><span class=\"line\">    <span class=\"keyword\">in</span> effect to forego the improved authentication security.</span><br><span class=\"line\">    If you are using replication please take time to understand how the</span><br><span class=\"line\">    authentication plugin changes may impact you.</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-compatibility-issues</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-replication</span><br><span class=\"line\"></span><br><span class=\"line\">Errors:   0</span><br><span class=\"line\">Warnings: 98</span><br><span class=\"line\">Notices:  1</span><br><span class=\"line\"></span><br><span class=\"line\">NOTE: No fatal errors were found that would prevent an upgrade, but some potential issues were detected. Please ensure that the reported issues are not significant before upgrading.</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>看到没有error，开始升级</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭数据库</span></span><br><span class=\"line\">./mysql5/bin/mysqladmin --defaults-file=./mysql5/my.cnf -uroot -p123456 shutdown</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制mysql配置文件</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> ./mysql5/my.cnf ./mysql8.0.30/my.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改新的配置文件中的basedir，使其指向8.0.30的安装路径</span></span><br><span class=\"line\">basedir    = /usr/local/soft/mysql8.0.30</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用8.0.30启动</span></span><br><span class=\"line\">./mysql8.0.30/bin/mysqld_safe --defaults-file=./mysql8.0.30/my.cnf &amp;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看启动日志，没有错误说明升级成功</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2024-05-09T06:48:50.524705Z 0 [Warning] [MY-011068] [Server] The syntax <span class=\"string\">&#x27;expire-logs-days&#x27;</span> is deprecated and will be removed <span class=\"keyword\">in</span> a future release. Please use binlog_expire_logs_seconds instead.</span><br><span class=\"line\">2024-05-09T06:48:50.524819Z 0 [Warning] [MY-010097] [Server] Insecure configuration <span class=\"keyword\">for</span> --secure-file-priv: Current value does not restrict location of generated files. Consider setting it to a valid, non-empty path.</span><br><span class=\"line\">2024-05-09T06:48:50.524917Z 0 [Warning] [MY-010918] [Server] <span class=\"string\">&#x27;default_authentication_plugin&#x27;</span> is deprecated and will be removed <span class=\"keyword\">in</span> a future release. Please use authentication_policy instead.</span><br><span class=\"line\">2024-05-09T06:48:50.524983Z 0 [System] [MY-010116] [Server] /usr/local/soft/mysql8.0.30/bin/mysqld (mysqld 8.0.30) starting as process 26696</span><br><span class=\"line\">2024-05-09T06:48:50.563366Z 1 [System] [MY-011012] [Server] Starting upgrade of data directory.</span><br><span class=\"line\">2024-05-09T06:48:50.563414Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class=\"line\">2024-05-09T06:48:51.260298Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class=\"line\">2024-05-09T06:48:53.614398Z 2 [System] [MY-011003] [Server] Finished populating Data Dictionary tables with data.</span><br><span class=\"line\">2024-05-09T06:48:55.055320Z 5 [System] [MY-013381] [Server] Server upgrade from <span class=\"string\">&#x27;50700&#x27;</span> to <span class=\"string\">&#x27;80030&#x27;</span> started.</span><br><span class=\"line\">2024-05-09T06:49:02.063990Z 5 [System] [MY-013381] [Server] Server upgrade from <span class=\"string\">&#x27;50700&#x27;</span> to <span class=\"string\">&#x27;80030&#x27;</span> completed.</span><br><span class=\"line\">2024-05-09T06:49:02.237992Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class=\"line\">2024-05-09T06:49:02.238048Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported <span class=\"keyword\">for</span> this channel.</span><br><span class=\"line\">2024-05-09T06:49:02.267583Z 0 [System] [MY-011323] [Server] X Plugin ready <span class=\"keyword\">for</span> connections. Bind-address: <span class=\"string\">&#x27;::&#x27;</span> port: 33060, socket: /tmp/mysqlx.sock</span><br><span class=\"line\">2024-05-09T06:49:02.267648Z 0 [System] [MY-010931] [Server] /usr/local/soft/mysql8.0.30/bin/mysqld: ready <span class=\"keyword\">for</span> connections. Version: <span class=\"string\">&#x27;8.0.30&#x27;</span>  socket: <span class=\"string\">&#x27;/tmp/mysql.sock&#x27;</span>  port: 3306  MySQL Community Server - GPL.</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>根据日志提示我们应该修改两个配置参数，未来将不可用了，不过这里暂且先不去管它，等检查通不过了再进行处理就可以。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.The syntax &#x27;expire-logs-days&#x27; is deprecated and will be removed in a future release. Please use binlog_expire_logs_seconds instead.</span><br><span class=\"line\">2.&#x27;default_authentication_plugin&#x27; is deprecated and will be removed in a future release. Please use authentication_policy instead.</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>修改密码插件，这个步骤很重要</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 登录</span></span><br><span class=\"line\">./mysql8.0.30/bin/mysql -uroot -p123456</span><br><span class=\"line\"><span class=\"comment\"># 升级完成后使用新的密码认证插件修改密码，8.4不再推荐mysql_native_password认证插，所以升级到8.4以前一定要先修改密码插件，如果忘记了也没关系，文末有重置密码的方法</span></span><br><span class=\"line\">mysql&gt; ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED WITH caching_sha2_password BY <span class=\"string\">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-0-30升级到8-4-0\">8.0.30升级到8.4.0</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>同样先用8.4.0的mysqlsh检查一下</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 升级检查</span></span><br><span class=\"line\">./mysqlsh8.4.0/bin/mysqlsh --uri root:123456@localhost</span><br><span class=\"line\"><span class=\"comment\"># 输出</span></span><br><span class=\"line\">MySQL Shell 8.4.0</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2016, 2024, Oracle and/or its affiliates.</span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation and/or its affiliates.</span><br><span class=\"line\">Other names may be trademarks of their respective owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type <span class=\"string\">&#x27;\\help&#x27;</span> or <span class=\"string\">&#x27;\\?&#x27;</span> <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>; <span class=\"string\">&#x27;\\quit&#x27;</span> to <span class=\"built_in\">exit</span>.</span><br><span class=\"line\">WARNING: Using a password on the <span class=\"built_in\">command</span> line interface can be insecure.</span><br><span class=\"line\">Creating a Classic session to <span class=\"string\">&#x27;root@/tmp%2Fmysql.sock&#x27;</span></span><br><span class=\"line\">Fetching global names <span class=\"keyword\">for</span> auto-completion... Press ^C to stop.</span><br><span class=\"line\">Your MySQL connection <span class=\"built_in\">id</span> is 15</span><br><span class=\"line\">Server version: 8.0.30 MySQL Community Server - GPL</span><br><span class=\"line\">No default schema selected; <span class=\"built_in\">type</span> \\use &lt;schema&gt; to <span class=\"built_in\">set</span> one.</span><br><span class=\"line\"> MySQL  localhost  SQL &gt; \\js</span><br><span class=\"line\">Switching to JavaScript mode...</span><br><span class=\"line\"> MySQL  localhost  JS &gt; util.checkForServerUpgrade()</span><br><span class=\"line\">The MySQL server at /tmp%2Fmysql.sock, version 8.0.30 - MySQL Community Server</span><br><span class=\"line\">- GPL, will now be checked <span class=\"keyword\">for</span> compatibility issues <span class=\"keyword\">for</span> upgrade to MySQL 8.4.0.</span><br><span class=\"line\">To check <span class=\"keyword\">for</span> a different target server version, use the targetVersion option.</span><br><span class=\"line\"></span><br><span class=\"line\">WARNING: Upgrading MySQL Server from version 8.0.30 to 8.4.0 is not supported.</span><br><span class=\"line\">Please consider running the check using the following option: targetVersion=8.0</span><br><span class=\"line\"></span><br><span class=\"line\">1) Usage of db objects with names conflicting with new reserved keywords</span><br><span class=\"line\">(reservedKeywords)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">2) Removed system variables (removedSysVars)</span><br><span class=\"line\">  Error: Following system variables that were detected as being used will be</span><br><span class=\"line\">    removed. Please update your system to not rely on them before the upgrade.</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html#optvars-removed</span><br><span class=\"line\"></span><br><span class=\"line\">  expire_logs_days - Error: The system variable <span class=\"string\">&#x27;expire_logs_days&#x27;</span> is <span class=\"built_in\">set</span> to 10</span><br><span class=\"line\">    (EXPLICIT) and will be removed.</span><br><span class=\"line\"></span><br><span class=\"line\">3) System variables with new default values (sysVarsNewDefaults)</span><br><span class=\"line\">  Warning: Following system variables that are not defined <span class=\"keyword\">in</span> your</span><br><span class=\"line\">    configuration file will have new default values. Please review <span class=\"keyword\">if</span> you rely on</span><br><span class=\"line\">    their current values and <span class=\"keyword\">if</span> so define them before performing upgrade.</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/blog-archive/new-defaults-in-mysql-8-0/</span><br><span class=\"line\"></span><br><span class=\"line\">  binlog_transaction_dependency_tracking - default value will change from</span><br><span class=\"line\">    COMMIT_ORDER to WRITESET.</span><br><span class=\"line\">  group_replication_consistency - default value will change from EVENTUAL to</span><br><span class=\"line\">    BEFORE_ON_PRIMARY_FAILOVER.</span><br><span class=\"line\">  group_replication_exit_state_action - default value will change from</span><br><span class=\"line\">    READ_ONLY to OFFLINE_MODE.</span><br><span class=\"line\">  innodb_adaptive_hash_index - default value will change from ON to OFF.</span><br><span class=\"line\">  innodb_buffer_pool_in_core_file - default value will change from ON to OFF.</span><br><span class=\"line\">  innodb_buffer_pool_instances - default value will change from 8 (or 1 <span class=\"keyword\">if</span></span><br><span class=\"line\">    innodb_buffer_pool_size &lt; 1GB) to MAX(1, <span class=\"comment\">#vcpu/4).</span></span><br><span class=\"line\">  innodb_change_buffering - default value will change from all to none.</span><br><span class=\"line\">  innodb_doublewrite_files - default value will change from</span><br><span class=\"line\">    innodb_buffer_pool_instances * 2 to 2.</span><br><span class=\"line\">  innodb_doublewrite_pages - default value will change from</span><br><span class=\"line\">    innodb_write_io_threads to 128.</span><br><span class=\"line\">  innodb_flush_method - default value will change from fsynch (unix) or</span><br><span class=\"line\">    unbuffered (windows) to O_DIRECT.</span><br><span class=\"line\">  innodb_io_capacity - default value will change from 200 to 10000.</span><br><span class=\"line\">  innodb_io_capacity_max - default value will change from 200 to 2 x</span><br><span class=\"line\">    innodb_io_capacity.</span><br><span class=\"line\">  innodb_log_buffer_size - default value will change from 16777216 (16MB) to</span><br><span class=\"line\">    67108864 (64MB).</span><br><span class=\"line\">  innodb_log_writer_threads - default value will change from ON to OFF ( <span class=\"keyword\">if</span></span><br><span class=\"line\">    <span class=\"comment\">#vcpu &lt;= 32 ).</span></span><br><span class=\"line\">  innodb_numa_interleave - default value will change from OFF to ON.</span><br><span class=\"line\">  innodb_page_cleaners - default value will change from 4 to</span><br><span class=\"line\">    innodb_buffer_pool_instances.</span><br><span class=\"line\">  innodb_parallel_read_threads - default value will change from 4 to</span><br><span class=\"line\">    MAX(#vcpu/8, 4).</span><br><span class=\"line\">  innodb_purge_threads - default value will change from 4 to 1 ( <span class=\"keyword\">if</span> <span class=\"comment\">#vcpu &lt;= 16</span></span><br><span class=\"line\">    ).</span><br><span class=\"line\">  innodb_read_io_threads - default value will change from 4 to MAX(#vcpu/2, 4).</span><br><span class=\"line\">  innodb_redo_log_capacity - default value will change from 104857600 (100MB)</span><br><span class=\"line\">    to MIN ( <span class=\"comment\">#vcpu/2, 16 )GB.</span></span><br><span class=\"line\"></span><br><span class=\"line\">4) Issues reported by <span class=\"string\">&#x27;check table x for upgrade&#x27;</span> <span class=\"built_in\">command</span> (checkTableCommand)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">5) Check <span class=\"keyword\">for</span> deprecated usage of single dollar signs <span class=\"keyword\">in</span> object names</span><br><span class=\"line\">(dollarSignName)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">6) Check <span class=\"keyword\">for</span> deprecated or invalid user authentication methods.</span><br><span class=\"line\">(authMethodUsage)</span><br><span class=\"line\">  Warning: The following <span class=\"built_in\">users</span> are using the <span class=\"string\">&#x27;mysql_native_password&#x27;</span></span><br><span class=\"line\">  authentication method <span class=\"built_in\">which</span> is deprecated as of MySQL 8.0.0 and will be</span><br><span class=\"line\">  removed <span class=\"keyword\">in</span> a future release.</span><br><span class=\"line\">  Consider switching the <span class=\"built_in\">users</span> to a different authentication method (i.e.</span><br><span class=\"line\">  caching_sha2_password).</span><br><span class=\"line\"></span><br><span class=\"line\">  - mydb@%</span><br><span class=\"line\">  - mysql.session@localhost</span><br><span class=\"line\">  - mysql.sys@localhost</span><br><span class=\"line\">  - root@localhost</span><br><span class=\"line\"></span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">7) Check <span class=\"keyword\">for</span> deprecated or removed plugin usage. (pluginUsage)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">8) Check <span class=\"keyword\">for</span> deprecated or invalid default authentication methods <span class=\"keyword\">in</span> system</span><br><span class=\"line\">variables. (deprecatedDefaultAuth)</span><br><span class=\"line\">  The following variables have problems with their <span class=\"built_in\">set</span> authentication method:</span><br><span class=\"line\"></span><br><span class=\"line\">  Error: default_authentication_plugin - mysql_native_password authentication</span><br><span class=\"line\">    method was removed and it must be corrected before upgrading to 8.4.0 release.</span><br><span class=\"line\"></span><br><span class=\"line\">9) Check <span class=\"keyword\">for</span> deprecated or invalid authentication methods <span class=\"keyword\">in</span> use by MySQL</span><br><span class=\"line\">Router internal accounts. (deprecatedRouterAuthMethod)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">10) Checks <span class=\"keyword\">for</span> errors <span class=\"keyword\">in</span> column definitions (columnDefinition)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">11) Check <span class=\"keyword\">for</span> allowed values <span class=\"keyword\">in</span> System Variables. (sysvarAllowedValues)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">12) Checks <span class=\"keyword\">for</span> user privileges that will be removed (invalidPrivileges)</span><br><span class=\"line\">  Verifies <span class=\"keyword\">for</span> <span class=\"built_in\">users</span> containing grants to be removed, since privileges are</span><br><span class=\"line\">    removed as part of the upgrade, raises a NOTICE to inform the user about</span><br><span class=\"line\">    <span class=\"built_in\">users</span> that will be losing invalid privileges</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"string\">&#x27;mysql.session&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> - The user <span class=\"string\">&#x27;mysql.session&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> has the</span><br><span class=\"line\">    following privileges that will be removed as part of the upgrade process:</span><br><span class=\"line\">    SET_USER_ID</span><br><span class=\"line\">  <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> - The user <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> has the following privileges</span><br><span class=\"line\">    that will be removed as part of the upgrade process: SET_USER_ID</span><br><span class=\"line\"></span><br><span class=\"line\">13) Checks <span class=\"keyword\">for</span> partitions by key using columns with prefix key indexes</span><br><span class=\"line\">(partitionsWithPrefixKeys)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">Errors:   2</span><br><span class=\"line\">Warnings: 24</span><br><span class=\"line\">Notices:  2</span><br><span class=\"line\"></span><br><span class=\"line\">ERROR: 2 errors were found. Please correct these issues before upgrading to avoid compatibility issues.</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>看到了两处错误，就是我们上面说的那两个参数需要修改，修改<code>./mysql8.0.30/my.cnf</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># binlog日志过期时间，单位秒，过期的binlog日志会被删除，保证磁盘空间，这里设置为10天，mysql8以前的版本这个参数是expire-logs-days，单位是天</span></span><br><span class=\"line\">binlog_expire_logs_seconds =864000</span><br><span class=\"line\"><span class=\"comment\">#expire-logs-days=10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#default_authentication_plugin=mysql_native_password</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>修改后要重启数据库</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭数据库</span></span><br><span class=\"line\"> ./mysql8.0.30/bin/mysqladmin --defaults-file=./mysql8.0.30/my.cnf -uroot -p123456 shutdown</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\"># 使用8.0.30启动</span></span><br><span class=\"line\"> ./mysql8.0.30/bin/mysqld_safe --defaults-file=./mysql8.0.30/my.cnf &amp;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>再次进程升级检查</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 升级检查</span></span><br><span class=\"line\">./mysqlsh8.4.0/bin/mysqlsh --uri root:123456@localhost</span><br><span class=\"line\"><span class=\"comment\"># 输出</span></span><br><span class=\"line\">MySQL Shell 8.4.0</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2016, 2024, Oracle and/or its affiliates.</span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation and/or its affiliates.</span><br><span class=\"line\">Other names may be trademarks of their respective owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type <span class=\"string\">&#x27;\\help&#x27;</span> or <span class=\"string\">&#x27;\\?&#x27;</span> <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>; <span class=\"string\">&#x27;\\quit&#x27;</span> to <span class=\"built_in\">exit</span>.</span><br><span class=\"line\">WARNING: Using a password on the <span class=\"built_in\">command</span> line interface can be insecure.</span><br><span class=\"line\">Creating a Classic session to <span class=\"string\">&#x27;root@/tmp%2Fmysql.sock&#x27;</span></span><br><span class=\"line\">Fetching global names <span class=\"keyword\">for</span> auto-completion... Press ^C to stop.</span><br><span class=\"line\">Your MySQL connection <span class=\"built_in\">id</span> is 8</span><br><span class=\"line\">Server version: 8.0.30 MySQL Community Server - GPL</span><br><span class=\"line\">No default schema selected; <span class=\"built_in\">type</span> \\use &lt;schema&gt; to <span class=\"built_in\">set</span> one.</span><br><span class=\"line\"> MySQL  localhost  SQL &gt; \\js</span><br><span class=\"line\">Switching to JavaScript mode...</span><br><span class=\"line\"> MySQL  localhost  JS &gt; util.checkForServerUpgrade()</span><br><span class=\"line\">The MySQL server at /tmp%2Fmysql.sock, version 8.0.30 - MySQL Community Server</span><br><span class=\"line\">- GPL, will now be checked <span class=\"keyword\">for</span> compatibility issues <span class=\"keyword\">for</span> upgrade to MySQL 8.4.0.</span><br><span class=\"line\">To check <span class=\"keyword\">for</span> a different target server version, use the targetVersion option.</span><br><span class=\"line\"></span><br><span class=\"line\">WARNING: Upgrading MySQL Server from version 8.0.30 to 8.4.0 is not supported.</span><br><span class=\"line\">Please consider running the check using the following option: targetVersion=8.0</span><br><span class=\"line\"></span><br><span class=\"line\">1) Usage of db objects with names conflicting with new reserved keywords</span><br><span class=\"line\">(reservedKeywords)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">2) Removed system variables (removedSysVars)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">3) System variables with new default values (sysVarsNewDefaults)</span><br><span class=\"line\">  Warning: Following system variables that are not defined <span class=\"keyword\">in</span> your</span><br><span class=\"line\">    configuration file will have new default values. Please review <span class=\"keyword\">if</span> you rely on</span><br><span class=\"line\">    their current values and <span class=\"keyword\">if</span> so define them before performing upgrade.</span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/blog-archive/new-defaults-in-mysql-8-0/</span><br><span class=\"line\"></span><br><span class=\"line\">  binlog_transaction_dependency_tracking - default value will change from</span><br><span class=\"line\">    COMMIT_ORDER to WRITESET.</span><br><span class=\"line\">  group_replication_consistency - default value will change from EVENTUAL to</span><br><span class=\"line\">    BEFORE_ON_PRIMARY_FAILOVER.</span><br><span class=\"line\">  group_replication_exit_state_action - default value will change from</span><br><span class=\"line\">    READ_ONLY to OFFLINE_MODE.</span><br><span class=\"line\">  innodb_adaptive_hash_index - default value will change from ON to OFF.</span><br><span class=\"line\">  innodb_buffer_pool_in_core_file - default value will change from ON to OFF.</span><br><span class=\"line\">  innodb_buffer_pool_instances - default value will change from 8 (or 1 <span class=\"keyword\">if</span></span><br><span class=\"line\">    innodb_buffer_pool_size &lt; 1GB) to MAX(1, <span class=\"comment\">#vcpu/4).</span></span><br><span class=\"line\">  innodb_change_buffering - default value will change from all to none.</span><br><span class=\"line\">  innodb_doublewrite_files - default value will change from</span><br><span class=\"line\">    innodb_buffer_pool_instances * 2 to 2.</span><br><span class=\"line\">  innodb_doublewrite_pages - default value will change from</span><br><span class=\"line\">    innodb_write_io_threads to 128.</span><br><span class=\"line\">  innodb_flush_method - default value will change from fsynch (unix) or</span><br><span class=\"line\">    unbuffered (windows) to O_DIRECT.</span><br><span class=\"line\">  innodb_io_capacity - default value will change from 200 to 10000.</span><br><span class=\"line\">  innodb_io_capacity_max - default value will change from 200 to 2 x</span><br><span class=\"line\">    innodb_io_capacity.</span><br><span class=\"line\">  innodb_log_buffer_size - default value will change from 16777216 (16MB) to</span><br><span class=\"line\">    67108864 (64MB).</span><br><span class=\"line\">  innodb_log_writer_threads - default value will change from ON to OFF ( <span class=\"keyword\">if</span></span><br><span class=\"line\">    <span class=\"comment\">#vcpu &lt;= 32 ).</span></span><br><span class=\"line\">  innodb_numa_interleave - default value will change from OFF to ON.</span><br><span class=\"line\">  innodb_page_cleaners - default value will change from 4 to</span><br><span class=\"line\">    innodb_buffer_pool_instances.</span><br><span class=\"line\">  innodb_parallel_read_threads - default value will change from 4 to</span><br><span class=\"line\">    MAX(#vcpu/8, 4).</span><br><span class=\"line\">  innodb_purge_threads - default value will change from 4 to 1 ( <span class=\"keyword\">if</span> <span class=\"comment\">#vcpu &lt;= 16</span></span><br><span class=\"line\">    ).</span><br><span class=\"line\">  innodb_read_io_threads - default value will change from 4 to MAX(#vcpu/2, 4).</span><br><span class=\"line\">  innodb_redo_log_capacity - default value will change from 104857600 (100MB)</span><br><span class=\"line\">    to MIN ( <span class=\"comment\">#vcpu/2, 16 )GB.</span></span><br><span class=\"line\"></span><br><span class=\"line\">4) Issues reported by <span class=\"string\">&#x27;check table x for upgrade&#x27;</span> <span class=\"built_in\">command</span> (checkTableCommand)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">5) Check <span class=\"keyword\">for</span> deprecated usage of single dollar signs <span class=\"keyword\">in</span> object names</span><br><span class=\"line\">(dollarSignName)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">6) Check <span class=\"keyword\">for</span> deprecated or invalid user authentication methods.</span><br><span class=\"line\">(authMethodUsage)</span><br><span class=\"line\">  Warning: The following <span class=\"built_in\">users</span> are using the <span class=\"string\">&#x27;mysql_native_password&#x27;</span></span><br><span class=\"line\">  authentication method <span class=\"built_in\">which</span> is deprecated as of MySQL 8.0.0 and will be</span><br><span class=\"line\">  removed <span class=\"keyword\">in</span> a future release.</span><br><span class=\"line\">  Consider switching the <span class=\"built_in\">users</span> to a different authentication method (i.e.</span><br><span class=\"line\">  caching_sha2_password).</span><br><span class=\"line\"></span><br><span class=\"line\">  - mydb@%</span><br><span class=\"line\">  - mysql.session@localhost</span><br><span class=\"line\">  - mysql.sys@localhost</span><br><span class=\"line\">  - root@localhost</span><br><span class=\"line\"></span><br><span class=\"line\">  More information:</span><br><span class=\"line\">    https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">7) Check <span class=\"keyword\">for</span> deprecated or removed plugin usage. (pluginUsage)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">8) Check <span class=\"keyword\">for</span> deprecated or invalid default authentication methods <span class=\"keyword\">in</span> system</span><br><span class=\"line\">variables. (deprecatedDefaultAuth)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">9) Check <span class=\"keyword\">for</span> deprecated or invalid authentication methods <span class=\"keyword\">in</span> use by MySQL</span><br><span class=\"line\">Router internal accounts. (deprecatedRouterAuthMethod)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">10) Checks <span class=\"keyword\">for</span> errors <span class=\"keyword\">in</span> column definitions (columnDefinition)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">11) Check <span class=\"keyword\">for</span> allowed values <span class=\"keyword\">in</span> System Variables. (sysvarAllowedValues)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">12) Checks <span class=\"keyword\">for</span> user privileges that will be removed (invalidPrivileges)</span><br><span class=\"line\">  Verifies <span class=\"keyword\">for</span> <span class=\"built_in\">users</span> containing grants to be removed, since privileges are</span><br><span class=\"line\">    removed as part of the upgrade, raises a NOTICE to inform the user about</span><br><span class=\"line\">    <span class=\"built_in\">users</span> that will be losing invalid privileges</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"string\">&#x27;mysql.session&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> - The user <span class=\"string\">&#x27;mysql.session&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> has the</span><br><span class=\"line\">    following privileges that will be removed as part of the upgrade process:</span><br><span class=\"line\">    SET_USER_ID</span><br><span class=\"line\">  <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> - The user <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> has the following privileges</span><br><span class=\"line\">    that will be removed as part of the upgrade process: SET_USER_ID</span><br><span class=\"line\"></span><br><span class=\"line\">13) Checks <span class=\"keyword\">for</span> partitions by key using columns with prefix key indexes</span><br><span class=\"line\">(partitionsWithPrefixKeys)</span><br><span class=\"line\">  No issues found</span><br><span class=\"line\"></span><br><span class=\"line\">Errors:   0</span><br><span class=\"line\">Warnings: 24</span><br><span class=\"line\">Notices:  2</span><br><span class=\"line\"></span><br><span class=\"line\">NOTE: No fatal errors were found that would prevent an upgrade, but some potential issues were detected. Please ensure that the reported issues are not significant before upgrading.</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>此时看到通过检查，关闭数据库直接升级吧</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭数据库</span></span><br><span class=\"line\">./mysql8.0.30/bin/mysqladmin --defaults-file=./mysql8.0.30/my.cnf -uroot -p123456 shutdown</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制mysql配置文件</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> ./mysql8.0.30/my.cnf ./mysql8.4.0/my.cnf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改新的配置文件中的basedir，使其指向8.4.0的安装路径</span></span><br><span class=\"line\">basedir    = /usr/local/soft/mysql8.4.0</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\"># 使用8.4.0启动</span></span><br><span class=\"line\">./mysql8.4.0/bin/mysqld_safe --defaults-file=./mysql8.4.0/my.cnf &amp;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看日志，依旧是没有错误，升级很顺利</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2024-05-09T07:21:55.325669Z 0 [System] [MY-015015] [Server] MySQL Server - start.</span><br><span class=\"line\">2024-05-09T07:21:55.740435Z 0 [Warning] [MY-011070] [Server] &#x27;binlog_format&#x27; is deprecated and will be removed in a future release.</span><br><span class=\"line\">2024-05-09T07:21:55.740549Z 0 [Warning] [MY-010097] [Server] Insecure configuration for --secure-file-priv: Current value does not restrict location of generated files. Consider setting it to a valid, non-empty path.</span><br><span class=\"line\">2024-05-09T07:21:55.740629Z 0 [System] [MY-010116] [Server] /usr/local/soft/mysql-8.4.0-linux-glibc2.17-x86_64/bin/mysqld (mysqld 8.4.0) starting as process 28414</span><br><span class=\"line\">2024-05-09T07:21:55.796983Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class=\"line\">2024-05-09T07:21:56.421873Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class=\"line\">2024-05-09T07:21:56.442008Z 1 [System] [MY-011090] [Server] Data dictionary upgrading from version &#x27;80023&#x27; to &#x27;80300&#x27;.</span><br><span class=\"line\">2024-05-09T07:21:57.106002Z 1 [System] [MY-013413] [Server] Data dictionary upgrade from version &#x27;80023&#x27; to &#x27;80300&#x27; completed.</span><br><span class=\"line\">2024-05-09T07:22:00.128935Z 4 [System] [MY-013381] [Server] Server upgrade from &#x27;80030&#x27; to &#x27;80400&#x27; started.</span><br><span class=\"line\">2024-05-09T07:22:06.850838Z 4 [System] [MY-013381] [Server] Server upgrade from &#x27;80030&#x27; to &#x27;80400&#x27; completed.</span><br><span class=\"line\">2024-05-09T07:22:07.063386Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class=\"line\">2024-05-09T07:22:07.063456Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.</span><br><span class=\"line\">2024-05-09T07:22:07.085760Z 0 [System] [MY-010931] [Server] /usr/local/soft/mysql-8.4.0-linux-glibc2.17-x86_64/bin/mysqld: ready for connections. Version: &#x27;8.4.0&#x27;  socket: &#x27;/tmp/mysql.sock&#x27;  port: 3306  MySQL Community Server - GPL.</span><br><span class=\"line\">2024-05-09T07:22:07.340333Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: &#x27;::&#x27; port: 33060, socket: /tmp/mysqlx.sock</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>从日志看到’binlog_format’也要不支持了，不过先不用管，等到不支持了再处理吧。</p>\n</blockquote>\n<h2 id=\"如果升级到8-4之前忘记修改密码插件了，则升级之后就不能正常登录了，此时怎么办呢？\">如果升级到8.4之前忘记修改密码插件了，则升级之后就不能正常登录了，此时怎么办呢？</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>升级到8.4之前忘记修改密码插件了，则升级之后登录数据库会报告如下错误</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR 1524 (HY000): Plugin &#x27;mysql_native_password&#x27; is not loaded</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>解决方案<br>\n在mysql的配置文件中增加<code>mysql-native-password=ON</code>，然后重启数据库即可，但还是建议尽快修改用户的认证插件为<code>caching_sha2_password</code>吧，毕竟这个认证方式存在安全漏洞。</p>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n笔者之前没有注意到8.4.0新增的<code>mysql-native-password=ON</code>这个配置，所以采用了如下重置密码的方式进行插件修改，留个纪念吧。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># kill掉mysql服务</span></span><br><span class=\"line\">killall mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 无权限模式启动</span></span><br><span class=\"line\">./mysql8.4.0/bin/mysqld_safe --defaults-file=./mysql8.4.0/my.cnf --skip-grant-tables &amp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录，此时不需要密码</span></span><br><span class=\"line\">./mysql8.4.0/bin/mysql -uroot</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; USE mysql;</span><br><span class=\"line\"><span class=\"comment\"># 修改密码插件为 caching_sha2_password</span></span><br><span class=\"line\">mysql&gt; UPDATE user SET plugin=<span class=\"string\">&#x27;caching_sha2_password&#x27;</span> WHERE User=<span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\"># 将密码设置为空</span></span><br><span class=\"line\">mysql&gt; UPDATE user SET authentication_string=null WHERE User=<span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\"># 刷新权限：</span></span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br><span class=\"line\"><span class=\"comment\"># 退出MySQL</span></span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">exit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭数据库，此时不需要密码即可关闭</span></span><br><span class=\"line\">./mysql8.4.0/bin/mysqladmin --defaults-file=./mysql8.4.0/my.cnf -uroot -p shutdown</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启启动mysql服务</span></span><br><span class=\"line\">./mysql8.4.0/bin/mysqld_safe --defaults-file=./mysql8.4.0/my.cnf &amp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录，此时依旧不需要密码</span></span><br><span class=\"line\">./mysql8.4.0/bin/mysql -uroot</span><br><span class=\"line\"><span class=\"comment\"># 设置密码</span></span><br><span class=\"line\">mysql&gt; ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\"># 刷新权限：</span></span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br><span class=\"line\"><span class=\"comment\"># 退出MySQL</span></span><br><span class=\"line\">mysql&gt; <span class=\"built_in\">exit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登录，此时使用密码就可以正常登录了</span></span><br><span class=\"line\">./mysql8.4.0/bin/mysql -uroot -p123456</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 之后再修改其他用户的密码即可，比如</span></span><br><span class=\"line\">mysql&gt; ALTER USER <span class=\"string\">&#x27;other&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> IDENTIFIED WITH caching_sha2_password BY <span class=\"string\">&#x27;otherpass&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看修改后的user信息</span></span><br><span class=\"line\">mysql&gt; use mysql;</span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">select</span> user,host,plugin from user;</span><br></pre></td></tr></table></figure>\n</div>\n","content_text":"摘要 MySql知识点介绍:从Mysql5.7升级到Mysql8 本文基于mysql-8.0.30，https://dev.mysql.com/doc/refman/8.0/en/ 2024-04-30，mysql-8.4.0 LTS版本发布，本文在将mysql从5.7.44升级到8.0.30的基础上，升级到8.4.0 LTS版本。mysql-8.4.0 LTS官方文档 从Mysql5.7升级到Mysql8 升级前，请先备份数据库，防止升级失败 mysqlsh 在mysql8以前，升级mysql还是比较麻烦的，除了要处理不兼容的参数和语法外，而且不支持跨版本的升级，比如5.5必须先升级到5.6，然后再升级到5.7。 mysqlsh是mysql官方提供的一个命令行工具，是MySQL的高级客户端和代码编辑器。其不仅可以像使用mysql命令一样执行sql，而且还支持js脚本、python脚本，等等，具体可以查看官网。 mysqlsh的众多功能之一就是可以检测当前版本是否可以升级到与当前mysqlsh相同的版本。 如果你当前的版本是5.6，你甚至都不需要先将数据库升级到5.7就可以直接升级到8.0，因为mysql8.0支持mysql5.5到mysql8.0的升级。 mysqlsh官方文档 安装mysqlsh 官网下载地址 选择需要的版本进行下载，我这里选择下载的版本是linux的8.0.30版本 下载后解压即可 检查是否可以升级 官网说明 123456789101112# mysqlsh8.4以前可以使用如下方法，因为其默认就是执行js代码./mysqlsh username:password@host -e &quot;util.checkForServerUpgrade()&quot;# mysqlsh8.4后默认执行的是sql代码，所以要先登录，切换到js环境后再运行上面的代码# 登录./mysqlsh username:password@host MySQL localhost SQL &gt; \\jsSwitching to JavaScript mode... MySQL localhost JS &gt; util.checkForServerUpgrade() …………………………………………………… # 退出 MySQL localhost JS &gt; \\qBye! 检查输出信息说明 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148WARNING: Using a password on the command line interface can be insecure.The MySQL server atlocalhost:3306, version5.7.44-log - Please upgrade to 8.0 or opt-in to the paid RDS Extended Supportservice before 5.7 reaches end of standard support on 29 February, 2024:https://a.co/hQqiIn0, will now be checked for compatibility issues for upgradeto MySQL 8.0.30...# 旧时间类型的使用1) Usage of old temporal type No issues found# 使用与新保留关键字冲突的数据库对象名称2) Usage of db objects with names conflicting with new reserved keywords No issues found# 使用utf8mb3字符集3) Usage of utf8mb3 charset Warning: The following objects use the utf8mb3 character set. It is recommended to convert them to use utf8mb4 instead, for improved Unicode support. More information: https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf8mb3.html mydb - schema&#x27;s default character set: utf8 mysql - schema&#x27;s default character set: utf8 mydb.tbl_info_i.a_product - column&#x27;s default character set: utf8 mydb.tbl_info_i.a_country - column&#x27;s default character set: utf8 mydb.tbl_info_i.a_version - column&#x27;s default character set: utf8 mydb.tbl_info_i.a_placement - column&#x27;s default character set: utf8………………………………………………………………………………………………………………………………# MySQL模式中的表名与8.0中的新表冲突4) Table names in the mysql schema conflicting with new tables in 8.0 No issues found# 使用非本机分区引擎的分区表5) Partitioned tables using engines with non native partitioning No issues found# 外键约束名称超过64个字符6) Foreign key constraint names longer than 64 characters No issues found# 使用过时的MAXDB sql_mode标志7) Usage of obsolete MAXDB sql_mode flag No issues found# 使用过时的sql_mode标志8) Usage of obsolete sql_mode flags No issues found# ENUM/SET列定义包含超过255个字符的元素9) ENUM/SET column definitions containing elements longer than 255 characters No issues found# 在共享表空间中使用分区表10) Usage of partitioned tables in shared tablespaces No issues found# 表空间数据文件路径中的循环目录引用11) Circular directory references in tablespace data file paths No issues found# 使用已删除的函数12) Usage of removed functions No issues found# 使用已删除的GROUP BY ASC/DESC语法13) Usage of removed GROUP BY ASC/DESC syntax No issues found# 已删除的用于错误日志记录到系统日志配置的系统变量14) Removed system variables for error logging to the system log configuration To run this check requires full path to MySQL server configuration file to be specified at &#x27;configPath&#x27; key of options dictionary More information: https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-13.html#mysqld-8-0-13-logging# 已删除的系统变量15) Removed system variables To run this check requires full path to MySQL server configuration file to be specified at &#x27;configPath&#x27; key of options dictionary More information: https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html#optvars-removed# 具有新默认值的系统变量16) System variables with new default values To run this check requires full path to MySQL server configuration file to be specified at &#x27;configPath&#x27; key of options dictionary More information: https://mysqlserverteam.com/new-defaults-in-mysql-8-0/# 零日期、日期时间和时间戳值17) Zero Date, Datetime, and Timestamp values Warning: By default zero date/datetime/timestamp values are no longer allowed in MySQL, as of 5.7.8 NO_ZERO_IN_DATE and NO_ZERO_DATE are included in SQL_MODE by default. These modes should be used with strict mode as they will be merged with strict mode in a future release. If you do not include these modes in your SQL_MODE setting, you are able to insert date/datetime/timestamp values that contain zeros. It is strongly advised to replace zero values with valid ones, as they may not work correctly in the future. More information: https://lefred.be/content/mysql-8-0-and-wrong-dates/ global.sql_mode - does not contain either NO_ZERO_DATE or NO_ZERO_IN_DATE which allows insertion of zero dates# 由文件删除或损坏导致的模式不一致18) Schema inconsistencies resulting from file removal or corruption No issues found# 被InnoDB识别但属于不同引擎的表19) Tables recognized by InnoDB that belong to a different engine No issues found# &#x27;check table x for upgrade&#x27;命令报告的问题20) Issues reported by &#x27;check table x for upgrade&#x27; command No issues found# 新的默认认证插件考虑21) New default authentication plugin considerations Warning: The new default authentication plugin &#x27;caching_sha2_password&#x27; offers more secure password hashing than previously used &#x27;mysql_native_password&#x27; (and consequent improved client connection authentication). However, it also has compatibility implications that may affect existing MySQL installations. If your MySQL installation must serve pre-8.0 clients and you encounter compatibility issues after upgrading, the simplest way to address those issues is to reconfigure the server to revert to the previous default authentication plugin (mysql_native_password). For example, use these lines in the server option file: [mysqld] default_authentication_plugin=mysql_native_password However, the setting should be viewed as temporary, not as a long term or permanent solution, because it causes new accounts created with the setting in effect to forego the improved authentication security. If you are using replication please take time to understand how the authentication plugin changes may impact you. More information: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-compatibility-issues https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-replicationErrors: 0Warnings: 98Notices: 0NOTE: No fatal errors were found that would prevent an upgrade, but some potential issues were detected. Please ensure that the reported issues are not significant before upgrading. 可以看到，其检查的数据库版本是5.7.44，其检查是否可以升级到8.0.30 检测项共有21个，其中警告有98个，错误有0个，注意，如果有错误，则不能直接升级，需要解决错误问题，否则升级会失败。至于警告暂时可以不处理。 警告集中体现在字符集上，5.7.44的字符集是utf8(实际就是utf8mb3)，而mysql8以后的默认字符集是utf8mb4，这个警告不影响升级，可以忽略。如果需要修改字符集到utf8mb4，需要注意原来的字段字符串长度是否符合要求，因为utf8mb4是4字节，而utf8mb3是3字节。另外如果使用了存储过程也要注意参数的长度是否符合要求。 这里说一下default_authentication_plugin，mysql8.0.13开始，默认的认证插件是caching_sha2_password，而之前是mysql_native_password，这个警告虽然可以忽略，但是升级后建议尽快将认证插件修改为caching_sha2_password，因为mysql_native_password的认证方式存在安全漏洞，可以参考官方文档。另外，从mysql8.4.0开始，不再支持default_authentication_plugin，若要使其支持mysql_native_password插件，8.4.0开始为我们增加了一个新的配置项mysql-native-password，在[mysqld]中配置mysql-native-password=ON即可开启支持，默认为OFF。 另外还要注意关键词和保留词的问题，mysql8.0以后，又增加了很多个关键词和保留词，如果检查到则需要修改一下，不然升级会失败。即便表和字段里没有使用这些保留字，也要检查一下业务代码中是否有使用。关于关键词和保留词可以查看官网Keywords and Reserved Words，相比于MySQL 5.7，增加了大约130个，同时也减少了6个。 这里建议设置表名称和字段名称时，可以为其设置前缀，比如：表名称为：t_user、字段名称为：f_user_id 还有一点需要注意，Mysql8修改了很多参数的默认值，具体可以查看官方网站的说明，如果你不希望使用默认值，则需要将其配置到配置文件中，这里强调一下，重点关注 character_set_server 和 collation_server 这两个参数。所有的参数配置参考官方文档 关于字符集还想多说两句 mysql8的character_set_server默认是utf8mb4，collation_server默认是utf8mb4_0900_ai_ci 如果创建数据库或者表的时候没有指定字符集，则默认使用character_set_server和collation_server的默认值 此时新创建的表就有可能与旧表字符集不一致，关联查询时就有可能导致错误或因为需要进行字符集转换导致查询性能下降。 最好的方式是创建数据库或表时明确指定字符集，或者在my.cnf配置文件中配置character_set_server和collation_server的值。 升级数据库的过程 因为我们要升级到mysql8.0.30，所以需要先下载并安装mysql8.0.30 关闭mysql5.7的数据库 备份数据目录(一定要做好备份，升级后不能降级的) 根据检查提示修改my.cnf配置文件中的配置(主要是不兼容的配置，如果检查提示没有则不需要修改) 非常重要的一步，就是修改my.cnf配置文件中的basedir，将其指向mysql8.0.30的安装目录 直接使用mysql8.0.30的命令启动数据库，启动过程中就会完成数据库的升级，可以通过mysql的日志文件(log-error)查看升级情况 升级完成后尽快使用新的密码认证插件修改密码，注意要修改所有用户的密码，包括root用户 1mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH caching_sha2_password BY &#x27;123456&#x27;; 小贴士 mysql8.4.0相比于之前的版本变化比较大，具体可以查看官网文档 mysql5.7不要直接升级到8.4.0及以后的版本，可以先升级到8.0.30，然后再升级到8.4.0 升级到8.4.0前依旧要先使用mysqlsh检查是否可以升级，注意要下载对应的mysqlsh版本 升级前要先检查是否所有用户的密码插件都是caching_sha2_password，如果没有则需要修改 升级前要先检查my.cnf中是否配置了default_authentication_plugin，如果有则删除，如果必须要配置mysql_native_password认证插件，则需要配置mysql-native-password=ON 修改my.cnf中的basedir使其指向8.4.0的安装目录 使用8.4.0的命令启动mysql，检查日志是否有错误。 mysql5.7.44升级到8.0.30，再升级到8.4.0的完整过程 准备好各个版本的mysql和mysqlsh 1234567# 目录结构mysql5 # 5.7.44安装目录mysql8.0.30 # 8.0.30安装目录mysql8.4.0 # 8.4.0安装目录mysqlsh8.0.30 # 8.0.30的mysqlsh安装目录mysqlsh8.4.0 # 8.4.0的mysqlsh安装目录datas/mysql # 存放数据目录 mysql5/my.cnf配置 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758[mysql]default-character-set=utf8mb4local_infile=ON[client]default-character-set=utf8mb4port = 3306socket = /tmp/mysql.sock[mysqld]skip-name-resolvesecure_file_priv=&quot;&quot;local_infile=ONdefault_authentication_plugin=mysql_native_passwordport = 3306server-id = 1001user = mysqlsocket = /tmp/mysql.sockbasedir = /usr/local/soft/mysql5datadir = /usr/local/soft/datas/mysqllog-bin = mysql-binbinlog-format = ROWexpire-logs-days=10sync-binlog=0innodb_data_home_dir =./innodb_log_group_home_dir =./log-error =mysql.logpid-file =mysql.pidcharacter-set-server=utf8mb4lower_case_table_names=1autocommit =1slow_query_log=1slow_query_log_file=db_slow.loglong_query_time=5log_output=FILElog_queries_not_using_indexes=1skip-external-lockingkey_buffer_size = 256Mmax_allowed_packet = 64Mtable_open_cache = 1024sort_buffer_size = 4Mnet_buffer_length = 8Kread_buffer_size = 4Mread_rnd_buffer_size = 512Kmyisam_sort_buffer_size = 64Mthread_cache_size = 64tmp_table_size = 128Mexplicit_defaults_for_timestamp = truemax_connections = 500max_connect_errors = 100open_files_limit = 65535default_storage_engine = InnoDBinnodb_data_file_path = ibdata1:10M:autoextend 5.7.44升级到8.0.30 升级检查 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122# 升级检查./mysqlsh8.0.30/bin/mysqlsh --uri root:123456@localhost -e &quot;util.checkForServerUpgrade()&quot;# 输出WARNING: Using a password on the command line interface can be insecure.The MySQL server at /tmp%2Fmysql.sock, version 5.7.44-log - MySQL CommunityServer (GPL), will now be checked for compatibility issues for upgrade to MySQL8.0.30...1) Usage of old temporal type No issues found2) Usage of db objects with names conflicting with new reserved keywords No issues found3) Usage of utf8mb3 charset Warning: The following objects use the utf8mb3 character set. It is recommended to convert them to use utf8mb4 instead, for improved Unicode support. More information: https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-utf8mb3.html mydb - schema&#x27;s default character set: utf8 mysql - schema&#x27;s default character set: utf8 mydb.tbl_info_i.a_product - column&#x27;s default character set: utf8 mydb.tbl_info_i.a_country - column&#x27;s default character set: utf8 mydb.tbl_info_i.a_version - column&#x27;s default character set: utf8 mydb.tbl_info_i.a_placement - column&#x27;s default character set: utf8 …………………………………………………………………………………………4) Table names in the mysql schema conflicting with new tables in 8.0 No issues found5) Partitioned tables using engines with non native partitioning No issues found6) Foreign key constraint names longer than 64 characters No issues found7) Usage of obsolete MAXDB sql_mode flag No issues found8) Usage of obsolete sql_mode flags Notice: The following DB objects have obsolete options persisted for sql_mode, which will be cleared during upgrade to 8.0. More information: https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html#mysql-nutshell-removals global system variable sql_mode - defined using obsolete NO_AUTO_CREATE_USER option9) ENUM/SET column definitions containing elements longer than 255 characters No issues found10) Usage of partitioned tables in shared tablespaces No issues found11) Circular directory references in tablespace data file paths No issues found12) Usage of removed functions No issues found13) Usage of removed GROUP BY ASC/DESC syntax No issues found14) Removed system variables for error logging to the system log configuration To run this check requires full path to MySQL server configuration file to be specified at &#x27;configPath&#x27; key of options dictionary More information: https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-13.html#mysqld-8-0-13-logging15) Removed system variables To run this check requires full path to MySQL server configuration file to be specified at &#x27;configPath&#x27; key of options dictionary More information: https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html#optvars-removed16) System variables with new default values To run this check requires full path to MySQL server configuration file to be specified at &#x27;configPath&#x27; key of options dictionary More information: https://mysqlserverteam.com/new-defaults-in-mysql-8-0/17) Zero Date, Datetime, and Timestamp values No issues found18) Schema inconsistencies resulting from file removal or corruption No issues found19) Tables recognized by InnoDB that belong to a different engine No issues found20) Issues reported by &#x27;check table x for upgrade&#x27; command No issues found21) New default authentication plugin considerations Warning: The new default authentication plugin &#x27;caching_sha2_password&#x27; offers more secure password hashing than previously used &#x27;mysql_native_password&#x27; (and consequent improved client connection authentication). However, it also has compatibility implications that may affect existing MySQL installations. If your MySQL installation must serve pre-8.0 clients and you encounter compatibility issues after upgrading, the simplest way to address those issues is to reconfigure the server to revert to the previous default authentication plugin (mysql_native_password). For example, use these lines in the server option file: [mysqld] default_authentication_plugin=mysql_native_password However, the setting should be viewed as temporary, not as a long term or permanent solution, because it causes new accounts created with the setting in effect to forego the improved authentication security. If you are using replication please take time to understand how the authentication plugin changes may impact you. More information: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-compatibility-issues https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password-replicationErrors: 0Warnings: 98Notices: 1NOTE: No fatal errors were found that would prevent an upgrade, but some potential issues were detected. Please ensure that the reported issues are not significant before upgrading. 看到没有error，开始升级 1234567891011# 关闭数据库./mysql5/bin/mysqladmin --defaults-file=./mysql5/my.cnf -uroot -p123456 shutdown# 复制mysql配置文件cp ./mysql5/my.cnf ./mysql8.0.30/my.cnf# 修改新的配置文件中的basedir，使其指向8.0.30的安装路径basedir = /usr/local/soft/mysql8.0.30# 使用8.0.30启动./mysql8.0.30/bin/mysqld_safe --defaults-file=./mysql8.0.30/my.cnf &amp; 查看启动日志，没有错误说明升级成功 12345678910111213142024-05-09T06:48:50.524705Z 0 [Warning] [MY-011068] [Server] The syntax &#x27;expire-logs-days&#x27; is deprecated and will be removed in a future release. Please use binlog_expire_logs_seconds instead.2024-05-09T06:48:50.524819Z 0 [Warning] [MY-010097] [Server] Insecure configuration for --secure-file-priv: Current value does not restrict location of generated files. Consider setting it to a valid, non-empty path.2024-05-09T06:48:50.524917Z 0 [Warning] [MY-010918] [Server] &#x27;default_authentication_plugin&#x27; is deprecated and will be removed in a future release. Please use authentication_policy instead.2024-05-09T06:48:50.524983Z 0 [System] [MY-010116] [Server] /usr/local/soft/mysql8.0.30/bin/mysqld (mysqld 8.0.30) starting as process 266962024-05-09T06:48:50.563366Z 1 [System] [MY-011012] [Server] Starting upgrade of data directory.2024-05-09T06:48:50.563414Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.2024-05-09T06:48:51.260298Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.2024-05-09T06:48:53.614398Z 2 [System] [MY-011003] [Server] Finished populating Data Dictionary tables with data.2024-05-09T06:48:55.055320Z 5 [System] [MY-013381] [Server] Server upgrade from &#x27;50700&#x27; to &#x27;80030&#x27; started.2024-05-09T06:49:02.063990Z 5 [System] [MY-013381] [Server] Server upgrade from &#x27;50700&#x27; to &#x27;80030&#x27; completed.2024-05-09T06:49:02.237992Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.2024-05-09T06:49:02.238048Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.2024-05-09T06:49:02.267583Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: &#x27;::&#x27; port: 33060, socket: /tmp/mysqlx.sock2024-05-09T06:49:02.267648Z 0 [System] [MY-010931] [Server] /usr/local/soft/mysql8.0.30/bin/mysqld: ready for connections. Version: &#x27;8.0.30&#x27; socket: &#x27;/tmp/mysql.sock&#x27; port: 3306 MySQL Community Server - GPL. 根据日志提示我们应该修改两个配置参数，未来将不可用了，不过这里暂且先不去管它，等检查通不过了再进行处理就可以。 121.The syntax &#x27;expire-logs-days&#x27; is deprecated and will be removed in a future release. Please use binlog_expire_logs_seconds instead.2.&#x27;default_authentication_plugin&#x27; is deprecated and will be removed in a future release. Please use authentication_policy instead. 修改密码插件，这个步骤很重要 1234# 登录./mysql8.0.30/bin/mysql -uroot -p123456# 升级完成后使用新的密码认证插件修改密码，8.4不再推荐mysql_native_password认证插，所以升级到8.4以前一定要先修改密码插件，如果忘记了也没关系，文末有重置密码的方法mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH caching_sha2_password BY &#x27;123456&#x27;; 8.0.30升级到8.4.0 同样先用8.4.0的mysqlsh检查一下 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145# 升级检查./mysqlsh8.4.0/bin/mysqlsh --uri root:123456@localhost# 输出MySQL Shell 8.4.0Copyright (c) 2016, 2024, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or its affiliates.Other names may be trademarks of their respective owners.Type &#x27;\\help&#x27; or &#x27;\\?&#x27; for help; &#x27;\\quit&#x27; to exit.WARNING: Using a password on the command line interface can be insecure.Creating a Classic session to &#x27;root@/tmp%2Fmysql.sock&#x27;Fetching global names for auto-completion... Press ^C to stop.Your MySQL connection id is 15Server version: 8.0.30 MySQL Community Server - GPLNo default schema selected; type \\use &lt;schema&gt; to set one. MySQL localhost SQL &gt; \\jsSwitching to JavaScript mode... MySQL localhost JS &gt; util.checkForServerUpgrade()The MySQL server at /tmp%2Fmysql.sock, version 8.0.30 - MySQL Community Server- GPL, will now be checked for compatibility issues for upgrade to MySQL 8.4.0.To check for a different target server version, use the targetVersion option.WARNING: Upgrading MySQL Server from version 8.0.30 to 8.4.0 is not supported.Please consider running the check using the following option: targetVersion=8.01) Usage of db objects with names conflicting with new reserved keywords(reservedKeywords) No issues found2) Removed system variables (removedSysVars) Error: Following system variables that were detected as being used will be removed. Please update your system to not rely on them before the upgrade. More information: https://dev.mysql.com/doc/refman/8.0/en/added-deprecated-removed.html#optvars-removed expire_logs_days - Error: The system variable &#x27;expire_logs_days&#x27; is set to 10 (EXPLICIT) and will be removed.3) System variables with new default values (sysVarsNewDefaults) Warning: Following system variables that are not defined in your configuration file will have new default values. Please review if you rely on their current values and if so define them before performing upgrade. More information: https://dev.mysql.com/blog-archive/new-defaults-in-mysql-8-0/ binlog_transaction_dependency_tracking - default value will change from COMMIT_ORDER to WRITESET. group_replication_consistency - default value will change from EVENTUAL to BEFORE_ON_PRIMARY_FAILOVER. group_replication_exit_state_action - default value will change from READ_ONLY to OFFLINE_MODE. innodb_adaptive_hash_index - default value will change from ON to OFF. innodb_buffer_pool_in_core_file - default value will change from ON to OFF. innodb_buffer_pool_instances - default value will change from 8 (or 1 if innodb_buffer_pool_size &lt; 1GB) to MAX(1, #vcpu/4). innodb_change_buffering - default value will change from all to none. innodb_doublewrite_files - default value will change from innodb_buffer_pool_instances * 2 to 2. innodb_doublewrite_pages - default value will change from innodb_write_io_threads to 128. innodb_flush_method - default value will change from fsynch (unix) or unbuffered (windows) to O_DIRECT. innodb_io_capacity - default value will change from 200 to 10000. innodb_io_capacity_max - default value will change from 200 to 2 x innodb_io_capacity. innodb_log_buffer_size - default value will change from 16777216 (16MB) to 67108864 (64MB). innodb_log_writer_threads - default value will change from ON to OFF ( if #vcpu &lt;= 32 ). innodb_numa_interleave - default value will change from OFF to ON. innodb_page_cleaners - default value will change from 4 to innodb_buffer_pool_instances. innodb_parallel_read_threads - default value will change from 4 to MAX(#vcpu/8, 4). innodb_purge_threads - default value will change from 4 to 1 ( if #vcpu &lt;= 16 ). innodb_read_io_threads - default value will change from 4 to MAX(#vcpu/2, 4). innodb_redo_log_capacity - default value will change from 104857600 (100MB) to MIN ( #vcpu/2, 16 )GB.4) Issues reported by &#x27;check table x for upgrade&#x27; command (checkTableCommand) No issues found5) Check for deprecated usage of single dollar signs in object names(dollarSignName) No issues found6) Check for deprecated or invalid user authentication methods.(authMethodUsage) Warning: The following users are using the &#x27;mysql_native_password&#x27; authentication method which is deprecated as of MySQL 8.0.0 and will be removed in a future release. Consider switching the users to a different authentication method (i.e. caching_sha2_password). - mydb@% - mysql.session@localhost - mysql.sys@localhost - root@localhost More information: https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html7) Check for deprecated or removed plugin usage. (pluginUsage) No issues found8) Check for deprecated or invalid default authentication methods in systemvariables. (deprecatedDefaultAuth) The following variables have problems with their set authentication method: Error: default_authentication_plugin - mysql_native_password authentication method was removed and it must be corrected before upgrading to 8.4.0 release.9) Check for deprecated or invalid authentication methods in use by MySQLRouter internal accounts. (deprecatedRouterAuthMethod) No issues found10) Checks for errors in column definitions (columnDefinition) No issues found11) Check for allowed values in System Variables. (sysvarAllowedValues) No issues found12) Checks for user privileges that will be removed (invalidPrivileges) Verifies for users containing grants to be removed, since privileges are removed as part of the upgrade, raises a NOTICE to inform the user about users that will be losing invalid privileges &#x27;mysql.session&#x27;@&#x27;localhost&#x27; - The user &#x27;mysql.session&#x27;@&#x27;localhost&#x27; has the following privileges that will be removed as part of the upgrade process: SET_USER_ID &#x27;root&#x27;@&#x27;localhost&#x27; - The user &#x27;root&#x27;@&#x27;localhost&#x27; has the following privileges that will be removed as part of the upgrade process: SET_USER_ID13) Checks for partitions by key using columns with prefix key indexes(partitionsWithPrefixKeys) No issues foundErrors: 2Warnings: 24Notices: 2ERROR: 2 errors were found. Please correct these issues before upgrading to avoid compatibility issues. 看到了两处错误，就是我们上面说的那两个参数需要修改，修改./mysql8.0.30/my.cnf 12345# binlog日志过期时间，单位秒，过期的binlog日志会被删除，保证磁盘空间，这里设置为10天，mysql8以前的版本这个参数是expire-logs-days，单位是天binlog_expire_logs_seconds =864000#expire-logs-days=10#default_authentication_plugin=mysql_native_password 修改后要重启数据库 12345# 关闭数据库 ./mysql8.0.30/bin/mysqladmin --defaults-file=./mysql8.0.30/my.cnf -uroot -p123456 shutdown # 使用8.0.30启动 ./mysql8.0.30/bin/mysqld_safe --defaults-file=./mysql8.0.30/my.cnf &amp; 再次进程升级检查 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136# 升级检查./mysqlsh8.4.0/bin/mysqlsh --uri root:123456@localhost# 输出MySQL Shell 8.4.0Copyright (c) 2016, 2024, Oracle and/or its affiliates.Oracle is a registered trademark of Oracle Corporation and/or its affiliates.Other names may be trademarks of their respective owners.Type &#x27;\\help&#x27; or &#x27;\\?&#x27; for help; &#x27;\\quit&#x27; to exit.WARNING: Using a password on the command line interface can be insecure.Creating a Classic session to &#x27;root@/tmp%2Fmysql.sock&#x27;Fetching global names for auto-completion... Press ^C to stop.Your MySQL connection id is 8Server version: 8.0.30 MySQL Community Server - GPLNo default schema selected; type \\use &lt;schema&gt; to set one. MySQL localhost SQL &gt; \\jsSwitching to JavaScript mode... MySQL localhost JS &gt; util.checkForServerUpgrade()The MySQL server at /tmp%2Fmysql.sock, version 8.0.30 - MySQL Community Server- GPL, will now be checked for compatibility issues for upgrade to MySQL 8.4.0.To check for a different target server version, use the targetVersion option.WARNING: Upgrading MySQL Server from version 8.0.30 to 8.4.0 is not supported.Please consider running the check using the following option: targetVersion=8.01) Usage of db objects with names conflicting with new reserved keywords(reservedKeywords) No issues found2) Removed system variables (removedSysVars) No issues found3) System variables with new default values (sysVarsNewDefaults) Warning: Following system variables that are not defined in your configuration file will have new default values. Please review if you rely on their current values and if so define them before performing upgrade. More information: https://dev.mysql.com/blog-archive/new-defaults-in-mysql-8-0/ binlog_transaction_dependency_tracking - default value will change from COMMIT_ORDER to WRITESET. group_replication_consistency - default value will change from EVENTUAL to BEFORE_ON_PRIMARY_FAILOVER. group_replication_exit_state_action - default value will change from READ_ONLY to OFFLINE_MODE. innodb_adaptive_hash_index - default value will change from ON to OFF. innodb_buffer_pool_in_core_file - default value will change from ON to OFF. innodb_buffer_pool_instances - default value will change from 8 (or 1 if innodb_buffer_pool_size &lt; 1GB) to MAX(1, #vcpu/4). innodb_change_buffering - default value will change from all to none. innodb_doublewrite_files - default value will change from innodb_buffer_pool_instances * 2 to 2. innodb_doublewrite_pages - default value will change from innodb_write_io_threads to 128. innodb_flush_method - default value will change from fsynch (unix) or unbuffered (windows) to O_DIRECT. innodb_io_capacity - default value will change from 200 to 10000. innodb_io_capacity_max - default value will change from 200 to 2 x innodb_io_capacity. innodb_log_buffer_size - default value will change from 16777216 (16MB) to 67108864 (64MB). innodb_log_writer_threads - default value will change from ON to OFF ( if #vcpu &lt;= 32 ). innodb_numa_interleave - default value will change from OFF to ON. innodb_page_cleaners - default value will change from 4 to innodb_buffer_pool_instances. innodb_parallel_read_threads - default value will change from 4 to MAX(#vcpu/8, 4). innodb_purge_threads - default value will change from 4 to 1 ( if #vcpu &lt;= 16 ). innodb_read_io_threads - default value will change from 4 to MAX(#vcpu/2, 4). innodb_redo_log_capacity - default value will change from 104857600 (100MB) to MIN ( #vcpu/2, 16 )GB.4) Issues reported by &#x27;check table x for upgrade&#x27; command (checkTableCommand) No issues found5) Check for deprecated usage of single dollar signs in object names(dollarSignName) No issues found6) Check for deprecated or invalid user authentication methods.(authMethodUsage) Warning: The following users are using the &#x27;mysql_native_password&#x27; authentication method which is deprecated as of MySQL 8.0.0 and will be removed in a future release. Consider switching the users to a different authentication method (i.e. caching_sha2_password). - mydb@% - mysql.session@localhost - mysql.sys@localhost - root@localhost More information: https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html7) Check for deprecated or removed plugin usage. (pluginUsage) No issues found8) Check for deprecated or invalid default authentication methods in systemvariables. (deprecatedDefaultAuth) No issues found9) Check for deprecated or invalid authentication methods in use by MySQLRouter internal accounts. (deprecatedRouterAuthMethod) No issues found10) Checks for errors in column definitions (columnDefinition) No issues found11) Check for allowed values in System Variables. (sysvarAllowedValues) No issues found12) Checks for user privileges that will be removed (invalidPrivileges) Verifies for users containing grants to be removed, since privileges are removed as part of the upgrade, raises a NOTICE to inform the user about users that will be losing invalid privileges &#x27;mysql.session&#x27;@&#x27;localhost&#x27; - The user &#x27;mysql.session&#x27;@&#x27;localhost&#x27; has the following privileges that will be removed as part of the upgrade process: SET_USER_ID &#x27;root&#x27;@&#x27;localhost&#x27; - The user &#x27;root&#x27;@&#x27;localhost&#x27; has the following privileges that will be removed as part of the upgrade process: SET_USER_ID13) Checks for partitions by key using columns with prefix key indexes(partitionsWithPrefixKeys) No issues foundErrors: 0Warnings: 24Notices: 2NOTE: No fatal errors were found that would prevent an upgrade, but some potential issues were detected. Please ensure that the reported issues are not significant before upgrading. 此时看到通过检查，关闭数据库直接升级吧 1234567891011# 关闭数据库./mysql8.0.30/bin/mysqladmin --defaults-file=./mysql8.0.30/my.cnf -uroot -p123456 shutdown# 复制mysql配置文件cp ./mysql8.0.30/my.cnf ./mysql8.4.0/my.cnf# 修改新的配置文件中的basedir，使其指向8.4.0的安装路径basedir = /usr/local/soft/mysql8.4.0 # 使用8.4.0启动./mysql8.4.0/bin/mysqld_safe --defaults-file=./mysql8.4.0/my.cnf &amp; 查看日志，依旧是没有错误，升级很顺利 12345678910111213142024-05-09T07:21:55.325669Z 0 [System] [MY-015015] [Server] MySQL Server - start.2024-05-09T07:21:55.740435Z 0 [Warning] [MY-011070] [Server] &#x27;binlog_format&#x27; is deprecated and will be removed in a future release.2024-05-09T07:21:55.740549Z 0 [Warning] [MY-010097] [Server] Insecure configuration for --secure-file-priv: Current value does not restrict location of generated files. Consider setting it to a valid, non-empty path.2024-05-09T07:21:55.740629Z 0 [System] [MY-010116] [Server] /usr/local/soft/mysql-8.4.0-linux-glibc2.17-x86_64/bin/mysqld (mysqld 8.4.0) starting as process 284142024-05-09T07:21:55.796983Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.2024-05-09T07:21:56.421873Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.2024-05-09T07:21:56.442008Z 1 [System] [MY-011090] [Server] Data dictionary upgrading from version &#x27;80023&#x27; to &#x27;80300&#x27;.2024-05-09T07:21:57.106002Z 1 [System] [MY-013413] [Server] Data dictionary upgrade from version &#x27;80023&#x27; to &#x27;80300&#x27; completed.2024-05-09T07:22:00.128935Z 4 [System] [MY-013381] [Server] Server upgrade from &#x27;80030&#x27; to &#x27;80400&#x27; started.2024-05-09T07:22:06.850838Z 4 [System] [MY-013381] [Server] Server upgrade from &#x27;80030&#x27; to &#x27;80400&#x27; completed.2024-05-09T07:22:07.063386Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.2024-05-09T07:22:07.063456Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.2024-05-09T07:22:07.085760Z 0 [System] [MY-010931] [Server] /usr/local/soft/mysql-8.4.0-linux-glibc2.17-x86_64/bin/mysqld: ready for connections. Version: &#x27;8.4.0&#x27; socket: &#x27;/tmp/mysql.sock&#x27; port: 3306 MySQL Community Server - GPL.2024-05-09T07:22:07.340333Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: &#x27;::&#x27; port: 33060, socket: /tmp/mysqlx.sock 从日志看到’binlog_format’也要不支持了，不过先不用管，等到不支持了再处理吧。 如果升级到8.4之前忘记修改密码插件了，则升级之后就不能正常登录了，此时怎么办呢？ 升级到8.4之前忘记修改密码插件了，则升级之后登录数据库会报告如下错误 1ERROR 1524 (HY000): Plugin &#x27;mysql_native_password&#x27; is not loaded 解决方案 在mysql的配置文件中增加mysql-native-password=ON，然后重启数据库即可，但还是建议尽快修改用户的认证插件为caching_sha2_password吧，毕竟这个认证方式存在安全漏洞。 小贴士 笔者之前没有注意到8.4.0新增的mysql-native-password=ON这个配置，所以采用了如下重置密码的方式进行插件修改，留个纪念吧。 12345678910111213141516171819202122232425262728293031323334353637383940414243# kill掉mysql服务killall mysqld# 无权限模式启动./mysql8.4.0/bin/mysqld_safe --defaults-file=./mysql8.4.0/my.cnf --skip-grant-tables &amp;# 登录，此时不需要密码./mysql8.4.0/bin/mysql -urootmysql&gt; USE mysql;# 修改密码插件为 caching_sha2_passwordmysql&gt; UPDATE user SET plugin=&#x27;caching_sha2_password&#x27; WHERE User=&#x27;root&#x27;;# 将密码设置为空mysql&gt; UPDATE user SET authentication_string=null WHERE User=&#x27;root&#x27;;# 刷新权限：mysql&gt; FLUSH PRIVILEGES;# 退出MySQLmysql&gt; exit;# 关闭数据库，此时不需要密码即可关闭./mysql8.4.0/bin/mysqladmin --defaults-file=./mysql8.4.0/my.cnf -uroot -p shutdown# 重启启动mysql服务./mysql8.4.0/bin/mysqld_safe --defaults-file=./mysql8.4.0/my.cnf &amp;# 登录，此时依旧不需要密码./mysql8.4.0/bin/mysql -uroot# 设置密码mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27;;# 刷新权限：mysql&gt; FLUSH PRIVILEGES;# 退出MySQLmysql&gt; exit;# 登录，此时使用密码就可以正常登录了./mysql8.4.0/bin/mysql -uroot -p123456# 之后再修改其他用户的密码即可，比如mysql&gt; ALTER USER &#x27;other&#x27;@&#x27;%&#x27; IDENTIFIED WITH caching_sha2_password BY &#x27;otherpass&#x27;;# 查看修改后的user信息mysql&gt; use mysql;mysql&gt; select user,host,plugin from user;","summary":"摘要 MySql知识点介绍:从Mysql5.7升级到Mysql8 本文基于mysql-8.0.30，https://dev.mysql.com/doc/refman/8.0/en/ 2024-04-30，mysql-8.4.0 LTS版本发布，本文在将mysql从5.7.44升级到8.0.30的基础上，升级到8.4.0 LTS版本。mysql-8.4.0 LTS官方文档","date_published":"2024-05-08T13:35:05.000Z","tags":["技术","mysql","mysql"]},{"id":"https://blog.hanqunfeng.com/2024/04/08/mongodb7-pool-springboot/","url":"https://blog.hanqunfeng.com/2024/04/08/mongodb7-pool-springboot/","title":"MongoDB7.0--SpringBoot配置mongodb连接池","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍如何使用SpringBoot配置MongoDB7.0的连接池</p>\n</li>\n<li class=\"lvl-2\">\n<p>SpringBoot版本3.2.4，MongoDB版本7.0.6</p>\n</li>\n<li class=\"lvl-2\">\n<p>关于springboot与mongodb的集成可以参考：<a href=\"/2024/03/05/mongodb7-springboot/\" title=\"MongoDB7.0--SpringBoot单集合操作\">MongoDB7.0--SpringBoot单集合操作</a>，本文只讨论连接池相关内容。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"spring-boot-的-MongoDB-连接池\">spring-boot 的 MongoDB 连接池</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>当我们在springboot的配置文件中配置mongodb的相关属性时，并没有发现和连接池相关的属性，查看<code>MongoProperties</code>中的属性也可以证实这一点，这就很奇怪，按理说springboot应该不会这么弱鸡。</p>\n</li>\n<li class=\"lvl-2\">\n<p>于是我打算看看springboot的源码，看看springboot为我们自动创建的<code>MongoClient</code>到底有没有连接池的配置。</p>\n</li>\n<li class=\"lvl-2\">\n<p>我们就从mongodb的自动配置类<code>MongoAutoConfiguration</code>开始，该类中定义了<code>PropertiesMongoConnectionDetails</code>和<code>MongoClient</code></p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这个类主要用于ConnectionString对象的封装，后面会讲到</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean(&#123;MongoConnectionDetails.class&#125;)</span></span><br><span class=\"line\">PropertiesMongoConnectionDetails <span class=\"title function_\">mongoConnectionDetails</span><span class=\"params\">(MongoProperties properties)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PropertiesMongoConnectionDetails</span>(properties);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean(&#123;MongoClient.class&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MongoClient <span class=\"title function_\">mongo</span><span class=\"params\">(ObjectProvider&lt;MongoClientSettingsBuilderCustomizer&gt; builderCustomizers, MongoClientSettings settings)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (MongoClient)(<span class=\"keyword\">new</span> <span class=\"title class_\">MongoClientFactory</span>(builderCustomizers.orderedStream().toList())).createMongoClient(settings);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>可以看到，创建<code>MongoClient</code>的bean时，依赖两个参数，一个是<code>ObjectProvider&lt;MongoClientSettingsBuilderCustomizer&gt;</code>，一个是<code>MongoClientSettings</code>，前者会将spring上下文中所有类型为<code>MongoClientSettingsBuilderCustomizer</code>的bean封装到该对象中(springboot默认只提供了一个<code>StandardMongoClientSettingsBuilderCustomizer</code>)</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>MongoAutoConfiguration</code>缺省为我们提供了<code>MongoClientSettings</code>和<code>StandardMongoClientSettingsBuilderCustomizer</code>，这两个类都很重要，连接池参数就和它们有关</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\">MongoClientSettings <span class=\"title function_\">mongoClientSettings</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MongoClientSettings.builder().build();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 需要的参数connectionDetails刚好是上面的PropertiesMongoConnectionDetails</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\">StandardMongoClientSettingsBuilderCustomizer <span class=\"title function_\">standardMongoSettingsCustomizer</span><span class=\"params\">(MongoProperties properties, MongoConnectionDetails connectionDetails, ObjectProvider&lt;SslBundles&gt; sslBundles)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StandardMongoClientSettingsBuilderCustomizer</span>(connectionDetails.getConnectionString(), properties.getUuidRepresentation(), properties.getSsl(), (SslBundles)sslBundles.getIfAvailable());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>我们先看<code>MongoClientSettings</code>，其中就定义一个连接池的配置对象<code>ConnectionPoolSettings</code>，而<code>ConnectionPoolSettings</code>其内部就定义了连接池的配置属性，<code>MongoClientSettings</code>通过<code>ConnectionPoolSettings</code>的构造器创建出了<code>ConnectionPoolSettings</code>对象，其缺省值如下：</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">maxSize</span> <span class=\"operator\">=</span> <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span> minSize;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">long</span> <span class=\"variable\">maxWaitTimeMS</span> <span class=\"operator\">=</span> <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">long</span> maxConnectionLifeTimeMS;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">long</span> maxConnectionIdleTimeMS;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">maxConnecting</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>我们看另一个和创建<code>MongoClient</code>相关的bean，这个<code>StandardMongoClientSettingsBuilderCustomizer</code>，创建这个bean时需要一个<code>MongoConnectionDetails</code>对象，并调用其<code>getConnectionString</code>方法，这个对象<code>MongoAutoConfiguration</code>也为我们提供了(上面可以看到)</p>\n</li>\n<li class=\"lvl-2\">\n<p>查看<code>PropertiesMongoConnectionDetails</code>的源码，发现<code>connectionDetails.getConnectionString()</code>的功能就是将<code>MongoProperties</code>的属性封装为<code>uri</code>并传递给<code>ConnectionString</code>的构造器创建对象</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> ConnectionString <span class=\"title function_\">getConnectionString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.properties.getUri() != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ConnectionString</span>(<span class=\"built_in\">this</span>.properties.getUri());</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">StringBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;mongodb://&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.properties.getUsername() != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            builder.append(<span class=\"built_in\">this</span>.encode(<span class=\"built_in\">this</span>.properties.getUsername()));</span><br><span class=\"line\">            builder.append(<span class=\"string\">&quot;:&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.properties.getPassword() != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                builder.append(<span class=\"built_in\">this</span>.encode(<span class=\"built_in\">this</span>.properties.getPassword()));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            builder.append(<span class=\"string\">&quot;@&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        builder.append(<span class=\"built_in\">this</span>.properties.getHost() != <span class=\"literal\">null</span> ? <span class=\"built_in\">this</span>.properties.getHost() : <span class=\"string\">&quot;localhost&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.properties.getPort() != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            builder.append(<span class=\"string\">&quot;:&quot;</span>);</span><br><span class=\"line\">            builder.append(<span class=\"built_in\">this</span>.properties.getPort());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.properties.getAdditionalHosts() != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            builder.append(<span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">            builder.append(String.join(<span class=\"string\">&quot;,&quot;</span>, <span class=\"built_in\">this</span>.properties.getAdditionalHosts()));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        builder.append(<span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\">        builder.append(<span class=\"built_in\">this</span>.properties.getMongoClientDatabase());</span><br><span class=\"line\">        List&lt;String&gt; options = <span class=\"built_in\">this</span>.getOptions();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!options.isEmpty()) &#123;</span><br><span class=\"line\">            builder.append(<span class=\"string\">&quot;?&quot;</span>);</span><br><span class=\"line\">            builder.append(String.join(<span class=\"string\">&quot;&amp;&quot;</span>, options));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 将MongoProperties转换为uri格式后调用构造器创建ConnectionString</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ConnectionString</span>(builder.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这个<code>ConnectionString</code>对象的初始化过程就很有意思了，其会对这个<code>uri</code>进行解析，解析过程中会调用<code>parseOptions(connectionStringQueryParameters)</code>方法，其会将<code>uri</code>中的参数转换为<code>Map</code>，之后调用<code>translateOptions(combinedOptionsMaps)</code>方法遍历这个map，而在遍历的过程中就会完成对<code>ConnectionString</code>对象的连接池相关属性的初始化</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">translateOptions</span><span class=\"params\">(<span class=\"keyword\">final</span> Map&lt;String, List&lt;String&gt;&gt; optionsMap)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">tlsInsecureSet</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">tlsAllowInvalidHostnamesSet</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">final</span> String key : GENERAL_OPTIONS_KEYS) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> getLastValue(optionsMap, key);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (key) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 连接池相关属性，注意这里的属性名称，后面我们配置连接池时会用到</span></span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;maxpoolsize&quot;</span>:</span><br><span class=\"line\">                    maxConnectionPoolSize = parseInteger(value, <span class=\"string\">&quot;maxpoolsize&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;minpoolsize&quot;</span>:</span><br><span class=\"line\">                    minConnectionPoolSize = parseInteger(value, <span class=\"string\">&quot;minpoolsize&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;maxidletimems&quot;</span>:</span><br><span class=\"line\">                    maxConnectionIdleTime = parseInteger(value, <span class=\"string\">&quot;maxidletimems&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;maxlifetimems&quot;</span>:</span><br><span class=\"line\">                    maxConnectionLifeTime = parseInteger(value, <span class=\"string\">&quot;maxlifetimems&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;maxconnecting&quot;</span>:</span><br><span class=\"line\">                    maxConnecting = parseInteger(value, <span class=\"string\">&quot;maxConnecting&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;waitqueuetimeoutms&quot;</span>:</span><br><span class=\"line\">                    maxWaitTime = parseInteger(value, <span class=\"string\">&quot;waitqueuetimeoutms&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&quot;connecttimeoutms&quot;</span>:</span><br><span class=\"line\">                    connectTimeout = parseInteger(value, <span class=\"string\">&quot;connecttimeoutms&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">           ……………………………………………………………………………………</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>其实此时我们就已经知道应该如何配置连接池参数了，就是将连接池相关的参数追加到<code>uri</code>的参数部分，但是前面我们提到负责连接池的类是<code>ConnectionPoolSettings</code>，那么<code>ConnectionString</code>对象中的连接池属性是如何被传递给<code>ConnectionPoolSettings</code>的呢，我们接着往下看。</p>\n</li>\n<li class=\"lvl-2\">\n<p>参数准备好后就开始创建<code>MongoClient</code>了，其会调用<code>MongoClientFactory</code>的<code>createMongoClient</code>方法，其会对<code>MongoClientSettings</code>对象做进一步的封装，并最终基于封装后的<code>MongoClientSettings</code>对象创建出<code>MongoClient</code>对象</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> T <span class=\"title function_\">createMongoClient</span><span class=\"params\">(MongoClientSettings settings)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Builder</span> <span class=\"variable\">targetSettings</span> <span class=\"operator\">=</span> MongoClientSettings.builder(settings);</span><br><span class=\"line\">    customize(targetSettings);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.clientCreator.apply(targetSettings.build(), driverInformation());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">customize</span><span class=\"params\">(Builder builder)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (MongoClientSettingsBuilderCustomizer customizer : <span class=\"built_in\">this</span>.builderCustomizers) &#123;</span><br><span class=\"line\">        customizer.customize(builder);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>而在进一步封装<code>MongoClientSettings</code>对象时，会调用系统中所有被spring管理的<code>MongoClientSettingsBuilderCustomizer</code>,实际上也就是<code>StandardMongoClientSettingsBuilderCustomizer</code>的<code>customize</code>方法，其又会调用<code>MongoClientSettings.builder()</code>的<code>applyConnectionSettings</code>方法，而在该方法中调用<code>connectionPoolSettingsBuilder.applyConnectionString(connectionString);</code>就完成了将<code>ConnectionString</code>对象中的连接池属性传递给<code>ConnectionPoolSettings</code>对象的过程，当然，如果属性没有获取到就会使用默认值，所以我们可以基于需要配置相关的属性。</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> Builder <span class=\"title function_\">applyConnectionString</span><span class=\"params\">(<span class=\"keyword\">final</span> ConnectionString connectionString)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Integer</span> <span class=\"variable\">maxConnectionPoolSize</span> <span class=\"operator\">=</span> connectionString.getMaxConnectionPoolSize();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (maxConnectionPoolSize != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        maxSize(maxConnectionPoolSize);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">Integer</span> <span class=\"variable\">minConnectionPoolSize</span> <span class=\"operator\">=</span> connectionString.getMinConnectionPoolSize();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (minConnectionPoolSize != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        minSize(minConnectionPoolSize);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">Integer</span> <span class=\"variable\">maxWaitTime</span> <span class=\"operator\">=</span> connectionString.getMaxWaitTime();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (maxWaitTime != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        maxWaitTime(maxWaitTime, MILLISECONDS);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">Integer</span> <span class=\"variable\">maxConnectionIdleTime</span> <span class=\"operator\">=</span> connectionString.getMaxConnectionIdleTime();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (maxConnectionIdleTime != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        maxConnectionIdleTime(maxConnectionIdleTime, MILLISECONDS);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">Integer</span> <span class=\"variable\">maxConnectionLifeTime</span> <span class=\"operator\">=</span> connectionString.getMaxConnectionLifeTime();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (maxConnectionLifeTime != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        maxConnectionLifeTime(maxConnectionLifeTime, MILLISECONDS);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">Integer</span> <span class=\"variable\">maxConnecting</span> <span class=\"operator\">=</span> connectionString.getMaxConnecting();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (maxConnecting != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        maxConnecting(maxConnecting);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>大体过程就是这样，很绕，简单点说就是springboot已经为我们提供了mongodb的连接池，我们也可以基于需要，在配置<code>mongodb-uri</code>时，增加相关的连接池参数，springboot就会按照我们配置的参数为我们创建连接池，并自动管理连接池。</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">data:</span></span><br><span class=\"line\">    <span class=\"attr\">mongodb:</span></span><br><span class=\"line\">      <span class=\"attr\">uri:</span> <span class=\"string\">mongodb://user:password@127.0.0.1:27040,127.0.0.1:27041,127.0.0.1:27042/mytest?authSource=admin&amp;readPreference=primaryPreferred&amp;maxpoolsize=100&amp;minpoolsize=10&amp;maxidletimems=0&amp;maxlifetimems=0&amp;maxconnecting=5&amp;waitqueuetimeoutms=60000</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参数说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">maxpoolsize: 100 # 池中允许的最大连接数。一旦池耗尽，任何需要连接的操作都将在阻塞队列中等待直到获取到连接， 默认: 100</span><br><span class=\"line\">minpoolsize: 10 # 池中允许的最小连接数。这些连接在空闲时将保留在池中，并且池将确保它至少包含这个最小数量 默认: 0</span><br><span class=\"line\">maxidletimems: 0 # 池连接的最大空闲时间。零值表示对空闲时间没有限制。超过其空闲时间的池连接将被关闭并在必要时由新连接替换。单位为毫秒</span><br><span class=\"line\">maxlifetimems: 0 # 池连接可以存活的最长时间。零值表示寿命没有限制。超过其生命周期的池连接将被关闭并在必要时由新连接替换。单位为毫秒</span><br><span class=\"line\">maxconnecting: 5 # 同一时刻允许的最大并行连接数。默认值是: 2。</span><br><span class=\"line\">waitqueuetimeoutms: 60000 # 阻塞队列中请求的最大等待时间，超过这个时间的请求将被拒绝。单位为毫秒，默认为: 120s</span><br></pre></td></tr></table></figure>\n<h2 id=\"如何查看连接池是否生效了？\">如何查看连接池是否生效了？</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>很简单，我们只需要注入<code>MongoClient</code>并查看其<code>settings</code>属性，就可以看到连接池的配置信息了`</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\">MongoClient mongoClient;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 打印连接池配置信息</span></span><br><span class=\"line\">System.out.println(((MongoClientImpl) mongoClient).getSettings().getConnectionPoolSettings());</span><br><span class=\"line\"><span class=\"comment\">// 输出结果</span></span><br><span class=\"line\">ConnectionPoolSettings&#123;maxSize=<span class=\"number\">100</span>, minSize=<span class=\"number\">10</span>, maxWaitTimeMS=<span class=\"number\">60000</span>, maxConnectionLifeTimeMS=<span class=\"number\">0</span>, maxConnectionIdleTimeMS=<span class=\"number\">0</span>, maintenanceInitialDelayMS=<span class=\"number\">0</span>, maintenanceFrequencyMS=<span class=\"number\">60000</span>, connectionPoolListeners=[], maxConnecting=<span class=\"number\">5</span>&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"后记\">后记</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>springboot为什么没有将mongodb的连接池属性也封装到<code>MongoProperties</code>中呢，也许是因为和mongodb相关的链接参数太多了吧，而且我们在配置mongodb时，一般都会使用<code>mongodb-uri</code>的方式，所以springboot就直接将连接池参数放到<code>mongodb-uri</code>中，这样配置起来就比较方便了。</p>\n</li>\n<li class=\"lvl-2\">\n<p>另外我们发现，在<code>MongoClientSettings</code>中除了连接池的配置，还有很多配置项也是基于<code>mongodb-uri</code>的，我们可以基于需要进行配置，如下所示：</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReadPreference readPreference;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> WriteConcern writeConcern;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">boolean</span> retryWrites;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">boolean</span> retryReads;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ReadConcern readConcern;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> MongoCredential credential;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> TransportSettings transportSettings;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> LoggerSettings loggerSettings;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ClusterSettings clusterSettings;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> SocketSettings socketSettings;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> SocketSettings heartbeatSocketSettings;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ConnectionPoolSettings connectionPoolSettings;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ServerSettings serverSettings;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> SslSettings sslSettings;</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 本文介绍如何使用SpringBoot配置MongoDB7.0的连接池 SpringBoot版本3.2.4，MongoDB版本7.0.6 关于springboot与mongodb的集成可以参考：MongoDB7.0--SpringBoot单集合操作，本文只讨论连接池相关内容。 spring-boot 的 MongoDB 连接池 当我们在springboot的配置文件中配置mongodb的相关属性时，并没有发现和连接池相关的属性，查看MongoProperties中的属性也可以证实这一点，这就很奇怪，按理说springboot应该不会这么弱鸡。 于是我打算看看springboot的源码，看看springboot为我们自动创建的MongoClient到底有没有连接池的配置。 我们就从mongodb的自动配置类MongoAutoConfiguration开始，该类中定义了PropertiesMongoConnectionDetails和MongoClient 123456789101112//这个类主要用于ConnectionString对象的封装，后面会讲到@Bean@ConditionalOnMissingBean(&#123;MongoConnectionDetails.class&#125;)PropertiesMongoConnectionDetails mongoConnectionDetails(MongoProperties properties) &#123; return new PropertiesMongoConnectionDetails(properties);&#125;@Bean@ConditionalOnMissingBean(&#123;MongoClient.class&#125;)public MongoClient mongo(ObjectProvider&lt;MongoClientSettingsBuilderCustomizer&gt; builderCustomizers, MongoClientSettings settings) &#123; return (MongoClient)(new MongoClientFactory(builderCustomizers.orderedStream().toList())).createMongoClient(settings);&#125; 可以看到，创建MongoClient的bean时，依赖两个参数，一个是ObjectProvider&lt;MongoClientSettingsBuilderCustomizer&gt;，一个是MongoClientSettings，前者会将spring上下文中所有类型为MongoClientSettingsBuilderCustomizer的bean封装到该对象中(springboot默认只提供了一个StandardMongoClientSettingsBuilderCustomizer) MongoAutoConfiguration缺省为我们提供了MongoClientSettings和StandardMongoClientSettingsBuilderCustomizer，这两个类都很重要，连接池参数就和它们有关 123456789@BeanMongoClientSettings mongoClientSettings() &#123; return MongoClientSettings.builder().build();&#125;// 需要的参数connectionDetails刚好是上面的PropertiesMongoConnectionDetails@BeanStandardMongoClientSettingsBuilderCustomizer standardMongoSettingsCustomizer(MongoProperties properties, MongoConnectionDetails connectionDetails, ObjectProvider&lt;SslBundles&gt; sslBundles) &#123; return new StandardMongoClientSettingsBuilderCustomizer(connectionDetails.getConnectionString(), properties.getUuidRepresentation(), properties.getSsl(), (SslBundles)sslBundles.getIfAvailable());&#125; 我们先看MongoClientSettings，其中就定义一个连接池的配置对象ConnectionPoolSettings，而ConnectionPoolSettings其内部就定义了连接池的配置属性，MongoClientSettings通过ConnectionPoolSettings的构造器创建出了ConnectionPoolSettings对象，其缺省值如下： 123456private int maxSize = 100;private int minSize;private long maxWaitTimeMS = 1000 * 60 * 2;private long maxConnectionLifeTimeMS;private long maxConnectionIdleTimeMS;private int maxConnecting = 2; 我们看另一个和创建MongoClient相关的bean，这个StandardMongoClientSettingsBuilderCustomizer，创建这个bean时需要一个MongoConnectionDetails对象，并调用其getConnectionString方法，这个对象MongoAutoConfiguration也为我们提供了(上面可以看到) 查看PropertiesMongoConnectionDetails的源码，发现connectionDetails.getConnectionString()的功能就是将MongoProperties的属性封装为uri并传递给ConnectionString的构造器创建对象 12345678910111213141516171819202122232425262728293031323334353637public ConnectionString getConnectionString() &#123; if (this.properties.getUri() != null) &#123; return new ConnectionString(this.properties.getUri()); &#125; else &#123; StringBuilder builder = new StringBuilder(&quot;mongodb://&quot;); if (this.properties.getUsername() != null) &#123; builder.append(this.encode(this.properties.getUsername())); builder.append(&quot;:&quot;); if (this.properties.getPassword() != null) &#123; builder.append(this.encode(this.properties.getPassword())); &#125; builder.append(&quot;@&quot;); &#125; builder.append(this.properties.getHost() != null ? this.properties.getHost() : &quot;localhost&quot;); if (this.properties.getPort() != null) &#123; builder.append(&quot;:&quot;); builder.append(this.properties.getPort()); &#125; if (this.properties.getAdditionalHosts() != null) &#123; builder.append(&quot;,&quot;); builder.append(String.join(&quot;,&quot;, this.properties.getAdditionalHosts())); &#125; builder.append(&quot;/&quot;); builder.append(this.properties.getMongoClientDatabase()); List&lt;String&gt; options = this.getOptions(); if (!options.isEmpty()) &#123; builder.append(&quot;?&quot;); builder.append(String.join(&quot;&amp;&quot;, options)); &#125; // 将MongoProperties转换为uri格式后调用构造器创建ConnectionString return new ConnectionString(builder.toString()); &#125;&#125; 这个ConnectionString对象的初始化过程就很有意思了，其会对这个uri进行解析，解析过程中会调用parseOptions(connectionStringQueryParameters)方法，其会将uri中的参数转换为Map，之后调用translateOptions(combinedOptionsMaps)方法遍历这个map，而在遍历的过程中就会完成对ConnectionString对象的连接池相关属性的初始化 123456789101112131415161718192021222324252627282930313233private void translateOptions(final Map&lt;String, List&lt;String&gt;&gt; optionsMap) &#123; boolean tlsInsecureSet = false; boolean tlsAllowInvalidHostnamesSet = false; for (final String key : GENERAL_OPTIONS_KEYS) &#123; String value = getLastValue(optionsMap, key); if (value == null) &#123; continue; &#125; switch (key) &#123; // 连接池相关属性，注意这里的属性名称，后面我们配置连接池时会用到 case &quot;maxpoolsize&quot;: maxConnectionPoolSize = parseInteger(value, &quot;maxpoolsize&quot;); break; case &quot;minpoolsize&quot;: minConnectionPoolSize = parseInteger(value, &quot;minpoolsize&quot;); break; case &quot;maxidletimems&quot;: maxConnectionIdleTime = parseInteger(value, &quot;maxidletimems&quot;); break; case &quot;maxlifetimems&quot;: maxConnectionLifeTime = parseInteger(value, &quot;maxlifetimems&quot;); break; case &quot;maxconnecting&quot;: maxConnecting = parseInteger(value, &quot;maxConnecting&quot;); break; case &quot;waitqueuetimeoutms&quot;: maxWaitTime = parseInteger(value, &quot;waitqueuetimeoutms&quot;); break; case &quot;connecttimeoutms&quot;: connectTimeout = parseInteger(value, &quot;connecttimeoutms&quot;); break; …………………………………………………………………………………… 其实此时我们就已经知道应该如何配置连接池参数了，就是将连接池相关的参数追加到uri的参数部分，但是前面我们提到负责连接池的类是ConnectionPoolSettings，那么ConnectionString对象中的连接池属性是如何被传递给ConnectionPoolSettings的呢，我们接着往下看。 参数准备好后就开始创建MongoClient了，其会调用MongoClientFactory的createMongoClient方法，其会对MongoClientSettings对象做进一步的封装，并最终基于封装后的MongoClientSettings对象创建出MongoClient对象 12345678910public T createMongoClient(MongoClientSettings settings) &#123; Builder targetSettings = MongoClientSettings.builder(settings); customize(targetSettings); return this.clientCreator.apply(targetSettings.build(), driverInformation());&#125;private void customize(Builder builder) &#123; for (MongoClientSettingsBuilderCustomizer customizer : this.builderCustomizers) &#123; customizer.customize(builder); &#125;&#125; 而在进一步封装MongoClientSettings对象时，会调用系统中所有被spring管理的MongoClientSettingsBuilderCustomizer,实际上也就是StandardMongoClientSettingsBuilderCustomizer的customize方法，其又会调用MongoClientSettings.builder()的applyConnectionSettings方法，而在该方法中调用connectionPoolSettingsBuilder.applyConnectionString(connectionString);就完成了将ConnectionString对象中的连接池属性传递给ConnectionPoolSettings对象的过程，当然，如果属性没有获取到就会使用默认值，所以我们可以基于需要配置相关的属性。 123456789101112131415161718192021222324252627282930313233public Builder applyConnectionString(final ConnectionString connectionString) &#123; Integer maxConnectionPoolSize = connectionString.getMaxConnectionPoolSize(); if (maxConnectionPoolSize != null) &#123; maxSize(maxConnectionPoolSize); &#125; Integer minConnectionPoolSize = connectionString.getMinConnectionPoolSize(); if (minConnectionPoolSize != null) &#123; minSize(minConnectionPoolSize); &#125; Integer maxWaitTime = connectionString.getMaxWaitTime(); if (maxWaitTime != null) &#123; maxWaitTime(maxWaitTime, MILLISECONDS); &#125; Integer maxConnectionIdleTime = connectionString.getMaxConnectionIdleTime(); if (maxConnectionIdleTime != null) &#123; maxConnectionIdleTime(maxConnectionIdleTime, MILLISECONDS); &#125; Integer maxConnectionLifeTime = connectionString.getMaxConnectionLifeTime(); if (maxConnectionLifeTime != null) &#123; maxConnectionLifeTime(maxConnectionLifeTime, MILLISECONDS); &#125; Integer maxConnecting = connectionString.getMaxConnecting(); if (maxConnecting != null) &#123; maxConnecting(maxConnecting); &#125; return this;&#125; 大体过程就是这样，很绕，简单点说就是springboot已经为我们提供了mongodb的连接池，我们也可以基于需要，在配置mongodb-uri时，增加相关的连接池参数，springboot就会按照我们配置的参数为我们创建连接池，并自动管理连接池。 12345spring: data: mongodb: uri: mongodb://user:password@127.0.0.1:27040,127.0.0.1:27041,127.0.0.1:27042/mytest?authSource=admin&amp;readPreference=primaryPreferred&amp;maxpoolsize=100&amp;minpoolsize=10&amp;maxidletimems=0&amp;maxlifetimems=0&amp;maxconnecting=5&amp;waitqueuetimeoutms=60000 参数说明 123456maxpoolsize: 100 # 池中允许的最大连接数。一旦池耗尽，任何需要连接的操作都将在阻塞队列中等待直到获取到连接， 默认: 100minpoolsize: 10 # 池中允许的最小连接数。这些连接在空闲时将保留在池中，并且池将确保它至少包含这个最小数量 默认: 0maxidletimems: 0 # 池连接的最大空闲时间。零值表示对空闲时间没有限制。超过其空闲时间的池连接将被关闭并在必要时由新连接替换。单位为毫秒maxlifetimems: 0 # 池连接可以存活的最长时间。零值表示寿命没有限制。超过其生命周期的池连接将被关闭并在必要时由新连接替换。单位为毫秒maxconnecting: 5 # 同一时刻允许的最大并行连接数。默认值是: 2。waitqueuetimeoutms: 60000 # 阻塞队列中请求的最大等待时间，超过这个时间的请求将被拒绝。单位为毫秒，默认为: 120s 如何查看连接池是否生效了？ 很简单，我们只需要注入MongoClient并查看其settings属性，就可以看到连接池的配置信息了` 1234567@AutowiredMongoClient mongoClient;// 打印连接池配置信息System.out.println(((MongoClientImpl) mongoClient).getSettings().getConnectionPoolSettings());// 输出结果ConnectionPoolSettings&#123;maxSize=100, minSize=10, maxWaitTimeMS=60000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=5&#125; 后记 springboot为什么没有将mongodb的连接池属性也封装到MongoProperties中呢，也许是因为和mongodb相关的链接参数太多了吧，而且我们在配置mongodb时，一般都会使用mongodb-uri的方式，所以springboot就直接将连接池参数放到mongodb-uri中，这样配置起来就比较方便了。 另外我们发现，在MongoClientSettings中除了连接池的配置，还有很多配置项也是基于mongodb-uri的，我们可以基于需要进行配置，如下所示： 1234567891011121314private final ReadPreference readPreference;private final WriteConcern writeConcern;private final boolean retryWrites;private final boolean retryReads;private final ReadConcern readConcern;private final MongoCredential credential;private final TransportSettings transportSettings;private final LoggerSettings loggerSettings;private final ClusterSettings clusterSettings;private final SocketSettings socketSettings;private final SocketSettings heartbeatSocketSettings;private final ConnectionPoolSettings connectionPoolSettings;private final ServerSettings serverSettings;private final SslSettings sslSettings;","summary":"摘要 本文介绍如何使用SpringBoot配置MongoDB7.0的连接池 SpringBoot版本3.2.4，MongoDB版本7.0.6 关于springboot与mongodb的集成可以参考：MongoDB7.0--SpringBoot单集合操作，本文只讨论连接池相关内容。","date_published":"2024-04-08T13:30:05.000Z","tags":["技术","linux","mongodb","mongodb"]},{"id":"https://blog.hanqunfeng.com/2024/04/07/mongodb7-others/","url":"https://blog.hanqunfeng.com/2024/04/07/mongodb7-others/","title":"MongoDB7.0一些有用的功能","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍MongoDB7.0的一些有用的功能，比如运行js，查看慢查询日志等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>MongoDB<a href=\"https://www.mongodb.com/docs/v7.0/\">官方文档</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"运行js\">运行js</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>运行js文件</p>\n</li>\n</ul>\n<blockquote>\n<p>insertMany.js</p>\n</blockquote>\n  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> tags = [<span class=\"string\">&#x27;nosql&#x27;</span>, <span class=\"string\">&#x27;mongodb&#x27;</span>, <span class=\"string\">&#x27;document&#x27;</span>, <span class=\"string\">&#x27;developer&#x27;</span>, <span class=\"string\">&#x27;popular&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> types = [<span class=\"string\">&#x27;technology&#x27;</span>, <span class=\"string\">&#x27;sociality&#x27;</span>, <span class=\"string\">&#x27;travel&#x27;</span>, <span class=\"string\">&#x27;novel&#x27;</span>, <span class=\"string\">&#x27;literature&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> books = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">50</span>; i++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> typeIdx = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * types.<span class=\"property\">length</span>)</span><br><span class=\"line\">  <span class=\"keyword\">var</span> tagIdx = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * tags.<span class=\"property\">length</span>)</span><br><span class=\"line\">  <span class=\"keyword\">var</span> favCount = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">100</span>)</span><br><span class=\"line\">  <span class=\"keyword\">var</span> book = &#123;</span><br><span class=\"line\">    <span class=\"attr\">title</span>: <span class=\"string\">&#x27;book-&#x27;</span> + i,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: types[typeIdx],</span><br><span class=\"line\">    <span class=\"attr\">tag</span>: tags[tagIdx],</span><br><span class=\"line\">    <span class=\"attr\">favCount</span>: favCount,</span><br><span class=\"line\">    <span class=\"attr\">author</span>: <span class=\"string\">&#x27;xxx&#x27;</span> + i</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  books.<span class=\"title function_\">push</span>(book)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">db.<span class=\"property\">books</span>.<span class=\"title function_\">insertMany</span>(books)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -f 运行js文件</span></span><br><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span> -f insertMany.js</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>运行js语句</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ---eval 运行js语句</span></span><br><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span> --<span class=\"built_in\">eval</span> <span class=\"string\">&quot;db.books.find().limit(2)&quot;</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    _id: ObjectId(<span class=\"string\">&#x27;660d0b05a8a6c09b0b1852b7&#x27;</span>),</span><br><span class=\"line\">    title: <span class=\"string\">&#x27;book-0&#x27;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: <span class=\"string\">&#x27;novel&#x27;</span>,</span><br><span class=\"line\">    tag: <span class=\"string\">&#x27;document&#x27;</span>,</span><br><span class=\"line\">    favCount: 58,</span><br><span class=\"line\">    author: <span class=\"string\">&#x27;xxx0&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    _id: ObjectId(<span class=\"string\">&#x27;660d0b05a8a6c09b0b1852b8&#x27;</span>),</span><br><span class=\"line\">    title: <span class=\"string\">&#x27;book-1&#x27;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: <span class=\"string\">&#x27;novel&#x27;</span>,</span><br><span class=\"line\">    tag: <span class=\"string\">&#x27;popular&#x27;</span>,</span><br><span class=\"line\">    favCount: 10,</span><br><span class=\"line\">    author: <span class=\"string\">&#x27;xxx1&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"Profiler模块\">Profiler模块</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Profiler模块可以用来记录、分析MongoDB的详细操作日志，默认情况下该功能是关闭的。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Profiler模块开启对于每个业务库来说是独立的，对某个业务库开启Profiler模块之后，符合条件的慢操作日志会被写入该库的<code>system.profile</code>集合中。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Profiler模块的调试级别有：</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0：关闭Profiler模块；</span><br><span class=\"line\">1：部分开启，仅符合条件（时长大于slowms）的操作日志会被记录；</span><br><span class=\"line\">2：日志全开，所有的操作日志都被记录；</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>设置Profiler模块的调试级别：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置Profiler模块的调试级别为2</span></span><br><span class=\"line\">&gt; db.setProfilingLevel(2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当的调试级别信息</span></span><br><span class=\"line\">&gt; db.<span class=\"function\"><span class=\"title\">getProfilingStatus</span></span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  was: 2,  <span class=\"comment\"># 当前的调试级别</span></span><br><span class=\"line\">  slowms: 100, <span class=\"comment\"># 慢查询的阈值，单位是毫秒；</span></span><br><span class=\"line\">  sampleRate: 1.0, <span class=\"comment\"># 日志随机采样率，1.0则表示满足条件的全部输出。</span></span><br><span class=\"line\">  ok: 1,   <span class=\"comment\"># 状态</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123; <span class=\"comment\"># 时间戳</span></span><br><span class=\"line\">    clusterTime: Timestamp(&#123; t: 1712471779, i: 1 &#125;), <span class=\"comment\"># 时间戳</span></span><br><span class=\"line\">    signature: &#123; <span class=\"comment\"># 签名</span></span><br><span class=\"line\">      <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;GGCAjzJrW8arhfJX0Cn0VpvC5MA=&#x27;</span>, 0), <span class=\"comment\"># 签名</span></span><br><span class=\"line\">      keyId: Long(<span class=\"string\">&#x27;7346062378896719877&#x27;</span>)  <span class=\"comment\"># 签名</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  operationTime: Timestamp(&#123; t: 1712471779, i: 1 &#125;) <span class=\"comment\"># 操作时间</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只记录时长超过500ms的操作</span></span><br><span class=\"line\">&gt; db.setProfilingLevel(1,500)</span><br><span class=\"line\"><span class=\"comment\"># 同时加上采样率</span></span><br><span class=\"line\">&gt; db.setProfilingLevel(1,&#123;slowms:500,sampleRate:0.5&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭Profiler模块</span></span><br><span class=\"line\">&gt; db.setProfilingLevel(2)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看日志</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看操作日志</span></span><br><span class=\"line\">&gt; db.system.profile.find().<span class=\"built_in\">limit</span>(5).<span class=\"built_in\">sort</span>(&#123;ts:-1&#125;).pretty()</span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    op: <span class=\"string\">&#x27;query&#x27;</span>, <span class=\"comment\"># 操作类型,比如查询,更新,删除等</span></span><br><span class=\"line\">    ns: <span class=\"string\">&#x27;admin.system.profile&#x27;</span>, <span class=\"comment\"># 操作的集合</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>: &#123; <span class=\"comment\"># 操作的命令</span></span><br><span class=\"line\">      find: <span class=\"string\">&#x27;system.profile&#x27;</span>, <span class=\"comment\"># 操作的集合</span></span><br><span class=\"line\">      filter: &#123;&#125;, <span class=\"comment\"># 查询条件</span></span><br><span class=\"line\">      lsid: &#123; <span class=\"built_in\">id</span>: UUID(<span class=\"string\">&#x27;2285d6a5-b2df-4b46-b9d2-5e556b0a7c7d&#x27;</span>) &#125;, <span class=\"comment\"># 会话id</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123; <span class=\"comment\"># 时间戳</span></span><br><span class=\"line\">        clusterTime: Timestamp(&#123; t: 1712471018, i: 1 &#125;),</span><br><span class=\"line\">        signature: &#123;</span><br><span class=\"line\">          <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;8YEsN+XUWO6EkoHEegKkG49eWPA=&#x27;</span>, 0),</span><br><span class=\"line\">          keyId: Long(<span class=\"string\">&#x27;7346062378896719877&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;$db&#x27;</span>: <span class=\"string\">&#x27;admin&#x27;</span>, <span class=\"comment\"># 数据库</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;$readPreference&#x27;</span>: &#123; mode: <span class=\"string\">&#x27;primaryPreferred&#x27;</span> &#125; <span class=\"comment\"># 读偏好</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    keysExamined: 0, <span class=\"comment\"># 扫描索引条目数，如果比nreturned大出很多，则说明查询效率不高。</span></span><br><span class=\"line\">    docsExamined: 3, <span class=\"comment\"># 扫描文档条目数，如果比nreturned大出很多，则说明查询效率不高。</span></span><br><span class=\"line\">    nBatches: 1, <span class=\"comment\"># 批处理数量</span></span><br><span class=\"line\">    cursorExhausted: <span class=\"literal\">true</span>, <span class=\"comment\"># 是否游标已耗尽</span></span><br><span class=\"line\">    numYield: 0, <span class=\"comment\"># 操作数，大于0表示等待锁或者是磁盘I/O操作</span></span><br><span class=\"line\">    nreturned: 3, <span class=\"comment\"># 返回的文档数量</span></span><br><span class=\"line\">    queryHash: <span class=\"string\">&#x27;8880B5AF&#x27;</span>, <span class=\"comment\"># 查询哈希值</span></span><br><span class=\"line\">    planCacheKey: <span class=\"string\">&#x27;8880B5AF&#x27;</span>,</span><br><span class=\"line\">    queryFramework: <span class=\"string\">&#x27;classic&#x27;</span>,</span><br><span class=\"line\">    locks: &#123;       <span class=\"comment\"># 锁占用的情况。</span></span><br><span class=\"line\">      FeatureCompatibilityVersion: &#123; acquireCount: &#123; r: Long(<span class=\"string\">&#x27;1&#x27;</span>) &#125; &#125;,</span><br><span class=\"line\">      Global: &#123; acquireCount: &#123; r: Long(<span class=\"string\">&#x27;1&#x27;</span>) &#125; &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    flowControl: &#123;&#125;,</span><br><span class=\"line\">    readConcern: &#123; level: <span class=\"string\">&#x27;local&#x27;</span>, provenance: <span class=\"string\">&#x27;implicitDefault&#x27;</span> &#125;, <span class=\"comment\"># 读关注</span></span><br><span class=\"line\">    responseLength: 3414, <span class=\"comment\"># 响应数据大小（字节数），一次性查询太多的数据会影响性能，可以使用limit、batchSize进行一些限制。</span></span><br><span class=\"line\">    protocol: <span class=\"string\">&#x27;op_msg&#x27;</span>, <span class=\"comment\"># 协议类型，op_msg是mongodb 4.0+的协议，op_query是mongodb 3.2及以前版本的协议。</span></span><br><span class=\"line\">    millis: 0, <span class=\"comment\"># 命令执行的时长，单位是毫秒。</span></span><br><span class=\"line\">    planSummary: <span class=\"string\">&#x27;COLLSCAN&#x27;</span>, <span class=\"comment\"># 查询计划的概要，如IXSCAN表示使用了索引扫描。</span></span><br><span class=\"line\">    planningTimeMicros: 79,</span><br><span class=\"line\">    execStats: &#123;  <span class=\"comment\"># 执行过程统计信息。</span></span><br><span class=\"line\">      stage: <span class=\"string\">&#x27;COLLSCAN&#x27;</span>,</span><br><span class=\"line\">      nReturned: 3,</span><br><span class=\"line\">      executionTimeMillisEstimate: 0,</span><br><span class=\"line\">      works: 4,</span><br><span class=\"line\">      advanced: 3,</span><br><span class=\"line\">      needTime: 0,</span><br><span class=\"line\">      needYield: 0,</span><br><span class=\"line\">      saveState: 0,</span><br><span class=\"line\">      restoreState: 0,</span><br><span class=\"line\">      isEOF: 1,</span><br><span class=\"line\">      direction: <span class=\"string\">&#x27;forward&#x27;</span>,</span><br><span class=\"line\">      docsExamined: 3</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ts: ISODate(<span class=\"string\">&#x27;2024-04-07T06:23:56.054Z&#x27;</span>), <span class=\"comment\"># 命令执行的时间点。</span></span><br><span class=\"line\">    client: <span class=\"string\">&#x27;127.0.0.1&#x27;</span>, <span class=\"comment\"># 客户端地址。</span></span><br><span class=\"line\">    appName: <span class=\"string\">&#x27;mongosh 2.1.5&#x27;</span>, <span class=\"comment\"># 客户端名称。</span></span><br><span class=\"line\">    allUsers: [ &#123; user: <span class=\"string\">&#x27;user&#x27;</span>, db: <span class=\"string\">&#x27;admin&#x27;</span> &#125; ], <span class=\"comment\"># 所有用户信息。</span></span><br><span class=\"line\">    user: <span class=\"string\">&#x27;user@admin&#x27;</span> <span class=\"comment\"># 当前用户信息。</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">………………………………</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看执行时长最大的10条操作记录</span></span><br><span class=\"line\">&gt; db.system.profile.find().<span class=\"built_in\">limit</span>(10).<span class=\"built_in\">sort</span>(&#123;millis:-1&#125;).pretty()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看某个集合中的update操作日志</span></span><br><span class=\"line\">&gt; db.system.profile.find(&#123;op:<span class=\"string\">&quot;update&quot;</span>,ns:<span class=\"string\">&quot;shop.user&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>system.profile</code>是一个1MB的固定大小的集合，随着记录日志的增多，一些旧的记录会被滚动删除。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Profiler模块的设置是内存级的，重启服务器后会自动恢复默认状态。</p>\n</li>\n</ul>\n<h2 id=\"db-currentOp\">db.currentOp()</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Profiler模块所记录的日志都是已经发生的事情，<code>db.currentOp()</code>命令则与此相反，它可以用来查看数据库当前正在执行的一些操作。</p>\n</li>\n<li class=\"lvl-2\">\n<p>db.currentOp()读取的是当前数据库的命令快照，该命令可以返回许多有用的信息，比如：</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">操作的运行时长，快速发现耗时漫长的低效扫描操作。</span><br><span class=\"line\">执行计划信息，用于判断是否命中了索引，或者存在锁冲突的情况。</span><br><span class=\"line\">操作ID、时间、客户端等信息，方便定位出产生慢操作的源头</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; db.<span class=\"function\"><span class=\"title\">currentOp</span></span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">inprog: [ <span class=\"comment\"># 当前正在执行的操作</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"built_in\">type</span>: <span class=\"string\">&#x27;op&#x27;</span>, <span class=\"comment\"># 操作类型，可以是op、idleSession、idleCursor的一种，一般的操作信息以op表示。其为MongoDB 4.2版本新增功能</span></span><br><span class=\"line\">      host: <span class=\"string\">&#x27;localhost:27041&#x27;</span>, <span class=\"comment\"># 操作所在的主机</span></span><br><span class=\"line\">      desc: <span class=\"string\">&#x27;conn474&#x27;</span>, <span class=\"comment\"># 操作的描述信息</span></span><br><span class=\"line\">      connectionId: 474, <span class=\"comment\"># 操作的连接ID</span></span><br><span class=\"line\">      client: <span class=\"string\">&#x27;127.0.0.1:58103&#x27;</span>, <span class=\"comment\"># 操作的客户端信息</span></span><br><span class=\"line\">      appName: <span class=\"string\">&#x27;mongosh 2.1.5&#x27;</span>, <span class=\"comment\"># 操作的客户端应用信息</span></span><br><span class=\"line\">      clientMetadata: &#123; <span class=\"comment\"># 关于客户端的附加信息，可以包含驱动的版本。</span></span><br><span class=\"line\">        application: &#123; name: <span class=\"string\">&#x27;mongosh 2.1.5&#x27;</span> &#125;,</span><br><span class=\"line\">        driver: &#123; name: <span class=\"string\">&#x27;nodejs|mongosh&#x27;</span>, version: <span class=\"string\">&#x27;6.3.0|2.1.5&#x27;</span> &#125;,</span><br><span class=\"line\">        platform: <span class=\"string\">&#x27;Node.js v20.11.1, LE&#x27;</span>,</span><br><span class=\"line\">        os: &#123;</span><br><span class=\"line\">          name: <span class=\"string\">&#x27;darwin&#x27;</span>,</span><br><span class=\"line\">          architecture: <span class=\"string\">&#x27;x64&#x27;</span>,</span><br><span class=\"line\">          version: <span class=\"string\">&#x27;22.6.0&#x27;</span>,</span><br><span class=\"line\">          <span class=\"built_in\">type</span>: <span class=\"string\">&#x27;Darwin&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      active: <span class=\"literal\">true</span>, <span class=\"comment\"># 操作是否活跃。如果是空闲状态则为false</span></span><br><span class=\"line\">      currentOpTime: <span class=\"string\">&#x27;2024-04-07T14:54:02.994+08:00&#x27;</span>, <span class=\"comment\"># 操作的开始时间。MongoDB 3.6版本新增功能</span></span><br><span class=\"line\">      threaded: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      opid: 236247, <span class=\"comment\"># opid：当前操作在数据库进程中的唯一编号,如果已经发现该操作正在导致数据库系统响应缓慢，则可以考虑将其“杀”死 : db.killOp(236247)</span></span><br><span class=\"line\">      secs_running: Long(<span class=\"string\">&#x27;3&#x27;</span>), <span class=\"comment\"># 操作持续时间,单位：秒</span></span><br><span class=\"line\">      microsecs_running: Long(<span class=\"string\">&#x27;3362378&#x27;</span>), <span class=\"comment\"># 操作持续时间，单位：微秒</span></span><br><span class=\"line\">      op: <span class=\"string\">&#x27;command&#x27;</span>, <span class=\"comment\"># 标识操作类型的字符串，如 command, insert, query, update, delete, getMore, killCursors</span></span><br><span class=\"line\">      ns: <span class=\"string\">&#x27;admin.$cmd&#x27;</span>, <span class=\"comment\"># 操作的命名空间，格式为 db.collection</span></span><br><span class=\"line\">      redacted: <span class=\"literal\">false</span>, <span class=\"comment\"># 是否已脱敏</span></span><br><span class=\"line\">      <span class=\"built_in\">command</span>: &#123; <span class=\"comment\"># 操作命令参数</span></span><br><span class=\"line\">        hello: 1,</span><br><span class=\"line\">        maxAwaitTimeMS: 10000,</span><br><span class=\"line\">        topologyVersion: &#123;</span><br><span class=\"line\">          processId: ObjectId(<span class=\"string\">&#x27;6611f8cd59f7cfaa5c8cd7e4&#x27;</span>),</span><br><span class=\"line\">          counter: Long(<span class=\"string\">&#x27;18&#x27;</span>)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class=\"line\">          clusterTime: Timestamp(&#123; t: 1712470998, i: 1 &#125;),</span><br><span class=\"line\">          signature: &#123;</span><br><span class=\"line\">            <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;gvgo03Wqi1AuOVqnrlhzKIK2NAU=&#x27;</span>, 0),</span><br><span class=\"line\">            keyId: Long(<span class=\"string\">&#x27;7346062378896719877&#x27;</span>)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&#x27;$db&#x27;</span>: <span class=\"string\">&#x27;admin&#x27;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      numYields: 0,</span><br><span class=\"line\">      locks: &#123;&#125;, <span class=\"comment\"># 当前操作持有锁的类型和模式。</span></span><br><span class=\"line\">      waitingForLock: <span class=\"literal\">false</span>, <span class=\"comment\"># 是否在等待锁</span></span><br><span class=\"line\">      lockStats: &#123;&#125;, <span class=\"comment\"># 当前操作持有锁的统计。</span></span><br><span class=\"line\">      waitingForFlowControl: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      flowControlStats: &#123;&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">………………………………</span><br><span class=\"line\">]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看等待锁的增加、删除、修改、查询操作</span></span><br><span class=\"line\">&gt; db.currentOp(&#123;</span><br><span class=\"line\"> waitingForLock:<span class=\"literal\">true</span>,</span><br><span class=\"line\"> <span class=\"variable\">$or</span>:[</span><br><span class=\"line\">  &#123;op:&#123;<span class=\"variable\">$in</span>:[<span class=\"string\">&quot;insert&quot;</span>,<span class=\"string\">&quot;update&quot;</span>,<span class=\"string\">&quot;remove&quot;</span>]&#125;&#125;,</span><br><span class=\"line\">  &#123;<span class=\"string\">&quot;query.findandmodify&quot;</span>:&#123;<span class=\"variable\">$exists</span>:<span class=\"literal\">true</span>&#125;&#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看执行时间超过1s的操作</span></span><br><span class=\"line\">&gt; db.currentOp(&#123;</span><br><span class=\"line\">   secs_running:&#123;<span class=\"variable\">$gt</span>:1&#125;</span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看test数据库中的操作</span></span><br><span class=\"line\">&gt; db.currentOp(&#123;</span><br><span class=\"line\">   ns:/test/</span><br><span class=\"line\"> &#125;)</span><br></pre></td></tr></table></figure>","content_text":"摘要 本文介绍MongoDB7.0的一些有用的功能，比如运行js，查看慢查询日志等等 MongoDB官方文档 本文基于CentOS8(x86_64) 运行js 运行js文件 insertMany.js 1234567891011121314151617var tags = [&#x27;nosql&#x27;, &#x27;mongodb&#x27;, &#x27;document&#x27;, &#x27;developer&#x27;, &#x27;popular&#x27;]var types = [&#x27;technology&#x27;, &#x27;sociality&#x27;, &#x27;travel&#x27;, &#x27;novel&#x27;, &#x27;literature&#x27;]var books = []for (var i = 0; i &lt; 50; i++) &#123; var typeIdx = Math.floor(Math.random() * types.length) var tagIdx = Math.floor(Math.random() * tags.length) var favCount = Math.floor(Math.random() * 100) var book = &#123; title: &#x27;book-&#x27; + i, type: types[typeIdx], tag: tags[tagIdx], favCount: favCount, author: &#x27;xxx&#x27; + i &#125; books.push(book)&#125;db.books.insertMany(books) 12# -f 运行js文件mongosh &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot; -f insertMany.js 运行js语句 1234567891011121314151617181920# ---eval 运行js语句mongosh &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot; --eval &quot;db.books.find().limit(2)&quot;[ &#123; _id: ObjectId(&#x27;660d0b05a8a6c09b0b1852b7&#x27;), title: &#x27;book-0&#x27;, type: &#x27;novel&#x27;, tag: &#x27;document&#x27;, favCount: 58, author: &#x27;xxx0&#x27; &#125;, &#123; _id: ObjectId(&#x27;660d0b05a8a6c09b0b1852b8&#x27;), title: &#x27;book-1&#x27;, type: &#x27;novel&#x27;, tag: &#x27;popular&#x27;, favCount: 10, author: &#x27;xxx1&#x27; &#125;] Profiler模块 Profiler模块可以用来记录、分析MongoDB的详细操作日志，默认情况下该功能是关闭的。 Profiler模块开启对于每个业务库来说是独立的，对某个业务库开启Profiler模块之后，符合条件的慢操作日志会被写入该库的system.profile集合中。 Profiler模块的调试级别有： 1230：关闭Profiler模块；1：部分开启，仅符合条件（时长大于slowms）的操作日志会被记录；2：日志全开，所有的操作日志都被记录； 设置Profiler模块的调试级别： 123456789101112131415161718192021222324252627# 设置Profiler模块的调试级别为2&gt; db.setProfilingLevel(2)# 查看当的调试级别信息&gt; db.getProfilingStatus()&#123; was: 2, # 当前的调试级别 slowms: 100, # 慢查询的阈值，单位是毫秒； sampleRate: 1.0, # 日志随机采样率，1.0则表示满足条件的全部输出。 ok: 1, # 状态 &#x27;$clusterTime&#x27;: &#123; # 时间戳 clusterTime: Timestamp(&#123; t: 1712471779, i: 1 &#125;), # 时间戳 signature: &#123; # 签名 hash: Binary.createFromBase64(&#x27;GGCAjzJrW8arhfJX0Cn0VpvC5MA=&#x27;, 0), # 签名 keyId: Long(&#x27;7346062378896719877&#x27;) # 签名 &#125; &#125;, operationTime: Timestamp(&#123; t: 1712471779, i: 1 &#125;) # 操作时间&#125;# 只记录时长超过500ms的操作&gt; db.setProfilingLevel(1,500)# 同时加上采样率&gt; db.setProfilingLevel(1,&#123;slowms:500,sampleRate:0.5&#125;)# 关闭Profiler模块&gt; db.setProfilingLevel(2) 查看日志 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869# 查看操作日志&gt; db.system.profile.find().limit(5).sort(&#123;ts:-1&#125;).pretty()[ &#123; op: &#x27;query&#x27;, # 操作类型,比如查询,更新,删除等 ns: &#x27;admin.system.profile&#x27;, # 操作的集合 command: &#123; # 操作的命令 find: &#x27;system.profile&#x27;, # 操作的集合 filter: &#123;&#125;, # 查询条件 lsid: &#123; id: UUID(&#x27;2285d6a5-b2df-4b46-b9d2-5e556b0a7c7d&#x27;) &#125;, # 会话id &#x27;$clusterTime&#x27;: &#123; # 时间戳 clusterTime: Timestamp(&#123; t: 1712471018, i: 1 &#125;), signature: &#123; hash: Binary.createFromBase64(&#x27;8YEsN+XUWO6EkoHEegKkG49eWPA=&#x27;, 0), keyId: Long(&#x27;7346062378896719877&#x27;) &#125; &#125;, &#x27;$db&#x27;: &#x27;admin&#x27;, # 数据库 &#x27;$readPreference&#x27;: &#123; mode: &#x27;primaryPreferred&#x27; &#125; # 读偏好 &#125;, keysExamined: 0, # 扫描索引条目数，如果比nreturned大出很多，则说明查询效率不高。 docsExamined: 3, # 扫描文档条目数，如果比nreturned大出很多，则说明查询效率不高。 nBatches: 1, # 批处理数量 cursorExhausted: true, # 是否游标已耗尽 numYield: 0, # 操作数，大于0表示等待锁或者是磁盘I/O操作 nreturned: 3, # 返回的文档数量 queryHash: &#x27;8880B5AF&#x27;, # 查询哈希值 planCacheKey: &#x27;8880B5AF&#x27;, queryFramework: &#x27;classic&#x27;, locks: &#123; # 锁占用的情况。 FeatureCompatibilityVersion: &#123; acquireCount: &#123; r: Long(&#x27;1&#x27;) &#125; &#125;, Global: &#123; acquireCount: &#123; r: Long(&#x27;1&#x27;) &#125; &#125; &#125;, flowControl: &#123;&#125;, readConcern: &#123; level: &#x27;local&#x27;, provenance: &#x27;implicitDefault&#x27; &#125;, # 读关注 responseLength: 3414, # 响应数据大小（字节数），一次性查询太多的数据会影响性能，可以使用limit、batchSize进行一些限制。 protocol: &#x27;op_msg&#x27;, # 协议类型，op_msg是mongodb 4.0+的协议，op_query是mongodb 3.2及以前版本的协议。 millis: 0, # 命令执行的时长，单位是毫秒。 planSummary: &#x27;COLLSCAN&#x27;, # 查询计划的概要，如IXSCAN表示使用了索引扫描。 planningTimeMicros: 79, execStats: &#123; # 执行过程统计信息。 stage: &#x27;COLLSCAN&#x27;, nReturned: 3, executionTimeMillisEstimate: 0, works: 4, advanced: 3, needTime: 0, needYield: 0, saveState: 0, restoreState: 0, isEOF: 1, direction: &#x27;forward&#x27;, docsExamined: 3 &#125;, ts: ISODate(&#x27;2024-04-07T06:23:56.054Z&#x27;), # 命令执行的时间点。 client: &#x27;127.0.0.1&#x27;, # 客户端地址。 appName: &#x27;mongosh 2.1.5&#x27;, # 客户端名称。 allUsers: [ &#123; user: &#x27;user&#x27;, db: &#x27;admin&#x27; &#125; ], # 所有用户信息。 user: &#x27;user@admin&#x27; # 当前用户信息。 &#125;………………………………]# 查看执行时长最大的10条操作记录&gt; db.system.profile.find().limit(10).sort(&#123;millis:-1&#125;).pretty()# 查看某个集合中的update操作日志&gt; db.system.profile.find(&#123;op:&quot;update&quot;,ns:&quot;shop.user&quot;&#125;) system.profile是一个1MB的固定大小的集合，随着记录日志的增多，一些旧的记录会被滚动删除。 Profiler模块的设置是内存级的，重启服务器后会自动恢复默认状态。 db.currentOp() Profiler模块所记录的日志都是已经发生的事情，db.currentOp()命令则与此相反，它可以用来查看数据库当前正在执行的一些操作。 db.currentOp()读取的是当前数据库的命令快照，该命令可以返回许多有用的信息，比如： 123操作的运行时长，快速发现耗时漫长的低效扫描操作。执行计划信息，用于判断是否命中了索引，或者存在锁冲突的情况。操作ID、时间、客户端等信息，方便定位出产生慢操作的源头 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677&gt; db.currentOp()&#123;inprog: [ # 当前正在执行的操作 &#123; type: &#x27;op&#x27;, # 操作类型，可以是op、idleSession、idleCursor的一种，一般的操作信息以op表示。其为MongoDB 4.2版本新增功能 host: &#x27;localhost:27041&#x27;, # 操作所在的主机 desc: &#x27;conn474&#x27;, # 操作的描述信息 connectionId: 474, # 操作的连接ID client: &#x27;127.0.0.1:58103&#x27;, # 操作的客户端信息 appName: &#x27;mongosh 2.1.5&#x27;, # 操作的客户端应用信息 clientMetadata: &#123; # 关于客户端的附加信息，可以包含驱动的版本。 application: &#123; name: &#x27;mongosh 2.1.5&#x27; &#125;, driver: &#123; name: &#x27;nodejs|mongosh&#x27;, version: &#x27;6.3.0|2.1.5&#x27; &#125;, platform: &#x27;Node.js v20.11.1, LE&#x27;, os: &#123; name: &#x27;darwin&#x27;, architecture: &#x27;x64&#x27;, version: &#x27;22.6.0&#x27;, type: &#x27;Darwin&#x27; &#125; &#125;, active: true, # 操作是否活跃。如果是空闲状态则为false currentOpTime: &#x27;2024-04-07T14:54:02.994+08:00&#x27;, # 操作的开始时间。MongoDB 3.6版本新增功能 threaded: true, opid: 236247, # opid：当前操作在数据库进程中的唯一编号,如果已经发现该操作正在导致数据库系统响应缓慢，则可以考虑将其“杀”死 : db.killOp(236247) secs_running: Long(&#x27;3&#x27;), # 操作持续时间,单位：秒 microsecs_running: Long(&#x27;3362378&#x27;), # 操作持续时间，单位：微秒 op: &#x27;command&#x27;, # 标识操作类型的字符串，如 command, insert, query, update, delete, getMore, killCursors ns: &#x27;admin.$cmd&#x27;, # 操作的命名空间，格式为 db.collection redacted: false, # 是否已脱敏 command: &#123; # 操作命令参数 hello: 1, maxAwaitTimeMS: 10000, topologyVersion: &#123; processId: ObjectId(&#x27;6611f8cd59f7cfaa5c8cd7e4&#x27;), counter: Long(&#x27;18&#x27;) &#125;, &#x27;$clusterTime&#x27;: &#123; clusterTime: Timestamp(&#123; t: 1712470998, i: 1 &#125;), signature: &#123; hash: Binary.createFromBase64(&#x27;gvgo03Wqi1AuOVqnrlhzKIK2NAU=&#x27;, 0), keyId: Long(&#x27;7346062378896719877&#x27;) &#125; &#125;, &#x27;$db&#x27;: &#x27;admin&#x27; &#125;, numYields: 0, locks: &#123;&#125;, # 当前操作持有锁的类型和模式。 waitingForLock: false, # 是否在等待锁 lockStats: &#123;&#125;, # 当前操作持有锁的统计。 waitingForFlowControl: false, flowControlStats: &#123;&#125; &#125;………………………………]&#125;# 查看等待锁的增加、删除、修改、查询操作&gt; db.currentOp(&#123; waitingForLock:true, $or:[ &#123;op:&#123;$in:[&quot;insert&quot;,&quot;update&quot;,&quot;remove&quot;]&#125;&#125;, &#123;&quot;query.findandmodify&quot;:&#123;$exists:true&#125;&#125; ] &#125;)# 查看执行时间超过1s的操作&gt; db.currentOp(&#123; secs_running:&#123;$gt:1&#125; &#125;)# 查看test数据库中的操作&gt; db.currentOp(&#123; ns:/test/ &#125;)","summary":"摘要 本文介绍MongoDB7.0的一些有用的功能，比如运行js，查看慢查询日志等等 MongoDB官方文档 本文基于CentOS8(x86_64)","date_published":"2024-04-07T13:30:05.000Z","tags":["技术","linux","mongodb","mongodb"]},{"id":"https://blog.hanqunfeng.com/2024/04/03/mongodb7-tools/","url":"https://blog.hanqunfeng.com/2024/04/03/mongodb7-tools/","title":"MongoDB Command Line Database Tools","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍Linux下MongoDB Command Line Database Tools的安装与使用</p>\n</li>\n<li class=\"lvl-2\">\n<p>MongoDB Command Line Database Tools<a href=\"https://www.mongodb.com/docs/database-tools/\">官方文档</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"MongoDB-Database-Tools\">MongoDB Database Tools</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>MongoDB Database Tools是MongoDB官方提供的数据库管理工具，可以用于管理MongoDB数据库，包括MongoDB的备份、恢复、监控等功能。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://www.mongodb.com/try/download/database-tools\">MongoDB Database Tools的下载地址</a></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载安装包</span></span><br><span class=\"line\">wget https://fastdl.mongodb.org/tools/db/mongodb-database-tools-rhel80-x86_64-100.9.4.tgz</span><br><span class=\"line\"><span class=\"comment\"># 解压安装包</span></span><br><span class=\"line\">tar -xvzf mongodb-database-tools-rhel80-x86_64-100.9.4.tgz</span><br><span class=\"line\"><span class=\"comment\"># 创建软连接</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s mongodb-database-tools-rhel80-x86_64-100.9.4 /mongodb/tools</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在/etc/profile文件中配置PATH环境变量</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=/mongodb/tools/bin:<span class=\"variable\">$PATH</span></span><br><span class=\"line\"><span class=\"comment\"># 使配置生效</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>MongoDB Database Tools常用命令，详细的使用方法请查看<a href=\"https://www.mongodb.com/docs/database-tools/\">官方文档</a></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>文件名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mongostat</td>\n<td>数据库性能监控工具</td>\n</tr>\n<tr>\n<td>mongotop</td>\n<td>热点表监控工具</td>\n</tr>\n<tr>\n<td>mongodump</td>\n<td>数据库逻辑备份工具</td>\n</tr>\n<tr>\n<td>mongorestore</td>\n<td>数据库逻辑恢复工具</td>\n</tr>\n<tr>\n<td>mongoexport</td>\n<td>数据导出工具</td>\n</tr>\n<tr>\n<td>mongoimport</td>\n<td>数据导入工具</td>\n</tr>\n<tr>\n<td>bsondump</td>\n<td>BSON格式转换工具</td>\n</tr>\n<tr>\n<td>mongofiles</td>\n<td>GridFS文件工具</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"mongoexport-导出数据\">mongoexport: 导出数据</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导出csv格式的数据</span></span><br><span class=\"line\">mongoexport <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class=\"built_in\">test</span> -c books -f _id,title,<span class=\"built_in\">type</span>,tag --<span class=\"built_in\">type</span>=csv -o books.csv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导出json格式的数据</span></span><br><span class=\"line\">mongoexport <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class=\"built_in\">test</span> -c books -f _id,title,<span class=\"built_in\">type</span>,tag --<span class=\"built_in\">type</span>=json -o books.json</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数说明</span></span><br><span class=\"line\">-d 指定数据库</span><br><span class=\"line\">-c 指定集合</span><br><span class=\"line\">-f 指定导出字段，csv格式需要指定字段，json格式可以不指定字段，默认导出全部</span><br><span class=\"line\">--<span class=\"built_in\">type</span>=csv/json 指定导出格式</span><br><span class=\"line\">-o 指定导出文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导出时可以增加过滤条件</span></span><br><span class=\"line\">mongoexport <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb -c user --<span class=\"built_in\">type</span>=json -o user.json  --<span class=\"built_in\">limit</span>=10 --skip=2 --<span class=\"built_in\">sort</span>=<span class=\"string\">&#x27;&#123;&quot;name&quot;:1&#125;&#x27;</span> --query=<span class=\"string\">&#x27;&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:25&#125;,&quot;name&quot;:&quot;zhangsan&quot;&#125;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数说明</span></span><br><span class=\"line\">--<span class=\"built_in\">limit</span>=10 指定导出条数</span><br><span class=\"line\">--skip=2 指定跳过条数</span><br><span class=\"line\">--<span class=\"built_in\">sort</span>=<span class=\"string\">&#x27;&#123;&quot;name&quot;:1&#125;&#x27;</span> 指定排序字段</span><br><span class=\"line\">--query=<span class=\"string\">&#x27;&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:25&#125;,&quot;name&quot;:&quot;zhangsan&quot;&#125;&#x27;</span> 指定查询条件，注意这里的查询条件是json格式，字段名需要使用双引号包裹</span><br></pre></td></tr></table></figure>\n<h2 id=\"mongoimport-导入数据\">mongoimport: 导入数据</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 导入csv格式的数据</span></span><br><span class=\"line\"><span class=\"comment\"># 注意此时导入的csv文件中第一行如果是字段名，需要先删除第一行再导入，这里使用了 -f 指定字段，来和导入的csv文件的列一一对应</span></span><br><span class=\"line\">mongoimport <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class=\"built_in\">test</span> -c books_new -f _id,title,<span class=\"built_in\">type</span>,tag --<span class=\"built_in\">type</span>=csv --file books.csv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意此时导入的csv文件中第一行如果是字段名，需要先删除第一行再导入，这里使用了 -f 指定字段，来和导入的csv文件的列一一对应</span></span><br><span class=\"line\">mongoimport <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class=\"built_in\">test</span> -c books_new --headerline --<span class=\"built_in\">type</span>=csv --file books.csv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入json格式的数据</span></span><br><span class=\"line\">mongoimport <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class=\"built_in\">test</span> -c books_new --<span class=\"built_in\">type</span>=json --file books.json</span><br><span class=\"line\"></span><br><span class=\"line\">-d 指定数据库</span><br><span class=\"line\">-c 指定集合</span><br><span class=\"line\">-f 指定导入字段，csv格式需要指定字段</span><br><span class=\"line\">--headerline 指定第一行是字段名</span><br><span class=\"line\">--<span class=\"built_in\">type</span>=csv/json 指定导入格式</span><br><span class=\"line\">--file 指定导入文件</span><br><span class=\"line\">--mode 指定导入方式，默认是insert，还可以是upsert，merge，delete</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>mode说明</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>insert: 默认值，如果数据不存在，则插入，如果存在，则报错</p>\n</li>\n<li class=\"lvl-2\">\n<p>upsert: 如果数据不存在，则插入，如果存在，则更新</p>\n</li>\n<li class=\"lvl-2\">\n<p>merge: 如果数据不存在，则插入，如果存在，则合并后更新</p>\n</li>\n<li class=\"lvl-2\">\n<p>delete: 如果数据不存在，也不执行插入，如果存在，则删除</p>\n</li>\n</ul>\n<h2 id=\"mongostat-数据库性能监控\">mongostat: 数据库性能监控</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>mongostat命令用于实时监控MongoDB数据库的性能，包括连接数、文档数、索引数、内存使用情况等。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 监控20次，间隔1秒</span></span><br><span class=\"line\">mongostat <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -n20 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数说明</span></span><br><span class=\"line\">-n 指定监控次数</span><br><span class=\"line\">1 指定监控间隔时间，单位为秒</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 监控实时数据</span></span><br><span class=\"line\">host               insert query update delete getmore <span class=\"built_in\">command</span> dirty  used flushes vsize  res qrw arw net_in net_out conn <span class=\"built_in\">set</span> repl                time</span><br><span class=\"line\">10.1.2.142:27017    *0    *0     *0     *0       0     4|0     0.4%  5.0%       0 2.95G 151M 0|0 0|0  1.13k   75.2k   24 rs0  SLV Apr  3 08:37:49.405</span><br><span class=\"line\">10.1.2.26:27017     *0    *0     *0     *0       0     2|0     0.2%  3.8%       0 2.87G 138M 0|0 0|0   710b   74.3k   14 rs0  SEC Apr  3 08:37:49.385</span><br><span class=\"line\">10.1.2.41:27017     *0    *0     *0     *0       0     5|0     0.0% 17.7%       0 2.96G 184M 0|0 0|0  1.45k   75.5k   16 rs0  SEC Apr  3 08:37:49.426</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>指标说明</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>指标名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>inserts</code></td>\n<td>每秒插入数</td>\n</tr>\n<tr>\n<td><code>query</code></td>\n<td>每秒查询数</td>\n</tr>\n<tr>\n<td><code>update</code></td>\n<td>每秒更新数</td>\n</tr>\n<tr>\n<td><code>delete</code></td>\n<td>每秒删除数</td>\n</tr>\n<tr>\n<td><code>getmore</code></td>\n<td>每秒getmore数</td>\n</tr>\n<tr>\n<td><code>command</code></td>\n<td>每秒命令数，涵盖了内部的一些操作</td>\n</tr>\n<tr>\n<td><code>%dirty</code></td>\n<td>WiredTiger缓存中脏数据百分比</td>\n</tr>\n<tr>\n<td><code>%used</code></td>\n<td>WiredTiger 正在使用的缓存百分比</td>\n</tr>\n<tr>\n<td><code>flushes</code></td>\n<td>WiredTiger执行CheckPoint的次数</td>\n</tr>\n<tr>\n<td><code>vsize</code></td>\n<td>虚拟内存使用量</td>\n</tr>\n<tr>\n<td><code>res</code></td>\n<td>物理内存使用量</td>\n</tr>\n<tr>\n<td><code>qrw</code></td>\n<td>客户端读写等待队列数量，高并发时，一般队列值会升高</td>\n</tr>\n<tr>\n<td><code>arw</code></td>\n<td>客户端读写活跃个数</td>\n</tr>\n<tr>\n<td><code>netIn</code></td>\n<td>网络接收数据量</td>\n</tr>\n<tr>\n<td><code>netOut</code></td>\n<td>网络发送数据量</td>\n</tr>\n<tr>\n<td><code>conn</code></td>\n<td>当前连接数</td>\n</tr>\n<tr>\n<td><code>set</code></td>\n<td>所属复制集名称</td>\n</tr>\n<tr>\n<td><code>repl</code></td>\n<td>复制节点状态，如PRI(主节点,我这里主节点显示为SLV),SEC(从节点),ARB(仲裁节点),REC(节点正在恢复),UNK(未知状态),RTR(mongos)</td>\n</tr>\n<tr>\n<td><code>time</code></td>\n<td>时间戳</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>需要重点关注的指标<br>\n1.插入、删除、修改、查询的速率是否产生较大波动，是否超出预期。<br>\n2.qrw、arw：队列是否较高，若长时间大于0则说明此时读写速度较慢。<br>\n3.conn：连接数是否太多。<br>\n4.dirty：百分比是否较高，若持续高于10%则说明磁盘I/O存在瓶颈。<br>\n5.netIn、netOut：是否超过网络带宽阈值。<br>\n6.repl：状态是否异常，如PRI、SEC、RTR为正常，若出现REC等异常值则需要修复。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 指定监控指标 -o</span></span><br><span class=\"line\">mongostat <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -n1 1 -o=<span class=\"string\">&#x27;host,insert,query,update,delete,qrw,arw,conn,dirty,repl,version&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            host insert query update delete qrw arw conn dirty repl version</span><br><span class=\"line\">10.1.2.142:27017     *0    *0     *0     *0 0|0 0|0   24  0.4%  SLV   7.0.7</span><br><span class=\"line\"> 10.1.2.26:27017     *0    *0     *0     *0 0|0 0|0   14  0.2%  SEC   7.0.7</span><br><span class=\"line\"> 10.1.2.41:27017     *0    *0     *0     *0 0|0 0|0   16  0.4%  SEC   7.0.7</span><br></pre></td></tr></table></figure>\n<h2 id=\"mongotop-查看数据库性能\">mongotop: 查看数据库性能</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>mongotop命令可用于查看数据库的热点表，通过观察mongotop的输出，可以判定是哪些集合占用了大部分读写时间。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 监控20次，间隔1秒</span></span><br><span class=\"line\">mongotop <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -n 20 1</span><br><span class=\"line\"></span><br><span class=\"line\">                             ns    total    <span class=\"built_in\">read</span>    write    2024-04-03T09:16:53Z</span><br><span class=\"line\">                 admin.atlascli      0ms     0ms      0ms</span><br><span class=\"line\">              admin.system.keys      0ms     0ms      0ms</span><br><span class=\"line\">             admin.system.users      0ms     0ms      0ms</span><br><span class=\"line\">           admin.system.version      0ms     0ms      0ms</span><br><span class=\"line\">config.external_validation_keys      0ms     0ms      0ms</span><br><span class=\"line\">        config.image_collection      0ms     0ms      0ms</span><br><span class=\"line\">          config.queryAnalyzers      0ms     0ms      0ms</span><br><span class=\"line\">                config.settings      0ms     0ms      0ms</span><br><span class=\"line\">    config.shardMergeRecipients      0ms     0ms      0ms</span><br><span class=\"line\">        config.shardSplitDonors      0ms     0ms      0ms</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出说明</span></span><br><span class=\"line\">ns 集合名称</span><br><span class=\"line\">total 花费在该集合上的时长</span><br><span class=\"line\"><span class=\"built_in\">read</span> 花费在该集合上的读操作时长</span><br><span class=\"line\">write 花费在该集合上的写操作时长</span><br></pre></td></tr></table></figure>\n<h2 id=\"mongodump-备份数据库\">mongodump: 备份数据库</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>mongodump命令用于备份数据库</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 备份所有库，默认输出到dump文件夹下</span></span><br><span class=\"line\">mongodump <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> --gzip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 备份指定库，默认输出到dump文件夹下</span></span><br><span class=\"line\">mongodump <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class=\"built_in\">test</span> --gzip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 备份指定集合</span></span><br><span class=\"line\">mongodump <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class=\"built_in\">test</span> -c books --gzip -o ./books</span><br><span class=\"line\">2024-04-03T09:36:18.980+0000\twriting test.books to books/test/books.bson.gz</span><br><span class=\"line\">2024-04-03T09:36:18.983+0000\t<span class=\"keyword\">done</span> dumping test.books (50 documents)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数说明</span></span><br><span class=\"line\">-d 指定数据库，不指定则导出全部数据库</span><br><span class=\"line\">-c 指定集合，不指定则导出全部集合</span><br><span class=\"line\">--gzip 指定压缩格式，导出的文件会被压缩为.gz格式</span><br><span class=\"line\">-o 指定备份目录，不指定则默认为当前目录下的dump文件夹</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 类似于 mongoexport ,备份数据时同样支持过滤条件</span></span><br><span class=\"line\">mongodump <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d <span class=\"built_in\">test</span> -c books --gzip -o ./books --query=<span class=\"string\">&#x27;&#123;&quot;name&quot;:&quot;hello&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"mongorestore-恢复数据库\">mongorestore: 恢复数据库</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>mongorestore命令用于恢复数据库</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 恢复到相同数据库的相同集合,此时会将dump目录下的所有数据库进行恢复</span></span><br><span class=\"line\">mongorestore <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> --gzip ./dump</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只恢复指定的库下的所有集合</span></span><br><span class=\"line\">mongorestore <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> --nsInclude=<span class=\"string\">&quot;test.*&quot;</span> --gzip ./dump</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只恢复指定的集合</span></span><br><span class=\"line\">mongorestore <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> --nsInclude=<span class=\"string\">&quot;test.books&quot;</span> --gzip ./dump</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数说明</span></span><br><span class=\"line\">--nsInclude=test.books 指定要恢复的集合</span><br><span class=\"line\">--gzip 指定压缩格式</span><br></pre></td></tr></table></figure>\n<h2 id=\"bsondump-查看BSON文件内容\">bsondump: 查看BSON文件内容</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>bsondump命令用于查看BSON文件内容，可以将bson格式的数据转换为json格式，方便查看。</p>\n</li>\n<li class=\"lvl-2\">\n<p>我们使用mongodump导出的数据格式为bson格式，可以使用bsondump命令将其转换为json格式。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果导出的是压缩格式需要先解压缩</span></span><br><span class=\"line\">gunzip emp.bson.gz</span><br><span class=\"line\"><span class=\"comment\"># 将bson文件转换为json文件</span></span><br><span class=\"line\">bsondump emp.bson &gt; emp.json</span><br></pre></td></tr></table></figure>\n<h2 id=\"mongofiles-文件存储\">mongofiles: 文件存储</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>mongofiles命令用于文件存储，可以将文件存储到MongoDB中，然后通过mongofiles命令进行查看和删除。</p>\n</li>\n<li class=\"lvl-2\">\n<p>不过现在文件存储基本都会使用S3，很少使用mongodb了。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 上传</span></span><br><span class=\"line\">mongofiles <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb put shell从入门到精通.docx</span><br><span class=\"line\"><span class=\"comment\"># 上传后会在指定的数据库中创建两个集合：fs.files 和 fs.chunks</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt; db.fs.files.find()</span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    _id: ObjectId(<span class=\"string\">&#x27;66120f0135b8419b3a1ca510&#x27;</span>), <span class=\"comment\"># 文档ID，唯一标识</span></span><br><span class=\"line\">    length: Long(<span class=\"string\">&#x27;486680&#x27;</span>),                    <span class=\"comment\"># 文件大小</span></span><br><span class=\"line\">    chunkSize: 261120,                         <span class=\"comment\"># 每个分片的大小</span></span><br><span class=\"line\">    uploadDate: ISODate(<span class=\"string\">&#x27;2024-04-07T03:12:01.965Z&#x27;</span>), <span class=\"comment\"># 上传时间</span></span><br><span class=\"line\">    filename: <span class=\"string\">&#x27;shell从入门到精通.docx&#x27;</span>,          <span class=\"comment\"># 文件名</span></span><br><span class=\"line\">    metadata: &#123;&#125;                               <span class=\"comment\"># 元数据</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&gt; db.fs.chunks.find()</span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    _id: ObjectId(<span class=\"string\">&#x27;66120f0135b8419b3a1ca512&#x27;</span>),     <span class=\"comment\"># 分片ID</span></span><br><span class=\"line\">    files_id: ObjectId(<span class=\"string\">&#x27;66120f0135b8419b3a1ca510&#x27;</span>), <span class=\"comment\"># 文档ID，对应fs.files集合中的_id</span></span><br><span class=\"line\">    n: 1,                                         <span class=\"comment\"># 分片序号</span></span><br><span class=\"line\">    data: &lt;Binary&gt;                                <span class=\"comment\"># 分片数据</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看</span></span><br><span class=\"line\">mongofiles <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 搜索</span></span><br><span class=\"line\">mongofiles <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb search shell</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载</span></span><br><span class=\"line\">mongofiles <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb get shell从入门到精通.docx</span><br><span class=\"line\"><span class=\"comment\"># 根据id获取文件</span></span><br><span class=\"line\">mongofiles <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb get_id <span class=\"string\">&#x27;&#123;&quot;$oid&quot;: &quot;66120f0135b8419b3a1ca510&quot;&#125;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除</span></span><br><span class=\"line\">mongofiles <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb delete shell从入门到精通.docx</span><br><span class=\"line\"><span class=\"comment\"># 根据id删除文件</span></span><br><span class=\"line\">mongofiles <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot;</span> -d mydb delete_id <span class=\"string\">&#x27;&#123;&quot;$oid&quot;: &quot;66120f0135b8419b3a1ca510&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure>","content_text":"摘要 本文介绍Linux下MongoDB Command Line Database Tools的安装与使用 MongoDB Command Line Database Tools官方文档 本文基于CentOS8(x86_64) MongoDB Database Tools MongoDB Database Tools是MongoDB官方提供的数据库管理工具，可以用于管理MongoDB数据库，包括MongoDB的备份、恢复、监控等功能。 MongoDB Database Tools的下载地址 1234567891011# 下载安装包wget https://fastdl.mongodb.org/tools/db/mongodb-database-tools-rhel80-x86_64-100.9.4.tgz# 解压安装包tar -xvzf mongodb-database-tools-rhel80-x86_64-100.9.4.tgz# 创建软连接ln -s mongodb-database-tools-rhel80-x86_64-100.9.4 /mongodb/tools# 在/etc/profile文件中配置PATH环境变量export PATH=/mongodb/tools/bin:$PATH# 使配置生效source /etc/profile MongoDB Database Tools常用命令，详细的使用方法请查看官方文档 文件名称 作用 mongostat 数据库性能监控工具 mongotop 热点表监控工具 mongodump 数据库逻辑备份工具 mongorestore 数据库逻辑恢复工具 mongoexport 数据导出工具 mongoimport 数据导入工具 bsondump BSON格式转换工具 mongofiles GridFS文件工具 mongoexport: 导出数据 123456789101112131415161718192021# 导出csv格式的数据mongoexport &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d test -c books -f _id,title,type,tag --type=csv -o books.csv# 导出json格式的数据mongoexport &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d test -c books -f _id,title,type,tag --type=json -o books.json# 参数说明-d 指定数据库-c 指定集合-f 指定导出字段，csv格式需要指定字段，json格式可以不指定字段，默认导出全部--type=csv/json 指定导出格式-o 指定导出文件# 导出时可以增加过滤条件mongoexport &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017?authSource=admin&amp;replicaSet=rs0&quot; -d mydb -c user --type=json -o user.json --limit=10 --skip=2 --sort=&#x27;&#123;&quot;name&quot;:1&#125;&#x27; --query=&#x27;&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:25&#125;,&quot;name&quot;:&quot;zhangsan&quot;&#125;&#x27;# 参数说明--limit=10 指定导出条数--skip=2 指定跳过条数--sort=&#x27;&#123;&quot;name&quot;:1&#125;&#x27; 指定排序字段--query=&#x27;&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:25&#125;,&quot;name&quot;:&quot;zhangsan&quot;&#125;&#x27; 指定查询条件，注意这里的查询条件是json格式，字段名需要使用双引号包裹 mongoimport: 导入数据 1234567891011121314151617# 导入csv格式的数据# 注意此时导入的csv文件中第一行如果是字段名，需要先删除第一行再导入，这里使用了 -f 指定字段，来和导入的csv文件的列一一对应mongoimport &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d test -c books_new -f _id,title,type,tag --type=csv --file books.csv# 注意此时导入的csv文件中第一行如果是字段名，需要先删除第一行再导入，这里使用了 -f 指定字段，来和导入的csv文件的列一一对应mongoimport &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d test -c books_new --headerline --type=csv --file books.csv# 导入json格式的数据mongoimport &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d test -c books_new --type=json --file books.json-d 指定数据库-c 指定集合-f 指定导入字段，csv格式需要指定字段--headerline 指定第一行是字段名--type=csv/json 指定导入格式--file 指定导入文件--mode 指定导入方式，默认是insert，还可以是upsert，merge，delete mode说明 insert: 默认值，如果数据不存在，则插入，如果存在，则报错 upsert: 如果数据不存在，则插入，如果存在，则更新 merge: 如果数据不存在，则插入，如果存在，则合并后更新 delete: 如果数据不存在，也不执行插入，如果存在，则删除 mongostat: 数据库性能监控 mongostat命令用于实时监控MongoDB数据库的性能，包括连接数、文档数、索引数、内存使用情况等。 123456789101112# 监控20次，间隔1秒mongostat &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -n20 1# 参数说明-n 指定监控次数1 指定监控间隔时间，单位为秒# 监控实时数据host insert query update delete getmore command dirty used flushes vsize res qrw arw net_in net_out conn set repl time10.1.2.142:27017 *0 *0 *0 *0 0 4|0 0.4% 5.0% 0 2.95G 151M 0|0 0|0 1.13k 75.2k 24 rs0 SLV Apr 3 08:37:49.40510.1.2.26:27017 *0 *0 *0 *0 0 2|0 0.2% 3.8% 0 2.87G 138M 0|0 0|0 710b 74.3k 14 rs0 SEC Apr 3 08:37:49.38510.1.2.41:27017 *0 *0 *0 *0 0 5|0 0.0% 17.7% 0 2.96G 184M 0|0 0|0 1.45k 75.5k 16 rs0 SEC Apr 3 08:37:49.426 指标说明 指标名 说明 inserts 每秒插入数 query 每秒查询数 update 每秒更新数 delete 每秒删除数 getmore 每秒getmore数 command 每秒命令数，涵盖了内部的一些操作 %dirty WiredTiger缓存中脏数据百分比 %used WiredTiger 正在使用的缓存百分比 flushes WiredTiger执行CheckPoint的次数 vsize 虚拟内存使用量 res 物理内存使用量 qrw 客户端读写等待队列数量，高并发时，一般队列值会升高 arw 客户端读写活跃个数 netIn 网络接收数据量 netOut 网络发送数据量 conn 当前连接数 set 所属复制集名称 repl 复制节点状态，如PRI(主节点,我这里主节点显示为SLV),SEC(从节点),ARB(仲裁节点),REC(节点正在恢复),UNK(未知状态),RTR(mongos) time 时间戳 需要重点关注的指标 1.插入、删除、修改、查询的速率是否产生较大波动，是否超出预期。 2.qrw、arw：队列是否较高，若长时间大于0则说明此时读写速度较慢。 3.conn：连接数是否太多。 4.dirty：百分比是否较高，若持续高于10%则说明磁盘I/O存在瓶颈。 5.netIn、netOut：是否超过网络带宽阈值。 6.repl：状态是否异常，如PRI、SEC、RTR为正常，若出现REC等异常值则需要修复。 1234567# 指定监控指标 -omongostat &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -n1 1 -o=&#x27;host,insert,query,update,delete,qrw,arw,conn,dirty,repl,version&#x27; host insert query update delete qrw arw conn dirty repl version10.1.2.142:27017 *0 *0 *0 *0 0|0 0|0 24 0.4% SLV 7.0.7 10.1.2.26:27017 *0 *0 *0 *0 0|0 0|0 14 0.2% SEC 7.0.7 10.1.2.41:27017 *0 *0 *0 *0 0|0 0|0 16 0.4% SEC 7.0.7 mongotop: 查看数据库性能 mongotop命令可用于查看数据库的热点表，通过观察mongotop的输出，可以判定是哪些集合占用了大部分读写时间。 1234567891011121314151617181920# 监控20次，间隔1秒mongotop &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -n 20 1 ns total read write 2024-04-03T09:16:53Z admin.atlascli 0ms 0ms 0ms admin.system.keys 0ms 0ms 0ms admin.system.users 0ms 0ms 0ms admin.system.version 0ms 0ms 0msconfig.external_validation_keys 0ms 0ms 0ms config.image_collection 0ms 0ms 0ms config.queryAnalyzers 0ms 0ms 0ms config.settings 0ms 0ms 0ms config.shardMergeRecipients 0ms 0ms 0ms config.shardSplitDonors 0ms 0ms 0ms# 输出说明ns 集合名称total 花费在该集合上的时长read 花费在该集合上的读操作时长write 花费在该集合上的写操作时长 mongodump: 备份数据库 mongodump命令用于备份数据库 12345678910111213141516171819# 备份所有库，默认输出到dump文件夹下mongodump &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; --gzip# 备份指定库，默认输出到dump文件夹下mongodump &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d test --gzip# 备份指定集合mongodump &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d test -c books --gzip -o ./books2024-04-03T09:36:18.980+0000 writing test.books to books/test/books.bson.gz2024-04-03T09:36:18.983+0000 done dumping test.books (50 documents)# 参数说明-d 指定数据库，不指定则导出全部数据库-c 指定集合，不指定则导出全部集合--gzip 指定压缩格式，导出的文件会被压缩为.gz格式-o 指定备份目录，不指定则默认为当前目录下的dump文件夹# 类似于 mongoexport ,备份数据时同样支持过滤条件mongodump &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d test -c books --gzip -o ./books --query=&#x27;&#123;&quot;name&quot;:&quot;hello&quot;&#125;&#x27; mongorestore: 恢复数据库 mongorestore命令用于恢复数据库 12345678910111213# 恢复到相同数据库的相同集合,此时会将dump目录下的所有数据库进行恢复mongorestore &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; --gzip ./dump# 只恢复指定的库下的所有集合mongorestore &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; --nsInclude=&quot;test.*&quot; --gzip ./dump# 只恢复指定的集合mongorestore &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; --nsInclude=&quot;test.books&quot; --gzip ./dump# 参数说明--nsInclude=test.books 指定要恢复的集合--gzip 指定压缩格式 bsondump: 查看BSON文件内容 bsondump命令用于查看BSON文件内容，可以将bson格式的数据转换为json格式，方便查看。 我们使用mongodump导出的数据格式为bson格式，可以使用bsondump命令将其转换为json格式。 1234# 如果导出的是压缩格式需要先解压缩gunzip emp.bson.gz# 将bson文件转换为json文件bsondump emp.bson &gt; emp.json mongofiles: 文件存储 mongofiles命令用于文件存储，可以将文件存储到MongoDB中，然后通过mongofiles命令进行查看和删除。 不过现在文件存储基本都会使用S3，很少使用mongodb了。 123456789101112131415161718192021222324252627282930313233343536373839404142# 上传mongofiles &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d mydb put shell从入门到精通.docx# 上传后会在指定的数据库中创建两个集合：fs.files 和 fs.chunks&gt; db.fs.files.find()[ &#123; _id: ObjectId(&#x27;66120f0135b8419b3a1ca510&#x27;), # 文档ID，唯一标识 length: Long(&#x27;486680&#x27;), # 文件大小 chunkSize: 261120, # 每个分片的大小 uploadDate: ISODate(&#x27;2024-04-07T03:12:01.965Z&#x27;), # 上传时间 filename: &#x27;shell从入门到精通.docx&#x27;, # 文件名 metadata: &#123;&#125; # 元数据 &#125;]&gt; db.fs.chunks.find()[ &#123; _id: ObjectId(&#x27;66120f0135b8419b3a1ca512&#x27;), # 分片ID files_id: ObjectId(&#x27;66120f0135b8419b3a1ca510&#x27;), # 文档ID，对应fs.files集合中的_id n: 1, # 分片序号 data: &lt;Binary&gt; # 分片数据 &#125;]# 查看mongofiles &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d mydb list# 搜索mongofiles &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d mydb search shell# 下载mongofiles &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d mydb get shell从入门到精通.docx# 根据id获取文件mongofiles &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d mydb get_id &#x27;&#123;&quot;$oid&quot;: &quot;66120f0135b8419b3a1ca510&quot;&#125;&#x27;# 删除mongofiles &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d mydb delete shell从入门到精通.docx# 根据id删除文件mongofiles &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/?authSource=admin&amp;replicaSet=rs0&quot; -d mydb delete_id &#x27;&#123;&quot;$oid&quot;: &quot;66120f0135b8419b3a1ca510&quot;&#125;&#x27;","summary":"摘要 本文介绍Linux下MongoDB Command Line Database Tools的安装与使用 MongoDB Command Line Database Tools官方文档 本文基于CentOS8(x86_64)","date_published":"2024-04-03T13:30:05.000Z","tags":["技术","linux","mongodb","mongodb"]},{"id":"https://blog.hanqunfeng.com/2024/03/29/mongodb7-replset/","url":"https://blog.hanqunfeng.com/2024/03/29/mongodb7-replset/","title":"MongoDB7.0--复制集","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍Linux下MongoDB7.0复制集的安装和使用</p>\n</li>\n<li class=\"lvl-2\">\n<p>MongoDB<a href=\"https://www.mongodb.com/docs/v7.0/\">官方文档</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>Mongodb分片集群</code>搭建参看<a href=\"/2020/03/19/mongodb-mongos/\" title=\"MongoDB 分片集群搭建\">MongoDB 分片集群搭建</a>，虽然是基于<code>4.4</code>版本的，但是安装方式差别不大，只是配置文件中个别的属性名称发生了变化。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"复制集节点类型\">复制集节点类型</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>一个复制集最多支持50个节点，且做多只能有7个节点参与投票，节点类型分为<code>Primary</code>、<code>Secondary</code>与<code>Arbiter</code>。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>Primary</code>：主节点，其接收所有的写请求，然后把修改同步到所有 <code>Secondary</code> 节点。一个复制集只能有一个主节点，当主节点<em><strong>挂掉</strong></em>后，其他节点会重新选举出来一个主节点。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>Secondary</code>：备节点，与主节点保持同样的数据集。当主节点<em><strong>挂掉</strong></em>时，参与竞选主节点。分为以下三个不同类型：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-4\">Hidden = false：正常的只读节点，是否可选为主，是否可投票，取决于 <code>Priority</code>，<code>Vote</code> 的值；</li>\n<li class=\"lvl-4\">Hidden = true：隐藏节点，对客户端不可见， 可以参与选举，但是 <code>Priority</code> 必须为 0，即不能被提升为主。 由于隐藏节点不会接受业务访问，因此可通过隐藏节点做一些数据备份、离线计算的任务，这并不会影响整个复制集。</li>\n<li class=\"lvl-4\">Delayed ：延迟节点，必须同时具备<code>隐藏节点</code>和<code>Priority=0</code>的特性，会延迟一定的时间（secondaryDelaySecs 配置决定）从上游复制增量，常用于快速回滚场景。</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p><code>Arbiter</code>：仲裁节点，只用于参与选举投票，本身不承载任何数据，只作为投票角色。比如你部署了2个节点的复制集，1个 Primary，1个Secondary，任意节点宕机，复制集将不能提供服务了（无法选出Primary），这时可以给复制集添加⼀个 Arbiter节点，即使有节点宕机，仍能选出Primary。 Arbiter本身不存储数据，是非常轻量级的服务，当复制集成员为偶数时，最好加入⼀个Arbiter节点，以提升复制集可用性。</p>\n</li>\n</ul>\n<h2 id=\"搭建基于3台机器的复制集\">搭建基于3台机器的复制集</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">10.1</span><span class=\"number\">.2</span><span class=\"number\">.26</span></span><br><span class=\"line\"><span class=\"number\">10.1</span><span class=\"number\">.2</span><span class=\"number\">.142</span></span><br><span class=\"line\"><span class=\"number\">10.1</span><span class=\"number\">.2</span><span class=\"number\">.41</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>mongod.conf配置文件，需要创建好相关目录</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">systemLog:</span></span><br><span class=\"line\">  <span class=\"attr\">destination:</span> <span class=\"string\">file</span></span><br><span class=\"line\">  <span class=\"attr\">path:</span> <span class=\"string\">/mongodb/log/mongodb.log</span></span><br><span class=\"line\">  <span class=\"attr\">logAppend:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">storage:</span></span><br><span class=\"line\">  <span class=\"attr\">dbPath:</span> <span class=\"string\">/mongodb/data</span></span><br><span class=\"line\"><span class=\"attr\">net:</span></span><br><span class=\"line\">  <span class=\"attr\">bindIp:</span> <span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">27017</span></span><br><span class=\"line\"><span class=\"attr\">processManagement:</span></span><br><span class=\"line\">  <span class=\"attr\">fork:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">replication:</span></span><br><span class=\"line\">  <span class=\"attr\">replSetName:</span> <span class=\"string\">rs0</span></span><br><span class=\"line\"><span class=\"attr\">security:</span></span><br><span class=\"line\">  <span class=\"attr\">keyFile:</span> <span class=\"string\">/mongodb/mongo.key</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>创建key文件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl rand -<span class=\"built_in\">base64</span> 756 &gt; /mongodb/mongo.key</span><br><span class=\"line\"><span class=\"comment\"># 修改权限</span></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 600 /mongodb/mongo.key</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>分别启动3个节点</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod -f /mongodb/mongo.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"初始化\">初始化</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>登录任意节点</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongosh 10.1.2.26:27017</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>初始化复制集</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 必须切换到admin数据库</span></span><br><span class=\"line\"><span class=\"built_in\">test</span>&gt; use admin</span><br><span class=\"line\">switched to db admin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化</span></span><br><span class=\"line\">admin&gt; rs.initiate(</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    _id: <span class=\"string\">&quot;rs0&quot;</span>,</span><br><span class=\"line\">    members: [</span><br><span class=\"line\">      &#123; _id : 0, host : <span class=\"string\">&quot;10.1.2.26&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; _id : 1, host : <span class=\"string\">&quot;10.1.2.142&quot;</span> &#125;,</span><br><span class=\"line\">      &#123; _id : 2, host : <span class=\"string\">&quot;10.1.2.41&quot;</span> &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看谁是主节点</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看谁是主节点，可以看到此时主节点是 10.1.2.26</span></span><br><span class=\"line\">&gt; rs.<span class=\"function\"><span class=\"title\">isMaster</span></span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  topologyVersion: &#123;   <span class=\"comment\"># 拓扑版本，包含进程 ID 和计数器。</span></span><br><span class=\"line\">    processId: ObjectId(<span class=\"string\">&#x27;660a1cdf2e7a827807cac6f9&#x27;</span>),  <span class=\"comment\"># 进程 ID</span></span><br><span class=\"line\">    counter: Long(<span class=\"string\">&#x27;6&#x27;</span>)   <span class=\"comment\"># 计数器，用于标识拓扑版本</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  hosts: [ <span class=\"string\">&#x27;10.1.2.26:27017&#x27;</span>, <span class=\"string\">&#x27;10.1.2.142:27017&#x27;</span>, <span class=\"string\">&#x27;10.1.2.41:27017&#x27;</span> ], <span class=\"comment\"># 复制集中所有成员的主机和端口号列表。</span></span><br><span class=\"line\">  setName: <span class=\"string\">&#x27;rs0&#x27;</span>,    <span class=\"comment\"># 复制集的名称</span></span><br><span class=\"line\">  setVersion: 1,     <span class=\"comment\"># 复制集的版本号</span></span><br><span class=\"line\">  ismaster: <span class=\"literal\">true</span>,    <span class=\"comment\"># 当前节点是否为主节点</span></span><br><span class=\"line\">  secondary: <span class=\"literal\">false</span>,  <span class=\"comment\"># 当前节点是否为从节点</span></span><br><span class=\"line\">  primary: <span class=\"string\">&#x27;10.1.2.26:27017&#x27;</span>, <span class=\"comment\"># 主节点的主机名和端口号</span></span><br><span class=\"line\">  me: <span class=\"string\">&#x27;10.1.2.26:27017&#x27;</span>,      <span class=\"comment\"># 当前节点的主机名和端口号</span></span><br><span class=\"line\">  electionId: ObjectId(<span class=\"string\">&#x27;7fffffff0000000000000001&#x27;</span>), <span class=\"comment\"># 选举 ID</span></span><br><span class=\"line\">  lastWrite: &#123; <span class=\"comment\"># 最后一次写入操作的时间信息</span></span><br><span class=\"line\">    opTime: &#123; ts: Timestamp(&#123; t: 1711939636, i: 7 &#125;), t: Long(<span class=\"string\">&#x27;1&#x27;</span>) &#125;, <span class=\"comment\"># 操作时间戳</span></span><br><span class=\"line\">    lastWriteDate: ISODate(<span class=\"string\">&#x27;2024-04-01T02:47:16.000Z&#x27;</span>),               <span class=\"comment\"># 最后一次写入操作的时间</span></span><br><span class=\"line\">    majorityOpTime: &#123; ts: Timestamp(&#123; t: 1711939636, i: 7 &#125;), t: Long(<span class=\"string\">&#x27;1&#x27;</span>) &#125;, <span class=\"comment\"># 大多数写操作的时间戳</span></span><br><span class=\"line\">    majorityWriteDate: ISODate(<span class=\"string\">&#x27;2024-04-01T02:47:16.000Z&#x27;</span>)                    <span class=\"comment\"># 大多数写操作的时间</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  maxBsonObjectSize: 16777216,                    <span class=\"comment\"># 最大 BSON 对象大小</span></span><br><span class=\"line\">  maxMessageSizeBytes: 48000000,                  <span class=\"comment\"># 最大消息大小(以字节为单位）)</span></span><br><span class=\"line\">  maxWriteBatchSize: 100000,                      <span class=\"comment\"># 最大写批次大小</span></span><br><span class=\"line\">  localTime: ISODate(<span class=\"string\">&#x27;2024-04-01T02:47:20.408Z&#x27;</span>), <span class=\"comment\"># 本地时间</span></span><br><span class=\"line\">  logicalSessionTimeoutMinutes: 30,               <span class=\"comment\"># 登录超时时间(以分钟为单位)</span></span><br><span class=\"line\">  connectionId: 7,                                <span class=\"comment\"># 连接 ID</span></span><br><span class=\"line\">  minWireVersion: 0,                              <span class=\"comment\"># 最小Wire版本</span></span><br><span class=\"line\">  maxWireVersion: 21,                             <span class=\"comment\"># 最大Wire版本</span></span><br><span class=\"line\">  readOnly: <span class=\"literal\">false</span>,                                <span class=\"comment\"># 当前节点是否为只读节点</span></span><br><span class=\"line\">  ok: 1,                                          <span class=\"comment\"># 操作是否成功</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123;                               <span class=\"comment\"># 集群时间</span></span><br><span class=\"line\">    clusterTime: Timestamp(&#123; t: 1711939636, i: 7 &#125;), <span class=\"comment\"># 集群时间戳</span></span><br><span class=\"line\">    signature: &#123;   <span class=\"comment\"># 签名信息</span></span><br><span class=\"line\">      <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;OOXSWapWStZk2n4cyJ7jdBS87do=&#x27;</span>, 0), <span class=\"comment\"># 签名哈希</span></span><br><span class=\"line\">      keyId: Long(<span class=\"string\">&#x27;7352724745051176965&#x27;</span>) <span class=\"comment\"># 密钥 ID</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  operationTime: Timestamp(&#123; t: 1711939636, i: 7 &#125;), <span class=\"comment\"># 操作时间戳</span></span><br><span class=\"line\">  isWritablePrimary: <span class=\"literal\">true</span> <span class=\"comment\"># 当前主节点是否可写</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看集群状态</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; rs.status()</span><br><span class=\"line\"><span class=\"comment\"># 这里只列出节点的信息</span></span><br><span class=\"line\">…………………………</span><br><span class=\"line\">members: [   <span class=\"comment\"># 复制集成员列表</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      _id: 0, <span class=\"comment\"># 节点 ID</span></span><br><span class=\"line\">      name: <span class=\"string\">&#x27;10.1.2.26:27017&#x27;</span>, <span class=\"comment\"># 节点主机名和端口号</span></span><br><span class=\"line\">      health: 1, <span class=\"comment\"># 节点健康状态，这里是 1，表示健康</span></span><br><span class=\"line\">      state: 1, <span class=\"comment\"># 节点状态，这里是 1，表示主节点</span></span><br><span class=\"line\">      stateStr: <span class=\"string\">&#x27;PRIMARY&#x27;</span>, <span class=\"comment\"># 节点状态字符串</span></span><br><span class=\"line\">      <span class=\"built_in\">uptime</span>: 88366, <span class=\"comment\"># 节点运行时间</span></span><br><span class=\"line\">      optime: &#123; ts: Timestamp(&#123; t: 1712044133, i: 1 &#125;), t: Long(<span class=\"string\">&#x27;5&#x27;</span>) &#125;, <span class=\"comment\"># 节点操作时间戳</span></span><br><span class=\"line\">      optimeDate: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.000Z&#x27;</span>), <span class=\"comment\"># 节点操作时间</span></span><br><span class=\"line\">      lastAppliedWallTime: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.125Z&#x27;</span>), <span class=\"comment\"># 节点最后应用时间</span></span><br><span class=\"line\">      lastDurableWallTime: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.125Z&#x27;</span>), <span class=\"comment\"># 节点最后持久化时间</span></span><br><span class=\"line\">      syncSourceHost: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\"># 同步源主机名</span></span><br><span class=\"line\">      syncSourceId: -1, <span class=\"comment\"># 同步源节点 ID</span></span><br><span class=\"line\">      infoMessage: <span class=\"string\">&#x27;Could not find member to sync from&#x27;</span>, <span class=\"comment\"># 节点信息消息</span></span><br><span class=\"line\">      electionTime: Timestamp(&#123; t: 1712044063, i: 1 &#125;), <span class=\"comment\"># 选举时间戳</span></span><br><span class=\"line\">      electionDate: ISODate(<span class=\"string\">&#x27;2024-04-02T07:47:43.000Z&#x27;</span>), <span class=\"comment\"># 选举时间</span></span><br><span class=\"line\">      configVersion: 4, <span class=\"comment\"># 配置版本</span></span><br><span class=\"line\">      configTerm: 5, <span class=\"comment\"># 选举任期</span></span><br><span class=\"line\">      self: <span class=\"literal\">true</span>, <span class=\"comment\"># 是否为主节点</span></span><br><span class=\"line\">      lastHeartbeatMessage: <span class=\"string\">&#x27;&#x27;</span> <span class=\"comment\"># 节点心跳消息</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      _id: 1,</span><br><span class=\"line\">      name: <span class=\"string\">&#x27;10.1.2.142:27017&#x27;</span>,</span><br><span class=\"line\">      health: 1,</span><br><span class=\"line\">      state: 2, <span class=\"comment\"># 节点状态，这里是 2，表示从节点</span></span><br><span class=\"line\">      stateStr: <span class=\"string\">&#x27;SECONDARY&#x27;</span>,</span><br><span class=\"line\">      <span class=\"built_in\">uptime</span>: 88363,</span><br><span class=\"line\">      optime: &#123; ts: Timestamp(&#123; t: 1712044133, i: 1 &#125;), t: Long(<span class=\"string\">&#x27;5&#x27;</span>) &#125;,</span><br><span class=\"line\">      optimeDurable: &#123; ts: Timestamp(&#123; t: 1712044133, i: 1 &#125;), t: Long(<span class=\"string\">&#x27;5&#x27;</span>) &#125;,</span><br><span class=\"line\">      optimeDate: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.000Z&#x27;</span>),</span><br><span class=\"line\">      optimeDurableDate: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.000Z&#x27;</span>),</span><br><span class=\"line\">      lastAppliedWallTime: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.125Z&#x27;</span>),</span><br><span class=\"line\">      lastDurableWallTime: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.125Z&#x27;</span>),</span><br><span class=\"line\">      lastHeartbeat: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.140Z&#x27;</span>), <span class=\"comment\"># 最后一次心跳时间</span></span><br><span class=\"line\">      lastHeartbeatRecv: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.655Z&#x27;</span>), <span class=\"comment\"># 最后一次接收心跳时间</span></span><br><span class=\"line\">      pingMs: Long(<span class=\"string\">&#x27;0&#x27;</span>), <span class=\"comment\"># 节点心跳间隔时间</span></span><br><span class=\"line\">      lastHeartbeatMessage: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\"># 节点心跳消息</span></span><br><span class=\"line\">      syncSourceHost: <span class=\"string\">&#x27;10.1.2.26:27017&#x27;</span>, <span class=\"comment\"># 同步源主机名</span></span><br><span class=\"line\">      syncSourceId: 0, <span class=\"comment\"># 同步源节点 ID</span></span><br><span class=\"line\">      infoMessage: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"comment\"># 节点信息消息</span></span><br><span class=\"line\">      configVersion: 4, <span class=\"comment\"># 配置版本</span></span><br><span class=\"line\">      configTerm: 5 <span class=\"comment\"># 选举任期</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      _id: 2,</span><br><span class=\"line\">      name: <span class=\"string\">&#x27;10.1.2.41:27017&#x27;</span>,</span><br><span class=\"line\">      health: 0, <span class=\"comment\"># 节点健康状态，这里是0，表示节点不可达，因为该节点的mongo服务被关掉了，这里只是为了展示不同的状态</span></span><br><span class=\"line\">      state: 8, <span class=\"comment\"># 节点状态，这里是8，表示不可达</span></span><br><span class=\"line\">      stateStr: <span class=\"string\">&#x27;(not reachable/healthy)&#x27;</span>, <span class=\"comment\"># 节点状态字符串，提示节点不可达</span></span><br><span class=\"line\">      <span class=\"built_in\">uptime</span>: 0,</span><br><span class=\"line\">      optime: &#123; ts: Timestamp(&#123; t: 0, i: 0 &#125;), t: Long(<span class=\"string\">&#x27;-1&#x27;</span>) &#125;,</span><br><span class=\"line\">      optimeDurable: &#123; ts: Timestamp(&#123; t: 0, i: 0 &#125;), t: Long(<span class=\"string\">&#x27;-1&#x27;</span>) &#125;,</span><br><span class=\"line\">      optimeDate: ISODate(<span class=\"string\">&#x27;1970-01-01T00:00:00.000Z&#x27;</span>),</span><br><span class=\"line\">      optimeDurableDate: ISODate(<span class=\"string\">&#x27;1970-01-01T00:00:00.000Z&#x27;</span>),</span><br><span class=\"line\">      lastAppliedWallTime: ISODate(<span class=\"string\">&#x27;2024-04-02T07:47:23.818Z&#x27;</span>),</span><br><span class=\"line\">      lastDurableWallTime: ISODate(<span class=\"string\">&#x27;2024-04-02T07:47:23.818Z&#x27;</span>),</span><br><span class=\"line\">      lastHeartbeat: ISODate(<span class=\"string\">&#x27;2024-04-02T07:48:53.163Z&#x27;</span>),</span><br><span class=\"line\">      lastHeartbeatRecv: ISODate(<span class=\"string\">&#x27;2024-04-02T07:47:32.215Z&#x27;</span>),</span><br><span class=\"line\">      pingMs: Long(<span class=\"string\">&#x27;0&#x27;</span>),</span><br><span class=\"line\">      lastHeartbeatMessage: <span class=\"string\">&#x27;Error connecting to 10.1.2.41:27017 :: caused by :: onInvoke :: caused by :: Connection refused&#x27;</span>, <span class=\"comment\"># 节点心跳消息，这里是连接失败</span></span><br><span class=\"line\">      syncSourceHost: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">      syncSourceId: -1,</span><br><span class=\"line\">      infoMessage: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">      configVersion: 4,</span><br><span class=\"line\">      configTerm: 4</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">………………………………</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>state的值及对应的含义<br>\n0: Startup - 成员正在启动。<br>\n1: Primary - 成员是主副本集节点。可以接收写入操作。每个副本集有且仅有一个主节点。<br>\n2: Secondary - 成员是从副本集节点。复制主节点的数据变更。<br>\n3: Recovering - 成员已经接收到新的数据，但还无法提供读或投票服务。此状态通常是短暂的。<br>\n4: Fatal - 成员发生了不可恢复的错误，已停止接收和复制数据。人工干预需要重启成员或者副本集。<br>\n5: Startup2 - 成员正在初始化副本集的内部数据结构。<br>\n6: Unknown - 因为与此成员的同步被打断，导致此成员状态未知。<br>\n7: Arbiter - 成员是仲裁者。<br>\n8: Down - 这个成员目前不能到达。<br>\n9: Rollback - 这个成员正在滚动回数据以达到一致的状态。<br>\n10: Removed - 这个成员已经从副本集中删除。</p>\n</blockquote>\n<h2 id=\"授权\">授权</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>创建用户</p>\n</li>\n</ul>\n<blockquote>\n<p>授权后需要重新登录或进行认证后才能继续操作</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 登录主节点</span></span><br><span class=\"line\">rs0 [direct: primary] <span class=\"built_in\">test</span>&gt; use admin</span><br><span class=\"line\">switched to db admin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建用户</span></span><br><span class=\"line\">rs0 [direct: primary] admin&gt; db.createUser(&#123;</span><br><span class=\"line\"> user: <span class=\"string\">&quot;user&quot;</span>,</span><br><span class=\"line\"> <span class=\"built_in\">pwd</span>: <span class=\"string\">&quot;password&quot;</span>,</span><br><span class=\"line\"> roles: [</span><br><span class=\"line\">  &#123; role: <span class=\"string\">&quot;clusterAdmin&quot;</span>, db: <span class=\"string\">&quot;admin&quot;</span> &#125; ,</span><br><span class=\"line\">  &#123; role: <span class=\"string\">&quot;userAdminAnyDatabase&quot;</span>, db: <span class=\"string\">&quot;admin&quot;</span>&#125;,</span><br><span class=\"line\">  &#123; role: <span class=\"string\">&quot;dbAdminAnyDatabase&quot;</span>, db: <span class=\"string\">&quot;admin&quot;</span> &#125;,</span><br><span class=\"line\">  &#123; role: <span class=\"string\">&quot;readWriteAnyDatabase&quot;</span>, db: <span class=\"string\">&quot;admin&quot;</span>&#125;</span><br><span class=\"line\"> ]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"登录\">登录</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>方法1，连接的同时认证</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认登录test数据库</span></span><br><span class=\"line\">mongosh 10.1.2.26:27017 -u user -p password --authenticationDatabase admin</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017/test?authSource=admin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集群连接，推荐，会自动登录到主节点</span></span><br><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>方法2，先连接，再认证</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongosh 10.1.2.26:27017</span><br><span class=\"line\">&gt; use admin</span><br><span class=\"line\">switched to db admin</span><br><span class=\"line\">&gt; db.auth(<span class=\"string\">&quot;user&quot;</span>,<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">&#123; ok: 1 &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集群连接，推荐，会自动登录到主节点</span></span><br><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span></span><br><span class=\"line\">&gt; use admin</span><br><span class=\"line\">switched to db admin</span><br><span class=\"line\">&gt; db.auth(<span class=\"string\">&quot;user&quot;</span>,<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">&#123; ok: 1 &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看用户信息\">查看用户信息</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 先要切换到 admin 数据库</span></span><br><span class=\"line\">rs0 [direct: primary] admin&gt; db.system.users.find()</span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    _id: <span class=\"string\">&#x27;admin.user&#x27;</span>,</span><br><span class=\"line\">    userId: UUID(<span class=\"string\">&#x27;19dcd146-6872-41fe-8e39-46bb98b9db5c&#x27;</span>),</span><br><span class=\"line\">    user: <span class=\"string\">&#x27;user&#x27;</span>,</span><br><span class=\"line\">    db: <span class=\"string\">&#x27;admin&#x27;</span>,</span><br><span class=\"line\">    credentials: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;SCRAM-SHA-1&#x27;</span>: &#123;</span><br><span class=\"line\">        iterationCount: 10000,</span><br><span class=\"line\">        salt: <span class=\"string\">&#x27;DLOOhoEKeG2RKfW8hU4caw==&#x27;</span>,</span><br><span class=\"line\">        storedKey: <span class=\"string\">&#x27;ohQOJeAS3XWUwlFJAGduuiUJptc=&#x27;</span>,</span><br><span class=\"line\">        serverKey: <span class=\"string\">&#x27;rDjqq/nF3awasdaPr2ocJskm7p0=&#x27;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&#x27;SCRAM-SHA-256&#x27;</span>: &#123;</span><br><span class=\"line\">        iterationCount: 15000,</span><br><span class=\"line\">        salt: <span class=\"string\">&#x27;6YpcJH2pcL3yC726rpIq6VWSQLSV68i+oqURkw==&#x27;</span>,</span><br><span class=\"line\">        storedKey: <span class=\"string\">&#x27;1nIijUrLAL0lQZ6++O0cxM3VbsprdwRQucVFYkDQWbA=&#x27;</span>,</span><br><span class=\"line\">        serverKey: <span class=\"string\">&#x27;nk8TKbK19zLaD7wJn+991euF9ILE08iPopmJ8YAAqfQ=&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    roles: [</span><br><span class=\"line\">      &#123; role: <span class=\"string\">&#x27;userAdminAnyDatabase&#x27;</span>, db: <span class=\"string\">&#x27;admin&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; role: <span class=\"string\">&#x27;clusterAdmin&#x27;</span>, db: <span class=\"string\">&#x27;admin&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; role: <span class=\"string\">&#x27;dbAdminAnyDatabase&#x27;</span>, db: <span class=\"string\">&#x27;admin&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; role: <span class=\"string\">&#x27;readWriteAnyDatabase&#x27;</span>, db: <span class=\"string\">&#x27;admin&#x27;</span> &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\">rs0 [direct: primary] admin&gt; show <span class=\"built_in\">users</span></span><br><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    _id: <span class=\"string\">&#x27;admin.user&#x27;</span>,</span><br><span class=\"line\">    userId: UUID(<span class=\"string\">&#x27;19dcd146-6872-41fe-8e39-46bb98b9db5c&#x27;</span>),</span><br><span class=\"line\">    user: <span class=\"string\">&#x27;user&#x27;</span>,</span><br><span class=\"line\">    db: <span class=\"string\">&#x27;admin&#x27;</span>,</span><br><span class=\"line\">    roles: [</span><br><span class=\"line\">      &#123; role: <span class=\"string\">&#x27;userAdminAnyDatabase&#x27;</span>, db: <span class=\"string\">&#x27;admin&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; role: <span class=\"string\">&#x27;clusterAdmin&#x27;</span>, db: <span class=\"string\">&#x27;admin&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; role: <span class=\"string\">&#x27;dbAdminAnyDatabase&#x27;</span>, db: <span class=\"string\">&#x27;admin&#x27;</span> &#125;,</span><br><span class=\"line\">      &#123; role: <span class=\"string\">&#x27;readWriteAnyDatabase&#x27;</span>, db: <span class=\"string\">&#x27;admin&#x27;</span> &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    mechanisms: [ <span class=\"string\">&#x27;SCRAM-SHA-1&#x27;</span>, <span class=\"string\">&#x27;SCRAM-SHA-256&#x27;</span> ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"开启从库读取数据的权限\">开启从库读取数据的权限</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用当前最新版<code>mongosh-2.2.2</code>连接从库时，默认就支持读取数据，其默认的<code>readPreference</code>为<code>primaryPreferred</code>。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果使用之前的版本连接从库时，默认是不能读取数据的，需要手工开启</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 提示非主节点，不能查询数据，</span></span><br><span class=\"line\">rs0 [direct: secondary] <span class=\"built_in\">test</span>&gt; show <span class=\"built_in\">users</span></span><br><span class=\"line\">MongoServerError[NotPrimaryNoSecondaryOk]: not primary - consider using db.getMongo().setReadPref() or readPreference <span class=\"keyword\">in</span> the connection string</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 早期版本是运行 rs.secondaryOk()，不过现在提示已经不推荐了</span></span><br><span class=\"line\">rs0 [direct: secondary] <span class=\"built_in\">test</span>&gt; rs.secondaryOk()</span><br><span class=\"line\">DeprecationWarning: .setSecondaryOk() is deprecated. Use .setReadPref(<span class=\"string\">&quot;primaryPreferred&quot;</span>) instead</span><br><span class=\"line\">Setting <span class=\"built_in\">read</span> preference from <span class=\"string\">&quot;primary&quot;</span> to <span class=\"string\">&quot;primaryPreferred&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>全局设置<code>readPreference</code>，对本次链接都有效</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 开启从库读取数据权限</span></span><br><span class=\"line\">rs0 [direct: secondary] <span class=\"built_in\">test</span>&gt; db.getMongo().setReadPref(<span class=\"string\">&quot;primaryPreferred&quot;</span>)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>也可以在链接参数中指定<code>readPreference</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单节点连接</span></span><br><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.142:27017/test?authSource=admin&amp;readPreference=primaryPreferred&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集群连接</span></span><br><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&amp;readPreference=primaryPreferred&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>可以在查询时指定<code>readPreference</code>，只针对当前查询，对后续查询无效</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0 [direct: secondary] admin&gt; db.system.users.find().readPref(<span class=\"string\">&quot;secondary&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"readPreference\">readPreference</h2>\n<p>readPreference决定使用哪一类节点（主或从节点）来满足正在发起的读请求。可选值包括：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>primary</code>：默认值，只读主节点的数据。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>primaryPreferred</code>：优先读主节点的数据，如果主节点不可用，则读从节点的数据。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>secondary</code>：只读从节点的数据。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>secondaryPreferred</code>：优先读从节点的数据，如果从节点不可用，则读主节点的数据。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>nearest</code>：优先读距离最近的节点的数据。</p>\n</li>\n</ul>\n<blockquote>\n<p>指定 <code>readPreference</code> 时应注意高可用问题。例如将 <code>readPreference</code> 指定 <code>primary</code>，则发生故障转移不存在 <code>primary</code> 期间将没有节点可读。如果业务允许，则应选择 <code>primaryPreferred</code>；</p>\n</blockquote>\n<h2 id=\"Tag\">Tag</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>集群中节点的标签，用于选择节点</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>readPreference</code> 只能控制使用一类（主或从节点）节点。<code>Tag</code> 则可以将节点选择控制到一个或几个节点。</p>\n</li>\n<li class=\"lvl-2\">\n<p>为节点添加<code>Tag</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 必须在主节点下才能修改配置</span></span><br><span class=\"line\">conf = rs.conf()</span><br><span class=\"line\">conf.members[0].tags = &#123; purpose: <span class=\"string\">&quot;online&quot;</span> &#125;</span><br><span class=\"line\">conf.members[1].tags = &#123; purpose: <span class=\"string\">&quot;online&quot;</span> &#125;</span><br><span class=\"line\">conf.members[2].tags = &#123; purpose: <span class=\"string\">&quot;analyse&quot;</span>&#125;</span><br><span class=\"line\">rs.reconfig(conf)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>全局指定<code>Tag</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0 [direct: primary] admin&gt; db.getMongo().setReadPref(<span class=\"string\">&quot;primaryPreferred&quot;</span>, [ &#123;purpose: <span class=\"string\">&quot;online&quot;</span>&#125; ])</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在链接参数中指定<code>Tag</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&amp;readPreference=primaryPreferred&amp;readPreferenceTags=purpose:online&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在查询时指定<code>Tag</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0 [direct: secondary] admin&gt; db.system.users.find().readPref(<span class=\"string\">&quot;secondary&quot;</span>, [ &#123;purpose: <span class=\"string\">&quot;analyse&quot;</span>&#125; ])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意，`Tag`只能用于从节点，主节点不支持。</span></span><br><span class=\"line\">rs0 [direct: primary] admin&gt; db.system.users.find().readPref(<span class=\"string\">&quot;primary&quot;</span>, [ &#123;purpose: <span class=\"string\">&quot;online&quot;</span>&#125; ])</span><br><span class=\"line\">MongoInvalidArgumentError: Primary <span class=\"built_in\">read</span> preference cannot be combined with tags</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用 Tag 时应注意高可用问题，如果只有一个节点拥有一个特定 Tag，则在这个节点失效时将无节点可读。这在有时候是期望的结果，有时候不是。例如：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-4\">如果报表使用的节点失效，即使不生成报表，通常也不希望将报表负载转移到其他节点上，此时只有一个节点有报表 Tag 是合理的选择；</li>\n<li class=\"lvl-4\">如果线上节点失效，通常希望有替代节点，所以应该保持多个节点有同样的 Tag；</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>Tag 有时需要与优先级、选举权综合考虑。例如做报表的节点通常不会希望它成为主节点，则优先级应为 0。</p>\n</li>\n<li class=\"lvl-2\">\n<p>通过<code>rs.conf()</code>可以查看复制集中各个节点的Tag信息</p>\n</li>\n</ul>\n<h2 id=\"优先级-priority-与-选举权-vote\">优先级(priority) 与 选举权(vote)</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>当 <code>Priority</code> 等于 0 时，它不可以被复制集选举为主，<code>Priority</code> 的值越高，则被选举为主的概率更大。</p>\n</li>\n<li class=\"lvl-2\">\n<p>当 <code>Vote</code> 等于 0 时，它不可以参与选举投票，此时该节点的 <code>Priority</code> 也必须为 0，即它也不能被选举为主。</p>\n</li>\n<li class=\"lvl-2\">\n<p>由于一个复制集中最多只有7个投票成员，因此多出来的成员则必须将其vote属性值设置为0，即这些成员将无法参与投票。</p>\n</li>\n<li class=\"lvl-2\">\n<p>通过<code>rs.conf()</code>可以查看复制集中各个节点的相关配置</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; rs.<span class=\"function\"><span class=\"title\">conf</span></span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  _id: <span class=\"string\">&#x27;rs0&#x27;</span>,                <span class=\"comment\"># 复制集名称</span></span><br><span class=\"line\">  version: 2,                <span class=\"comment\"># 配置版本号，即conf被修改的次数，每次更改配置时，版本号都会递增。</span></span><br><span class=\"line\">  term: 3,                   <span class=\"comment\"># 选举轮次（election term）。在进行选举时，MongoDB 使用一个单调递增的 term 值来标识选举的周期。这个值会随着选举的进行而增加。</span></span><br><span class=\"line\">  members: [                 <span class=\"comment\"># 成员数组，包含了复制集中的所有成员的详细配置信息。</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      _id: 0,                <span class=\"comment\"># 成员的唯一标识符，从0开始递增。</span></span><br><span class=\"line\">      host: <span class=\"string\">&#x27;10.1.2.26:27017&#x27;</span>, <span class=\"comment\"># 节点ip+port</span></span><br><span class=\"line\">      arbiterOnly: <span class=\"literal\">false</span>,    <span class=\"comment\"># 是否为仲裁节点</span></span><br><span class=\"line\">      buildIndexes: <span class=\"literal\">true</span>,    <span class=\"comment\"># 是否在此节点上创建索引</span></span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,         <span class=\"comment\"># 是否为隐藏节点，即不被客户端发现。</span></span><br><span class=\"line\">      priority: 1,           <span class=\"comment\"># 选举优先级，值越大优先级越高，0表示不能被选举为主节点</span></span><br><span class=\"line\">      tags: &#123; purpose: <span class=\"string\">&#x27;online&#x27;</span> &#125;, <span class=\"comment\"># Tag</span></span><br><span class=\"line\">      secondaryDelaySecs: Long(<span class=\"string\">&#x27;0&#x27;</span>), <span class=\"comment\"># 如果存在延迟复制，表示复制延迟的时间量（以秒为单位），如果为0则表示不是延迟节点。</span></span><br><span class=\"line\">      votes: 1               <span class=\"comment\"># 成员的投票数，大于0表示参与投票。</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  protocolVersion: Long(<span class=\"string\">&#x27;1&#x27;</span>),                         <span class=\"comment\"># 复制集使用的协议版本。</span></span><br><span class=\"line\">  writeConcernMajorityJournalDefault: <span class=\"literal\">true</span>,           <span class=\"comment\"># 是否在写入操作中默认启用大多数写关注和日志记录</span></span><br><span class=\"line\">  settings: &#123;                                         <span class=\"comment\"># 复制集的全局设置，包含以下属性：</span></span><br><span class=\"line\">    chainingAllowed: <span class=\"literal\">true</span>,                            <span class=\"comment\"># 是否允许从其他成员读取数据。</span></span><br><span class=\"line\">    heartbeatIntervalMillis: 2000,                    <span class=\"comment\"># 心跳间隔，即成员之间检测状态的时间间隔。</span></span><br><span class=\"line\">    heartbeatTimeoutSecs: 10,                         <span class=\"comment\"># 心跳超时时间，如果在此时间内未收到心跳，则认为成员不可用。</span></span><br><span class=\"line\">    electionTimeoutMillis: 10000,                     <span class=\"comment\"># 选举超时时间，即进行选举的时间间隔。</span></span><br><span class=\"line\">    catchUpTimeoutMillis: -1,                         <span class=\"comment\"># 成员在追赶操作时的超时时间。</span></span><br><span class=\"line\">    catchUpTakeoverDelayMillis: 30000,                <span class=\"comment\"># 在追赶操作期间，发生主节点故障时，延迟节点接管主节点之前的延迟时间。</span></span><br><span class=\"line\">    getLastErrorModes: &#123;&#125;,                            <span class=\"comment\"># 指定写操作的确认模式。</span></span><br><span class=\"line\">    getLastErrorDefaults: &#123; w: 1, wtimeout: 0 &#125;,      <span class=\"comment\"># 指定写操作的默认确认参数。</span></span><br><span class=\"line\">    replicaSetId: ObjectId(<span class=\"string\">&#x27;660a20282e7a827807cac803&#x27;</span>) <span class=\"comment\"># 复制集的唯一标识符。</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    ………………</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>修改节点优先级</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 必须在主节点执行</span></span><br><span class=\"line\">cfg = rs.conf()</span><br><span class=\"line\"><span class=\"comment\"># 保存成功后，由于当前节点的优先级最高，所以集群会发起重新选举将当前节点设置为主节点</span></span><br><span class=\"line\">cfg.members[2].priority = 10</span><br><span class=\"line\">rs.reconfig(cfg)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>设置隐藏节点</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 必须在主节点执行</span></span><br><span class=\"line\">cfg = rs.conf()</span><br><span class=\"line\">cfg.members[2].priority = 0</span><br><span class=\"line\">cfg.members[2].hidden = <span class=\"literal\">true</span></span><br><span class=\"line\">rs.reconfig(cfg)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>配置延时节点</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cfg = rs.conf()</span><br><span class=\"line\">cfg.members[2].priority = 0</span><br><span class=\"line\">cfg.members[2].hidden = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">#延迟60秒</span></span><br><span class=\"line\">cfg.members[2].secondaryDelaySecs = 60</span><br><span class=\"line\">rs.reconfig(cfg)</span><br></pre></td></tr></table></figure>\n<h2 id=\"读关注-readConcern\">读关注(readConcern)</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在 <code>readPreference</code> 选择了指定的节点后，<code>readConcern</code> 决定这个节点上的数据哪些是可读的</p>\n</li>\n<li class=\"lvl-2\">\n<p>类似于关系数据库的隔离级别，可选值包括：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- available：读取所有可用的数据;</span><br><span class=\"line\">- <span class=\"built_in\">local</span>：读取所有可用且属于当前分片的数据。在复制集中 <span class=\"built_in\">local</span> 和 available 是没有区别的，两者仅在分片集群中才有区别;</span><br><span class=\"line\">- majority：读取在大多数节点上提交完成的数据;</span><br><span class=\"line\">- linearizable：可线性化读取文档，仅支持从主节点读。只读取大多数节点确认过的数据。和 majority 最大差别是保证绝对的操作线性顺序;</span><br><span class=\"line\">- snapshot：读取最近快照中的数据，仅可用于多文档事务，隔离级别最高;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>主节点读取数据时默认 <code>readConcern</code> 是 <code>local</code>，从节点读取数据时默认 <code>readConcern</code> 是 <code>available</code></p>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>分片集群中 local 和 available 的区别</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">如果一个 chunk x 正在从 shard1 向 shard2 迁移；</li>\n<li class=\"lvl-2\">整个迁移过程中 chunk x 中的部分数据会在 shard1 和 shard2 中同时存在，但源分片 shard1仍然是chunk x 的负责方：\n<ul class=\"lvl-3\">\n<li class=\"lvl-4\">所有对 chunk x 的读写操作仍然进入 shard1；</li>\n<li class=\"lvl-4\">config 中记录的信息 chunk x 仍然属于 shard1；</li>\n</ul>\n</li>\n<li class=\"lvl-2\">此时如果读 shard2，则会体现出 local 和 available 的区别：\n<ul class=\"lvl-3\">\n<li class=\"lvl-4\">local：只取应该由 shard2 负责的数据（不包括 x）；</li>\n<li class=\"lvl-4\">available：shard2 上有什么就读什么（包括 x）；</li>\n</ul>\n</li>\n</ul>\n</div>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.user.find().readConcern(<span class=\"string\">&#x27;local&#x27;</span>)</span><br><span class=\"line\">db.user.find().readConcern(<span class=\"string\">&#x27;majority&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 读取从节点上已经被大多数节点提交完成的数据</span></span><br><span class=\"line\">db.user.find().readPref(<span class=\"string\">&quot;secondary&quot;</span>).readConcern(<span class=\"string\">&quot;majority&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"写关注-writeConcern\">写关注(writeConcern)</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>writeConcern</code> 决定一个写操作落到多少个节点上才算成功。</p>\n</li>\n<li class=\"lvl-2\">\n<p>MongoDB支持客户端灵活配置写入策略（writeConcern），以满足不同场景的需求。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; w: &lt;value&gt;, j: &lt;boolean&gt;, wtimeout: &lt;number&gt; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">w: 数据写入到number个节点才向用客户端确认</span><br><span class=\"line\">  - &#123;w: 0&#125; 对客户端的写入不需要发送任何确认，适用于性能要求高，但不关注正确性的场景</span><br><span class=\"line\">  - &#123;w: 1&#125; 默认的writeConcern，数据写入到Primary就向客户端发送确认</span><br><span class=\"line\">  - &#123;w: <span class=\"string\">&quot;majority&quot;</span>&#125; 数据写入到副本集大多数成员后向客户端发送确认，适用于对数据安全性要求比较高的场景，该选项会降低写入性能</span><br><span class=\"line\"></span><br><span class=\"line\">j: 写入操作的journal持久化后才向客户端确认</span><br><span class=\"line\">  - 默认为&#123;j: <span class=\"literal\">false</span>&#125;，如果要求Primary写入持久化了才向客户端确认，则指定该选项为<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">wtimeout: 写入超时时间，仅w的值大于1时有效。</span><br><span class=\"line\">  - 当指定&#123;w: &#125;时，数据需要成功写入number个节点才算成功，如果写入过程中有节点故障，可能导致这个条件一直不能满足，从而一直不能向客户端发送确认结果，针对这种情况，客户端可设置wtimeout选项来指定超时时间，当写入过程持续超过该时间仍未结束，则认为写入失败。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>通常重要数据应用 <code>&#123;w: &quot;majority&quot;&#125;</code>，普通数据可以应用 <code>&#123;w: 1&#125;</code> 以确保最佳性能。</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 等等大多数节点写入成功</span></span><br><span class=\"line\">db.user.insertOne(&#123;name:<span class=\"string\">&quot;李四&quot;</span>&#125;,&#123;writeConcern:&#123;w:<span class=\"string\">&quot;majority&quot;</span>&#125;&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 等待3个节点写入成功，若超时则写入失败</span></span><br><span class=\"line\">db.user.insertOne(&#123;name:<span class=\"string\">&quot;小明&quot;</span>&#125;,&#123;writeConcern:&#123;w:3,wtimeout:3000&#125;&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"优雅的重启复制集\">优雅的重启复制集</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>逐个重启复制集里所有的Secondary节点</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭服务</span></span><br><span class=\"line\">mongod --shutdown -f /mongodb/mongo.conf</span><br><span class=\"line\"><span class=\"comment\"># 重启启动</span></span><br><span class=\"line\">mongod -f /mongodb/mongo.conf</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>对Primary发送rs.stepDown()命令，等待primary降级为Secondary</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0 [primary] <span class=\"built_in\">local</span>&gt; rs.<span class=\"function\"><span class=\"title\">stepDown</span></span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ok: 1,</span><br><span class=\"line\">  <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class=\"line\">    clusterTime: Timestamp(&#123; t: 1712046433, i: 1 &#125;),</span><br><span class=\"line\">    signature: &#123;</span><br><span class=\"line\">      <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;dklQyCuunlYhWYkKuNtiNcGNom8=&#x27;</span>, 0),</span><br><span class=\"line\">      keyId: Long(<span class=\"string\">&#x27;7352724745051176965&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  operationTime: Timestamp(&#123; t: 1712046433, i: 1 &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>重启降级后的Primary</p>\n</li>\n</ul>\n<h2 id=\"oplog\">oplog</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在复制集架构中，主节点与备节点之间是通过oplog来同步数据的，这里的oplog是一个特殊的固定集合，当主节点上的一个写操作完成后，会向oplog集合写入一条对应的日志，而备节点则通过这个oplog不断拉取到新的日志，在本地进行回放以达到数据同步的目的。<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/d2K4tD.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>查询oplog</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">use <span class=\"built_in\">local</span></span><br><span class=\"line\"><span class=\"comment\"># 查询最近10条oplog，这里 $natural:-1 是按照时间降序排列</span></span><br><span class=\"line\">db.oplog.rs.find().<span class=\"built_in\">sort</span>(&#123;<span class=\"variable\">$natural</span>:-1&#125;).<span class=\"built_in\">limit</span>(10)</span><br><span class=\"line\"><span class=\"comment\"># 查询最近60分钟oplog</span></span><br><span class=\"line\">db.oplog.rs.find(&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;ts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;<span class=\"variable\">$gt</span>&quot;</span>: Timestamp(Math.floor(new Date().getTime() / 1000) - 60*60, 1)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;).<span class=\"built_in\">sort</span>(&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;<span class=\"variable\">$natural</span>&quot;</span>: -1</span><br><span class=\"line\">&#125;).<span class=\"built_in\">limit</span>(10)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    op: <span class=\"string\">&#x27;u&#x27;</span>,</span><br><span class=\"line\">    ns: <span class=\"string\">&#x27;config.system.sessions&#x27;</span>,</span><br><span class=\"line\">    ui: UUID(<span class=\"string\">&#x27;4f90005d-a546-4d59-971d-7954c3acd0f8&#x27;</span>),</span><br><span class=\"line\">    o: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;$v&#x27;</span>: 2,</span><br><span class=\"line\">      diff: &#123; u: &#123; lastUse: ISODate(<span class=\"string\">&#x27;2024-04-02T08:31:10.148Z&#x27;</span>) &#125; &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    o2: &#123;</span><br><span class=\"line\">      _id: &#123;</span><br><span class=\"line\">        <span class=\"built_in\">id</span>: UUID(<span class=\"string\">&#x27;3f881052-ac21-4677-816c-33934322fbd6&#x27;</span>),</span><br><span class=\"line\">        uid: Binary.createFromBase64(<span class=\"string\">&#x27;eOZyqfHfiVpfviPDWgAERmzNFnUp8UBdlWKN50Fv9fo=&#x27;</span>, 0)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    ts: Timestamp(&#123; t: 1712046670, i: 1 &#125;),</span><br><span class=\"line\">    t: Long(<span class=\"string\">&#x27;6&#x27;</span>),</span><br><span class=\"line\">    v: Long(<span class=\"string\">&#x27;2&#x27;</span>),</span><br><span class=\"line\">    wall: ISODate(<span class=\"string\">&#x27;2024-04-02T08:31:10.148Z&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ts： 操作时间，当前timestamp + 计数器，计数器每秒都被重置</span><br><span class=\"line\">v：oplog版本信息</span><br><span class=\"line\">op：操作类型:</span><br><span class=\"line\">    i：插⼊操作</span><br><span class=\"line\">    u：更新操作</span><br><span class=\"line\">    d：删除操作</span><br><span class=\"line\">    c：执行命令（如createDatabase，dropDatabase）</span><br><span class=\"line\">    n：空操作，特殊用途</span><br><span class=\"line\">ns：操作针对的集合</span><br><span class=\"line\">o：操作内容</span><br><span class=\"line\">o2：操作查询条件，仅update操作包含该字段</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>oplog集合的大小默认为<code>min(磁盘可用空间*5%，50GB)</code>，可以通过如下命令修改</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将复制集成员的oplog大小修改为1G，这里单位是M</span></span><br><span class=\"line\">&gt; db.adminCommand(&#123;replSetResizeOplog: 1, size: 1024&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 查看oplog大小</span></span><br><span class=\"line\">&gt; use <span class=\"built_in\">local</span></span><br><span class=\"line\">&gt; db.oplog.rs.stats().maxSize/1024/1024</span><br><span class=\"line\">1024</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里要注意每个节点的oplog大小都需要单独的配置，并且必须一致，否则有可能会出现同步失败的情况。</p>\n</li>\n<li class=\"lvl-2\">\n<p>查看当前节点的oplog的状态</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0 [primary] <span class=\"built_in\">test</span>&gt; rs.printReplicationInfo()</span><br><span class=\"line\">actual oplog size</span><br><span class=\"line\"><span class=\"string\">&#x27;1024 MB&#x27;</span></span><br><span class=\"line\">---</span><br><span class=\"line\">configured oplog size</span><br><span class=\"line\"><span class=\"string\">&#x27;1024 MB&#x27;</span></span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"built_in\">log</span> length start to end</span><br><span class=\"line\"><span class=\"string\">&#x27;112923 secs (31.37 hrs)&#x27;</span></span><br><span class=\"line\">---</span><br><span class=\"line\">oplog first event time</span><br><span class=\"line\"><span class=\"string\">&#x27;Mon Apr 01 2024 02:47:04 GMT+0000 (Coordinated Universal Time)&#x27;</span></span><br><span class=\"line\">---</span><br><span class=\"line\">oplog last event time</span><br><span class=\"line\"><span class=\"string\">&#x27;Tue Apr 02 2024 10:09:07 GMT+0000 (Coordinated Universal Time)&#x27;</span></span><br><span class=\"line\">---</span><br><span class=\"line\">now</span><br><span class=\"line\"><span class=\"string\">&#x27;Tue Apr 02 2024 10:09:08 GMT+0000 (Coordinated Universal Time)&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">actual oplog size：表示实际使用的 oplog 大小。Oplog 是一个 circurlar buffer，用于存储主节点上的操作日志。这个属性指示了 oplog 的当前大小。在示例中，oplog 大小为 <span class=\"string\">&#x27;1024 MB&#x27;</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">configured oplog size：表示配置的 oplog 大小。这是在配置复制集时指定的 oplog 大小。在示例中，配置的 oplog 大小也是 <span class=\"string\">&#x27;1024 MB&#x27;</span>，说明实际 oplog 大小与配置的 oplog 大小相匹配。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">log</span> length start to end：表示 oplog 的记录长度，从开始到结束的时间跨度。在示例中，oplog 记录了 <span class=\"string\">&#x27;112923 secs (31.37 hrs)&#x27;</span>，表示从 oplog 开始记录到结束的时间跨度为约 31.37 小时。</span><br><span class=\"line\"></span><br><span class=\"line\">oplog first event time：表示 oplog 记录的第一个事件的时间戳。在示例中，第一个事件的时间为 <span class=\"string\">&#x27;Mon Apr 01 2024 02:47:04 GMT+0000 (Coordinated Universal Time)&#x27;</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">oplog last event time：表示 oplog 记录的最后一个事件的时间戳。在示例中，最后一个事件的时间为 <span class=\"string\">&#x27;Tue Apr 02 2024 10:09:07 GMT+0000 (Coordinated Universal Time)&#x27;</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">now：表示当前时间。在示例中，当前时间为 <span class=\"string\">&#x27;Tue Apr 02 2024 10:09:08 GMT+0000 (Coordinated Universal Time)&#x27;</span>。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>以从节点视角查看oplog复制状态</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0 [primary] <span class=\"built_in\">local</span>&gt; rs.printSecondaryReplicationInfo()</span><br><span class=\"line\"><span class=\"built_in\">source</span>: 10.1.2.142:27017</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  syncedTo: <span class=\"string\">&#x27;Tue Apr 02 2024 10:10:07 GMT+0000 (Coordinated Universal Time)&#x27;</span>,</span><br><span class=\"line\">  replLag: <span class=\"string\">&#x27;0 secs (0 hrs) behind the primary &#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"built_in\">source</span>: 10.1.2.41:27017</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  syncedTo: <span class=\"string\">&#x27;Tue Apr 02 2024 10:10:07 GMT+0000 (Coordinated Universal Time)&#x27;</span>,</span><br><span class=\"line\">  replLag: <span class=\"string\">&#x27;0 secs (0 hrs) behind the primary &#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">source</span>：从节点的主机名和端口号，即复制数据的来源节点。</span><br><span class=\"line\"></span><br><span class=\"line\">syncedTo：表示从节点已经复制到的最新操作的时间戳。它指示了从节点上数据的同步程度，即从节点已经复制了到主节点的哪个时间点的数据。在示例中，两个从节点的 syncedTo 时间戳都是 <span class=\"string\">&#x27;Tue Apr 02 2024 10:10:07 GMT+0000 (Coordinated Universal Time)&#x27;</span>，表示它们都已经与主节点同步到了相同的时间点。</span><br><span class=\"line\"></span><br><span class=\"line\">replLag：表示从节点与主节点之间的复制延迟。它显示了从节点当前落后于主节点的时间量，以秒和小时为单位。在示例中，两个从节点的 replLag 都是 <span class=\"string\">&#x27;0 secs (0 hrs) behind the primary&#x27;</span>，表示它们与主节点保持实时同步，没有任何复制延迟。</span><br></pre></td></tr></table></figure>\n<h2 id=\"既然oplog的大小有限制，新的数据会覆盖旧的数据，那么新加入的节点如何全量同步数据呢？\">既然oplog的大小有限制，新的数据会覆盖旧的数据，那么新加入的节点如何全量同步数据呢？</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>当MongoDB的从库节点需要进行数据同步时，会执行以下步骤：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-4\">初始同步： 当一个新节点加入到副本集中时，它会执行初始同步以获取集合中的所有数据。初始同步会复制所有数据库的所有数据，包括系统数据库。之后，新节点会开始从oplog里获取更改历史，应用这些更改历史到数据，以保证与其他从库节点一致。注意，初始同步中的数据包括在新加入节点之前的数据以及新节点加入之后其他节点产生的新数据。</li>\n<li class=\"lvl-4\">oplog落后： 如果从库在初始同步执行期间不能及时获取oplog（例如，oplog的数据超出了大小限制并被覆盖，或者初次同步时间过长），新节点需要重新进行初始同步操作。</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>这些步骤确保了MongoDB副本集的数据在所有节点间的一致性，尽管oplog有大小限制并且旧的内容会被新的操作覆盖。</p>\n</li>\n</ul>\n<h2 id=\"复制集相关操作\">复制集相关操作</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://www.mongodb.com/docs/manual/reference/method/js-replication/\">官方文档</a></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rs.add(“hostname:port”)</td>\n<td>为复制集新增节点</td>\n</tr>\n<tr>\n<td>rs.addArb(“hostname:port”)</td>\n<td>为复制集新增一个 arbiters</td>\n</tr>\n<tr>\n<td>rs.conf()</td>\n<td>返回复制集配置信息</td>\n</tr>\n<tr>\n<td>rs.config()</td>\n<td>同 rs.conf()</td>\n</tr>\n<tr>\n<td>rs.freeze(3600)</td>\n<td>防止当前节点在一段时间内选举成为主节点，如这里是3600秒，则当前节点在3600秒内不会选举成为主节点</td>\n</tr>\n<tr>\n<td>rs.help()</td>\n<td>返回 replica set 的命令帮助</td>\n</tr>\n<tr>\n<td>rs.initiate()</td>\n<td>初始化一个新的复制集</td>\n</tr>\n<tr>\n<td>rs.printReplicationInfo()</td>\n<td>以当前节点的视角返回复制的状态报告</td>\n</tr>\n<tr>\n<td>rs.printSecondaryReplicationInfo()</td>\n<td>以从节点的视角返回复制状态报告</td>\n</tr>\n<tr>\n<td>rs.reconfig()</td>\n<td>通过重新应用复制集配置来为复制集更新配置</td>\n</tr>\n<tr>\n<td>rs.remove(“hostname:port”)</td>\n<td>从复制集中移除一个节点</td>\n</tr>\n<tr>\n<td>rs.secondaryOk()</td>\n<td>为当前的连接设置从节点可读，该方法已经过时了，使用 db.getMongo().setReadPref() 代替</td>\n</tr>\n<tr>\n<td>rs.status()</td>\n<td>返回复制集状态信息</td>\n</tr>\n<tr>\n<td>rs.stepDown()</td>\n<td>让当前的 primary 变为从节点并触发新一轮的主节点选举</td>\n</tr>\n<tr>\n<td>rs.syncFrom(“hostname:port”)</td>\n<td>设置复制集节点从哪个节点处同步数据，将会覆盖默认选取逻辑</td>\n</tr>\n<tr>\n<td>rs.reconfigForPSASet()</td>\n<td>在主-从-仲裁器（PSA）副本集或正在更改为PSA架构的副本集上安全地执行一些重新配置更改。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"移除节点\">移除节点</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0 [primary] <span class=\"built_in\">local</span>&gt; rs.remove(<span class=\"string\">&quot;10.1.2.41:27017&quot;</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ok: 1,</span><br><span class=\"line\">  <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class=\"line\">    clusterTime: Timestamp(&#123; t: 1712049022, i: 1 &#125;),</span><br><span class=\"line\">    signature: &#123;</span><br><span class=\"line\">      <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;Qg3Ymzp3k+hhzaDo3jZQimc4WCI=&#x27;</span>, 0),</span><br><span class=\"line\">      keyId: Long(<span class=\"string\">&#x27;7352724745051176965&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  operationTime: Timestamp(&#123; t: 1712049022, i: 1 &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加仲裁节点\">添加仲裁节点</h3>\n<p><em><strong>当集群中的节点数<code>&gt;=3</code>时，无论是添加仲裁节点还是从节点都没有问题。</strong></em></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>上面删除了集群中的一个节点，此时集群中的节点说是2(一主一从)，此时如果主发生故障集群就没办法工作了，此时我们可以为其添加一个仲裁节点(只投票不存储数据)。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加仲裁节点，但是此时添加仲裁节点会报错</span></span><br><span class=\"line\">rs0 [primary] <span class=\"built_in\">local</span>&gt; rs.addArb(<span class=\"string\">&quot;10.1.2.41:27017&quot;</span>)</span><br><span class=\"line\">MongoServerError[NewReplicaSetConfigurationIncompatible]: Reconfig attempted to install a config that would change the implicit default write concern. Use the setDefaultRWConcern <span class=\"built_in\">command</span> to <span class=\"built_in\">set</span> a cluster-wide write concern and try the reconfig again.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 报错原因：由于默认的写关注为 majority，而当前节点中只有2个节点，没有办法确认“大多数”是多少了，所以我们需要修改写关注的设置</span></span><br><span class=\"line\"><span class=\"comment\"># 查询默认的读写关注</span></span><br><span class=\"line\">rs0 [primary] admin&gt; db.adminCommand(&#123;<span class=\"string\">&quot;getDefaultRWConcern&quot;</span> : 1&#125;)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  defaultReadConcern: &#123; level: <span class=\"string\">&#x27;local&#x27;</span> &#125;,</span><br><span class=\"line\">  defaultWriteConcern: &#123; w: <span class=\"string\">&#x27;majority&#x27;</span>, wtimeout: 0 &#125;,</span><br><span class=\"line\">  updateOpTime: Timestamp(&#123; t: 1712050437, i: 1 &#125;),</span><br><span class=\"line\">  updateWallClockTime: ISODate(<span class=\"string\">&#x27;2024-04-02T09:15:04.462Z&#x27;</span>),</span><br><span class=\"line\">  defaultWriteConcernSource: <span class=\"string\">&#x27;global&#x27;</span>,</span><br><span class=\"line\">  defaultReadConcernSource: <span class=\"string\">&#x27;implicit&#x27;</span>,</span><br><span class=\"line\">  localUpdateWallClockTime: ISODate(<span class=\"string\">&#x27;2024-04-02T09:15:04.462Z&#x27;</span>),</span><br><span class=\"line\">  ok: 1,</span><br><span class=\"line\">  <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class=\"line\">    clusterTime: Timestamp(&#123; t: 1712109448, i: 1 &#125;),</span><br><span class=\"line\">    signature: &#123;</span><br><span class=\"line\">      <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;oUiR9xdXN4mzQqdz9IXHGdCmNto=&#x27;</span>, 0),</span><br><span class=\"line\">      keyId: Long(<span class=\"string\">&#x27;7352724745051176965&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  operationTime: Timestamp(&#123; t: 1712109448, i: 1 &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改默认写关注 defaultWriteConcern</span></span><br><span class=\"line\"><span class=\"comment\"># setDefaultRWConcern：用于指定设置默认读写关注级别（RW Concern）的操作。值为 1 表示执行设置操作。</span></span><br><span class=\"line\"><span class=\"comment\"># defaultWriteConcern：用于指定默认的写入关注级别。在这个例子中，写入关注级别被设置为 &#123; &quot;w&quot; : 2 &#125;，意味着在写入数据时，MongoDB 驱动程序会等待至少两个节点确认写入成功后才返回成功。其实这里设置为1也可以，表示写入主节点就返回成功。</span></span><br><span class=\"line\">rs0 [primary] <span class=\"built_in\">local</span>&gt; db.adminCommand( &#123;<span class=\"string\">&quot;setDefaultRWConcern&quot;</span> : 1, <span class=\"string\">&quot;defaultWriteConcern&quot;</span> : &#123; <span class=\"string\">&quot;w&quot;</span> : 2 &#125; &#125; )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  defaultReadConcern: &#123; level: <span class=\"string\">&#x27;local&#x27;</span> &#125;,</span><br><span class=\"line\">  defaultWriteConcern: &#123; w: 2, wtimeout: 0 &#125;,</span><br><span class=\"line\">  updateOpTime: Timestamp(&#123; t: 1712049370, i: 1 &#125;),</span><br><span class=\"line\">  updateWallClockTime: ISODate(<span class=\"string\">&#x27;2024-04-02T09:16:22.715Z&#x27;</span>),</span><br><span class=\"line\">  defaultWriteConcernSource: <span class=\"string\">&#x27;global&#x27;</span>,</span><br><span class=\"line\">  defaultReadConcernSource: <span class=\"string\">&#x27;implicit&#x27;</span>,</span><br><span class=\"line\">  localUpdateWallClockTime: ISODate(<span class=\"string\">&#x27;2024-04-02T09:16:22.726Z&#x27;</span>),</span><br><span class=\"line\">  ok: 1,</span><br><span class=\"line\">  <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class=\"line\">    clusterTime: Timestamp(&#123; t: 1712049382, i: 2 &#125;),</span><br><span class=\"line\">    signature: &#123;</span><br><span class=\"line\">      <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;04nzjl47CMumvguEzUq7RnY55+s=&#x27;</span>, 0),</span><br><span class=\"line\">      keyId: Long(<span class=\"string\">&#x27;7352724745051176965&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  operationTime: Timestamp(&#123; t: 1712049382, i: 2 &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 再次添加仲裁节点成功</span></span><br><span class=\"line\">rs0 [primary] <span class=\"built_in\">local</span>&gt; rs.addArb(<span class=\"string\">&quot;10.1.2.41:27017&quot;</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ok: 1,</span><br><span class=\"line\">  <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class=\"line\">    clusterTime: Timestamp(&#123; t: 1712049480, i: 1 &#125;),</span><br><span class=\"line\">    signature: &#123;</span><br><span class=\"line\">      <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;4q9s6mvT0boa6Q+vjKms8vnTR6Y=&#x27;</span>, 0),</span><br><span class=\"line\">      keyId: Long(<span class=\"string\">&#x27;7352724745051176965&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  operationTime: Timestamp(&#123; t: 1712049480, i: 1 &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>此时关闭主节点，就会看到另一个从节点成为主节点了</p>\n</li>\n</ul>\n<h3 id=\"添加新的节点\">添加新的节点</h3>\n<p><em><strong>当集群中的节点数<code>&gt;=3</code>时，无论是添加仲裁节点还是从节点都没有问题。</strong></em></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>如果当前集群中有两个节点(一主一从)，我们也可以不添加仲裁节点，而是直接添加一个新的从节点</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0 [primary] <span class=\"built_in\">test</span>&gt; rs.add(<span class=\"string\">&quot;10.1.2.41:27017&quot;</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ok: 1,</span><br><span class=\"line\">  <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class=\"line\">    clusterTime: Timestamp(&#123; t: 1712051880, i: 1 &#125;),</span><br><span class=\"line\">    signature: &#123;</span><br><span class=\"line\">      <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;DuuorhNH4MWqa4DHCifPzxcMN3I=&#x27;</span>, 0),</span><br><span class=\"line\">      keyId: Long(<span class=\"string\">&#x27;7352724745051176965&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  operationTime: Timestamp(&#123; t: 1712051880, i: 1 &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>当集群中只有一个主节点和一个仲裁节点时，此时若直接添加新的节点会报错</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0 [primary] <span class=\"built_in\">local</span>&gt; rs.add(<span class=\"string\">&quot;10.1.2.142:27017&quot;</span>)</span><br><span class=\"line\">MongoServerError[NewReplicaSetConfigurationIncompatible]: Rejecting reconfig <span class=\"built_in\">where</span> the new config has a PSA topology and the secondary is electable, but the old config contains only one writable node. Refer to https://docs.mongodb.com/manual/reference/method/rs.reconfigForPSASet/ <span class=\"keyword\">for</span> next steps on reconfiguring a PSA <span class=\"built_in\">set</span>.</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>根据给出的网址的提示，执行以下操作</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取当前配置</span></span><br><span class=\"line\">rs0 [primary] <span class=\"built_in\">test</span>&gt; cfg = rs.conf();</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  _id: <span class=\"string\">&#x27;rs0&#x27;</span>,</span><br><span class=\"line\">  version: 7,</span><br><span class=\"line\">  term: 8,</span><br><span class=\"line\">  members: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      _id: 0,</span><br><span class=\"line\">      host: <span class=\"string\">&#x27;10.1.2.26:27017&#x27;</span>,</span><br><span class=\"line\">      arbiterOnly: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      buildIndexes: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      priority: 1,</span><br><span class=\"line\">      tags: &#123; purpose: <span class=\"string\">&#x27;online&#x27;</span> &#125;,</span><br><span class=\"line\">      secondaryDelaySecs: Long(<span class=\"string\">&#x27;0&#x27;</span>),</span><br><span class=\"line\">      votes: 1</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      _id: 2,</span><br><span class=\"line\">      host: <span class=\"string\">&#x27;10.1.2.41:27017&#x27;</span>,</span><br><span class=\"line\">      arbiterOnly: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      buildIndexes: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      priority: 0,</span><br><span class=\"line\">      tags: &#123;&#125;,</span><br><span class=\"line\">      secondaryDelaySecs: Long(<span class=\"string\">&#x27;0&#x27;</span>),</span><br><span class=\"line\">      votes: 1</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  protocolVersion: Long(<span class=\"string\">&#x27;1&#x27;</span>),</span><br><span class=\"line\">  writeConcernMajorityJournalDefault: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  settings: &#123;</span><br><span class=\"line\">    chainingAllowed: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    heartbeatIntervalMillis: 2000,</span><br><span class=\"line\">    heartbeatTimeoutSecs: 10,</span><br><span class=\"line\">    electionTimeoutMillis: 10000,</span><br><span class=\"line\">    catchUpTimeoutMillis: -1,</span><br><span class=\"line\">    catchUpTakeoverDelayMillis: 30000,</span><br><span class=\"line\">    getLastErrorModes: &#123;&#125;,</span><br><span class=\"line\">    getLastErrorDefaults: &#123; w: 1, wtimeout: 0 &#125;,</span><br><span class=\"line\">    replicaSetId: ObjectId(<span class=\"string\">&#x27;660a20282e7a827807cac803&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改配置，增加新的节点信息</span></span><br><span class=\"line\">rs0 [primary] <span class=\"built_in\">test</span>&gt; cfg[<span class=\"string\">&quot;members&quot;</span>] = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      _id: 0,</span><br><span class=\"line\">      host: <span class=\"string\">&#x27;10.1.2.26:27017&#x27;</span>,</span><br><span class=\"line\">      arbiterOnly: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      buildIndexes: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      priority: 1,</span><br><span class=\"line\">      tags: &#123; purpose: <span class=\"string\">&#x27;online&#x27;</span> &#125;,</span><br><span class=\"line\">      secondaryDelaySecs: Long(<span class=\"string\">&#x27;0&#x27;</span>),</span><br><span class=\"line\">      votes: 1</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      _id: 1,</span><br><span class=\"line\">      host: <span class=\"string\">&#x27;10.1.2.142:27017&#x27;</span>,   <span class=\"comment\"># 新的节点</span></span><br><span class=\"line\">      arbiterOnly: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      buildIndexes: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      priority: 1,</span><br><span class=\"line\">      tags: &#123; purpose: <span class=\"string\">&#x27;online&#x27;</span> &#125;,</span><br><span class=\"line\">      secondaryDelaySecs: Long(<span class=\"string\">&#x27;0&#x27;</span>),</span><br><span class=\"line\">      votes: 1</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      _id: 2,</span><br><span class=\"line\">      host: <span class=\"string\">&#x27;10.1.2.41:27017&#x27;</span>,</span><br><span class=\"line\">      arbiterOnly: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      buildIndexes: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      hidden: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      priority: 0,</span><br><span class=\"line\">      tags: &#123;&#125;,</span><br><span class=\"line\">      secondaryDelaySecs: Long(<span class=\"string\">&#x27;0&#x27;</span>),</span><br><span class=\"line\">      votes: 1</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行配置</span></span><br><span class=\"line\">rs0 [primary] <span class=\"built_in\">test</span>&gt; rs.reconfigForPSASet(1, cfg);</span><br><span class=\"line\">Running first reconfig to give member at index 1 &#123; votes: 1, priority: 0 &#125;</span><br><span class=\"line\">Running second reconfig to give member at index 1 &#123; priority: 1 &#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  ok: 1,</span><br><span class=\"line\">  <span class=\"string\">&#x27;$clusterTime&#x27;</span>: &#123;</span><br><span class=\"line\">    clusterTime: Timestamp(&#123; t: 1712051518, i: 2 &#125;),</span><br><span class=\"line\">    signature: &#123;</span><br><span class=\"line\">      <span class=\"built_in\">hash</span>: Binary.createFromBase64(<span class=\"string\">&#x27;+tgYZKeeGP0KGt3YVpDCAjW3xTc=&#x27;</span>, 0),</span><br><span class=\"line\">      keyId: Long(<span class=\"string\">&#x27;7352724745051176965&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  operationTime: Timestamp(&#123; t: 1712051518, i: 2 &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看新节点的状态</span></span><br><span class=\"line\">rs0 [primary] <span class=\"built_in\">test</span>&gt; rs.status()</span><br><span class=\"line\">………………</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">      _id: 1,</span><br><span class=\"line\">      name: <span class=\"string\">&#x27;10.1.2.142:27017&#x27;</span>,</span><br><span class=\"line\">      health: 1,</span><br><span class=\"line\">      state: 2,</span><br><span class=\"line\">      stateStr: <span class=\"string\">&#x27;SECONDARY&#x27;</span>,</span><br><span class=\"line\">      <span class=\"built_in\">uptime</span>: 87,</span><br><span class=\"line\">      optime: &#123; ts: Timestamp(&#123; t: 1712051597, i: 1 &#125;), t: Long(<span class=\"string\">&#x27;8&#x27;</span>) &#125;,</span><br><span class=\"line\">      optimeDurable: &#123; ts: Timestamp(&#123; t: 1712051597, i: 1 &#125;), t: Long(<span class=\"string\">&#x27;8&#x27;</span>) &#125;,</span><br><span class=\"line\">      optimeDate: ISODate(<span class=\"string\">&#x27;2024-04-02T09:53:17.000Z&#x27;</span>),</span><br><span class=\"line\">      optimeDurableDate: ISODate(<span class=\"string\">&#x27;2024-04-02T09:53:17.000Z&#x27;</span>),</span><br><span class=\"line\">      lastAppliedWallTime: ISODate(<span class=\"string\">&#x27;2024-04-02T09:53:17.058Z&#x27;</span>),</span><br><span class=\"line\">      lastDurableWallTime: ISODate(<span class=\"string\">&#x27;2024-04-02T09:53:17.058Z&#x27;</span>),</span><br><span class=\"line\">      lastHeartbeat: ISODate(<span class=\"string\">&#x27;2024-04-02T09:53:24.535Z&#x27;</span>),</span><br><span class=\"line\">      lastHeartbeatRecv: ISODate(<span class=\"string\">&#x27;2024-04-02T09:53:24.535Z&#x27;</span>),</span><br><span class=\"line\">      pingMs: Long(<span class=\"string\">&#x27;0&#x27;</span>),</span><br><span class=\"line\">      lastHeartbeatMessage: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">      syncSourceHost: <span class=\"string\">&#x27;10.1.2.26:27017&#x27;</span>,</span><br><span class=\"line\">      syncSourceId: 0,</span><br><span class=\"line\">      infoMessage: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">      configVersion: 10,</span><br><span class=\"line\">      configTerm: 8</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">………………</span><br></pre></td></tr></table></figure>\n<h2 id=\"故障转移\">故障转移</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>集群组建完成后，集群内的各个节点会开启心跳响应定时器，默认每隔2秒<code>(heartbeatIntervalMillis)</code>会向其它成员发起心跳。</p>\n</li>\n<li class=\"lvl-2\">\n<p>同时各成员节点还会启动一个选举超时检测定时器，默认每隔10秒<code>(electionTimeoutMillis)</code>会发起一轮<code>选举调度</code>。</p>\n</li>\n<li class=\"lvl-2\">\n<p>当主节点心跳响应成功，则当前节点就会取消上一次的<code>选举调度</code>，即会重置选举超时检测定时器的倒计时</p>\n</li>\n<li class=\"lvl-2\">\n<p>若主节点心跳响应失败，并且在<code>选举超时检测</code>的时间内仍然没有响应成功，则当前节点就会发起一轮<code>选举调度</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>MongoDB的复制集选举使用<a href=\"https://raft.github.io/\">Raft算法</a>来实现，选举成功的必要条件是大多数投票节点存活。简单来说就是如果超过半数的节点都给我投票了，那么我就会成为主节点。</p>\n</li>\n</ul>\n<h3 id=\"为什么推荐集群连接的方式？\">为什么推荐集群连接的方式？</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>考虑这样的场景，如果我连接主节点并且插入10000条说，若此时主节点宕机，则客户端会立刻停止操作。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 只连接主节点</span></span><br><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017/test?authSource=admin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行插入</span></span><br><span class=\"line\">rs0 [direct: primary] <span class=\"built_in\">test</span>&gt; <span class=\"keyword\">for</span>(i=0;i&lt;10000;i++)&#123;db.emp.insertOne(&#123;name:<span class=\"string\">&quot;test&quot;</span>+i&#125;)&#125;</span><br><span class=\"line\"><span class=\"comment\"># 此时关闭主节点的mongo服务，则客户端会立刻给出报错信息</span></span><br><span class=\"line\">MongoServerError[NotWritablePrimary]: not primary</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>若连接采用集群的方式连接，则不会中断操作，其原因就是集群连接方式会自动完成故障转移</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 插入操作没有被中断</span></span><br><span class=\"line\">rs0 [primary] <span class=\"built_in\">test</span>&gt; <span class=\"keyword\">for</span>(i=0;i&lt;10000;i++)&#123;db.emp.insertOne(&#123;name:<span class=\"string\">&quot;test&quot;</span>+i&#125;)&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  acknowledged: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  insertedId: ObjectId(<span class=\"string\">&#x27;660cce829918b823661879c6&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 查询结果正确</span></span><br><span class=\"line\">rs0 [primary] <span class=\"built_in\">test</span>&gt; db.emp.countDocuments()</span><br><span class=\"line\">10000</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里有一点需要注意，当你创建集群时使用的是各个节点的内网ip地址，则客户端必须可以访问这些内网ip才能通过集群连接，否则会出现连接失败的情况。因为通过集群连接的方式，实际上是会先在集群内部判断出主节点的ip地址返回给客户端，然后客户端再通过这个主节点ip访问主节点。</p>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">在复制集发生主备节点切换的情况下，会出现短暂的无主节点阶段，此时无法接受业务写操作。</li>\n<li class=\"lvl-2\">早期的版本中需要添加<code>retryWrites</code>参数，现在已经默认开启了</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongosh <span class=\"string\">&quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&amp;retryWrites=true&quot;</span></span><br></pre></td></tr></table></figure>\n</div>\n<h2 id=\"SpringBoot集成MongoDB集群\">SpringBoot集成MongoDB集群</h2>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">data:</span></span><br><span class=\"line\">    <span class=\"attr\">mongodb:</span></span><br><span class=\"line\">      <span class=\"attr\">uri:</span> <span class=\"string\">mongodb://user:password@127.0.0.1:27040,127.0.0.1:27041,127.0.0.1:27042/mytest?authSource=admin&amp;readPreference=primaryPreferred</span></span><br></pre></td></tr></table></figure>\n","content_text":"摘要 本文介绍Linux下MongoDB7.0复制集的安装和使用 MongoDB官方文档 本文基于CentOS8(x86_64) Mongodb分片集群搭建参看MongoDB 分片集群搭建，虽然是基于4.4版本的，但是安装方式差别不大，只是配置文件中个别的属性名称发生了变化。 复制集节点类型 一个复制集最多支持50个节点，且做多只能有7个节点参与投票，节点类型分为Primary、Secondary与Arbiter。 Primary：主节点，其接收所有的写请求，然后把修改同步到所有 Secondary 节点。一个复制集只能有一个主节点，当主节点挂掉后，其他节点会重新选举出来一个主节点。 Secondary：备节点，与主节点保持同样的数据集。当主节点挂掉时，参与竞选主节点。分为以下三个不同类型： Hidden = false：正常的只读节点，是否可选为主，是否可投票，取决于 Priority，Vote 的值； Hidden = true：隐藏节点，对客户端不可见， 可以参与选举，但是 Priority 必须为 0，即不能被提升为主。 由于隐藏节点不会接受业务访问，因此可通过隐藏节点做一些数据备份、离线计算的任务，这并不会影响整个复制集。 Delayed ：延迟节点，必须同时具备隐藏节点和Priority=0的特性，会延迟一定的时间（secondaryDelaySecs 配置决定）从上游复制增量，常用于快速回滚场景。 Arbiter：仲裁节点，只用于参与选举投票，本身不承载任何数据，只作为投票角色。比如你部署了2个节点的复制集，1个 Primary，1个Secondary，任意节点宕机，复制集将不能提供服务了（无法选出Primary），这时可以给复制集添加⼀个 Arbiter节点，即使有节点宕机，仍能选出Primary。 Arbiter本身不存储数据，是非常轻量级的服务，当复制集成员为偶数时，最好加入⼀个Arbiter节点，以提升复制集可用性。 搭建基于3台机器的复制集 12310.1.2.2610.1.2.14210.1.2.41 mongod.conf配置文件，需要创建好相关目录 123456789101112131415systemLog: destination: file path: /mongodb/log/mongodb.log logAppend: truestorage: dbPath: /mongodb/datanet: bindIp: 0.0.0.0 port: 27017processManagement: fork: truereplication: replSetName: rs0security: keyFile: /mongodb/mongo.key 创建key文件 123openssl rand -base64 756 &gt; /mongodb/mongo.key# 修改权限chmod 600 /mongodb/mongo.key 分别启动3个节点 1mongod -f /mongodb/mongo.conf 初始化 登录任意节点 1mongosh 10.1.2.26:27017 初始化复制集 123456789101112131415# 必须切换到admin数据库test&gt; use adminswitched to db admin# 初始化admin&gt; rs.initiate( &#123; _id: &quot;rs0&quot;, members: [ &#123; _id : 0, host : &quot;10.1.2.26&quot; &#125;, &#123; _id : 1, host : &quot;10.1.2.142&quot; &#125;, &#123; _id : 2, host : &quot;10.1.2.41&quot; &#125; ] &#125;); 查看谁是主节点 1234567891011121314151617181920212223242526272829303132333435363738394041# 查看谁是主节点，可以看到此时主节点是 10.1.2.26&gt; rs.isMaster()&#123; topologyVersion: &#123; # 拓扑版本，包含进程 ID 和计数器。 processId: ObjectId(&#x27;660a1cdf2e7a827807cac6f9&#x27;), # 进程 ID counter: Long(&#x27;6&#x27;) # 计数器，用于标识拓扑版本 &#125;, hosts: [ &#x27;10.1.2.26:27017&#x27;, &#x27;10.1.2.142:27017&#x27;, &#x27;10.1.2.41:27017&#x27; ], # 复制集中所有成员的主机和端口号列表。 setName: &#x27;rs0&#x27;, # 复制集的名称 setVersion: 1, # 复制集的版本号 ismaster: true, # 当前节点是否为主节点 secondary: false, # 当前节点是否为从节点 primary: &#x27;10.1.2.26:27017&#x27;, # 主节点的主机名和端口号 me: &#x27;10.1.2.26:27017&#x27;, # 当前节点的主机名和端口号 electionId: ObjectId(&#x27;7fffffff0000000000000001&#x27;), # 选举 ID lastWrite: &#123; # 最后一次写入操作的时间信息 opTime: &#123; ts: Timestamp(&#123; t: 1711939636, i: 7 &#125;), t: Long(&#x27;1&#x27;) &#125;, # 操作时间戳 lastWriteDate: ISODate(&#x27;2024-04-01T02:47:16.000Z&#x27;), # 最后一次写入操作的时间 majorityOpTime: &#123; ts: Timestamp(&#123; t: 1711939636, i: 7 &#125;), t: Long(&#x27;1&#x27;) &#125;, # 大多数写操作的时间戳 majorityWriteDate: ISODate(&#x27;2024-04-01T02:47:16.000Z&#x27;) # 大多数写操作的时间 &#125;, maxBsonObjectSize: 16777216, # 最大 BSON 对象大小 maxMessageSizeBytes: 48000000, # 最大消息大小(以字节为单位）) maxWriteBatchSize: 100000, # 最大写批次大小 localTime: ISODate(&#x27;2024-04-01T02:47:20.408Z&#x27;), # 本地时间 logicalSessionTimeoutMinutes: 30, # 登录超时时间(以分钟为单位) connectionId: 7, # 连接 ID minWireVersion: 0, # 最小Wire版本 maxWireVersion: 21, # 最大Wire版本 readOnly: false, # 当前节点是否为只读节点 ok: 1, # 操作是否成功 &#x27;$clusterTime&#x27;: &#123; # 集群时间 clusterTime: Timestamp(&#123; t: 1711939636, i: 7 &#125;), # 集群时间戳 signature: &#123; # 签名信息 hash: Binary.createFromBase64(&#x27;OOXSWapWStZk2n4cyJ7jdBS87do=&#x27;, 0), # 签名哈希 keyId: Long(&#x27;7352724745051176965&#x27;) # 密钥 ID &#125; &#125;, operationTime: Timestamp(&#123; t: 1711939636, i: 7 &#125;), # 操作时间戳 isWritablePrimary: true # 当前主节点是否可写&#125; 查看集群状态 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273&gt; rs.status()# 这里只列出节点的信息…………………………members: [ # 复制集成员列表 &#123; _id: 0, # 节点 ID name: &#x27;10.1.2.26:27017&#x27;, # 节点主机名和端口号 health: 1, # 节点健康状态，这里是 1，表示健康 state: 1, # 节点状态，这里是 1，表示主节点 stateStr: &#x27;PRIMARY&#x27;, # 节点状态字符串 uptime: 88366, # 节点运行时间 optime: &#123; ts: Timestamp(&#123; t: 1712044133, i: 1 &#125;), t: Long(&#x27;5&#x27;) &#125;, # 节点操作时间戳 optimeDate: ISODate(&#x27;2024-04-02T07:48:53.000Z&#x27;), # 节点操作时间 lastAppliedWallTime: ISODate(&#x27;2024-04-02T07:48:53.125Z&#x27;), # 节点最后应用时间 lastDurableWallTime: ISODate(&#x27;2024-04-02T07:48:53.125Z&#x27;), # 节点最后持久化时间 syncSourceHost: &#x27;&#x27;, # 同步源主机名 syncSourceId: -1, # 同步源节点 ID infoMessage: &#x27;Could not find member to sync from&#x27;, # 节点信息消息 electionTime: Timestamp(&#123; t: 1712044063, i: 1 &#125;), # 选举时间戳 electionDate: ISODate(&#x27;2024-04-02T07:47:43.000Z&#x27;), # 选举时间 configVersion: 4, # 配置版本 configTerm: 5, # 选举任期 self: true, # 是否为主节点 lastHeartbeatMessage: &#x27;&#x27; # 节点心跳消息 &#125;, &#123; _id: 1, name: &#x27;10.1.2.142:27017&#x27;, health: 1, state: 2, # 节点状态，这里是 2，表示从节点 stateStr: &#x27;SECONDARY&#x27;, uptime: 88363, optime: &#123; ts: Timestamp(&#123; t: 1712044133, i: 1 &#125;), t: Long(&#x27;5&#x27;) &#125;, optimeDurable: &#123; ts: Timestamp(&#123; t: 1712044133, i: 1 &#125;), t: Long(&#x27;5&#x27;) &#125;, optimeDate: ISODate(&#x27;2024-04-02T07:48:53.000Z&#x27;), optimeDurableDate: ISODate(&#x27;2024-04-02T07:48:53.000Z&#x27;), lastAppliedWallTime: ISODate(&#x27;2024-04-02T07:48:53.125Z&#x27;), lastDurableWallTime: ISODate(&#x27;2024-04-02T07:48:53.125Z&#x27;), lastHeartbeat: ISODate(&#x27;2024-04-02T07:48:53.140Z&#x27;), # 最后一次心跳时间 lastHeartbeatRecv: ISODate(&#x27;2024-04-02T07:48:53.655Z&#x27;), # 最后一次接收心跳时间 pingMs: Long(&#x27;0&#x27;), # 节点心跳间隔时间 lastHeartbeatMessage: &#x27;&#x27;, # 节点心跳消息 syncSourceHost: &#x27;10.1.2.26:27017&#x27;, # 同步源主机名 syncSourceId: 0, # 同步源节点 ID infoMessage: &#x27;&#x27;, # 节点信息消息 configVersion: 4, # 配置版本 configTerm: 5 # 选举任期 &#125;, &#123; _id: 2, name: &#x27;10.1.2.41:27017&#x27;, health: 0, # 节点健康状态，这里是0，表示节点不可达，因为该节点的mongo服务被关掉了，这里只是为了展示不同的状态 state: 8, # 节点状态，这里是8，表示不可达 stateStr: &#x27;(not reachable/healthy)&#x27;, # 节点状态字符串，提示节点不可达 uptime: 0, optime: &#123; ts: Timestamp(&#123; t: 0, i: 0 &#125;), t: Long(&#x27;-1&#x27;) &#125;, optimeDurable: &#123; ts: Timestamp(&#123; t: 0, i: 0 &#125;), t: Long(&#x27;-1&#x27;) &#125;, optimeDate: ISODate(&#x27;1970-01-01T00:00:00.000Z&#x27;), optimeDurableDate: ISODate(&#x27;1970-01-01T00:00:00.000Z&#x27;), lastAppliedWallTime: ISODate(&#x27;2024-04-02T07:47:23.818Z&#x27;), lastDurableWallTime: ISODate(&#x27;2024-04-02T07:47:23.818Z&#x27;), lastHeartbeat: ISODate(&#x27;2024-04-02T07:48:53.163Z&#x27;), lastHeartbeatRecv: ISODate(&#x27;2024-04-02T07:47:32.215Z&#x27;), pingMs: Long(&#x27;0&#x27;), lastHeartbeatMessage: &#x27;Error connecting to 10.1.2.41:27017 :: caused by :: onInvoke :: caused by :: Connection refused&#x27;, # 节点心跳消息，这里是连接失败 syncSourceHost: &#x27;&#x27;, syncSourceId: -1, infoMessage: &#x27;&#x27;, configVersion: 4, configTerm: 4 &#125; ]……………………………… state的值及对应的含义 0: Startup - 成员正在启动。 1: Primary - 成员是主副本集节点。可以接收写入操作。每个副本集有且仅有一个主节点。 2: Secondary - 成员是从副本集节点。复制主节点的数据变更。 3: Recovering - 成员已经接收到新的数据，但还无法提供读或投票服务。此状态通常是短暂的。 4: Fatal - 成员发生了不可恢复的错误，已停止接收和复制数据。人工干预需要重启成员或者副本集。 5: Startup2 - 成员正在初始化副本集的内部数据结构。 6: Unknown - 因为与此成员的同步被打断，导致此成员状态未知。 7: Arbiter - 成员是仲裁者。 8: Down - 这个成员目前不能到达。 9: Rollback - 这个成员正在滚动回数据以达到一致的状态。 10: Removed - 这个成员已经从副本集中删除。 授权 创建用户 授权后需要重新登录或进行认证后才能继续操作 123456789101112131415# 登录主节点rs0 [direct: primary] test&gt; use adminswitched to db admin# 创建用户rs0 [direct: primary] admin&gt; db.createUser(&#123; user: &quot;user&quot;, pwd: &quot;password&quot;, roles: [ &#123; role: &quot;clusterAdmin&quot;, db: &quot;admin&quot; &#125; , &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot;&#125;, &#123; role: &quot;dbAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125;, &#123; role: &quot;readWriteAnyDatabase&quot;, db: &quot;admin&quot;&#125; ]&#125;); 登录 方法1，连接的同时认证 1234567# 默认登录test数据库mongosh 10.1.2.26:27017 -u user -p password --authenticationDatabase admin# 或者mongosh &quot;mongodb://user:password@10.1.2.26:27017/test?authSource=admin&quot;# 集群连接，推荐，会自动登录到主节点mongosh &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot; 方法2，先连接，再认证 123456789101112mongosh 10.1.2.26:27017&gt; use adminswitched to db admin&gt; db.auth(&quot;user&quot;,&quot;password&quot;)&#123; ok: 1 &#125;# 集群连接，推荐，会自动登录到主节点mongosh &quot;mongodb://10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;&gt; use adminswitched to db admin&gt; db.auth(&quot;user&quot;,&quot;password&quot;)&#123; ok: 1 &#125; 查看用户信息 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647# 先要切换到 admin 数据库rs0 [direct: primary] admin&gt; db.system.users.find()[ &#123; _id: &#x27;admin.user&#x27;, userId: UUID(&#x27;19dcd146-6872-41fe-8e39-46bb98b9db5c&#x27;), user: &#x27;user&#x27;, db: &#x27;admin&#x27;, credentials: &#123; &#x27;SCRAM-SHA-1&#x27;: &#123; iterationCount: 10000, salt: &#x27;DLOOhoEKeG2RKfW8hU4caw==&#x27;, storedKey: &#x27;ohQOJeAS3XWUwlFJAGduuiUJptc=&#x27;, serverKey: &#x27;rDjqq/nF3awasdaPr2ocJskm7p0=&#x27; &#125;, &#x27;SCRAM-SHA-256&#x27;: &#123; iterationCount: 15000, salt: &#x27;6YpcJH2pcL3yC726rpIq6VWSQLSV68i+oqURkw==&#x27;, storedKey: &#x27;1nIijUrLAL0lQZ6++O0cxM3VbsprdwRQucVFYkDQWbA=&#x27;, serverKey: &#x27;nk8TKbK19zLaD7wJn+991euF9ILE08iPopmJ8YAAqfQ=&#x27; &#125; &#125;, roles: [ &#123; role: &#x27;userAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;, &#123; role: &#x27;clusterAdmin&#x27;, db: &#x27;admin&#x27; &#125;, &#123; role: &#x27;dbAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;, &#123; role: &#x27;readWriteAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125; ] &#125;]rs0 [direct: primary] admin&gt; show users[ &#123; _id: &#x27;admin.user&#x27;, userId: UUID(&#x27;19dcd146-6872-41fe-8e39-46bb98b9db5c&#x27;), user: &#x27;user&#x27;, db: &#x27;admin&#x27;, roles: [ &#123; role: &#x27;userAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;, &#123; role: &#x27;clusterAdmin&#x27;, db: &#x27;admin&#x27; &#125;, &#123; role: &#x27;dbAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;, &#123; role: &#x27;readWriteAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125; ], mechanisms: [ &#x27;SCRAM-SHA-1&#x27;, &#x27;SCRAM-SHA-256&#x27; ] &#125;] 开启从库读取数据的权限 使用当前最新版mongosh-2.2.2连接从库时，默认就支持读取数据，其默认的readPreference为primaryPreferred。 如果使用之前的版本连接从库时，默认是不能读取数据的，需要手工开启 12345678# 提示非主节点，不能查询数据，rs0 [direct: secondary] test&gt; show usersMongoServerError[NotPrimaryNoSecondaryOk]: not primary - consider using db.getMongo().setReadPref() or readPreference in the connection string# 早期版本是运行 rs.secondaryOk()，不过现在提示已经不推荐了rs0 [direct: secondary] test&gt; rs.secondaryOk()DeprecationWarning: .setSecondaryOk() is deprecated. Use .setReadPref(&quot;primaryPreferred&quot;) insteadSetting read preference from &quot;primary&quot; to &quot;primaryPreferred&quot; 全局设置readPreference，对本次链接都有效 12# 开启从库读取数据权限rs0 [direct: secondary] test&gt; db.getMongo().setReadPref(&quot;primaryPreferred&quot;) 也可以在链接参数中指定readPreference 12345# 单节点连接mongosh &quot;mongodb://user:password@10.1.2.142:27017/test?authSource=admin&amp;readPreference=primaryPreferred&quot;# 集群连接mongosh &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&amp;readPreference=primaryPreferred&quot; 可以在查询时指定readPreference，只针对当前查询，对后续查询无效 1rs0 [direct: secondary] admin&gt; db.system.users.find().readPref(&quot;secondary&quot;) readPreference readPreference决定使用哪一类节点（主或从节点）来满足正在发起的读请求。可选值包括： primary：默认值，只读主节点的数据。 primaryPreferred：优先读主节点的数据，如果主节点不可用，则读从节点的数据。 secondary：只读从节点的数据。 secondaryPreferred：优先读从节点的数据，如果从节点不可用，则读主节点的数据。 nearest：优先读距离最近的节点的数据。 指定 readPreference 时应注意高可用问题。例如将 readPreference 指定 primary，则发生故障转移不存在 primary 期间将没有节点可读。如果业务允许，则应选择 primaryPreferred； Tag 集群中节点的标签，用于选择节点 readPreference 只能控制使用一类（主或从节点）节点。Tag 则可以将节点选择控制到一个或几个节点。 为节点添加Tag 123456# 必须在主节点下才能修改配置conf = rs.conf()conf.members[0].tags = &#123; purpose: &quot;online&quot; &#125;conf.members[1].tags = &#123; purpose: &quot;online&quot; &#125;conf.members[2].tags = &#123; purpose: &quot;analyse&quot;&#125;rs.reconfig(conf) 全局指定Tag 1rs0 [direct: primary] admin&gt; db.getMongo().setReadPref(&quot;primaryPreferred&quot;, [ &#123;purpose: &quot;online&quot;&#125; ]) 在链接参数中指定Tag 1mongosh &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&amp;readPreference=primaryPreferred&amp;readPreferenceTags=purpose:online&quot; 在查询时指定Tag 12345rs0 [direct: secondary] admin&gt; db.system.users.find().readPref(&quot;secondary&quot;, [ &#123;purpose: &quot;analyse&quot;&#125; ])# 注意，`Tag`只能用于从节点，主节点不支持。rs0 [direct: primary] admin&gt; db.system.users.find().readPref(&quot;primary&quot;, [ &#123;purpose: &quot;online&quot;&#125; ])MongoInvalidArgumentError: Primary read preference cannot be combined with tags 使用 Tag 时应注意高可用问题，如果只有一个节点拥有一个特定 Tag，则在这个节点失效时将无节点可读。这在有时候是期望的结果，有时候不是。例如： 如果报表使用的节点失效，即使不生成报表，通常也不希望将报表负载转移到其他节点上，此时只有一个节点有报表 Tag 是合理的选择； 如果线上节点失效，通常希望有替代节点，所以应该保持多个节点有同样的 Tag； Tag 有时需要与优先级、选举权综合考虑。例如做报表的节点通常不会希望它成为主节点，则优先级应为 0。 通过rs.conf()可以查看复制集中各个节点的Tag信息 优先级(priority) 与 选举权(vote) 当 Priority 等于 0 时，它不可以被复制集选举为主，Priority 的值越高，则被选举为主的概率更大。 当 Vote 等于 0 时，它不可以参与选举投票，此时该节点的 Priority 也必须为 0，即它也不能被选举为主。 由于一个复制集中最多只有7个投票成员，因此多出来的成员则必须将其vote属性值设置为0，即这些成员将无法参与投票。 通过rs.conf()可以查看复制集中各个节点的相关配置 123456789101112131415161718192021222324252627282930313233&gt; rs.conf()&#123; _id: &#x27;rs0&#x27;, # 复制集名称 version: 2, # 配置版本号，即conf被修改的次数，每次更改配置时，版本号都会递增。 term: 3, # 选举轮次（election term）。在进行选举时，MongoDB 使用一个单调递增的 term 值来标识选举的周期。这个值会随着选举的进行而增加。 members: [ # 成员数组，包含了复制集中的所有成员的详细配置信息。 &#123; _id: 0, # 成员的唯一标识符，从0开始递增。 host: &#x27;10.1.2.26:27017&#x27;, # 节点ip+port arbiterOnly: false, # 是否为仲裁节点 buildIndexes: true, # 是否在此节点上创建索引 hidden: false, # 是否为隐藏节点，即不被客户端发现。 priority: 1, # 选举优先级，值越大优先级越高，0表示不能被选举为主节点 tags: &#123; purpose: &#x27;online&#x27; &#125;, # Tag secondaryDelaySecs: Long(&#x27;0&#x27;), # 如果存在延迟复制，表示复制延迟的时间量（以秒为单位），如果为0则表示不是延迟节点。 votes: 1 # 成员的投票数，大于0表示参与投票。 &#125;, ], protocolVersion: Long(&#x27;1&#x27;), # 复制集使用的协议版本。 writeConcernMajorityJournalDefault: true, # 是否在写入操作中默认启用大多数写关注和日志记录 settings: &#123; # 复制集的全局设置，包含以下属性： chainingAllowed: true, # 是否允许从其他成员读取数据。 heartbeatIntervalMillis: 2000, # 心跳间隔，即成员之间检测状态的时间间隔。 heartbeatTimeoutSecs: 10, # 心跳超时时间，如果在此时间内未收到心跳，则认为成员不可用。 electionTimeoutMillis: 10000, # 选举超时时间，即进行选举的时间间隔。 catchUpTimeoutMillis: -1, # 成员在追赶操作时的超时时间。 catchUpTakeoverDelayMillis: 30000, # 在追赶操作期间，发生主节点故障时，延迟节点接管主节点之前的延迟时间。 getLastErrorModes: &#123;&#125;, # 指定写操作的确认模式。 getLastErrorDefaults: &#123; w: 1, wtimeout: 0 &#125;, # 指定写操作的默认确认参数。 replicaSetId: ObjectId(&#x27;660a20282e7a827807cac803&#x27;) # 复制集的唯一标识符。 &#125;&#125; ……………… 修改节点优先级 12345# 必须在主节点执行cfg = rs.conf()# 保存成功后，由于当前节点的优先级最高，所以集群会发起重新选举将当前节点设置为主节点cfg.members[2].priority = 10rs.reconfig(cfg) 设置隐藏节点 12345# 必须在主节点执行cfg = rs.conf()cfg.members[2].priority = 0cfg.members[2].hidden = truers.reconfig(cfg) 配置延时节点 123456cfg = rs.conf()cfg.members[2].priority = 0cfg.members[2].hidden = true#延迟60秒cfg.members[2].secondaryDelaySecs = 60rs.reconfig(cfg) 读关注(readConcern) 在 readPreference 选择了指定的节点后，readConcern 决定这个节点上的数据哪些是可读的 类似于关系数据库的隔离级别，可选值包括： 12345- available：读取所有可用的数据;- local：读取所有可用且属于当前分片的数据。在复制集中 local 和 available 是没有区别的，两者仅在分片集群中才有区别;- majority：读取在大多数节点上提交完成的数据;- linearizable：可线性化读取文档，仅支持从主节点读。只读取大多数节点确认过的数据。和 majority 最大差别是保证绝对的操作线性顺序;- snapshot：读取最近快照中的数据，仅可用于多文档事务，隔离级别最高; 主节点读取数据时默认 readConcern 是 local，从节点读取数据时默认 readConcern 是 available 分片集群中 local 和 available 的区别 如果一个 chunk x 正在从 shard1 向 shard2 迁移； 整个迁移过程中 chunk x 中的部分数据会在 shard1 和 shard2 中同时存在，但源分片 shard1仍然是chunk x 的负责方： 所有对 chunk x 的读写操作仍然进入 shard1； config 中记录的信息 chunk x 仍然属于 shard1； 此时如果读 shard2，则会体现出 local 和 available 的区别： local：只取应该由 shard2 负责的数据（不包括 x）； available：shard2 上有什么就读什么（包括 x）； 示例 1234db.user.find().readConcern(&#x27;local&#x27;)db.user.find().readConcern(&#x27;majority&#x27;)# 读取从节点上已经被大多数节点提交完成的数据db.user.find().readPref(&quot;secondary&quot;).readConcern(&quot;majority&quot;) 写关注(writeConcern) writeConcern 决定一个写操作落到多少个节点上才算成功。 MongoDB支持客户端灵活配置写入策略（writeConcern），以满足不同场景的需求。 123456789101112&#123; w: &lt;value&gt;, j: &lt;boolean&gt;, wtimeout: &lt;number&gt; &#125;w: 数据写入到number个节点才向用客户端确认 - &#123;w: 0&#125; 对客户端的写入不需要发送任何确认，适用于性能要求高，但不关注正确性的场景 - &#123;w: 1&#125; 默认的writeConcern，数据写入到Primary就向客户端发送确认 - &#123;w: &quot;majority&quot;&#125; 数据写入到副本集大多数成员后向客户端发送确认，适用于对数据安全性要求比较高的场景，该选项会降低写入性能j: 写入操作的journal持久化后才向客户端确认 - 默认为&#123;j: false&#125;，如果要求Primary写入持久化了才向客户端确认，则指定该选项为truewtimeout: 写入超时时间，仅w的值大于1时有效。 - 当指定&#123;w: &#125;时，数据需要成功写入number个节点才算成功，如果写入过程中有节点故障，可能导致这个条件一直不能满足，从而一直不能向客户端发送确认结果，针对这种情况，客户端可设置wtimeout选项来指定超时时间，当写入过程持续超过该时间仍未结束，则认为写入失败。 通常重要数据应用 &#123;w: &quot;majority&quot;&#125;，普通数据可以应用 &#123;w: 1&#125; 以确保最佳性能。 示例 1234# 等等大多数节点写入成功db.user.insertOne(&#123;name:&quot;李四&quot;&#125;,&#123;writeConcern:&#123;w:&quot;majority&quot;&#125;&#125;)# 等待3个节点写入成功，若超时则写入失败db.user.insertOne(&#123;name:&quot;小明&quot;&#125;,&#123;writeConcern:&#123;w:3,wtimeout:3000&#125;&#125;) 优雅的重启复制集 逐个重启复制集里所有的Secondary节点 1234# 关闭服务mongod --shutdown -f /mongodb/mongo.conf# 重启启动mongod -f /mongodb/mongo.conf 对Primary发送rs.stepDown()命令，等待primary降级为Secondary 123456789101112rs0 [primary] local&gt; rs.stepDown()&#123; ok: 1, &#x27;$clusterTime&#x27;: &#123; clusterTime: Timestamp(&#123; t: 1712046433, i: 1 &#125;), signature: &#123; hash: Binary.createFromBase64(&#x27;dklQyCuunlYhWYkKuNtiNcGNom8=&#x27;, 0), keyId: Long(&#x27;7352724745051176965&#x27;) &#125; &#125;, operationTime: Timestamp(&#123; t: 1712046433, i: 1 &#125;)&#125; 重启降级后的Primary oplog 在复制集架构中，主节点与备节点之间是通过oplog来同步数据的，这里的oplog是一个特殊的固定集合，当主节点上的一个写操作完成后，会向oplog集合写入一条对应的日志，而备节点则通过这个oplog不断拉取到新的日志，在本地进行回放以达到数据同步的目的。 查询oplog 1234567891011use local# 查询最近10条oplog，这里 $natural:-1 是按照时间降序排列db.oplog.rs.find().sort(&#123;$natural:-1&#125;).limit(10)# 查询最近60分钟oplogdb.oplog.rs.find(&#123; &quot;ts&quot;: &#123; &quot;$gt&quot;: Timestamp(Math.floor(new Date().getTime() / 1000) - 60*60, 1) &#125;&#125;).sort(&#123; &quot;$natural&quot;: -1&#125;).limit(10) 12345678910111213141516171819202122232425262728293031&#123; op: &#x27;u&#x27;, ns: &#x27;config.system.sessions&#x27;, ui: UUID(&#x27;4f90005d-a546-4d59-971d-7954c3acd0f8&#x27;), o: &#123; &#x27;$v&#x27;: 2, diff: &#123; u: &#123; lastUse: ISODate(&#x27;2024-04-02T08:31:10.148Z&#x27;) &#125; &#125; &#125;, o2: &#123; _id: &#123; id: UUID(&#x27;3f881052-ac21-4677-816c-33934322fbd6&#x27;), uid: Binary.createFromBase64(&#x27;eOZyqfHfiVpfviPDWgAERmzNFnUp8UBdlWKN50Fv9fo=&#x27;, 0) &#125; &#125;, ts: Timestamp(&#123; t: 1712046670, i: 1 &#125;), t: Long(&#x27;6&#x27;), v: Long(&#x27;2&#x27;), wall: ISODate(&#x27;2024-04-02T08:31:10.148Z&#x27;)&#125;ts： 操作时间，当前timestamp + 计数器，计数器每秒都被重置v：oplog版本信息op：操作类型: i：插⼊操作 u：更新操作 d：删除操作 c：执行命令（如createDatabase，dropDatabase） n：空操作，特殊用途ns：操作针对的集合o：操作内容o2：操作查询条件，仅update操作包含该字段 oplog集合的大小默认为min(磁盘可用空间*5%，50GB)，可以通过如下命令修改 123456# 将复制集成员的oplog大小修改为1G，这里单位是M&gt; db.adminCommand(&#123;replSetResizeOplog: 1, size: 1024&#125;)# 查看oplog大小&gt; use local&gt; db.oplog.rs.stats().maxSize/1024/10241024 这里要注意每个节点的oplog大小都需要单独的配置，并且必须一致，否则有可能会出现同步失败的情况。 查看当前节点的oplog的状态 12345678910111213141516171819202122232425262728293031rs0 [primary] test&gt; rs.printReplicationInfo()actual oplog size&#x27;1024 MB&#x27;---configured oplog size&#x27;1024 MB&#x27;---log length start to end&#x27;112923 secs (31.37 hrs)&#x27;---oplog first event time&#x27;Mon Apr 01 2024 02:47:04 GMT+0000 (Coordinated Universal Time)&#x27;---oplog last event time&#x27;Tue Apr 02 2024 10:09:07 GMT+0000 (Coordinated Universal Time)&#x27;---now&#x27;Tue Apr 02 2024 10:09:08 GMT+0000 (Coordinated Universal Time)&#x27;actual oplog size：表示实际使用的 oplog 大小。Oplog 是一个 circurlar buffer，用于存储主节点上的操作日志。这个属性指示了 oplog 的当前大小。在示例中，oplog 大小为 &#x27;1024 MB&#x27;。configured oplog size：表示配置的 oplog 大小。这是在配置复制集时指定的 oplog 大小。在示例中，配置的 oplog 大小也是 &#x27;1024 MB&#x27;，说明实际 oplog 大小与配置的 oplog 大小相匹配。log length start to end：表示 oplog 的记录长度，从开始到结束的时间跨度。在示例中，oplog 记录了 &#x27;112923 secs (31.37 hrs)&#x27;，表示从 oplog 开始记录到结束的时间跨度为约 31.37 小时。oplog first event time：表示 oplog 记录的第一个事件的时间戳。在示例中，第一个事件的时间为 &#x27;Mon Apr 01 2024 02:47:04 GMT+0000 (Coordinated Universal Time)&#x27;。oplog last event time：表示 oplog 记录的最后一个事件的时间戳。在示例中，最后一个事件的时间为 &#x27;Tue Apr 02 2024 10:09:07 GMT+0000 (Coordinated Universal Time)&#x27;。now：表示当前时间。在示例中，当前时间为 &#x27;Tue Apr 02 2024 10:09:08 GMT+0000 (Coordinated Universal Time)&#x27;。 以从节点视角查看oplog复制状态 123456789101112131415161718rs0 [primary] local&gt; rs.printSecondaryReplicationInfo()source: 10.1.2.142:27017&#123; syncedTo: &#x27;Tue Apr 02 2024 10:10:07 GMT+0000 (Coordinated Universal Time)&#x27;, replLag: &#x27;0 secs (0 hrs) behind the primary &#x27;&#125;---source: 10.1.2.41:27017&#123; syncedTo: &#x27;Tue Apr 02 2024 10:10:07 GMT+0000 (Coordinated Universal Time)&#x27;, replLag: &#x27;0 secs (0 hrs) behind the primary &#x27;&#125;source：从节点的主机名和端口号，即复制数据的来源节点。syncedTo：表示从节点已经复制到的最新操作的时间戳。它指示了从节点上数据的同步程度，即从节点已经复制了到主节点的哪个时间点的数据。在示例中，两个从节点的 syncedTo 时间戳都是 &#x27;Tue Apr 02 2024 10:10:07 GMT+0000 (Coordinated Universal Time)&#x27;，表示它们都已经与主节点同步到了相同的时间点。replLag：表示从节点与主节点之间的复制延迟。它显示了从节点当前落后于主节点的时间量，以秒和小时为单位。在示例中，两个从节点的 replLag 都是 &#x27;0 secs (0 hrs) behind the primary&#x27;，表示它们与主节点保持实时同步，没有任何复制延迟。 既然oplog的大小有限制，新的数据会覆盖旧的数据，那么新加入的节点如何全量同步数据呢？ 当MongoDB的从库节点需要进行数据同步时，会执行以下步骤： 初始同步： 当一个新节点加入到副本集中时，它会执行初始同步以获取集合中的所有数据。初始同步会复制所有数据库的所有数据，包括系统数据库。之后，新节点会开始从oplog里获取更改历史，应用这些更改历史到数据，以保证与其他从库节点一致。注意，初始同步中的数据包括在新加入节点之前的数据以及新节点加入之后其他节点产生的新数据。 oplog落后： 如果从库在初始同步执行期间不能及时获取oplog（例如，oplog的数据超出了大小限制并被覆盖，或者初次同步时间过长），新节点需要重新进行初始同步操作。 这些步骤确保了MongoDB副本集的数据在所有节点间的一致性，尽管oplog有大小限制并且旧的内容会被新的操作覆盖。 复制集相关操作 官方文档 命令 描述 rs.add(“hostname:port”) 为复制集新增节点 rs.addArb(“hostname:port”) 为复制集新增一个 arbiters rs.conf() 返回复制集配置信息 rs.config() 同 rs.conf() rs.freeze(3600) 防止当前节点在一段时间内选举成为主节点，如这里是3600秒，则当前节点在3600秒内不会选举成为主节点 rs.help() 返回 replica set 的命令帮助 rs.initiate() 初始化一个新的复制集 rs.printReplicationInfo() 以当前节点的视角返回复制的状态报告 rs.printSecondaryReplicationInfo() 以从节点的视角返回复制状态报告 rs.reconfig() 通过重新应用复制集配置来为复制集更新配置 rs.remove(“hostname:port”) 从复制集中移除一个节点 rs.secondaryOk() 为当前的连接设置从节点可读，该方法已经过时了，使用 db.getMongo().setReadPref() 代替 rs.status() 返回复制集状态信息 rs.stepDown() 让当前的 primary 变为从节点并触发新一轮的主节点选举 rs.syncFrom(“hostname:port”) 设置复制集节点从哪个节点处同步数据，将会覆盖默认选取逻辑 rs.reconfigForPSASet() 在主-从-仲裁器（PSA）副本集或正在更改为PSA架构的副本集上安全地执行一些重新配置更改。 移除节点 123456789101112rs0 [primary] local&gt; rs.remove(&quot;10.1.2.41:27017&quot;)&#123; ok: 1, &#x27;$clusterTime&#x27;: &#123; clusterTime: Timestamp(&#123; t: 1712049022, i: 1 &#125;), signature: &#123; hash: Binary.createFromBase64(&#x27;Qg3Ymzp3k+hhzaDo3jZQimc4WCI=&#x27;, 0), keyId: Long(&#x27;7352724745051176965&#x27;) &#125; &#125;, operationTime: Timestamp(&#123; t: 1712049022, i: 1 &#125;)&#125; 添加仲裁节点 当集群中的节点数&gt;=3时，无论是添加仲裁节点还是从节点都没有问题。 上面删除了集群中的一个节点，此时集群中的节点说是2(一主一从)，此时如果主发生故障集群就没办法工作了，此时我们可以为其添加一个仲裁节点(只投票不存储数据)。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263# 添加仲裁节点，但是此时添加仲裁节点会报错rs0 [primary] local&gt; rs.addArb(&quot;10.1.2.41:27017&quot;)MongoServerError[NewReplicaSetConfigurationIncompatible]: Reconfig attempted to install a config that would change the implicit default write concern. Use the setDefaultRWConcern command to set a cluster-wide write concern and try the reconfig again.# 报错原因：由于默认的写关注为 majority，而当前节点中只有2个节点，没有办法确认“大多数”是多少了，所以我们需要修改写关注的设置# 查询默认的读写关注rs0 [primary] admin&gt; db.adminCommand(&#123;&quot;getDefaultRWConcern&quot; : 1&#125;)&#123; defaultReadConcern: &#123; level: &#x27;local&#x27; &#125;, defaultWriteConcern: &#123; w: &#x27;majority&#x27;, wtimeout: 0 &#125;, updateOpTime: Timestamp(&#123; t: 1712050437, i: 1 &#125;), updateWallClockTime: ISODate(&#x27;2024-04-02T09:15:04.462Z&#x27;), defaultWriteConcernSource: &#x27;global&#x27;, defaultReadConcernSource: &#x27;implicit&#x27;, localUpdateWallClockTime: ISODate(&#x27;2024-04-02T09:15:04.462Z&#x27;), ok: 1, &#x27;$clusterTime&#x27;: &#123; clusterTime: Timestamp(&#123; t: 1712109448, i: 1 &#125;), signature: &#123; hash: Binary.createFromBase64(&#x27;oUiR9xdXN4mzQqdz9IXHGdCmNto=&#x27;, 0), keyId: Long(&#x27;7352724745051176965&#x27;) &#125; &#125;, operationTime: Timestamp(&#123; t: 1712109448, i: 1 &#125;)&#125;# 修改默认写关注 defaultWriteConcern# setDefaultRWConcern：用于指定设置默认读写关注级别（RW Concern）的操作。值为 1 表示执行设置操作。# defaultWriteConcern：用于指定默认的写入关注级别。在这个例子中，写入关注级别被设置为 &#123; &quot;w&quot; : 2 &#125;，意味着在写入数据时，MongoDB 驱动程序会等待至少两个节点确认写入成功后才返回成功。其实这里设置为1也可以，表示写入主节点就返回成功。rs0 [primary] local&gt; db.adminCommand( &#123;&quot;setDefaultRWConcern&quot; : 1, &quot;defaultWriteConcern&quot; : &#123; &quot;w&quot; : 2 &#125; &#125; )&#123; defaultReadConcern: &#123; level: &#x27;local&#x27; &#125;, defaultWriteConcern: &#123; w: 2, wtimeout: 0 &#125;, updateOpTime: Timestamp(&#123; t: 1712049370, i: 1 &#125;), updateWallClockTime: ISODate(&#x27;2024-04-02T09:16:22.715Z&#x27;), defaultWriteConcernSource: &#x27;global&#x27;, defaultReadConcernSource: &#x27;implicit&#x27;, localUpdateWallClockTime: ISODate(&#x27;2024-04-02T09:16:22.726Z&#x27;), ok: 1, &#x27;$clusterTime&#x27;: &#123; clusterTime: Timestamp(&#123; t: 1712049382, i: 2 &#125;), signature: &#123; hash: Binary.createFromBase64(&#x27;04nzjl47CMumvguEzUq7RnY55+s=&#x27;, 0), keyId: Long(&#x27;7352724745051176965&#x27;) &#125; &#125;, operationTime: Timestamp(&#123; t: 1712049382, i: 2 &#125;)&#125;# 再次添加仲裁节点成功rs0 [primary] local&gt; rs.addArb(&quot;10.1.2.41:27017&quot;)&#123; ok: 1, &#x27;$clusterTime&#x27;: &#123; clusterTime: Timestamp(&#123; t: 1712049480, i: 1 &#125;), signature: &#123; hash: Binary.createFromBase64(&#x27;4q9s6mvT0boa6Q+vjKms8vnTR6Y=&#x27;, 0), keyId: Long(&#x27;7352724745051176965&#x27;) &#125; &#125;, operationTime: Timestamp(&#123; t: 1712049480, i: 1 &#125;)&#125; 此时关闭主节点，就会看到另一个从节点成为主节点了 添加新的节点 当集群中的节点数&gt;=3时，无论是添加仲裁节点还是从节点都没有问题。 如果当前集群中有两个节点(一主一从)，我们也可以不添加仲裁节点，而是直接添加一个新的从节点 123456789101112rs0 [primary] test&gt; rs.add(&quot;10.1.2.41:27017&quot;)&#123; ok: 1, &#x27;$clusterTime&#x27;: &#123; clusterTime: Timestamp(&#123; t: 1712051880, i: 1 &#125;), signature: &#123; hash: Binary.createFromBase64(&#x27;DuuorhNH4MWqa4DHCifPzxcMN3I=&#x27;, 0), keyId: Long(&#x27;7352724745051176965&#x27;) &#125; &#125;, operationTime: Timestamp(&#123; t: 1712051880, i: 1 &#125;)&#125; 当集群中只有一个主节点和一个仲裁节点时，此时若直接添加新的节点会报错 12rs0 [primary] local&gt; rs.add(&quot;10.1.2.142:27017&quot;)MongoServerError[NewReplicaSetConfigurationIncompatible]: Rejecting reconfig where the new config has a PSA topology and the secondary is electable, but the old config contains only one writable node. Refer to https://docs.mongodb.com/manual/reference/method/rs.reconfigForPSASet/ for next steps on reconfiguring a PSA set. 根据给出的网址的提示，执行以下操作 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125# 获取当前配置rs0 [primary] test&gt; cfg = rs.conf();&#123; _id: &#x27;rs0&#x27;, version: 7, term: 8, members: [ &#123; _id: 0, host: &#x27;10.1.2.26:27017&#x27;, arbiterOnly: false, buildIndexes: true, hidden: false, priority: 1, tags: &#123; purpose: &#x27;online&#x27; &#125;, secondaryDelaySecs: Long(&#x27;0&#x27;), votes: 1 &#125;, &#123; _id: 2, host: &#x27;10.1.2.41:27017&#x27;, arbiterOnly: true, buildIndexes: true, hidden: false, priority: 0, tags: &#123;&#125;, secondaryDelaySecs: Long(&#x27;0&#x27;), votes: 1 &#125; ], protocolVersion: Long(&#x27;1&#x27;), writeConcernMajorityJournalDefault: true, settings: &#123; chainingAllowed: true, heartbeatIntervalMillis: 2000, heartbeatTimeoutSecs: 10, electionTimeoutMillis: 10000, catchUpTimeoutMillis: -1, catchUpTakeoverDelayMillis: 30000, getLastErrorModes: &#123;&#125;, getLastErrorDefaults: &#123; w: 1, wtimeout: 0 &#125;, replicaSetId: ObjectId(&#x27;660a20282e7a827807cac803&#x27;) &#125;&#125;# 修改配置，增加新的节点信息rs0 [primary] test&gt; cfg[&quot;members&quot;] = [ &#123; _id: 0, host: &#x27;10.1.2.26:27017&#x27;, arbiterOnly: false, buildIndexes: true, hidden: false, priority: 1, tags: &#123; purpose: &#x27;online&#x27; &#125;, secondaryDelaySecs: Long(&#x27;0&#x27;), votes: 1 &#125;, &#123; _id: 1, host: &#x27;10.1.2.142:27017&#x27;, # 新的节点 arbiterOnly: false, buildIndexes: true, hidden: false, priority: 1, tags: &#123; purpose: &#x27;online&#x27; &#125;, secondaryDelaySecs: Long(&#x27;0&#x27;), votes: 1 &#125;, &#123; _id: 2, host: &#x27;10.1.2.41:27017&#x27;, arbiterOnly: true, buildIndexes: true, hidden: false, priority: 0, tags: &#123;&#125;, secondaryDelaySecs: Long(&#x27;0&#x27;), votes: 1 &#125; ]# 执行配置rs0 [primary] test&gt; rs.reconfigForPSASet(1, cfg);Running first reconfig to give member at index 1 &#123; votes: 1, priority: 0 &#125;Running second reconfig to give member at index 1 &#123; priority: 1 &#125;&#123; ok: 1, &#x27;$clusterTime&#x27;: &#123; clusterTime: Timestamp(&#123; t: 1712051518, i: 2 &#125;), signature: &#123; hash: Binary.createFromBase64(&#x27;+tgYZKeeGP0KGt3YVpDCAjW3xTc=&#x27;, 0), keyId: Long(&#x27;7352724745051176965&#x27;) &#125; &#125;, operationTime: Timestamp(&#123; t: 1712051518, i: 2 &#125;)&#125;# 查看新节点的状态rs0 [primary] test&gt; rs.status()………………&#123; _id: 1, name: &#x27;10.1.2.142:27017&#x27;, health: 1, state: 2, stateStr: &#x27;SECONDARY&#x27;, uptime: 87, optime: &#123; ts: Timestamp(&#123; t: 1712051597, i: 1 &#125;), t: Long(&#x27;8&#x27;) &#125;, optimeDurable: &#123; ts: Timestamp(&#123; t: 1712051597, i: 1 &#125;), t: Long(&#x27;8&#x27;) &#125;, optimeDate: ISODate(&#x27;2024-04-02T09:53:17.000Z&#x27;), optimeDurableDate: ISODate(&#x27;2024-04-02T09:53:17.000Z&#x27;), lastAppliedWallTime: ISODate(&#x27;2024-04-02T09:53:17.058Z&#x27;), lastDurableWallTime: ISODate(&#x27;2024-04-02T09:53:17.058Z&#x27;), lastHeartbeat: ISODate(&#x27;2024-04-02T09:53:24.535Z&#x27;), lastHeartbeatRecv: ISODate(&#x27;2024-04-02T09:53:24.535Z&#x27;), pingMs: Long(&#x27;0&#x27;), lastHeartbeatMessage: &#x27;&#x27;, syncSourceHost: &#x27;10.1.2.26:27017&#x27;, syncSourceId: 0, infoMessage: &#x27;&#x27;, configVersion: 10, configTerm: 8 &#125;……………… 故障转移 集群组建完成后，集群内的各个节点会开启心跳响应定时器，默认每隔2秒(heartbeatIntervalMillis)会向其它成员发起心跳。 同时各成员节点还会启动一个选举超时检测定时器，默认每隔10秒(electionTimeoutMillis)会发起一轮选举调度。 当主节点心跳响应成功，则当前节点就会取消上一次的选举调度，即会重置选举超时检测定时器的倒计时 若主节点心跳响应失败，并且在选举超时检测的时间内仍然没有响应成功，则当前节点就会发起一轮选举调度 MongoDB的复制集选举使用Raft算法来实现，选举成功的必要条件是大多数投票节点存活。简单来说就是如果超过半数的节点都给我投票了，那么我就会成为主节点。 为什么推荐集群连接的方式？ 考虑这样的场景，如果我连接主节点并且插入10000条说，若此时主节点宕机，则客户端会立刻停止操作。 1234567# 只连接主节点mongosh &quot;mongodb://user:password@10.1.2.26:27017/test?authSource=admin&quot;# 执行插入rs0 [direct: primary] test&gt; for(i=0;i&lt;10000;i++)&#123;db.emp.insertOne(&#123;name:&quot;test&quot;+i&#125;)&#125;# 此时关闭主节点的mongo服务，则客户端会立刻给出报错信息MongoServerError[NotWritablePrimary]: not primary 若连接采用集群的方式连接，则不会中断操作，其原因就是集群连接方式会自动完成故障转移 12345678910mongosh &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&quot;# 插入操作没有被中断rs0 [primary] test&gt; for(i=0;i&lt;10000;i++)&#123;db.emp.insertOne(&#123;name:&quot;test&quot;+i&#125;)&#125;&#123; acknowledged: true, insertedId: ObjectId(&#x27;660cce829918b823661879c6&#x27;)&#125;# 查询结果正确rs0 [primary] test&gt; db.emp.countDocuments()10000 这里有一点需要注意，当你创建集群时使用的是各个节点的内网ip地址，则客户端必须可以访问这些内网ip才能通过集群连接，否则会出现连接失败的情况。因为通过集群连接的方式，实际上是会先在集群内部判断出主节点的ip地址返回给客户端，然后客户端再通过这个主节点ip访问主节点。 小贴士 在复制集发生主备节点切换的情况下，会出现短暂的无主节点阶段，此时无法接受业务写操作。 早期的版本中需要添加retryWrites参数，现在已经默认开启了 1mongosh &quot;mongodb://user:password@10.1.2.26:27017,10.1.2.142:27017,10.1.2.41:27017/test?authSource=admin&amp;replicaSet=rs0&amp;retryWrites=true&quot; SpringBoot集成MongoDB集群 1234spring: data: mongodb: uri: mongodb://user:password@127.0.0.1:27040,127.0.0.1:27041,127.0.0.1:27042/mytest?authSource=admin&amp;readPreference=primaryPreferred","summary":"摘要 本文介绍Linux下MongoDB7.0复制集的安装和使用 MongoDB官方文档 本文基于CentOS8(x86_64) Mongodb分片集群搭建参看MongoDB 分片集群搭建，虽然是基于4.4版本的，但是安装方式差别不大，只是配置文件中个别的属性名称发生了变化。","date_published":"2024-03-29T13:30:05.000Z","tags":["技术","linux","mongodb","mongodb"]},{"id":"https://blog.hanqunfeng.com/2024/03/28/ansible-useful-demo/","url":"https://blog.hanqunfeng.com/2024/03/28/ansible-useful-demo/","title":"Ansible 一些有用的小Demo","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍 Ansible 的一些使用技巧。</p>\n</li>\n<li class=\"lvl-2\">\n<p>关于Ansible的介绍可以参看 <a href=\"/2024/03/19/linux-command15-ansible/\" title=\"Linux常用命令--Ansible\">Linux常用命令--Ansible</a></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"将同组内机器别名设置到hosts中\">将同组内机器别名设置到<code>hosts</code>中</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>inventory</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[test-mongo]</span><br><span class=\"line\">10.1.2.249 hostname=mongodb.db0</span><br><span class=\"line\">10.1.2.184 hostname=mongodb.db1</span><br><span class=\"line\">10.1.2.178 hostname=mongodb.db2</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>tasks</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- name: Set static hostname <span class=\"keyword\">in</span> /etc/hosts</span><br><span class=\"line\">  lineinfile:</span><br><span class=\"line\">    path: /etc/hosts</span><br><span class=\"line\">    line: <span class=\"string\">&quot;&#123;&#123; item &#125;&#125; &#123;&#123; hostvars[item].hostname | default(&#x27;mongodb.db&#x27; ~ index)  &#125;&#125;&quot;</span></span><br><span class=\"line\">    state: present</span><br><span class=\"line\">  loop: <span class=\"string\">&quot;&#123;&#123; groups[group_names[0]] &#125;&#125;&quot;</span></span><br><span class=\"line\">  loop_control:</span><br><span class=\"line\">    index_var: index <span class=\"comment\"># 循环索引变量，从0开始，ansible&gt;2.14+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10.1.2.249 hostname=mongodb.db03 : 这里hostname就是要设置给当前主机的变量，多个变量空格分割</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">groups</span>[key] : 获取指定组内的ip数组，key为组名</span><br><span class=\"line\">group_names[0] : 获取运行当前脚本的第一个组名</span><br><span class=\"line\">hostvars[item].hostname : 获取指定ip的变量名称为hostname的值</span><br><span class=\"line\">default(<span class=\"string\">&#x27;mongodb.db&#x27;</span> ~ index) : 设置缺省值，即如果没有设置hostname，则默认为mongodb.db[0~2]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取除了当前主机外的ip数组</span></span><br><span class=\"line\">&#123;&#123; <span class=\"built_in\">groups</span>[group_names[0]] | difference([inventory_hostname]) &#125;&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里用到了<code>loop</code>，关于<code>loop</code>的用法可以参考<a href=\"https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_loops.html\">官方文档</a></p>\n</li>\n</ul>\n","content_text":"摘要 本文介绍 Ansible 的一些使用技巧。 关于Ansible的介绍可以参看 Linux常用命令--Ansible 将同组内机器别名设置到hosts中 inventory 1234[test-mongo]10.1.2.249 hostname=mongodb.db010.1.2.184 hostname=mongodb.db110.1.2.178 hostname=mongodb.db2 tasks 12345678- name: Set static hostname in /etc/hosts lineinfile: path: /etc/hosts line: &quot;&#123;&#123; item &#125;&#125; &#123;&#123; hostvars[item].hostname | default(&#x27;mongodb.db&#x27; ~ index) &#125;&#125;&quot; state: present loop: &quot;&#123;&#123; groups[group_names[0]] &#125;&#125;&quot; loop_control: index_var: index # 循环索引变量，从0开始，ansible&gt;2.14+ 说明 12345678910.1.2.249 hostname=mongodb.db03 : 这里hostname就是要设置给当前主机的变量，多个变量空格分割groups[key] : 获取指定组内的ip数组，key为组名group_names[0] : 获取运行当前脚本的第一个组名hostvars[item].hostname : 获取指定ip的变量名称为hostname的值default(&#x27;mongodb.db&#x27; ~ index) : 设置缺省值，即如果没有设置hostname，则默认为mongodb.db[0~2]# 获取除了当前主机外的ip数组&#123;&#123; groups[group_names[0]] | difference([inventory_hostname]) &#125;&#125; 这里用到了loop，关于loop的用法可以参考官方文档","summary":"摘要 本文介绍 Ansible 的一些使用技巧。 关于Ansible的介绍可以参看 Linux常用命令--Ansible","date_published":"2024-03-28T13:30:05.000Z","tags":["技术","linux","linux常用命令","Ansible","linux常用命令","Ansible"]},{"id":"https://blog.hanqunfeng.com/2024/03/27/ansible-collection-publish/","url":"https://blog.hanqunfeng.com/2024/03/27/ansible-collection-publish/","title":"Ansible Collection Publish To Galaxy","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍如何将Ansible Collection发布到Galaxy。</p>\n</li>\n<li class=\"lvl-2\">\n<p>关于Ansible的介绍可以参看 <a href=\"/2024/03/19/linux-command15-ansible/\" title=\"Linux常用命令--Ansible\">Linux常用命令--Ansible</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>关于将Ansible Role发布到Galaxy的详细介绍可以参看 <a href=\"/2024/03/26/ansible-role-publish/\" title=\"Ansible Role Publish To Galaxy\">Ansible Role Publish To Galaxy</a></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"创建Collection\">创建Collection</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在当前目录下创建collection</span></span><br><span class=\"line\"><span class=\"comment\"># 注意这里的collerction名称格式为 namespace.collection，名称只支持 [a-zA-Z0-9_]</span></span><br><span class=\"line\">$ ansible-galaxy collection init hanqunfeng.install_mongodb</span><br><span class=\"line\">- Collection hanqunfeng.install_mongodb was created successfully</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>目录结构</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hanqunfeng</span><br><span class=\"line\">└── install_mongodb</span><br><span class=\"line\">   ├── docs</span><br><span class=\"line\">   ├── galaxy.yml</span><br><span class=\"line\">   ├── meta</span><br><span class=\"line\">   │  └── runtime.yml</span><br><span class=\"line\">   ├── plugins</span><br><span class=\"line\">   │  └── README.md</span><br><span class=\"line\">   ├── README.md</span><br><span class=\"line\">   └── roles</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在<code>galaxy.yml</code>中配置collection的元数据<br>\n在<code>runtime.yml</code>中配置collection的运行时依赖<br>\n在<code>README.md</code>中配置collection的描述信息<br>\n在<code>roles</code>中创建role，这里可以创建多个role，我这里将上面创建的role复制到<code>roles</code>目录下，不过名称需要修改一下，不支持下划线，所以这里将role的名称改为<code>centos_mongodb_install</code></p>\n</blockquote>\n<p>相关代码参考:<a href=\"https://github.com/hanqunfeng/ansible_collections\">https://github.com/hanqunfeng/ansible_collections</a></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>构建collection的tar包</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 构建collection的tar包时先要进入namespace目录下</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> hanqunfeng</span><br><span class=\"line\"><span class=\"comment\"># 指定collection的目录名称，会基于我们在 galaxy.yml中的配置信息生成tar包</span></span><br><span class=\"line\">$ ansible-galaxy collection build install_mongodb</span><br><span class=\"line\">Created collection <span class=\"keyword\">for</span> hanqunfeng.install_mongodb at /Users/hanqf/ansible_workspace/collections/hanqunfeng/hanqunfeng-install_mongodb-1.0.0.tar.gz</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>上传collection到Galaxy<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/iOTd1D.png\" alt=\"\"><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/bl2Pkq.png\" alt=\"\"><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/RohfLq.png\" alt=\"\"><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/Mmmxcs.png\" alt=\"\"><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/rmsiSe.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>搜索collection<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/KHYzXd.png\" alt=\"\"><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/b0KQkB.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>安装collection</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认安装最新版本</span></span><br><span class=\"line\">$ ansible-galaxy collection install hanqunfeng.install_mongodb</span><br><span class=\"line\">Starting galaxy collection install process</span><br><span class=\"line\">Process install dependency map</span><br><span class=\"line\">Starting collection install process</span><br><span class=\"line\">Downloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/hanqunfeng-install_mongodb-1.0.0.tar.gz to /Users/hanqf/.ansible/tmp/ansible-local-322947_s0gv88/tmp1fbnqss_/hanqunfeng-install_mongodb-1.0.0-s2wczaen</span><br><span class=\"line\">Installing <span class=\"string\">&#x27;hanqunfeng.install_mongodb:1.0.0&#x27;</span> to <span class=\"string\">&#x27;/Users/hanqf/.ansible/collections/ansible_collections/hanqunfeng/install_mongodb&#x27;</span></span><br><span class=\"line\">hanqunfeng.install_mongodb:1.0.0 was installed successfully</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 升级安装时需要加上 --force</span></span><br><span class=\"line\">ansible-galaxy collection install --force hanqunfeng.install_mongodb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看已安装的role</span></span><br><span class=\"line\">ansible-galaxy collection list</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用collection</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">hosts:</span> <span class=\"string\">test-mongo</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span>  <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\">  <span class=\"attr\">roles:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">hanqunfeng.install_mongodb.centos_mongodb_install</span> <span class=\"comment\"># &lt;namespace&gt;.&lt;collection_name&gt;.&lt;role_name&gt;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>删除collection</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 没有现成的remove命令，只能手动删除</span></span><br><span class=\"line\">$ <span class=\"built_in\">rm</span> -rf ~/.ansible/collections/ansible_collections/hanqunfeng/install_mongodb</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>更新collection<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/lZjgci.png\" alt=\"\"><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/7QzrmF.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>重新安装collection</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认安装最新版本</span></span><br><span class=\"line\">$ ansible-galaxy collection install --force hanqunfeng.install_mongodb</span><br><span class=\"line\">Starting galaxy collection install process</span><br><span class=\"line\">Process install dependency map</span><br><span class=\"line\">Starting collection install process</span><br><span class=\"line\">Downloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/hanqunfeng-install_mongodb-1.0.1.tar.gz to /Users/hanqf/.ansible/tmp/ansible-local-530779nbn853q/tmpiuxg6ads/hanqunfeng-install_mongodb-1.0.1-ep0cswny</span><br><span class=\"line\">Installing <span class=\"string\">&#x27;hanqunfeng.install_mongodb:1.0.1&#x27;</span> to <span class=\"string\">&#x27;/Users/hanqf/.ansible/collections/ansible_collections/hanqunfeng/install_mongodb&#x27;</span></span><br><span class=\"line\">hanqunfeng.install_mongodb:1.0.1 was installed successfully</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装指定版本</span></span><br><span class=\"line\">ansible-galaxy collection install  hanqunfeng.install_mongodb:1.0.1</span><br></pre></td></tr></table></figure>\n<h2 id=\"命令行发布collection\">命令行发布collection</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>先要在ansible-galaxy网站上获取<code>api-key</code><br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/WGgnPL.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>发布collection</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注意替换自己的 api-key</span></span><br><span class=\"line\">$ ansible-galaxy collection publish --token xxxxxxxxxxxxxxx hanqunfeng-install_mongodb-1.0.2.tar.gz</span><br><span class=\"line\">Publishing collection artifact <span class=\"string\">&#x27;/Users/hanqf/ansible_workspace/collections/hanqunfeng/hanqunfeng-install_mongodb-1.0.2.tar.gz&#x27;</span> to default https://galaxy.ansible.com/api/</span><br><span class=\"line\">Collection has been published to the Galaxy server default https://galaxy.ansible.com/api/</span><br><span class=\"line\">Waiting <span class=\"keyword\">until</span> Galaxy import task https://galaxy.ansible.com/api/v3/imports/collections/018e7f26-b771-7c47-9c92-14e671b776dc/ has completed</span><br><span class=\"line\">Collection has been successfully published and imported to the Galaxy server default https://galaxy.ansible.com/api/</span><br></pre></td></tr></table></figure>\n<h2 id=\"后记\">后记</h2>\n<p>目前<code>2.16.4</code>这个版本尚不支持在命令行搜索collection，只能通过web界面搜索。</p>\n","content_text":"摘要 本文介绍如何将Ansible Collection发布到Galaxy。 关于Ansible的介绍可以参看 Linux常用命令--Ansible 关于将Ansible Role发布到Galaxy的详细介绍可以参看 Ansible Role Publish To Galaxy 创建Collection 1234# 在当前目录下创建collection# 注意这里的collerction名称格式为 namespace.collection，名称只支持 [a-zA-Z0-9_]$ ansible-galaxy collection init hanqunfeng.install_mongodb- Collection hanqunfeng.install_mongodb was created successfully 目录结构 12345678910hanqunfeng└── install_mongodb ├── docs ├── galaxy.yml ├── meta │ └── runtime.yml ├── plugins │ └── README.md ├── README.md └── roles 在galaxy.yml中配置collection的元数据 在runtime.yml中配置collection的运行时依赖 在README.md中配置collection的描述信息 在roles中创建role，这里可以创建多个role，我这里将上面创建的role复制到roles目录下，不过名称需要修改一下，不支持下划线，所以这里将role的名称改为centos_mongodb_install 相关代码参考:https://github.com/hanqunfeng/ansible_collections 构建collection的tar包 12345# 构建collection的tar包时先要进入namespace目录下$ cd hanqunfeng# 指定collection的目录名称，会基于我们在 galaxy.yml中的配置信息生成tar包$ ansible-galaxy collection build install_mongodbCreated collection for hanqunfeng.install_mongodb at /Users/hanqf/ansible_workspace/collections/hanqunfeng/hanqunfeng-install_mongodb-1.0.0.tar.gz 上传collection到Galaxy 搜索collection 安装collection 1234567891011121314# 默认安装最新版本$ ansible-galaxy collection install hanqunfeng.install_mongodbStarting galaxy collection install processProcess install dependency mapStarting collection install processDownloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/hanqunfeng-install_mongodb-1.0.0.tar.gz to /Users/hanqf/.ansible/tmp/ansible-local-322947_s0gv88/tmp1fbnqss_/hanqunfeng-install_mongodb-1.0.0-s2wczaenInstalling &#x27;hanqunfeng.install_mongodb:1.0.0&#x27; to &#x27;/Users/hanqf/.ansible/collections/ansible_collections/hanqunfeng/install_mongodb&#x27;hanqunfeng.install_mongodb:1.0.0 was installed successfully# 升级安装时需要加上 --forceansible-galaxy collection install --force hanqunfeng.install_mongodb# 查看已安装的roleansible-galaxy collection list 使用collection 12345---- hosts: test-mongo become: yes # 切换到root用户下执行 roles: - hanqunfeng.install_mongodb.centos_mongodb_install # &lt;namespace&gt;.&lt;collection_name&gt;.&lt;role_name&gt; 删除collection 12# 没有现成的remove命令，只能手动删除$ rm -rf ~/.ansible/collections/ansible_collections/hanqunfeng/install_mongodb 更新collection 重新安装collection 123456789101112# 默认安装最新版本$ ansible-galaxy collection install --force hanqunfeng.install_mongodbStarting galaxy collection install processProcess install dependency mapStarting collection install processDownloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/hanqunfeng-install_mongodb-1.0.1.tar.gz to /Users/hanqf/.ansible/tmp/ansible-local-530779nbn853q/tmpiuxg6ads/hanqunfeng-install_mongodb-1.0.1-ep0cswnyInstalling &#x27;hanqunfeng.install_mongodb:1.0.1&#x27; to &#x27;/Users/hanqf/.ansible/collections/ansible_collections/hanqunfeng/install_mongodb&#x27;hanqunfeng.install_mongodb:1.0.1 was installed successfully# 安装指定版本ansible-galaxy collection install hanqunfeng.install_mongodb:1.0.1 命令行发布collection 先要在ansible-galaxy网站上获取api-key 发布collection 123456# 注意替换自己的 api-key$ ansible-galaxy collection publish --token xxxxxxxxxxxxxxx hanqunfeng-install_mongodb-1.0.2.tar.gzPublishing collection artifact &#x27;/Users/hanqf/ansible_workspace/collections/hanqunfeng/hanqunfeng-install_mongodb-1.0.2.tar.gz&#x27; to default https://galaxy.ansible.com/api/Collection has been published to the Galaxy server default https://galaxy.ansible.com/api/Waiting until Galaxy import task https://galaxy.ansible.com/api/v3/imports/collections/018e7f26-b771-7c47-9c92-14e671b776dc/ has completedCollection has been successfully published and imported to the Galaxy server default https://galaxy.ansible.com/api/ 后记 目前2.16.4这个版本尚不支持在命令行搜索collection，只能通过web界面搜索。","summary":"摘要 本文介绍如何将Ansible Collection发布到Galaxy。 关于Ansible的介绍可以参看 Linux常用命令--Ansible 关于将Ansible Role发布到Galaxy的详细介绍可以参看 Ansible Role Publish To Galaxy","date_published":"2024-03-27T13:30:05.000Z","tags":["技术","linux","linux常用命令","Ansible","linux常用命令","Ansible"]},{"id":"https://blog.hanqunfeng.com/2024/03/26/ansible-role-publish/","url":"https://blog.hanqunfeng.com/2024/03/26/ansible-role-publish/","title":"Ansible Role Publish To Galaxy","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍如何将Ansible Role发布到Galaxy。</p>\n</li>\n<li class=\"lvl-2\">\n<p>关于Ansible的介绍可以参看 <a href=\"/2024/03/19/linux-command15-ansible/\" title=\"Linux常用命令--Ansible\">Linux常用命令--Ansible</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>关于将Ansible Collection发布到Galaxy的详细介绍可以参看 <a href=\"/2024/03/27/ansible-collection-publish/\" title=\"Ansible Collection Publish To Galaxy\">Ansible Collection Publish To Galaxy</a></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"创建Role\">创建Role</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在当前目录下创建一个名称为<code>mongodb-install</code>的role，实际上就是创建一个名称为<code>mongodb-install</code>的目录结构</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-galaxy init mongodb-install</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>创建完成后，目录结构如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongodb-install</span><br><span class=\"line\">├── defaults</span><br><span class=\"line\">│  └── main.yml</span><br><span class=\"line\">├── files</span><br><span class=\"line\">├── handlers</span><br><span class=\"line\">│  └── main.yml</span><br><span class=\"line\">├── meta</span><br><span class=\"line\">│  └── main.yml</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── tasks</span><br><span class=\"line\">│  └── main.yml</span><br><span class=\"line\">├── templates</span><br><span class=\"line\">├── tests</span><br><span class=\"line\">│  ├── inventory</span><br><span class=\"line\">│  └── test.yml</span><br><span class=\"line\">└── vars</span><br><span class=\"line\">   └── main.yml</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>编辑role，相关代码参考<a href=\"https://github.com/hanqunfeng/ansible-role-mongodb\">https://github.com/hanqunfeng/ansible-role-mongodb</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>这里我们要注意两个文件</p>\n</li>\n</ul>\n<blockquote>\n<p><code>README.md</code>: 这里面配置的是role的描述信息，其会显示在<code>文档</code>一栏中<br>\n<code>meta/main.yml</code>，这里面配置的是role的作者信息</p>\n</blockquote>\n<h2 id=\"上传Role到Github\">上传Role到Github</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> mongodb-install</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;init&quot;</span></span><br><span class=\"line\">git branch -M main</span><br><span class=\"line\">git remote add origin https://github.com/hanqunfeng/ansible-role-mongodb.git</span><br><span class=\"line\">git push -u origin main</span><br></pre></td></tr></table></figure>\n<h2 id=\"发布Role到Galaxy\">发布Role到Galaxy</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>登录<a href=\"https://galaxy.ansible.com/\">https://galaxy.ansible.com/</a>，点击<code>登录</code>，使用Github账号登录。</p>\n</li>\n<li class=\"lvl-2\">\n<p>导入Role<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/w1UxvL.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>填写Role信息<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/OnIT3a.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>查看导入状态<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/7Dghla.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>搜索Role<br>\n此时我们在角色列表中搜索关键字<code>hanqunfeng</code>，就可以搜索到我们刚刚上传的那个role了<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/lx7rCg.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>点击进去我们就可以查看角色的详细信息了</p>\n</li>\n</ul>\n<h2 id=\"修改Role\">修改Role</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>修改了role信息后，重新上传到github即可</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果同时修改了<code>README.md</code>等role信息，可以在galaxy中重新上传即可<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/PVNRGz.png\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"安装Role\">安装Role</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">$ ansible-galaxy role install hanqunfeng.mongodb-install</span><br><span class=\"line\">Starting galaxy role install process</span><br><span class=\"line\">- downloading role <span class=\"string\">&#x27;mongodb-install&#x27;</span>, owned by hanqunfeng</span><br><span class=\"line\">- downloading role from https://github.com/hanqunfeng/ansible-role-mongodb/archive/main.tar.gz</span><br><span class=\"line\">- extracting hanqunfeng.mongodb-install to /Users/hanqf/.ansible/roles/hanqunfeng.mongodb-install</span><br><span class=\"line\">- hanqunfeng.mongodb-install (main) was installed successfully</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新安装</span></span><br><span class=\"line\">ansible-galaxy role install --force hanqunfeng.mongodb-install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看已安装的role</span></span><br><span class=\"line\">ansible-galaxy role list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除</span></span><br><span class=\"line\">$ ansible-galaxy role remove hanqunfeng.mongodb-install</span><br><span class=\"line\">- successfully removed hanqunfeng.mongodb-install</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用Role\">使用Role</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在<code>playbook</code>中引用role</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">hosts:</span> <span class=\"string\">test-mongo</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span>  <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\">  <span class=\"attr\">roles:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">hanqunfeng.mongodb-install</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>执行playbook</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-playbook -i hosts playbook.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 替换默认的变量</span></span><br><span class=\"line\">ansible-playbook -i hosts --extra-vars <span class=\"string\">&quot;mongo_port=27019&quot;</span> --extra-vars <span class=\"string\">&quot;mongo_replica_set_name=rs1&quot;</span> playbook.yml</span><br></pre></td></tr></table></figure>\n<h2 id=\"发布指定版本到Galaxy\">发布指定版本到Galaxy</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>给角色代码打tag</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建tag，名称为 v1.0.0</span></span><br><span class=\"line\">git tag -a v1.0.0 -m <span class=\"string\">&quot;v1.0.0&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 提交tag</span></span><br><span class=\"line\">git push origin v1.0.0</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在galaxy中重新上传，注意此时在要指定tag名称<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/sESeVk.png\" alt=\"\"></p>\n</li>\n<li class=\"lvl-2\">\n<p>上传成功后，就可以在galaxy中查看到对应的版本了<br>\n<img src=\"https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/R18rBY.png\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"下载指定版本的角色\">下载指定版本的角色</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注意role和版本号之间用逗号隔开，不加版本号，则下载最新版本</span></span><br><span class=\"line\">$ ansible-galaxy role install hanqunfeng.mongodb-install,v1.0.0</span><br><span class=\"line\">Starting galaxy role install process</span><br><span class=\"line\">- downloading role <span class=\"string\">&#x27;mongodb-install&#x27;</span>, owned by hanqunfeng</span><br><span class=\"line\">- downloading role from https://github.com/hanqunfeng/ansible-role-mongodb/archive/v1.0.0.tar.gz</span><br><span class=\"line\">- extracting hanqunfeng.mongodb-install to /Users/hanqf/.ansible/roles/hanqunfeng.mongodb-install</span><br><span class=\"line\">- hanqunfeng.mongodb-install (v1.0.0) was installed successfully</span><br></pre></td></tr></table></figure>\n<h2 id=\"搜索角色\">搜索角色</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>除了在galaxy网站中搜索，还可以通过命令行搜索</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ansible-galaxy search hanqunfeng</span><br><span class=\"line\"></span><br><span class=\"line\">Found 1 roles matching your search:</span><br><span class=\"line\"></span><br><span class=\"line\"> Name                       Description</span><br><span class=\"line\"> ----                       -----------</span><br><span class=\"line\"> hanqunfeng.mongodb-install CentOS 7&amp;8 MongoDB install role</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\"># 或者</span></span><br><span class=\"line\"> ansible-galaxy role search hanqunfeng</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 本文介绍如何将Ansible Role发布到Galaxy。 关于Ansible的介绍可以参看 Linux常用命令--Ansible 关于将Ansible Collection发布到Galaxy的详细介绍可以参看 Ansible Collection Publish To Galaxy 创建Role 在当前目录下创建一个名称为mongodb-install的role，实际上就是创建一个名称为mongodb-install的目录结构 1ansible-galaxy init mongodb-install 创建完成后，目录结构如下： 1234567891011121314151617mongodb-install├── defaults│ └── main.yml├── files├── handlers│ └── main.yml├── meta│ └── main.yml├── README.md├── tasks│ └── main.yml├── templates├── tests│ ├── inventory│ └── test.yml└── vars └── main.yml 编辑role，相关代码参考https://github.com/hanqunfeng/ansible-role-mongodb 这里我们要注意两个文件 README.md: 这里面配置的是role的描述信息，其会显示在文档一栏中 meta/main.yml，这里面配置的是role的作者信息 上传Role到Github 1234567cd mongodb-installgit initgit add .git commit -m &quot;init&quot;git branch -M maingit remote add origin https://github.com/hanqunfeng/ansible-role-mongodb.gitgit push -u origin main 发布Role到Galaxy 登录https://galaxy.ansible.com/，点击登录，使用Github账号登录。 导入Role 填写Role信息 查看导入状态 搜索Role 此时我们在角色列表中搜索关键字hanqunfeng，就可以搜索到我们刚刚上传的那个role了 点击进去我们就可以查看角色的详细信息了 修改Role 修改了role信息后，重新上传到github即可 如果同时修改了README.md等role信息，可以在galaxy中重新上传即可 安装Role 1234567891011121314151617# 安装$ ansible-galaxy role install hanqunfeng.mongodb-installStarting galaxy role install process- downloading role &#x27;mongodb-install&#x27;, owned by hanqunfeng- downloading role from https://github.com/hanqunfeng/ansible-role-mongodb/archive/main.tar.gz- extracting hanqunfeng.mongodb-install to /Users/hanqf/.ansible/roles/hanqunfeng.mongodb-install- hanqunfeng.mongodb-install (main) was installed successfully# 重新安装ansible-galaxy role install --force hanqunfeng.mongodb-install# 查看已安装的roleansible-galaxy role list# 删除$ ansible-galaxy role remove hanqunfeng.mongodb-install- successfully removed hanqunfeng.mongodb-install 使用Role 在playbook中引用role 12345---- hosts: test-mongo become: yes # 切换到root用户下执行 roles: - hanqunfeng.mongodb-install 执行playbook 1234ansible-playbook -i hosts playbook.yml# 替换默认的变量ansible-playbook -i hosts --extra-vars &quot;mongo_port=27019&quot; --extra-vars &quot;mongo_replica_set_name=rs1&quot; playbook.yml 发布指定版本到Galaxy 给角色代码打tag 1234# 创建tag，名称为 v1.0.0git tag -a v1.0.0 -m &quot;v1.0.0&quot;# 提交taggit push origin v1.0.0 在galaxy中重新上传，注意此时在要指定tag名称 上传成功后，就可以在galaxy中查看到对应的版本了 下载指定版本的角色 1234567# 注意role和版本号之间用逗号隔开，不加版本号，则下载最新版本$ ansible-galaxy role install hanqunfeng.mongodb-install,v1.0.0Starting galaxy role install process- downloading role &#x27;mongodb-install&#x27;, owned by hanqunfeng- downloading role from https://github.com/hanqunfeng/ansible-role-mongodb/archive/v1.0.0.tar.gz- extracting hanqunfeng.mongodb-install to /Users/hanqf/.ansible/roles/hanqunfeng.mongodb-install- hanqunfeng.mongodb-install (v1.0.0) was installed successfully 搜索角色 除了在galaxy网站中搜索，还可以通过命令行搜索 12345678910$ ansible-galaxy search hanqunfengFound 1 roles matching your search: Name Description ---- ----------- hanqunfeng.mongodb-install CentOS 7&amp;8 MongoDB install role # 或者 ansible-galaxy role search hanqunfeng","summary":"摘要 本文介绍如何将Ansible Role发布到Galaxy。 关于Ansible的介绍可以参看 Linux常用命令--Ansible 关于将Ansible Collection发布到Galaxy的详细介绍可以参看 Ansible Collection Publish To Galaxy","date_published":"2024-03-26T13:30:05.000Z","tags":["技术","linux","linux常用命令","Ansible","linux常用命令","Ansible"]},{"id":"https://blog.hanqunfeng.com/2024/03/19/linux-command15-ansible/","url":"https://blog.hanqunfeng.com/2024/03/19/linux-command15-ansible/","title":"Linux常用命令--Ansible","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍Ansible的安装和使用。</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于CentOS8。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"Ansible简介\">Ansible简介</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Ansible 是一个开源的自动化运维工具，它基于 Python 语言开发，支持跨平台，可以运行在 Linux、Unix、Mac OS X、Windows 等多种系统环境。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Ansible简单易用，只需要在控制主机上安装 Ansible 并在被管理主机上安装 Python 2.6 或更高版本即可（现有的开源Linux系统基本都自带了Python ，所以相当于远程主机什么都不需要安装），就可以管理远程主机对其进行自动化配置、编排高级工作流程以支持应用程序部署、系统更新等。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Ansible可以用来管理Linux、Unix、Windows、OpenStack、AWS、GCP、OpenShift、Kubernetes等系统环境。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Ansible官网文档：<a href=\"https://docs.ansible.com/ansible/latest/\">https://docs.ansible.com/ansible/latest/</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>Ansible中文权威指南：<a href=\"https://ansible-tran.readthedocs.io/en/latest/index.html\">https://ansible-tran.readthedocs.io/en/latest/index.html</a></p>\n</li>\n</ul>\n<h2 id=\"Ansible安装\">Ansible安装</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Ansible安装方式有多种，这里介绍通过pip安装，当前系统中的python版本为python3.9。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m pip install ansible</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>如果尚未安装pip，可以通过下面的方法进行安装</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\">python3 get-pip.py</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装完成后，可以查看一下版本</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible --version</span><br><span class=\"line\">ansible [core 2.15.9]</span><br><span class=\"line\">  config file = None</span><br><span class=\"line\">  configured module search path = [<span class=\"string\">&#x27;/root/.ansible/plugins/modules&#x27;</span>, <span class=\"string\">&#x27;/usr/share/ansible/plugins/modules&#x27;</span>]</span><br><span class=\"line\">  ansible python module location = /usr/local/lib/python3.9/site-packages/ansible</span><br><span class=\"line\">  ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections</span><br><span class=\"line\">  executable location = /usr/local/bin/ansible</span><br><span class=\"line\">  python version = 3.9.16 (main, Sep  8 2023, 00:00:00) [GCC 11.4.1 20230605 (Red Hat 11.4.1-2)] (/usr/bin/python3)</span><br><span class=\"line\">  jinja version = 3.1.3</span><br><span class=\"line\">  libyaml = True</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Ansible常用参数：</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-u</td>\n<td>指定连接到主机的用户名</td>\n</tr>\n<tr>\n<td>-i</td>\n<td>指定连接hosts文件的路径</td>\n</tr>\n<tr>\n<td>-k</td>\n<td>指定连接到主机的密码</td>\n</tr>\n<tr>\n<td>-m</td>\n<td>指定模块名称，可以指定模块的参数，比如指定shell模块的参数：-m shell -a ‘ls -l’</td>\n</tr>\n<tr>\n<td>-a</td>\n<td>指定模块的参数，比如指定shell模块的参数：-m shell -a ‘ls -l’</td>\n</tr>\n<tr>\n<td>-e</td>\n<td>指定附加参数，比如指定shell端口： -e ‘ansible_port=22’</td>\n</tr>\n<tr>\n<td>-b</td>\n<td>切换到root权限</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>指定并发连接数，默认为5，即可以同时管理5台主机</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Ansible的配置文件\">Ansible的配置文件</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ansible的相关配置都是通过一个名为<code>ansible.cfg</code>的配置文件进行配置的，但我们通过pip安装是不会默认创建它的，实际上不创建这个配置文件也不影响ansible的执行，因为其会使用一些默认的配置，并且在大多数场景下默认的配置就能满足需求。</p>\n</li>\n<li class=\"lvl-2\">\n<p>ansible查找配置文件的顺序，优先级由上到下逐渐降低</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* ANSIBLE_CONFIG (一个环境变量)</span><br><span class=\"line\">* ansible.cfg (位于当前目录中)</span><br><span class=\"line\">* .ansible.cfg (位于家目录中)</span><br><span class=\"line\">* /etc/ansible/ansible.cfg</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>如果需要修改默认配置，我们可以通过如下命令创建一份配置文件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此时会创建一份所有配置项都以 ; 开头的配置文件，我们要修改那个配置，就删除其前面的 ; ，然后修改其值即可</span></span><br><span class=\"line\">ansible-config init --disabled &gt; ansible.cfg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前的生效配置，注意绿色为默认配置，黄色为被修改的配置</span></span><br><span class=\"line\">ansible-config dump</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看帮助文件</span></span><br><span class=\"line\">ansible-config list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看默认配置项的值和注释说明</span></span><br><span class=\"line\">ansible-config init list</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用配置详解</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通用默认配置段；</span></span><br><span class=\"line\">[defaults]</span><br><span class=\"line\"><span class=\"comment\"># 被控端IP或者DNS列表；</span></span><br><span class=\"line\">inventory=/etc/ansible/hosts</span><br><span class=\"line\"><span class=\"comment\"># Ansible默认搜寻模块的位置；</span></span><br><span class=\"line\">library=&#123;&#123; ANSIBLE_HOME ~ <span class=\"string\">&quot;/plugins/modules:/usr/share/ansible/plugins/modules&quot;</span> &#125;&#125;</span><br><span class=\"line\"><span class=\"comment\"># 并行进程数；</span></span><br><span class=\"line\">forks=5</span><br><span class=\"line\"><span class=\"comment\"># 是否允许切换为其它用户</span></span><br><span class=\"line\">become=False</span><br><span class=\"line\"><span class=\"comment\"># become=True时，通过sudo进行切换</span></span><br><span class=\"line\">become_method=<span class=\"built_in\">sudo</span></span><br><span class=\"line\"><span class=\"comment\"># 切换为root</span></span><br><span class=\"line\">become_user=root</span><br><span class=\"line\"><span class=\"comment\"># 搜索roles的路径</span></span><br><span class=\"line\">roles_path=&#123;&#123; ANSIBLE_HOME ~ <span class=\"string\">&quot;/roles:/usr/share/ansible/roles:/etc/ansible/roles&quot;</span> &#125;&#125;</span><br><span class=\"line\"><span class=\"comment\"># 日志路径，默认不输出</span></span><br><span class=\"line\">log_path=</span><br><span class=\"line\"><span class=\"comment\"># Ansible命令执行默认的模块；</span></span><br><span class=\"line\">module_name=<span class=\"built_in\">command</span></span><br><span class=\"line\"><span class=\"comment\"># 是否检查远程主机密钥，默认为True，如果希望不检查可以将其设为False，可以加快连接速度</span></span><br><span class=\"line\">host_key_checking=True</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ansible的hosts配置\">Ansible的hosts配置</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>需要创建hosts文件，使用ansible时，ansible会到hosts文件中查找对应的远程主机配置，默认的查找路径为<code>/etc/ansible/hosts</code>，也可以通过<code>ansible.cfg</code>修改默认配置</p>\n</li>\n</ul>\n<h3 id=\"hosts文件格式1\">hosts文件格式1</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>hosts文件格式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 可以配置ip或主机名</span></span><br><span class=\"line\">[webservers] <span class=\"comment\"># 分组名称</span></span><br><span class=\"line\">10.10.2.45</span><br><span class=\"line\">10.10.2.46</span><br><span class=\"line\">[dbservers]</span><br><span class=\"line\">10.10.2.47</span><br><span class=\"line\">10.10.2.48</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>命令行里加上连接参数</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 执行命令，多个ip逗号分隔</span></span><br><span class=\"line\">ansible -u username -m ping --private-key=~/.ssh/id_rsa -e <span class=\"string\">&#x27;ansible_port=22&#x27;</span> 10.10.2.45,10.10.2.46</span><br><span class=\"line\"><span class=\"comment\"># 指定hosts文件路径</span></span><br><span class=\"line\">ansible -i hosts -u username -m ping --private-key=~/.ssh/id_rsa -e <span class=\"string\">&#x27;ansible_port=22&#x27;</span> 10.10.2.45,10.10.2.46</span><br></pre></td></tr></table></figure>\n<h3 id=\"hosts文件格式2\">hosts文件格式2</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>hosts文件里也可以配置连接参数</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[webservers]</span><br><span class=\"line\">10.10.2.45 ansible_ssh_user=username ansible_ssh_private_key=~/.ssh/id_rsa ansible_ssh_port=22</span><br><span class=\"line\">10.10.2.46 ansible_ssh_user=username ansible_ssh_private_key=~/.ssh/id_rsa ansible_ssh_port=22</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>此时命令行连接时就不需要指定连接参数了</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible -i hosts -u username -m ping 10.10.2.45,10.10.2.46</span><br></pre></td></tr></table></figure>\n<h3 id=\"hosts文件格式3\">hosts文件格式3</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ansible是基于ssh建立连接的，所以只要ssh能连上远程主机，ansible就可以管理远程主机，如果我们为ssh配置config文件，那么ansible就可以直接将config里的Host名称配置到hosts文件里，这样就不需要配置连接参数了，同时此时也可以支持跳板机。关于ssh的config详细说明可以参考<a href=\"/2023/02/28/linux-command02-ssh/\" title=\"Linux常用命令--ssh、scp与免密登录\">Linux常用命令--ssh、scp与免密登录</a></p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">配置~/.ssh/config</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 跳板机</span></span><br><span class=\"line\">Host forward</span><br><span class=\"line\">    User ec2-user</span><br><span class=\"line\">    HostName 53.22.227.200</span><br><span class=\"line\">    Port 22</span><br><span class=\"line\">    IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 远程主机</span></span><br><span class=\"line\">Host remote-host</span><br><span class=\"line\">    User ec2-user</span><br><span class=\"line\">    HostName 10.9.5.123</span><br><span class=\"line\">    Port 22</span><br><span class=\"line\">    IdentityFile ~/.ssh/key.pem</span><br><span class=\"line\">    ProxyCommand ssh forward -W %h:%p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 远程主机 ,10.9网段的所有主机</span></span><br><span class=\"line\">Host 10.9.*</span><br><span class=\"line\">    User ec2-user</span><br><span class=\"line\">    Port 22</span><br><span class=\"line\">    IdentityFile ~/.ssh/key.pem</span><br><span class=\"line\">    ProxyCommand ssh forward -W %h:%p</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">hosts文件</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[webservers]</span><br><span class=\"line\">forward     <span class=\"comment\"># 与config中配置的Host名称一致</span></span><br><span class=\"line\">remote-host <span class=\"comment\"># 与config中配置的Host名称一致</span></span><br><span class=\"line\">10.9.5.123     <span class=\"comment\"># 匹配config中的网段</span></span><br><span class=\"line\">10.9.5.124     <span class=\"comment\"># 匹配config中的网段</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">命令行</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过指定主机名或ip</span></span><br><span class=\"line\">ansible -m ping remote-host</span><br><span class=\"line\">ansible -m ping 10.9.5.123</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通配符匹配，此时在匹配hosts中123和124</span></span><br><span class=\"line\">ansible -m ping  <span class=\"string\">&quot;10.9.5.*&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过分组名</span></span><br><span class=\"line\">ansible -m ping  webservers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过all指定hosts里的全部主机</span></span><br><span class=\"line\">ansible -m ping  all</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"查看hosts配置相关命令\">查看hosts配置相关命令</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>列出所有组的配置ip信息</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible all --list-hosts</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看当前hosts中配置所有组名称</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible localhost -m debug -a <span class=\"string\">&#x27;var=groups.keys()&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>列出指定组的配置ip信息</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible dbservers --list-hosts</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ansible模块\">Ansible模块</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>列出所有模块</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-doc -l</span><br><span class=\"line\"><span class=\"comment\"># 也可以指定模块名称</span></span><br><span class=\"line\">ansible-doc -l | grep -i shell</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看指定模块的参数信息，如下查看shell模块的参数说明</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-doc -s shell</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看模块的帮助信息，如下查看shell模块的帮助信息，这与官方文档一致:<a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html#ansible-collections-ansible-builtin-shell-module\">shell模块</a></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-doc shell</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Ansible管理工具常用的模块：<code>command、shell、file、user、copy、service、yum、synchronze、cron、setup、ping</code>等。可以在命令行里指定各个模块的参数(<code>ansible</code>命令)，也可以将参数配置到yml文件里，然后在命令行里指定yml文件(<code>ansible-playbook</code>命令)，下面会结合两种方式一块介绍。网上有大把的关于ansible命令的使用说明，这里只简单介绍几个模块的使用方法，其他模块的使用方法可以参考<a href=\"https://docs.ansible.com/ansible/latest/collections/index.html#plugin-list\">ansible模块</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>下面介绍的都是<a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/index.html#plugins-in-ansible-builtin\">ansible核心模块:ansible-core</a></p>\n</li>\n</ul>\n<h3 id=\"debug模块\">debug模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html#ansible-collections-ansible-builtin-debug-module\">debug模块</a>此模块在执行期间打印语句，可用于调试变量或表达式</p>\n</li>\n<li class=\"lvl-2\">\n<p>通过命令行执行命令</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m debug -a <span class=\"string\">&#x27;msg=&quot;System HostName: &#123;&#123; inventory_hostname &#125;&#125;&quot;&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>通过yml文件执行命令</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># debug.yml</span></span><br><span class=\"line\"><span class=\"string\">---</span>  <span class=\"comment\"># yml文件的开头，规定playbook的yml文件格式，必须以---开头(必须)，...结尾(非必须)</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Debug</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Debug</span></span><br><span class=\"line\">      <span class=\"attr\">debug:</span></span><br><span class=\"line\">        <span class=\"attr\">msg:</span> <span class=\"string\">&quot;System HostName: <span class=\"template-variable\">&#123;&#123; inventory_hostname &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明：<code>ansible-doc -s debug</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>msg</td>\n<td>打印消息，支持变量</td>\n</tr>\n<tr>\n<td>var</td>\n<td>打印消息，支持变量，注册变量  , 与msg互斥</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"ping模块\">ping模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/ping_module.html#ansible-collections-ansible-builtin-ping-module\">ping模块</a>用于测试主机的连通性，它会尝试连接到主机，验证可用的python，并在成功时返回“pong”，可以指定主机名或ip，也可以指定分组名，也可以指定all</p>\n</li>\n<li class=\"lvl-2\">\n<p>通过命令行执行命令</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m ping</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>通过yml文件执行命令</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ping.yml</span></span><br><span class=\"line\"><span class=\"string\">---</span>  <span class=\"comment\"># yml文件的开头，规定playbook的yml文件格式，必须以---开头(必须)，...结尾(非必须)</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Ping</span> <span class=\"string\">web</span> <span class=\"string\">servers</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span>  <span class=\"comment\"># ip或组名，也可以配置all：匹配全部主机</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Ping</span> <span class=\"string\">the</span> <span class=\"string\">servers</span></span><br><span class=\"line\">      <span class=\"attr\">ping:</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">command_output</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">显示命令输出</span></span><br><span class=\"line\">      <span class=\"attr\">debug:</span></span><br><span class=\"line\">        <span class=\"attr\">var:</span> <span class=\"string\">command_output.stdout_lines</span> <span class=\"comment\"># 注册变量输出要使用 var</span></span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>ansible-playbook</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">通过ansible-playbook命令，可以指定yml文件</li>\n<li class=\"lvl-2\">ansible-playbook相关命令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 检查yml文件语法格式</span></span><br><span class=\"line\">ansible-playbook --syntax-check ping.yml</span><br><span class=\"line\"><span class=\"comment\"># 列出hosts</span></span><br><span class=\"line\">ansible-playbook --list-hosts ping.yml</span><br><span class=\"line\"><span class=\"comment\"># 列出tags</span></span><br><span class=\"line\">ansible-playbook --list-tags ping.yml</span><br><span class=\"line\"><span class=\"comment\"># 列出task</span></span><br><span class=\"line\">ansible-playbook --list-tasks ping.yml</span><br><span class=\"line\"><span class=\"comment\"># 指定执行主机：--limit 或 -l，其必须是yml中hosts指定的子集</span></span><br><span class=\"line\">ansible-playbook ping.yml --<span class=\"built_in\">limit</span> 192.168.20.23</span><br><span class=\"line\"><span class=\"comment\"># 执行命令</span></span><br><span class=\"line\">ansible-playbook ping.yml</span><br><span class=\"line\"><span class=\"comment\"># 模拟执行，Ansible 会模拟执行任务，并输出执行结果，但不会对目标主机做出任何更改</span></span><br><span class=\"line\"><span class=\"comment\"># 注意这个命令运行不报错并不能说明一定可以执行成功，因为这个命令是模拟执行的</span></span><br><span class=\"line\">ansible-playbook ping.yml --check</span><br></pre></td></tr></table></figure>\n</div>\n<h3 id=\"setup模块\">setup模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>该模块用于采集被管理设备信息并返回给服务端，后面跟<code>--tree &lt;目录&gt;</code>，可以将采集信息以ip为文件名保存至指定目录下</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看全部信息</span></span><br><span class=\"line\">ansible all -m setup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只查看内存信息</span></span><br><span class=\"line\">ansible all -m setup -a <span class=\"string\">&quot;filter=*mem*&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只查看网络信息</span></span><br><span class=\"line\">ansible all -m setup -a <span class=\"string\">&quot;gather_subset=network&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存信息至指定目录，这样会每个ip对应一个文件</span></span><br><span class=\"line\">ansible all -m setup --tree ./</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明：<code>ansible-doc -s setup</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gather_subset</td>\n<td>指定要收集的系统信息的子集。可以是 all（所有信息）、network（网络信息）、hardware（硬件信息）等。默认为 all。</td>\n</tr>\n<tr>\n<td>gather_timeout</td>\n<td>设置信息收集的超时时间，单位为秒。默认为 10 秒。</td>\n</tr>\n<tr>\n<td>filter</td>\n<td>指定要收集的系统信息的过滤条件。可以是一个或多个标签，只收集匹配的信息。</td>\n</tr>\n<tr>\n<td>fact_path</td>\n<td>指定自定义 facts 文件的路径。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>这里重点介绍一下gather_subset</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all: 收集所有可用的系统信息。</span><br><span class=\"line\">all_ipv4_addresses: 收集所有 IPv4 地址信息。</span><br><span class=\"line\">all_ipv6_addresses: 收集所有 IPv6 地址信息。</span><br><span class=\"line\">apparmor: 收集 AppArmor 相关信息。</span><br><span class=\"line\">architecture: 收集系统架构信息。</span><br><span class=\"line\">caps: 收集进程的 capabilities 信息。</span><br><span class=\"line\">chroot: 收集 chroot 环境的信息。</span><br><span class=\"line\">cmdline: 收集内核命令行参数信息。</span><br><span class=\"line\">date_time: 收集日期和时间信息。</span><br><span class=\"line\">default_ipv4: 收集默认的 IPv4 地址信息。</span><br><span class=\"line\">default_ipv6: 收集默认的 IPv6 地址信息。</span><br><span class=\"line\">devices: 收集系统设备信息。</span><br><span class=\"line\">distribution: 收集发行版信息。</span><br><span class=\"line\">distribution_major_version: 收集发行版主版本号。</span><br><span class=\"line\">distribution_release: 收集发行版发行号。</span><br><span class=\"line\">distribution_version: 收集发行版版本信息。</span><br><span class=\"line\">dns: 收集 DNS 配置信息。</span><br><span class=\"line\">effective_group_ids: 收集有效组 ID 信息。</span><br><span class=\"line\">effective_user_id: 收集有效用户 ID 信息。</span><br><span class=\"line\">env: 收集环境变量信息。</span><br><span class=\"line\">facter: 收集 Facter 信息。</span><br><span class=\"line\">fips: 收集 FIPS 相关信息。</span><br><span class=\"line\">hardware: 收集硬件信息。</span><br><span class=\"line\">interfaces: 收集网络接口信息。</span><br><span class=\"line\">is_chroot: 收集是否处于 chroot 环境的信息。</span><br><span class=\"line\">iscsi: 收集 iSCSI 配置信息。</span><br><span class=\"line\">kernel: 收集内核信息。</span><br><span class=\"line\">local: 收集本地配置信息。</span><br><span class=\"line\">lsb: 收集 LSB 发行版信息。</span><br><span class=\"line\">machine: 收集机器信息。</span><br><span class=\"line\">machine_id: 收集机器 ID 信息。</span><br><span class=\"line\">mounts: 收集挂载点信息。</span><br><span class=\"line\">network: 收集网络相关信息。</span><br><span class=\"line\">ohai: 收集 Ohai 信息。</span><br><span class=\"line\">os_family: 收集操作系统家族信息。</span><br><span class=\"line\">pkg_mgr: 收集包管理器信息。</span><br><span class=\"line\">platform: 收集平台信息。</span><br><span class=\"line\">processor: 收集处理器信息。</span><br><span class=\"line\">processor_cores: 收集处理器核心数信息。</span><br><span class=\"line\">processor_count: 收集处理器数量信息。</span><br><span class=\"line\">python: 收集 Python 相关信息。</span><br><span class=\"line\">python_version: 收集 Python 版本信息。</span><br><span class=\"line\">real_user_id: 收集真实用户 ID 信息。</span><br><span class=\"line\">selinux: 收集 SELinux 配置信息。</span><br><span class=\"line\">service_mgr: 收集服务管理器信息。</span><br><span class=\"line\">ssh_host_key_dsa_public: 收集 SSH DSA 公钥信息。</span><br><span class=\"line\">ssh_host_key_ecdsa_public: 收集 SSH ECDSA 公钥信息。</span><br><span class=\"line\">ssh_host_key_ed25519_public: 收集 SSH ED25519 公钥信息。</span><br><span class=\"line\">ssh_host_key_rsa_public: 收集 SSH RSA 公钥信息。</span><br><span class=\"line\">ssh_host_pub_keys: 收集 SSH 主机公钥信息。</span><br><span class=\"line\">ssh_pub_keys: 收集 SSH 用户公钥信息。</span><br><span class=\"line\">system: 收集系统相关信息。</span><br><span class=\"line\">system_capabilities: 收集系统能力信息。</span><br><span class=\"line\">system_capabilities_enforced: 收集系统能力强制信息。</span><br><span class=\"line\">user: 收集用户账户信息。</span><br><span class=\"line\">user_dir: 收集用户目录信息。</span><br><span class=\"line\">user_gecos: 收集用户 GECOS 信息。</span><br><span class=\"line\">user_gid: 收集用户组 ID 信息。</span><br><span class=\"line\">user_id: 收集用户 ID 信息。</span><br><span class=\"line\">user_shell: 收集用户 Shell 信息。</span><br><span class=\"line\">user_uid: 收集用户 UID 信息。</span><br><span class=\"line\">virtual: 收集虚拟化相关信息。</span><br><span class=\"line\">virtualization_role: 收集虚拟化角色信息。</span><br><span class=\"line\">virtualization_type: 收集虚拟化类型信息。</span><br></pre></td></tr></table></figure>\n<h3 id=\"command模块\">command模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html#ansible-collections-ansible-builtin-command-module\">command模块</a>为ansible默认模块，主要用于执行Linux基础命令，可以执行远程服务器命令执行、任务执行等操作。</p>\n</li>\n<li class=\"lvl-2\">\n<p>command模块不支持管道符号、变量，只能运行简单命令，复杂命令需要使用shell模块</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例1</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m <span class=\"built_in\">command</span> -a <span class=\"string\">&quot;df -hT&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># command.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上运行</span> <span class=\"string\">df</span> <span class=\"string\">-hT</span> <span class=\"string\">命令</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">执行</span> <span class=\"string\">df</span> <span class=\"string\">-hT</span> <span class=\"string\">命令</span></span><br><span class=\"line\">      <span class=\"attr\">command:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">&quot;df -hT&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">command_output</span> <span class=\"comment\"># 保存命令执行结果</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">显示命令输出</span></span><br><span class=\"line\">      <span class=\"attr\">debug:</span></span><br><span class=\"line\">        <span class=\"attr\">var:</span> <span class=\"string\">command_output.stdout_lines</span> <span class=\"comment\"># 输出命令执行结果</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例2：参数chdir：切换到指定目录后再运行命令</p>\n</li>\n</ul>\n<blockquote>\n<p>可以通过<code>ansible-doc -s command</code>查看其支持的参数</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m <span class=\"built_in\">command</span> -a <span class=\"string\">&quot;chdir=/tmp ls -l&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># command2.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上列出</span> <span class=\"string\">/tmp</span> <span class=\"string\">目录的内容</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">切换到</span> <span class=\"string\">/tmp</span> <span class=\"string\">目录并列出内容</span></span><br><span class=\"line\">      <span class=\"attr\">command:</span></span><br><span class=\"line\">        <span class=\"attr\">chdir:</span> <span class=\"string\">/tmp</span>       <span class=\"comment\"># 切换到 /tmp 目录</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">ls</span> <span class=\"string\">-l</span>        <span class=\"comment\"># 执行命令</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">command_output</span>  <span class=\"comment\"># 保存命令执行结果</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">显示命令输出</span></span><br><span class=\"line\">      <span class=\"attr\">debug:</span></span><br><span class=\"line\">        <span class=\"attr\">var:</span> <span class=\"string\">command_output.stdout_lines</span> <span class=\"comment\"># 输出命令执行结果</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明：<code>ansible-doc -s command</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>argv</td>\n<td>要执行的命令，可以是字符串形式或列表形式。</td>\n</tr>\n<tr>\n<td>chdir</td>\n<td>在执行命令之前切换到的目录。</td>\n</tr>\n<tr>\n<td>cmd</td>\n<td>要执行的命令。</td>\n</tr>\n<tr>\n<td>creates</td>\n<td>指定一个文件名或模式，如果匹配的文件已经存在，则不执行命令。</td>\n</tr>\n<tr>\n<td>expand_argument_vars</td>\n<td>是否展开作为变量的参数。默认为 true，表示展开变量。</td>\n</tr>\n<tr>\n<td>free_form</td>\n<td>以字符串形式指定要执行的命令。这个参数并不存在，但是 command 模块接受自由形式的字符串作为命令。</td>\n</tr>\n<tr>\n<td>removes</td>\n<td>指定一个文件名或模式，如果匹配的文件存在，则执行命令。</td>\n</tr>\n<tr>\n<td>stdin</td>\n<td>将命令的标准输入设置为指定的值。</td>\n</tr>\n<tr>\n<td>stdin_add_newline</td>\n<td>是否在标准输入数据后添加换行符。</td>\n</tr>\n<tr>\n<td>strip_empty_ends</td>\n<td>是否从标准输出的末尾剥离空行。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"shell模块\">shell模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html#ansible-collections-ansible-builtin-shell-module\">shell模块</a>与command模块类似，可以执行远程服务器命令执行、任务执行等操作，但是shell模块支持管道符号、变量，可以执行复杂命令</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看进程</span></span><br><span class=\"line\">ansible webservers -m shell -a <span class=\"string\">&quot;ps -ef | grep java | grep -v &#x27;grep&#x27;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改密码</span></span><br><span class=\"line\">ansible webservers -m shell -a <span class=\"string\">&quot; echo 123456 | passwd --stdin ansible&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># shell.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上查找</span> <span class=\"string\">Java</span> <span class=\"string\">进程</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">执行</span> <span class=\"string\">ps</span> <span class=\"string\">-ef</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">java</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">-v</span> <span class=\"string\">&#x27;grep&#x27;</span> <span class=\"string\">命令</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">ps</span> <span class=\"string\">-ef</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">java</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">-v</span> <span class=\"string\">&#x27;grep&#x27;</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">command_output</span>  <span class=\"comment\"># 保存命令执行结果</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">显示命令输出</span></span><br><span class=\"line\">      <span class=\"attr\">debug:</span></span><br><span class=\"line\">        <span class=\"attr\">var:</span> <span class=\"string\">command_output.stdout_lines</span> <span class=\"comment\"># 输出命令执行结果</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明：<code>ansible-doc -s shell</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>argv</td>\n<td>要执行的命令，可以是字符串形式或列表形式。</td>\n</tr>\n<tr>\n<td>chdir</td>\n<td>在执行命令之前切换到的目录。</td>\n</tr>\n<tr>\n<td>cmd</td>\n<td>要执行的命令。</td>\n</tr>\n<tr>\n<td>creates</td>\n<td>指定一个文件名或模式，如果匹配的文件已经存在，则不执行命令。</td>\n</tr>\n<tr>\n<td>executable</td>\n<td>用于执行命令的可执行程序，默认情况下为 /bin/sh。</td>\n</tr>\n<tr>\n<td>free_form</td>\n<td>以字符串形式指定要执行的命令。这个参数并不存在，但是 shell 模块接受自由形式的字符串作为命令。</td>\n</tr>\n<tr>\n<td>removes</td>\n<td>指定一个文件名或模式，如果匹配的文件存在，则执行命令。</td>\n</tr>\n<tr>\n<td>stdin</td>\n<td>将命令的标准输入设置为指定的值。</td>\n</tr>\n<tr>\n<td>stdin_add_newline</td>\n<td>是否在标准输入数据后添加换行符。</td>\n</tr>\n<tr>\n<td>strip_empty_ends</td>\n<td>是否从标准输出的末尾剥离空行。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"file模块\">file模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html#ansible-collections-ansible-builtin-file-module\">file模块</a>主要用于文件和目录的管理，可以创建、删除、修改文件和目录，可以指定文件或目录的属性，可以指定文件或目录的权限，可以指定文件或目录的owner、group、mode等信息，等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：创建目录</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m file -a <span class=\"string\">&quot;path=/tmp/`date +%F`  state=directory  mode=755&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># file.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上创建日期格式的目录</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">创建目录</span></span><br><span class=\"line\">      <span class=\"attr\">file:</span></span><br><span class=\"line\">        <span class=\"attr\">path:</span> <span class=\"string\">&quot;/tmp/<span class=\"template-variable\">&#123;&#123; ansible_date_time.date &#125;&#125;</span>&quot;</span> <span class=\"comment\"># ansible_date_time.date表示当前时间获取的日期，格式为YYYY-MM-DD</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">directory</span> <span class=\"comment\"># 创建目录，如果目录已经存在则不创建</span></span><br><span class=\"line\">        <span class=\"attr\">mode:</span> <span class=\"string\">&quot;755&quot;</span> <span class=\"comment\"># 设置目录权限</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明：<code>ansible-doc -s file</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>path</td>\n<td>文件或目录的路径。</td>\n</tr>\n<tr>\n<td>state</td>\n<td>文件或目录的状态。可选值包括 file（文件）、directory（目录）、link（符号链接）。默认为 file。</td>\n</tr>\n<tr>\n<td>owner</td>\n<td>文件或目录的所有者。</td>\n</tr>\n<tr>\n<td>group</td>\n<td>文件或目录的所属组。</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>文件或目录的权限。</td>\n</tr>\n<tr>\n<td>src</td>\n<td>源文件路径，用于复制文件或创建链接。</td>\n</tr>\n<tr>\n<td>dest</td>\n<td>目标文件路径，用于复制文件或创建链接。</td>\n</tr>\n<tr>\n<td>follow</td>\n<td>是否遵循符号链接。如果为 yes，则会遵循符号链接进行操作。默认为 yes。</td>\n</tr>\n<tr>\n<td>selevel</td>\n<td>文件或目录的 SELinux 安全上下文。</td>\n</tr>\n<tr>\n<td>serole</td>\n<td>文件或目录的 SELinux 角色。</td>\n</tr>\n<tr>\n<td>setype</td>\n<td>文件或目录的 SELinux 类型。</td>\n</tr>\n<tr>\n<td>seuser</td>\n<td>文件或目录的 SELinux 用户。</td>\n</tr>\n<tr>\n<td>unsafe_writes</td>\n<td>是否启用不安全的写入模式。如果为 yes，则在写入文件之前不会创建备份。默认为 no。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>这里重点说一下<code>state</code></p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file：表示要求目标主机上存在指定的文件。如果文件已经存在，则不执行任何操作；如果文件不存在，则会创建它。</span><br><span class=\"line\">directory：表示要求目标主机上存在指定的目录。如果目录已经存在，则不执行任何操作；如果目录不存在，则会创建它。</span><br><span class=\"line\">link：表示要求目标主机上存在指定的符号链接。如果符号链接已经存在，则不执行任何操作；如果符号链接不存在，则会创建它。</span><br><span class=\"line\">hard：创建硬链接</span><br><span class=\"line\">touch：如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间</span><br><span class=\"line\">absent：删除目录、文件或者取消链接文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"copy模块\">copy模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html#ansible-collections-ansible-builtin-copy-module\">copy模块</a>主要用于将文件复制到远程服务器，可以指定文件的源路径、目标路径、owner、group、mode等信息，等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：复制文件到指定目录</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -b 切换到root用户下执行</span></span><br><span class=\"line\">ansible webservers -m copy -a <span class=\"string\">&quot;src=/tmp/a.txt dest=/tmp/ owner=root group=root mode=755&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># copy.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上复制文件</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span> <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">复制文件</span></span><br><span class=\"line\">      <span class=\"attr\">copy:</span></span><br><span class=\"line\">        <span class=\"attr\">src:</span> <span class=\"string\">&quot;/tmp/a.txt&quot;</span> <span class=\"comment\"># 源文件路径</span></span><br><span class=\"line\">        <span class=\"attr\">dest:</span> <span class=\"string\">&quot;/tmp/&quot;</span>     <span class=\"comment\"># 目标文件路径</span></span><br><span class=\"line\">        <span class=\"attr\">owner:</span> <span class=\"string\">root</span>       <span class=\"comment\"># 指定文件owner</span></span><br><span class=\"line\">        <span class=\"attr\">group:</span> <span class=\"string\">root</span>       <span class=\"comment\"># 指定文件group</span></span><br><span class=\"line\">        <span class=\"attr\">mode:</span> <span class=\"string\">&quot;755&quot;</span>       <span class=\"comment\"># 指定文件权限</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明：<code>ansible-doc -s copy</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>源文件的路径。</td>\n</tr>\n<tr>\n<td>dest</td>\n<td>目标文件的路径。</td>\n</tr>\n<tr>\n<td>backup</td>\n<td>是否备份目标文件。如果为 yes，则在复制目标文件之前会创建一个备份文件。默认为 yes。</td>\n</tr>\n<tr>\n<td>content</td>\n<td>要写入目标文件的内容。</td>\n</tr>\n<tr>\n<td>directory_mode</td>\n<td>目标目录的权限。只有当目标是一个目录时才会生效。</td>\n</tr>\n<tr>\n<td>follow</td>\n<td>是否跟随符号链接。如果为 yes，则会跟随符号链接进行操作。默认为 yes。</td>\n</tr>\n<tr>\n<td>force</td>\n<td>是否强制覆盖目标文件。如果为 yes，则强制复制源文件，即使目标文件已经存在。默认为 no。</td>\n</tr>\n<tr>\n<td>group</td>\n<td>目标文件的所属组。</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>目标文件的权限。</td>\n</tr>\n<tr>\n<td>owner</td>\n<td>目标文件的所有者。</td>\n</tr>\n<tr>\n<td>remote_src</td>\n<td>指定源文件是否在远程主机上。如果为 yes，表示源文件在远程主机上。默认为 no。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"fetch模块\">fetch模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/fetch_module.html#ansible-collections-ansible-builtin-fetch-module\">fetch模块</a>主要用于将文件从远程服务器复制到本地，可以指定文件的源路径、目标路径、owner、group、mode等信息，等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：将文件从远程服务器复制到本地</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m fetch -a <span class=\"string\">&quot;src=/tmp/a.txt dest=/tmp/ flat=yes&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># fetch.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上将文件从远程服务器复制到本地</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">复制文件</span></span><br><span class=\"line\">      <span class=\"attr\">fetch:</span></span><br><span class=\"line\">        <span class=\"attr\">src:</span> <span class=\"string\">&quot;/tmp/a.txt&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">dest:</span> <span class=\"string\">&quot;/tmp/&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">flat:</span> <span class=\"literal\">yes</span> <span class=\"comment\"># flat: yes  # 将文件复制到dest目录下，不创建目录结构</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明：<code>ansible-doc -s fetch</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>远程主机上要拉取的文件的路径。</td>\n</tr>\n<tr>\n<td>dest</td>\n<td>本地主机上文件的目标路径。</td>\n</tr>\n<tr>\n<td>flat</td>\n<td>是否将文件放置在顶层目录中。如果为 yes，则所有文件都将放置在一个目录中。默认为 no。</td>\n</tr>\n<tr>\n<td>fail_on_missing</td>\n<td>如果为 yes，则在源文件不存在时失败。默认为 yes。</td>\n</tr>\n<tr>\n<td>validate_checksum</td>\n<td>是否验证远程文件的校验和。默认为 no。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"cron模块\">cron模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/cron_module.html#ansible-collections-ansible-builtin-cron-module\">cron模块</a>主要用于在远程服务器上创建、修改、删除定时任务</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：创建定时任务</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m cron -a <span class=\"string\">&#x27;name=&quot;restart httpd&quot; hour=*/5 job=&quot;systemctl restart httpd&quot;&#x27;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cron.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上创建定时任务</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">创建定时任务</span></span><br><span class=\"line\">      <span class=\"attr\">cron:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">&quot;restart httpd&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">hour:</span> <span class=\"string\">&quot;*/5&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">job:</span> <span class=\"string\">&quot;systemctl restart httpd&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明：<code>ansible-doc -s cron</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>cron 任务的名称。</td>\n</tr>\n<tr>\n<td>minute</td>\n<td>cron 任务执行的分钟。</td>\n</tr>\n<tr>\n<td>hour</td>\n<td>cron 任务执行的小时。</td>\n</tr>\n<tr>\n<td>day</td>\n<td>cron 任务执行的日期。</td>\n</tr>\n<tr>\n<td>month</td>\n<td>cron 任务执行的月份。</td>\n</tr>\n<tr>\n<td>weekday</td>\n<td>cron 任务执行的星期几。</td>\n</tr>\n<tr>\n<td>job</td>\n<td>要执行的命令或脚本。</td>\n</tr>\n<tr>\n<td>cron_file</td>\n<td>要操作的 cron 文件的路径。默认为 /etc/crontab。</td>\n</tr>\n<tr>\n<td>state</td>\n<td>cron 任务的状态。可选值包括 present（默认）和 absent。表示要求任务存在或不存在。</td>\n</tr>\n<tr>\n<td>user</td>\n<td>cron 任务的执行用户。默认为 root。</td>\n</tr>\n<tr>\n<td>backup</td>\n<td>是否备份 cron 文件。可选值包括 true 和 false。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>state</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">present：表示要求指定的 cron 任务存在。如果指定的 cron 任务不存在，则 Ansible 将会创建它。如果已经存在，则不执行任何操作。</span><br><span class=\"line\">absent：表示要求指定的 cron 任务不存在。如果指定的 cron 任务存在，则 Ansible 将会删除它。如果不存在，则不执行任何操作。</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum模块\">yum模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/yum_module.html#ansible-collections-ansible-builtin-yum-module\">yum模块</a>主要用于在远程服务器上安装、卸载、更新软件包，可以指定软件包的名称、版本、repo等信息，等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：安装软件包</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装软件包，相当于 yum install httpd</span></span><br><span class=\"line\">ansible webservers -m yum -a <span class=\"string\">&quot;name=httpd state=present&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># yum.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上安装</span> <span class=\"string\">httpd</span> <span class=\"string\">软件包</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装</span> <span class=\"string\">httpd</span> <span class=\"string\">软件包</span></span><br><span class=\"line\">      <span class=\"attr\">yum:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">httpd</span> <span class=\"comment\"># 软件包名称，相当于 yum install httpd</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span> <span class=\"comment\"># 安装软件包，如果软件包已经安装则不安装</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明:<code>ansible-doc -s yum</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>指定要操作的包的名称。</td>\n</tr>\n<tr>\n<td>update_cache</td>\n<td>指定是否在执行操作之前更新 yum 缓存。可选值为 <code>yes</code> 或 <code>no</code>。默认为 <code>yes</code>。</td>\n</tr>\n<tr>\n<td>disable_gpg_check</td>\n<td>指定是否禁用 GPG 检查。如果为 <code>yes</code>，则禁用 GPG 检查。默认为 <code>no</code>。</td>\n</tr>\n<tr>\n<td>disable_plugin</td>\n<td>指定是否禁用指定的 yum 插件。可以是一个插件名称的列表。</td>\n</tr>\n<tr>\n<td>enablerepo</td>\n<td>指定要启用的仓库。可以是一个仓库名称的列表。</td>\n</tr>\n<tr>\n<td>disablerepo</td>\n<td>指定要禁用的仓库。可以是一个仓库名称的列表。</td>\n</tr>\n<tr>\n<td>installroot</td>\n<td>指定要安装软件包的根目录。</td>\n</tr>\n<tr>\n<td>security</td>\n<td>指定是否只安装安全更新。如果为 <code>yes</code>，则只安装安全更新。默认为 <code>no</code>。</td>\n</tr>\n<tr>\n<td>list</td>\n<td>指定是否列出所有已安装的包。如果为 <code>yes</code>，则列出已安装的包。默认为 <code>no</code>。</td>\n</tr>\n<tr>\n<td>state</td>\n<td>指定软件包的状态。可选值为 <code>present</code>、<code>latest</code>、<code>absent</code>、<code>installed</code>、<code>removed</code>。默认为 <code>present</code>。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>这里重点说一下<code>state</code></p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">present: 表示要求目标主机上存在指定的软件包。如果软件包已经安装，则不执行任何操作；如果软件包未安装，则会安装它。</span><br><span class=\"line\">latest: 表示要求目标主机上存在指定的软件包，并且希望保持为最新版本。如果软件包已经安装，但不是最新版本，则会更新到最新版本；如果软件包未安装，则会安装最新版本。</span><br><span class=\"line\">absent: 表示要求目标主机上不存在指定的软件包。如果软件包已安装，则会将其卸载；如果软件包未安装，则不执行任何操作。</span><br><span class=\"line\">installed: 与 present 意义相同，用于明确表达希望软件包已经安装在目标主机上。</span><br><span class=\"line\">removed: 与 absent 意义相同，用于明确表达希望软件包已从目标主机上卸载。</span><br></pre></td></tr></table></figure>\n<h3 id=\"service模块-调用的是service命令\">service模块:调用的是<code>service</code>命令</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html#ansible-collections-ansible-builtin-service-module\">service模块</a>主要用于在远程服务器上启动、停止、重启、重新加载、启用、禁用、检查服务，可以指定服务的名称、状态、启动方式等信息，等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：启动服务</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m service -a <span class=\"string\">&quot;name=httpd state=started&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># service.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上启动</span> <span class=\"string\">httpd</span> <span class=\"string\">服务</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">启动</span> <span class=\"string\">httpd</span> <span class=\"string\">服务</span></span><br><span class=\"line\">      <span class=\"attr\">service:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">httpd</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">started</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明:<code>ansible-doc -s service</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>服务的名称。</td>\n</tr>\n<tr>\n<td>state</td>\n<td>服务的状态。可选值包括 started（已启动）、stopped（已停止）、restarted（已重启）。</td>\n</tr>\n<tr>\n<td>enabled</td>\n<td>是否在启动时自动启用服务。如果为 yes，则在系统启动时自动启动服务。默认为 yes。</td>\n</tr>\n<tr>\n<td>pattern</td>\n<td>匹配服务的模式。默认情况下为服务名称。</td>\n</tr>\n<tr>\n<td>sleep</td>\n<td>在重新启动服务之前等待的秒数。</td>\n</tr>\n<tr>\n<td>arguments</td>\n<td>启动或停止服务时要传递的参数。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>state</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">started：表示要求服务处于已启动状态。如果指定的服务未启动，则 Ansible 将尝试启动该服务。如果服务已经处于运行状态，则不执行任何操作。</span><br><span class=\"line\">stopped：表示要求服务处于已停止状态。如果指定的服务正在运行，则 Ansible 将尝试停止该服务。如果服务已经停止，则不执行任何操作。</span><br><span class=\"line\">restarted：表示要求重启服务。无论服务当前处于运行状态还是停止状态，Ansible 都会尝试重新启动该服务。</span><br></pre></td></tr></table></figure>\n<h3 id=\"systemd模块-支持centos7-，调用的是systemctl\">systemd模块:支持<code>centos7+</code>，调用的是<code>systemctl</code></h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_service_module.html#ansible-collections-ansible-builtin-systemd-service-module\">systemd模块</a>用于控制 systemd 后台服务，允许你启动、重新启动、停止或者重新加载 systemd 服务。此外，你也可以使用它来使服务在系统启动时自动启动或禁止自动启动。除此之外，systemd 模块还允许你检查服务的状态。</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m systemd -a <span class=\"string\">&quot;name=httpd state=restarted&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># systemd.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上重新启动</span> <span class=\"string\">httpd</span> <span class=\"string\">服务</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">重新启动</span> <span class=\"string\">httpd</span> <span class=\"string\">服务</span></span><br><span class=\"line\">      <span class=\"attr\">systemd:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">httpd</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">restarted</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>主要参数说明：<code>ansible-doc -s systemd</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>enabled</td>\n<td>指定服务是否应该在启动时自动启用。可选值为 yes 或 no。默认为 yes。</td>\n</tr>\n<tr>\n<td>masked</td>\n<td>指定服务是否应该被置为 masked 状态，禁止手动启动。可选值为 yes 或 no。默认为 no。</td>\n</tr>\n<tr>\n<td>name</td>\n<td>服务的名称。</td>\n</tr>\n<tr>\n<td>state</td>\n<td>指定服务的状态。可选值为 started（启动）、stopped（停止）、restarted（重新启动）、reloaded（重新加载）</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"script模块\">script模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/script_module.html#ansible-collections-ansible-builtin-script-module\">script模块</a>主要用于在远程服务器上执行本地的脚本</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：执行脚本</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m script -a <span class=\"string\">&quot;chdir=/tmp /tmp/a.sh&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># script.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">web</span> <span class=\"string\">服务器上运行脚本</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">在</span> <span class=\"string\">/tmp</span> <span class=\"string\">目录中运行脚本</span></span><br><span class=\"line\">      <span class=\"attr\">script:</span></span><br><span class=\"line\">        <span class=\"attr\">chdir:</span> <span class=\"string\">/tmp</span> <span class=\"comment\"># 指定脚本的执行目录</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">/tmp/a.sh</span> <span class=\"comment\"># 本地脚本的路径</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明:<code>ansible-doc -s script</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chdir</td>\n<td>在远程主机上执行脚本之前切换到的目录。</td>\n</tr>\n<tr>\n<td>free_form</td>\n<td>要在远程主机上执行的脚本内容。</td>\n</tr>\n<tr>\n<td>creates</td>\n<td>如果指定的文件已经存在，则不执行脚本。</td>\n</tr>\n<tr>\n<td>executable</td>\n<td>指定要使用的脚本解释器。</td>\n</tr>\n<tr>\n<td>removes</td>\n<td>在执行脚本之后，如果指定的文件存在，则删除该文件。</td>\n</tr>\n<tr>\n<td>cmd</td>\n<td>指定要执行的命令。</td>\n</tr>\n<tr>\n<td>decrypt</td>\n<td>指定要解密的源文件。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"user模块\">user模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/user_module.html#ansible-collections-ansible-builtin-user-module\">user模块</a>主要用于在远程服务器上创建、修改、删除用户，可以指定用户的名称、密码、uid、gid、home、shell等信息，等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：创建用户</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m user -a <span class=\"string\">&quot;name=nginx group=nginx shell=/sbin/nologin create_home=no&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># user.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">创建用户</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">添加用户</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">      <span class=\"attr\">user:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">nginx</span> <span class=\"comment\"># 用户名称</span></span><br><span class=\"line\">        <span class=\"attr\">shell:</span> <span class=\"string\">/sbin/nologin</span> <span class=\"comment\"># 指定用户shell,非登录用户</span></span><br><span class=\"line\">        <span class=\"attr\">createhome:</span> <span class=\"literal\">no</span> <span class=\"comment\"># 不创建用户主目录</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数说明:<code>ansible-doc -s user</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>append</td>\n<td>是否将用户添加到现有组，而不是替换组。</td>\n</tr>\n<tr>\n<td>comment</td>\n<td>对用户的注释信息。</td>\n</tr>\n<tr>\n<td>createhome</td>\n<td>是否创建用户的家目录。</td>\n</tr>\n<tr>\n<td>expires</td>\n<td>用户帐户过期日期。</td>\n</tr>\n<tr>\n<td>force</td>\n<td>是否强制创建或更改用户帐户。</td>\n</tr>\n<tr>\n<td>generate_ssh_key</td>\n<td>是否生成用户的 SSH 密钥对。</td>\n</tr>\n<tr>\n<td>group</td>\n<td>用户所属组的名称或 ID。</td>\n</tr>\n<tr>\n<td>groups</td>\n<td>用户所属的其他组。</td>\n</tr>\n<tr>\n<td>home</td>\n<td>用户的家目录路径。</td>\n</tr>\n<tr>\n<td>login_class</td>\n<td>用户登录类。</td>\n</tr>\n<tr>\n<td>move_home</td>\n<td>是否在更改用户家目录路径时移动其内容。</td>\n</tr>\n<tr>\n<td>name</td>\n<td>用户的名称。</td>\n</tr>\n<tr>\n<td>non_unique</td>\n<td>允许用户具有非唯一的数字 ID。</td>\n</tr>\n<tr>\n<td>password</td>\n<td>用户的密码哈希值或加密后的密码。</td>\n</tr>\n<tr>\n<td>remove</td>\n<td>是否删除用户。</td>\n</tr>\n<tr>\n<td>shell</td>\n<td>用户的 shell。</td>\n</tr>\n<tr>\n<td>state</td>\n<td>用户帐户的状态。</td>\n</tr>\n<tr>\n<td>system</td>\n<td>是否为系统用户。</td>\n</tr>\n<tr>\n<td>uid</td>\n<td>用户的数字 ID。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>state</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">present：表示要求指定的用户账户存在。如果指定的用户账户不存在，则 Ansible 将会创建该账户。如果用户账户已经存在，则不执行任何操作。</span><br><span class=\"line\">absent：表示要求指定的用户账户不存在。如果指定的用户账户存在，则 Ansible 将会删除该账户。如果用户账户不存在，则不执行任何操作。</span><br></pre></td></tr></table></figure>\n<h3 id=\"get-url模块\">get_url模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/get_url_module.html#ansible-collections-ansible-builtin-get-url-module\">get_url模块</a>负责下载文件到目标主机。</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m get_url -a <span class=\"string\">&quot;url=https://www.example.com dest=/tmp&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># get_url.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">下载文件到目标主机的指定目录</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Download</span> <span class=\"string\">files</span> <span class=\"string\">from</span> <span class=\"string\">remote</span> <span class=\"string\">host</span></span><br><span class=\"line\">      <span class=\"attr\">get_url:</span></span><br><span class=\"line\">        <span class=\"attr\">url:</span> <span class=\"string\">https://www.example.com/file.conf</span></span><br><span class=\"line\">        <span class=\"attr\">dest:</span> <span class=\"string\">/tmp</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>主要参数说明:<code>ansible-doc -s get_url</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>要下载的文件的 URL 地址。</td>\n</tr>\n<tr>\n<td>dest</td>\n<td>下载文件保存的目标路径。</td>\n</tr>\n<tr>\n<td>force</td>\n<td>是否强制覆盖目标路径中的文件。可选值为 yes 或 no。默认为 yes。</td>\n</tr>\n<tr>\n<td>timeout</td>\n<td>下载超时时间，单位为秒。默认为 10 秒。</td>\n</tr>\n<tr>\n<td>validate_certs</td>\n<td>是否验证 SSL 证书。可选值为 yes 或 no。默认为 yes。</td>\n</tr>\n<tr>\n<td>owner</td>\n<td>下载后文件的所有者。</td>\n</tr>\n<tr>\n<td>group</td>\n<td>下载后文件的所属组。</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>下载后文件的权限模式。</td>\n</tr>\n<tr>\n<td>backup</td>\n<td>是否创建备份文件。可选值为 yes 或 no。默认为 no。</td>\n</tr>\n<tr>\n<td>headers</td>\n<td>附加的 HTTP 请求头。</td>\n</tr>\n<tr>\n<td>force_basic_auth</td>\n<td>是否强制使用 HTTP 基本身份验证。可选值为 yes 或 no。默认为 yes。</td>\n</tr>\n<tr>\n<td>http_agent</td>\n<td>用于 HTTP 请求的代理。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"lineinfile模块\">lineinfile模块</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html#ansible-collections-ansible-builtin-lineinfile-module\">lineinfile模块</a>主要用于在远程主机上查找和替换文件中的行，可以指定要查找的行、要替换的行、要添加的行等信息，等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：设置环境变量，需要注意的是此时环境变量在剧本的上下文中是不生效的，如果需要在剧本上下文生效的环境变量，可以使用 <code>shell</code> 模块</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible webservers -m lineinfile -a <span class=\"string\">&quot;path=/etc/profile line=&#x27;PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin&#x27; state=present backup=yes&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># lineinfile.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">设置环境变量</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">设置环境变量</span></span><br><span class=\"line\">      <span class=\"attr\">lineinfile:</span></span><br><span class=\"line\">        <span class=\"attr\">path:</span> <span class=\"string\">/etc/profile</span></span><br><span class=\"line\">        <span class=\"attr\">line:</span> <span class=\"string\">&#x27;PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">        <span class=\"attr\">backup:</span> <span class=\"literal\">yes</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>主要参数说明:<code>ansible-doc -s lineinfile</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>path</td>\n<td>要修改的文件的路径。</td>\n</tr>\n<tr>\n<td>line</td>\n<td>要添加、修改或删除的行内容。</td>\n</tr>\n<tr>\n<td>state</td>\n<td>指定要执行的操作。</td>\n</tr>\n<tr>\n<td>regexp</td>\n<td>用于匹配行的正则表达式。</td>\n</tr>\n<tr>\n<td>search_string</td>\n<td>用于匹配行的字符串。</td>\n</tr>\n<tr>\n<td>backup</td>\n<td>是否创建备份文件。可选值为 yes 或 no。默认为 no。</td>\n</tr>\n<tr>\n<td>backrefs</td>\n<td>是否允许在 <code>regexp</code> 中使用反向引用。</td>\n</tr>\n<tr>\n<td>insertbefore</td>\n<td>指定一个行，将新行插入到它之前。</td>\n</tr>\n<tr>\n<td>insertafter</td>\n<td>指定一个行，将新行插入到它之后。</td>\n</tr>\n<tr>\n<td>firstmatch</td>\n<td>是否只匹配第一个匹配项。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>state说明</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">present：确保指定的行存在于文件中。如果文件中不存在指定的行，则会添加该行。如果文件中已经存在该行，则不做任何改变。</span><br><span class=\"line\">absent：确保指定的行不存在于文件中。如果文件中存在指定的行，则会将该行删除。如果文件中不存在该行，则不做任何改变。</span><br></pre></td></tr></table></figure>\n<h2 id=\"ansible-playbook-剧本\">ansible-playbook:剧本</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://docs.ansible.com/ansible/latest/cli/ansible-playbook.html#ansible-playbook\">ansible-playbook</a>是Ansible的核心命令，用于执行playbook文件，playbook文件是Ansible执行任务的最小单元，一个playbook文件可以包含多个play，每个play可以包含多个task，每个task可以包含多个module，每个module可以执行一个操作，比如创建目录、安装软件包、启动服务、执行脚本等</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://ansible-tran.readthedocs.io/en/latest/docs/playbooks_intro.html\">Ansible中文全文指南–Playbooks</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>上面在介绍ansible模块时，我们已经编写了一些playbook文件，就是那些yml文件，运行时也是通过ansible-playbook命令执行的，但是基本上都是单个任务单个模块，下面我们来看一个复杂一些的示例</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例：安装nginx并配置</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># playbook.yml</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装nginx并配置</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span>  <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">install</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">      <span class=\"attr\">yum:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">gcc,zlib-devel,pcre-devel,openssl-devel</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">installed</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">wget</span> <span class=\"string\">nginx</span> <span class=\"string\">tar.gz</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">wget</span> <span class=\"string\">https://nginx.org/download/nginx-1.22.1.tar.gz</span></span><br><span class=\"line\">        <span class=\"attr\">chdir:</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">tar</span> <span class=\"string\">-zxvf</span> <span class=\"string\">nginx-1.22.1.tar.gz</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">tar</span> <span class=\"string\">-zxvf</span> <span class=\"string\">nginx-1.22.1.tar.gz</span></span><br><span class=\"line\">        <span class=\"attr\">chdir:</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">add</span> <span class=\"string\">user</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">      <span class=\"attr\">user:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">        <span class=\"attr\">shell:</span> <span class=\"string\">/sbin/nologin</span></span><br><span class=\"line\">        <span class=\"attr\">createhome:</span> <span class=\"literal\">no</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">configure</span> <span class=\"string\">,make</span> <span class=\"string\">and</span> <span class=\"string\">make</span> <span class=\"string\">install</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">cd</span> <span class=\"string\">nginx-1.22.1;./configure</span> <span class=\"string\">--prefix=/usr/local/nginx</span> <span class=\"string\">--with-http_stub_status_module</span> <span class=\"string\">--with-http_ssl_module</span> <span class=\"string\">--user=nginx;make</span> <span class=\"string\">-j4;make</span> <span class=\"string\">-j4</span> <span class=\"string\">install;</span></span><br><span class=\"line\">        <span class=\"attr\">chdir:</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">start</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">/usr/local/nginx/sbin/nginx</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>优化1</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>问题</strong>: 上面的剧本有个问题，就是如果系统已经安装了nginx，则运行这个剧本还是会重新安装<br>\n<strong>解决方法</strong>: 先判断nginx是否已经安装，如果已经安装，直接跳过安装步骤，直接执行启动命令，否则执行安装步骤，然后再执行启动命令</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装nginx并配置</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span>  <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查系统是否已安装Nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">/usr/local/nginx/sbin/nginx</span> <span class=\"string\">-v</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">nginx_installed</span></span><br><span class=\"line\">      <span class=\"attr\">ignore_errors:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">      <span class=\"attr\">yum:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">      <span class=\"attr\">loop:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">gcc</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">pcre-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl-devel</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_installed.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span>  <span class=\"comment\"># 只有当Nginx未安装时执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查系统是否已启动Nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">ps</span> <span class=\"string\">aux</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">nginx</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">-v</span> <span class=\"string\">grep</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">nginx_status</span></span><br><span class=\"line\">      <span class=\"attr\">ignore_errors:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">下载Nginx源码包</span></span><br><span class=\"line\">      <span class=\"attr\">get_url:</span></span><br><span class=\"line\">        <span class=\"attr\">url:</span> <span class=\"string\">https://nginx.org/download/nginx-1.22.1.tar.gz</span></span><br><span class=\"line\">        <span class=\"attr\">dest:</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_installed.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span>  <span class=\"comment\"># 只有当Nginx未安装时执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">解压Nginx源码包</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">tar</span> <span class=\"string\">-zxvf</span> <span class=\"string\">nginx-1.22.1.tar.gz</span></span><br><span class=\"line\">        <span class=\"attr\">chdir:</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_installed.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span>  <span class=\"comment\"># 只有当Nginx未安装时执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\">      <span class=\"attr\">user:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">        <span class=\"attr\">shell:</span> <span class=\"string\">/sbin/nologin</span></span><br><span class=\"line\">        <span class=\"attr\">createhome:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">编译Nginx并安装</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          cd nginx-1.22.1</span></span><br><span class=\"line\"><span class=\"string\">          ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class=\"line\"><span class=\"string\">          make -j4</span></span><br><span class=\"line\"><span class=\"string\">          make -j4 install</span></span><br><span class=\"line\"><span class=\"string\"></span>        <span class=\"attr\">chdir:</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_installed.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span>  <span class=\"comment\"># 只有当Nginx未安装时执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">/usr/local/nginx/sbin/nginx</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_status.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span>  <span class=\"comment\"># 只有当Nginx未启动时执行</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>register :用于将命令执行的结果保存到变量中，我们可以调用变量的属性，比如rc表示命令返回的状态码($?)，stdout表示命令的输出，stderr表示命令的错误输出<br>\nignore_errors :用于忽略错误<br>\nloop :用于循环列表<br>\nwhen :用于判断条件，只有条件满足时才执行</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>优化2</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>问题</strong>: 上面的步骤有点多，比如下载、解压、编译nginx，这些都是在没有安装nginx的情况下要运行的任务<br>\n<strong>解决方法</strong>: 使用shell模块可以将这些步骤封装成一个任务</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装nginx并配置</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span>  <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查系统是否已安装Nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">/usr/local/nginx/sbin/nginx</span> <span class=\"string\">-v</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">nginx_installed</span></span><br><span class=\"line\">      <span class=\"attr\">ignore_errors:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">      <span class=\"attr\">yum:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">      <span class=\"attr\">loop:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">gcc</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">pcre-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl-devel</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_installed.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span>  <span class=\"comment\"># 只有当Nginx未安装时执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查系统是否已启动Nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">ps</span> <span class=\"string\">aux</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">nginx</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">-v</span> <span class=\"string\">grep</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">nginx_status</span></span><br><span class=\"line\">      <span class=\"attr\">ignore_errors:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\">      <span class=\"attr\">user:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">        <span class=\"attr\">shell:</span> <span class=\"string\">/sbin/nologin</span></span><br><span class=\"line\">        <span class=\"attr\">createhome:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Nginx并安装</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          wget https://nginx.org/download/nginx-1.22.1.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">          tar -zxvf nginx-1.22.1.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">          cd nginx-1.22.1</span></span><br><span class=\"line\"><span class=\"string\">          ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class=\"line\"><span class=\"string\">          make -j4</span></span><br><span class=\"line\"><span class=\"string\">          make -j4 install</span></span><br><span class=\"line\"><span class=\"string\"></span>        <span class=\"attr\">chdir:</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_installed.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span>  <span class=\"comment\"># 只有当Nginx未安装时执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">/usr/local/nginx/sbin/nginx</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_status.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span>  <span class=\"comment\"># 只有当Nginx未启动时执行</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>优化3</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>问题</strong>: 上面的剧本虽然已经满足了我的需求，但是不够简练，因为很多任务并不是主要任务，我需要在每个任务中进行条件判断来决定是否执行该任务，能否只保留主要任务，其它任务只有当这些主要任务成功运行了才会被运行呢？比如这里的主要任务就是两个：1-判断是否安装了nginx，没安装就去安装，2-判断是否启动了nginx，没启动就去启动<br>\n<strong>解决方法</strong>: 使用基于handlers的notify语句，这样可以减少重复执行任务的次数</p>\n</blockquote>\n<blockquote>\n<p><strong>何为handlers</strong><br>\nHandler 本身是一种非同步的 callback function ，在这里则是指关连于特定 tasks 的事件 (event) 触发机制。当关联 handler 的 tasks 状态为被改变 (changed) 且都已被执行时，才会触发一次</p>\n</blockquote>\n<blockquote>\n<p><strong>何为 tasks 状态为被改变 (changed)</strong><br>\n在Ansible中，task的状态会根据任务执行的结果而改变。当一个任务成功完成并且使得系统的状态与预期不同（即执行了一些更改），那么这个任务的状态就会被标记为&quot;changed&quot;。<br>\n具体来说，task状态为&quot;changed&quot;的条件包括但不限于以下情况：</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件变更：例如复制、创建、删除文件等操作导致了文件系统的变更。</span><br><span class=\"line\">服务状态变更：例如启动、停止、重启服务等操作导致了服务状态的改变。</span><br><span class=\"line\">配置更改：例如修改配置文件、添加配置项等操作导致了系统配置的改变。</span><br><span class=\"line\">软件包安装/卸载：例如安装新的软件包或者删除已安装的软件包导致了系统软件状态的改变。</span><br><span class=\"line\">权限变更：例如修改文件权限、更改用户组、更改用户等操作导致了系统权限的改变。</span><br><span class=\"line\">当一个或多个任务的状态被标记为&quot;changed&quot;时，与这些任务关联的handlers会被触发执行。这样可以确保在所有相关的任务都完成并且导致了系统状态的改变时，才执行后续的处理操作，从而保证了任务的一致性和可靠性。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装nginx并配置</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span>  <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">判断是否存在nginx安装目录，不存在就安装nginx</span></span><br><span class=\"line\">      <span class=\"attr\">file:</span></span><br><span class=\"line\">        <span class=\"attr\">path:</span> <span class=\"string\">/usr/local/nginx</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">directory</span></span><br><span class=\"line\">      <span class=\"attr\">notify:</span>  <span class=\"comment\"># 执行通知任务，顺序为从下到上</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Nginx安装</span> <span class=\"comment\"># 匹配任务name</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查系统是否已启动Nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">ps</span> <span class=\"string\">aux</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">nginx</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">-v</span> <span class=\"string\">grep</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">nginx_status</span></span><br><span class=\"line\">      <span class=\"attr\">ignore_errors:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查是否需要启动nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">echo</span> <span class=\"string\">&quot;start nginx&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_status.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span> <span class=\"comment\"># 只有当条件满足时才会运行该任务</span></span><br><span class=\"line\">      <span class=\"attr\">notify:</span>  <span class=\"comment\"># 运行任务后只有状态为changed才会发送notify给handler</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">handlers:</span>  <span class=\"comment\"># handlers是一类特殊任务，当有notify时，会自动执行该任务</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\">      <span class=\"attr\">user:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">        <span class=\"attr\">shell:</span> <span class=\"string\">/sbin/nologin</span></span><br><span class=\"line\">        <span class=\"attr\">createhome:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">      <span class=\"attr\">yum:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">      <span class=\"attr\">loop:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">gcc</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">pcre-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl-devel</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Nginx安装</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          wget https://nginx.org/download/nginx-1.22.1.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">          tar -zxvf nginx-1.22.1.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">          cd nginx-1.22.1</span></span><br><span class=\"line\"><span class=\"string\">          ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class=\"line\"><span class=\"string\">          make -j4</span></span><br><span class=\"line\"><span class=\"string\">          make -j4 install</span></span><br><span class=\"line\"><span class=\"string\"></span>        <span class=\"attr\">chdir:</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">/usr/local/nginx/sbin/nginx</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>优化4</p>\n</li>\n</ul>\n<blockquote>\n<p><strong>问题</strong>: 上面的剧本中nginx的安装版本和安装路径都是写死的，能否动态配置呢？<br>\n<strong>解决方法</strong>: 提取变量，使用vars</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装nginx并配置</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span>  <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">vars:</span> <span class=\"comment\"># 定义变量</span></span><br><span class=\"line\">    <span class=\"attr\">nginx_version:</span> <span class=\"string\">&quot;1.22.1&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">work_dir:</span> <span class=\"string\">&quot;/usr/local&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">nginx_install_path:</span> <span class=\"string\">&quot;/usr/local/nginx&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">判断是否存在nginx安装目录，不存在就安装nginx</span></span><br><span class=\"line\">      <span class=\"attr\">file:</span></span><br><span class=\"line\">        <span class=\"attr\">path:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>&quot;</span> <span class=\"comment\"># 变量一定要双括号</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">directory</span></span><br><span class=\"line\">      <span class=\"attr\">notify:</span>  <span class=\"comment\"># 执行通知任务，顺序为从下到上</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Nginx安装</span> <span class=\"comment\"># 匹配任务name</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查系统是否已启动Nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">ps</span> <span class=\"string\">aux</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">nginx</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">-v</span> <span class=\"string\">grep</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">nginx_status</span></span><br><span class=\"line\">      <span class=\"attr\">ignore_errors:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查是否需要启动nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">echo</span> <span class=\"string\">&quot;start nginx&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_status.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span></span><br><span class=\"line\">      <span class=\"attr\">notify:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">handlers:</span>  <span class=\"comment\"># handlers是一类特殊任务，当有notify时，会自动执行该任务</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\">      <span class=\"attr\">user:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">        <span class=\"attr\">shell:</span> <span class=\"string\">/sbin/nologin</span></span><br><span class=\"line\">        <span class=\"attr\">createhome:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">      <span class=\"attr\">yum:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">      <span class=\"attr\">loop:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">gcc</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">pcre-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl-devel</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Nginx安装</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          wget https://nginx.org/download/nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">          tar -zxvf nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">          cd nginx-&#123;&#123; nginx_version &#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">          ./configure --prefix=&#123;&#123; nginx_install_path &#125;&#125; --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class=\"line\"><span class=\"string\">          make -j4</span></span><br><span class=\"line\"><span class=\"string\">          make -j4 install</span></span><br><span class=\"line\"><span class=\"string\"></span>        <span class=\"attr\">chdir:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; work_dir &#125;&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>/sbin/nginx&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认</span></span><br><span class=\"line\">ansible-playbook nginx.yml</span><br><span class=\"line\"><span class=\"comment\"># 修改变量</span></span><br><span class=\"line\">ansible-playbook nginx.yml -e <span class=\"string\">&quot;nginx_version=1.24.0&quot;</span> -e <span class=\"string\">&quot;work_dir=/root&quot;</span></span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">除了我们自己定义的变量，我们也可以使用Ansible内置的变量，Ansible内置的变量可以参考<a href=\"https://docs.ansible.com/ansible/latest/reference_appendices/special_variables.html\">官方文档</a>。</li>\n<li class=\"lvl-2\">我们用的最多的就是<code>ansible_facts</code>变量获取主机信息，如IP地址、MAC地址、操作系统版本等。也就是通过<code>setup</code>模块获取的信息。</li>\n<li class=\"lvl-2\">在使用<code>ansible_facts</code>变量时需要开启<code>gather_facts</code>选项，默认是开启的。</li>\n<li class=\"lvl-2\">常用的<code>ansible_facts</code>变量如下，注意这里属性名称前是不加<code>ansible_</code>前缀的：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible_facts[&#x27;distribution&#x27;]: 远程主机的操作系统分发名称。</span><br><span class=\"line\">ansible_facts[&#x27;distribution_version&#x27;]: 远程主机的操作系统版本号。</span><br><span class=\"line\">ansible_facts[&#x27;user_id&#x27;]: 远程主机上当前用户的用户 ID。</span><br></pre></td></tr></table></figure>\n</div>\n<h2 id=\"ansible-playbook-Template\">ansible-playbook:Template</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Ansible Playbook Template是一种Ansible的特性，它允许您在Playbook中使用<code>Jinja2</code>模板语言来动态生成配置文件或其他文本文件。通过使用模板，您可以根据变量、条件、循环等动态信息来生成目标文件，从而使配置文件更具可扩展性和灵活性。</p>\n</li>\n<li class=\"lvl-2\">\n<p>下面是使用Ansible Playbook Template的一些常见用法和特性：</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Jinja2模板语言: Ansible Playbook Template使用Jinja2模板语言，这是一种功能强大的模板引擎，支持变量替换、条件语句、循环语句等功能。</span><br><span class=\"line\">变量替换: 您可以在模板中使用Ansible的变量来替换文本中的占位符。这使得您可以根据不同的环境或条件生成不同的配置文件。</span><br><span class=\"line\">条件语句: 您可以在模板中使用条件语句来根据不同的条件生成不同的文本。这允许您根据需要灵活地调整生成的配置文件。</span><br><span class=\"line\">循环语句: 您可以在模板中使用循环语句来对列表或字典中的元素进行迭代，从而生成重复的文本块。</span><br><span class=\"line\">包含其他模板文件: 您可以在一个模板中包含其他模板文件，从而使模板更加模块化和易于管理。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Jinja2模板文件后缀为<code>.j2</code>，常用语法如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打印变量</span></span><br><span class=\"line\">&#123;&#123; index_title &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for循环</span></span><br><span class=\"line\">&#123;% <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> index_for_array %&#125;</span><br><span class=\"line\">&lt;p&gt;show &#123;&#123; key &#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">&#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># if判断</span></span><br><span class=\"line\">&#123;% <span class=\"keyword\">if</span> blog_href_show %&#125;</span><br><span class=\"line\">&lt;p&gt;</span><br><span class=\"line\">&lt;a href=<span class=\"string\">&quot;&#123;&#123; blog_href &#125;&#125;&quot;</span>&gt;&#123;&#123; index_title &#125;&#125;&lt;/a&gt;.&lt;br/&gt;</span><br><span class=\"line\">&lt;/p&gt;</span><br><span class=\"line\">&lt;p&gt;&lt;em&gt;Thank you <span class=\"keyword\">for</span> using &#123;&#123; index_title &#125;&#125;.&lt;/em&gt;&lt;/p&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>结合上面部署nginx的示例，我这里增加一个任务，就是替换nginx发布目录下的index.html，然后重启nginx，这里给出<code>index.html.j2</code></p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>&#123;&#123; index_title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">html</span> &#123; <span class=\"attribute\">color-scheme</span>: light dark; &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">body</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">35em</span>; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"attribute\">font-family</span>: Tahoma, Verdana, Arial, sans-serif; &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello World!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;&#123;&#123; blog_img &#125;&#125;&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% for key in index_for_array %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>show &#123;&#123; key &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">&#123;% endfor %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if blog_href_show %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; blog_href &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; index_title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>.<span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>Thank you for using &#123;&#123; index_title &#125;&#125;.<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>接着我们修改剧本yml</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装nginx并配置</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span>  <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">vars:</span> <span class=\"comment\"># 定义变量</span></span><br><span class=\"line\">    <span class=\"attr\">nginx_version:</span> <span class=\"string\">&quot;1.22.1&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">work_dir:</span> <span class=\"string\">&quot;/usr/local&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">nginx_install_path:</span> <span class=\"string\">&quot;/usr/local/nginx&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">index_title:</span> <span class=\"string\">&quot;hanqf&#x27;s blog&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">index_for_array:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">hello</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">world</span></span><br><span class=\"line\">    <span class=\"attr\">blog_href_show:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">blog_href:</span> <span class=\"string\">&quot;https://blog.hanqunfeng.com&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">blog_img:</span> <span class=\"string\">&quot;me.png&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">tasks:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">判断是否存在nginx安装目录，不存在就安装nginx</span></span><br><span class=\"line\">      <span class=\"attr\">file:</span></span><br><span class=\"line\">        <span class=\"attr\">path:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>&quot;</span> <span class=\"comment\"># 变量一定要双括号</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">directory</span></span><br><span class=\"line\">      <span class=\"attr\">notify:</span>  <span class=\"comment\"># 执行通知任务，顺序为从下到上</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">Nginx安装</span> <span class=\"comment\"># 匹配任务name</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查系统是否已启动Nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">ps</span> <span class=\"string\">aux</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">nginx</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">-v</span> <span class=\"string\">grep</span></span><br><span class=\"line\">      <span class=\"attr\">register:</span> <span class=\"string\">nginx_status</span></span><br><span class=\"line\">      <span class=\"attr\">ignore_errors:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查是否需要启动nginx</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span> <span class=\"string\">echo</span> <span class=\"string\">&quot;start nginx&quot;</span></span><br><span class=\"line\">      <span class=\"attr\">when:</span> <span class=\"string\">nginx_status.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span></span><br><span class=\"line\">      <span class=\"attr\">notify:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">上传图片</span></span><br><span class=\"line\">      <span class=\"attr\">copy:</span></span><br><span class=\"line\">        <span class=\"attr\">src:</span> <span class=\"string\">me.png</span> <span class=\"comment\"># 与yml在同一目录</span></span><br><span class=\"line\">        <span class=\"attr\">dest:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>/html/me.png&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">发布index.html</span></span><br><span class=\"line\">      <span class=\"attr\">template:</span></span><br><span class=\"line\">        <span class=\"attr\">src:</span> <span class=\"string\">index.html.j2</span> <span class=\"comment\"># 与yml在同一目录</span></span><br><span class=\"line\">        <span class=\"attr\">dest:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>/html/index.html&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">force:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 强制覆盖</span></span><br><span class=\"line\">        <span class=\"attr\">backup:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 覆盖前备份</span></span><br><span class=\"line\">      <span class=\"attr\">notify:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">重启Nginx服务</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">handlers:</span>  <span class=\"comment\"># handlers是一类特殊任务，当有notify时，会自动执行该任务</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\">      <span class=\"attr\">user:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">        <span class=\"attr\">shell:</span> <span class=\"string\">/sbin/nologin</span></span><br><span class=\"line\">        <span class=\"attr\">createhome:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">      <span class=\"attr\">yum:</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">      <span class=\"attr\">loop:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">gcc</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">zlib-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">pcre-devel</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">openssl-devel</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Nginx安装</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          wget https://nginx.org/download/nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">          tar -zxvf nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">          cd nginx-&#123;&#123; nginx_version &#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">          ./configure --prefix=&#123;&#123; nginx_install_path &#125;&#125; --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class=\"line\"><span class=\"string\">          make -j4</span></span><br><span class=\"line\"><span class=\"string\">          make -j4 install</span></span><br><span class=\"line\"><span class=\"string\"></span>        <span class=\"attr\">chdir:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; work_dir &#125;&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>/sbin/nginx&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">重启Nginx服务</span></span><br><span class=\"line\">      <span class=\"attr\">shell:</span></span><br><span class=\"line\">        <span class=\"attr\">cmd:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          pkill nginx</span></span><br><span class=\"line\"><span class=\"string\">          &quot;&#123;&#123; nginx_install_path &#125;&#125;/sbin/nginx&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>替换之后的效果</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>hanqf&#x27;s blog<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">html</span> &#123; <span class=\"attribute\">color-scheme</span>: light dark; &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">body</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">35em</span>; <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"attribute\">font-family</span>: Tahoma, Verdana, Arial, sans-serif; &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello World!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;me.png&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>show hello<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>show world<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://blog.hanqunfeng.com&quot;</span>&gt;</span>hanqf&#x27;s blog<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>.<span class=\"tag\">&lt;<span class=\"name\">br</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">em</span>&gt;</span>Thank you for using hanqf&#x27;s blog.<span class=\"tag\">&lt;/<span class=\"name\">em</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>template模块</code>的常用参数说明 <code>ansible-doc  -s template</code></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>必需</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>src</td>\n<td>是</td>\n<td>无</td>\n<td>模板文件的路径。</td>\n</tr>\n<tr>\n<td>dest</td>\n<td>是</td>\n<td>无</td>\n<td>目标文件的路径。</td>\n</tr>\n<tr>\n<td>force</td>\n<td>否</td>\n<td>false</td>\n<td>如果目标文件已经存在，是否强制覆盖。</td>\n</tr>\n<tr>\n<td>backup</td>\n<td>否</td>\n<td>false</td>\n<td>如果设置为true，则在覆盖目标文件之前创建备份。</td>\n</tr>\n<tr>\n<td>unsafe_writes</td>\n<td>否</td>\n<td>false</td>\n<td>如果设置为true，则会跳过文件的暂时性写入保护（如确保在写入文件之前不会更改其内容）。</td>\n</tr>\n<tr>\n<td>newline_sequence</td>\n<td>否</td>\n<td>\\n</td>\n<td>用于生成文件时的换行符序列。</td>\n</tr>\n<tr>\n<td>validate</td>\n<td>否</td>\n<td>无</td>\n<td>要应用于生成文件的验证器脚本的路径。</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>否</td>\n<td>无</td>\n<td>目标文件的权限模式。</td>\n</tr>\n<tr>\n<td>owner</td>\n<td>否</td>\n<td>无</td>\n<td>目标文件的所有者。</td>\n</tr>\n<tr>\n<td>group</td>\n<td>否</td>\n<td>无</td>\n<td>目标文件的所属组。</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里要注意<code>template模块</code>与<code>copy</code>模块的区别，前者在上传时会进行变量替换。</p>\n</li>\n</ul>\n<h2 id=\"ansible-playbook-Role\">ansible-playbook:Role</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Ansible中的Role是一种组织和管理剧本的方法，它允许您将相关的任务、变量、文件和处理程序组合到一个可重用的单元中。Role使得您可以更轻松地管理和组织大型的Ansible项目，并促进了可维护性和复用性。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Role的特性</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组织性：Role允许您将相关的任务和文件组织在一起，使得代码更易于理解和维护。每个Role通常都有一个特定的目的，例如安装特定的软件、配置服务或执行特定的系统管理任务。</span><br><span class=\"line\"></span><br><span class=\"line\">可重用性：Role可以被设计成可重用的组件，可以在不同的项目中多次使用。这样一来，您可以将常见的功能和配置封装到Role中，并在需要时轻松地调用它们，从而提高了代码的复用性和可移植性。</span><br><span class=\"line\"></span><br><span class=\"line\">结构化布局：Ansible推荐一种特定的目录结构来组织Role，包括tasks、handlers、templates、files、vars和defaults等目录。这种结构化布局有助于更清晰地分离任务、变量、文件和处理程序，并使Role更易于管理和维护。</span><br><span class=\"line\"></span><br><span class=\"line\">参数化：Role可以使用变量来接受外部输入，从而使其更加灵活和通用。通过参数化，您可以定制Role的行为，使其适用于不同的环境和需求。</span><br><span class=\"line\"></span><br><span class=\"line\">依赖关系：Role可以定义依赖关系，即一个Role可能依赖于另一个Role。这种依赖关系使得您可以构建复杂的系统配置，而不必重复编写相同的代码。</span><br><span class=\"line\"></span><br><span class=\"line\">可测试性：由于Role是可重用的组件，因此它们也是可测试的。您可以编写测试用例来验证Role的行为是否符合预期，并确保在修改代码时不会破坏现有功能。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><a href=\"https://github.com/ansible/ansible-examples\">ansible-examples</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>创建role</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在当前目录下创建一个名称为nginx-install的role，实际上就是创建一个名称为nginx-install的目录结构</span></span><br><span class=\"line\">ansible-galaxy init nginx-install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在指定目录下创建role</span></span><br><span class=\"line\">ansible-galaxy init --init-path /usr/local nginx-install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nginx-install目录结构</span></span><br><span class=\"line\">$ tree nginx-install/</span><br><span class=\"line\">nginx-install/</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── defaults</span><br><span class=\"line\">│   └── main.yml</span><br><span class=\"line\">├── files</span><br><span class=\"line\">├── handlers</span><br><span class=\"line\">│   └── main.yml</span><br><span class=\"line\">├── meta</span><br><span class=\"line\">│   └── main.yml</span><br><span class=\"line\">├── tasks</span><br><span class=\"line\">│   └── main.yml</span><br><span class=\"line\">├── templates</span><br><span class=\"line\">├── tests</span><br><span class=\"line\">│   ├── inventory</span><br><span class=\"line\">│   └── test.yml</span><br><span class=\"line\">└── vars</span><br><span class=\"line\">    └── main.yml</span><br><span class=\"line\"></span><br><span class=\"line\">8 directories, 8 files</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">files：存放由copy或script模块等调用的文件</span><br><span class=\"line\">templates：template模块查找所需要模板文件的目录</span><br><span class=\"line\">tasks：定义task、role的基本元素，至少应该包含一个名为main.yml的文件。其他文件需要在此文件中通过include进行包含</span><br><span class=\"line\">handlers：至少应该包含一个名为main.yml的文件，其他文件需要在此文件中通过include进行包含</span><br><span class=\"line\">vars：定义变量，至少应该包含一个名为main.yml的文件，其他文件需要在此文件中通过include进行包含</span><br><span class=\"line\">meta：定义当前角色的特殊设定及其依赖关系，至少应该包含一个名为main.yml的文件，其他文件需在此文件中通过include进行包含</span><br><span class=\"line\">default：设定默认变量时使用此目录中的main.yml文件，比vars的优先级低</span><br><span class=\"line\">tests：定义测试用例，至少应该包含一个名为inventory的文件，其他文件需要在此文件中通过include进行包含</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ansible查找role的路径，推荐放到<code>/etc/ansible/roles</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">pwd</span>)/roles</span><br><span class=\"line\">/$(<span class=\"built_in\">whoami</span>)/.ansible/roles</span><br><span class=\"line\">/usr/share/ansible/roles</span><br><span class=\"line\">/etc/ansible/roles</span><br><span class=\"line\">$(<span class=\"built_in\">pwd</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"我们将上面安装nginx那个剧本修改为role的方式\">我们将上面安装nginx那个剧本修改为role的方式</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>nginx-install/tasks/main.yml</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># tasks file for nginx-install</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">if</span> <span class=\"string\">running</span> <span class=\"string\">as</span> <span class=\"string\">root</span></span><br><span class=\"line\">  <span class=\"attr\">fail:</span></span><br><span class=\"line\">    <span class=\"attr\">msg:</span> <span class=\"string\">&quot;This role must be run as root user&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">when:</span> <span class=\"string\">ansible_facts[&#x27;user_id&#x27;]</span> <span class=\"type\">!=</span> <span class=\"string\">&#x27;root&#x27;</span> <span class=\"comment\"># 因为我们的剧本是需要root用户运行，所以这里加一个判断，这里就用到了ansible_facts特殊变量</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">判断是否存在nginx安装目录，不存在就安装nginx</span></span><br><span class=\"line\">  <span class=\"attr\">file:</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">state:</span> <span class=\"string\">directory</span></span><br><span class=\"line\">  <span class=\"attr\">notify:</span>  <span class=\"comment\"># 执行通知任务，顺序为从下到上</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">Nginx安装</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查系统是否已启动Nginx</span></span><br><span class=\"line\">  <span class=\"attr\">shell:</span> <span class=\"string\">ps</span> <span class=\"string\">aux</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">nginx</span> <span class=\"string\">|</span> <span class=\"string\">grep</span> <span class=\"string\">-v</span> <span class=\"string\">grep</span></span><br><span class=\"line\">  <span class=\"attr\">register:</span> <span class=\"string\">nginx_status</span></span><br><span class=\"line\">  <span class=\"attr\">ignore_errors:</span> <span class=\"literal\">yes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">检查是否需要启动nginx</span></span><br><span class=\"line\">  <span class=\"attr\">shell:</span> <span class=\"string\">echo</span> <span class=\"string\">&quot;start nginx&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">when:</span> <span class=\"string\">nginx_status.rc</span> <span class=\"type\">!=</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"attr\">notify:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">上传图片</span></span><br><span class=\"line\">  <span class=\"attr\">copy:</span></span><br><span class=\"line\">    <span class=\"attr\">src:</span> <span class=\"string\">me.png</span> <span class=\"comment\"># 与yml在同一目录</span></span><br><span class=\"line\">    <span class=\"attr\">dest:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>/html/me.png&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">发布index.html</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">src:</span> <span class=\"string\">index.html.j2</span> <span class=\"comment\"># 与yml在同一目录</span></span><br><span class=\"line\">    <span class=\"attr\">dest:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>/html/index.html&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">force:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 强制覆盖</span></span><br><span class=\"line\">    <span class=\"attr\">backup:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 覆盖前备份</span></span><br><span class=\"line\">  <span class=\"attr\">notify:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">重启Nginx服务</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>nginx-install/handlers/main.yml</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># handlers file for nginx-install</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">添加nginx用户</span></span><br><span class=\"line\">  <span class=\"attr\">user:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">    <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">    <span class=\"attr\">shell:</span> <span class=\"string\">/sbin/nologin</span></span><br><span class=\"line\">    <span class=\"attr\">createhome:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装Nginx依赖软件包</span></span><br><span class=\"line\">  <span class=\"attr\">yum:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">state:</span> <span class=\"string\">present</span></span><br><span class=\"line\">  <span class=\"attr\">loop:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">gcc</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">zlib</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">zlib-devel</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">pcre-devel</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">openssl</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">openssl-devel</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Nginx安装</span></span><br><span class=\"line\">  <span class=\"attr\">shell:</span></span><br><span class=\"line\">    <span class=\"attr\">cmd:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">      wget https://nginx.org/download/nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">      tar -zxvf nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz</span></span><br><span class=\"line\"><span class=\"string\">      cd nginx-&#123;&#123; nginx_version &#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">      ./configure --prefix=&#123;&#123; nginx_install_path &#125;&#125; --with-http_stub_status_module --with-http_ssl_module --user=nginx</span></span><br><span class=\"line\"><span class=\"string\">      make -j4</span></span><br><span class=\"line\"><span class=\"string\">      make -j4 install</span></span><br><span class=\"line\"><span class=\"string\"></span>    <span class=\"attr\">chdir:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; work_dir &#125;&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">启动Nginx服务</span></span><br><span class=\"line\">  <span class=\"attr\">shell:</span></span><br><span class=\"line\">    <span class=\"attr\">cmd:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; nginx_install_path &#125;&#125;</span>/sbin/nginx&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">重启Nginx服务</span></span><br><span class=\"line\">  <span class=\"attr\">shell:</span></span><br><span class=\"line\">    <span class=\"attr\">cmd:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">      pkill nginx</span></span><br><span class=\"line\"><span class=\"string\">      &quot;&#123;&#123; nginx_install_path &#125;&#125;/sbin/nginx&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>nginx-install/vars/main.yml</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># vars file for nginx-install</span></span><br><span class=\"line\"><span class=\"attr\">nginx_version:</span> <span class=\"string\">&quot;1.22.1&quot;</span></span><br><span class=\"line\"><span class=\"attr\">work_dir:</span> <span class=\"string\">&quot;/usr/local&quot;</span></span><br><span class=\"line\"><span class=\"attr\">nginx_install_path:</span> <span class=\"string\">&quot;/usr/local/nginx&quot;</span></span><br><span class=\"line\"><span class=\"attr\">index_title:</span> <span class=\"string\">&quot;hanqf&#x27;s blog&quot;</span></span><br><span class=\"line\"><span class=\"attr\">index_for_array:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">hello</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">world</span></span><br><span class=\"line\"><span class=\"attr\">blog_href_show:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">blog_href:</span> <span class=\"string\">&quot;https://blog.hanqunfeng.com&quot;</span></span><br><span class=\"line\"><span class=\"attr\">blog_img:</span> <span class=\"string\">&quot;me.png&quot;</span></span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">上面介绍的<code>tasks</code>、<code>handlers</code>，其目录中都含有一个main.yml文件，这个文件是必须存在的</li>\n<li class=\"lvl-2\">但是如果配置的内容比较多，都写在main.yml文件中，那么这个文件就显得有点臃肿，所以可以将这些内容拆分成多个文件，然后在main.yml文件中通过<code>include</code>进行包含</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">include:</span> <span class=\"string\">other1.yml</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">include:</span> <span class=\"string\">other2.yml</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\"><code>tasks</code>或者<code>handlers中</code>还可以使用<code>include_tasks</code>进行包含</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">include_tasks:</span> <span class=\"string\">other1.yml</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">include_tasks:</span> <span class=\"string\">other2.yml</span></span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">include_tasks:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">loop:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">other1.yml</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">other2.yml</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p><code>vars</code>里也可以定义多个yml文件存储变量，然后在tasks中通过<code>include_vars</code>进行包含，注意，必须放在task的yml文件中</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此时不需要加上vars路径，会自动从vars目录下查找</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">include_vars:</span> <span class=\"string\">&quot;v-other1.yml&quot;</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">include_vars:</span> <span class=\"string\">&quot;v-other2.yml&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">include_vars:</span> <span class=\"string\">&quot;<span class=\"template-variable\">&#123;&#123; item &#125;&#125;</span>&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">loop:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">v-other1.yml</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">v-other2.yml</span></span><br></pre></td></tr></table></figure>\n</div>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>将模板文件和图片文本保存到对应的路径</p>\n</li>\n</ul>\n<blockquote>\n<p>nginx-install/templates/index.html.j2<br>\nnginx-install/files/me.png</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>执行<br>\n<em><strong>假设我们将创建的角色安装到了<code>/etc/ansible/roles</code>下</strong></em></p>\n</li>\n</ul>\n<blockquote>\n<p>创建启动剧本<code>nginx-install-start.yml</code>，我们也可以修改<code>tests/test.yml</code></p>\n</blockquote>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">安装nginx并配置</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> <span class=\"string\">webservers</span></span><br><span class=\"line\">  <span class=\"attr\">become:</span> <span class=\"literal\">yes</span>  <span class=\"comment\"># 切换到root用户下执行</span></span><br><span class=\"line\">  <span class=\"attr\">roles:</span> <span class=\"comment\"># 调用role</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">nginx-install</span> <span class=\"comment\"># role名称</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>执行role</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible-playbook nginx-install-start.yml</span><br></pre></td></tr></table></figure>\n<h2 id=\"ansible-galaxy\">ansible-galaxy</h2>\n<h3 id=\"什么是ansible-galaxy\">什么是ansible-galaxy</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用于从<a href=\"https://galaxy.ansible.com\">ansible-galaxy官网</a>上查找，下载<code>role</code>和<code>collection</code>的工具，如何下载和使用网站上都有说明。</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://ansible.readthedocs.io/projects/galaxy-ng/en/latest/community/userguide/\">ansible-galaxy用户指南</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>我们也可以将自己创建好的<code>role</code>发布到<code>ansible-galaxy</code>上，可以参考 <a href=\"/2024/03/26/ansible-role-publish/\" title=\"Ansible Role Publish To Galaxy\">Ansible Role Publish To Galaxy</a></p>\n</li>\n</ul>\n<h3 id=\"role\">role</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 搜索role</span></span><br><span class=\"line\">ansible-galaxy search mysql</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">ansible-galaxy role search mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看已经安装的role</span></span><br><span class=\"line\">ansible-galaxy list</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">ansible-galaxy role list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装role，默认安装到 ~/.ansible/roles 下</span></span><br><span class=\"line\">ansible-galaxy role install shaneholloman.redis</span><br><span class=\"line\"><span class=\"comment\"># 安装到指定路径</span></span><br><span class=\"line\">ansible-galaxy role install &lt;role-name&gt; -p &lt;path&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"collection\">collection</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ansible-galaxy同时支持下载 collection</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看已经安装的collection</span></span><br><span class=\"line\">ansible-galaxy collection list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装collection，，默认安装到 ~/.ansible/collections/ansible_collections 下</span></span><br><span class=\"line\">ansible-galaxy collection install saiello.kafka</span><br><span class=\"line\"><span class=\"comment\"># 安装到指定路径</span></span><br><span class=\"line\">ansible-galaxy collection install &lt;collection-name&gt; -p &lt;path&gt;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Ansible Collection 是 Ansible 社区为了更好地管理和组织 Ansible 角色、模块、插件等内容而引入的概念。它可以被视为一种打包机制，用于将相关的 Ansible 内容打包成单独的单元，使得其更易于分享、安装和维护。</p>\n</li>\n<li class=\"lvl-2\">\n<p>具体来说，Ansible Collection 具有以下作用：</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">组织和管理角色、模块和插件：通过 Collection，可以将相关的角色、模块和插件打包在一起，形成逻辑上的单元，提高了内容的组织性和可管理性。</span><br><span class=\"line\"></span><br><span class=\"line\">易于分享和分发：Ansible Collection 可以被轻松地分享和分发给其他用户。开发人员可以将自己的角色、模块打包成 Collection，并将其发布到 Ansible Galaxy 或其他集中式的仓库中，供其他用户使用。</span><br><span class=\"line\"></span><br><span class=\"line\">版本控制和更新：与角色相比，Collection 更容易进行版本控制和更新。开发人员可以为 Collection 指定版本，并在更新内容时发布新的版本，使得用户可以选择使用特定版本或者升级到最新版本。</span><br><span class=\"line\"></span><br><span class=\"line\">依赖管理：Collection 支持依赖管理，可以在 Collection 中指定依赖关系，确保相关的角色、模块和插件能够正常工作。</span><br><span class=\"line\"></span><br><span class=\"line\">提供文档和示例：开发人员可以将文档和示例代码与 Collection 打包在一起，使得用户更容易理解和使用其中的内容。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>总的来说，Ansible Collection 提供了一种更高级别的组织和管理方式，使得 Ansible 内容更易于分享、使用和维护，从而提高了 Ansible 的整体生态系统的健壮性和可用性。</p>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">前面的剧本中我们多次使用到了<code>become</code>切换用户到root用户，其实在<code>ansible.cfg</code>中我们可以配置<code>become_user</code>，这样我们就可以不用每次都切换用户了</li>\n<li class=\"lvl-2\">但这里有个需要注意的点，就是因为 <code>become</code> 会以一个全新的环境执行任务，所以其不会包含原用户的环境变量。可以理解为其是通过<code>sudo su</code>切换到root，而非<code>sudo -i</code>。</li>\n</ul>\n</div>\n<h2 id=\"后记\">后记</h2>\n<p>关于ansible的知识点还有很多没有研究到，后面会慢慢补吧……</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>关于将Ansible Role发布到Galaxy的详细介绍可以参看 <a href=\"/2024/03/26/ansible-role-publish/\" title=\"Ansible Role Publish To Galaxy\">Ansible Role Publish To Galaxy</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>关于将Ansible Collection发布到Galaxy的详细介绍可以参看 <a href=\"/2024/03/27/ansible-collection-publish/\" title=\"Ansible Collection Publish To Galaxy\">Ansible Collection Publish To Galaxy</a></p>\n</li>\n</ul>\n","content_text":"摘要 本文介绍Ansible的安装和使用。 本文基于CentOS8。 Ansible简介 Ansible 是一个开源的自动化运维工具，它基于 Python 语言开发，支持跨平台，可以运行在 Linux、Unix、Mac OS X、Windows 等多种系统环境。 Ansible简单易用，只需要在控制主机上安装 Ansible 并在被管理主机上安装 Python 2.6 或更高版本即可（现有的开源Linux系统基本都自带了Python ，所以相当于远程主机什么都不需要安装），就可以管理远程主机对其进行自动化配置、编排高级工作流程以支持应用程序部署、系统更新等。 Ansible可以用来管理Linux、Unix、Windows、OpenStack、AWS、GCP、OpenShift、Kubernetes等系统环境。 Ansible官网文档：https://docs.ansible.com/ansible/latest/ Ansible中文权威指南：https://ansible-tran.readthedocs.io/en/latest/index.html Ansible安装 Ansible安装方式有多种，这里介绍通过pip安装，当前系统中的python版本为python3.9。 1python3 -m pip install ansible 如果尚未安装pip，可以通过下面的方法进行安装 12wget https://bootstrap.pypa.io/get-pip.pypython3 get-pip.py 安装完成后，可以查看一下版本 12345678910ansible --versionansible [core 2.15.9] config file = None configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;, &#x27;/usr/share/ansible/plugins/modules&#x27;] ansible python module location = /usr/local/lib/python3.9/site-packages/ansible ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections executable location = /usr/local/bin/ansible python version = 3.9.16 (main, Sep 8 2023, 00:00:00) [GCC 11.4.1 20230605 (Red Hat 11.4.1-2)] (/usr/bin/python3) jinja version = 3.1.3 libyaml = True Ansible常用参数： 参数 说明 -u 指定连接到主机的用户名 -i 指定连接hosts文件的路径 -k 指定连接到主机的密码 -m 指定模块名称，可以指定模块的参数，比如指定shell模块的参数：-m shell -a ‘ls -l’ -a 指定模块的参数，比如指定shell模块的参数：-m shell -a ‘ls -l’ -e 指定附加参数，比如指定shell端口： -e ‘ansible_port=22’ -b 切换到root权限 -f 指定并发连接数，默认为5，即可以同时管理5台主机 Ansible的配置文件 ansible的相关配置都是通过一个名为ansible.cfg的配置文件进行配置的，但我们通过pip安装是不会默认创建它的，实际上不创建这个配置文件也不影响ansible的执行，因为其会使用一些默认的配置，并且在大多数场景下默认的配置就能满足需求。 ansible查找配置文件的顺序，优先级由上到下逐渐降低 1234* ANSIBLE_CONFIG (一个环境变量)* ansible.cfg (位于当前目录中)* .ansible.cfg (位于家目录中)* /etc/ansible/ansible.cfg 如果需要修改默认配置，我们可以通过如下命令创建一份配置文件 1234567891011# 此时会创建一份所有配置项都以 ; 开头的配置文件，我们要修改那个配置，就删除其前面的 ; ，然后修改其值即可ansible-config init --disabled &gt; ansible.cfg# 查看当前的生效配置，注意绿色为默认配置，黄色为被修改的配置ansible-config dump# 查看帮助文件ansible-config list# 查看默认配置项的值和注释说明ansible-config init list 常用配置详解 12345678910111213141516171819202122# 通用默认配置段；[defaults]# 被控端IP或者DNS列表；inventory=/etc/ansible/hosts# Ansible默认搜寻模块的位置；library=&#123;&#123; ANSIBLE_HOME ~ &quot;/plugins/modules:/usr/share/ansible/plugins/modules&quot; &#125;&#125;# 并行进程数；forks=5# 是否允许切换为其它用户become=False# become=True时，通过sudo进行切换become_method=sudo# 切换为rootbecome_user=root# 搜索roles的路径roles_path=&#123;&#123; ANSIBLE_HOME ~ &quot;/roles:/usr/share/ansible/roles:/etc/ansible/roles&quot; &#125;&#125;# 日志路径，默认不输出log_path=# Ansible命令执行默认的模块；module_name=command# 是否检查远程主机密钥，默认为True，如果希望不检查可以将其设为False，可以加快连接速度host_key_checking=True Ansible的hosts配置 需要创建hosts文件，使用ansible时，ansible会到hosts文件中查找对应的远程主机配置，默认的查找路径为/etc/ansible/hosts，也可以通过ansible.cfg修改默认配置 hosts文件格式1 hosts文件格式如下： 1234567# 可以配置ip或主机名[webservers] # 分组名称10.10.2.4510.10.2.46[dbservers]10.10.2.4710.10.2.48 命令行里加上连接参数 1234# 执行命令，多个ip逗号分隔ansible -u username -m ping --private-key=~/.ssh/id_rsa -e &#x27;ansible_port=22&#x27; 10.10.2.45,10.10.2.46# 指定hosts文件路径ansible -i hosts -u username -m ping --private-key=~/.ssh/id_rsa -e &#x27;ansible_port=22&#x27; 10.10.2.45,10.10.2.46 hosts文件格式2 hosts文件里也可以配置连接参数 123[webservers]10.10.2.45 ansible_ssh_user=username ansible_ssh_private_key=~/.ssh/id_rsa ansible_ssh_port=2210.10.2.46 ansible_ssh_user=username ansible_ssh_private_key=~/.ssh/id_rsa ansible_ssh_port=22 此时命令行连接时就不需要指定连接参数了 1ansible -i hosts -u username -m ping 10.10.2.45,10.10.2.46 hosts文件格式3 ansible是基于ssh建立连接的，所以只要ssh能连上远程主机，ansible就可以管理远程主机，如果我们为ssh配置config文件，那么ansible就可以直接将config里的Host名称配置到hosts文件里，这样就不需要配置连接参数了，同时此时也可以支持跳板机。关于ssh的config详细说明可以参考Linux常用命令--ssh、scp与免密登录 配置~/.ssh/config 123456789101112131415161718192021# 跳板机Host forward User ec2-user HostName 53.22.227.200 Port 22 IdentityFile ~/.ssh/id_rsa# 远程主机Host remote-host User ec2-user HostName 10.9.5.123 Port 22 IdentityFile ~/.ssh/key.pem ProxyCommand ssh forward -W %h:%p# 远程主机 ,10.9网段的所有主机Host 10.9.* User ec2-user Port 22 IdentityFile ~/.ssh/key.pem ProxyCommand ssh forward -W %h:%p hosts文件 12345[webservers]forward # 与config中配置的Host名称一致remote-host # 与config中配置的Host名称一致10.9.5.123 # 匹配config中的网段10.9.5.124 # 匹配config中的网段 命令行 12345678910111213# 通过指定主机名或ipansible -m ping remote-hostansible -m ping 10.9.5.123# 通配符匹配，此时在匹配hosts中123和124ansible -m ping &quot;10.9.5.*&quot;# 通过分组名ansible -m ping webservers# 通过all指定hosts里的全部主机ansible -m ping all 查看hosts配置相关命令 列出所有组的配置ip信息 1ansible all --list-hosts 查看当前hosts中配置所有组名称 1ansible localhost -m debug -a &#x27;var=groups.keys()&#x27; 列出指定组的配置ip信息 1ansible dbservers --list-hosts Ansible模块 列出所有模块 123ansible-doc -l# 也可以指定模块名称ansible-doc -l | grep -i shell 查看指定模块的参数信息，如下查看shell模块的参数说明 1ansible-doc -s shell 查看模块的帮助信息，如下查看shell模块的帮助信息，这与官方文档一致:shell模块 1ansible-doc shell Ansible管理工具常用的模块：command、shell、file、user、copy、service、yum、synchronze、cron、setup、ping等。可以在命令行里指定各个模块的参数(ansible命令)，也可以将参数配置到yml文件里，然后在命令行里指定yml文件(ansible-playbook命令)，下面会结合两种方式一块介绍。网上有大把的关于ansible命令的使用说明，这里只简单介绍几个模块的使用方法，其他模块的使用方法可以参考ansible模块 下面介绍的都是ansible核心模块:ansible-core debug模块 debug模块此模块在执行期间打印语句，可用于调试变量或表达式 通过命令行执行命令 1ansible webservers -m debug -a &#x27;msg=&quot;System HostName: &#123;&#123; inventory_hostname &#125;&#125;&quot;&#x27; 通过yml文件执行命令 12345678# debug.yml--- # yml文件的开头，规定playbook的yml文件格式，必须以---开头(必须)，...结尾(非必须)- name: Debug hosts: webservers tasks: - name: Debug debug: msg: &quot;System HostName: &#123;&#123; inventory_hostname &#125;&#125;&quot; 常用参数说明：ansible-doc -s debug 参数 描述 msg 打印消息，支持变量 var 打印消息，支持变量，注册变量 , 与msg互斥 ping模块 ping模块用于测试主机的连通性，它会尝试连接到主机，验证可用的python，并在成功时返回“pong”，可以指定主机名或ip，也可以指定分组名，也可以指定all 通过命令行执行命令 1ansible webservers -m ping 通过yml文件执行命令 123456789101112# ping.yml--- # yml文件的开头，规定playbook的yml文件格式，必须以---开头(必须)，...结尾(非必须)- name: Ping web servers hosts: webservers # ip或组名，也可以配置all：匹配全部主机 tasks: - name: Ping the servers ping: register: command_output - name: 显示命令输出 debug: var: command_output.stdout_lines # 注册变量输出要使用 var ansible-playbook 通过ansible-playbook命令，可以指定yml文件 ansible-playbook相关命令 123456789101112131415# 检查yml文件语法格式ansible-playbook --syntax-check ping.yml# 列出hostsansible-playbook --list-hosts ping.yml# 列出tagsansible-playbook --list-tags ping.yml# 列出taskansible-playbook --list-tasks ping.yml# 指定执行主机：--limit 或 -l，其必须是yml中hosts指定的子集ansible-playbook ping.yml --limit 192.168.20.23# 执行命令ansible-playbook ping.yml# 模拟执行，Ansible 会模拟执行任务，并输出执行结果，但不会对目标主机做出任何更改# 注意这个命令运行不报错并不能说明一定可以执行成功，因为这个命令是模拟执行的ansible-playbook ping.yml --check setup模块 该模块用于采集被管理设备信息并返回给服务端，后面跟--tree &lt;目录&gt;，可以将采集信息以ip为文件名保存至指定目录下 1234567891011# 查看全部信息ansible all -m setup# 只查看内存信息ansible all -m setup -a &quot;filter=*mem*&quot;# 只查看网络信息ansible all -m setup -a &quot;gather_subset=network&quot;# 保存信息至指定目录，这样会每个ip对应一个文件ansible all -m setup --tree ./ 常用参数说明：ansible-doc -s setup 参数 描述 gather_subset 指定要收集的系统信息的子集。可以是 all（所有信息）、network（网络信息）、hardware（硬件信息）等。默认为 all。 gather_timeout 设置信息收集的超时时间，单位为秒。默认为 10 秒。 filter 指定要收集的系统信息的过滤条件。可以是一个或多个标签，只收集匹配的信息。 fact_path 指定自定义 facts 文件的路径。 这里重点介绍一下gather_subset 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364all: 收集所有可用的系统信息。all_ipv4_addresses: 收集所有 IPv4 地址信息。all_ipv6_addresses: 收集所有 IPv6 地址信息。apparmor: 收集 AppArmor 相关信息。architecture: 收集系统架构信息。caps: 收集进程的 capabilities 信息。chroot: 收集 chroot 环境的信息。cmdline: 收集内核命令行参数信息。date_time: 收集日期和时间信息。default_ipv4: 收集默认的 IPv4 地址信息。default_ipv6: 收集默认的 IPv6 地址信息。devices: 收集系统设备信息。distribution: 收集发行版信息。distribution_major_version: 收集发行版主版本号。distribution_release: 收集发行版发行号。distribution_version: 收集发行版版本信息。dns: 收集 DNS 配置信息。effective_group_ids: 收集有效组 ID 信息。effective_user_id: 收集有效用户 ID 信息。env: 收集环境变量信息。facter: 收集 Facter 信息。fips: 收集 FIPS 相关信息。hardware: 收集硬件信息。interfaces: 收集网络接口信息。is_chroot: 收集是否处于 chroot 环境的信息。iscsi: 收集 iSCSI 配置信息。kernel: 收集内核信息。local: 收集本地配置信息。lsb: 收集 LSB 发行版信息。machine: 收集机器信息。machine_id: 收集机器 ID 信息。mounts: 收集挂载点信息。network: 收集网络相关信息。ohai: 收集 Ohai 信息。os_family: 收集操作系统家族信息。pkg_mgr: 收集包管理器信息。platform: 收集平台信息。processor: 收集处理器信息。processor_cores: 收集处理器核心数信息。processor_count: 收集处理器数量信息。python: 收集 Python 相关信息。python_version: 收集 Python 版本信息。real_user_id: 收集真实用户 ID 信息。selinux: 收集 SELinux 配置信息。service_mgr: 收集服务管理器信息。ssh_host_key_dsa_public: 收集 SSH DSA 公钥信息。ssh_host_key_ecdsa_public: 收集 SSH ECDSA 公钥信息。ssh_host_key_ed25519_public: 收集 SSH ED25519 公钥信息。ssh_host_key_rsa_public: 收集 SSH RSA 公钥信息。ssh_host_pub_keys: 收集 SSH 主机公钥信息。ssh_pub_keys: 收集 SSH 用户公钥信息。system: 收集系统相关信息。system_capabilities: 收集系统能力信息。system_capabilities_enforced: 收集系统能力强制信息。user: 收集用户账户信息。user_dir: 收集用户目录信息。user_gecos: 收集用户 GECOS 信息。user_gid: 收集用户组 ID 信息。user_id: 收集用户 ID 信息。user_shell: 收集用户 Shell 信息。user_uid: 收集用户 UID 信息。virtual: 收集虚拟化相关信息。virtualization_role: 收集虚拟化角色信息。virtualization_type: 收集虚拟化类型信息。 command模块 command模块为ansible默认模块，主要用于执行Linux基础命令，可以执行远程服务器命令执行、任务执行等操作。 command模块不支持管道符号、变量，只能运行简单命令，复杂命令需要使用shell模块 示例1 1ansible webservers -m command -a &quot;df -hT&quot; 12345678910111213# command.yml---- name: 在 web 服务器上运行 df -hT 命令 hosts: webservers tasks: - name: 执行 df -hT 命令 command: cmd: &quot;df -hT&quot; register: command_output # 保存命令执行结果 - name: 显示命令输出 debug: var: command_output.stdout_lines # 输出命令执行结果 示例2：参数chdir：切换到指定目录后再运行命令 可以通过ansible-doc -s command查看其支持的参数 1ansible webservers -m command -a &quot;chdir=/tmp ls -l&quot; 1234567891011121314# command2.yml---- name: 在 web 服务器上列出 /tmp 目录的内容 hosts: webservers tasks: - name: 切换到 /tmp 目录并列出内容 command: chdir: /tmp # 切换到 /tmp 目录 cmd: ls -l # 执行命令 register: command_output # 保存命令执行结果 - name: 显示命令输出 debug: var: command_output.stdout_lines # 输出命令执行结果 常用参数说明：ansible-doc -s command 参数 描述 argv 要执行的命令，可以是字符串形式或列表形式。 chdir 在执行命令之前切换到的目录。 cmd 要执行的命令。 creates 指定一个文件名或模式，如果匹配的文件已经存在，则不执行命令。 expand_argument_vars 是否展开作为变量的参数。默认为 true，表示展开变量。 free_form 以字符串形式指定要执行的命令。这个参数并不存在，但是 command 模块接受自由形式的字符串作为命令。 removes 指定一个文件名或模式，如果匹配的文件存在，则执行命令。 stdin 将命令的标准输入设置为指定的值。 stdin_add_newline 是否在标准输入数据后添加换行符。 strip_empty_ends 是否从标准输出的末尾剥离空行。 shell模块 shell模块与command模块类似，可以执行远程服务器命令执行、任务执行等操作，但是shell模块支持管道符号、变量，可以执行复杂命令 示例： 12345# 查看进程ansible webservers -m shell -a &quot;ps -ef | grep java | grep -v &#x27;grep&#x27;&quot;# 修改密码ansible webservers -m shell -a &quot; echo 123456 | passwd --stdin ansible&quot; 12345678910111213# shell.yml---- name: 在 web 服务器上查找 Java 进程 hosts: webservers tasks: - name: 执行 ps -ef | grep java | grep -v &#x27;grep&#x27; 命令 shell: cmd: ps -ef | grep java | grep -v &#x27;grep&#x27; register: command_output # 保存命令执行结果 - name: 显示命令输出 debug: var: command_output.stdout_lines # 输出命令执行结果 常用参数说明：ansible-doc -s shell 参数 描述 argv 要执行的命令，可以是字符串形式或列表形式。 chdir 在执行命令之前切换到的目录。 cmd 要执行的命令。 creates 指定一个文件名或模式，如果匹配的文件已经存在，则不执行命令。 executable 用于执行命令的可执行程序，默认情况下为 /bin/sh。 free_form 以字符串形式指定要执行的命令。这个参数并不存在，但是 shell 模块接受自由形式的字符串作为命令。 removes 指定一个文件名或模式，如果匹配的文件存在，则执行命令。 stdin 将命令的标准输入设置为指定的值。 stdin_add_newline 是否在标准输入数据后添加换行符。 strip_empty_ends 是否从标准输出的末尾剥离空行。 file模块 file模块主要用于文件和目录的管理，可以创建、删除、修改文件和目录，可以指定文件或目录的属性，可以指定文件或目录的权限，可以指定文件或目录的owner、group、mode等信息，等等 示例：创建目录 1ansible webservers -m file -a &quot;path=/tmp/`date +%F` state=directory mode=755&quot; 12345678910# file.yml---- name: 在 web 服务器上创建日期格式的目录 hosts: webservers tasks: - name: 创建目录 file: path: &quot;/tmp/&#123;&#123; ansible_date_time.date &#125;&#125;&quot; # ansible_date_time.date表示当前时间获取的日期，格式为YYYY-MM-DD state: directory # 创建目录，如果目录已经存在则不创建 mode: &quot;755&quot; # 设置目录权限 常用参数说明：ansible-doc -s file 参数 描述 path 文件或目录的路径。 state 文件或目录的状态。可选值包括 file（文件）、directory（目录）、link（符号链接）。默认为 file。 owner 文件或目录的所有者。 group 文件或目录的所属组。 mode 文件或目录的权限。 src 源文件路径，用于复制文件或创建链接。 dest 目标文件路径，用于复制文件或创建链接。 follow 是否遵循符号链接。如果为 yes，则会遵循符号链接进行操作。默认为 yes。 selevel 文件或目录的 SELinux 安全上下文。 serole 文件或目录的 SELinux 角色。 setype 文件或目录的 SELinux 类型。 seuser 文件或目录的 SELinux 用户。 unsafe_writes 是否启用不安全的写入模式。如果为 yes，则在写入文件之前不会创建备份。默认为 no。 这里重点说一下state 123456file：表示要求目标主机上存在指定的文件。如果文件已经存在，则不执行任何操作；如果文件不存在，则会创建它。directory：表示要求目标主机上存在指定的目录。如果目录已经存在，则不执行任何操作；如果目录不存在，则会创建它。link：表示要求目标主机上存在指定的符号链接。如果符号链接已经存在，则不执行任何操作；如果符号链接不存在，则会创建它。hard：创建硬链接touch：如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间absent：删除目录、文件或者取消链接文件 copy模块 copy模块主要用于将文件复制到远程服务器，可以指定文件的源路径、目标路径、owner、group、mode等信息，等等 示例：复制文件到指定目录 12# -b 切换到root用户下执行ansible webservers -m copy -a &quot;src=/tmp/a.txt dest=/tmp/ owner=root group=root mode=755&quot; 12345678910111213# copy.yml---- name: 在 web 服务器上复制文件 hosts: webservers become: yes # 切换到root用户下执行 tasks: - name: 复制文件 copy: src: &quot;/tmp/a.txt&quot; # 源文件路径 dest: &quot;/tmp/&quot; # 目标文件路径 owner: root # 指定文件owner group: root # 指定文件group mode: &quot;755&quot; # 指定文件权限 常用参数说明：ansible-doc -s copy 参数 描述 src 源文件的路径。 dest 目标文件的路径。 backup 是否备份目标文件。如果为 yes，则在复制目标文件之前会创建一个备份文件。默认为 yes。 content 要写入目标文件的内容。 directory_mode 目标目录的权限。只有当目标是一个目录时才会生效。 follow 是否跟随符号链接。如果为 yes，则会跟随符号链接进行操作。默认为 yes。 force 是否强制覆盖目标文件。如果为 yes，则强制复制源文件，即使目标文件已经存在。默认为 no。 group 目标文件的所属组。 mode 目标文件的权限。 owner 目标文件的所有者。 remote_src 指定源文件是否在远程主机上。如果为 yes，表示源文件在远程主机上。默认为 no。 fetch模块 fetch模块主要用于将文件从远程服务器复制到本地，可以指定文件的源路径、目标路径、owner、group、mode等信息，等等 示例：将文件从远程服务器复制到本地 1ansible webservers -m fetch -a &quot;src=/tmp/a.txt dest=/tmp/ flat=yes&quot; 12345678910# fetch.yml---- name: 在 web 服务器上将文件从远程服务器复制到本地 hosts: webservers tasks: - name: 复制文件 fetch: src: &quot;/tmp/a.txt&quot; dest: &quot;/tmp/&quot; flat: yes # flat: yes # 将文件复制到dest目录下，不创建目录结构 常用参数说明：ansible-doc -s fetch 参数 描述 src 远程主机上要拉取的文件的路径。 dest 本地主机上文件的目标路径。 flat 是否将文件放置在顶层目录中。如果为 yes，则所有文件都将放置在一个目录中。默认为 no。 fail_on_missing 如果为 yes，则在源文件不存在时失败。默认为 yes。 validate_checksum 是否验证远程文件的校验和。默认为 no。 cron模块 cron模块主要用于在远程服务器上创建、修改、删除定时任务 示例：创建定时任务 1ansible webservers -m cron -a &#x27;name=&quot;restart httpd&quot; hour=*/5 job=&quot;systemctl restart httpd&quot;&#x27; 12345678910# cron.yml---- name: 在 web 服务器上创建定时任务 hosts: webservers tasks: - name: 创建定时任务 cron: name: &quot;restart httpd&quot; hour: &quot;*/5&quot; job: &quot;systemctl restart httpd&quot; 常用参数说明：ansible-doc -s cron 参数 描述 name cron 任务的名称。 minute cron 任务执行的分钟。 hour cron 任务执行的小时。 day cron 任务执行的日期。 month cron 任务执行的月份。 weekday cron 任务执行的星期几。 job 要执行的命令或脚本。 cron_file 要操作的 cron 文件的路径。默认为 /etc/crontab。 state cron 任务的状态。可选值包括 present（默认）和 absent。表示要求任务存在或不存在。 user cron 任务的执行用户。默认为 root。 backup 是否备份 cron 文件。可选值包括 true 和 false。 state 12present：表示要求指定的 cron 任务存在。如果指定的 cron 任务不存在，则 Ansible 将会创建它。如果已经存在，则不执行任何操作。absent：表示要求指定的 cron 任务不存在。如果指定的 cron 任务存在，则 Ansible 将会删除它。如果不存在，则不执行任何操作。 yum模块 yum模块主要用于在远程服务器上安装、卸载、更新软件包，可以指定软件包的名称、版本、repo等信息，等等 示例：安装软件包 12# 安装软件包，相当于 yum install httpdansible webservers -m yum -a &quot;name=httpd state=present&quot; 123456789# yum.yml---- name: 在 web 服务器上安装 httpd 软件包 hosts: webservers tasks: - name: 安装 httpd 软件包 yum: name: httpd # 软件包名称，相当于 yum install httpd state: present # 安装软件包，如果软件包已经安装则不安装 常用参数说明:ansible-doc -s yum 参数 解释 name 指定要操作的包的名称。 update_cache 指定是否在执行操作之前更新 yum 缓存。可选值为 yes 或 no。默认为 yes。 disable_gpg_check 指定是否禁用 GPG 检查。如果为 yes，则禁用 GPG 检查。默认为 no。 disable_plugin 指定是否禁用指定的 yum 插件。可以是一个插件名称的列表。 enablerepo 指定要启用的仓库。可以是一个仓库名称的列表。 disablerepo 指定要禁用的仓库。可以是一个仓库名称的列表。 installroot 指定要安装软件包的根目录。 security 指定是否只安装安全更新。如果为 yes，则只安装安全更新。默认为 no。 list 指定是否列出所有已安装的包。如果为 yes，则列出已安装的包。默认为 no。 state 指定软件包的状态。可选值为 present、latest、absent、installed、removed。默认为 present。 这里重点说一下state 12345present: 表示要求目标主机上存在指定的软件包。如果软件包已经安装，则不执行任何操作；如果软件包未安装，则会安装它。latest: 表示要求目标主机上存在指定的软件包，并且希望保持为最新版本。如果软件包已经安装，但不是最新版本，则会更新到最新版本；如果软件包未安装，则会安装最新版本。absent: 表示要求目标主机上不存在指定的软件包。如果软件包已安装，则会将其卸载；如果软件包未安装，则不执行任何操作。installed: 与 present 意义相同，用于明确表达希望软件包已经安装在目标主机上。removed: 与 absent 意义相同，用于明确表达希望软件包已从目标主机上卸载。 service模块:调用的是service命令 service模块主要用于在远程服务器上启动、停止、重启、重新加载、启用、禁用、检查服务，可以指定服务的名称、状态、启动方式等信息，等等 示例：启动服务 1ansible webservers -m service -a &quot;name=httpd state=started&quot; 123456789# service.yml---- name: 在 web 服务器上启动 httpd 服务 hosts: webservers tasks: - name: 启动 httpd 服务 service: name: httpd state: started 常用参数说明:ansible-doc -s service 参数 描述 name 服务的名称。 state 服务的状态。可选值包括 started（已启动）、stopped（已停止）、restarted（已重启）。 enabled 是否在启动时自动启用服务。如果为 yes，则在系统启动时自动启动服务。默认为 yes。 pattern 匹配服务的模式。默认情况下为服务名称。 sleep 在重新启动服务之前等待的秒数。 arguments 启动或停止服务时要传递的参数。 state 123started：表示要求服务处于已启动状态。如果指定的服务未启动，则 Ansible 将尝试启动该服务。如果服务已经处于运行状态，则不执行任何操作。stopped：表示要求服务处于已停止状态。如果指定的服务正在运行，则 Ansible 将尝试停止该服务。如果服务已经停止，则不执行任何操作。restarted：表示要求重启服务。无论服务当前处于运行状态还是停止状态，Ansible 都会尝试重新启动该服务。 systemd模块:支持centos7+，调用的是systemctl systemd模块用于控制 systemd 后台服务，允许你启动、重新启动、停止或者重新加载 systemd 服务。此外，你也可以使用它来使服务在系统启动时自动启动或禁止自动启动。除此之外，systemd 模块还允许你检查服务的状态。 示例 1ansible webservers -m systemd -a &quot;name=httpd state=restarted&quot; 123456789# systemd.yml---- name: 在 web 服务器上重新启动 httpd 服务 hosts: webservers tasks: - name: 重新启动 httpd 服务 systemd: name: httpd state: restarted 主要参数说明：ansible-doc -s systemd 参数 描述 enabled 指定服务是否应该在启动时自动启用。可选值为 yes 或 no。默认为 yes。 masked 指定服务是否应该被置为 masked 状态，禁止手动启动。可选值为 yes 或 no。默认为 no。 name 服务的名称。 state 指定服务的状态。可选值为 started（启动）、stopped（停止）、restarted（重新启动）、reloaded（重新加载） script模块 script模块主要用于在远程服务器上执行本地的脚本 示例：执行脚本 1ansible webservers -m script -a &quot;chdir=/tmp /tmp/a.sh&quot; 123456789# script.yml---- name: 在 web 服务器上运行脚本 hosts: webservers tasks: - name: 在 /tmp 目录中运行脚本 script: chdir: /tmp # 指定脚本的执行目录 cmd: /tmp/a.sh # 本地脚本的路径 常用参数说明:ansible-doc -s script 参数 描述 chdir 在远程主机上执行脚本之前切换到的目录。 free_form 要在远程主机上执行的脚本内容。 creates 如果指定的文件已经存在，则不执行脚本。 executable 指定要使用的脚本解释器。 removes 在执行脚本之后，如果指定的文件存在，则删除该文件。 cmd 指定要执行的命令。 decrypt 指定要解密的源文件。 user模块 user模块主要用于在远程服务器上创建、修改、删除用户，可以指定用户的名称、密码、uid、gid、home、shell等信息，等等 示例：创建用户 1ansible webservers -m user -a &quot;name=nginx group=nginx shell=/sbin/nologin create_home=no&quot; 12345678910# user.yml---- name: 创建用户 nginx hosts: webservers tasks: - name: 添加用户 nginx user: name: nginx # 用户名称 shell: /sbin/nologin # 指定用户shell,非登录用户 createhome: no # 不创建用户主目录 常用参数说明:ansible-doc -s user 参数 描述 append 是否将用户添加到现有组，而不是替换组。 comment 对用户的注释信息。 createhome 是否创建用户的家目录。 expires 用户帐户过期日期。 force 是否强制创建或更改用户帐户。 generate_ssh_key 是否生成用户的 SSH 密钥对。 group 用户所属组的名称或 ID。 groups 用户所属的其他组。 home 用户的家目录路径。 login_class 用户登录类。 move_home 是否在更改用户家目录路径时移动其内容。 name 用户的名称。 non_unique 允许用户具有非唯一的数字 ID。 password 用户的密码哈希值或加密后的密码。 remove 是否删除用户。 shell 用户的 shell。 state 用户帐户的状态。 system 是否为系统用户。 uid 用户的数字 ID。 state 12present：表示要求指定的用户账户存在。如果指定的用户账户不存在，则 Ansible 将会创建该账户。如果用户账户已经存在，则不执行任何操作。absent：表示要求指定的用户账户不存在。如果指定的用户账户存在，则 Ansible 将会删除该账户。如果用户账户不存在，则不执行任何操作。 get_url模块 get_url模块负责下载文件到目标主机。 示例 1ansible webservers -m get_url -a &quot;url=https://www.example.com dest=/tmp&quot; 123456789# get_url.yml---- name: 下载文件到目标主机的指定目录 hosts: webservers tasks: - name: Download files from remote host get_url: url: https://www.example.com/file.conf dest: /tmp 主要参数说明:ansible-doc -s get_url 参数 描述 url 要下载的文件的 URL 地址。 dest 下载文件保存的目标路径。 force 是否强制覆盖目标路径中的文件。可选值为 yes 或 no。默认为 yes。 timeout 下载超时时间，单位为秒。默认为 10 秒。 validate_certs 是否验证 SSL 证书。可选值为 yes 或 no。默认为 yes。 owner 下载后文件的所有者。 group 下载后文件的所属组。 mode 下载后文件的权限模式。 backup 是否创建备份文件。可选值为 yes 或 no。默认为 no。 headers 附加的 HTTP 请求头。 force_basic_auth 是否强制使用 HTTP 基本身份验证。可选值为 yes 或 no。默认为 yes。 http_agent 用于 HTTP 请求的代理。 lineinfile模块 lineinfile模块主要用于在远程主机上查找和替换文件中的行，可以指定要查找的行、要替换的行、要添加的行等信息，等等 示例：设置环境变量，需要注意的是此时环境变量在剧本的上下文中是不生效的，如果需要在剧本上下文生效的环境变量，可以使用 shell 模块 1ansible webservers -m lineinfile -a &quot;path=/etc/profile line=&#x27;PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin&#x27; state=present backup=yes&quot; 1234567891011# lineinfile.yml---- name: 设置环境变量 hosts: webservers tasks: - name: 设置环境变量 lineinfile: path: /etc/profile line: &#x27;PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin&#x27; state: present backup: yes 主要参数说明:ansible-doc -s lineinfile 参数 描述 path 要修改的文件的路径。 line 要添加、修改或删除的行内容。 state 指定要执行的操作。 regexp 用于匹配行的正则表达式。 search_string 用于匹配行的字符串。 backup 是否创建备份文件。可选值为 yes 或 no。默认为 no。 backrefs 是否允许在 regexp 中使用反向引用。 insertbefore 指定一个行，将新行插入到它之前。 insertafter 指定一个行，将新行插入到它之后。 firstmatch 是否只匹配第一个匹配项。 state说明 12present：确保指定的行存在于文件中。如果文件中不存在指定的行，则会添加该行。如果文件中已经存在该行，则不做任何改变。absent：确保指定的行不存在于文件中。如果文件中存在指定的行，则会将该行删除。如果文件中不存在该行，则不做任何改变。 ansible-playbook:剧本 ansible-playbook是Ansible的核心命令，用于执行playbook文件，playbook文件是Ansible执行任务的最小单元，一个playbook文件可以包含多个play，每个play可以包含多个task，每个task可以包含多个module，每个module可以执行一个操作，比如创建目录、安装软件包、启动服务、执行脚本等 Ansible中文全文指南–Playbooks 上面在介绍ansible模块时，我们已经编写了一些playbook文件，就是那些yml文件，运行时也是通过ansible-playbook命令执行的，但是基本上都是单个任务单个模块，下面我们来看一个复杂一些的示例 示例：安装nginx并配置 12345678910111213141516171819202122232425262728293031# playbook.yml---- name: 安装nginx并配置 hosts: webservers become: yes # 切换到root用户下执行 tasks: - name: install nginx yum: name: gcc,zlib-devel,pcre-devel,openssl-devel state: installed - name: wget nginx tar.gz shell: cmd: wget https://nginx.org/download/nginx-1.22.1.tar.gz chdir: /usr/local - name: tar -zxvf nginx-1.22.1.tar.gz shell: cmd: tar -zxvf nginx-1.22.1.tar.gz chdir: /usr/local - name: add user nginx user: name: nginx state: present shell: /sbin/nologin createhome: no - name: configure ,make and make install shell: cmd: cd nginx-1.22.1;./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx;make -j4;make -j4 install; chdir: /usr/local - name: start nginx shell: cmd: /usr/local/nginx/sbin/nginx 优化1 问题: 上面的剧本有个问题，就是如果系统已经安装了nginx，则运行这个剧本还是会重新安装 解决方法: 先判断nginx是否已经安装，如果已经安装，直接跳过安装步骤，直接执行启动命令，否则执行安装步骤，然后再执行启动命令 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061---- name: 安装nginx并配置 hosts: webservers become: yes # 切换到root用户下执行 tasks: - name: 检查系统是否已安装Nginx shell: /usr/local/nginx/sbin/nginx -v register: nginx_installed ignore_errors: yes - name: 安装Nginx依赖软件包 yum: name: &quot;&#123;&#123; item &#125;&#125;&quot; state: present loop: - gcc - zlib - zlib-devel - pcre-devel - openssl - openssl-devel when: nginx_installed.rc != 0 # 只有当Nginx未安装时执行 - name: 检查系统是否已启动Nginx shell: ps aux | grep nginx | grep -v grep register: nginx_status ignore_errors: yes - name: 下载Nginx源码包 get_url: url: https://nginx.org/download/nginx-1.22.1.tar.gz dest: /usr/local when: nginx_installed.rc != 0 # 只有当Nginx未安装时执行 - name: 解压Nginx源码包 shell: cmd: tar -zxvf nginx-1.22.1.tar.gz chdir: /usr/local when: nginx_installed.rc != 0 # 只有当Nginx未安装时执行 - name: 添加nginx用户 user: name: nginx state: present shell: /sbin/nologin createhome: no - name: 编译Nginx并安装 shell: cmd: | cd nginx-1.22.1 ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx make -j4 make -j4 install chdir: /usr/local when: nginx_installed.rc != 0 # 只有当Nginx未安装时执行 - name: 启动Nginx服务 shell: cmd: /usr/local/nginx/sbin/nginx when: nginx_status.rc != 0 # 只有当Nginx未启动时执行 register :用于将命令执行的结果保存到变量中，我们可以调用变量的属性，比如rc表示命令返回的状态码($?)，stdout表示命令的输出，stderr表示命令的错误输出 ignore_errors :用于忽略错误 loop :用于循环列表 when :用于判断条件，只有条件满足时才执行 优化2 问题: 上面的步骤有点多，比如下载、解压、编译nginx，这些都是在没有安装nginx的情况下要运行的任务 解决方法: 使用shell模块可以将这些步骤封装成一个任务 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051---- name: 安装nginx并配置 hosts: webservers become: yes # 切换到root用户下执行 tasks: - name: 检查系统是否已安装Nginx shell: /usr/local/nginx/sbin/nginx -v register: nginx_installed ignore_errors: yes - name: 安装Nginx依赖软件包 yum: name: &quot;&#123;&#123; item &#125;&#125;&quot; state: present loop: - gcc - zlib - zlib-devel - pcre-devel - openssl - openssl-devel when: nginx_installed.rc != 0 # 只有当Nginx未安装时执行 - name: 检查系统是否已启动Nginx shell: ps aux | grep nginx | grep -v grep register: nginx_status ignore_errors: yes - name: 添加nginx用户 user: name: nginx state: present shell: /sbin/nologin createhome: no - name: Nginx并安装 shell: cmd: | wget https://nginx.org/download/nginx-1.22.1.tar.gz tar -zxvf nginx-1.22.1.tar.gz cd nginx-1.22.1 ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx make -j4 make -j4 install chdir: /usr/local when: nginx_installed.rc != 0 # 只有当Nginx未安装时执行 - name: 启动Nginx服务 shell: cmd: /usr/local/nginx/sbin/nginx when: nginx_status.rc != 0 # 只有当Nginx未启动时执行 优化3 问题: 上面的剧本虽然已经满足了我的需求，但是不够简练，因为很多任务并不是主要任务，我需要在每个任务中进行条件判断来决定是否执行该任务，能否只保留主要任务，其它任务只有当这些主要任务成功运行了才会被运行呢？比如这里的主要任务就是两个：1-判断是否安装了nginx，没安装就去安装，2-判断是否启动了nginx，没启动就去启动 解决方法: 使用基于handlers的notify语句，这样可以减少重复执行任务的次数 何为handlers Handler 本身是一种非同步的 callback function ，在这里则是指关连于特定 tasks 的事件 (event) 触发机制。当关联 handler 的 tasks 状态为被改变 (changed) 且都已被执行时，才会触发一次 何为 tasks 状态为被改变 (changed) 在Ansible中，task的状态会根据任务执行的结果而改变。当一个任务成功完成并且使得系统的状态与预期不同（即执行了一些更改），那么这个任务的状态就会被标记为&quot;changed&quot;。 具体来说，task状态为&quot;changed&quot;的条件包括但不限于以下情况： 123456文件变更：例如复制、创建、删除文件等操作导致了文件系统的变更。服务状态变更：例如启动、停止、重启服务等操作导致了服务状态的改变。配置更改：例如修改配置文件、添加配置项等操作导致了系统配置的改变。软件包安装/卸载：例如安装新的软件包或者删除已安装的软件包导致了系统软件状态的改变。权限变更：例如修改文件权限、更改用户组、更改用户等操作导致了系统权限的改变。当一个或多个任务的状态被标记为&quot;changed&quot;时，与这些任务关联的handlers会被触发执行。这样可以确保在所有相关的任务都完成并且导致了系统状态的改变时，才执行后续的处理操作，从而保证了任务的一致性和可靠性。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859---- name: 安装nginx并配置 hosts: webservers become: yes # 切换到root用户下执行 tasks: - name: 判断是否存在nginx安装目录，不存在就安装nginx file: path: /usr/local/nginx state: directory notify: # 执行通知任务，顺序为从下到上 - Nginx安装 # 匹配任务name - 安装Nginx依赖软件包 - 添加nginx用户 - name: 检查系统是否已启动Nginx shell: ps aux | grep nginx | grep -v grep register: nginx_status ignore_errors: yes - name: 检查是否需要启动nginx shell: echo &quot;start nginx&quot; when: nginx_status.rc != 0 # 只有当条件满足时才会运行该任务 notify: # 运行任务后只有状态为changed才会发送notify给handler - 启动Nginx服务 handlers: # handlers是一类特殊任务，当有notify时，会自动执行该任务 - name: 添加nginx用户 user: name: nginx state: present shell: /sbin/nologin createhome: no - name: 安装Nginx依赖软件包 yum: name: &quot;&#123;&#123; item &#125;&#125;&quot; state: present loop: - gcc - zlib - zlib-devel - pcre-devel - openssl - openssl-devel - name: Nginx安装 shell: cmd: | wget https://nginx.org/download/nginx-1.22.1.tar.gz tar -zxvf nginx-1.22.1.tar.gz cd nginx-1.22.1 ./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --user=nginx make -j4 make -j4 install chdir: /usr/local - name: 启动Nginx服务 shell: cmd: /usr/local/nginx/sbin/nginx 优化4 问题: 上面的剧本中nginx的安装版本和安装路径都是写死的，能否动态配置呢？ 解决方法: 提取变量，使用vars 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465---- name: 安装nginx并配置 hosts: webservers become: yes # 切换到root用户下执行 vars: # 定义变量 nginx_version: &quot;1.22.1&quot; work_dir: &quot;/usr/local&quot; nginx_install_path: &quot;/usr/local/nginx&quot; tasks: - name: 判断是否存在nginx安装目录，不存在就安装nginx file: path: &quot;&#123;&#123; nginx_install_path &#125;&#125;&quot; # 变量一定要双括号 state: directory notify: # 执行通知任务，顺序为从下到上 - Nginx安装 # 匹配任务name - 安装Nginx依赖软件包 - 添加nginx用户 - name: 检查系统是否已启动Nginx shell: ps aux | grep nginx | grep -v grep register: nginx_status ignore_errors: yes - name: 检查是否需要启动nginx shell: echo &quot;start nginx&quot; when: nginx_status.rc != 0 notify: - 启动Nginx服务 handlers: # handlers是一类特殊任务，当有notify时，会自动执行该任务 - name: 添加nginx用户 user: name: nginx state: present shell: /sbin/nologin createhome: no - name: 安装Nginx依赖软件包 yum: name: &quot;&#123;&#123; item &#125;&#125;&quot; state: present loop: - gcc - zlib - zlib-devel - pcre-devel - openssl - openssl-devel - name: Nginx安装 shell: cmd: | wget https://nginx.org/download/nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz tar -zxvf nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz cd nginx-&#123;&#123; nginx_version &#125;&#125; ./configure --prefix=&#123;&#123; nginx_install_path &#125;&#125; --with-http_stub_status_module --with-http_ssl_module --user=nginx make -j4 make -j4 install chdir: &quot;&#123;&#123; work_dir &#125;&#125;&quot; - name: 启动Nginx服务 shell: cmd: &quot;&#123;&#123; nginx_install_path &#125;&#125;/sbin/nginx&quot; 1234# 默认ansible-playbook nginx.yml# 修改变量ansible-playbook nginx.yml -e &quot;nginx_version=1.24.0&quot; -e &quot;work_dir=/root&quot; 小贴士 除了我们自己定义的变量，我们也可以使用Ansible内置的变量，Ansible内置的变量可以参考官方文档。 我们用的最多的就是ansible_facts变量获取主机信息，如IP地址、MAC地址、操作系统版本等。也就是通过setup模块获取的信息。 在使用ansible_facts变量时需要开启gather_facts选项，默认是开启的。 常用的ansible_facts变量如下，注意这里属性名称前是不加ansible_前缀的： 123ansible_facts[&#x27;distribution&#x27;]: 远程主机的操作系统分发名称。ansible_facts[&#x27;distribution_version&#x27;]: 远程主机的操作系统版本号。ansible_facts[&#x27;user_id&#x27;]: 远程主机上当前用户的用户 ID。 ansible-playbook:Template Ansible Playbook Template是一种Ansible的特性，它允许您在Playbook中使用Jinja2模板语言来动态生成配置文件或其他文本文件。通过使用模板，您可以根据变量、条件、循环等动态信息来生成目标文件，从而使配置文件更具可扩展性和灵活性。 下面是使用Ansible Playbook Template的一些常见用法和特性： 12345Jinja2模板语言: Ansible Playbook Template使用Jinja2模板语言，这是一种功能强大的模板引擎，支持变量替换、条件语句、循环语句等功能。变量替换: 您可以在模板中使用Ansible的变量来替换文本中的占位符。这使得您可以根据不同的环境或条件生成不同的配置文件。条件语句: 您可以在模板中使用条件语句来根据不同的条件生成不同的文本。这允许您根据需要灵活地调整生成的配置文件。循环语句: 您可以在模板中使用循环语句来对列表或字典中的元素进行迭代，从而生成重复的文本块。包含其他模板文件: 您可以在一个模板中包含其他模板文件，从而使模板更加模块化和易于管理。 Jinja2模板文件后缀为.j2，常用语法如下： 123456789101112131415# 打印变量&#123;&#123; index_title &#125;&#125;# for循环&#123;% for key in index_for_array %&#125;&lt;p&gt;show &#123;&#123; key &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125;# if判断&#123;% if blog_href_show %&#125;&lt;p&gt;&lt;a href=&quot;&#123;&#123; blog_href &#125;&#125;&quot;&gt;&#123;&#123; index_title &#125;&#125;&lt;/a&gt;.&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Thank you for using &#123;&#123; index_title &#125;&#125;.&lt;/em&gt;&lt;/p&gt;&#123;% endif %&#125; 结合上面部署nginx的示例，我这里增加一个任务，就是替换nginx发布目录下的index.html，然后重启nginx，这里给出index.html.j2 12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;&#123;&#123; index_title &#125;&#125;&lt;/title&gt;&lt;style&gt;html &#123; color-scheme: light dark; &#125;body &#123; width: 35em; margin: 0 auto;font-family: Tahoma, Verdana, Arial, sans-serif; &#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Hello World!&lt;/h1&gt;&lt;img src=&quot;&#123;&#123; blog_img &#125;&#125;&quot;&gt;&#123;% for key in index_for_array %&#125;&lt;p&gt;show &#123;&#123; key &#125;&#125;&lt;/p&gt;&#123;% endfor %&#125;&#123;% if blog_href_show %&#125;&lt;p&gt;&lt;a href=&quot;&#123;&#123; blog_href &#125;&#125;&quot;&gt;&#123;&#123; index_title &#125;&#125;&lt;/a&gt;.&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Thank you for using &#123;&#123; index_title &#125;&#125;.&lt;/em&gt;&lt;/p&gt;&#123;% endif %&#125;&lt;/body&gt;&lt;/html&gt; 接着我们修改剧本yml 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293---- name: 安装nginx并配置 hosts: webservers become: yes # 切换到root用户下执行 vars: # 定义变量 nginx_version: &quot;1.22.1&quot; work_dir: &quot;/usr/local&quot; nginx_install_path: &quot;/usr/local/nginx&quot; index_title: &quot;hanqf&#x27;s blog&quot; index_for_array: - hello - world blog_href_show: true blog_href: &quot;https://blog.hanqunfeng.com&quot; blog_img: &quot;me.png&quot; tasks: - name: 判断是否存在nginx安装目录，不存在就安装nginx file: path: &quot;&#123;&#123; nginx_install_path &#125;&#125;&quot; # 变量一定要双括号 state: directory notify: # 执行通知任务，顺序为从下到上 - Nginx安装 # 匹配任务name - 安装Nginx依赖软件包 - 添加nginx用户 - name: 检查系统是否已启动Nginx shell: ps aux | grep nginx | grep -v grep register: nginx_status ignore_errors: yes - name: 检查是否需要启动nginx shell: echo &quot;start nginx&quot; when: nginx_status.rc != 0 notify: - 启动Nginx服务 - name: 上传图片 copy: src: me.png # 与yml在同一目录 dest: &quot;&#123;&#123; nginx_install_path &#125;&#125;/html/me.png&quot; - name: 发布index.html template: src: index.html.j2 # 与yml在同一目录 dest: &quot;&#123;&#123; nginx_install_path &#125;&#125;/html/index.html&quot; force: true # 强制覆盖 backup: true # 覆盖前备份 notify: - 重启Nginx服务 handlers: # handlers是一类特殊任务，当有notify时，会自动执行该任务 - name: 添加nginx用户 user: name: nginx state: present shell: /sbin/nologin createhome: no - name: 安装Nginx依赖软件包 yum: name: &quot;&#123;&#123; item &#125;&#125;&quot; state: present loop: - gcc - zlib - zlib-devel - pcre-devel - openssl - openssl-devel - name: Nginx安装 shell: cmd: | wget https://nginx.org/download/nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz tar -zxvf nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz cd nginx-&#123;&#123; nginx_version &#125;&#125; ./configure --prefix=&#123;&#123; nginx_install_path &#125;&#125; --with-http_stub_status_module --with-http_ssl_module --user=nginx make -j4 make -j4 install chdir: &quot;&#123;&#123; work_dir &#125;&#125;&quot; - name: 启动Nginx服务 shell: cmd: &quot;&#123;&#123; nginx_install_path &#125;&#125;/sbin/nginx&quot; - name: 重启Nginx服务 shell: cmd: | pkill nginx &quot;&#123;&#123; nginx_install_path &#125;&#125;/sbin/nginx&quot; 替换之后的效果 12345678910111213141516171819202122232425&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;hanqf&#x27;s blog&lt;/title&gt;&lt;style&gt;html &#123; color-scheme: light dark; &#125;body &#123; width: 35em; margin: 0 auto;font-family: Tahoma, Verdana, Arial, sans-serif; &#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Hello World!&lt;/h1&gt;&lt;img src=&quot;me.png&quot;&gt;&lt;p&gt;show hello&lt;/p&gt;&lt;p&gt;show world&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://blog.hanqunfeng.com&quot;&gt;hanqf&#x27;s blog&lt;/a&gt;.&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Thank you for using hanqf&#x27;s blog.&lt;/em&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; template模块的常用参数说明 ansible-doc -s template 参数 必需 默认值 描述 src 是 无 模板文件的路径。 dest 是 无 目标文件的路径。 force 否 false 如果目标文件已经存在，是否强制覆盖。 backup 否 false 如果设置为true，则在覆盖目标文件之前创建备份。 unsafe_writes 否 false 如果设置为true，则会跳过文件的暂时性写入保护（如确保在写入文件之前不会更改其内容）。 newline_sequence 否 \\n 用于生成文件时的换行符序列。 validate 否 无 要应用于生成文件的验证器脚本的路径。 mode 否 无 目标文件的权限模式。 owner 否 无 目标文件的所有者。 group 否 无 目标文件的所属组。 这里要注意template模块与copy模块的区别，前者在上传时会进行变量替换。 ansible-playbook:Role Ansible中的Role是一种组织和管理剧本的方法，它允许您将相关的任务、变量、文件和处理程序组合到一个可重用的单元中。Role使得您可以更轻松地管理和组织大型的Ansible项目，并促进了可维护性和复用性。 Role的特性 1234567891011组织性：Role允许您将相关的任务和文件组织在一起，使得代码更易于理解和维护。每个Role通常都有一个特定的目的，例如安装特定的软件、配置服务或执行特定的系统管理任务。可重用性：Role可以被设计成可重用的组件，可以在不同的项目中多次使用。这样一来，您可以将常见的功能和配置封装到Role中，并在需要时轻松地调用它们，从而提高了代码的复用性和可移植性。结构化布局：Ansible推荐一种特定的目录结构来组织Role，包括tasks、handlers、templates、files、vars和defaults等目录。这种结构化布局有助于更清晰地分离任务、变量、文件和处理程序，并使Role更易于管理和维护。参数化：Role可以使用变量来接受外部输入，从而使其更加灵活和通用。通过参数化，您可以定制Role的行为，使其适用于不同的环境和需求。依赖关系：Role可以定义依赖关系，即一个Role可能依赖于另一个Role。这种依赖关系使得您可以构建复杂的系统配置，而不必重复编写相同的代码。可测试性：由于Role是可重用的组件，因此它们也是可测试的。您可以编写测试用例来验证Role的行为是否符合预期，并确保在修改代码时不会破坏现有功能。 ansible-examples 创建role 123456789101112131415161718192021222324252627# 在当前目录下创建一个名称为nginx-install的role，实际上就是创建一个名称为nginx-install的目录结构ansible-galaxy init nginx-install# 在指定目录下创建roleansible-galaxy init --init-path /usr/local nginx-install# nginx-install目录结构$ tree nginx-install/nginx-install/├── README.md├── defaults│ └── main.yml├── files├── handlers│ └── main.yml├── meta│ └── main.yml├── tasks│ └── main.yml├── templates├── tests│ ├── inventory│ └── test.yml└── vars └── main.yml8 directories, 8 files 12345678files：存放由copy或script模块等调用的文件templates：template模块查找所需要模板文件的目录tasks：定义task、role的基本元素，至少应该包含一个名为main.yml的文件。其他文件需要在此文件中通过include进行包含handlers：至少应该包含一个名为main.yml的文件，其他文件需要在此文件中通过include进行包含vars：定义变量，至少应该包含一个名为main.yml的文件，其他文件需要在此文件中通过include进行包含meta：定义当前角色的特殊设定及其依赖关系，至少应该包含一个名为main.yml的文件，其他文件需在此文件中通过include进行包含default：设定默认变量时使用此目录中的main.yml文件，比vars的优先级低tests：定义测试用例，至少应该包含一个名为inventory的文件，其他文件需要在此文件中通过include进行包含 ansible查找role的路径，推荐放到/etc/ansible/roles 12345$(pwd)/roles/$(whoami)/.ansible/roles/usr/share/ansible/roles/etc/ansible/roles$(pwd) 我们将上面安装nginx那个剧本修改为role的方式 nginx-install/tasks/main.yml 1234567891011121314151617181920212223242526272829303132333435363738394041---# tasks file for nginx-install- name: Check if running as root fail: msg: &quot;This role must be run as root user&quot; when: ansible_facts[&#x27;user_id&#x27;] != &#x27;root&#x27; # 因为我们的剧本是需要root用户运行，所以这里加一个判断，这里就用到了ansible_facts特殊变量- name: 判断是否存在nginx安装目录，不存在就安装nginx file: path: &quot;&#123;&#123; nginx_install_path &#125;&#125;&quot; state: directory notify: # 执行通知任务，顺序为从下到上 - Nginx安装 - 安装Nginx依赖软件包 - 添加nginx用户- name: 检查系统是否已启动Nginx shell: ps aux | grep nginx | grep -v grep register: nginx_status ignore_errors: yes- name: 检查是否需要启动nginx shell: echo &quot;start nginx&quot; when: nginx_status.rc != 0 notify: - 启动Nginx服务- name: 上传图片 copy: src: me.png # 与yml在同一目录 dest: &quot;&#123;&#123; nginx_install_path &#125;&#125;/html/me.png&quot;- name: 发布index.html template: src: index.html.j2 # 与yml在同一目录 dest: &quot;&#123;&#123; nginx_install_path &#125;&#125;/html/index.html&quot; force: true # 强制覆盖 backup: true # 覆盖前备份 notify: - 重启Nginx服务 nginx-install/handlers/main.yml 1234567891011121314151617181920212223242526272829303132333435363738394041---# handlers file for nginx-install- name: 添加nginx用户 user: name: nginx state: present shell: /sbin/nologin createhome: no- name: 安装Nginx依赖软件包 yum: name: &quot;&#123;&#123; item &#125;&#125;&quot; state: present loop: - gcc - zlib - zlib-devel - pcre-devel - openssl - openssl-devel- name: Nginx安装 shell: cmd: | wget https://nginx.org/download/nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz tar -zxvf nginx-&#123;&#123; nginx_version &#125;&#125;.tar.gz cd nginx-&#123;&#123; nginx_version &#125;&#125; ./configure --prefix=&#123;&#123; nginx_install_path &#125;&#125; --with-http_stub_status_module --with-http_ssl_module --user=nginx make -j4 make -j4 install chdir: &quot;&#123;&#123; work_dir &#125;&#125;&quot;- name: 启动Nginx服务 shell: cmd: &quot;&#123;&#123; nginx_install_path &#125;&#125;/sbin/nginx&quot;- name: 重启Nginx服务 shell: cmd: | pkill nginx &quot;&#123;&#123; nginx_install_path &#125;&#125;/sbin/nginx&quot; nginx-install/vars/main.yml 123456789101112---# vars file for nginx-installnginx_version: &quot;1.22.1&quot;work_dir: &quot;/usr/local&quot;nginx_install_path: &quot;/usr/local/nginx&quot;index_title: &quot;hanqf&#x27;s blog&quot;index_for_array: - hello - worldblog_href_show: trueblog_href: &quot;https://blog.hanqunfeng.com&quot;blog_img: &quot;me.png&quot; 小贴士 上面介绍的tasks、handlers，其目录中都含有一个main.yml文件，这个文件是必须存在的 但是如果配置的内容比较多，都写在main.yml文件中，那么这个文件就显得有点臃肿，所以可以将这些内容拆分成多个文件，然后在main.yml文件中通过include进行包含 123---- include: other1.yml- include: other2.yml tasks或者handlers中还可以使用include_tasks进行包含 12345678---- include_tasks: other1.yml- include_tasks: other2.yml# 或者- include_tasks: &quot;&#123;&#123; item &#125;&#125;&quot; loop: - other1.yml - other2.yml vars里也可以定义多个yml文件存储变量，然后在tasks中通过include_vars进行包含，注意，必须放在task的yml文件中 12345678# 此时不需要加上vars路径，会自动从vars目录下查找- include_vars: &quot;v-other1.yml&quot;- include_vars: &quot;v-other2.yml&quot;# 或者- include_vars: &quot;&#123;&#123; item &#125;&#125;&quot; loop: - v-other1.yml - v-other2.yml 将模板文件和图片文本保存到对应的路径 nginx-install/templates/index.html.j2 nginx-install/files/me.png 执行 假设我们将创建的角色安装到了/etc/ansible/roles下 创建启动剧本nginx-install-start.yml，我们也可以修改tests/test.yml 12345- name: 安装nginx并配置 hosts: webservers become: yes # 切换到root用户下执行 roles: # 调用role - nginx-install # role名称 执行role 1ansible-playbook nginx-install-start.yml ansible-galaxy 什么是ansible-galaxy 用于从ansible-galaxy官网上查找，下载role和collection的工具，如何下载和使用网站上都有说明。 ansible-galaxy用户指南 我们也可以将自己创建好的role发布到ansible-galaxy上，可以参考 Ansible Role Publish To Galaxy role 1234567891011121314# 搜索roleansible-galaxy search mysql# 或者ansible-galaxy role search mysql# 查看已经安装的roleansible-galaxy list# 或者ansible-galaxy role list# 安装role，默认安装到 ~/.ansible/roles 下ansible-galaxy role install shaneholloman.redis# 安装到指定路径ansible-galaxy role install &lt;role-name&gt; -p &lt;path&gt; collection ansible-galaxy同时支持下载 collection 1234567# 查看已经安装的collectionansible-galaxy collection list# 安装collection，，默认安装到 ~/.ansible/collections/ansible_collections 下ansible-galaxy collection install saiello.kafka# 安装到指定路径ansible-galaxy collection install &lt;collection-name&gt; -p &lt;path&gt; Ansible Collection 是 Ansible 社区为了更好地管理和组织 Ansible 角色、模块、插件等内容而引入的概念。它可以被视为一种打包机制，用于将相关的 Ansible 内容打包成单独的单元，使得其更易于分享、安装和维护。 具体来说，Ansible Collection 具有以下作用： 123456789组织和管理角色、模块和插件：通过 Collection，可以将相关的角色、模块和插件打包在一起，形成逻辑上的单元，提高了内容的组织性和可管理性。易于分享和分发：Ansible Collection 可以被轻松地分享和分发给其他用户。开发人员可以将自己的角色、模块打包成 Collection，并将其发布到 Ansible Galaxy 或其他集中式的仓库中，供其他用户使用。版本控制和更新：与角色相比，Collection 更容易进行版本控制和更新。开发人员可以为 Collection 指定版本，并在更新内容时发布新的版本，使得用户可以选择使用特定版本或者升级到最新版本。依赖管理：Collection 支持依赖管理，可以在 Collection 中指定依赖关系，确保相关的角色、模块和插件能够正常工作。提供文档和示例：开发人员可以将文档和示例代码与 Collection 打包在一起，使得用户更容易理解和使用其中的内容。 总的来说，Ansible Collection 提供了一种更高级别的组织和管理方式，使得 Ansible 内容更易于分享、使用和维护，从而提高了 Ansible 的整体生态系统的健壮性和可用性。 小贴士 前面的剧本中我们多次使用到了become切换用户到root用户，其实在ansible.cfg中我们可以配置become_user，这样我们就可以不用每次都切换用户了 但这里有个需要注意的点，就是因为 become 会以一个全新的环境执行任务，所以其不会包含原用户的环境变量。可以理解为其是通过sudo su切换到root，而非sudo -i。 后记 关于ansible的知识点还有很多没有研究到，后面会慢慢补吧…… 关于将Ansible Role发布到Galaxy的详细介绍可以参看 Ansible Role Publish To Galaxy 关于将Ansible Collection发布到Galaxy的详细介绍可以参看 Ansible Collection Publish To Galaxy","summary":"摘要 本文介绍Ansible的安装和使用。 本文基于CentOS8。","date_published":"2024-03-19T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2024/03/14/mongodb7-mtools/","url":"https://blog.hanqunfeng.com/2024/03/14/mongodb7-mtools/","title":"MongoDB本地测试环境搭建工具--mtools之mlaunch使用方法","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍mtools工具的使用</p>\n</li>\n<li class=\"lvl-2\">\n<p>mtools<a href=\"https://rueckstiess.github.io/mtools/\">官方文档</a>，<a href=\"https://github.com/rueckstiess/mtools\">mtools-github</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>mtools提供的<code>mlaunch</code>是一个基于python的mongo环境管理工具，可以方便的启动、停止、重启、kill mongo进程，还可以查看mongo进程的运行状态，可以方便初学者快速搭建本地mongo环境，但是其只能在一台机器上运行。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"mtools安装\">mtools安装</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>mtools基于python3，支持mongo4+以上版本，但是mtools并且不会为我们安装mongodb，所以需要我们自己先在系统中安装好mongodb，mongodb的安装可以参考<a href=\"/2024/03/01/mongodb7/\" title=\"MongoDB7.0的安装\">MongoDB7.0的安装</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>按照官网的说法，mtools支持的Python版本为 3.7|3.8|3.9|3.10，其他版本的Python目前不受支持或测试，但作者的python版本为3.11.3，并没有出现兼容性问题。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ python3 --version</span><br><span class=\"line\">Python 3.11.3</span><br><span class=\"line\">➜  ~ pip3 -V</span><br><span class=\"line\">pip 24.0 from /usr/local/lib/python3.11/site-packages/pip (python 3.11)</span><br><span class=\"line\">➜  ~ pip3 list</span><br><span class=\"line\">Package           Version</span><br><span class=\"line\">----------------- ------------</span><br><span class=\"line\">certifi           2023.11.17</span><br><span class=\"line\">cffi              1.16.0</span><br><span class=\"line\">cryptography      41.0.7</span><br><span class=\"line\">docutils          0.20.1</span><br><span class=\"line\">idna              3.6</span><br><span class=\"line\">Jinja2            3.1.2</span><br><span class=\"line\">MarkupSafe        2.1.3</span><br><span class=\"line\">packaging         23.2</span><br><span class=\"line\">pip               24.0</span><br><span class=\"line\">pycparser         2.21</span><br><span class=\"line\">Pygments          2.17.2</span><br><span class=\"line\">pyparsing         3.1.1</span><br><span class=\"line\">pytz              2023.3.post1</span><br><span class=\"line\">requests          2.31.0</span><br><span class=\"line\">setuptools        68.2.2</span><br><span class=\"line\">six               1.16.0</span><br><span class=\"line\">tabulate          0.0.0</span><br><span class=\"line\">typing_extensions 4.9.0</span><br><span class=\"line\">urllib3           2.1.0</span><br><span class=\"line\">wheel             0.41.2</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装mtools依赖</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install python-dateutil psutil pymongo</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装mtools</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install mtools</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装mtools会同时为我们安装mtools的所有工具，如果只希望安装mlaunch，可以使用下面的命令<br>\n<em><strong>mtools提供的其它工具，如<code>mlogfilter</code>,<code>mloginfo</code>,<code>mplotqueries</code>等并不支持<code>logv2</code>格式的日志，<code>logv2</code>是<code>mongodb4.4+</code>以后的加入的，从<code>mongodb5.0</code>以后<code>logv2</code>为默认的日志格式，所以这里不做介绍。</strong></em></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install <span class=\"string\">&#x27;mtools[mlaunch]&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"mlaunch\">mlaunch</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看mlaunch版本</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  ~ <span class=\"built_in\">which</span> mlaunch</span><br><span class=\"line\">/usr/local/bin/mlaunch</span><br><span class=\"line\">➜  ~ mlaunch --version</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">mtools version 1.7.2 || Python 3.11.6 (main, Oct 3 2023, 02:51:45) [Clang 14.0.3 (clang-1403.0.22.14.1)]</span><br></pre></td></tr></table></figure>\n<h3 id=\"init-构建环境\">init :构建环境</h3>\n<p><em><strong>此命令初始化并启动MongoDB独立实例、副本集或分片集群，它只需要为每个环境调用一次。</strong></em></p>\n<h4 id=\"构建独立实例\">构建独立实例</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 快速构建一个单节点，数据目录在当前路径下的data目录下</span></span><br><span class=\"line\">$ mlaunch init --single --auth</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">Generating keyfile: /mongodb/mtools/single/data/keyfile</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27017</span><br><span class=\"line\">Username <span class=\"string\">&quot;user&quot;</span>, password <span class=\"string\">&quot;password&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数说明</span></span><br><span class=\"line\"><span class=\"comment\"># --single ：启动单节点</span></span><br><span class=\"line\"><span class=\"comment\"># --auth ：开启默认认证，默认用户名/密码:user/password，并授予如下角色</span></span><br><span class=\"line\">  <span class=\"comment\"># &#123; role: &#x27;userAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;,</span></span><br><span class=\"line\">  <span class=\"comment\"># &#123; role: &#x27;readWriteAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;,</span></span><br><span class=\"line\">  <span class=\"comment\"># &#123; role: &#x27;dbAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;,</span></span><br><span class=\"line\">  <span class=\"comment\"># &#123; role: &#x27;clusterAdmin&#x27;, db: &#x27;admin&#x27; &#125;</span></span><br><span class=\"line\"><span class=\"comment\"># --dir ：指定数据目录，默认为当前路径下的data目录</span></span><br><span class=\"line\"><span class=\"comment\"># --bind_ip：指定监听ip，默认为127.0.0.1</span></span><br><span class=\"line\"><span class=\"comment\"># --port：指定监听端口，默认为27017</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"构建复制集\">构建复制集</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 快速构建一个3节点的复制集</span></span><br><span class=\"line\">$ mlaunch init --replicaset --nodes 3 --auth --port 27040</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">Generating keyfile: /mongodb/mtools/replicaset/data/keyfile</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27040</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27041</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27042</span><br><span class=\"line\">replica <span class=\"built_in\">set</span> <span class=\"string\">&#x27;replset&#x27;</span> initialized.</span><br><span class=\"line\">waiting <span class=\"keyword\">for</span> primary to add a user.</span><br><span class=\"line\">Username <span class=\"string\">&quot;user&quot;</span>, password <span class=\"string\">&quot;password&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --replicaset ：创建副本集，默认3个节点</span></span><br><span class=\"line\"><span class=\"comment\"># --nodes 3 ：指定副本集节点个数，默认3个节点</span></span><br><span class=\"line\"><span class=\"comment\"># --auth : 开启默认认证，同单节点</span></span><br><span class=\"line\"><span class=\"comment\"># --port 27040 : 指定复制集的起始端口，默认从27017开始，依次递增</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"构建分片集群\">构建分片集群</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 快速构建一个2个分片的分片集群，每个分片是一个包含3每个节点的复制集，包含一个3个节点配置复制集，并且启动3个mongos路由</span></span><br><span class=\"line\">$ mlaunch init --sharded 2 --replicaset --node 3 --config 3 --csrs --mongos 3 --auth --port 27050</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">Generating keyfile: /mongodb/mtools/sharded/data/keyfile</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27053</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27054</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27055</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27056</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27057</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27058</span><br><span class=\"line\">launching: config server on port 27059</span><br><span class=\"line\">launching: config server on port 27060</span><br><span class=\"line\">launching: config server on port 27061</span><br><span class=\"line\">replica <span class=\"built_in\">set</span> <span class=\"string\">&#x27;configRepl&#x27;</span> initialized.</span><br><span class=\"line\">replica <span class=\"built_in\">set</span> <span class=\"string\">&#x27;shard01&#x27;</span> initialized.</span><br><span class=\"line\">replica <span class=\"built_in\">set</span> <span class=\"string\">&#x27;shard02&#x27;</span> initialized.</span><br><span class=\"line\">launching: mongos on port 27050</span><br><span class=\"line\">launching: mongos on port 27051</span><br><span class=\"line\">launching: mongos on port 27052</span><br><span class=\"line\">adding shards. can take up to 30 seconds...</span><br><span class=\"line\">sent signal 15 to 12 processes.</span><br><span class=\"line\">launching: config server on port 27059</span><br><span class=\"line\">launching: config server on port 27060</span><br><span class=\"line\">launching: config server on port 27061</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27053</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27054</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27055</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27056</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27057</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27058</span><br><span class=\"line\">launching: mongos on port 27050</span><br><span class=\"line\">launching: mongos on port 27051</span><br><span class=\"line\">launching: mongos on port 27052</span><br><span class=\"line\">Username <span class=\"string\">&quot;user&quot;</span>, password <span class=\"string\">&quot;password&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --sharded 2：启用分片集群模式，分片数为2。</span></span><br><span class=\"line\"><span class=\"comment\"># --replicaset : 创建副本集，默认3个节点，可以通过 --nodes 指定复制集节点个数</span></span><br><span class=\"line\"><span class=\"comment\"># --nodes 3：采用3节点的复制集架构，默认就是3个节点。</span></span><br><span class=\"line\"><span class=\"comment\"># --config 3：配置服务器采用3节点的复制集架构模式</span></span><br><span class=\"line\"><span class=\"comment\"># --csrs：指Config Server as a Replica Set，这个也是默认配置</span></span><br><span class=\"line\"><span class=\"comment\"># --mongos 3：启动3个mongos实例进程。</span></span><br><span class=\"line\"><span class=\"comment\"># --auth : 开启默认认证，同单节点</span></span><br><span class=\"line\"><span class=\"comment\"># --port 27050：集群将以27050作为起始端口，集群中的各个实例基于该端口向上递增。</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>以下命令运行时必须指定数据目录，默认为当前路径下的data目录，可以使用<code>--dir</code>指定数据目录，因为需要通过<code>./data/.mlaunch_startup</code>来获取mongo的构建信息。以分片集群举例：</p>\n</blockquote>\n<h3 id=\"list-查看启动信息\">list: 查看启动信息</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看集群状态</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示mongo进程的列表</span></span><br><span class=\"line\">$ mlaunch list</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\"></span><br><span class=\"line\">PROCESS          PORT     STATUS     PID</span><br><span class=\"line\"></span><br><span class=\"line\">mongos           27050    running    61988</span><br><span class=\"line\">mongos           27051    running    61991</span><br><span class=\"line\">mongos           27052    running    61999</span><br><span class=\"line\"></span><br><span class=\"line\">config server    27059    running    61903</span><br><span class=\"line\">config server    27060    running    61911</span><br><span class=\"line\">config server    27061    running    61914</span><br><span class=\"line\"></span><br><span class=\"line\">shard01</span><br><span class=\"line\">    mongod       27053    running    61922</span><br><span class=\"line\">    mongod       27054    running    61947</span><br><span class=\"line\">    mongod       27055    running    61955</span><br><span class=\"line\"></span><br><span class=\"line\">shard02</span><br><span class=\"line\">    mongod       27056    running    61964</span><br><span class=\"line\">    mongod       27057    running    61972</span><br><span class=\"line\">    mongod       27058    running    61980</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看启动命令</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mlaunch list --startup</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\"></span><br><span class=\"line\">PROCESS          PORT     STATUS     PID      STARTUP COMMAND</span><br><span class=\"line\"></span><br><span class=\"line\">mongos           27050    running    61988    mongos --logpath /mongodb/mtools/sharded/data/mongos/mongos_27050.<span class=\"built_in\">log</span> --port 27050 --configdb configRepl/localhost:27059,localhost:27060,localhost:27061 --keyFile /mongodb/mtools/sharded/data/keyfile --fork</span><br><span class=\"line\">mongos           27051    running    61991    mongos --logpath /mongodb/mtools/sharded/data/mongos/mongos_27051.<span class=\"built_in\">log</span> --port 27051 --configdb configRepl/localhost:27059,localhost:27060,localhost:27061 --keyFile /mongodb/mtools/sharded/data/keyfile --fork</span><br><span class=\"line\">mongos           27052    running    61999    mongos --logpath /mongodb/mtools/sharded/data/mongos/mongos_27052.<span class=\"built_in\">log</span> --port 27052 --configdb configRepl/localhost:27059,localhost:27060,localhost:27061 --keyFile /mongodb/mtools/sharded/data/keyfile --fork</span><br><span class=\"line\"></span><br><span class=\"line\">config server    27059    running    61903    mongod --replSet configRepl --dbpath /mongodb/mtools/sharded/data/configRepl/rs1/db --logpath /mongodb/mtools/sharded/data/configRepl/rs1/mongod.log --port 27059 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --configsvr --wiredTigerCacheSizeGB 1</span><br><span class=\"line\">config server    27060    running    61911    mongod --replSet configRepl --dbpath /mongodb/mtools/sharded/data/configRepl/rs2/db --logpath /mongodb/mtools/sharded/data/configRepl/rs2/mongod.log --port 27060 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --configsvr --wiredTigerCacheSizeGB 1</span><br><span class=\"line\">config server    27061    running    61914    mongod --replSet configRepl --dbpath /mongodb/mtools/sharded/data/configRepl/rs3/db --logpath /mongodb/mtools/sharded/data/configRepl/rs3/mongod.log --port 27061 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --configsvr --wiredTigerCacheSizeGB 1</span><br><span class=\"line\"></span><br><span class=\"line\">shard01</span><br><span class=\"line\">    mongod       27053    running    61922    mongod --replSet shard01 --dbpath /mongodb/mtools/sharded/data/shard01/rs1/db --logpath /mongodb/mtools/sharded/data/shard01/rs1/mongod.log --port 27053 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class=\"line\">    mongod       27054    running    61947    mongod --replSet shard01 --dbpath /mongodb/mtools/sharded/data/shard01/rs2/db --logpath /mongodb/mtools/sharded/data/shard01/rs2/mongod.log --port 27054 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class=\"line\">    mongod       27055    running    61955    mongod --replSet shard01 --dbpath /mongodb/mtools/sharded/data/shard01/rs3/db --logpath /mongodb/mtools/sharded/data/shard01/rs3/mongod.log --port 27055 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class=\"line\"></span><br><span class=\"line\">shard02</span><br><span class=\"line\">    mongod       27056    running    61964    mongod --replSet shard02 --dbpath /mongodb/mtools/sharded/data/shard02/rs1/db --logpath /mongodb/mtools/sharded/data/shard02/rs1/mongod.log --port 27056 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class=\"line\">    mongod       27057    running    61972    mongod --replSet shard02 --dbpath /mongodb/mtools/sharded/data/shard02/rs2/db --logpath /mongodb/mtools/sharded/data/shard02/rs2/mongod.log --port 27057 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class=\"line\">    mongod       27058    running    61980    mongod --replSet shard02 --dbpath /mongodb/mtools/sharded/data/shard02/rs3/db --logpath /mongodb/mtools/sharded/data/shard02/rs3/mongod.log --port 27058 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    auth: <span class=\"string\">&quot;user:password&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"stop-关闭-mongo进程\">stop: 关闭 mongo进程</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭全部mongo进程，注意：如果开启了认证，stop会使用默认的用户名和密码进行认证（user/password），否则需要使用 kill</span></span><br><span class=\"line\">$ mlaunch stop</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">sent signal 15 to 11 processes.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只关闭mongos进程，这里mongos是tag</span></span><br><span class=\"line\">$ mlaunch stop mongos</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">sent signal 15 to 2 processes.</span><br><span class=\"line\"><span class=\"comment\"># 查看当前mongo进程状态</span></span><br><span class=\"line\">$ mlaunch list</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\"></span><br><span class=\"line\">PROCESS          PORT     STATUS     PID</span><br><span class=\"line\"></span><br><span class=\"line\">mongos           27050    down       -</span><br><span class=\"line\">mongos           27051    down       -</span><br><span class=\"line\"></span><br><span class=\"line\">config server    27058    running    23284</span><br><span class=\"line\">config server    27059    running    23287</span><br><span class=\"line\">config server    27060    running    23295</span><br><span class=\"line\"></span><br><span class=\"line\">shard01</span><br><span class=\"line\">    mongod       27052    running    23303</span><br><span class=\"line\">    mongod       27053    running    23326</span><br><span class=\"line\">    mongod       27054    running    23334</span><br><span class=\"line\"></span><br><span class=\"line\">shard02</span><br><span class=\"line\">    mongod       27055    running    23342</span><br><span class=\"line\">    mongod       27056    running    23345</span><br><span class=\"line\">    mongod       27057    running    23353</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tauth: <span class=\"string\">&quot;user:password&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"start-启动-mongo进程\">start: 启动 mongo进程</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动全部mongo进程</span></span><br><span class=\"line\">$ mlaunch start</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">launching: config server on port 27058</span><br><span class=\"line\">launching: config server on port 27059</span><br><span class=\"line\">launching: config server on port 27060</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27052</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27053</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27054</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27055</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27056</span><br><span class=\"line\">launching: <span class=\"string\">&quot;mongod&quot;</span> on port 27057</span><br><span class=\"line\">launching: mongos on port 27050</span><br><span class=\"line\">launching: mongos on port 27051</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只启动当前关闭的mongo进程</span></span><br><span class=\"line\">$ mlaunch start down</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">launching: mongos on port 27050</span><br><span class=\"line\">launching: mongos on port 27051</span><br></pre></td></tr></table></figure>\n<h3 id=\"restart-重启-mongo进程\">restart: 重启 mongo进程</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重启，不推荐使用，除了单实例，复制集和分片集群都会出问题</span></span><br><span class=\"line\">$ mlaunch restart</span><br><span class=\"line\"><span class=\"comment\"># 以下是分片集群重启后的报错信息，猜测原因是并没有完全关闭mongo分片集群中的所有节点时就启动了</span></span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">sent signal 15 to 11 processes.</span><br><span class=\"line\">b<span class=\"string\">&#x27;about to fork child process, waiting until server is ready for connections.\\nforked process: 20202\\nERROR: child process failed, exited with 1\\nTo see additional information in this output, start without the &quot;--fork&quot; option.\\n&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"kill-杀掉-mongo进程\">kill: 杀掉 mongo进程</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 杀掉全部mongo进程</span></span><br><span class=\"line\">$ mlaunch <span class=\"built_in\">kill</span></span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">sent signal 15 to 11 processes.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 杀掉某个端口的mongo进程</span></span><br><span class=\"line\">$ mlaunch <span class=\"built_in\">kill</span> 27050</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\">sent signal 15 to 1 process.</span><br><span class=\"line\"><span class=\"comment\"># 可以看到27050端口的mongo进程的状态为down</span></span><br><span class=\"line\">$ mlaunch list</span><br><span class=\"line\">Detected mongod version: 7.0.6</span><br><span class=\"line\"></span><br><span class=\"line\">PROCESS          PORT     STATUS     PID</span><br><span class=\"line\"></span><br><span class=\"line\">mongos           27050    down       -</span><br><span class=\"line\">mongos           27051    running    23369</span><br><span class=\"line\"></span><br><span class=\"line\">config server    27058    running    23284</span><br><span class=\"line\">config server    27059    running    23287</span><br><span class=\"line\">config server    27060    running    23295</span><br><span class=\"line\"></span><br><span class=\"line\">shard01</span><br><span class=\"line\">    mongod       27052    running    23303</span><br><span class=\"line\">    mongod       27053    running    23326</span><br><span class=\"line\">    mongod       27054    running    23334</span><br><span class=\"line\"></span><br><span class=\"line\">shard02</span><br><span class=\"line\">    mongod       27055    running    23342</span><br><span class=\"line\">    mongod       27056    running    23345</span><br><span class=\"line\">    mongod       27057    running    23353</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tauth: <span class=\"string\">&quot;user:password&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭全部mongos进程</span></span><br><span class=\"line\">$ mlaunch <span class=\"built_in\">kill</span> mongos</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>支持的tags</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all：环境中的所有节点。</span><br><span class=\"line\">running：所有当前运行的节点。</span><br><span class=\"line\">down：目前所有关闭的节点。</span><br><span class=\"line\">mongos：所有mongos进程都带有此标签。</span><br><span class=\"line\">mongod：所有mongod进程（包括仲裁者和配置服务器）。</span><br><span class=\"line\">config：所有配置服务器</span><br><span class=\"line\">&lt;shard name&gt;：对于分片环境，分片的每个成员都带有分片名称作为标签，例如“shard-a”。</span><br><span class=\"line\">&lt;port number&gt;：每个节点都带有其端口号作为标签。</span><br></pre></td></tr></table></figure>\n</div>\n","content_text":"摘要 本文介绍mtools工具的使用 mtools官方文档，mtools-github mtools提供的mlaunch是一个基于python的mongo环境管理工具，可以方便的启动、停止、重启、kill mongo进程，还可以查看mongo进程的运行状态，可以方便初学者快速搭建本地mongo环境，但是其只能在一台机器上运行。 mtools安装 mtools基于python3，支持mongo4+以上版本，但是mtools并且不会为我们安装mongodb，所以需要我们自己先在系统中安装好mongodb，mongodb的安装可以参考MongoDB7.0的安装 按照官网的说法，mtools支持的Python版本为 3.7|3.8|3.9|3.10，其他版本的Python目前不受支持或测试，但作者的python版本为3.11.3，并没有出现兼容性问题。 123456789101112131415161718192021222324252627➜ ~ python3 --versionPython 3.11.3➜ ~ pip3 -Vpip 24.0 from /usr/local/lib/python3.11/site-packages/pip (python 3.11)➜ ~ pip3 listPackage Version----------------- ------------certifi 2023.11.17cffi 1.16.0cryptography 41.0.7docutils 0.20.1idna 3.6Jinja2 3.1.2MarkupSafe 2.1.3packaging 23.2pip 24.0pycparser 2.21Pygments 2.17.2pyparsing 3.1.1pytz 2023.3.post1requests 2.31.0setuptools 68.2.2six 1.16.0tabulate 0.0.0typing_extensions 4.9.0urllib3 2.1.0wheel 0.41.2 安装mtools依赖 1pip3 install python-dateutil psutil pymongo 安装mtools 1pip3 install mtools 安装mtools会同时为我们安装mtools的所有工具，如果只希望安装mlaunch，可以使用下面的命令 mtools提供的其它工具，如mlogfilter,mloginfo,mplotqueries等并不支持logv2格式的日志，logv2是mongodb4.4+以后的加入的，从mongodb5.0以后logv2为默认的日志格式，所以这里不做介绍。 1pip3 install &#x27;mtools[mlaunch]&#x27; mlaunch 查看mlaunch版本 12345➜ ~ which mlaunch/usr/local/bin/mlaunch➜ ~ mlaunch --versionDetected mongod version: 7.0.6mtools version 1.7.2 || Python 3.11.6 (main, Oct 3 2023, 02:51:45) [Clang 14.0.3 (clang-1403.0.22.14.1)] init :构建环境 此命令初始化并启动MongoDB独立实例、副本集或分片集群，它只需要为每个环境调用一次。 构建独立实例 123456789101112131415161718# 快速构建一个单节点，数据目录在当前路径下的data目录下$ mlaunch init --single --authDetected mongod version: 7.0.6Generating keyfile: /mongodb/mtools/single/data/keyfilelaunching: &quot;mongod&quot; on port 27017Username &quot;user&quot;, password &quot;password&quot;# 参数说明# --single ：启动单节点# --auth ：开启默认认证，默认用户名/密码:user/password，并授予如下角色 # &#123; role: &#x27;userAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;, # &#123; role: &#x27;readWriteAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;, # &#123; role: &#x27;dbAdminAnyDatabase&#x27;, db: &#x27;admin&#x27; &#125;, # &#123; role: &#x27;clusterAdmin&#x27;, db: &#x27;admin&#x27; &#125;# --dir ：指定数据目录，默认为当前路径下的data目录# --bind_ip：指定监听ip，默认为127.0.0.1# --port：指定监听端口，默认为27017 构建复制集 123456789101112131415# 快速构建一个3节点的复制集$ mlaunch init --replicaset --nodes 3 --auth --port 27040Detected mongod version: 7.0.6Generating keyfile: /mongodb/mtools/replicaset/data/keyfilelaunching: &quot;mongod&quot; on port 27040launching: &quot;mongod&quot; on port 27041launching: &quot;mongod&quot; on port 27042replica set &#x27;replset&#x27; initialized.waiting for primary to add a user.Username &quot;user&quot;, password &quot;password&quot;# --replicaset ：创建副本集，默认3个节点# --nodes 3 ：指定副本集节点个数，默认3个节点# --auth : 开启默认认证，同单节点# --port 27040 : 指定复制集的起始端口，默认从27017开始，依次递增 构建分片集群 12345678910111213141516171819202122232425262728293031323334353637383940414243# 快速构建一个2个分片的分片集群，每个分片是一个包含3每个节点的复制集，包含一个3个节点配置复制集，并且启动3个mongos路由$ mlaunch init --sharded 2 --replicaset --node 3 --config 3 --csrs --mongos 3 --auth --port 27050Detected mongod version: 7.0.6Generating keyfile: /mongodb/mtools/sharded/data/keyfilelaunching: &quot;mongod&quot; on port 27053launching: &quot;mongod&quot; on port 27054launching: &quot;mongod&quot; on port 27055launching: &quot;mongod&quot; on port 27056launching: &quot;mongod&quot; on port 27057launching: &quot;mongod&quot; on port 27058launching: config server on port 27059launching: config server on port 27060launching: config server on port 27061replica set &#x27;configRepl&#x27; initialized.replica set &#x27;shard01&#x27; initialized.replica set &#x27;shard02&#x27; initialized.launching: mongos on port 27050launching: mongos on port 27051launching: mongos on port 27052adding shards. can take up to 30 seconds...sent signal 15 to 12 processes.launching: config server on port 27059launching: config server on port 27060launching: config server on port 27061launching: &quot;mongod&quot; on port 27053launching: &quot;mongod&quot; on port 27054launching: &quot;mongod&quot; on port 27055launching: &quot;mongod&quot; on port 27056launching: &quot;mongod&quot; on port 27057launching: &quot;mongod&quot; on port 27058launching: mongos on port 27050launching: mongos on port 27051launching: mongos on port 27052Username &quot;user&quot;, password &quot;password&quot;# --sharded 2：启用分片集群模式，分片数为2。# --replicaset : 创建副本集，默认3个节点，可以通过 --nodes 指定复制集节点个数# --nodes 3：采用3节点的复制集架构，默认就是3个节点。# --config 3：配置服务器采用3节点的复制集架构模式# --csrs：指Config Server as a Replica Set，这个也是默认配置# --mongos 3：启动3个mongos实例进程。# --auth : 开启默认认证，同单节点# --port 27050：集群将以27050作为起始端口，集群中的各个实例基于该端口向上递增。 以下命令运行时必须指定数据目录，默认为当前路径下的data目录，可以使用--dir指定数据目录，因为需要通过./data/.mlaunch_startup来获取mongo的构建信息。以分片集群举例： list: 查看启动信息 查看集群状态 1234567891011121314151617181920212223# 显示mongo进程的列表$ mlaunch listDetected mongod version: 7.0.6PROCESS PORT STATUS PIDmongos 27050 running 61988mongos 27051 running 61991mongos 27052 running 61999config server 27059 running 61903config server 27060 running 61911config server 27061 running 61914shard01 mongod 27053 running 61922 mongod 27054 running 61947 mongod 27055 running 61955shard02 mongod 27056 running 61964 mongod 27057 running 61972 mongod 27058 running 61980 查看启动命令 12345678910111213141516171819202122232425$ mlaunch list --startupDetected mongod version: 7.0.6PROCESS PORT STATUS PID STARTUP COMMANDmongos 27050 running 61988 mongos --logpath /mongodb/mtools/sharded/data/mongos/mongos_27050.log --port 27050 --configdb configRepl/localhost:27059,localhost:27060,localhost:27061 --keyFile /mongodb/mtools/sharded/data/keyfile --forkmongos 27051 running 61991 mongos --logpath /mongodb/mtools/sharded/data/mongos/mongos_27051.log --port 27051 --configdb configRepl/localhost:27059,localhost:27060,localhost:27061 --keyFile /mongodb/mtools/sharded/data/keyfile --forkmongos 27052 running 61999 mongos --logpath /mongodb/mtools/sharded/data/mongos/mongos_27052.log --port 27052 --configdb configRepl/localhost:27059,localhost:27060,localhost:27061 --keyFile /mongodb/mtools/sharded/data/keyfile --forkconfig server 27059 running 61903 mongod --replSet configRepl --dbpath /mongodb/mtools/sharded/data/configRepl/rs1/db --logpath /mongodb/mtools/sharded/data/configRepl/rs1/mongod.log --port 27059 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --configsvr --wiredTigerCacheSizeGB 1config server 27060 running 61911 mongod --replSet configRepl --dbpath /mongodb/mtools/sharded/data/configRepl/rs2/db --logpath /mongodb/mtools/sharded/data/configRepl/rs2/mongod.log --port 27060 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --configsvr --wiredTigerCacheSizeGB 1config server 27061 running 61914 mongod --replSet configRepl --dbpath /mongodb/mtools/sharded/data/configRepl/rs3/db --logpath /mongodb/mtools/sharded/data/configRepl/rs3/mongod.log --port 27061 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --configsvr --wiredTigerCacheSizeGB 1shard01 mongod 27053 running 61922 mongod --replSet shard01 --dbpath /mongodb/mtools/sharded/data/shard01/rs1/db --logpath /mongodb/mtools/sharded/data/shard01/rs1/mongod.log --port 27053 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1 mongod 27054 running 61947 mongod --replSet shard01 --dbpath /mongodb/mtools/sharded/data/shard01/rs2/db --logpath /mongodb/mtools/sharded/data/shard01/rs2/mongod.log --port 27054 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1 mongod 27055 running 61955 mongod --replSet shard01 --dbpath /mongodb/mtools/sharded/data/shard01/rs3/db --logpath /mongodb/mtools/sharded/data/shard01/rs3/mongod.log --port 27055 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1shard02 mongod 27056 running 61964 mongod --replSet shard02 --dbpath /mongodb/mtools/sharded/data/shard02/rs1/db --logpath /mongodb/mtools/sharded/data/shard02/rs1/mongod.log --port 27056 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1 mongod 27057 running 61972 mongod --replSet shard02 --dbpath /mongodb/mtools/sharded/data/shard02/rs2/db --logpath /mongodb/mtools/sharded/data/shard02/rs2/mongod.log --port 27057 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1 mongod 27058 running 61980 mongod --replSet shard02 --dbpath /mongodb/mtools/sharded/data/shard02/rs3/db --logpath /mongodb/mtools/sharded/data/shard02/rs3/mongod.log --port 27058 --fork --keyFile /mongodb/mtools/sharded/data/keyfile --shardsvr --wiredTigerCacheSizeGB 1 auth: &quot;user:password&quot; stop: 关闭 mongo进程 12345678910111213141516171819202122232425262728293031323334# 关闭全部mongo进程，注意：如果开启了认证，stop会使用默认的用户名和密码进行认证（user/password），否则需要使用 kill$ mlaunch stopDetected mongod version: 7.0.6sent signal 15 to 11 processes.# 只关闭mongos进程，这里mongos是tag$ mlaunch stop mongosDetected mongod version: 7.0.6sent signal 15 to 2 processes.# 查看当前mongo进程状态$ mlaunch listDetected mongod version: 7.0.6PROCESS PORT STATUS PIDmongos 27050 down -mongos 27051 down -config server 27058 running 23284config server 27059 running 23287config server 27060 running 23295shard01 mongod 27052 running 23303 mongod 27053 running 23326 mongod 27054 running 23334shard02 mongod 27055 running 23342 mongod 27056 running 23345 mongod 27057 running 23353 auth: &quot;user:password&quot; start: 启动 mongo进程 1234567891011121314151617181920# 启动全部mongo进程$ mlaunch startDetected mongod version: 7.0.6launching: config server on port 27058launching: config server on port 27059launching: config server on port 27060launching: &quot;mongod&quot; on port 27052launching: &quot;mongod&quot; on port 27053launching: &quot;mongod&quot; on port 27054launching: &quot;mongod&quot; on port 27055launching: &quot;mongod&quot; on port 27056launching: &quot;mongod&quot; on port 27057launching: mongos on port 27050launching: mongos on port 27051# 只启动当前关闭的mongo进程$ mlaunch start downDetected mongod version: 7.0.6launching: mongos on port 27050launching: mongos on port 27051 restart: 重启 mongo进程 123456# 重启，不推荐使用，除了单实例，复制集和分片集群都会出问题$ mlaunch restart# 以下是分片集群重启后的报错信息，猜测原因是并没有完全关闭mongo分片集群中的所有节点时就启动了Detected mongod version: 7.0.6sent signal 15 to 11 processes.b&#x27;about to fork child process, waiting until server is ready for connections.\\nforked process: 20202\\nERROR: child process failed, exited with 1\\nTo see additional information in this output, start without the &quot;--fork&quot; option.\\n&#x27; kill: 杀掉 mongo进程 12345678910111213141516171819202122232425262728293031323334353637# 杀掉全部mongo进程$ mlaunch killDetected mongod version: 7.0.6sent signal 15 to 11 processes.# 杀掉某个端口的mongo进程$ mlaunch kill 27050Detected mongod version: 7.0.6sent signal 15 to 1 process.# 可以看到27050端口的mongo进程的状态为down$ mlaunch listDetected mongod version: 7.0.6PROCESS PORT STATUS PIDmongos 27050 down -mongos 27051 running 23369config server 27058 running 23284config server 27059 running 23287config server 27060 running 23295shard01 mongod 27052 running 23303 mongod 27053 running 23326 mongod 27054 running 23334shard02 mongod 27055 running 23342 mongod 27056 running 23345 mongod 27057 running 23353 auth: &quot;user:password&quot;# 关闭全部mongos进程$ mlaunch kill mongos 支持的tags 12345678all：环境中的所有节点。running：所有当前运行的节点。down：目前所有关闭的节点。mongos：所有mongos进程都带有此标签。mongod：所有mongod进程（包括仲裁者和配置服务器）。config：所有配置服务器&lt;shard name&gt;：对于分片环境，分片的每个成员都带有分片名称作为标签，例如“shard-a”。&lt;port number&gt;：每个节点都带有其端口号作为标签。","summary":"摘要 本文介绍mtools工具的使用 mtools官方文档，mtools-github mtools提供的mlaunch是一个基于python的mongo环境管理工具，可以方便的启动、停止、重启、kill mongo进程，还可以查看mongo进程的运行状态，可以方便初学者快速搭建本地mongo环境，但是其只能在一台机器上运行。","date_published":"2024-03-14T13:30:05.000Z","tags":["技术","mac","mongodb","mongodb"]},{"id":"https://blog.hanqunfeng.com/2024/03/13/linux-command14-setting/","url":"https://blog.hanqunfeng.com/2024/03/13/linux-command14-setting/","title":"Linux常用命令--常用设置","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装完linux后，一些常用的设置可以方便我们今后的使用，比如关闭SELinux，增加文件描述符限制，等等。</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于CentOS8。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"关闭SELinux\">关闭SELinux</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>SELinux（Security-Enhanced Linux）是一种基于安全策略的 Linux 安全模块，其主要目的是提供对各种应用程序和进程的更细粒度的访问控制。</p>\n</li>\n<li class=\"lvl-2\">\n<p>SELinux 的安全方案主要基于以下两个策略：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">强制访问控制（Mandatory Access Control, MAC）：MAC 策略不允许用户在他们拥有的文件和进程上设置安全访问控制，而是根据一个由系统管理员和/或操作系统开发商定义的集中安全策略进行访问控制。</li>\n<li class=\"lvl-6\">类型强制访问控制（Type Enforcement）：通过将文件、目录和其他资源分配到类型，并定义它们之间的交互，限制进程在资源之间的信息流。</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>在实际工作中，SELinux 可以用来阻止或限制恶意或损坏的应用程序对系统造成的损害。当配置正确时，SELinux 提供的强大安全机制可以显著提高系统的安全性。</p>\n</li>\n<li class=\"lvl-2\">\n<p>但是，SELinux 也可能会带来一些问题，例如，它可能会导致某些应用程序无法正常工作，或者它可能会在某些情况下导致性能下降。因此，许多 Linux 发行版默认会关闭 SELinux，以避免这些问题。</p>\n</li>\n<li class=\"lvl-2\">\n<p>通过以下命令，可以查看当前的 SELinux 状态：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果当前状态为 Enforcing，表示 SELinux 已启用，否则为 Disabled。</span></span><br><span class=\"line\">$ sestatus</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>临时关闭 SELinux，可以使用以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ setenforce 0</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>永久关闭 SELinux，可以使用以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi /etc/selinux/config</span><br><span class=\"line\">    <span class=\"comment\"># 在文件中找到以下行，将值改为 disabled。</span></span><br><span class=\"line\">    SELINUX=disabled</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启系统，SELinux 就会关闭。</span></span><br><span class=\"line\">$ reboot</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>临时开启 SELinux，可以使用以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ setenforce 1</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>永久开启 SELinux，可以使用以下命令：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi /etc/selinux/config</span><br><span class=\"line\">    <span class=\"comment\"># 在文件中找到以下行，将值改为 enforcing。</span></span><br><span class=\"line\">    SELINUX=enforcing</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启系统，SELinux 就会开启。</span></span><br><span class=\"line\">$ reboot</span><br></pre></td></tr></table></figure>\n<h2 id=\"增加文件描述符限制\">增加文件描述符限制</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>每个运行中的进程都有一个限制，即它可以同时打开的最大文件描述符数量。这个限制对于避免过度使用系统资源非常重要。然而，在某些情况下，你可能需要增加这个限制来满足应用的需求。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Linux 服务器默认的文件描述符限制为 1024，如果需要使用更多的文件描述符，可以使用以下命令来增加限制：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 临时设置，即刻生效</span></span><br><span class=\"line\"><span class=\"built_in\">ulimit</span> -n 65535</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 永久设置</span></span><br><span class=\"line\">$ vi /etc/security/limits.conf</span><br><span class=\"line\">    <span class=\"comment\"># 在文件中找到以下行，将值改为 65535</span></span><br><span class=\"line\">    <span class=\"comment\"># 如果不存在对应的配置则在文件末尾添加即可</span></span><br><span class=\"line\">    <span class=\"comment\"># root用户限制</span></span><br><span class=\"line\">    root soft nofile 65535</span><br><span class=\"line\">    root hard nofile 65535</span><br><span class=\"line\">    <span class=\"comment\"># 其它用户限制</span></span><br><span class=\"line\">    * soft nofile 65535</span><br><span class=\"line\">    * hard nofile 65535</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启系统，文件描述符限制就变了。</span></span><br><span class=\"line\">$ reboot</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这样的设置既为 root 用户设置了文件描述符（句柄）的软硬限制数量为65535，也为系统中所有其他用户设置了同样的限制。所谓“软限制”是指用户可以达到但不能超过的限制，而“硬限制”是指系统设置的绝对限制。即软限制不能大于硬限制的值。</p>\n</li>\n<li class=\"lvl-2\">\n<p>通过以下命令，可以查看当前的文件描述符限制：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看的是当前 bash 的“软”文件描述符限制</span></span><br><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -n</span><br><span class=\"line\"><span class=\"comment\"># 查看软限制，在大多数情况下，ulimit -n 和 ulimit -Sn 是相同的</span></span><br><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -Sn</span><br><span class=\"line\"><span class=\"comment\"># 查看硬限制</span></span><br><span class=\"line\">$ <span class=\"built_in\">ulimit</span> -Hn</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 安装完linux后，一些常用的设置可以方便我们今后的使用，比如关闭SELinux，增加文件描述符限制，等等。 本文基于CentOS8。 关闭SELinux SELinux（Security-Enhanced Linux）是一种基于安全策略的 Linux 安全模块，其主要目的是提供对各种应用程序和进程的更细粒度的访问控制。 SELinux 的安全方案主要基于以下两个策略： 强制访问控制（Mandatory Access Control, MAC）：MAC 策略不允许用户在他们拥有的文件和进程上设置安全访问控制，而是根据一个由系统管理员和/或操作系统开发商定义的集中安全策略进行访问控制。 类型强制访问控制（Type Enforcement）：通过将文件、目录和其他资源分配到类型，并定义它们之间的交互，限制进程在资源之间的信息流。 在实际工作中，SELinux 可以用来阻止或限制恶意或损坏的应用程序对系统造成的损害。当配置正确时，SELinux 提供的强大安全机制可以显著提高系统的安全性。 但是，SELinux 也可能会带来一些问题，例如，它可能会导致某些应用程序无法正常工作，或者它可能会在某些情况下导致性能下降。因此，许多 Linux 发行版默认会关闭 SELinux，以避免这些问题。 通过以下命令，可以查看当前的 SELinux 状态： 12# 如果当前状态为 Enforcing，表示 SELinux 已启用，否则为 Disabled。$ sestatus 临时关闭 SELinux，可以使用以下命令： 1$ setenforce 0 永久关闭 SELinux，可以使用以下命令： 123456$ vi /etc/selinux/config # 在文件中找到以下行，将值改为 disabled。 SELINUX=disabled# 重启系统，SELinux 就会关闭。$ reboot 临时开启 SELinux，可以使用以下命令： 1$ setenforce 1 永久开启 SELinux，可以使用以下命令： 123456$ vi /etc/selinux/config # 在文件中找到以下行，将值改为 enforcing。 SELINUX=enforcing# 重启系统，SELinux 就会开启。$ reboot 增加文件描述符限制 每个运行中的进程都有一个限制，即它可以同时打开的最大文件描述符数量。这个限制对于避免过度使用系统资源非常重要。然而，在某些情况下，你可能需要增加这个限制来满足应用的需求。 Linux 服务器默认的文件描述符限制为 1024，如果需要使用更多的文件描述符，可以使用以下命令来增加限制： 12345678910111213141516# 临时设置，即刻生效ulimit -n 65535# 永久设置$ vi /etc/security/limits.conf # 在文件中找到以下行，将值改为 65535 # 如果不存在对应的配置则在文件末尾添加即可 # root用户限制 root soft nofile 65535 root hard nofile 65535 # 其它用户限制 * soft nofile 65535 * hard nofile 65535# 重启系统，文件描述符限制就变了。$ reboot 这样的设置既为 root 用户设置了文件描述符（句柄）的软硬限制数量为65535，也为系统中所有其他用户设置了同样的限制。所谓“软限制”是指用户可以达到但不能超过的限制，而“硬限制”是指系统设置的绝对限制。即软限制不能大于硬限制的值。 通过以下命令，可以查看当前的文件描述符限制： 123456# 查看的是当前 bash 的“软”文件描述符限制$ ulimit -n# 查看软限制，在大多数情况下，ulimit -n 和 ulimit -Sn 是相同的$ ulimit -Sn# 查看硬限制$ ulimit -Hn","summary":"摘要 安装完linux后，一些常用的设置可以方便我们今后的使用，比如关闭SELinux，增加文件描述符限制，等等。 本文基于CentOS8。","date_published":"2024-03-13T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2024/03/11/mongodb7-index/","url":"https://blog.hanqunfeng.com/2024/03/11/mongodb7-index/","title":"MongoDB7.0--索引","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度(通过uPic上传后，需要将upic修改过为blog，用于添加水印) ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/blog/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍如何使用MongoDB7.0的索引</p>\n</li>\n<li class=\"lvl-2\">\n<p>MongoDB版本7.0.6</p>\n</li>\n<li class=\"lvl-2\">\n<p><a href=\"https://www.mongodb.com/docs/v7.0/indexes/\">MongoDB Indexes</a></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"MongoDB索引简介\">MongoDB索引简介</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>索引支持在MongoDB中高效执行查询。如果没有索引，MongoDB必须扫描集合中的每个文档才能返回查询结果。如果查询存在适当的索引，MongoDB使用该索引来限制它必须扫描的文档数量。</p>\n</li>\n<li class=\"lvl-2\">\n<p>虽然索引可以提高查询性能，但添加索引对写入操作的性能有负面影响。对于写入读数比较高的集合，索引很昂贵，因为每个插入还必须更新任何索引。</p>\n</li>\n<li class=\"lvl-2\">\n<p>所以合理的创建索引，即可以提升查询性能，又不会对写操作造成太大的影响。</p>\n</li>\n<li class=\"lvl-2\">\n<p>MongoDB采用 <code>B-Tree (准确的说是 B+Tree)</code> 做索引，索引创建在colletions上。</p>\n</li>\n</ul>\n<h2 id=\"创建索引语法\">创建索引语法</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.collection.createIndex( keys, options )</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Key 值为你要创建的索引字段，1 按升序创建索引， -1 按降序创建索引</p>\n</li>\n<li class=\"lvl-2\">\n<p>options 选项</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>background</td>\n<td>Boolean</td>\n<td>建索引过程是否阻塞其它数据库操作，设置为 true 则以后台方式创建索引</td>\n</tr>\n<tr>\n<td>unique</td>\n<td>Boolean</td>\n<td>建立的索引是否唯一，设置为 true 则创建唯一索引</td>\n</tr>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>索引的名称</td>\n</tr>\n<tr>\n<td>dropDups</td>\n<td>Boolean</td>\n<td>3.0+版本已废弃，在建立唯一索引时是否删除重复记录</td>\n</tr>\n<tr>\n<td>sparse</td>\n<td>Boolean</td>\n<td>对文档中不存在的字段数据是否启用索引</td>\n</tr>\n<tr>\n<td>expireAfterSeconds</td>\n<td>integer</td>\n<td>指定一个以秒为单位的数值，完成 TTL 设定，设定集合的生存时间</td>\n</tr>\n<tr>\n<td>v</td>\n<td>index version</td>\n<td>索引的版本号</td>\n</tr>\n<tr>\n<td>weights</td>\n<td>document</td>\n<td>索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重</td>\n</tr>\n<tr>\n<td>default_language</td>\n<td>string</td>\n<td>对于文本索引，该参数决定了停用词及词干和词器的规则的列表</td>\n</tr>\n<tr>\n<td>language_override</td>\n<td>string</td>\n<td>对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的 language</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"索引类型\">索引类型</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>与大多数数据库一样，MongoDB支持各种丰富的索引类型，包括单键索引、复合索引，唯一索引等一些常用的结构。由于采用了灵活可变的文档类型，因此它也同样支持对嵌套字段、数组进行索引。通过建立合适的索引，我们可以极大地提升数据的检索速度。在一些特殊应用场景，MongoDB还支持地理空间索引、文本检索索引、TTL索引等不同的特性。</p>\n</li>\n</ul>\n<h3 id=\"单键索引-Single-Field-Indexes\">单键索引(Single Field Indexes)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>单键索引是MongoDB最简单的索引类型，它将一个字段作为索引键，索引键值唯一。</p>\n</li>\n<li class=\"lvl-2\">\n<p>默认情况下，MongoDB会在ID字段上创建一个单键索引，ID字段是文档的唯一标识符，MongoDB会自动创建一个ID字段，如果用户自己创建ID字段，MongoDB会自动将ID字段作为单键索引。</p>\n</li>\n<li class=\"lvl-2\">\n<p>单键索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1表示正序，-1表示倒序</span></span><br><span class=\"line\">db.books.createIndex(&#123;title:1&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 对内嵌文档字段创建索引：</span></span><br><span class=\"line\">db.books.createIndex(&#123;<span class=\"string\">&quot;author.name&quot;</span>:1&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"复合索引-Compound-Index\">复合索引(Compound Index)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>复合索引是将多个字段作为索引键，其性质和单字段索引类似。但不同的是，复合索引中字段的顺序、字段的升降序对查询性能有直接的影响，因此在设计复合索引时则需要考虑不同的查询场景。</p>\n</li>\n<li class=\"lvl-2\">\n<p>复合索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.books.createIndex(&#123;title:1, author.name:1&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 对内嵌文档字段创建索引：</span></span><br><span class=\"line\">db.books.createIndex(&#123;<span class=\"string\">&quot;author.name&quot;</span>:1, <span class=\"string\">&quot;author.age&quot;</span>:1&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"多键-数组-索引-Multikey-Index\">多键(数组)索引(Multikey Index)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>多键索引是将一个字段作为索引键，该字段可以是嵌套文档、数组等复杂数据类型。</p>\n</li>\n<li class=\"lvl-2\">\n<p>多键索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># tags字段为数组</span></span><br><span class=\"line\">db.books.createIndex(&#123;<span class=\"string\">&quot;tags&quot;</span>:1&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 创建复合多值索引，这里仅能有一个字段是数组，MongoDB并不支持一个复合索引中同时出现多个数组字段</span></span><br><span class=\"line\">db.books.createIndex(&#123;title:1, tags:1&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例数据格式</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  _id: 1,</span><br><span class=\"line\">  item: <span class=\"string\">&quot;abc&quot;</span>,</span><br><span class=\"line\">  stock: [</span><br><span class=\"line\">    &#123; size: <span class=\"string\">&quot;S&quot;</span>, color: <span class=\"string\">&quot;red&quot;</span>, quantity: 25 &#125;,</span><br><span class=\"line\">    &#123; size: <span class=\"string\">&quot;S&quot;</span>, color: <span class=\"string\">&quot;blue&quot;</span>, quantity: 10 &#125;,</span><br><span class=\"line\">    &#123; size: <span class=\"string\">&quot;M&quot;</span>, color: <span class=\"string\">&quot;blue&quot;</span>, quantity: 50 &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 可以对嵌入文档创建多键索引</span></span><br><span class=\"line\">db.collection.createIndex( &#123; <span class=\"string\">&quot;stock.size&quot;</span>: 1, <span class=\"string\">&quot;stock.quantity&quot;</span>: 1 &#125; )</span><br></pre></td></tr></table></figure>\n<h3 id=\"Hash索引-Hashed-Indexes\">Hash索引(Hashed Indexes)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Hash索引是MongoDB中的一种特殊的索引类型，它将字段的值计算出一个哈希值，然后将该哈希值作为索引键。由于哈希值的唯一性，因此MongoDB在创建Hash索引时，不会对索引键值进行排序。</p>\n</li>\n<li class=\"lvl-2\">\n<p>Hash索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.books.createIndex(&#123;title:<span class=\"string\">&quot;hashed&quot;</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 对内嵌文档字段创建索引：</span></span><br><span class=\"line\">db.books.createIndex(&#123;<span class=\"string\">&quot;author.name&quot;</span>:<span class=\"string\">&quot;hashed&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"通配符索引-Wildcard-Indexes\">通配符索引(Wildcard Indexes)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>通配符索引是MongoDB中的一种特殊的索引类型，它允许在索引键值中包含通配符，从而支持对通配符匹配的查询。</p>\n</li>\n<li class=\"lvl-2\">\n<p>MongoDB 4.2 引入了通配符索</p>\n</li>\n<li class=\"lvl-2\">\n<p>通配符索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例数据</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;product_name&quot;</span> : <span class=\"string\">&quot;Spy Coat&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;product_attributes&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;material&quot;</span> : [ <span class=\"string\">&quot;Tweed&quot;</span>, <span class=\"string\">&quot;Wool&quot;</span>, <span class=\"string\">&quot;Leather&quot;</span> ],</span><br><span class=\"line\">        <span class=\"string\">&quot;size&quot;</span> : &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;length&quot;</span> : 72,</span><br><span class=\"line\">            <span class=\"string\">&quot;units&quot;</span> : <span class=\"string\">&quot;inches&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">db.products.createIndex( &#123; <span class=\"string\">&quot;product_attributes.$**&quot;</span> : 1 &#125; )</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>通配符索引是稀疏的，不索引空字段。因此，通配符索引不能支持查询字段不存在的文档。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通配符索引不能支持以下查询</span></span><br><span class=\"line\">db.products.find( &#123;<span class=\"string\">&quot;product_attributes&quot;</span> : &#123; <span class=\"variable\">$exists</span> : <span class=\"literal\">false</span> &#125; &#125; )</span><br><span class=\"line\">db.products.aggregate([</span><br><span class=\"line\">  &#123; <span class=\"variable\">$match</span> : &#123; <span class=\"string\">&quot;product_attributes&quot;</span> : &#123; <span class=\"variable\">$exists</span> : <span class=\"literal\">false</span> &#125; &#125; &#125;</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>通配符索引为文档或数组的内容生成条目，而不是文档/数组本身。因此通配符索引不能支持精确的文档/数组相等匹配。通配符索引可以支持查询字段等于空文档{}的情况</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#通配符索引不能支持以下查询:</span></span><br><span class=\"line\">db.products.find(&#123; <span class=\"string\">&quot;product_attributes.colors&quot;</span> : [ <span class=\"string\">&quot;Blue&quot;</span>, <span class=\"string\">&quot;Black&quot;</span> ] &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\">db.products.aggregate([&#123;</span><br><span class=\"line\">  <span class=\"variable\">$match</span> : &#123; <span class=\"string\">&quot;product_attributes.colors&quot;</span> : [ <span class=\"string\">&quot;Blue&quot;</span>, <span class=\"string\">&quot;Black&quot;</span> ] &#125;</span><br><span class=\"line\">&#125;])</span><br></pre></td></tr></table></figure>\n<h2 id=\"索引属性\">索引属性</h2>\n<h3 id=\"唯一索引-Unique-Indexes\">唯一索引(Unique Indexes)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>唯一索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单键索引支持唯一约束</span></span><br><span class=\"line\">db.books.createIndex(&#123;title:1&#125;, &#123;unique:<span class=\"literal\">true</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 复合索引支持唯一性约束</span></span><br><span class=\"line\">db.books.createIndex(&#123;title:1，<span class=\"built_in\">type</span>:1&#125;, &#123;unique:<span class=\"literal\">true</span>&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 多键索引支持唯一性约束，这里tags是数组</span></span><br><span class=\"line\">db.books.createIndex(&#123;<span class=\"string\">&quot;tags&quot;</span>:1&#125;, &#123;unique:<span class=\"literal\">true</span>&#125;)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>唯一性索引对于文档中缺失的字段，会使用null值代替，因此不允许存在多个文档缺失索引字段的情况。</p>\n</li>\n<li class=\"lvl-2\">\n<p>对于分片的集合，唯一性约束必须匹配分片规则。换句话说，为了保证全局的唯一性，分片键必须作为唯一性索引的前缀字段。</p>\n</li>\n</ul>\n<h3 id=\"部分索引-Partial-Indexes\">部分索引(Partial Indexes)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>部分索引仅对满足指定过滤器表达式的文档进行索引。通过在一个集合中为文档的一个子集建立索引，部分索引具有更低的存储需求和更低的索引创建和维护的性能成本。</p>\n</li>\n<li class=\"lvl-2\">\n<p>部分索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 符合条件&#123;author: &#123;$exists: true&#125;&#125;，即存在作者，才对title创建升序索引</span></span><br><span class=\"line\">db.books.createIndex(&#123;title:1&#125;, &#123;partialFilterExpression: &#123;author: &#123;<span class=\"variable\">$exists</span>: <span class=\"literal\">true</span>&#125;&#125;&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>partialFilterExpression(筛选器表达式)选项接受指定过滤条件的文档:<br>\n- 等式表达式(例如:field: value或使用$eq操作符)<br>\n- $exists: true<br>\n- $gt， $gte， $lt， $lte<br>\n- <span class='katex-error' title='ParseError: KaTeX parse error: LaTeX-incompatible input and strict mode is set to &#039;error&#039;: Unicode text character &quot;顶&quot; used in math mode [unicodeTextInMathMode] at position 12: type\n    - 顶̲层的'>type\n    - 顶层的</span>and</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>注意：如果同时指定了partialFilterExpression和唯一约束，那么唯一约束只适用于满足筛选器表达式的文档。如果文档不满足筛选条件，那么带有惟一约束的部分索引不会阻止插入不满足惟一约束的文档。</p>\n</li>\n</ul>\n<h3 id=\"稀疏索引-Sparse-Indexes\">稀疏索引(Sparse Indexes)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>索引的稀疏属性确保索引只包含具有索引字段的文档的条目，索引将跳过没有索引字段的文档。即只对存在字段的文档进行索引（包括字段值为null的文档）。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果稀疏索引会导致查询和排序操作的结果集不完整，MongoDB将不会使用该索引，除非hint()明确指定索引。</p>\n</li>\n<li class=\"lvl-2\">\n<p>稀疏索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据准备</span></span><br><span class=\"line\">db.scores.insertMany([</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;userid&quot;</span> : <span class=\"string\">&quot;newbie&quot;</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;userid&quot;</span> : <span class=\"string\">&quot;abby&quot;</span>, <span class=\"string\">&quot;score&quot;</span> : 82&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;userid&quot;</span> : <span class=\"string\">&quot;nina&quot;</span>, <span class=\"string\">&quot;score&quot;</span> : 90&#125;</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建稀疏索引</span></span><br><span class=\"line\">db.scores.createIndex( &#123; score: 1 &#125; , &#123; sparse: <span class=\"literal\">true</span> &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试</span></span><br><span class=\"line\"><span class=\"comment\"># 使用稀疏索引</span></span><br><span class=\"line\">db.scores.find( &#123; score: &#123; <span class=\"variable\">$lt</span>: 90 &#125; &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 即使排序是通过索引字段，MongoDB也不会选择稀疏索引来完成查询，以返回完整的结果</span></span><br><span class=\"line\">db.scores.find().<span class=\"built_in\">sort</span>( &#123; score: -1 &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 要使用稀疏索引，使用hint()显式指定索引</span></span><br><span class=\"line\">db.scores.find().<span class=\"built_in\">sort</span>( &#123; score: -1 &#125; ).hint( &#123; score: 1 &#125; )</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>同时具有稀疏性和唯一性的索引可以防止集合中存在字段值重复的文档，但允许不包含此索引字段的文档插入。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除之前创建的索引</span></span><br><span class=\"line\">db.scores.dropIndex(&#123;score:1&#125;)</span><br><span class=\"line\"><span class=\"comment\"># 创建具有唯一约束的稀疏索引</span></span><br><span class=\"line\">db.scores.createIndex( &#123; score: 1 &#125; , &#123; sparse: <span class=\"literal\">true</span>, unique: <span class=\"literal\">true</span> &#125; )</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试插入</span></span><br><span class=\"line\">db.scores.insertMany( [</span><br><span class=\"line\">   &#123; <span class=\"string\">&quot;userid&quot;</span>: <span class=\"string\">&quot;AAAAAAA&quot;</span>, <span class=\"string\">&quot;score&quot;</span>: 50 &#125;,</span><br><span class=\"line\">   &#123; <span class=\"string\">&quot;userid&quot;</span>: <span class=\"string\">&quot;BBBBBBB&quot;</span>, <span class=\"string\">&quot;score&quot;</span>: 64 &#125;,</span><br><span class=\"line\">   &#123; <span class=\"string\">&quot;userid&quot;</span>: <span class=\"string\">&quot;CCCCCCC&quot;</span> &#125;,</span><br><span class=\"line\">   &#123; <span class=\"string\">&quot;userid&quot;</span>: <span class=\"string\">&quot;CCCCCCC&quot;</span> &#125;</span><br><span class=\"line\">] )</span><br></pre></td></tr></table></figure>\n<h3 id=\"TTL索引-TTL-Indexes\">TTL索引(TTL Indexes)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>MongoDB 可以使用它在一定时间或特定时钟时间后自动从集合中删除文档，就是带有过期时间的索引，到期后，MongoDB会自动删除这些过期的文档。</p>\n</li>\n<li class=\"lvl-2\">\n<p>TTL索引只能创建在日期字段上，当文档过期后，MongoDB会自动删除这些文档。</p>\n</li>\n<li class=\"lvl-2\">\n<p>TTL索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据准备</span></span><br><span class=\"line\">db.log_events.insertOne( &#123;</span><br><span class=\"line\">   <span class=\"string\">&quot;createdAt&quot;</span>: new Date(),</span><br><span class=\"line\">   <span class=\"string\">&quot;logEvent&quot;</span>: 2,</span><br><span class=\"line\">   <span class=\"string\">&quot;logMessage&quot;</span>: <span class=\"string\">&quot;Success!&quot;</span></span><br><span class=\"line\">&#125; )</span><br><span class=\"line\"><span class=\"comment\"># 创建TTL索引</span></span><br><span class=\"line\">db.scores.createIndex( &#123; <span class=\"string\">&quot;createdAt&quot;</span>: 1 &#125;, &#123; expireAfterSeconds: 3600 &#125; )</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>TTL 索引不保证过期数据会在过期后立即被删除。文档过期和 MongoDB 从数据库中删除文档的时间之间可能存在延迟。删除过期文档的后台任务每 60 秒运行一次。因此，在文档到期和后台任务运行之间的时间段内，文档可能会保留在集合中。</p>\n</li>\n<li class=\"lvl-2\">\n<p>TTL索引在创建之后，仍然可以对过期时间进行修改。这需要使用collMod命令对索引的定义进行变更</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.runCommand( &#123;</span><br><span class=\"line\">    collMod: <span class=\"string\">&quot;log_events&quot;</span>,</span><br><span class=\"line\">    index: &#123;</span><br><span class=\"line\">        keyPattern: &#123; createdAt: 1 &#125;,</span><br><span class=\"line\">        expireAfterSeconds: 3600</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; )</span><br></pre></td></tr></table></figure>\n<h3 id=\"隐藏索引-Hidden-Indexes\">隐藏索引(Hidden Indexes)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>隐藏索引对查询规划器不可见，不能用于查询。</p>\n</li>\n<li class=\"lvl-2\">\n<p>通过对规划器隐藏索引，用户可以在不实际删除索引的情况下评估删除索引的潜在影响。如果影响是负面的，用户可以取消隐藏索引，而不必重新创建已删除的索引。</p>\n</li>\n<li class=\"lvl-2\">\n<p>隐藏索引的创建方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建隐藏索引</span></span><br><span class=\"line\">db.restaurants.createIndex(&#123; borough: 1 &#125;,&#123; hidden: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\"><span class=\"comment\"># 隐藏现有索引</span></span><br><span class=\"line\">db.restaurants.hideIndex( &#123; borough: 1&#125; );</span><br><span class=\"line\">db.restaurants.hideIndex( <span class=\"string\">&quot;索引名称&quot;</span> )</span><br><span class=\"line\"><span class=\"comment\"># 取消隐藏索引</span></span><br><span class=\"line\">db.restaurants.unhideIndex( &#123; borough: 1&#125; );</span><br><span class=\"line\">db.restaurants.unhideIndex( <span class=\"string\">&quot;索引名称&quot;</span> );</span><br></pre></td></tr></table></figure>\n<h2 id=\"索引其它操作\">索引其它操作</h2>\n<h3 id=\"查看索引\">查看索引</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看索引信息</span></span><br><span class=\"line\">db.books.getIndexes()</span><br><span class=\"line\"><span class=\"comment\"># 查看索引键</span></span><br><span class=\"line\">db.books.getIndexKeys()</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除索引\">删除索引</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除集合指定索引</span></span><br><span class=\"line\">db.col.dropIndex(<span class=\"string\">&quot;索引名称&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 删除集合所有索引,不能删除主键索引</span></span><br><span class=\"line\">db.col.dropIndexes()</span><br></pre></td></tr></table></figure>\n<h2 id=\"索引使用建议\">索引使用建议</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>为每一个查询建立合适的索引</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">这个是针对于数据量较大比如说超过几十上百万（文档数目）数量级的集合。</li>\n<li class=\"lvl-6\">如果没有索引MongoDB需要把所有的Document从盘上读到内存，这会对MongoDB服务器造成较大的压力并影响到其他请求的执行。</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>创建合适的复合索引，不要依赖于交叉索引</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">如果你的查询会使用到多个字段，MongoDB有两个索引技术可以使用：交叉索引和复合索引。</li>\n<li class=\"lvl-6\">交叉索引就是针对每个字段单独建立一个单字段索引，然后在查询执行时候使用相应的单字段索引进行索引交叉而得到查询结果。</li>\n<li class=\"lvl-6\">交叉索引目前触发率较低，所以如果你有一个多字段查询的时候，建议使用复合索引能够保证索引正常的使用。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查找所有年龄小于30岁的深圳市马拉松运动员</span></span><br><span class=\"line\">db.athelets.find(&#123;sport: <span class=\"string\">&quot;marathon&quot;</span>, location: <span class=\"string\">&quot;sz&quot;</span>, age: &#123;<span class=\"variable\">$lt</span>: 30&#125;&#125;&#125;)</span><br><span class=\"line\"><span class=\"comment\">#创建复合索引</span></span><br><span class=\"line\">db.athelets.createIndex(&#123;sport:1, location:1, age:1&#125;)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>复合索引字段顺序：匹配条件在前，范围条件在后（Equality First, Range After）</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">前面的例子，在创建复合索引时如果条件有匹配和范围之分，那么匹配条件（sport: “marathon”) 应该在复合索引的前面。范围条件(age: &lt;30)字段应该放在复合索引的后面。</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>尽可能使用覆盖索引（Covered Index）</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">建议只返回需要的字段，同时，利用覆盖索引来提升性能。</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>建索引要在后台运行</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">在对一个集合创建索引时，该集合所在的数据库将不接受其他读写操作。对大数据量的集合建索引，建议使用后台运行选项 {background: true}</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p>避免设计过长的数组索引</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">数组索引是多值的，在存储时需要使用更多的空间。如果索引的数组长度特别长，或者数组的增长不受控制，则可能导致索引空间急剧膨胀。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"explain执行计划\">explain执行计划</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>explain执行计划的作用是：查看MongoDB执行查询时的执行计划。</p>\n</li>\n<li class=\"lvl-2\">\n<p>explain执行计划的使用方式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 语法</span></span><br><span class=\"line\">db.collection.find().explain(&lt;verbose&gt;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\">db.books.find(&#123;title: <span class=\"string\">&quot;MongoDB 教程&quot;</span>&#125;).explain()</span><br><span class=\"line\">db.books.find(&#123;title: <span class=\"string\">&quot;MongoDB 教程&quot;</span>&#125;).explain(<span class=\"string\">&quot;executionStats&quot;</span>)</span><br><span class=\"line\">db.books.find(&#123;title: <span class=\"string\">&quot;MongoDB 教程&quot;</span>&#125;).explain(<span class=\"string\">&quot;allPlansExecution&quot;</span>)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>verbose :可选参数，表示执行计划的输出模式，默认queryPlanner</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>模式名字</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>queryPlanner</td>\n<td>执行计划的详细信息，包括查询计划、集合信息、查询条件、最佳执行计划、查询方式和 MongoDB 服务信息等</td>\n</tr>\n<tr>\n<td>executionStats</td>\n<td>最佳执行计划的执行情况和被拒绝的计划等信息</td>\n</tr>\n<tr>\n<td>allPlansExecution</td>\n<td>选择并执行最佳执行计划，并返回最佳执行计划和其他执行计划的执行情况</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>输出结果中重点查看<code>stage</code>,比如<code>queryPlanner</code>下的<code>winningPlan.stage</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>stage</code>类型</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>状态</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>COLLSCAN</td>\n<td>全表扫描</td>\n</tr>\n<tr>\n<td>IXSCAN</td>\n<td>索引扫描</td>\n</tr>\n<tr>\n<td>FETCH</td>\n<td>根据索引检索指定文档</td>\n</tr>\n<tr>\n<td>SHARD_MERGE</td>\n<td>将各个分片返回数据进行合并</td>\n</tr>\n<tr>\n<td>SORT</td>\n<td>在内存中进行了排序</td>\n</tr>\n<tr>\n<td>LIMIT</td>\n<td>使用 limit 限制返回数</td>\n</tr>\n<tr>\n<td>SKIP</td>\n<td>使用 skip 进行跳过</td>\n</tr>\n<tr>\n<td>IDHACK</td>\n<td>对 _id 进行查询</td>\n</tr>\n<tr>\n<td>SHARDING_FILTER</td>\n<td>通过 mongos 对分片数据进行查询</td>\n</tr>\n<tr>\n<td>COUNTSCAN</td>\n<td>count 不使用索引进行 count 时的 stage 返回</td>\n</tr>\n<tr>\n<td>COUNT_SCAN</td>\n<td>count 使用了索引进行 count 时的 stage 返回</td>\n</tr>\n<tr>\n<td>SUBPLAN</td>\n<td>未使用到索引的 $or 查询的 stage 返回</td>\n</tr>\n<tr>\n<td>TEXT</td>\n<td>使用全文索引进行查询时候的 stage 返回</td>\n</tr>\n<tr>\n<td>PROJECTION</td>\n<td>限定返回字段时候 stage 的返回</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>执行计划的返回结果中尽量不要出现以下<code>stage</code>:</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- COLLSCAN(全表扫描)</span><br><span class=\"line\">- SORT(使用sort但是无index)</span><br><span class=\"line\">- 不合理的SKIP</span><br><span class=\"line\">- SUBPLA(未用到index的$or)</span><br><span class=\"line\">- COUNTSCAN(不使用index进行count)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"实战\">实战</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>下面是一个结合各种索引类型的示例，假设我们正在为一个电商应用创建和管理一个MongoDB集合products，其中包含以下字段：</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_id: 默认的ObjectId类型，作为主键（已自动带有唯一性索引）。</span><br><span class=\"line\">category: 商品分类，字符串类型。</span><br><span class=\"line\">brand: 商品品牌，字符串类型。</span><br><span class=\"line\">tags: 商品标签数组，包含多个字符串元素。</span><br><span class=\"line\">price: 商品价格，数字类型。</span><br><span class=\"line\">lastUpdated: 商品最后更新时间，日期类型。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>创建集合与插入文档</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 假设已经连接到数据库并选择了一个database</span><br><span class=\"line\">db.createCollection(<span class=\"string\">&quot;products&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">// 插入一些示例数据</span><br><span class=\"line\">db.products.insertMany([</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    category: <span class=\"string\">&quot;Electronics&quot;</span>,</span><br><span class=\"line\">    brand: <span class=\"string\">&quot;Apple&quot;</span>,</span><br><span class=\"line\">    tags: [<span class=\"string\">&quot;smartphone&quot;</span>, <span class=\"string\">&quot;ios&quot;</span>],</span><br><span class=\"line\">    price: 999,</span><br><span class=\"line\">    lastUpdated: ISODate(<span class=\"string\">&quot;2023-03-01T00:00:00Z&quot;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  // ...其他商品文档</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>单键索引 - 查询商品按价格排序</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">products</span>.<span class=\"title function_\">createIndex</span>(&#123; <span class=\"attr\">price</span>: <span class=\"number\">1</span> &#125;);</span><br><span class=\"line\">db.<span class=\"property\">products</span>.<span class=\"title function_\">find</span>().<span class=\"title function_\">sort</span>(&#123; <span class=\"attr\">price</span>: <span class=\"number\">1</span> &#125;); <span class=\"comment\">// 获取所有商品按价格升序排列</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>复合索引 - 按品牌和价格查询，并进行排序：</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">products</span>.<span class=\"title function_\">createIndex</span>(&#123; <span class=\"attr\">brand</span>: <span class=\"number\">1</span>, <span class=\"attr\">price</span>: -<span class=\"number\">1</span> &#125;);</span><br><span class=\"line\">db.<span class=\"property\">products</span>.<span class=\"title function_\">find</span>(&#123; <span class=\"attr\">brand</span>: <span class=\"string\">&quot;Apple&quot;</span> &#125;).<span class=\"title function_\">sort</span>(&#123; <span class=\"attr\">price</span>: -<span class=\"number\">1</span> &#125;); <span class=\"comment\">// 获取指定品牌的商品并按价格降序排列</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>多键索引 - 根据商品标签进行搜索</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">products</span>.<span class=\"title function_\">createIndex</span>(&#123; <span class=\"string\">&quot;tags&quot;</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"string\">&quot;sparse&quot;</span>: <span class=\"literal\">true</span> &#125;); <span class=\"comment\">// 如果不是每个文档都有tags，可以使用sparse选项以节省空间</span></span><br><span class=\"line\">db.<span class=\"property\">products</span>.<span class=\"title function_\">find</span>(&#123; <span class=\"string\">&quot;tags&quot;</span>: <span class=\"string\">&quot;smartphone&quot;</span> &#125;); <span class=\"comment\">// 找到所有带有“smartphone”标签的商品</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>唯一索引 - 确保品牌名称不重复</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">products</span>.<span class=\"title function_\">createIndex</span>(&#123; <span class=\"attr\">brand</span>: <span class=\"number\">1</span> &#125;, &#123; <span class=\"attr\">unique</span>: <span class=\"literal\">true</span> &#125;);</span><br><span class=\"line\"><span class=\"comment\">// 尝试插入重复记录时</span></span><br><span class=\"line\">db.<span class=\"property\">products</span>.<span class=\"title function_\">insertOne</span>(&#123; <span class=\"attr\">category</span>: <span class=\"string\">&quot;Electronics&quot;</span>, <span class=\"attr\">brand</span>: <span class=\"string\">&quot;Apple&quot;</span>, ... &#125;); <span class=\"comment\">// 正常插入</span></span><br><span class=\"line\">db.<span class=\"property\">products</span>.<span class=\"title function_\">insertOne</span>(&#123; <span class=\"attr\">category</span>: <span class=\"string\">&quot;Computers&quot;</span>, <span class=\"attr\">brand</span>: <span class=\"string\">&quot;Apple&quot;</span>, ... &#125;); <span class=\"comment\">// 若数据库中已有Apple品牌，则会因违反唯一性而报错</span></span><br></pre></td></tr></table></figure>","content_text":"摘要 本文介绍如何使用MongoDB7.0的索引 MongoDB版本7.0.6 MongoDB Indexes MongoDB索引简介 索引支持在MongoDB中高效执行查询。如果没有索引，MongoDB必须扫描集合中的每个文档才能返回查询结果。如果查询存在适当的索引，MongoDB使用该索引来限制它必须扫描的文档数量。 虽然索引可以提高查询性能，但添加索引对写入操作的性能有负面影响。对于写入读数比较高的集合，索引很昂贵，因为每个插入还必须更新任何索引。 所以合理的创建索引，即可以提升查询性能，又不会对写操作造成太大的影响。 MongoDB采用 B-Tree (准确的说是 B+Tree) 做索引，索引创建在colletions上。 创建索引语法 1db.collection.createIndex( keys, options ) Key 值为你要创建的索引字段，1 按升序创建索引， -1 按降序创建索引 options 选项 参数 类型 描述 background Boolean 建索引过程是否阻塞其它数据库操作，设置为 true 则以后台方式创建索引 unique Boolean 建立的索引是否唯一，设置为 true 则创建唯一索引 name string 索引的名称 dropDups Boolean 3.0+版本已废弃，在建立唯一索引时是否删除重复记录 sparse Boolean 对文档中不存在的字段数据是否启用索引 expireAfterSeconds integer 指定一个以秒为单位的数值，完成 TTL 设定，设定集合的生存时间 v index version 索引的版本号 weights document 索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重 default_language string 对于文本索引，该参数决定了停用词及词干和词器的规则的列表 language_override string 对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的 language 索引类型 与大多数数据库一样，MongoDB支持各种丰富的索引类型，包括单键索引、复合索引，唯一索引等一些常用的结构。由于采用了灵活可变的文档类型，因此它也同样支持对嵌套字段、数组进行索引。通过建立合适的索引，我们可以极大地提升数据的检索速度。在一些特殊应用场景，MongoDB还支持地理空间索引、文本检索索引、TTL索引等不同的特性。 单键索引(Single Field Indexes) 单键索引是MongoDB最简单的索引类型，它将一个字段作为索引键，索引键值唯一。 默认情况下，MongoDB会在ID字段上创建一个单键索引，ID字段是文档的唯一标识符，MongoDB会自动创建一个ID字段，如果用户自己创建ID字段，MongoDB会自动将ID字段作为单键索引。 单键索引的创建方式如下： 1234# 1表示正序，-1表示倒序db.books.createIndex(&#123;title:1&#125;)# 对内嵌文档字段创建索引：db.books.createIndex(&#123;&quot;author.name&quot;:1&#125;) 复合索引(Compound Index) 复合索引是将多个字段作为索引键，其性质和单字段索引类似。但不同的是，复合索引中字段的顺序、字段的升降序对查询性能有直接的影响，因此在设计复合索引时则需要考虑不同的查询场景。 复合索引的创建方式如下： 123db.books.createIndex(&#123;title:1, author.name:1&#125;)# 对内嵌文档字段创建索引：db.books.createIndex(&#123;&quot;author.name&quot;:1, &quot;author.age&quot;:1&#125;) 多键(数组)索引(Multikey Index) 多键索引是将一个字段作为索引键，该字段可以是嵌套文档、数组等复杂数据类型。 多键索引的创建方式如下： 1234567891011121314151617# tags字段为数组db.books.createIndex(&#123;&quot;tags&quot;:1&#125;)# 创建复合多值索引，这里仅能有一个字段是数组，MongoDB并不支持一个复合索引中同时出现多个数组字段db.books.createIndex(&#123;title:1, tags:1&#125;)# 示例数据格式&#123; _id: 1, item: &quot;abc&quot;, stock: [ &#123; size: &quot;S&quot;, color: &quot;red&quot;, quantity: 25 &#125;, &#123; size: &quot;S&quot;, color: &quot;blue&quot;, quantity: 10 &#125;, &#123; size: &quot;M&quot;, color: &quot;blue&quot;, quantity: 50 &#125; ]&#125;# 可以对嵌入文档创建多键索引db.collection.createIndex( &#123; &quot;stock.size&quot;: 1, &quot;stock.quantity&quot;: 1 &#125; ) Hash索引(Hashed Indexes) Hash索引是MongoDB中的一种特殊的索引类型，它将字段的值计算出一个哈希值，然后将该哈希值作为索引键。由于哈希值的唯一性，因此MongoDB在创建Hash索引时，不会对索引键值进行排序。 Hash索引的创建方式如下： 123db.books.createIndex(&#123;title:&quot;hashed&quot;&#125;)# 对内嵌文档字段创建索引：db.books.createIndex(&#123;&quot;author.name&quot;:&quot;hashed&quot;&#125;) 通配符索引(Wildcard Indexes) 通配符索引是MongoDB中的一种特殊的索引类型，它允许在索引键值中包含通配符，从而支持对通配符匹配的查询。 MongoDB 4.2 引入了通配符索 通配符索引的创建方式如下： 12345678910111213# 示例数据&#123; &quot;product_name&quot; : &quot;Spy Coat&quot;, &quot;product_attributes&quot; : &#123; &quot;material&quot; : [ &quot;Tweed&quot;, &quot;Wool&quot;, &quot;Leather&quot; ], &quot;size&quot; : &#123; &quot;length&quot; : 72, &quot;units&quot; : &quot;inches&quot; &#125; &#125;&#125;db.products.createIndex( &#123; &quot;product_attributes.$**&quot; : 1 &#125; ) 通配符索引是稀疏的，不索引空字段。因此，通配符索引不能支持查询字段不存在的文档。 12345# 通配符索引不能支持以下查询db.products.find( &#123;&quot;product_attributes&quot; : &#123; $exists : false &#125; &#125; )db.products.aggregate([ &#123; $match : &#123; &quot;product_attributes&quot; : &#123; $exists : false &#125; &#125; &#125;]) 通配符索引为文档或数组的内容生成条目，而不是文档/数组本身。因此通配符索引不能支持精确的文档/数组相等匹配。通配符索引可以支持查询字段等于空文档{}的情况 123456#通配符索引不能支持以下查询:db.products.find(&#123; &quot;product_attributes.colors&quot; : [ &quot;Blue&quot;, &quot;Black&quot; ] &#125; )db.products.aggregate([&#123; $match : &#123; &quot;product_attributes.colors&quot; : [ &quot;Blue&quot;, &quot;Black&quot; ] &#125;&#125;]) 索引属性 唯一索引(Unique Indexes) 唯一索引的创建方式如下： 123456# 单键索引支持唯一约束db.books.createIndex(&#123;title:1&#125;, &#123;unique:true&#125;)# 复合索引支持唯一性约束db.books.createIndex(&#123;title:1，type:1&#125;, &#123;unique:true&#125;)# 多键索引支持唯一性约束，这里tags是数组db.books.createIndex(&#123;&quot;tags&quot;:1&#125;, &#123;unique:true&#125;) 唯一性索引对于文档中缺失的字段，会使用null值代替，因此不允许存在多个文档缺失索引字段的情况。 对于分片的集合，唯一性约束必须匹配分片规则。换句话说，为了保证全局的唯一性，分片键必须作为唯一性索引的前缀字段。 部分索引(Partial Indexes) 部分索引仅对满足指定过滤器表达式的文档进行索引。通过在一个集合中为文档的一个子集建立索引，部分索引具有更低的存储需求和更低的索引创建和维护的性能成本。 部分索引的创建方式如下： 12# 符合条件&#123;author: &#123;$exists: true&#125;&#125;，即存在作者，才对title创建升序索引db.books.createIndex(&#123;title:1&#125;, &#123;partialFilterExpression: &#123;author: &#123;$exists: true&#125;&#125;&#125;) partialFilterExpression(筛选器表达式)选项接受指定过滤条件的文档: - 等式表达式(例如:field: value或使用$eq操作符) - $exists: true - $gt， $gte， $lt， $lte - type - 顶层的and 注意：如果同时指定了partialFilterExpression和唯一约束，那么唯一约束只适用于满足筛选器表达式的文档。如果文档不满足筛选条件，那么带有惟一约束的部分索引不会阻止插入不满足惟一约束的文档。 稀疏索引(Sparse Indexes) 索引的稀疏属性确保索引只包含具有索引字段的文档的条目，索引将跳过没有索引字段的文档。即只对存在字段的文档进行索引（包括字段值为null的文档）。 如果稀疏索引会导致查询和排序操作的结果集不完整，MongoDB将不会使用该索引，除非hint()明确指定索引。 稀疏索引的创建方式如下： 12345678910111213141516171819# 数据准备db.scores.insertMany([ &#123;&quot;userid&quot; : &quot;newbie&quot;&#125;, &#123;&quot;userid&quot; : &quot;abby&quot;, &quot;score&quot; : 82&#125;, &#123;&quot;userid&quot; : &quot;nina&quot;, &quot;score&quot; : 90&#125;])# 创建稀疏索引db.scores.createIndex( &#123; score: 1 &#125; , &#123; sparse: true &#125; )# 测试# 使用稀疏索引db.scores.find( &#123; score: &#123; $lt: 90 &#125; &#125; )# 即使排序是通过索引字段，MongoDB也不会选择稀疏索引来完成查询，以返回完整的结果db.scores.find().sort( &#123; score: -1 &#125; )# 要使用稀疏索引，使用hint()显式指定索引db.scores.find().sort( &#123; score: -1 &#125; ).hint( &#123; score: 1 &#125; ) 同时具有稀疏性和唯一性的索引可以防止集合中存在字段值重复的文档，但允许不包含此索引字段的文档插入。 123456789101112# 删除之前创建的索引db.scores.dropIndex(&#123;score:1&#125;)# 创建具有唯一约束的稀疏索引db.scores.createIndex( &#123; score: 1 &#125; , &#123; sparse: true, unique: true &#125; )# 测试插入db.scores.insertMany( [ &#123; &quot;userid&quot;: &quot;AAAAAAA&quot;, &quot;score&quot;: 50 &#125;, &#123; &quot;userid&quot;: &quot;BBBBBBB&quot;, &quot;score&quot;: 64 &#125;, &#123; &quot;userid&quot;: &quot;CCCCCCC&quot; &#125;, &#123; &quot;userid&quot;: &quot;CCCCCCC&quot; &#125;] ) TTL索引(TTL Indexes) MongoDB 可以使用它在一定时间或特定时钟时间后自动从集合中删除文档，就是带有过期时间的索引，到期后，MongoDB会自动删除这些过期的文档。 TTL索引只能创建在日期字段上，当文档过期后，MongoDB会自动删除这些文档。 TTL索引的创建方式如下： 12345678# 数据准备db.log_events.insertOne( &#123; &quot;createdAt&quot;: new Date(), &quot;logEvent&quot;: 2, &quot;logMessage&quot;: &quot;Success!&quot;&#125; )# 创建TTL索引db.scores.createIndex( &#123; &quot;createdAt&quot;: 1 &#125;, &#123; expireAfterSeconds: 3600 &#125; ) TTL 索引不保证过期数据会在过期后立即被删除。文档过期和 MongoDB 从数据库中删除文档的时间之间可能存在延迟。删除过期文档的后台任务每 60 秒运行一次。因此，在文档到期和后台任务运行之间的时间段内，文档可能会保留在集合中。 TTL索引在创建之后，仍然可以对过期时间进行修改。这需要使用collMod命令对索引的定义进行变更 1234567db.runCommand( &#123; collMod: &quot;log_events&quot;, index: &#123; keyPattern: &#123; createdAt: 1 &#125;, expireAfterSeconds: 3600 &#125;&#125; ) 隐藏索引(Hidden Indexes) 隐藏索引对查询规划器不可见，不能用于查询。 通过对规划器隐藏索引，用户可以在不实际删除索引的情况下评估删除索引的潜在影响。如果影响是负面的，用户可以取消隐藏索引，而不必重新创建已删除的索引。 隐藏索引的创建方式如下： 12345678# 创建隐藏索引db.restaurants.createIndex(&#123; borough: 1 &#125;,&#123; hidden: true &#125;);# 隐藏现有索引db.restaurants.hideIndex( &#123; borough: 1&#125; );db.restaurants.hideIndex( &quot;索引名称&quot; )# 取消隐藏索引db.restaurants.unhideIndex( &#123; borough: 1&#125; );db.restaurants.unhideIndex( &quot;索引名称&quot; ); 索引其它操作 查看索引 1234# 查看索引信息db.books.getIndexes()# 查看索引键db.books.getIndexKeys() 删除索引 1234# 删除集合指定索引db.col.dropIndex(&quot;索引名称&quot;)# 删除集合所有索引,不能删除主键索引db.col.dropIndexes() 索引使用建议 为每一个查询建立合适的索引 这个是针对于数据量较大比如说超过几十上百万（文档数目）数量级的集合。 如果没有索引MongoDB需要把所有的Document从盘上读到内存，这会对MongoDB服务器造成较大的压力并影响到其他请求的执行。 创建合适的复合索引，不要依赖于交叉索引 如果你的查询会使用到多个字段，MongoDB有两个索引技术可以使用：交叉索引和复合索引。 交叉索引就是针对每个字段单独建立一个单字段索引，然后在查询执行时候使用相应的单字段索引进行索引交叉而得到查询结果。 交叉索引目前触发率较低，所以如果你有一个多字段查询的时候，建议使用复合索引能够保证索引正常的使用。 1234#查找所有年龄小于30岁的深圳市马拉松运动员db.athelets.find(&#123;sport: &quot;marathon&quot;, location: &quot;sz&quot;, age: &#123;$lt: 30&#125;&#125;&#125;)#创建复合索引db.athelets.createIndex(&#123;sport:1, location:1, age:1&#125;) 复合索引字段顺序：匹配条件在前，范围条件在后（Equality First, Range After） 前面的例子，在创建复合索引时如果条件有匹配和范围之分，那么匹配条件（sport: “marathon”) 应该在复合索引的前面。范围条件(age: &lt;30)字段应该放在复合索引的后面。 尽可能使用覆盖索引（Covered Index） 建议只返回需要的字段，同时，利用覆盖索引来提升性能。 建索引要在后台运行 在对一个集合创建索引时，该集合所在的数据库将不接受其他读写操作。对大数据量的集合建索引，建议使用后台运行选项 {background: true} 避免设计过长的数组索引 数组索引是多值的，在存储时需要使用更多的空间。如果索引的数组长度特别长，或者数组的增长不受控制，则可能导致索引空间急剧膨胀。 explain执行计划 explain执行计划的作用是：查看MongoDB执行查询时的执行计划。 explain执行计划的使用方式如下： 1234567# 语法db.collection.find().explain(&lt;verbose&gt;)# 示例db.books.find(&#123;title: &quot;MongoDB 教程&quot;&#125;).explain()db.books.find(&#123;title: &quot;MongoDB 教程&quot;&#125;).explain(&quot;executionStats&quot;)db.books.find(&#123;title: &quot;MongoDB 教程&quot;&#125;).explain(&quot;allPlansExecution&quot;) verbose :可选参数，表示执行计划的输出模式，默认queryPlanner 模式名字 描述 queryPlanner 执行计划的详细信息，包括查询计划、集合信息、查询条件、最佳执行计划、查询方式和 MongoDB 服务信息等 executionStats 最佳执行计划的执行情况和被拒绝的计划等信息 allPlansExecution 选择并执行最佳执行计划，并返回最佳执行计划和其他执行计划的执行情况 输出结果中重点查看stage,比如queryPlanner下的winningPlan.stage stage类型 状态 描述 COLLSCAN 全表扫描 IXSCAN 索引扫描 FETCH 根据索引检索指定文档 SHARD_MERGE 将各个分片返回数据进行合并 SORT 在内存中进行了排序 LIMIT 使用 limit 限制返回数 SKIP 使用 skip 进行跳过 IDHACK 对 _id 进行查询 SHARDING_FILTER 通过 mongos 对分片数据进行查询 COUNTSCAN count 不使用索引进行 count 时的 stage 返回 COUNT_SCAN count 使用了索引进行 count 时的 stage 返回 SUBPLAN 未使用到索引的 $or 查询的 stage 返回 TEXT 使用全文索引进行查询时候的 stage 返回 PROJECTION 限定返回字段时候 stage 的返回 执行计划的返回结果中尽量不要出现以下stage: 12345- COLLSCAN(全表扫描)- SORT(使用sort但是无index)- 不合理的SKIP- SUBPLA(未用到index的$or)- COUNTSCAN(不使用index进行count) 实战 下面是一个结合各种索引类型的示例，假设我们正在为一个电商应用创建和管理一个MongoDB集合products，其中包含以下字段： 123456_id: 默认的ObjectId类型，作为主键（已自动带有唯一性索引）。category: 商品分类，字符串类型。brand: 商品品牌，字符串类型。tags: 商品标签数组，包含多个字符串元素。price: 商品价格，数字类型。lastUpdated: 商品最后更新时间，日期类型。 创建集合与插入文档 1234567891011121314// 假设已经连接到数据库并选择了一个databasedb.createCollection(&quot;products&quot;);// 插入一些示例数据db.products.insertMany([ &#123; category: &quot;Electronics&quot;, brand: &quot;Apple&quot;, tags: [&quot;smartphone&quot;, &quot;ios&quot;], price: 999, lastUpdated: ISODate(&quot;2023-03-01T00:00:00Z&quot;) &#125;, // ...其他商品文档]); 单键索引 - 查询商品按价格排序 12db.products.createIndex(&#123; price: 1 &#125;);db.products.find().sort(&#123; price: 1 &#125;); // 获取所有商品按价格升序排列 复合索引 - 按品牌和价格查询，并进行排序： 12db.products.createIndex(&#123; brand: 1, price: -1 &#125;);db.products.find(&#123; brand: &quot;Apple&quot; &#125;).sort(&#123; price: -1 &#125;); // 获取指定品牌的商品并按价格降序排列 多键索引 - 根据商品标签进行搜索 12db.products.createIndex(&#123; &quot;tags&quot;: 1 &#125;, &#123; &quot;sparse&quot;: true &#125;); // 如果不是每个文档都有tags，可以使用sparse选项以节省空间db.products.find(&#123; &quot;tags&quot;: &quot;smartphone&quot; &#125;); // 找到所有带有“smartphone”标签的商品 唯一索引 - 确保品牌名称不重复 1234db.products.createIndex(&#123; brand: 1 &#125;, &#123; unique: true &#125;);// 尝试插入重复记录时db.products.insertOne(&#123; category: &quot;Electronics&quot;, brand: &quot;Apple&quot;, ... &#125;); // 正常插入db.products.insertOne(&#123; category: &quot;Computers&quot;, brand: &quot;Apple&quot;, ... &#125;); // 若数据库中已有Apple品牌，则会因违反唯一性而报错","summary":"摘要 本文介绍如何使用MongoDB7.0的索引 MongoDB版本7.0.6 MongoDB Indexes","date_published":"2024-03-11T13:30:05.000Z","tags":["技术","linux","mongodb","mongodb"]}]}