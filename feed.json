{"version":"https://jsonfeed.org/version/1","name":"飘逸峰的博客","home_page_url":"https://blog.hanqunfeng.com","feed_url":"https://blog.hanqunfeng.com/feed.json","author":{"name":"飘逸峰"},"items":[{"id":"https://blog.hanqunfeng.com/2023/03/27/linux-command10-ps/","url":"https://blog.hanqunfeng.com/2023/03/27/linux-command10-ps/","title":"Linux常用命令--进程管理","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍Linux进程管理等相关命令</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"ps-查看进程\">ps :查看进程</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 与top命令类似，可以查看进程信息</span></span><br><span class=\"line\">$ ps -aux</span><br><span class=\"line\">    -a:所有用户</span><br><span class=\"line\">    -x:没有控制终端的</span><br><span class=\"line\">    -u:显示用户名和启动时间</span><br><span class=\"line\"><span class=\"comment\"># 根据关键字过滤</span></span><br><span class=\"line\">$ ps -aux | grep nginx</span><br><span class=\"line\"></span><br><span class=\"line\">$ ps -ef</span><br><span class=\"line\">    -e:显示所有进程，包括用户和没有控制终端</span><br><span class=\"line\">    -f:显示所有信息</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看线程，相同PID表示的是同一个进程启动的线程</span></span><br><span class=\"line\">$ ps -eLf</span><br><span class=\"line\">    -L:显示线程</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看进程优先级 NI</span></span><br><span class=\"line\">$ ps -el</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看进程运行在第几个cpu逻辑核心上</span></span><br><span class=\"line\">$ ps -eo psr,user,pid,ppid,pri,ni,pgid,<span class=\"built_in\">command</span> | grep nginx</span><br><span class=\"line\">    psr：cpu逻辑核号</span><br><span class=\"line\">    pri :默认19，优先级 0~99，越大优先级越高，pri(new) = pri(old) + <span class=\"built_in\">nice</span></span><br><span class=\"line\">    ni :默认0，影响优先级的因子 -20~19，越小优先级越高，改变<span class=\"built_in\">nice</span>值可以改变pri</span><br><span class=\"line\">    pgid :进程组<span class=\"built_in\">id</span>，等同于 pgrp</span><br><span class=\"line\"><span class=\"comment\"># 绑定PID为10288的进程到第一块CPU，这样该进程就不会占用其它的CPU资源了</span></span><br><span class=\"line\">$ taskset -<span class=\"built_in\">cp</span> 1 10288</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 按pid排序</span></span><br><span class=\"line\">$ ps -aux --<span class=\"built_in\">sort</span> pid</span><br><span class=\"line\"><span class=\"comment\"># 按用户排序</span></span><br><span class=\"line\">$ ps -aux --<span class=\"built_in\">sort</span> user</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\">    USER:进程的执行用户</span><br><span class=\"line\">    PID:进程号</span><br><span class=\"line\">    PPID:父进程号</span><br><span class=\"line\">    TTY:进程启动的终端</span><br><span class=\"line\">    STAT:进程的当前状态，S:休眠 D:不可中断的休眠 R:运行 Z:僵死 T:停止 I:空闲内核线程</span><br><span class=\"line\">    NI:进程优先级</span><br><span class=\"line\">    TIME:进程自启动以来占用CPU的总时间</span><br><span class=\"line\">    CMD/COMMAND:执行的命令</span><br><span class=\"line\">    %CPU:占用CPU时间和总时间的百分比</span><br><span class=\"line\">    %MEM:占用内存与系统内存总量的百分比</span><br></pre></td></tr></table></figure>\n<h2 id=\"pstree-树状查看进行信息\">pstree :树状查看进行信息</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 折叠展示，只展示父进程和子进程的数量</span></span><br><span class=\"line\">$ pstree</span><br><span class=\"line\"><span class=\"comment\"># 展开所有子进程，并显示完整命令</span></span><br><span class=\"line\">$ pstree -a</span><br><span class=\"line\"><span class=\"comment\"># 展开所有子进程，并显示PID</span></span><br><span class=\"line\">$ pstree -p</span><br></pre></td></tr></table></figure>\n<h2 id=\"kill-终止进程\">kill :终止进程</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 正常关闭进程</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> 进程号</span><br><span class=\"line\"><span class=\"comment\"># 强行关闭，遇到进程不能正常关闭时使用</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> -9 进程号</span><br><span class=\"line\"><span class=\"comment\"># 查看所有信号</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 杀死进程名称所关联的全部进程</span></span><br><span class=\"line\">killall 进程名称</span><br><span class=\"line\">killall -9 进程名称</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 杀死进程名称所关联的全部进程，同killall</span></span><br><span class=\"line\">pkill 进程名称</span><br><span class=\"line\">pkill -9 进程名称</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查找服务的进程号</span></span><br><span class=\"line\">pgrep 进程名称  : 效果同 ps -aux | grep 进程名 | grep -v grep| awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 终止进程名称含有mysql的全部进程</span></span><br><span class=\"line\">pgrep mysql | xargs <span class=\"built_in\">kill</span> -s 9</span><br></pre></td></tr></table></figure>\n<h2 id=\"进程的挂起和恢复\">进程的挂起和恢复</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl+c :终止</span><br><span class=\"line\"></span><br><span class=\"line\">ctrl+z :挂起，暂停</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">bg</span> num :转到后台继续运行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">fg</span> num :从后台恢复到前台继续运行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">jobs</span> :查看被挂起或正在后台运行的进程，会显示编号num</span><br><span class=\"line\"></span><br><span class=\"line\">commond &amp; :后台运行，只在当前终端下有效</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">nohup</span> commond &amp; :后台执行，退出终端依然继续执行</span><br></pre></td></tr></table></figure>\n<h2 id=\"进程运行优先级\">进程运行优先级</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进程优先级是 PRI(top中的PR)，其表示程序被 CPU 执行的先后顺序，此值越小进程的优先级别越高</p>\n</li>\n<li class=\"lvl-2\">\n<p>PRI 值不是 Nice 值，但是 Nice 值会影响优先级，<code>PRI(new) = PRI(old) + nice</code>，所以我们调整 Nice 值，就可以改变进程的优先级</p>\n</li>\n<li class=\"lvl-2\">\n<p>linux下的进程调度优先级 Nice 是从 -20 到 19 ，一共 40 个级别，数字越大，表示进程的优先级越低。默认时候，进程的调度优先级是0。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 指定命令的运行优先级</span></span><br><span class=\"line\"><span class=\"built_in\">nice</span> -n commond</span><br><span class=\"line\"><span class=\"comment\"># 改变一个正在运行的进程的优先级</span></span><br><span class=\"line\">renice n pid</span><br><span class=\"line\"><span class=\"comment\"># 改变进程组内全部进程的优先级</span></span><br><span class=\"line\">renice n -g pid</span><br><span class=\"line\"><span class=\"comment\"># 说明</span></span><br><span class=\"line\">    n :取值范围（-20,19），越小优先级越高</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\"><span class=\"comment\"># 默认启动nginx</span></span><br><span class=\"line\">$ nginx</span><br><span class=\"line\"><span class=\"comment\"># 查看优先级，可以看到此时默认优先级是0</span></span><br><span class=\"line\">ps -eo pgid,user,pid,pri,ni,<span class=\"built_in\">command</span> | grep nginx | grep -v grep</span><br><span class=\"line\">23348 root     23348  19   0 nginx: master process nginx</span><br><span class=\"line\">23348 nginx    23349  19   0 nginx: worker process</span><br><span class=\"line\">23348 nginx    23350  19   0 nginx: worker process</span><br><span class=\"line\"><span class=\"comment\"># 终止nginx进程</span></span><br><span class=\"line\">$ pkill nginx</span><br><span class=\"line\"><span class=\"comment\"># 重新指定优先级启动，指定优先级为10</span></span><br><span class=\"line\">$ <span class=\"built_in\">nice</span> -10 nginx</span><br><span class=\"line\"><span class=\"comment\"># 查看优先级，可以看到此时默认优先级是10</span></span><br><span class=\"line\">$ ps -eo pgid,user,pid,pri,ni,<span class=\"built_in\">command</span> | grep nginx | grep -v grep</span><br><span class=\"line\">23388 root     23388   9  10 nginx: master process nginx</span><br><span class=\"line\">23388 nginx    23389   9  10 nginx: worker process</span><br><span class=\"line\">23388 nginx    23390   9  10 nginx: worker process</span><br><span class=\"line\"><span class=\"comment\"># 改变运行中的nginx的优先级为-10，此时只会改变master的优先级</span></span><br><span class=\"line\">$ renice -10 23388</span><br><span class=\"line\">23388 (进程 ID) 旧优先级为 10，新优先级为 -10</span><br><span class=\"line\">$ ps -eo pgid,user,pid,pri,ni,<span class=\"built_in\">command</span> | grep nginx | grep -v grep</span><br><span class=\"line\">23388 root     23388  29 -10 nginx: master process nginx</span><br><span class=\"line\">23388 nginx    23389   9  10 nginx: worker process</span><br><span class=\"line\">23388 nginx    23390   9  10 nginx: worker process</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 改变运行中的nginx的优先级为-10，此时只会改变master的优先级</span></span><br><span class=\"line\">$ renice -10 -g 23388</span><br><span class=\"line\">23388 (进程组 ID) 旧优先级为 -10，新优先级为 -10</span><br><span class=\"line\">$ ps -eo pgid,user,pid,pri,ni,<span class=\"built_in\">command</span> | grep nginx | grep -v grep</span><br><span class=\"line\">23388 root     23388  29 -10 nginx: master process nginx</span><br><span class=\"line\">23388 nginx    23389  29 -10 nginx: worker process</span><br><span class=\"line\">23388 nginx    23390  29 -10 nginx: worker process</span><br></pre></td></tr></table></figure>\n<h2 id=\"at-执行一次的计划任务\">at :执行一次的计划任务</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>/var/spool/at：at任务存放在该目录下</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动at服务</span></span><br><span class=\"line\">systemctl start atd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 今天10:46执行 test.sh</span></span><br><span class=\"line\">at -f test.sh 10:46</span><br><span class=\"line\"><span class=\"comment\"># 时间格式：</span></span><br><span class=\"line\">    5:30pm :今天下午5点30分</span><br><span class=\"line\">    17:30 :今天下午5点30分</span><br><span class=\"line\">    17:30 today :今天下午5点30分</span><br><span class=\"line\">    now +3 hours :3小时后</span><br><span class=\"line\">    now +180 minutes :3小时后</span><br><span class=\"line\">    17:30 23.2.28 :2023年2月28日下午5点30分</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前at队列，显示编号num</span></span><br><span class=\"line\">at -l ==== atq</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定编号的任务</span></span><br><span class=\"line\">at -d num ==== atrm num</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>用户限制：<br>\n<code>/etc/at.allow</code> :如果文件存在，则只有此文件中列出的用户可以使用at命令<br>\n<code>/etc/at.deny</code> :如果文件存在，则此文件中列出的用户不可以使用at命令<br>\n如果以上两个文件都不存在，则只有root用户可以使用at命令<br>\n如果以上两个文件都存在，但是都为空，则所有用户都可以使用at命令</p>\n</li>\n</ul>\n<h2 id=\"crontab-周期性计划任务\">crontab :周期性计划任务</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>systemctl start crond</code> :启动cron服务，默认启动</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>crontab -l</code> :显示当前用户下的计划任务</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>crontab -e</code> :编辑当前用户下的计划任务</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>/var/spool/cron</code> :计划任务保存在该路径下</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>/etc/cron.allow</code> 与 <code>/etc/cron.deny</code> :用户限制，规则同 <code>at</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>格式：<code>分钟[0~59] 小时[0~23] 日期[1~31] 月份[1~12] 星期[0~6] commands</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 每5分钟执行一次</span></span><br><span class=\"line\">*/5 * * * * <span class=\"built_in\">command</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 每天2点执行一次</span></span><br><span class=\"line\">0 2 * * * <span class=\"built_in\">command</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 每天2、3、4、5点各执行一次</span></span><br><span class=\"line\">0 2-5 * * * <span class=\"built_in\">command</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 周一至周五每天9点和18点各执行一次</span></span><br><span class=\"line\">0 9,18 * * 1-5 <span class=\"built_in\">command</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"systemctl-服务管理\">systemctl :服务管理</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>centOS7以后使用<code>systemd</code>进行服务管理，其命令接口为<code>systemctl</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>systemctl</code>兼容了<code>service</code>，即<code>systemctl</code>也会去<code>/etc/init.d</code>目录下，查看、执行相关程序</p>\n</li>\n<li class=\"lvl-2\">\n<p>如下centOS6及之前的服务启动方式，centOS7及之后仍然可以通过这种方式管理服务，实际上会重定向到systemctl命令</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service redis start</span><br><span class=\"line\">service redis stop</span><br><span class=\"line\">service redis restart</span><br><span class=\"line\">service redis status</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>systemd</code>的服务配置放在目录<code>/usr/lib/systemd/system  (Centos)</code> 或 <code>/etc/systemd/system  (Ubuntu)</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>配置目录下有多种类型文件<code>.mount</code>,<code>.service</code>,<code>.target</code>,<code>.socket</code>,<code>.timer</code>等等</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">不同的文件类型代表不同的资源，统称为 Unit（单位），Unit 一共分成12种类型</li>\n</ul>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Service unit：系统服务</span><br><span class=\"line\">Target unit：多个 Unit 构成的一个组</span><br><span class=\"line\">Device Unit：硬件设备</span><br><span class=\"line\">Mount Unit：文件系统的挂载点</span><br><span class=\"line\">Automount Unit：自动挂载点</span><br><span class=\"line\">Path Unit：文件或路径</span><br><span class=\"line\">Scope Unit：不是由 Systemd 启动的外部进程</span><br><span class=\"line\">Slice Unit：进程组</span><br><span class=\"line\">Snapshot Unit：Systemd 快照，可以切回某个快照</span><br><span class=\"line\">Socket Unit：进程间通信的 socket</span><br><span class=\"line\">Swap Unit：swap 文件</span><br><span class=\"line\">Timer Unit：定时器</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">重点学习<code>.service</code>文件，其定义了一个服务，分为[Unit]，[Service]，[Install]三个小节</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description:描述，</span><br><span class=\"line\">After：在哪些服务启动后才启动</span><br><span class=\"line\">ConditionPathExists: 执行条件</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">EnvironmentFile:变量所在文件</span><br><span class=\"line\">ExecStart: 执行启动脚本</span><br><span class=\"line\">Restart: fail时重启</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">Alias:服务别名</span><br><span class=\"line\">WangtedBy: 多用户模式下需要的</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-2\">\n<p>查看服务</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出当前已经启动的 unit，如果添加 -all 选项会同时列出没有启动的 unit</span></span><br><span class=\"line\">systemctl ==== systemctl list-units</span><br><span class=\"line\">systemctl -all</span><br><span class=\"line\"><span class=\"comment\"># 只查看服务类型为service的服务</span></span><br><span class=\"line\">systemctl list-units --<span class=\"built_in\">type</span>=service -all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据 /lib/systemd/system/ 目录内的文件列出所有的服务及其当前的状态</span></span><br><span class=\"line\">systemctl list-unit-files</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果发现某个 服务 不工作，可以查看是否有 服务 加载失败</span></span><br><span class=\"line\">systemctl --failed</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>service :系统服务</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启动redis服务</span></span><br><span class=\"line\">systemctl start redis</span><br><span class=\"line\"><span class=\"comment\"># 重新启动redis服务</span></span><br><span class=\"line\">systemctl restart redis</span><br><span class=\"line\"><span class=\"comment\"># 关闭redis服务</span></span><br><span class=\"line\">systemctl stop redis</span><br><span class=\"line\"><span class=\"comment\"># 不关闭redis的情况下重新加载配置文件，让新的设置生效</span></span><br><span class=\"line\">systemctl reload redis</span><br><span class=\"line\"><span class=\"comment\"># 加入开机自启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> redis</span><br><span class=\"line\"><span class=\"comment\"># 关闭开机自启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> redis</span><br><span class=\"line\"><span class=\"comment\"># 查看redis服务状态</span></span><br><span class=\"line\">systemctl status redis</span><br><span class=\"line\"><span class=\"comment\"># 目前有没有正在运行中</span></span><br><span class=\"line\">systemctl is-active redis</span><br><span class=\"line\"><span class=\"comment\"># 开机时有没有默认要启用</span></span><br><span class=\"line\">systemctl is-enabled redis</span><br><span class=\"line\"><span class=\"comment\"># 是否启动失败</span></span><br><span class=\"line\">systemctl is-failed redis</span><br><span class=\"line\"><span class=\"comment\"># 列出 redis服务 的配置</span></span><br><span class=\"line\">systemctl show redis</span><br><span class=\"line\"><span class=\"comment\"># 注销 redis服务 ，注销后就无法启动</span></span><br><span class=\"line\">systemctl mask redis</span><br><span class=\"line\"><span class=\"comment\"># 取消 redis服务 的注销</span></span><br><span class=\"line\">systemctl unmask redis</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>target :类似于运行级别，支持多个target同时启动。target其实是多个unit的组合，系统启动说白了就是启动多个unit</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只查看服务类型为target的服务</span></span><br><span class=\"line\">systemctl list-units --<span class=\"built_in\">type</span>=target -all</span><br><span class=\"line\"><span class=\"comment\"># 取得目前缺省的 target</span></span><br><span class=\"line\">systemctl get-default :multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 几个常用的 target。</span></span><br><span class=\"line\">    graphical.target：多人模式，支持图形和命令行两种登录，对应之前的3,5级别。</span><br><span class=\"line\">    multi-user.target：多人模式，只支持命令行登录，对应3级别！</span><br><span class=\"line\">    rescue.target：单人模式，对应1级别，在无法使用 root 登陆的情况下，systemd 在开机时会多加一个额外的临时系统，与你原本的系统无关。这时你可以取得 root 的权限来维护你的系统。</span><br><span class=\"line\">    emergency.target：单人模式，不过系统进入后根目录是只读的，紧急处理系统的错误，在无法使用 rescue.target 时，可以尝试使用这种模式！</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置缺省的 target</span></span><br><span class=\"line\">systemctl set-default multi-user.target</span><br><span class=\"line\"><span class=\"comment\"># 切换到指定的 target</span></span><br><span class=\"line\">systemctl isolate multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看依赖关系，查看 multi-user.target 依赖哪些服务</span></span><br><span class=\"line\">systemctl list-dependencies multi-user.target</span><br><span class=\"line\"><span class=\"comment\"># 反向查看依赖关系， --reverse 选项查看 multi-user.target 被谁使用</span></span><br><span class=\"line\">systemctl list-dependencies multi-user.target --reverse</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">1.<code>systemd</code> 主配置文件 <code>/etc/systemd/system.conf</code></li>\n<li class=\"lvl-2\">2.开机会先加载 <code>/etc/systemd/system/default.target</code></li>\n<li class=\"lvl-2\">3.所有的 <code>service</code> 和 <code>target</code> 都在 <code>/usr/lib/systemd/system/</code>目录下</li>\n<li class=\"lvl-2\">4.<code>/etc/systemd/system/defaut.target</code> 是一个软连接，软连接到了<code>/usr/lib/systemd/system/multi-user.target</code>，它会加载<code>/usr/lib/systemd/system/multi-user.target.wants</code>下面的<code>service</code></li>\n<li class=\"lvl-2\">5.查看一个<code>service</code>属于哪个<code>target</code>，需要查看具体的service文件，如：<code>cat /usr/lib/systemd/system/sshd.service</code>，看里面<code>[install]</code>部分</li>\n</ul>\n</div>\n<h2 id=\"chkconfig-设置系统服务在哪些运行级别下开机启动\">chkconfig :设置系统服务在哪些运行级别下开机启动</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>centOS7之后不再使用这种方式，而是使用<code>systemctl</code>，但是仍然可以在<code>/etc/init.d</code>目录下创建管理脚本，然后通过<code>chkconfig</code>进行管理</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chkconfig --list ：查看全部系统服务的运行级别</span><br><span class=\"line\">chkconfig --list sshd ：查看sshd系统服务的运行级别</span><br><span class=\"line\">chkconfig --level 2345 sshd on ：修改sshd服务的运行级别为2345都启动，on/off</span><br><span class=\"line\">chkconfig sshd on ：默认就是开启2345运行级别</span><br><span class=\"line\">chkconfig --add nginx :添加服务到管理列表中，需要在`/etc/init.d`目录下有对应的nginx文件</span><br><span class=\"line\">chkconfig --del nginx :从管理列表中删除</span><br></pre></td></tr></table></figure>\n<h2 id=\"ntsysv-通过界面设置服务是否开机启动\">ntsysv :通过界面设置服务是否开机启动</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>centOS7之后不再使用这种方式，而是使用<code>systemctl</code>，但是仍然可以使用其管理当前运行级别下的服务</p>\n</li>\n<li class=\"lvl-2\">\n<p>运行命令后会弹出设置界面，服务前面有*号的表示开机启动，使用空格修改，Tab键进行跳转</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 修改当前的运行级别下的服务</span></span><br><span class=\"line\">ntsysv</span><br><span class=\"line\"><span class=\"comment\"># 修改3运行级别下的服务</span></span><br><span class=\"line\">ntsysv --level 3</span><br><span class=\"line\"><span class=\"comment\"># 同时修改3和5运行级别下的服务</span></span><br><span class=\"line\">ntsysv --level 35</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>Linux运行级别</strong></em><br>\n0：系统关机模式，系统默认运行级别不能设置为0，否则无法正常启动系统<br>\n1：单用户模式，也称为救援模式，root权限，用于系统维护，禁止远程登陆，类似Windows下的安全模式登录。<br>\n2：无网络支持的多用户模式<br>\n3：有网络支持的多用户模式(文本模式，工作中最常使用的模式)<br>\n4：保留，未使用<br>\n5：有网络支持的图形化模式，支持多用户模式，登陆后进入图形GUI模式或GNOME、KDE图形化界面，如X Window系统。<br>\n6：重启模式，重新引导系统，即重启</p>\n<p><strong>运行级别切换</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前的运行级别，输出结果为: 上一次运行级别 当前运行级别</span></span><br><span class=\"line\">runlevel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换运行级别</span></span><br><span class=\"line\">init 0\t====  systemctl isolate poweroff.target\t====  systemctl poweroff</span><br><span class=\"line\">init 1\t====  systemctl isolate rescue.target</span><br><span class=\"line\">init 3\t====  systemctl isolate multi-user.target</span><br><span class=\"line\">init 5\t====  systemctl isolate graphical.target</span><br><span class=\"line\">init 6\t====  systemctl isolate reboot.target  ====  systemctl reboot</span><br></pre></td></tr></table></figure>\n</div>\n<h2 id=\"fuser-可以显示出当前哪个程序在使用磁盘上的某个文件、挂载点、甚至网络端口，并给出程序进程的详细信息\">fuser :可以显示出当前哪个程序在使用磁盘上的某个文件、挂载点、甚至网络端口，并给出程序进程的详细信息</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>fuser通常被用在诊断系统的<code>resource busy</code>问题，通常是在你希望<code>umount</code>指定的挂载点得时候遇到</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看哪个进程在访问/mnt目录</span></span><br><span class=\"line\">fuser /mnt :只显示PID和权限</span><br><span class=\"line\">fuser -u /mnt :-u，在每个PID后面添加进程拥有者的用户名称</span><br><span class=\"line\">fuser -v /mnt :-v，显示详细信息，包含PID,USER,COMMAND等许多域</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 把访问mnt目录的进程杀掉</span></span><br><span class=\"line\">fuser -kv /mnt :-k，杀掉进程</span><br><span class=\"line\">fuser -kvi /mnt :-i，会询问你是否杀掉对应的进程</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看80端口被哪个进程占用</span></span><br><span class=\"line\">fuser -n tcp 80 :-n，指定协议和端口</span><br><span class=\"line\">fuser 80/tcp :不加-n，需要这样指定协议和端口</span><br><span class=\"line\"></span><br><span class=\"line\">fuser -un tcp 80</span><br><span class=\"line\">fuser -u 80/tcp</span><br><span class=\"line\"></span><br><span class=\"line\">fuser -vn tcp 80</span><br><span class=\"line\">fuser -v 80/tcp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 杀掉占用80端口的进程</span></span><br><span class=\"line\">fuser -kvn tcp 80</span><br><span class=\"line\">fuser -kvin tcp 80</span><br><span class=\"line\">fuser -kvi 80/tcp</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 本文介绍Linux进程管理等相关命令 本文基于CentOS8(x86_64) ps :查看进程 1234567891011121314151617181920212223242526272829303132333435363738394041424344# 与top命令类似，可以查看进程信息$ ps -aux -a:所有用户 -x:没有控制终端的 -u:显示用户名和启动时间# 根据关键字过滤$ ps -aux | grep nginx$ ps -ef -e:显示所有进程，包括用户和没有控制终端 -f:显示所有信息# 查看线程，相同PID表示的是同一个进程启动的线程$ ps -eLf -L:显示线程# 查看进程优先级 NI$ ps -el# 查看进程运行在第几个cpu逻辑核心上$ ps -eo psr,user,pid,ppid,pri,ni,pgid,command | grep nginx psr：cpu逻辑核号 pri :默认19，优先级 0~99，越大优先级越高，pri(new) = pri(old) + nice ni :默认0，影响优先级的因子 -20~19，越小优先级越高，改变nice值可以改变pri pgid :进程组id，等同于 pgrp# 绑定PID为10288的进程到第一块CPU，这样该进程就不会占用其它的CPU资源了$ taskset -cp 1 10288# 按pid排序$ ps -aux --sort pid# 按用户排序$ ps -aux --sort user# 说明： USER:进程的执行用户 PID:进程号 PPID:父进程号 TTY:进程启动的终端 STAT:进程的当前状态，S:休眠 D:不可中断的休眠 R:运行 Z:僵死 T:停止 I:空闲内核线程 NI:进程优先级 TIME:进程自启动以来占用CPU的总时间 CMD/COMMAND:执行的命令 %CPU:占用CPU时间和总时间的百分比 %MEM:占用内存与系统内存总量的百分比 pstree :树状查看进行信息 123456# 折叠展示，只展示父进程和子进程的数量$ pstree# 展开所有子进程，并显示完整命令$ pstree -a# 展开所有子进程，并显示PID$ pstree -p kill :终止进程 12345678910111213141516171819# 正常关闭进程kill 进程号# 强行关闭，遇到进程不能正常关闭时使用kill -9 进程号# 查看所有信号kill -l# 杀死进程名称所关联的全部进程killall 进程名称killall -9 进程名称# 杀死进程名称所关联的全部进程，同killallpkill 进程名称pkill -9 进程名称# 查找服务的进程号pgrep 进程名称 : 效果同 ps -aux | grep 进程名 | grep -v grep| awk &#x27;&#123;print $2&#125;&#x27;# 终止进程名称含有mysql的全部进程pgrep mysql | xargs kill -s 9 进程的挂起和恢复 12345678910111213ctrl+c :终止ctrl+z :挂起，暂停bg num :转到后台继续运行fg num :从后台恢复到前台继续运行jobs :查看被挂起或正在后台运行的进程，会显示编号numcommond &amp; :后台运行，只在当前终端下有效nohup commond &amp; :后台执行，退出终端依然继续执行 进程运行优先级 进程优先级是 PRI(top中的PR)，其表示程序被 CPU 执行的先后顺序，此值越小进程的优先级别越高 PRI 值不是 Nice 值，但是 Nice 值会影响优先级，PRI(new) = PRI(old) + nice，所以我们调整 Nice 值，就可以改变进程的优先级 linux下的进程调度优先级 Nice 是从 -20 到 19 ，一共 40 个级别，数字越大，表示进程的优先级越低。默认时候，进程的调度优先级是0。 1234567891011121314151617181920212223242526272829303132333435363738394041# 指定命令的运行优先级nice -n commond# 改变一个正在运行的进程的优先级renice n pid# 改变进程组内全部进程的优先级renice n -g pid# 说明 n :取值范围（-20,19），越小优先级越高# 示例# 默认启动nginx$ nginx# 查看优先级，可以看到此时默认优先级是0ps -eo pgid,user,pid,pri,ni,command | grep nginx | grep -v grep23348 root 23348 19 0 nginx: master process nginx23348 nginx 23349 19 0 nginx: worker process23348 nginx 23350 19 0 nginx: worker process# 终止nginx进程$ pkill nginx# 重新指定优先级启动，指定优先级为10$ nice -10 nginx# 查看优先级，可以看到此时默认优先级是10$ ps -eo pgid,user,pid,pri,ni,command | grep nginx | grep -v grep23388 root 23388 9 10 nginx: master process nginx23388 nginx 23389 9 10 nginx: worker process23388 nginx 23390 9 10 nginx: worker process# 改变运行中的nginx的优先级为-10，此时只会改变master的优先级$ renice -10 2338823388 (进程 ID) 旧优先级为 10，新优先级为 -10$ ps -eo pgid,user,pid,pri,ni,command | grep nginx | grep -v grep23388 root 23388 29 -10 nginx: master process nginx23388 nginx 23389 9 10 nginx: worker process23388 nginx 23390 9 10 nginx: worker process# 改变运行中的nginx的优先级为-10，此时只会改变master的优先级$ renice -10 -g 2338823388 (进程组 ID) 旧优先级为 -10，新优先级为 -10$ ps -eo pgid,user,pid,pri,ni,command | grep nginx | grep -v grep23388 root 23388 29 -10 nginx: master process nginx23388 nginx 23389 29 -10 nginx: worker process23388 nginx 23390 29 -10 nginx: worker process at :执行一次的计划任务 /var/spool/at：at任务存放在该目录下 123456789101112131415161718# 启动at服务systemctl start atd# 今天10:46执行 test.shat -f test.sh 10:46# 时间格式： 5:30pm :今天下午5点30分 17:30 :今天下午5点30分 17:30 today :今天下午5点30分 now +3 hours :3小时后 now +180 minutes :3小时后 17:30 23.2.28 :2023年2月28日下午5点30分# 查看当前at队列，显示编号numat -l ==== atq# 删除指定编号的任务at -d num ==== atrm num 用户限制： /etc/at.allow :如果文件存在，则只有此文件中列出的用户可以使用at命令 /etc/at.deny :如果文件存在，则此文件中列出的用户不可以使用at命令 如果以上两个文件都不存在，则只有root用户可以使用at命令 如果以上两个文件都存在，但是都为空，则所有用户都可以使用at命令 crontab :周期性计划任务 systemctl start crond :启动cron服务，默认启动 crontab -l :显示当前用户下的计划任务 crontab -e :编辑当前用户下的计划任务 /var/spool/cron :计划任务保存在该路径下 /etc/cron.allow 与 /etc/cron.deny :用户限制，规则同 at 格式：分钟[0~59] 小时[0~23] 日期[1~31] 月份[1~12] 星期[0~6] commands 1234567891011# 每5分钟执行一次*/5 * * * * command# 每天2点执行一次0 2 * * * command# 每天2、3、4、5点各执行一次0 2-5 * * * command# 周一至周五每天9点和18点各执行一次0 9,18 * * 1-5 command systemctl :服务管理 centOS7以后使用systemd进行服务管理，其命令接口为systemctl systemctl兼容了service，即systemctl也会去/etc/init.d目录下，查看、执行相关程序 如下centOS6及之前的服务启动方式，centOS7及之后仍然可以通过这种方式管理服务，实际上会重定向到systemctl命令 1234service redis startservice redis stopservice redis restartservice redis status systemd的服务配置放在目录/usr/lib/systemd/system (Centos) 或 /etc/systemd/system (Ubuntu) 配置目录下有多种类型文件.mount,.service,.target,.socket,.timer等等 不同的文件类型代表不同的资源，统称为 Unit（单位），Unit 一共分成12种类型 123456789101112Service unit：系统服务Target unit：多个 Unit 构成的一个组Device Unit：硬件设备Mount Unit：文件系统的挂载点Automount Unit：自动挂载点Path Unit：文件或路径Scope Unit：不是由 Systemd 启动的外部进程Slice Unit：进程组Snapshot Unit：Systemd 快照，可以切回某个快照Socket Unit：进程间通信的 socketSwap Unit：swap 文件Timer Unit：定时器 重点学习.service文件，其定义了一个服务，分为[Unit]，[Service]，[Install]三个小节 1234567891011[Unit]Description:描述，After：在哪些服务启动后才启动ConditionPathExists: 执行条件[Service]EnvironmentFile:变量所在文件ExecStart: 执行启动脚本Restart: fail时重启[Install]Alias:服务别名WangtedBy: 多用户模式下需要的 查看服务 1234567891011# 列出当前已经启动的 unit，如果添加 -all 选项会同时列出没有启动的 unitsystemctl ==== systemctl list-unitssystemctl -all# 只查看服务类型为service的服务systemctl list-units --type=service -all# 根据 /lib/systemd/system/ 目录内的文件列出所有的服务及其当前的状态systemctl list-unit-files# 如果发现某个 服务 不工作，可以查看是否有 服务 加载失败systemctl --failed service :系统服务 1234567891011121314151617181920212223242526# 启动redis服务systemctl start redis# 重新启动redis服务systemctl restart redis# 关闭redis服务systemctl stop redis# 不关闭redis的情况下重新加载配置文件，让新的设置生效systemctl reload redis# 加入开机自启动systemctl enable redis# 关闭开机自启动systemctl disable redis# 查看redis服务状态systemctl status redis# 目前有没有正在运行中systemctl is-active redis# 开机时有没有默认要启用systemctl is-enabled redis# 是否启动失败systemctl is-failed redis# 列出 redis服务 的配置systemctl show redis# 注销 redis服务 ，注销后就无法启动systemctl mask redis# 取消 redis服务 的注销systemctl unmask redis target :类似于运行级别，支持多个target同时启动。target其实是多个unit的组合，系统启动说白了就是启动多个unit 123456789101112131415161718192021# 只查看服务类型为target的服务systemctl list-units --type=target -all# 取得目前缺省的 targetsystemctl get-default :multi-user.target# 几个常用的 target。 graphical.target：多人模式，支持图形和命令行两种登录，对应之前的3,5级别。 multi-user.target：多人模式，只支持命令行登录，对应3级别！ rescue.target：单人模式，对应1级别，在无法使用 root 登陆的情况下，systemd 在开机时会多加一个额外的临时系统，与你原本的系统无关。这时你可以取得 root 的权限来维护你的系统。 emergency.target：单人模式，不过系统进入后根目录是只读的，紧急处理系统的错误，在无法使用 rescue.target 时，可以尝试使用这种模式！# 设置缺省的 targetsystemctl set-default multi-user.target# 切换到指定的 targetsystemctl isolate multi-user.target# 查看依赖关系，查看 multi-user.target 依赖哪些服务systemctl list-dependencies multi-user.target# 反向查看依赖关系， --reverse 选项查看 multi-user.target 被谁使用systemctl list-dependencies multi-user.target --reverse 小贴士 1.systemd 主配置文件 /etc/systemd/system.conf 2.开机会先加载 /etc/systemd/system/default.target 3.所有的 service 和 target 都在 /usr/lib/systemd/system/目录下 4./etc/systemd/system/defaut.target 是一个软连接，软连接到了/usr/lib/systemd/system/multi-user.target，它会加载/usr/lib/systemd/system/multi-user.target.wants下面的service 5.查看一个service属于哪个target，需要查看具体的service文件，如：cat /usr/lib/systemd/system/sshd.service，看里面[install]部分 chkconfig :设置系统服务在哪些运行级别下开机启动 centOS7之后不再使用这种方式，而是使用systemctl，但是仍然可以在/etc/init.d目录下创建管理脚本，然后通过chkconfig进行管理 123456chkconfig --list ：查看全部系统服务的运行级别chkconfig --list sshd ：查看sshd系统服务的运行级别chkconfig --level 2345 sshd on ：修改sshd服务的运行级别为2345都启动，on/offchkconfig sshd on ：默认就是开启2345运行级别chkconfig --add nginx :添加服务到管理列表中，需要在`/etc/init.d`目录下有对应的nginx文件chkconfig --del nginx :从管理列表中删除 ntsysv :通过界面设置服务是否开机启动 centOS7之后不再使用这种方式，而是使用systemctl，但是仍然可以使用其管理当前运行级别下的服务 运行命令后会弹出设置界面，服务前面有*号的表示开机启动，使用空格修改，Tab键进行跳转 123456# 修改当前的运行级别下的服务ntsysv# 修改3运行级别下的服务ntsysv --level 3# 同时修改3和5运行级别下的服务ntsysv --level 35 Linux运行级别 0：系统关机模式，系统默认运行级别不能设置为0，否则无法正常启动系统 1：单用户模式，也称为救援模式，root权限，用于系统维护，禁止远程登陆，类似Windows下的安全模式登录。 2：无网络支持的多用户模式 3：有网络支持的多用户模式(文本模式，工作中最常使用的模式) 4：保留，未使用 5：有网络支持的图形化模式，支持多用户模式，登陆后进入图形GUI模式或GNOME、KDE图形化界面，如X Window系统。 6：重启模式，重新引导系统，即重启 运行级别切换 123456789# 查看当前的运行级别，输出结果为: 上一次运行级别 当前运行级别runlevel# 切换运行级别init 0 ==== systemctl isolate poweroff.target ==== systemctl poweroffinit 1 ==== systemctl isolate rescue.targetinit 3 ==== systemctl isolate multi-user.targetinit 5 ==== systemctl isolate graphical.targetinit 6 ==== systemctl isolate reboot.target ==== systemctl reboot fuser :可以显示出当前哪个程序在使用磁盘上的某个文件、挂载点、甚至网络端口，并给出程序进程的详细信息 fuser通常被用在诊断系统的resource busy问题，通常是在你希望umount指定的挂载点得时候遇到 1234567891011121314151617181920212223# 查看哪个进程在访问/mnt目录fuser /mnt :只显示PID和权限fuser -u /mnt :-u，在每个PID后面添加进程拥有者的用户名称fuser -v /mnt :-v，显示详细信息，包含PID,USER,COMMAND等许多域# 把访问mnt目录的进程杀掉fuser -kv /mnt :-k，杀掉进程fuser -kvi /mnt :-i，会询问你是否杀掉对应的进程# 查看80端口被哪个进程占用fuser -n tcp 80 :-n，指定协议和端口fuser 80/tcp :不加-n，需要这样指定协议和端口fuser -un tcp 80fuser -u 80/tcpfuser -vn tcp 80fuser -v 80/tcp# 杀掉占用80端口的进程fuser -kvn tcp 80fuser -kvin tcp 80fuser -kvi 80/tcp","summary":"摘要 本文介绍Linux进程管理等相关命令 本文基于CentOS8(x86_64)","date_published":"2023-03-27T14:45:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/27/linux-command10-stat/","url":"https://blog.hanqunfeng.com/2023/03/27/linux-command10-stat/","title":"Linux常用命令--系统硬件信息及其监控","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍Linux查看系统硬件信息及其监控等相关命令</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"uname-查看系统版本信息\">uname :查看系统版本信息</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">uname</span> -a</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看网卡和路由信息\">查看网卡和路由信息</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 网卡</span></span><br><span class=\"line\">$ ifconfig</span><br><span class=\"line\"><span class=\"comment\"># 路由</span></span><br><span class=\"line\">$ route</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看cpu信息\">查看cpu信息</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> /proc/cpuinfo</span><br><span class=\"line\"></span><br><span class=\"line\">processor\t: 0</span><br><span class=\"line\">vendor_id\t: GenuineIntel</span><br><span class=\"line\">cpu family\t: 6</span><br><span class=\"line\">model\t\t: 85</span><br><span class=\"line\">model name\t: Intel(R) Xeon(R) Platinum 8269CY CPU @ 2.50GHz</span><br><span class=\"line\">stepping\t: 7</span><br><span class=\"line\">microcode\t: 0x1</span><br><span class=\"line\">cpu MHz\t\t: 2499.998</span><br><span class=\"line\">cache size\t: 36608 KB</span><br><span class=\"line\">physical <span class=\"built_in\">id</span>\t: 0</span><br><span class=\"line\">siblings\t: 2</span><br><span class=\"line\">core <span class=\"built_in\">id</span>\t\t: 0</span><br><span class=\"line\">cpu cores\t: 1</span><br><span class=\"line\">apicid\t\t: 0</span><br><span class=\"line\">initial apicid\t: 0</span><br><span class=\"line\">fpu\t\t: <span class=\"built_in\">yes</span></span><br><span class=\"line\">fpu_exception\t: <span class=\"built_in\">yes</span></span><br><span class=\"line\">cpuid level\t: 22</span><br><span class=\"line\">wp\t\t: <span class=\"built_in\">yes</span></span><br><span class=\"line\">flags\t\t: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves arat avx512_vnni</span><br><span class=\"line\">bugs\t\t: cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihit</span><br><span class=\"line\">bogomips\t: 4999.99</span><br><span class=\"line\">clflush size\t: 64</span><br><span class=\"line\">cache_alignment\t: 64</span><br><span class=\"line\">address sizes\t: 46 bits physical, 48 bits virtual</span><br><span class=\"line\">power management:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解释如下：</span></span><br><span class=\"line\">processor：系统中逻辑处理核心的数量。对于单核处理器，该类将其视为 CPU 编号，对于多核处理器，它可以是物理内核，也可以是使用超线程技术的虚拟逻辑内核。（processor内核内部使用的对象，不一定绑定到物理设备，它们可能都具有相同的 physical <span class=\"built_in\">id</span>）</span><br><span class=\"line\">vendor_id：CPU制造商。</span><br><span class=\"line\">cpu family：CPU 产品系列代号。</span><br><span class=\"line\">mode：cpu属于其系列中的哪一代。</span><br><span class=\"line\">model name：CPU的名称及其编号，标称频率。</span><br><span class=\"line\">stepping：CPU属于生产更新版本。</span><br><span class=\"line\">cpu MHz：实际CPU频率。</span><br><span class=\"line\">cache size：CPU二级缓存的大小。</span><br><span class=\"line\">physical <span class=\"built_in\">id</span>：单个物理CPU标号。</span><br><span class=\"line\">siblings：单个物理 CPU 的逻辑 CPU 数量。siblings = cpu 核心 * [2]。</span><br><span class=\"line\">core <span class=\"built_in\">id</span>：当前所在CPU中的物理内核<span class=\"built_in\">id</span>。</span><br><span class=\"line\">cpu cores：逻辑核所在CPU的物理核数。比如这里有2个cpu core，对应的core <span class=\"built_in\">id</span>是0、1。</span><br><span class=\"line\">apicid：用于区分不同逻辑核心的编号。系统中每个逻辑核的编号必须不同，编号不一定是连续的。</span><br><span class=\"line\">fpu：是否有浮点单元。（Floating Point Unit）</span><br><span class=\"line\">fpu_exception：是否支持浮点计算异常。</span><br><span class=\"line\">cpuid level：在执行cpuid指令之前，eax寄存器中的值会根据不同的值返回不同的内容。</span><br><span class=\"line\">wp：表示当前CPU是否支持内核态用户空间写保护。（Write Protection）</span><br><span class=\"line\">flags：当前CPU支持的功能，例如浮点单元 (FPU) 的存在和处理 MMX 指令的能力。。</span><br><span class=\"line\">bogomips：粗略测量的 CPU 速度（每秒百万条指令）。</span><br><span class=\"line\">clflush size：每个flush缓存的大小单位。</span><br><span class=\"line\">cache_alignment：缓存地址对齐单元。</span><br><span class=\"line\">address sizes：可访问地址空间的数量。</span><br><span class=\"line\">power management：支持电源管理。</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n<code>/proc</code>：目录中存放进程PID命名的目录以及系统相关信息文件，如：<br>\n<code>cpuinfo</code> :cup信息<br>\n<code>meminfo</code> :内存信息<br>\n<code>partitions</code> :硬盘分区</p>\n</div>\n<h2 id=\"uptime-查看系统运行时间和cpu负载\">uptime :查看系统运行时间和cpu负载</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">uptime</span></span><br><span class=\"line\"> 14:12:52 up 2 days, 20:41,  1 user,  load average: 0.06, 0.03, 0.01</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\"> 14:12:52    当前时间</span><br><span class=\"line\"> up 2 days, 20:41    系统运行了多久</span><br><span class=\"line\"> 1 user    当前登录用户数</span><br><span class=\"line\"> load average: 0.06, 0.03, 0.01   系统负载，即任务队列的平均长度。三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值。</span><br></pre></td></tr></table></figure>\n<h2 id=\"w-查看系统运行时间和cpu负载以及当前用户登录信息\">w :查看系统运行时间和cpu负载以及当前用户登录信息</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ w</span><br><span class=\"line\"> 17:35:25 up 3 days, 3 min,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class=\"line\">root     pts/0    1.120.160.30     13:58    0.00s  0.12s  0.12s -bash</span><br></pre></td></tr></table></figure>\n<h2 id=\"free-查看内存信息\">free :查看内存信息</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示内存使用情况，默认单位k</span></span><br><span class=\"line\">$ free</span><br><span class=\"line\">              total        used        free      shared  buff/cache   available</span><br><span class=\"line\">Mem:         912836      100016       72608         460      740212      667376</span><br><span class=\"line\">Swap:             0           0           0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\">    total :物理内存总量</span><br><span class=\"line\">    used  :已经使用的物理内存总量</span><br><span class=\"line\">    free  :空闲内存总量</span><br><span class=\"line\">    shared :是多个进程共享的内存总数；</span><br><span class=\"line\">    buff/cache :用作内核缓存的内存量</span><br><span class=\"line\"></span><br><span class=\"line\">选项\t含义</span><br><span class=\"line\">-b\t以 Byte（字节）为单位，显示内存使用情况。</span><br><span class=\"line\">-k\t以 KB 为单位，显示内存使用情况，此选项是 free 命令的默认选项。</span><br><span class=\"line\">-m\t以 MB 为单位，显示内存使用情况。</span><br><span class=\"line\">-g\t以 GB 为单位，显示内存使用情况。</span><br><span class=\"line\">-t\t在输出的最终结果中，输出内存和 swap 分区的总量。</span><br><span class=\"line\">-o\t不显示系统缓冲区这一列。</span><br><span class=\"line\">-s  间隔秒数\t根据指定的间隔时间，持续显示内存使用情况。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"df-查看硬盘信息\">df :查看硬盘信息</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">df</span> -hT</span><br><span class=\"line\">文件系统          类型      容量  已用  可用   已用% 挂载点</span><br><span class=\"line\">devtmpfs       devtmpfs  436M     0  436M    0% /dev</span><br><span class=\"line\">tmpfs          tmpfs     446M     0  446M    0% /dev/shm</span><br><span class=\"line\">tmpfs          tmpfs     446M  456K  446M    1% /run</span><br><span class=\"line\">tmpfs          tmpfs     446M     0  446M    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/vda1      ext4       20G   14G  5.3G   72% /</span><br><span class=\"line\">tmpfs          tmpfs      90M     0   90M    0% /run/user/0</span><br></pre></td></tr></table></figure>\n<h2 id=\"top-动态显示进程状态\">top :动态显示进程状态</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 动态显示进程状态，默认每3秒刷新一次</span></span><br><span class=\"line\">$ top</span><br><span class=\"line\">top - 14:08:03 up 2 days, 20:36,  1 user,  load average: 0.06, 0.03, 0.01</span><br><span class=\"line\">Tasks:  87 total,   1 running,  47 sleeping,   0 stopped,   0 zombie</span><br><span class=\"line\">%Cpu(s):  0.1 us,  0.0 sy,  0.0 ni, 99.9 <span class=\"built_in\">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class=\"line\">KiB Mem :   912836 total,    65564 free,    99648 used,   747624 buff/cache</span><br><span class=\"line\">KiB Swap:        0 total,        0 free,        0 used.   667600 avail Mem</span><br><span class=\"line\"></span><br><span class=\"line\">  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class=\"line\">  558 root      20   0   17832   1772   1288 S   0.1  0.2   0:45.25 assist_daemon</span><br><span class=\"line\">  585 root      20   0  813912  10888   5104 S   0.1  1.2   3:51.47 aliyun-service</span><br><span class=\"line\">  587 root      20   0  733348   9636   4604 S   0.1  1.1   0:11.96 rsyslogd</span><br><span class=\"line\">    1 root      20   0   51640   4432   3156 S   0.0  0.5   0:33.44 systemd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\">    第一行为任务队列信息，同 <span class=\"built_in\">uptime</span></span><br><span class=\"line\">    第二行为进程信息:</span><br><span class=\"line\">        total :进程总数</span><br><span class=\"line\">        running :正在运行的进程数</span><br><span class=\"line\">        sleeping :睡眠的进程数</span><br><span class=\"line\">        stopped :停止的进程数</span><br><span class=\"line\">        zombie :僵尸进程数</span><br><span class=\"line\">    第三行为CPU信息:</span><br><span class=\"line\">        0.1 us :用户空间占用CPU百分比</span><br><span class=\"line\">        0.0 sy :内核空间占用CPU百分比</span><br><span class=\"line\">        0.0 ni :用户进程空间内改变过优先级的进程占用CPU百分比</span><br><span class=\"line\">        99.9 <span class=\"built_in\">id</span> :空闲CPU百分比</span><br><span class=\"line\">        0.0 wa :等待输入输出的CPU时间百分比，通过查看 CPU 的 wa% 值来判断当前磁盘 IO 性能，如果这个数值过大，很可能是磁盘 IO 太高了，当然也可能是其他原因，例如网络 IO 过高等。</span><br><span class=\"line\">        0.0 hi :硬件CPU中断占用百分比</span><br><span class=\"line\">        0.0 si :软中断占用百分比</span><br><span class=\"line\">        0.0 st :虚拟机占用百分比</span><br><span class=\"line\">    第四行和第五行为内存信息:</span><br><span class=\"line\">        Mem:</span><br><span class=\"line\">        912836 total    物理内存总量</span><br><span class=\"line\">        65564 free    空闲内存总量</span><br><span class=\"line\">        99648 used    使用的物理内存总量</span><br><span class=\"line\">        747624 buff/cache    用作内核缓存的内存量</span><br><span class=\"line\">        Swap:</span><br><span class=\"line\">        0 total    交换区总量</span><br><span class=\"line\">        0 free    空闲交换区总量</span><br><span class=\"line\">        0 used    使用的交换区总量</span><br><span class=\"line\">        667600 avail Mem    缓冲的交换区总量,内存中的内容被换出到交换区，而后又被换入到内存，但使用过的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小,相应的内存再次被换出时可不必再对交换区写入。</span><br><span class=\"line\"></span><br><span class=\"line\">    之后是进程信息区：默认情况下仅显示比较重要的 PID、USER、PR、NI、VIRT、RES、SHR、S、%CPU、%MEM、TIME+、COMMAND 列。</span><br><span class=\"line\">    运行top后按f会查看到全部的展示项，这里只对部分展示项进行说明</span><br><span class=\"line\">        序号  列名    含义</span><br><span class=\"line\">        a    PID     进程<span class=\"built_in\">id</span></span><br><span class=\"line\">        b    PPID    父进程<span class=\"built_in\">id</span></span><br><span class=\"line\">        c    RUSER   Real user name</span><br><span class=\"line\">        d    UID     进程所有者的用户<span class=\"built_in\">id</span></span><br><span class=\"line\">        e    USER    进程所有者的用户名</span><br><span class=\"line\">        f    GROUP   进程所有者的组名</span><br><span class=\"line\">        g    TTY     启动进程的终端名。不是从终端启动的进程则显示为 ?</span><br><span class=\"line\">        h    PR      优先级。默认20。这个优先级对应实时进程，只使用1-99号优先级队列，序号越大优先级越高，0号留给普通进程使用</span><br><span class=\"line\">        i    NI      <span class=\"built_in\">nice</span>值。默认0。负值表示高优先级，正值表示低优先级</span><br><span class=\"line\">        j    P       最后使用的CPU，仅在多CPU环境下有意义</span><br><span class=\"line\">        k    %CPU    上次更新到现在的CPU时间占用百分比</span><br><span class=\"line\">        l    TIME    进程使用的CPU时间总计，单位精确到秒， 3:51 表示 3分51秒</span><br><span class=\"line\">        m    TIME+   进程使用的CPU时间总计，单位精确到1/100秒，3:51.47 表示 3分51秒多</span><br><span class=\"line\">        n    %MEM    进程使用的物理内存百分比</span><br><span class=\"line\">        o    VIRT    进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</span><br><span class=\"line\">        p    SWAP    进程使用的虚拟内存中，被换出的大小，单位kb。</span><br><span class=\"line\">        q    RES     进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</span><br><span class=\"line\">        r    CODE    可执行代码占用的物理内存大小，单位kb</span><br><span class=\"line\">        s    DATA    可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb</span><br><span class=\"line\">        t    SHR     共享内存大小，单位kb</span><br><span class=\"line\">        u    nFLT    页面错误次数</span><br><span class=\"line\">        v    nDRT    最后一次写入到现在，被修改过的页面数。</span><br><span class=\"line\">        w    S       进程状态(D=不可中断的睡眠状态,I=空闲内核线程,R=运行,S=睡眠,T=因作业控制信号而停止,Z=僵尸进程)</span><br><span class=\"line\">        x    COMMAND 命令名/命令行</span><br><span class=\"line\">        y    WCHAN   若该进程在睡眠，则显示睡眠中的系统函数名</span><br><span class=\"line\">        z    Flags   任务标志，参考 sched.h</span><br><span class=\"line\">        0    PGRP    进程组<span class=\"built_in\">id</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 交互命令：运行top后，可以键入如下指令与top进行交互</span></span><br><span class=\"line\">    h :获得帮助</span><br><span class=\"line\">    q :退出程序。</span><br><span class=\"line\">    d :指定刷新时间</span><br><span class=\"line\">    m :切换内存信息显示效果</span><br><span class=\"line\">    t :切换显示进程和CPU状态信息。</span><br><span class=\"line\">    c :切换显示命令名称和完整命令行。</span><br><span class=\"line\">    u :查看指定用户的进程</span><br><span class=\"line\">    k :终止执行中的进程 pid，系统将提示用户输入需要终止的进程PID，以及需要发送给该进程什么样的信号。一般的终止进程可以使用15信号；如果不能正常结束那就使用信号9强制结束该进程。默认值是信号15。在安全模式中此命令被屏蔽。</span><br><span class=\"line\">    r :重新设置进程优先级 n pid，系统提示用户输入需要改变的进程PID以及需要设置的进程优先级值。输入一个正值将使优先级降低，反之则可以使该进程拥有更高的优先权。默认值是10。</span><br><span class=\"line\">    翻页:</span><br><span class=\"line\">    Shift + &lt;  :上翻</span><br><span class=\"line\">    Shift + &gt;  :下翻</span><br><span class=\"line\">    Ctrl+L 擦除并且重写屏幕。</span><br><span class=\"line\">    i :忽略闲置和僵死进程。这是一个开关式命令。</span><br><span class=\"line\">    l :切换显示平均负载和启动时间信息。</span><br><span class=\"line\">    M :根据驻留内存大小进行排序。</span><br><span class=\"line\">    P :根据CPU使用百分比大小进行排序。</span><br><span class=\"line\">    T :根据时间/累计时间进行排序。</span><br><span class=\"line\">    W :将当前设置写入~/.toprc文件中。这是写top配置文件的推荐方法。</span><br><span class=\"line\">    f :从当前显示中添加或者删除项目。按d添加或删除，esc返回。此时也可以调整每一列的显示顺序，按右键会将当前项全选，然后上下调整位置后按回车即可。默认情况下仅显示比较重要的 PID、USER、PR、NI、VIRT、RES、SHR、S、%CPU、%MEM、TIME+、COMMAND 列</span><br><span class=\"line\">    o :过滤指定的内容，如过滤用户则输入：USER=username，匹配时采用模糊匹配，多次输入o会在当前过滤基础上增加新的过滤条件，q退出</span><br><span class=\"line\">    S :切换到累计模式。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># top使用格式</span></span><br><span class=\"line\">top [-] [d] [p] [q] [c] [C] [S] [s]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数说明</span></span><br><span class=\"line\">    d 指定每两次屏幕信息刷新之间的时间间隔。当然用户可以使用s交互命令来改变之。</span><br><span class=\"line\">    p 通过指定监控进程ID来仅仅监控某个进程的状态。</span><br><span class=\"line\">    S 指定累计模式</span><br><span class=\"line\">    s 使top命令在安全模式中运行。这将去除交互命令所带来的潜在危险。</span><br><span class=\"line\">    i 使top不显示任何闲置或者僵死进程。</span><br><span class=\"line\">    c 显示整个命令行而不只是显示命令名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\">top   //每隔5秒显式所有进程的资源占用情况</span><br><span class=\"line\">top -d 2  //每隔2秒显式所有进程的资源占用情况</span><br><span class=\"line\">top -c  //每隔5秒显式进程的资源占用情况，并显示进程的命令行参数(默认只有进程名)</span><br><span class=\"line\">top -p 12345 -p 6789//每隔5秒显示pid是12345和pid是6789的两个进程的资源占用情况</span><br><span class=\"line\">top -d 2 -c -p 123456 //每隔2秒显示pid是12345的进程的资源使用情况，并显式该进程启动的命令行参数</span><br><span class=\"line\">top -p进程1的ID  -p进程2的<span class=\"built_in\">id</span> -p进程3的<span class=\"built_in\">id</span> …… //查看某几个进程的状态</span><br></pre></td></tr></table></figure>\n<h2 id=\"sar-查看-CPU-、内存、磁盘、网络等性能指标\">sar :查看 CPU 、内存、磁盘、网络等性能指标</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>sar 命令是分析系统瓶颈的神器，可以用来查看 CPU 、内存、磁盘、网络等性能。</p>\n</li>\n<li class=\"lvl-2\">\n<p>查看磁盘性能</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前磁盘性能，-d参数代表查看磁盘性能，-p参数代表将 dev 设备按照 sda，sdb……名称显示，1是间隔1秒，2是采集2次</span></span><br><span class=\"line\">$ sar -d -p 1 2</span><br><span class=\"line\"></span><br><span class=\"line\">07时35分57秒       DEV       tps  rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util</span><br><span class=\"line\">07时35分58秒      xvda      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class=\"line\"></span><br><span class=\"line\">07时35分58秒       DEV       tps  rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util</span><br><span class=\"line\">07时35分59秒      xvda     12.00      0.00    155.00     12.92      0.01      0.67      1.67      2.00</span><br><span class=\"line\"></span><br><span class=\"line\">平均时间:       DEV       tps  rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util</span><br><span class=\"line\">平均时间:      xvda      6.00      0.00     77.50     12.92      0.00      0.67      1.67      1.00</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\">    tps :每秒从物理磁盘I/O的次数.多个逻辑请求会被合并为一个I/O磁盘请求， 一次传输的大小是不确定的.</span><br><span class=\"line\">    rd_sec/s :每秒读扇区的次数.</span><br><span class=\"line\">    wr_sec/s :每秒写扇区的次数.</span><br><span class=\"line\">    avgrq-sz :平均每次设备I/O操作的数据大小（扇区）.</span><br><span class=\"line\">    avgqu-sz :磁盘请求队列的平均长度.</span><br><span class=\"line\">    await :从请求磁盘操作到 系统完成处理，每次请求的平均消耗时间 包括请求队列等待时间，单位是毫秒（1秒=1000毫秒）.</span><br><span class=\"line\">    svctm :系统处理每次请求的平均时间 不包括在请求队列中消耗的时间.</span><br><span class=\"line\">    %util :I/O请求占CPU的百分比，比率越大，说明越饱和.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    avgqu-sz 的值较低时，设备的利用率较高</span><br><span class=\"line\">    %util I/O请求占用的CPU百分比，值越高，说明I/O越慢。</span><br><span class=\"line\"></span><br><span class=\"line\">    对于磁盘 IO 性能，一般有如下评判标准：</span><br><span class=\"line\">    正常情况下 svctm 应该是小于 await 值的，而 svctm 的大小和磁盘性能有关，CPU 、内存的负荷也会对 svctm 值造成影响，过多的请求也会间接的导致 svctm 值的增加。</span><br><span class=\"line\">    await 值的大小一般取决与 svctm 的值和 I/O 队列长度以 及I/O 请求模式，如果 svctm 的值与 await 很接近，表示几乎没有 I/O 等待，磁盘性能很好，如果 await 的值远高于 svctm 的值，则表示 I/O 队列等待太长，系统上运行的应用程序将变慢，此时可以通过更换更快的硬盘来解决问题。</span><br><span class=\"line\">    %util 项的值也是衡量磁盘 I/O 的一个重要指标，如果 %util 接近 100% ，表示磁盘产生的 I/O 请求太多，I/O 系统已经满负荷的在工作，该磁盘可能存在瓶颈。长期下去，势必影响系统的性能，可以通过优化程序或者通过更换更高、更快的磁盘来解决此问题。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果想继续查看以前的报告；可以查看保存在/var/log/sa/下的sar日志，保留最近30天的日志: 日志名称以sa开头，日期号结尾，如11号的日志为sa11</span></span><br><span class=\"line\">$ sar -d -p -f  /var/log/sa/sa11  | more</span><br><span class=\"line\"></span><br><span class=\"line\">00时00分01秒       DEV       tps  rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util</span><br><span class=\"line\">00时10分01秒      xvda     10.67      0.13    190.20     17.84      0.12     11.08      3.33      3.55</span><br><span class=\"line\">00时20分01秒      xvda     11.40      0.08    234.10     20.54      0.07      6.07      3.26      3.72</span><br><span class=\"line\">00时30分01秒      xvda     11.05      0.19    200.59     18.17      0.03      2.82      2.51      2.77</span><br><span class=\"line\">00时40分01秒      xvda     10.78      0.00    225.89     20.96      0.14     12.59      4.64      5.00</span><br><span class=\"line\">00时50分01秒      xvda     10.53      0.00    183.95     17.47      0.04      4.16      3.04      3.20</span><br><span class=\"line\">01时00分01秒      xvda     10.58      0.00    187.13     17.68      0.12     11.18      4.52      4.78</span><br><span class=\"line\">01时10分01秒      xvda     10.74      0.00    187.12     17.42      0.09      8.20      4.76      5.11</span><br><span class=\"line\">01时20分01秒      xvda     11.52      0.05    212.70     18.47      0.06      4.83      2.52      2.90</span><br><span class=\"line\">01时30分01秒      xvda     10.69      0.05    191.77     17.94      0.04      3.43      2.65      2.83</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看cpu使用率指标</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前的cpu指标，-u指cpu使用率，默认就是-u，1是间隔1秒，3是采集3次</span></span><br><span class=\"line\">$ sar -u 1 3</span><br><span class=\"line\"></span><br><span class=\"line\">15时48分53秒     CPU     %user     %<span class=\"built_in\">nice</span>   %system   %iowait    %steal     %idle</span><br><span class=\"line\">15时48分54秒     all      0.50      0.00      0.50      0.00      0.00     99.00</span><br><span class=\"line\">15时48分55秒     all      0.00      0.00      0.00      0.00      0.00    100.00</span><br><span class=\"line\">15时48分56秒     all      0.00      0.00      0.00      0.00      0.00    100.00</span><br><span class=\"line\">平均时间:     all      0.17      0.00      0.17      0.00      0.00     99.67</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看全天的cpu指标</span></span><br><span class=\"line\">$ sar -u -p</span><br><span class=\"line\"></span><br><span class=\"line\">00时00分01秒     CPU     %user     %<span class=\"built_in\">nice</span>   %system   %iowait    %steal     %idle</span><br><span class=\"line\">00时10分01秒     all      0.08      0.00      0.08      0.00      0.00     99.84</span><br><span class=\"line\">00时20分01秒     all      0.08      0.00      0.07      0.00      0.00     99.85</span><br><span class=\"line\">00时30分01秒     all      0.07      0.00      0.08      0.00      0.00     99.84</span><br><span class=\"line\">00时40分01秒     all      0.15      0.00      0.08      0.00      0.00     99.78</span><br><span class=\"line\">00时50分01秒     all      0.07      0.00      0.07      0.00      0.00     99.85</span><br><span class=\"line\">01时00分01秒     all      0.07      0.00      0.08      0.00      0.00     99.85</span><br><span class=\"line\">01时10分01秒     all      0.67      0.00      0.12      0.01      0.00     99.20</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\">    CPU :all表示统计所有CPU的平均值</span><br><span class=\"line\">    %user :显示在用户级别（application）运行使用 CPU 总时间的百分比</span><br><span class=\"line\">    %<span class=\"built_in\">nice</span> :改变过优先级的进程的CPU使用率</span><br><span class=\"line\">    %system :内核空间的CPU使用率， 在核心级别（kernel）运行所使用CPU总时间的百分比</span><br><span class=\"line\">    %iowait :显示用于等待I/O操作占用CPU总时间的百分比</span><br><span class=\"line\">    %steal :管理程序（hypervisor）为另一个虚拟进程提供服务而等待虚拟CPU的百分比</span><br><span class=\"line\">    %idle :显示 CPU空闲时间占用CPU总时间的百分比</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主要监控如下两项：</span></span><br><span class=\"line\">    %iowait 过高表示存在I/O瓶颈，即磁盘IO无法满足业务需求</span><br><span class=\"line\">    %idle 过低表示CPU使用比较严重，需要结合内存使用等情况判断CPU是否瓶颈。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看以前的报告,保存在/var/log/sa/下的sar日志，保留最近30天的日志: 日志名称以sa开头，日期号结尾，如11号的日志为sa11</span></span><br><span class=\"line\">sar -u -f  /var/log/sa/sa11  | more</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看cpu负载指标</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前的cpu的负载指标，-q指cpu负载，1是间隔1秒，3是采集3次</span></span><br><span class=\"line\">$ sar -q 1 3</span><br><span class=\"line\"></span><br><span class=\"line\">16时00分32秒   runq-sz  plist-sz   ldavg-1   ldavg-5  ldavg-15   blocked</span><br><span class=\"line\">16时00分33秒         0       127      0.00      0.00      0.00         0</span><br><span class=\"line\">16时00分34秒         0       127      0.00      0.00      0.00         0</span><br><span class=\"line\">16时00分35秒         0       127      0.00      0.00      0.00         0</span><br><span class=\"line\">平均时间:         0       127      0.00      0.00      0.00         0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\">    runq-sz :运行队列的长度（等待运行的进程数）</span><br><span class=\"line\">    plist_sz :进程列表中进程（processes）和线程（threads）的数量</span><br><span class=\"line\">    Idavg-1 :最后1分钟的CPU平均负载，即将多核CPU过去一分钟的负载相加再除以核心数得出的平均值</span><br><span class=\"line\">    ldavg_5 :最后5分钟的CPU平均负载</span><br><span class=\"line\">    ldavg-15 :最后15分钟的CPU平均负载</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看以前的报告,保存在/var/log/sa/下的sar日志，保留最近30天的日志: 日志名称以sa开头，日期号结尾，如11号的日志为sa11</span></span><br><span class=\"line\">sar -q -f  /var/log/sa/sa11  | more</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>内存监控</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sar -r 1 3</span><br><span class=\"line\"></span><br><span class=\"line\">16时05分03秒 kbmemfree kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty</span><br><span class=\"line\">16时05分04秒     75000    837836     91.78     48728    649444    471312     51.63    180868    577236        36</span><br><span class=\"line\">16时05分05秒     75000    837836     91.78     48728    649444    471312     51.63    180868    577240        36</span><br><span class=\"line\">16时05分06秒     75000    837836     91.78     48728    649444    471312     51.63    180868    577240        36</span><br><span class=\"line\">平均时间:     75000    837836     91.78     48728    649444    471312     51.63    180868    577239        36</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\">kbmemfree :这个值和free命令中的free值基本一致， 所以它不包括buffer和cache的空间。</span><br><span class=\"line\">kbmemused :这个值和free命令中的used值基本一致， 所以它包括buffer和cache的空间。</span><br><span class=\"line\">%memused :这个值是kbmemused和内存总量（不包括swap）的一个百分比。</span><br><span class=\"line\">kbbuffers和kbcached :这两个值就是free命令中的buffer和cache.</span><br><span class=\"line\">kbcommit :保证当前系统所需要的内存，即为了确保不溢出而需要的内存(RAM+swap)。</span><br><span class=\"line\">%commit :这个值是kbcommit与内存总量（包括swap）的一个百分比。（可以看做内存使用量的百分比）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看以前的报告,保存在/var/log/sa/下的sar日志，保留最近30天的日志: 日志名称以sa开头，日期号结尾，如11号的日志为sa11</span></span><br><span class=\"line\">sar -r -f  /var/log/sa/sa11  | more</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>网络监控</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -n选项可以汇报网络相关信息，可用的值有很多，我们查询最多的就是 DEV（网卡信息）</span></span><br><span class=\"line\">$ sar -n DEV 1 2</span><br><span class=\"line\"></span><br><span class=\"line\">16时23分03秒     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s</span><br><span class=\"line\">16时23分04秒        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class=\"line\">16时23分04秒      eth0      2.00      0.00      0.13      0.00      0.00      0.00      0.00</span><br><span class=\"line\"></span><br><span class=\"line\">16时23分04秒     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s</span><br><span class=\"line\">16时23分05秒        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class=\"line\">16时23分05秒      eth0      3.00      3.00      0.19      0.32      0.00      0.00      0.00</span><br><span class=\"line\"></span><br><span class=\"line\">平均时间:     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s</span><br><span class=\"line\">平均时间:        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class=\"line\">平均时间:      eth0      2.50      1.50      0.16      0.16      0.00      0.00      0.00</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\">    IFACE：就是网络设备的名称；</span><br><span class=\"line\">    rxpck/s：每秒钟接收到的包数目</span><br><span class=\"line\">    txpck/s：每秒钟发送出去的包数目</span><br><span class=\"line\">    rxbyt/s：每秒钟接收到的字节数</span><br><span class=\"line\">    txbyt/s：每秒钟发送出去的字节数</span><br><span class=\"line\">    rxcmp/s：每秒钟接收到的压缩包数目</span><br><span class=\"line\">    txcmp/s：每秒钟发送出去的压缩包数目</span><br><span class=\"line\">    txmcst/s：每秒钟接收到的多播包的包数目</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -n 的值：</span></span><br><span class=\"line\">    1.DEV :网卡，主要查看这一项</span><br><span class=\"line\">    2.EDEV :网卡 (错误)</span><br><span class=\"line\">    3.NFS :NFS 客户端</span><br><span class=\"line\">    4.NFSD :NFS 服务器</span><br><span class=\"line\">    5.SOCK :Sockets (套接字) (v4)</span><br><span class=\"line\">    6.IP :IP 流 (v4)</span><br><span class=\"line\">    7.EIP :IP 流 (v4) (错误)</span><br><span class=\"line\">    8.ICMP :ICMP 流 (v4)</span><br><span class=\"line\">    9.EICMP :ICMP 流 (v4) (错误)</span><br><span class=\"line\">    10.TCP :TCP 流 (v4)</span><br><span class=\"line\">    11.ETCP :TCP 流 (v4) (错误)</span><br><span class=\"line\">    12.UDP :UDP 流 (v4)</span><br><span class=\"line\">    13.SOCK6 :Sockets (套接字) (v6)</span><br><span class=\"line\">    14.IP6 :IP 流 (v6)</span><br><span class=\"line\">    15.EIP6 :IP 流 (v6) (错误)</span><br><span class=\"line\">    16.ICMP6 :ICMP 流 (v6)</span><br><span class=\"line\">    17.EICMP6 :ICMP 流 (v6) (错误)</span><br><span class=\"line\">    18.UDP6 :UDP 流 (v6)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>通过 <code>-o</code> 将监控信息输出到文件，然后通过 <code>-f</code> 查看</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sar -u 1 3 -o sar.txt</span><br><span class=\"line\">$ sar -f sar.txt</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 本文介绍Linux查看系统硬件信息及其监控等相关命令 本文基于CentOS8(x86_64) uname :查看系统版本信息 1$ uname -a 查看网卡和路由信息 1234# 网卡$ ifconfig# 路由$ route 查看cpu信息 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253$ cat /proc/cpuinfoprocessor : 0vendor_id : GenuineIntelcpu family : 6model : 85model name : Intel(R) Xeon(R) Platinum 8269CY CPU @ 2.50GHzstepping : 7microcode : 0x1cpu MHz : 2499.998cache size : 36608 KBphysical id : 0siblings : 2core id : 0cpu cores : 1apicid : 0initial apicid : 0fpu : yesfpu_exception : yescpuid level : 22wp : yesflags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single pti fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx avx512f avx512dq rdseed adx smap clflushopt clwb avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves arat avx512_vnnibugs : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs taa itlb_multihitbogomips : 4999.99clflush size : 64cache_alignment : 64address sizes : 46 bits physical, 48 bits virtualpower management:# 解释如下：processor：系统中逻辑处理核心的数量。对于单核处理器，该类将其视为 CPU 编号，对于多核处理器，它可以是物理内核，也可以是使用超线程技术的虚拟逻辑内核。（processor内核内部使用的对象，不一定绑定到物理设备，它们可能都具有相同的 physical id）vendor_id：CPU制造商。cpu family：CPU 产品系列代号。mode：cpu属于其系列中的哪一代。model name：CPU的名称及其编号，标称频率。stepping：CPU属于生产更新版本。cpu MHz：实际CPU频率。cache size：CPU二级缓存的大小。physical id：单个物理CPU标号。siblings：单个物理 CPU 的逻辑 CPU 数量。siblings = cpu 核心 * [2]。core id：当前所在CPU中的物理内核id。cpu cores：逻辑核所在CPU的物理核数。比如这里有2个cpu core，对应的core id是0、1。apicid：用于区分不同逻辑核心的编号。系统中每个逻辑核的编号必须不同，编号不一定是连续的。fpu：是否有浮点单元。（Floating Point Unit）fpu_exception：是否支持浮点计算异常。cpuid level：在执行cpuid指令之前，eax寄存器中的值会根据不同的值返回不同的内容。wp：表示当前CPU是否支持内核态用户空间写保护。（Write Protection）flags：当前CPU支持的功能，例如浮点单元 (FPU) 的存在和处理 MMX 指令的能力。。bogomips：粗略测量的 CPU 速度（每秒百万条指令）。clflush size：每个flush缓存的大小单位。cache_alignment：缓存地址对齐单元。address sizes：可访问地址空间的数量。power management：支持电源管理。 小贴士 /proc：目录中存放进程PID命名的目录以及系统相关信息文件，如： cpuinfo :cup信息 meminfo :内存信息 partitions :硬盘分区 uptime :查看系统运行时间和cpu负载 12345678$ uptime 14:12:52 up 2 days, 20:41, 1 user, load average: 0.06, 0.03, 0.01# 说明： 14:12:52 当前时间 up 2 days, 20:41 系统运行了多久 1 user 当前登录用户数 load average: 0.06, 0.03, 0.01 系统负载，即任务队列的平均长度。三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值。 w :查看系统运行时间和cpu负载以及当前用户登录信息 1234$ w 17:35:25 up 3 days, 3 min, 1 user, load average: 0.00, 0.00, 0.00USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATroot pts/0 1.120.160.30 13:58 0.00s 0.12s 0.12s -bash free :查看内存信息 12345678910111213141516171819202122# 显示内存使用情况，默认单位k$ free total used free shared buff/cache availableMem: 912836 100016 72608 460 740212 667376Swap: 0 0 0# 说明： total :物理内存总量 used :已经使用的物理内存总量 free :空闲内存总量 shared :是多个进程共享的内存总数； buff/cache :用作内核缓存的内存量选项 含义-b 以 Byte（字节）为单位，显示内存使用情况。-k 以 KB 为单位，显示内存使用情况，此选项是 free 命令的默认选项。-m 以 MB 为单位，显示内存使用情况。-g 以 GB 为单位，显示内存使用情况。-t 在输出的最终结果中，输出内存和 swap 分区的总量。-o 不显示系统缓冲区这一列。-s 间隔秒数 根据指定的间隔时间，持续显示内存使用情况。 df :查看硬盘信息 12345678$ df -hT文件系统 类型 容量 已用 可用 已用% 挂载点devtmpfs devtmpfs 436M 0 436M 0% /devtmpfs tmpfs 446M 0 446M 0% /dev/shmtmpfs tmpfs 446M 456K 446M 1% /runtmpfs tmpfs 446M 0 446M 0% /sys/fs/cgroup/dev/vda1 ext4 20G 14G 5.3G 72% /tmpfs tmpfs 90M 0 90M 0% /run/user/0 top :动态显示进程状态 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117# 动态显示进程状态，默认每3秒刷新一次$ toptop - 14:08:03 up 2 days, 20:36, 1 user, load average: 0.06, 0.03, 0.01Tasks: 87 total, 1 running, 47 sleeping, 0 stopped, 0 zombie%Cpu(s): 0.1 us, 0.0 sy, 0.0 ni, 99.9 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 stKiB Mem : 912836 total, 65564 free, 99648 used, 747624 buff/cacheKiB Swap: 0 total, 0 free, 0 used. 667600 avail Mem PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 558 root 20 0 17832 1772 1288 S 0.1 0.2 0:45.25 assist_daemon 585 root 20 0 813912 10888 5104 S 0.1 1.2 3:51.47 aliyun-service 587 root 20 0 733348 9636 4604 S 0.1 1.1 0:11.96 rsyslogd 1 root 20 0 51640 4432 3156 S 0.0 0.5 0:33.44 systemd# 说明： 第一行为任务队列信息，同 uptime 第二行为进程信息: total :进程总数 running :正在运行的进程数 sleeping :睡眠的进程数 stopped :停止的进程数 zombie :僵尸进程数 第三行为CPU信息: 0.1 us :用户空间占用CPU百分比 0.0 sy :内核空间占用CPU百分比 0.0 ni :用户进程空间内改变过优先级的进程占用CPU百分比 99.9 id :空闲CPU百分比 0.0 wa :等待输入输出的CPU时间百分比，通过查看 CPU 的 wa% 值来判断当前磁盘 IO 性能，如果这个数值过大，很可能是磁盘 IO 太高了，当然也可能是其他原因，例如网络 IO 过高等。 0.0 hi :硬件CPU中断占用百分比 0.0 si :软中断占用百分比 0.0 st :虚拟机占用百分比 第四行和第五行为内存信息: Mem: 912836 total 物理内存总量 65564 free 空闲内存总量 99648 used 使用的物理内存总量 747624 buff/cache 用作内核缓存的内存量 Swap: 0 total 交换区总量 0 free 空闲交换区总量 0 used 使用的交换区总量 667600 avail Mem 缓冲的交换区总量,内存中的内容被换出到交换区，而后又被换入到内存，但使用过的交换区尚未被覆盖，该数值即为这些内容已存在于内存中的交换区的大小,相应的内存再次被换出时可不必再对交换区写入。 之后是进程信息区：默认情况下仅显示比较重要的 PID、USER、PR、NI、VIRT、RES、SHR、S、%CPU、%MEM、TIME+、COMMAND 列。 运行top后按f会查看到全部的展示项，这里只对部分展示项进行说明 序号 列名 含义 a PID 进程id b PPID 父进程id c RUSER Real user name d UID 进程所有者的用户id e USER 进程所有者的用户名 f GROUP 进程所有者的组名 g TTY 启动进程的终端名。不是从终端启动的进程则显示为 ? h PR 优先级。默认20。这个优先级对应实时进程，只使用1-99号优先级队列，序号越大优先级越高，0号留给普通进程使用 i NI nice值。默认0。负值表示高优先级，正值表示低优先级 j P 最后使用的CPU，仅在多CPU环境下有意义 k %CPU 上次更新到现在的CPU时间占用百分比 l TIME 进程使用的CPU时间总计，单位精确到秒， 3:51 表示 3分51秒 m TIME+ 进程使用的CPU时间总计，单位精确到1/100秒，3:51.47 表示 3分51秒多 n %MEM 进程使用的物理内存百分比 o VIRT 进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES p SWAP 进程使用的虚拟内存中，被换出的大小，单位kb。 q RES 进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA r CODE 可执行代码占用的物理内存大小，单位kb s DATA 可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb t SHR 共享内存大小，单位kb u nFLT 页面错误次数 v nDRT 最后一次写入到现在，被修改过的页面数。 w S 进程状态(D=不可中断的睡眠状态,I=空闲内核线程,R=运行,S=睡眠,T=因作业控制信号而停止,Z=僵尸进程) x COMMAND 命令名/命令行 y WCHAN 若该进程在睡眠，则显示睡眠中的系统函数名 z Flags 任务标志，参考 sched.h 0 PGRP 进程组id# 交互命令：运行top后，可以键入如下指令与top进行交互 h :获得帮助 q :退出程序。 d :指定刷新时间 m :切换内存信息显示效果 t :切换显示进程和CPU状态信息。 c :切换显示命令名称和完整命令行。 u :查看指定用户的进程 k :终止执行中的进程 pid，系统将提示用户输入需要终止的进程PID，以及需要发送给该进程什么样的信号。一般的终止进程可以使用15信号；如果不能正常结束那就使用信号9强制结束该进程。默认值是信号15。在安全模式中此命令被屏蔽。 r :重新设置进程优先级 n pid，系统提示用户输入需要改变的进程PID以及需要设置的进程优先级值。输入一个正值将使优先级降低，反之则可以使该进程拥有更高的优先权。默认值是10。 翻页: Shift + &lt; :上翻 Shift + &gt; :下翻 Ctrl+L 擦除并且重写屏幕。 i :忽略闲置和僵死进程。这是一个开关式命令。 l :切换显示平均负载和启动时间信息。 M :根据驻留内存大小进行排序。 P :根据CPU使用百分比大小进行排序。 T :根据时间/累计时间进行排序。 W :将当前设置写入~/.toprc文件中。这是写top配置文件的推荐方法。 f :从当前显示中添加或者删除项目。按d添加或删除，esc返回。此时也可以调整每一列的显示顺序，按右键会将当前项全选，然后上下调整位置后按回车即可。默认情况下仅显示比较重要的 PID、USER、PR、NI、VIRT、RES、SHR、S、%CPU、%MEM、TIME+、COMMAND 列 o :过滤指定的内容，如过滤用户则输入：USER=username，匹配时采用模糊匹配，多次输入o会在当前过滤基础上增加新的过滤条件，q退出 S :切换到累计模式。# top使用格式top [-] [d] [p] [q] [c] [C] [S] [s]#参数说明 d 指定每两次屏幕信息刷新之间的时间间隔。当然用户可以使用s交互命令来改变之。 p 通过指定监控进程ID来仅仅监控某个进程的状态。 S 指定累计模式 s 使top命令在安全模式中运行。这将去除交互命令所带来的潜在危险。 i 使top不显示任何闲置或者僵死进程。 c 显示整个命令行而不只是显示命令名# 示例top //每隔5秒显式所有进程的资源占用情况top -d 2 //每隔2秒显式所有进程的资源占用情况top -c //每隔5秒显式进程的资源占用情况，并显示进程的命令行参数(默认只有进程名)top -p 12345 -p 6789//每隔5秒显示pid是12345和pid是6789的两个进程的资源占用情况top -d 2 -c -p 123456 //每隔2秒显示pid是12345的进程的资源使用情况，并显式该进程启动的命令行参数top -p进程1的ID -p进程2的id -p进程3的id …… //查看某几个进程的状态 sar :查看 CPU 、内存、磁盘、网络等性能指标 sar 命令是分析系统瓶颈的神器，可以用来查看 CPU 、内存、磁盘、网络等性能。 查看磁盘性能 1234567891011121314151617181920212223242526272829303132333435363738394041424344# 查看当前磁盘性能，-d参数代表查看磁盘性能，-p参数代表将 dev 设备按照 sda，sdb……名称显示，1是间隔1秒，2是采集2次$ sar -d -p 1 207时35分57秒 DEV tps rd_sec/s wr_sec/s avgrq-sz avgqu-sz await svctm %util07时35分58秒 xvda 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.0007时35分58秒 DEV tps rd_sec/s wr_sec/s avgrq-sz avgqu-sz await svctm %util07时35分59秒 xvda 12.00 0.00 155.00 12.92 0.01 0.67 1.67 2.00平均时间: DEV tps rd_sec/s wr_sec/s avgrq-sz avgqu-sz await svctm %util平均时间: xvda 6.00 0.00 77.50 12.92 0.00 0.67 1.67 1.00# 说明： tps :每秒从物理磁盘I/O的次数.多个逻辑请求会被合并为一个I/O磁盘请求， 一次传输的大小是不确定的. rd_sec/s :每秒读扇区的次数. wr_sec/s :每秒写扇区的次数. avgrq-sz :平均每次设备I/O操作的数据大小（扇区）. avgqu-sz :磁盘请求队列的平均长度. await :从请求磁盘操作到 系统完成处理，每次请求的平均消耗时间 包括请求队列等待时间，单位是毫秒（1秒=1000毫秒）. svctm :系统处理每次请求的平均时间 不包括在请求队列中消耗的时间. %util :I/O请求占CPU的百分比，比率越大，说明越饱和. avgqu-sz 的值较低时，设备的利用率较高 %util I/O请求占用的CPU百分比，值越高，说明I/O越慢。 对于磁盘 IO 性能，一般有如下评判标准： 正常情况下 svctm 应该是小于 await 值的，而 svctm 的大小和磁盘性能有关，CPU 、内存的负荷也会对 svctm 值造成影响，过多的请求也会间接的导致 svctm 值的增加。 await 值的大小一般取决与 svctm 的值和 I/O 队列长度以 及I/O 请求模式，如果 svctm 的值与 await 很接近，表示几乎没有 I/O 等待，磁盘性能很好，如果 await 的值远高于 svctm 的值，则表示 I/O 队列等待太长，系统上运行的应用程序将变慢，此时可以通过更换更快的硬盘来解决问题。 %util 项的值也是衡量磁盘 I/O 的一个重要指标，如果 %util 接近 100% ，表示磁盘产生的 I/O 请求太多，I/O 系统已经满负荷的在工作，该磁盘可能存在瓶颈。长期下去，势必影响系统的性能，可以通过优化程序或者通过更换更高、更快的磁盘来解决此问题。# 如果想继续查看以前的报告；可以查看保存在/var/log/sa/下的sar日志，保留最近30天的日志: 日志名称以sa开头，日期号结尾，如11号的日志为sa11$ sar -d -p -f /var/log/sa/sa11 | more00时00分01秒 DEV tps rd_sec/s wr_sec/s avgrq-sz avgqu-sz await svctm %util00时10分01秒 xvda 10.67 0.13 190.20 17.84 0.12 11.08 3.33 3.5500时20分01秒 xvda 11.40 0.08 234.10 20.54 0.07 6.07 3.26 3.7200时30分01秒 xvda 11.05 0.19 200.59 18.17 0.03 2.82 2.51 2.7700时40分01秒 xvda 10.78 0.00 225.89 20.96 0.14 12.59 4.64 5.0000时50分01秒 xvda 10.53 0.00 183.95 17.47 0.04 4.16 3.04 3.2001时00分01秒 xvda 10.58 0.00 187.13 17.68 0.12 11.18 4.52 4.7801时10分01秒 xvda 10.74 0.00 187.12 17.42 0.09 8.20 4.76 5.1101时20分01秒 xvda 11.52 0.05 212.70 18.47 0.06 4.83 2.52 2.9001时30分01秒 xvda 10.69 0.05 191.77 17.94 0.04 3.43 2.65 2.83 查看cpu使用率指标 123456789101112131415161718192021222324252627282930313233343536# 查看当前的cpu指标，-u指cpu使用率，默认就是-u，1是间隔1秒，3是采集3次$ sar -u 1 315时48分53秒 CPU %user %nice %system %iowait %steal %idle15时48分54秒 all 0.50 0.00 0.50 0.00 0.00 99.0015时48分55秒 all 0.00 0.00 0.00 0.00 0.00 100.0015时48分56秒 all 0.00 0.00 0.00 0.00 0.00 100.00平均时间: all 0.17 0.00 0.17 0.00 0.00 99.67# 查看全天的cpu指标$ sar -u -p00时00分01秒 CPU %user %nice %system %iowait %steal %idle00时10分01秒 all 0.08 0.00 0.08 0.00 0.00 99.8400时20分01秒 all 0.08 0.00 0.07 0.00 0.00 99.8500时30分01秒 all 0.07 0.00 0.08 0.00 0.00 99.8400时40分01秒 all 0.15 0.00 0.08 0.00 0.00 99.7800时50分01秒 all 0.07 0.00 0.07 0.00 0.00 99.8501时00分01秒 all 0.07 0.00 0.08 0.00 0.00 99.8501时10分01秒 all 0.67 0.00 0.12 0.01 0.00 99.20# 说明： CPU :all表示统计所有CPU的平均值 %user :显示在用户级别（application）运行使用 CPU 总时间的百分比 %nice :改变过优先级的进程的CPU使用率 %system :内核空间的CPU使用率， 在核心级别（kernel）运行所使用CPU总时间的百分比 %iowait :显示用于等待I/O操作占用CPU总时间的百分比 %steal :管理程序（hypervisor）为另一个虚拟进程提供服务而等待虚拟CPU的百分比 %idle :显示 CPU空闲时间占用CPU总时间的百分比# 主要监控如下两项： %iowait 过高表示存在I/O瓶颈，即磁盘IO无法满足业务需求 %idle 过低表示CPU使用比较严重，需要结合内存使用等情况判断CPU是否瓶颈。# 查看以前的报告,保存在/var/log/sa/下的sar日志，保留最近30天的日志: 日志名称以sa开头，日期号结尾，如11号的日志为sa11sar -u -f /var/log/sa/sa11 | more 查看cpu负载指标 123456789101112131415161718# 查看当前的cpu的负载指标，-q指cpu负载，1是间隔1秒，3是采集3次$ sar -q 1 316时00分32秒 runq-sz plist-sz ldavg-1 ldavg-5 ldavg-15 blocked16时00分33秒 0 127 0.00 0.00 0.00 016时00分34秒 0 127 0.00 0.00 0.00 016时00分35秒 0 127 0.00 0.00 0.00 0平均时间: 0 127 0.00 0.00 0.00 0# 说明： runq-sz :运行队列的长度（等待运行的进程数） plist_sz :进程列表中进程（processes）和线程（threads）的数量 Idavg-1 :最后1分钟的CPU平均负载，即将多核CPU过去一分钟的负载相加再除以核心数得出的平均值 ldavg_5 :最后5分钟的CPU平均负载 ldavg-15 :最后15分钟的CPU平均负载# 查看以前的报告,保存在/var/log/sa/下的sar日志，保留最近30天的日志: 日志名称以sa开头，日期号结尾，如11号的日志为sa11sar -q -f /var/log/sa/sa11 | more 内存监控 123456789101112131415161718$ sar -r 1 316时05分03秒 kbmemfree kbmemused %memused kbbuffers kbcached kbcommit %commit kbactive kbinact kbdirty16时05分04秒 75000 837836 91.78 48728 649444 471312 51.63 180868 577236 3616时05分05秒 75000 837836 91.78 48728 649444 471312 51.63 180868 577240 3616时05分06秒 75000 837836 91.78 48728 649444 471312 51.63 180868 577240 36平均时间: 75000 837836 91.78 48728 649444 471312 51.63 180868 577239 36# 说明：kbmemfree :这个值和free命令中的free值基本一致， 所以它不包括buffer和cache的空间。kbmemused :这个值和free命令中的used值基本一致， 所以它包括buffer和cache的空间。%memused :这个值是kbmemused和内存总量（不包括swap）的一个百分比。kbbuffers和kbcached :这两个值就是free命令中的buffer和cache.kbcommit :保证当前系统所需要的内存，即为了确保不溢出而需要的内存(RAM+swap)。%commit :这个值是kbcommit与内存总量（包括swap）的一个百分比。（可以看做内存使用量的百分比）# 查看以前的报告,保存在/var/log/sa/下的sar日志，保留最近30天的日志: 日志名称以sa开头，日期号结尾，如11号的日志为sa11sar -r -f /var/log/sa/sa11 | more 网络监控 1234567891011121314151617181920212223242526272829303132333435363738394041424344# -n选项可以汇报网络相关信息，可用的值有很多，我们查询最多的就是 DEV（网卡信息）$ sar -n DEV 1 216时23分03秒 IFACE rxpck/s txpck/s rxkB/s txkB/s rxcmp/s txcmp/s rxmcst/s16时23分04秒 lo 0.00 0.00 0.00 0.00 0.00 0.00 0.0016时23分04秒 eth0 2.00 0.00 0.13 0.00 0.00 0.00 0.0016时23分04秒 IFACE rxpck/s txpck/s rxkB/s txkB/s rxcmp/s txcmp/s rxmcst/s16时23分05秒 lo 0.00 0.00 0.00 0.00 0.00 0.00 0.0016时23分05秒 eth0 3.00 3.00 0.19 0.32 0.00 0.00 0.00平均时间: IFACE rxpck/s txpck/s rxkB/s txkB/s rxcmp/s txcmp/s rxmcst/s平均时间: lo 0.00 0.00 0.00 0.00 0.00 0.00 0.00平均时间: eth0 2.50 1.50 0.16 0.16 0.00 0.00 0.00# 说明： IFACE：就是网络设备的名称； rxpck/s：每秒钟接收到的包数目 txpck/s：每秒钟发送出去的包数目 rxbyt/s：每秒钟接收到的字节数 txbyt/s：每秒钟发送出去的字节数 rxcmp/s：每秒钟接收到的压缩包数目 txcmp/s：每秒钟发送出去的压缩包数目 txmcst/s：每秒钟接收到的多播包的包数目# -n 的值： 1.DEV :网卡，主要查看这一项 2.EDEV :网卡 (错误) 3.NFS :NFS 客户端 4.NFSD :NFS 服务器 5.SOCK :Sockets (套接字) (v4) 6.IP :IP 流 (v4) 7.EIP :IP 流 (v4) (错误) 8.ICMP :ICMP 流 (v4) 9.EICMP :ICMP 流 (v4) (错误) 10.TCP :TCP 流 (v4) 11.ETCP :TCP 流 (v4) (错误) 12.UDP :UDP 流 (v4) 13.SOCK6 :Sockets (套接字) (v6) 14.IP6 :IP 流 (v6) 15.EIP6 :IP 流 (v6) (错误) 16.ICMP6 :ICMP 流 (v6) 17.EICMP6 :ICMP 流 (v6) (错误) 18.UDP6 :UDP 流 (v6) 通过 -o 将监控信息输出到文件，然后通过 -f 查看 12$ sar -u 1 3 -o sar.txt$ sar -f sar.txt","summary":"摘要 本文介绍Linux查看系统硬件信息及其监控等相关命令 本文基于CentOS8(x86_64)","date_published":"2023-03-27T13:45:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/21/linux-command09-makeinstall-nginx/","url":"https://blog.hanqunfeng.com/2023/03/21/linux-command09-makeinstall-nginx/","title":"Linux常用命令--源代码安装nginx","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>虽然绝大部分软件都可以通过<code>rpm</code>或者<code>yum</code>的方式进行安装，但是由于yum中的版本不一定是最新版，或者软件开发商没有将软件放到yum源中，所有也有一些软件需要通过源代码的方式进行安装。</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文以源代码安装nginx为例说明如何通过源代码安装软件。</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"安装nginx\">安装nginx</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装nginx最小依赖</span></span><br><span class=\"line\">yum install gcc zlib zlib-devel pcre-devel openssl openssl-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果通过yum安装nginx，只需要执行如下命令</span></span><br><span class=\"line\">yum install nginx -y <span class=\"comment\"># 本文不通过yum安装</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载nginx最新稳定版</span></span><br><span class=\"line\">wget https://nginx.org/download/nginx-1.22.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">tar -zxvf nginx-1.22.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入解压后的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.22.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查配置并指定安装参数</span></span><br><span class=\"line\">./configure --with-http_stub_status_module --with-http_ssl_module</span><br><span class=\"line\">    <span class=\"comment\"># 参数说明</span></span><br><span class=\"line\">    --with-http_ssl_module :安装ssl模块</span><br><span class=\"line\">    --with-http_stub_status_module :查看nginx的客户端状态模块</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 输出内容，所有文件的默认路径</span></span><br><span class=\"line\">    Configuration summary</span><br><span class=\"line\">    + using system PCRE library</span><br><span class=\"line\">    + using system OpenSSL library</span><br><span class=\"line\">    + using system zlib library</span><br><span class=\"line\"></span><br><span class=\"line\">    nginx path prefix: <span class=\"string\">&quot;/usr/local/nginx&quot;</span></span><br><span class=\"line\">    nginx binary file: <span class=\"string\">&quot;/usr/local/nginx/sbin/nginx&quot;</span></span><br><span class=\"line\">    nginx modules path: <span class=\"string\">&quot;/usr/local/nginx/modules&quot;</span></span><br><span class=\"line\">    nginx configuration prefix: <span class=\"string\">&quot;/usr/local/nginx/conf&quot;</span></span><br><span class=\"line\">    nginx configuration file: <span class=\"string\">&quot;/usr/local/nginx/conf/nginx.conf&quot;</span></span><br><span class=\"line\">    nginx pid file: <span class=\"string\">&quot;/usr/local/nginx/logs/nginx.pid&quot;</span></span><br><span class=\"line\">    nginx error <span class=\"built_in\">log</span> file: <span class=\"string\">&quot;/usr/local/nginx/logs/error.log&quot;</span></span><br><span class=\"line\">    nginx http access <span class=\"built_in\">log</span> file: <span class=\"string\">&quot;/usr/local/nginx/logs/access.log&quot;</span></span><br><span class=\"line\">    nginx http client request body temporary files: <span class=\"string\">&quot;client_body_temp&quot;</span></span><br><span class=\"line\">    nginx http proxy temporary files: <span class=\"string\">&quot;proxy_temp&quot;</span></span><br><span class=\"line\">    nginx http fastcgi temporary files: <span class=\"string\">&quot;fastcgi_temp&quot;</span></span><br><span class=\"line\">    nginx http uwsgi temporary files: <span class=\"string\">&quot;uwsgi_temp&quot;</span></span><br><span class=\"line\">    nginx http scgi temporary files: <span class=\"string\">&quot;scgi_temp&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也可以自定义安装路径</span></span><br><span class=\"line\">./configure --prefix=/usr/local/nginx-1.22.1 --with-http_stub_status_module --with-http_ssl_module</span><br><span class=\"line\">    <span class=\"comment\"># 参数说明</span></span><br><span class=\"line\">    --prefix=/usr/local/nginx-1.22.1 :安装路径</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#输出内容，此时看到所有文件都会被安装到指定的路径</span></span><br><span class=\"line\">    Configuration summary</span><br><span class=\"line\">    + using system PCRE library</span><br><span class=\"line\">    + using system OpenSSL library</span><br><span class=\"line\">    + using system zlib library</span><br><span class=\"line\"></span><br><span class=\"line\">    nginx path prefix: <span class=\"string\">&quot;/usr/local/nginx-1.22.1&quot;</span></span><br><span class=\"line\">    nginx binary file: <span class=\"string\">&quot;/usr/local/nginx-1.22.1/sbin/nginx&quot;</span></span><br><span class=\"line\">    nginx modules path: <span class=\"string\">&quot;/usr/local/nginx-1.22.1/modules&quot;</span></span><br><span class=\"line\">    nginx configuration prefix: <span class=\"string\">&quot;/usr/local/nginx-1.22.1/conf&quot;</span></span><br><span class=\"line\">    nginx configuration file: <span class=\"string\">&quot;/usr/local/nginx-1.22.1/conf/nginx.conf&quot;</span></span><br><span class=\"line\">    nginx pid file: <span class=\"string\">&quot;/usr/local/nginx-1.22.1/logs/nginx.pid&quot;</span></span><br><span class=\"line\">    nginx error <span class=\"built_in\">log</span> file: <span class=\"string\">&quot;/usr/local/nginx-1.22.1/logs/error.log&quot;</span></span><br><span class=\"line\">    nginx http access <span class=\"built_in\">log</span> file: <span class=\"string\">&quot;/usr/local/nginx-1.22.1/logs/access.log&quot;</span></span><br><span class=\"line\">    nginx http client request body temporary files: <span class=\"string\">&quot;client_body_temp&quot;</span></span><br><span class=\"line\">    nginx http proxy temporary files: <span class=\"string\">&quot;proxy_temp&quot;</span></span><br><span class=\"line\">    nginx http fastcgi temporary files: <span class=\"string\">&quot;fastcgi_temp&quot;</span></span><br><span class=\"line\">    nginx http uwsgi temporary files: <span class=\"string\">&quot;uwsgi_temp&quot;</span></span><br><span class=\"line\">    nginx http scgi temporary files: <span class=\"string\">&quot;scgi_temp&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译</span></span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"comment\"># 将相关文件拷贝到 --prefix 指定的安装目录中</span></span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置和管理nginx\">配置和管理nginx</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>上面就完成了nginx安装，之后我们可以根据需要对配置文件进行修改，并启动nginx</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 假设我们将nginx安装到了自定义安装路径/usr/local/nginx-1.22.1下</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/nginx-1.22.1</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -1</span><br><span class=\"line\">conf :nginx配置文件目录</span><br><span class=\"line\">html :默认web根目录</span><br><span class=\"line\">logs :默认日志输出目录</span><br><span class=\"line\">sbin :启动命令nginx所在目录，make后真正有用的就这个nginx命令，重新编译就是为了重新生成新的nginx命令</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将nginx命令软连接到系统命令路径下，因为/usr/bin/已经被加入到PATH中了</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -s /usr/local/nginx-1.22.1/sbin/nginx /usr/bin/</span><br><span class=\"line\"><span class=\"comment\"># 查看nginx版本，测试nginx命令是否全局可用</span></span><br><span class=\"line\">nginx -v</span><br><span class=\"line\">nginx version: nginx/1.22.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建nginx用户和组</span></span><br><span class=\"line\">$ groupadd nginx</span><br><span class=\"line\">$ useradd -g nginx nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改配置文件</span></span><br><span class=\"line\">vim /usr/local/nginx-1.22.1/conf/nginx.conf</span><br><span class=\"line\">    <span class=\"comment\"># 为了方便演示，这里仅仅修改如下两项内容</span></span><br><span class=\"line\">    <span class=\"comment\"># worker用户，这里配置为我们上面创建的nginx用户和nginx组</span></span><br><span class=\"line\">    user  nginx nginx;</span><br><span class=\"line\">    <span class=\"comment\"># 启动2个worker进程</span></span><br><span class=\"line\">    worker_processes  2;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查配置文件是否正确</span></span><br><span class=\"line\">nginx -t</span><br><span class=\"line\">nginx: the configuration file /usr/local/nginx-1.22.1/conf/nginx.conf syntax is ok</span><br><span class=\"line\">nginx: configuration file /usr/local/nginx-1.22.1/conf/nginx.conf <span class=\"built_in\">test</span> is successful</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果配置文件被修改了，可以通过该命令重新加载新的配置，而不需要重新启动nginx</span></span><br><span class=\"line\">nginx -s reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动nginx</span></span><br><span class=\"line\"><span class=\"comment\"># 会使用默认的配置文件</span></span><br><span class=\"line\">nginx</span><br><span class=\"line\"><span class=\"comment\"># 启动时指定配置文件</span></span><br><span class=\"line\">nginx -c /usr/local/nginx-1.22.1/conf/nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看进程</span></span><br><span class=\"line\">ps -ef | grep nginx</span><br><span class=\"line\">root     18538     1  0 11:11 ?        00:00:00 nginx: master process nginx</span><br><span class=\"line\">nginx    18592 18538  0 11:22 ?        00:00:00 nginx: worker process</span><br><span class=\"line\">nginx    18593 18538  0 11:22 ?        00:00:00 nginx: worker process</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看端口</span></span><br><span class=\"line\">netstat -tunpl | grep nginx</span><br><span class=\"line\">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      18538/nginx: master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 立即停止nginx</span></span><br><span class=\"line\">nginx -s stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从容停止nginx</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> -QUIT `<span class=\"built_in\">cat</span> /usr/local/nginx-1.22.1/logs/nginx.pid`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 立即重启nginx</span></span><br><span class=\"line\">nginx -s stop</span><br><span class=\"line\">nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 平滑重启nginx</span></span><br><span class=\"line\"><span class=\"built_in\">kill</span> -HUP `<span class=\"built_in\">cat</span> /usr/local/nginx-1.22.1/logs/nginx.pid` <span class=\"comment\"># 只会重启worker进程</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"为nginx添加新的模块\">为nginx添加新的模块</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>nginx安装成功后，发现有一些其他模块没有编译进去，或者想额外添加一些模块，这时候就要重新编译nginx。</p>\n</li>\n<li class=\"lvl-2\">\n<p>重新编译之前，需要查看之前安装时的参数</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nginx -V</span><br><span class=\"line\">nginx version: nginx/1.22.1</span><br><span class=\"line\">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC)</span><br><span class=\"line\">built with OpenSSL 1.0.2k-fips  26 Jan 2017</span><br><span class=\"line\">TLS SNI support enabled</span><br><span class=\"line\">configure arguments: --prefix=/usr/local/nginx-1.22.1 --with-http_stub_status_module --with-http_ssl_module</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>configure arguments</code>中就是之前编译安装时配置的参数</p>\n</li>\n<li class=\"lvl-2\">\n<p>如添加新的模块<code>http_gzip_static_module</code>，预读gzip功能</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入nginx源码目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/soft/nginx-1.22.1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查配置并指定安装参数，使用上面得到的上一次安装的参数，还要将新的模块也加上</span></span><br><span class=\"line\">./configure --prefix=/usr/local/nginx-1.22.1 --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译，注意不要执行 make install，因为我们只需要得到nginx命令，运行make install会覆盖之前的所有目录</span></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 先备份原先的nginx命令</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> /usr/local/nginx-1.22.1/sbin/nginx /usr/local/nginx-1.22.1/sbin/nginx.bak</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将新生成的nginx命令复制到安装目录中</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> ./objs/nginx /usr/local/nginx-1.22.1/sbin/nginx</span><br><span class=\"line\"><span class=\"comment\"># 此时如果遇到提示 cp: 无法创建普通文件&quot;/usr/local/nginx-1.22.1/sbin/nginx&quot;: 文本文件忙 , 可以通过如下命令进行复制</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> -rfp ./objs/nginx /usr/local/nginx-1.22.1/sbin/nginx</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启nginx</span></span><br><span class=\"line\">nginx -s stop</span><br><span class=\"line\">nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 平滑重启nginx(没好使)</span></span><br><span class=\"line\">make upgrade</span><br><span class=\"line\">    <span class=\"comment\"># 会执行Makefile下的如下命令，也可以手工按如下命令进行平滑重启</span></span><br><span class=\"line\">    upgrade:</span><br><span class=\"line\">\t/usr/local/nginx-1.22.1/sbin/nginx -t</span><br><span class=\"line\">    <span class=\"comment\"># 原因是执行如下命令没有创建新的master进程</span></span><br><span class=\"line\">\t<span class=\"built_in\">kill</span> -USR2 `<span class=\"built_in\">cat</span> /usr/local/nginx-1.22.1/logs/nginx.pid`</span><br><span class=\"line\">\t<span class=\"built_in\">sleep</span> 1</span><br><span class=\"line\">\t<span class=\"built_in\">test</span> -f /usr/local/nginx-1.22.1/logs/nginx.pid.oldbin</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">kill</span> -QUIT `<span class=\"built_in\">cat</span> /usr/local/nginx-1.22.1/logs/nginx.pid.oldbin`</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看是否是新的nginx</span></span><br><span class=\"line\">nginx -V</span><br><span class=\"line\">nginx version: nginx/1.22.1</span><br><span class=\"line\">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC)</span><br><span class=\"line\">built with OpenSSL 1.0.2k-fips  26 Jan 2017</span><br><span class=\"line\">TLS SNI support enabled</span><br><span class=\"line\">configure arguments: --prefix=/usr/local/nginx-1.22.1 --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>安装第三方模块，<code>configure</code>中需要添加<code>--add-module=module_dir</code>，具体查看第三方模块官网说明即可</p>\n</li>\n</ul>\n<h2 id=\"nginx编译时可以添加哪些参数\">nginx编译时可以添加哪些参数</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>以下是通过<code>yum</code>安装nginx时的编译参数</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 指定nginx安装路径，至少web根目录在该路径下</span></span><br><span class=\"line\">--prefix=/usr/share/nginx</span><br><span class=\"line\"><span class=\"comment\"># 指定nginx命令安装路径</span></span><br><span class=\"line\">--sbin-path=/usr/sbin/nginx</span><br><span class=\"line\"><span class=\"comment\"># 指定模块安装路径</span></span><br><span class=\"line\">--modules-path=/usr/lib64/nginx/modules</span><br><span class=\"line\"><span class=\"comment\"># 指定主配置文件</span></span><br><span class=\"line\">--conf-path=/etc/nginx/nginx.conf</span><br><span class=\"line\"><span class=\"comment\"># 指定错误日志</span></span><br><span class=\"line\">--error-log-path=/var/log/nginx/error.log</span><br><span class=\"line\"><span class=\"comment\"># 指定访问日志</span></span><br><span class=\"line\">--http-log-path=/var/log/nginx/access.log</span><br><span class=\"line\"><span class=\"comment\"># 设定http客户端请求临时文件路径</span></span><br><span class=\"line\">--http-client-body-temp-path=/var/lib/nginx/tmp/client_body</span><br><span class=\"line\"><span class=\"comment\"># 设定http代理临时文件路径</span></span><br><span class=\"line\">--http-proxy-temp-path=/var/lib/nginx/tmp/proxy</span><br><span class=\"line\"><span class=\"comment\"># 设定http fastcgi临时文件路径，基本就是php缓存</span></span><br><span class=\"line\">--http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi</span><br><span class=\"line\"><span class=\"comment\"># 设定http uwsgi临时文件路径，python缓存路径</span></span><br><span class=\"line\">--http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi</span><br><span class=\"line\"><span class=\"comment\"># 设定http scgi临时文件路径</span></span><br><span class=\"line\">--http-scgi-temp-path=/var/lib/nginx/tmp/scgi</span><br><span class=\"line\"><span class=\"comment\"># master进程ID</span></span><br><span class=\"line\">--pid-path=/run/nginx.pid</span><br><span class=\"line\"><span class=\"comment\"># 锁路径，防止重复启动nginx</span></span><br><span class=\"line\">--lock-path=/run/lock/subsys/nginx</span><br><span class=\"line\"><span class=\"comment\"># worker进程的用户和组</span></span><br><span class=\"line\">--user=nginx --group=nginx</span><br><span class=\"line\"><span class=\"comment\"># 启用动态模块兼容性</span></span><br><span class=\"line\">--with-compat</span><br><span class=\"line\"><span class=\"comment\"># 启用debug日志</span></span><br><span class=\"line\">--with-debug</span><br><span class=\"line\"><span class=\"comment\"># 使用nginx的aio特性会大大提高性能，比如图片站的特点是大量的读io操作，nginx aio不用等待每次io的结果，有助于并发处理大量io和提高nginx处理效率。</span></span><br><span class=\"line\"><span class=\"comment\"># aio的优点就是能够同时提交多个io请求给内核，然后直接由内核的io调度算法去处理这些请求(directio)，这样的话，内核就有可能执行一些合并，节约了读取文件的处理时间。</span></span><br><span class=\"line\"><span class=\"comment\"># 异步非阻塞</span></span><br><span class=\"line\">--with-file-aio</span><br><span class=\"line\"><span class=\"comment\"># 调试用，剖析程序性能瓶颈</span></span><br><span class=\"line\">--with-google_perftools_module</span><br><span class=\"line\"><span class=\"comment\"># 作为一个输出过滤器，支持不完全缓冲，分部分响应请求。在nginx响应之前或者之后追加文本内容，比如想在站点底部追加一个js广告或者新增的css样式</span></span><br><span class=\"line\">--with-http_addition_module</span><br><span class=\"line\"><span class=\"comment\"># 认证模块，实现基于一个子请求的结果的客户端授权。如果该子请求返回的2xx响应代码，所述接入是允许的。如果它返回401或403中，访问被拒绝与相应的错误代码。由子请求返回的任何其他响应代码被认为是一个错误。</span></span><br><span class=\"line\">--with-http_auth_request_module</span><br><span class=\"line\"><span class=\"comment\"># WebDAV模块，增加 PUT,DELETE,MKCOL,COPY和MOVE方法。默认情况下为关闭</span></span><br><span class=\"line\"><span class=\"comment\"># 扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可直接对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。</span></span><br><span class=\"line\">--with-http_dav_module</span><br><span class=\"line\"><span class=\"comment\"># 允许在内存不足的情况下返回204或444码</span></span><br><span class=\"line\">--with-http_degradation_module</span><br><span class=\"line\"><span class=\"comment\"># 提供寻求内存使用基于时间的偏移量文件</span></span><br><span class=\"line\">--with-http_flv_module</span><br><span class=\"line\"><span class=\"comment\"># 它为不支持“gzip”编码方法的客户端解压具有“Content-Encoding: gzip”头的响应。</span></span><br><span class=\"line\">--with-http_gunzip_module</span><br><span class=\"line\"><span class=\"comment\"># 在线实时压缩输出数据流</span></span><br><span class=\"line\">--with-http_gzip_static_module</span><br><span class=\"line\"><span class=\"comment\"># 传输JPEG/GIF/PNG 图片的一个过滤器）（默认为不启用。gd库要用到）</span></span><br><span class=\"line\">--with-http_image_filter_module=dynamic</span><br><span class=\"line\"><span class=\"comment\"># 多媒体模块</span></span><br><span class=\"line\">--with-http_mp4_module</span><br><span class=\"line\">--with-http_perl_module=dynamic</span><br><span class=\"line\"><span class=\"comment\"># nginx显示随机首页模块</span></span><br><span class=\"line\">--with-http_random_index_module</span><br><span class=\"line\"><span class=\"comment\"># Nginx获取真实IP模块，这个模块允许从请求标头更改客户端的IP地址值，默认为关</span></span><br><span class=\"line\">--with-http_realip_module</span><br><span class=\"line\"><span class=\"comment\"># nginx安全下载模块</span></span><br><span class=\"line\">--with-http_secure_link_module</span><br><span class=\"line\"><span class=\"comment\"># nginx中文文档</span></span><br><span class=\"line\">--with-http_slice_module</span><br><span class=\"line\"><span class=\"comment\"># 安装ssl模块</span></span><br><span class=\"line\">--with-http_ssl_module</span><br><span class=\"line\"><span class=\"comment\"># 查看nginx客户端状态模块</span></span><br><span class=\"line\">--with-http_stub_status_module</span><br><span class=\"line\"><span class=\"comment\"># 允许用一些其他文本替换nginx响应中的一些文本</span></span><br><span class=\"line\">--with-http_sub_module</span><br><span class=\"line\"><span class=\"comment\"># 提供HTTP2支持，要使用http2，还需要同时启用ssl服务，nginx1.19.1之前的版本不支持http2</span></span><br><span class=\"line\">--with-http_v2_module</span><br><span class=\"line\"><span class=\"comment\"># 过滤转换XML请求</span></span><br><span class=\"line\">--with-http_xslt_module=dynamic</span><br><span class=\"line\"><span class=\"comment\"># 启用POP3/IMAP4/SMTP代理模块支持</span></span><br><span class=\"line\">--with-mail=dynamic --with-mail_ssl_module</span><br><span class=\"line\"><span class=\"comment\"># 支持正则，使nginx支持http rewrite模块</span></span><br><span class=\"line\">--with-pcre</span><br><span class=\"line\"><span class=\"comment\"># 编译PCRE包含“just-in-time compilation”</span></span><br><span class=\"line\">--with-pcre-jit</span><br><span class=\"line\"><span class=\"comment\"># TCP\\UDP负载均衡模块。nginx从1.9.0开始，新增加了一个stream模块，用来实现四层协议的转发、代理或者负载均衡等。</span></span><br><span class=\"line\">--with-stream=dynamic --with-stream_ssl_module --with-stream_ssl_preread_module</span><br><span class=\"line\"><span class=\"comment\"># 支持多线程模块</span></span><br><span class=\"line\">--with-threads</span><br><span class=\"line\"><span class=\"comment\"># 设置C编译器参数</span></span><br><span class=\"line\">--with-cc-opt=<span class=\"string\">&#x27;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 设置连接文件参数</span></span><br><span class=\"line\">--with-ld-opt=<span class=\"string\">&#x27;-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -Wl,-E&#x27;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>其它参数</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启用ipv6支持</span></span><br><span class=\"line\">--with-ipv6</span><br><span class=\"line\"><span class=\"comment\"># SPDY可以缩短网页的加载时间</span></span><br><span class=\"line\">--with-http_spdy_module</span><br><span class=\"line\"><span class=\"comment\"># 该模块创建基于与MaxMind GeoIP二进制文件相配的客户端IP地址的ngx_http_geoip_module变量</span></span><br><span class=\"line\">--with-http_geoip_module</span><br><span class=\"line\"><span class=\"comment\"># 计算和检查要求所需的安全链接网址</span></span><br><span class=\"line\">--with-http_secure_link_module</span><br><span class=\"line\"><span class=\"comment\"># 禁用http cache功能</span></span><br><span class=\"line\">--without-http-cache</span><br><span class=\"line\"><span class=\"comment\"># 启用外部模块支持</span></span><br><span class=\"line\">--add-module=module_dir</span><br></pre></td></tr></table></figure>\n<h2 id=\"nginx编译安装出现的常见错误\">nginx编译安装出现的常见错误</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参照<code>yum</code>安装nginx的配置进行手工编译</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/nginx-1.22.1  --user=nginx --group=nginx --with-compat --with-debug \\</span><br><span class=\"line\">--with-file-aio --with-google_perftools_module --with-http_addition_module --with-http_auth_request_module \\</span><br><span class=\"line\">--with-http_dav_module --with-http_degradation_module --with-http_flv_module --with-http_gunzip_module \\</span><br><span class=\"line\">--with-http_gzip_static_module --with-http_image_filter_module=dynamic --with-http_mp4_module \\</span><br><span class=\"line\">--with-http_perl_module=dynamic --with-http_random_index_module --with-http_realip_module \\</span><br><span class=\"line\">--with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module \\</span><br><span class=\"line\">--with-http_sub_module --with-http_v2_module --with-http_xslt_module=dynamic --with-mail=dynamic --with-mail_ssl_module \\</span><br><span class=\"line\">--with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>./configure: error: the HTTP rewrite module requires the PCRE library.You can either disable the module by using --without-http_rewrite_module option, or install the PCRE library into the system, or build the PCRE library statically from the source with nginx by using --with-pcre= option.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install pcre pcre-devel</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>./configure: error: SSL modules require the OpenSSL library.You can either do not enable the modules, or install the OpenSSL library into the system, or build the OpenSSL library statically from the source with nginx by using --with-openssl= option.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install openssl openssl-devel</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>./configure: error: the HTTP XSLT module requires the libxml2/libxslt libraries. You can either do not enable the module or install the libraries.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install libxml2 libxml2-devel libxslt libxslt-devel</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>./configure: error: the HTTP image filter module requires the GD library. You can either do not enable the module or install the libraries.</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install gd gd-devel</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>./configure: error: perl module ExtUtils::Embed is required</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install perl-ExtUtils-Embed</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>./configure: error: the Google perftools module requires the Google perftools library. You can either do not enable the module or install the library</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install google-perftools google-perftools-devel</span><br></pre></td></tr></table></figure>\n<h2 id=\"Nginx-配置文件\">Nginx 配置文件</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 全局参数设置</span></span><br><span class=\"line\"><span class=\"comment\">#user  nobody;</span></span><br><span class=\"line\">user nginx;            <span class=\"comment\"># worker进程用户</span></span><br><span class=\"line\">worker_processes  2;          <span class=\"comment\"># 设置nginx启动进程的数量，一般设置成与逻辑cpu数量相同</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log;         # 指定错误日志</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  notice;</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  info;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># worker_rlimit_nofile 102400;  # 设置一个nginx进程能打开的最大文件数</span></span><br><span class=\"line\"><span class=\"comment\"># pid        /run/nginx.pid;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载模块配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># include conf.d/modules/*.conf;</span></span><br><span class=\"line\">load_module modules/ngx_stream_module.so; <span class=\"comment\"># 加载stream模块</span></span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;                      <span class=\"comment\"># 事件配置</span></span><br><span class=\"line\">    worker_connections  1024; <span class=\"comment\"># 设置一个进程的最大并发连接数</span></span><br><span class=\"line\">    <span class=\"comment\"># use epoll;                # 事件驱动类型</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># tcp反向代理示例，与http配置同级</span></span><br><span class=\"line\">stream &#123;</span><br><span class=\"line\">    <span class=\"comment\"># include conf.d/stream/*.conf</span></span><br><span class=\"line\">    include conf.d/stream/redis.conf</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># http 服务相关设置</span></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include             mime.types;  <span class=\"comment\"># 关联mime类型，关联资源的媒体类型(不同的媒体类型的打开方式)</span></span><br><span class=\"line\">    default_type        application/octet-stream;  <span class=\"comment\"># 根据文件的后缀来匹配相应的MIME类型，并写入Response header，导致浏览器播放文件而不是下载</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 访问日志格式</span></span><br><span class=\"line\">    log_format  main  <span class=\"string\">&#x27;remote_addr - remote_user [time_local] &quot;request&quot; &#x27;</span></span><br><span class=\"line\">                      <span class=\"string\">&#x27;status body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class=\"line\">                      <span class=\"string\">&#x27;&quot;http_user_agent&quot; &quot;http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class=\"line\">    access_log  logs/access.log  main;    <span class=\"comment\">#设置访问日志的位置和格式</span></span><br><span class=\"line\">    sendfile          on;      <span class=\"comment\"># 用于开启文件高效传输模式，一般设置为on，若nginx是用来进行磁盘IO负载应用时，可以设置为off，降低系统负载</span></span><br><span class=\"line\">    tcp_nopush        on;      <span class=\"comment\"># 减少网络报文段数量，当有数据时，先别着急发送, 确保数据包已经装满数据, 避免了网络拥塞</span></span><br><span class=\"line\">    tcp_nodelay       on;      <span class=\"comment\"># 提高I/O性能，确保数据尽快发送, 提高可数据传输效率</span></span><br><span class=\"line\">    <span class=\"comment\"># gzip              on;      # 是否开启 gzip 压缩</span></span><br><span class=\"line\">    keepalive_timeout  65;     <span class=\"comment\"># 设置长连接的超时时间，请求完成之后还要保持连接多久，不是请求时间多久，目的是保持长连接，减少创建连接过程给系统带来的性能损耗，类似于线程池，数据库连接池</span></span><br><span class=\"line\">    types_hash_max_size 4096;  <span class=\"comment\"># 影响散列表的冲突率。types_hash_max_size 越大，就会消耗更多的内存，但散列key的冲突率会降低，检索速度就更快。types_hash_max_size越小，消耗的内存就越小，但散列key的冲突率可能上升</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 加载子配置文件</span></span><br><span class=\"line\">    <span class=\"comment\"># include /usr/local/nginx-1.22.1/conf/conf.d/*.conf;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># http反向代理示例</span></span><br><span class=\"line\">    include conf.d/http/tomcat.conf</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 虚拟服务器的相关设置</span></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen      80;        <span class=\"comment\"># 设置监听的端口</span></span><br><span class=\"line\">        server_name  localhost;        <span class=\"comment\"># 设置绑定的主机名、域名或ip地址</span></span><br><span class=\"line\">        <span class=\"comment\">#charset koi8-r;        # 设置编码字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#access_log  logs/host.access.log  main;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root  html;           <span class=\"comment\"># 设置服务器默认网站的根目录位置</span></span><br><span class=\"line\">            index  index.html index.htm;    <span class=\"comment\"># 设置默认打开的文档</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\"># error_page 404 /404.html;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        error_page  500 502 503 504  /50x.html; <span class=\"comment\"># 设置错误信息返回页面</span></span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root html</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ \\.php$ &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    proxy_pass   http://127.0.0.1;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ \\.php$ &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    root           html;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_index  index.php;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class=\"line\">        <span class=\"comment\">#    include        fastcgi_params;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># deny access to .htaccess files, if Apache&#x27;s document root</span></span><br><span class=\"line\">        <span class=\"comment\"># concurs with nginx&#x27;s one</span></span><br><span class=\"line\">        <span class=\"comment\">#</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ /\\.ht &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    deny  all;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># HTTPS server</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"comment\">#server &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#    listen       443 ssl;</span></span><br><span class=\"line\">    <span class=\"comment\">#    server_name  localhost;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#    ssl_certificate      cert.pem;</span></span><br><span class=\"line\">    <span class=\"comment\">#    ssl_certificate_key  cert.key;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#    ssl_session_cache    shared:SSL:1m;</span></span><br><span class=\"line\">    <span class=\"comment\">#    ssl_session_timeout  5m;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span></span><br><span class=\"line\">    <span class=\"comment\">#    ssl_prefer_server_ciphers  on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#    location / &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">#        root   html;</span></span><br><span class=\"line\">    <span class=\"comment\">#        index  index.html index.htm;</span></span><br><span class=\"line\">    <span class=\"comment\">#    &#125;</span></span><br><span class=\"line\">    <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>tomcat.conf</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream tomcats &#123;</span><br><span class=\"line\">    server 192.168.0.1:8080;</span><br><span class=\"line\">    server 192.168.0.2:8080;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen       8088;</span><br><span class=\"line\">        server_name  localhost tomcat.domain;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            proxy_pass http://tomcats; <span class=\"comment\">#这个名称和要上面 upstream tomcats 对应</span></span><br><span class=\"line\">            proxy_redirect     default;</span><br><span class=\"line\">            proxy_http_version 1.1;</span><br><span class=\"line\"></span><br><span class=\"line\">            proxy_set_header   Host              <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            proxy_set_header   X-Real-IP         <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">            proxy_set_header   X-Forwarded-For   <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">            proxy_set_header   X-Forwarded-Proto <span class=\"variable\">$scheme</span>;</span><br><span class=\"line\">            proxy_max_temp_file_size 0;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">#this is the maximum upload size</span></span><br><span class=\"line\">            client_max_body_size       10m;</span><br><span class=\"line\">            client_body_buffer_size    128k;</span><br><span class=\"line\"></span><br><span class=\"line\">            proxy_connect_timeout      90;</span><br><span class=\"line\">            proxy_send_timeout         90;</span><br><span class=\"line\">            proxy_read_timeout         90;</span><br><span class=\"line\">            proxy_buffering            off;</span><br><span class=\"line\">            proxy_request_buffering    off; <span class=\"comment\"># Required for HTTP CLI commands</span></span><br><span class=\"line\">            proxy_set_header Connection <span class=\"string\">&quot;&quot;</span>; <span class=\"comment\"># Clear for keepalive</span></span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>redis.conf</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream redis&#123;</span><br><span class=\"line\">    server 192.168.0.1:6379;</span><br><span class=\"line\">    server 192.168.0.2:6379;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 8888; <span class=\"comment\">#监听本机所有IP的8888端口</span></span><br><span class=\"line\">    proxy_connect_timeout 10s; <span class=\"comment\">#连接超时时间</span></span><br><span class=\"line\">    proxy_timeout 10s; <span class=\"comment\">#转发超时时间</span></span><br><span class=\"line\">    proxy_pass redis; <span class=\"comment\">#这个名称和要上面 upstream redis 对应</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>upstream</code>配置说明</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream还可以为每个设备设置状态值，这些状态值的含义分别如下：</span><br><span class=\"line\">- down：表示当前的server暂时不参与负载.</span><br><span class=\"line\">- weight：默认为1，weight越大，负载的权重就越大。</span><br><span class=\"line\">- max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误.</span><br><span class=\"line\">- fail_timeout : max_fails次失败后，暂停的时间。</span><br><span class=\"line\">- backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。</span><br><span class=\"line\">- ip_hash（访问ip）:每个请求按访问ip的<span class=\"built_in\">hash</span>结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</span><br><span class=\"line\"></span><br><span class=\"line\">示例：</span><br><span class=\"line\">upstream tomcats&#123;</span><br><span class=\"line\">    ip_hash;</span><br><span class=\"line\">    server 127.0.0.1:9001 down;</span><br><span class=\"line\">    server 127.0.0.1:9002 backup;</span><br><span class=\"line\">    server 127.0.0.1:9003 weight=2;</span><br><span class=\"line\">    server 127.0.0.1:9004 max_fails=2 fail_timeout=60s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置为系统服务\">配置为系统服务</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>yum安装自带系统服务</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入service服务目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /etc/init.d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建并编辑nginx文件</span></span><br><span class=\"line\">vim nginx</span><br><span class=\"line\"><span class=\"comment\"># 写入如下内容：</span></span><br><span class=\"line\">    <span class=\"built_in\">set</span> -e</span><br><span class=\"line\">    PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class=\"line\">    DESC=<span class=\"string\">&quot;nginx daemon&quot;</span></span><br><span class=\"line\">    NAME=nginx</span><br><span class=\"line\">    DAEMON=/usr/local/nginx-1.22.1/sbin/<span class=\"variable\">$NAME</span></span><br><span class=\"line\">    SCRIPTNAME=/etc/init.d/<span class=\"variable\">$NAME</span></span><br><span class=\"line\">    <span class=\"built_in\">test</span> -x <span class=\"variable\">$DAEMON</span> || <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">d_start</span></span>()&#123;</span><br><span class=\"line\">        <span class=\"variable\">$DAEMON</span> || <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot; already running&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">d_stop</span></span>() &#123;</span><br><span class=\"line\">        <span class=\"variable\">$DAEMON</span> -s quit || <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot; not running&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">d_reload</span></span>() &#123;</span><br><span class=\"line\">        <span class=\"variable\">$DAEMON</span> -s reload || <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot; counld not reload&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">d_status</span></span>() &#123;</span><br><span class=\"line\">        pid=`ps ax | grep -i <span class=\"string\">&#x27;nginx: master&#x27;</span> | grep -v grep | awk <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class=\"line\">        <span class=\"keyword\">if</span> [ -z <span class=\"string\">&quot;<span class=\"variable\">$pid</span>&quot;</span> ] ; <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;No nginx-server running.&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;The nginx-server(<span class=\"variable\">$&#123;pid&#125;</span>) is running&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">fi</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">        start)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;Starting <span class=\"variable\">$DESC</span>:<span class=\"variable\">$NAME</span>&quot;</span></span><br><span class=\"line\">            d_start</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;.&quot;</span></span><br><span class=\"line\">        ;;</span><br><span class=\"line\">        stop)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;Stopping <span class=\"variable\">$DESC</span>:<span class=\"variable\">$NAME</span>&quot;</span></span><br><span class=\"line\">            d_stop</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;.&quot;</span></span><br><span class=\"line\">        ;;</span><br><span class=\"line\">        reload)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;Reloading <span class=\"variable\">$DESC</span> configuration...&quot;</span></span><br><span class=\"line\">            d_reload</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;reloaded.&quot;</span></span><br><span class=\"line\">        ;;</span><br><span class=\"line\">        restart)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;Restarting <span class=\"variable\">$DESC</span>: <span class=\"variable\">$NAME</span>&quot;</span></span><br><span class=\"line\">            d_stop</span><br><span class=\"line\">            <span class=\"built_in\">sleep</span> 2</span><br><span class=\"line\">            d_start</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;.&quot;</span></span><br><span class=\"line\">        ;;</span><br><span class=\"line\">        status)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> -n <span class=\"string\">&quot;Check <span class=\"variable\">$DESC</span> status...&quot;</span></span><br><span class=\"line\">            d_status</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;.&quot;</span></span><br><span class=\"line\">        ;;</span><br><span class=\"line\">        *)</span><br><span class=\"line\">            <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Usage: <span class=\"variable\">$SCRIPTNAME</span> &#123;start|stop|restart|reload|status&#125;&quot;</span> &gt;&amp;2</span><br><span class=\"line\">            <span class=\"built_in\">exit</span> 3</span><br><span class=\"line\">        ;;</span><br><span class=\"line\">    <span class=\"keyword\">esac</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 授予执行权限</span></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> +x nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 服务管理</span></span><br><span class=\"line\">service nginx start</span><br><span class=\"line\">service nginx stop</span><br><span class=\"line\">service nginx status</span><br><span class=\"line\">service nginx reload</span><br><span class=\"line\">service nginx restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里使用 systemctl 同样可以，因为systemctl兼容service</span></span><br><span class=\"line\">systemctl start nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加入开机启动</span></span><br><span class=\"line\">chkconfig nginx on</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭开启启动</span></span><br><span class=\"line\">chkconfig nginx off</span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> nginx</span><br></pre></td></tr></table></figure>","content_text":"摘要 虽然绝大部分软件都可以通过rpm或者yum的方式进行安装，但是由于yum中的版本不一定是最新版，或者软件开发商没有将软件放到yum源中，所有也有一些软件需要通过源代码的方式进行安装。 本文以源代码安装nginx为例说明如何通过源代码安装软件。 本文基于CentOS8(x86_64) 安装nginx 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970# 安装nginx最小依赖yum install gcc zlib zlib-devel pcre-devel openssl openssl-devel# 如果通过yum安装nginx，只需要执行如下命令yum install nginx -y # 本文不通过yum安装# 下载nginx最新稳定版wget https://nginx.org/download/nginx-1.22.1.tar.gz# 解压tar -zxvf nginx-1.22.1.tar.gz# 进入解压后的目录cd nginx-1.22.1# 检查配置并指定安装参数./configure --with-http_stub_status_module --with-http_ssl_module # 参数说明 --with-http_ssl_module :安装ssl模块 --with-http_stub_status_module :查看nginx的客户端状态模块 # 输出内容，所有文件的默认路径 Configuration summary + using system PCRE library + using system OpenSSL library + using system zlib library nginx path prefix: &quot;/usr/local/nginx&quot; nginx binary file: &quot;/usr/local/nginx/sbin/nginx&quot; nginx modules path: &quot;/usr/local/nginx/modules&quot; nginx configuration prefix: &quot;/usr/local/nginx/conf&quot; nginx configuration file: &quot;/usr/local/nginx/conf/nginx.conf&quot; nginx pid file: &quot;/usr/local/nginx/logs/nginx.pid&quot; nginx error log file: &quot;/usr/local/nginx/logs/error.log&quot; nginx http access log file: &quot;/usr/local/nginx/logs/access.log&quot; nginx http client request body temporary files: &quot;client_body_temp&quot; nginx http proxy temporary files: &quot;proxy_temp&quot; nginx http fastcgi temporary files: &quot;fastcgi_temp&quot; nginx http uwsgi temporary files: &quot;uwsgi_temp&quot; nginx http scgi temporary files: &quot;scgi_temp&quot;# 也可以自定义安装路径./configure --prefix=/usr/local/nginx-1.22.1 --with-http_stub_status_module --with-http_ssl_module # 参数说明 --prefix=/usr/local/nginx-1.22.1 :安装路径 #输出内容，此时看到所有文件都会被安装到指定的路径 Configuration summary + using system PCRE library + using system OpenSSL library + using system zlib library nginx path prefix: &quot;/usr/local/nginx-1.22.1&quot; nginx binary file: &quot;/usr/local/nginx-1.22.1/sbin/nginx&quot; nginx modules path: &quot;/usr/local/nginx-1.22.1/modules&quot; nginx configuration prefix: &quot;/usr/local/nginx-1.22.1/conf&quot; nginx configuration file: &quot;/usr/local/nginx-1.22.1/conf/nginx.conf&quot; nginx pid file: &quot;/usr/local/nginx-1.22.1/logs/nginx.pid&quot; nginx error log file: &quot;/usr/local/nginx-1.22.1/logs/error.log&quot; nginx http access log file: &quot;/usr/local/nginx-1.22.1/logs/access.log&quot; nginx http client request body temporary files: &quot;client_body_temp&quot; nginx http proxy temporary files: &quot;proxy_temp&quot; nginx http fastcgi temporary files: &quot;fastcgi_temp&quot; nginx http uwsgi temporary files: &quot;uwsgi_temp&quot; nginx http scgi temporary files: &quot;scgi_temp&quot;# 编译make# 将相关文件拷贝到 --prefix 指定的安装目录中make install 配置和管理nginx 上面就完成了nginx安装，之后我们可以根据需要对配置文件进行修改，并启动nginx 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465# 假设我们将nginx安装到了自定义安装路径/usr/local/nginx-1.22.1下cd /usr/local/nginx-1.22.1ls -1conf :nginx配置文件目录html :默认web根目录logs :默认日志输出目录sbin :启动命令nginx所在目录，make后真正有用的就这个nginx命令，重新编译就是为了重新生成新的nginx命令# 将nginx命令软连接到系统命令路径下，因为/usr/bin/已经被加入到PATH中了ln -s /usr/local/nginx-1.22.1/sbin/nginx /usr/bin/# 查看nginx版本，测试nginx命令是否全局可用nginx -vnginx version: nginx/1.22.1# 创建nginx用户和组$ groupadd nginx$ useradd -g nginx nginx# 修改配置文件vim /usr/local/nginx-1.22.1/conf/nginx.conf # 为了方便演示，这里仅仅修改如下两项内容 # worker用户，这里配置为我们上面创建的nginx用户和nginx组 user nginx nginx; # 启动2个worker进程 worker_processes 2;# 检查配置文件是否正确nginx -tnginx: the configuration file /usr/local/nginx-1.22.1/conf/nginx.conf syntax is oknginx: configuration file /usr/local/nginx-1.22.1/conf/nginx.conf test is successful# 如果配置文件被修改了，可以通过该命令重新加载新的配置，而不需要重新启动nginxnginx -s reload# 启动nginx# 会使用默认的配置文件nginx# 启动时指定配置文件nginx -c /usr/local/nginx-1.22.1/conf/nginx.conf# 查看进程ps -ef | grep nginxroot 18538 1 0 11:11 ? 00:00:00 nginx: master process nginxnginx 18592 18538 0 11:22 ? 00:00:00 nginx: worker processnginx 18593 18538 0 11:22 ? 00:00:00 nginx: worker process# 查看端口netstat -tunpl | grep nginxtcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 18538/nginx: master# 立即停止nginxnginx -s stop# 从容停止nginxkill -QUIT `cat /usr/local/nginx-1.22.1/logs/nginx.pid`# 立即重启nginxnginx -s stopnginx# 平滑重启nginxkill -HUP `cat /usr/local/nginx-1.22.1/logs/nginx.pid` # 只会重启worker进程 为nginx添加新的模块 nginx安装成功后，发现有一些其他模块没有编译进去，或者想额外添加一些模块，这时候就要重新编译nginx。 重新编译之前，需要查看之前安装时的参数 123456$ nginx -Vnginx version: nginx/1.22.1built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC)built with OpenSSL 1.0.2k-fips 26 Jan 2017TLS SNI support enabledconfigure arguments: --prefix=/usr/local/nginx-1.22.1 --with-http_stub_status_module --with-http_ssl_module configure arguments中就是之前编译安装时配置的参数 如添加新的模块http_gzip_static_module，预读gzip功能 123456789101112131415161718192021222324252627282930313233343536373839404142# 进入nginx源码目录cd /usr/local/soft/nginx-1.22.1# 检查配置并指定安装参数，使用上面得到的上一次安装的参数，还要将新的模块也加上./configure --prefix=/usr/local/nginx-1.22.1 --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module# 编译，注意不要执行 make install，因为我们只需要得到nginx命令，运行make install会覆盖之前的所有目录make# 先备份原先的nginx命令cp /usr/local/nginx-1.22.1/sbin/nginx /usr/local/nginx-1.22.1/sbin/nginx.bak# 将新生成的nginx命令复制到安装目录中cp ./objs/nginx /usr/local/nginx-1.22.1/sbin/nginx# 此时如果遇到提示 cp: 无法创建普通文件&quot;/usr/local/nginx-1.22.1/sbin/nginx&quot;: 文本文件忙 , 可以通过如下命令进行复制cp -rfp ./objs/nginx /usr/local/nginx-1.22.1/sbin/nginx# 重启nginxnginx -s stopnginx# 平滑重启nginx(没好使)make upgrade # 会执行Makefile下的如下命令，也可以手工按如下命令进行平滑重启 upgrade: /usr/local/nginx-1.22.1/sbin/nginx -t # 原因是执行如下命令没有创建新的master进程 kill -USR2 `cat /usr/local/nginx-1.22.1/logs/nginx.pid` sleep 1 test -f /usr/local/nginx-1.22.1/logs/nginx.pid.oldbin kill -QUIT `cat /usr/local/nginx-1.22.1/logs/nginx.pid.oldbin`# 查看是否是新的nginxnginx -Vnginx version: nginx/1.22.1built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC)built with OpenSSL 1.0.2k-fips 26 Jan 2017TLS SNI support enabledconfigure arguments: --prefix=/usr/local/nginx-1.22.1 --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module 安装第三方模块，configure中需要添加--add-module=module_dir，具体查看第三方模块官网说明即可 nginx编译时可以添加哪些参数 以下是通过yum安装nginx时的编译参数 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990# 指定nginx安装路径，至少web根目录在该路径下--prefix=/usr/share/nginx# 指定nginx命令安装路径--sbin-path=/usr/sbin/nginx# 指定模块安装路径--modules-path=/usr/lib64/nginx/modules# 指定主配置文件--conf-path=/etc/nginx/nginx.conf# 指定错误日志--error-log-path=/var/log/nginx/error.log# 指定访问日志--http-log-path=/var/log/nginx/access.log# 设定http客户端请求临时文件路径--http-client-body-temp-path=/var/lib/nginx/tmp/client_body# 设定http代理临时文件路径--http-proxy-temp-path=/var/lib/nginx/tmp/proxy# 设定http fastcgi临时文件路径，基本就是php缓存--http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi# 设定http uwsgi临时文件路径，python缓存路径--http-uwsgi-temp-path=/var/lib/nginx/tmp/uwsgi# 设定http scgi临时文件路径--http-scgi-temp-path=/var/lib/nginx/tmp/scgi# master进程ID--pid-path=/run/nginx.pid# 锁路径，防止重复启动nginx--lock-path=/run/lock/subsys/nginx# worker进程的用户和组--user=nginx --group=nginx# 启用动态模块兼容性--with-compat# 启用debug日志--with-debug# 使用nginx的aio特性会大大提高性能，比如图片站的特点是大量的读io操作，nginx aio不用等待每次io的结果，有助于并发处理大量io和提高nginx处理效率。# aio的优点就是能够同时提交多个io请求给内核，然后直接由内核的io调度算法去处理这些请求(directio)，这样的话，内核就有可能执行一些合并，节约了读取文件的处理时间。# 异步非阻塞--with-file-aio# 调试用，剖析程序性能瓶颈--with-google_perftools_module# 作为一个输出过滤器，支持不完全缓冲，分部分响应请求。在nginx响应之前或者之后追加文本内容，比如想在站点底部追加一个js广告或者新增的css样式--with-http_addition_module# 认证模块，实现基于一个子请求的结果的客户端授权。如果该子请求返回的2xx响应代码，所述接入是允许的。如果它返回401或403中，访问被拒绝与相应的错误代码。由子请求返回的任何其他响应代码被认为是一个错误。--with-http_auth_request_module# WebDAV模块，增加 PUT,DELETE,MKCOL,COPY和MOVE方法。默认情况下为关闭# 扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可直接对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。--with-http_dav_module# 允许在内存不足的情况下返回204或444码--with-http_degradation_module# 提供寻求内存使用基于时间的偏移量文件--with-http_flv_module# 它为不支持“gzip”编码方法的客户端解压具有“Content-Encoding: gzip”头的响应。--with-http_gunzip_module# 在线实时压缩输出数据流--with-http_gzip_static_module# 传输JPEG/GIF/PNG 图片的一个过滤器）（默认为不启用。gd库要用到）--with-http_image_filter_module=dynamic# 多媒体模块--with-http_mp4_module--with-http_perl_module=dynamic# nginx显示随机首页模块--with-http_random_index_module# Nginx获取真实IP模块，这个模块允许从请求标头更改客户端的IP地址值，默认为关--with-http_realip_module# nginx安全下载模块--with-http_secure_link_module# nginx中文文档--with-http_slice_module# 安装ssl模块--with-http_ssl_module# 查看nginx客户端状态模块--with-http_stub_status_module# 允许用一些其他文本替换nginx响应中的一些文本--with-http_sub_module# 提供HTTP2支持，要使用http2，还需要同时启用ssl服务，nginx1.19.1之前的版本不支持http2--with-http_v2_module# 过滤转换XML请求--with-http_xslt_module=dynamic# 启用POP3/IMAP4/SMTP代理模块支持--with-mail=dynamic --with-mail_ssl_module# 支持正则，使nginx支持http rewrite模块--with-pcre# 编译PCRE包含“just-in-time compilation”--with-pcre-jit# TCP\\UDP负载均衡模块。nginx从1.9.0开始，新增加了一个stream模块，用来实现四层协议的转发、代理或者负载均衡等。--with-stream=dynamic --with-stream_ssl_module --with-stream_ssl_preread_module# 支持多线程模块--with-threads# 设置C编译器参数--with-cc-opt=&#x27;-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic&#x27;# 设置连接文件参数--with-ld-opt=&#x27;-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -Wl,-E&#x27; 其它参数 123456789101112# 启用ipv6支持--with-ipv6# SPDY可以缩短网页的加载时间--with-http_spdy_module# 该模块创建基于与MaxMind GeoIP二进制文件相配的客户端IP地址的ngx_http_geoip_module变量--with-http_geoip_module# 计算和检查要求所需的安全链接网址--with-http_secure_link_module# 禁用http cache功能--without-http-cache# 启用外部模块支持--add-module=module_dir nginx编译安装出现的常见错误 参照yum安装nginx的配置进行手工编译 12345678./configure --prefix=/usr/local/nginx-1.22.1 --user=nginx --group=nginx --with-compat --with-debug \\--with-file-aio --with-google_perftools_module --with-http_addition_module --with-http_auth_request_module \\--with-http_dav_module --with-http_degradation_module --with-http_flv_module --with-http_gunzip_module \\--with-http_gzip_static_module --with-http_image_filter_module=dynamic --with-http_mp4_module \\--with-http_perl_module=dynamic --with-http_random_index_module --with-http_realip_module \\--with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module \\--with-http_sub_module --with-http_v2_module --with-http_xslt_module=dynamic --with-mail=dynamic --with-mail_ssl_module \\--with-pcre --with-pcre-jit --with-stream=dynamic --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads ./configure: error: the HTTP rewrite module requires the PCRE library.You can either disable the module by using --without-http_rewrite_module option, or install the PCRE library into the system, or build the PCRE library statically from the source with nginx by using --with-pcre= option. 1yum install pcre pcre-devel ./configure: error: SSL modules require the OpenSSL library.You can either do not enable the modules, or install the OpenSSL library into the system, or build the OpenSSL library statically from the source with nginx by using --with-openssl= option. 1yum install openssl openssl-devel ./configure: error: the HTTP XSLT module requires the libxml2/libxslt libraries. You can either do not enable the module or install the libraries. 1yum install libxml2 libxml2-devel libxslt libxslt-devel ./configure: error: the HTTP image filter module requires the GD library. You can either do not enable the module or install the libraries. 1yum install gd gd-devel ./configure: error: perl module ExtUtils::Embed is required 1yum install perl-ExtUtils-Embed ./configure: error: the Google perftools module requires the Google perftools library. You can either do not enable the module or install the library 1yum install google-perftools google-perftools-devel Nginx 配置文件 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118# 全局参数设置#user nobody;user nginx; # worker进程用户worker_processes 2; # 设置nginx启动进程的数量，一般设置成与逻辑cpu数量相同#error_log logs/error.log; # 指定错误日志#error_log logs/error.log notice;#error_log logs/error.log info;# worker_rlimit_nofile 102400; # 设置一个nginx进程能打开的最大文件数# pid /run/nginx.pid;# 加载模块配置文件# include conf.d/modules/*.conf;load_module modules/ngx_stream_module.so; # 加载stream模块events &#123; # 事件配置 worker_connections 1024; # 设置一个进程的最大并发连接数 # use epoll; # 事件驱动类型&#125;# tcp反向代理示例，与http配置同级stream &#123; # include conf.d/stream/*.conf include conf.d/stream/redis.conf&#125;# http 服务相关设置http &#123; include mime.types; # 关联mime类型，关联资源的媒体类型(不同的媒体类型的打开方式) default_type application/octet-stream; # 根据文件的后缀来匹配相应的MIME类型，并写入Response header，导致浏览器播放文件而不是下载 # 访问日志格式 log_format main &#x27;remote_addr - remote_user [time_local] &quot;request&quot; &#x27; &#x27;status body_bytes_sent &quot;$http_referer&quot; &#x27; &#x27;&quot;http_user_agent&quot; &quot;http_x_forwarded_for&quot;&#x27;; access_log logs/access.log main; #设置访问日志的位置和格式 sendfile on; # 用于开启文件高效传输模式，一般设置为on，若nginx是用来进行磁盘IO负载应用时，可以设置为off，降低系统负载 tcp_nopush on; # 减少网络报文段数量，当有数据时，先别着急发送, 确保数据包已经装满数据, 避免了网络拥塞 tcp_nodelay on; # 提高I/O性能，确保数据尽快发送, 提高可数据传输效率 # gzip on; # 是否开启 gzip 压缩 keepalive_timeout 65; # 设置长连接的超时时间，请求完成之后还要保持连接多久，不是请求时间多久，目的是保持长连接，减少创建连接过程给系统带来的性能损耗，类似于线程池，数据库连接池 types_hash_max_size 4096; # 影响散列表的冲突率。types_hash_max_size 越大，就会消耗更多的内存，但散列key的冲突率会降低，检索速度就更快。types_hash_max_size越小，消耗的内存就越小，但散列key的冲突率可能上升 # 加载子配置文件 # include /usr/local/nginx-1.22.1/conf/conf.d/*.conf; # http反向代理示例 include conf.d/http/tomcat.conf # 虚拟服务器的相关设置 server &#123; listen 80; # 设置监听的端口 server_name localhost; # 设置绑定的主机名、域名或ip地址 #charset koi8-r; # 设置编码字符 #access_log logs/host.access.log main; location / &#123; root html; # 设置服务器默认网站的根目录位置 index index.html index.htm; # 设置默认打开的文档 &#125; # error_page 404 /404.html; error_page 500 502 503 504 /50x.html; # 设置错误信息返回页面 location = /50x.html &#123; root html &#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ &#123; # proxy_pass http://127.0.0.1; #&#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache&#x27;s document root # concurs with nginx&#x27;s one # #location ~ /\\.ht &#123; # deny all; #&#125; &#125; # HTTPS server # #server &#123; # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / &#123; # root html; # index index.html index.htm; # &#125; #&#125;&#125; tomcat.conf 1234567891011121314151617181920212223242526272829303132upstream tomcats &#123; server 192.168.0.1:8080; server 192.168.0.2:8080;&#125;server &#123; listen 8088; server_name localhost tomcat.domain; location / &#123; proxy_pass http://tomcats; #这个名称和要上面 upstream tomcats 对应 proxy_redirect default; proxy_http_version 1.1; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_max_temp_file_size 0; #this is the maximum upload size client_max_body_size 10m; client_body_buffer_size 128k; proxy_connect_timeout 90; proxy_send_timeout 90; proxy_read_timeout 90; proxy_buffering off; proxy_request_buffering off; # Required for HTTP CLI commands proxy_set_header Connection &quot;&quot;; # Clear for keepalive &#125;&#125; redis.conf 1234567891011upstream redis&#123; server 192.168.0.1:6379; server 192.168.0.2:6379;&#125;server &#123; listen 8888; #监听本机所有IP的8888端口 proxy_connect_timeout 10s; #连接超时时间 proxy_timeout 10s; #转发超时时间 proxy_pass redis; #这个名称和要上面 upstream redis 对应&#125; upstream配置说明 12345678910111213141516upstream还可以为每个设备设置状态值，这些状态值的含义分别如下：- down：表示当前的server暂时不参与负载.- weight：默认为1，weight越大，负载的权重就越大。- max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误.- fail_timeout : max_fails次失败后，暂停的时间。- backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。- ip_hash（访问ip）:每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。示例：upstream tomcats&#123; ip_hash; server 127.0.0.1:9001 down; server 127.0.0.1:9002 backup; server 127.0.0.1:9003 weight=2; server 127.0.0.1:9004 max_fails=2 fail_timeout=60s;&#125; 配置为系统服务 yum安装自带系统服务 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586# 进入service服务目录cd /etc/init.d# 创建并编辑nginx文件vim nginx# 写入如下内容： set -e PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin DESC=&quot;nginx daemon&quot; NAME=nginx DAEMON=/usr/local/nginx-1.22.1/sbin/$NAME SCRIPTNAME=/etc/init.d/$NAME test -x $DAEMON || exit 0 d_start()&#123; $DAEMON || echo -n &quot; already running&quot; &#125; d_stop() &#123; $DAEMON -s quit || echo -n &quot; not running&quot; &#125; d_reload() &#123; $DAEMON -s reload || echo -n &quot; counld not reload&quot; &#125; d_status() &#123; pid=`ps ax | grep -i &#x27;nginx: master&#x27; | grep -v grep | awk &#x27;&#123;print $1&#125;&#x27;` if [ -z &quot;$pid&quot; ] ; then echo -n &quot;No nginx-server running.&quot; else echo -n &quot;The nginx-server($&#123;pid&#125;) is running&quot; fi &#125; case &quot;$1&quot; in start) echo -n &quot;Starting $DESC:$NAME&quot; d_start echo &quot;.&quot; ;; stop) echo -n &quot;Stopping $DESC:$NAME&quot; d_stop echo &quot;.&quot; ;; reload) echo -n &quot;Reloading $DESC configuration...&quot; d_reload echo &quot;reloaded.&quot; ;; restart) echo -n &quot;Restarting $DESC: $NAME&quot; d_stop sleep 2 d_start echo &quot;.&quot; ;; status) echo -n &quot;Check $DESC status...&quot; d_status echo &quot;.&quot; ;; *) echo &quot;Usage: $SCRIPTNAME &#123;start|stop|restart|reload|status&#125;&quot; &gt;&amp;2 exit 3 ;; esac exit 0# 授予执行权限chmod +x nginx# 服务管理service nginx startservice nginx stopservice nginx statusservice nginx reloadservice nginx restart# 这里使用 systemctl 同样可以，因为systemctl兼容servicesystemctl start nginx# 加入开机启动chkconfig nginx onsystemctl enable nginx# 关闭开启启动chkconfig nginx offsystemctl disable nginx","summary":"摘要 虽然绝大部分软件都可以通过rpm或者yum的方式进行安装，但是由于yum中的版本不一定是最新版，或者软件开发商没有将软件放到yum源中，所有也有一些软件需要通过源代码的方式进行安装。 本文以源代码安装nginx为例说明如何通过源代码安装软件。 本文基于CentOS8(x86_64)","date_published":"2023-03-21T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/17/linux-command08-rpm-yum/","url":"https://blog.hanqunfeng.com/2023/03/17/linux-command08-rpm-yum/","title":"Linux常用命令--rpm与yum","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在Linux发行版中，几乎每一个发行版都有自己的软件包管理系统。</p>\n</li>\n<li class=\"lvl-2\">\n<p>常见的有适用于<code>debian</code>、<code>Ubuntu</code>等系统的<code>dpkg</code>、<code>apt-get</code>以及它们的前端<code>aptitude</code>，以及适用于<code>RedHat</code>、<code>Fedora</code>系统的<code>rpm</code>以及它的前端<code>yum</code>。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>CentOS</code>系统从属于<code>RedHat</code>系列，其软件包管理系统有RPM和YUM，本文基于<code>CentOS8(x86_64)</code>介绍它们的使用方法。</p>\n</li>\n<li class=\"lvl-2\">\n<p>从CentOS 8开始，系统默认的软件包管理器是<code>dnf</code>，系统提供的<code>yum</code>命令仅为<code>dnf</code>命令的软链接。<code>dnf</code>是<code>dandified yum</code>的简称，是基于rpm软件包的Linux发行版本的软件包管理器。</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"RPM\">RPM</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>RPM，全称RPM Package Manager，是由Red Hat推出的软件包管理系统，现在在各种发行版中普遍适用。</p>\n</li>\n<li class=\"lvl-2\">\n<p>RRM软件包是将程序源代码经过编译和封装以后形成的包文件，在软件包里面会封装软件的二进制程序、配置文件、帮助手册、库文件以及头文件等。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>rpm</code>默认安装，但是RPM存在依赖关系问题</p>\n</li>\n</ul>\n<h3 id=\"rpm参数说明\">rpm参数说明</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm ［options］ /path/to/rpmfile</span><br><span class=\"line\">　　</span><br><span class=\"line\">option：</span><br><span class=\"line\">　　-i|--install：      安装指定软件</span><br><span class=\"line\">　　-v|--verbose：      显示安装过程</span><br><span class=\"line\">　　-e|--erase：        卸载指定的软件</span><br><span class=\"line\">　　-h|--<span class=\"built_in\">hash</span>：         以<span class=\"comment\">#的方式显示安装进度条，一个#为2%</span></span><br><span class=\"line\">　　-q|--query：        查询rpm相关信息</span><br><span class=\"line\">　　--nodeps：          不检测依赖性安装。软件安装时会检测依赖性，确定所需的底层软件是否安装，如果没有安装则会报错。如果不管依赖性，想强制安装，则可以使用这个选项。注意，这样不检测依赖性安装的软件基本上是不能使用的，所以不建议这样做。</span><br><span class=\"line\">　　--<span class=\"built_in\">test</span>：            测试安装。不会实际安装，只是检测一下依赖性。</span><br><span class=\"line\">　　-U：                升级+安装（如果之前有安装则升级，如果之前没有安装则安装）</span><br><span class=\"line\">　　-F：                升级（如果之前有安装则升级，如果之前没安装则不做任何操作）</span><br><span class=\"line\">　　--replacepkgs：     替换软件包安装。如果软件包已经安装，那么此选项可以把软件包重复安装一遍。</span><br><span class=\"line\">　　--replacefiles：    替换文件安装。如果要安装软件包，但是包中的部分文件已经存在，那么在正常安装时会报<span class=\"string\">&quot;某个文件已经存在&quot;</span>的错误，从而导致软件无法安装。使用这个选项可以忽略这个报错而覆盖安装。</span><br><span class=\"line\">　　--force：           在软件包的安装或升级过程中，如果出现某个文件已经安装或者某一个软件已经安装时</span><br><span class=\"line\">　　                    可以使用 --force 选项强制安装，等同于 --replacepkgs --replacefiles --oldpackage 同时使用</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装rpm\">安装rpm</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里以安装jdk举例，先下载jdk的rpm包</span></span><br><span class=\"line\">curl -o ./jdk-17_linux-x64_bin.rpm https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\"><span class=\"comment\"># -ivh 安装rpm包，建议安装前先查询当前系统是否已经安装了相关的软件包</span></span><br><span class=\"line\">rpm -ivh jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\"><span class=\"comment\"># --test 只对安装进行测试，不实际安装</span></span><br><span class=\"line\">rpm -ivh --<span class=\"built_in\">test</span> jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\"><span class=\"comment\"># --nodeps 安装时忽略依赖，软件有可能不可用</span></span><br><span class=\"line\">rpm -ivh --nodeps jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\"><span class=\"comment\"># --force 强制安装，如果已经安装过该软件或者有文件冲突都进行强制安装</span></span><br><span class=\"line\">rpm -ivh --force jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\"><span class=\"comment\"># --prefix 指定安装路径，而不使用默认的安装路径，不推荐</span></span><br><span class=\"line\">rpm -ivh --prefix /usr/local/soft/jdk17 jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 升级安装</span></span><br><span class=\"line\">rpm -Uvh jdk-17_linux-x64_bin.rpm</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>RPM 包默认安装路径</strong></em></p>\n<table>\n<thead>\n<tr>\n<th>安装路径</th>\n<th>含 义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/etc/</td>\n<td>配置文件安装目录</td>\n</tr>\n<tr>\n<td>/usr/bin/</td>\n<td>可执行的命令安装目录</td>\n</tr>\n<tr>\n<td>/usr/lib/</td>\n<td>程序所使用的函数库保存位置</td>\n</tr>\n<tr>\n<td>/usr/share/doc/</td>\n<td>基本的软件使用手册保存位置</td>\n</tr>\n<tr>\n<td>/usr/share/man/</td>\n<td>帮助文件保存位置</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"rpm-q：查询软件包是否安装\">rpm -q：查询软件包是否安装</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询当前系统已经安装的所有包</span></span><br><span class=\"line\">rpm -qa</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询当前系统是否安装了软件包名称中含有jdk的软件包</span></span><br><span class=\"line\">rpm -qa | grep jdk</span><br><span class=\"line\"><span class=\"comment\"># 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔</span></span><br><span class=\"line\">rpm -q jdk-17</span><br><span class=\"line\"><span class=\"comment\"># 通过命令查询是否安装，一般通过yum安装的软件可以通过这种方式进行查询</span></span><br><span class=\"line\">rpm -q zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"rpm-qp：查询rpm包安装后的软件包名称\">rpm -qp：查询rpm包安装后的软件包名称</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询rpm包安装后的软件包名称，p 表示查询的是rpm文件</span></span><br><span class=\"line\">rpm -qp jdk-17_linux-x64_bin.rpm</span><br></pre></td></tr></table></figure>\n<h3 id=\"rpm-qi：查询软件包的详细信息\">rpm -qi：查询软件包的详细信息</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询软件包描述信息，通过rpm文件名称</span></span><br><span class=\"line\">rpm -qip jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\"><span class=\"comment\"># 查询软件包描述信息，通过安装后的软件包名称，此时可以不加后面的.x86_64后缀，下面的命令也是这样</span></span><br><span class=\"line\">rpm -qi jdk-17-17.0.6-9.x86_64</span><br><span class=\"line\"><span class=\"comment\"># 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔</span></span><br><span class=\"line\">rpm -qi jdk-17</span><br><span class=\"line\"><span class=\"comment\"># 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询</span></span><br><span class=\"line\">rpm -qi zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"rpm-ql：命令查询软件包的文件列表\">rpm -ql：命令查询软件包的文件列表</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询软件包中的文件列表，通过rpm文件名称</span></span><br><span class=\"line\">rpm -qlp jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\"><span class=\"comment\"># 查询软件包中的文件列表，通过安装后的软件包名称</span></span><br><span class=\"line\">rpm -ql jdk-17-17.0.6-9.x86_64</span><br><span class=\"line\"><span class=\"comment\"># 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔</span></span><br><span class=\"line\">rpm -ql jdk-17</span><br><span class=\"line\"><span class=\"comment\"># 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询</span></span><br><span class=\"line\">rpm -ql zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"rpm-qd：查询被标注为文档的文件列表\">rpm -qd：查询被标注为文档的文件列表</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示被标注为文档的文件列表</span></span><br><span class=\"line\">rpm -qdp jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\">rpm -qd jdk-17-17.0.6-9.x86_64</span><br><span class=\"line\"><span class=\"comment\"># 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔</span></span><br><span class=\"line\">rpm -qd jdk-17</span><br><span class=\"line\"><span class=\"comment\"># 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询</span></span><br><span class=\"line\">rpm -qd zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"rpm-qc：查询被标注为配置文件的文件列表\">rpm -qc：查询被标注为配置文件的文件列表</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示被标注为配置文件的文件列表</span></span><br><span class=\"line\">rpm -qcp jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\">rpm -qc jdk-17-17.0.6-9.x86_64</span><br><span class=\"line\"><span class=\"comment\"># 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔</span></span><br><span class=\"line\">rpm -qc jdk-17</span><br><span class=\"line\"><span class=\"comment\"># 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询</span></span><br><span class=\"line\">rpm -qc zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"rpm-qf：命令查询系统文件属于哪个RPM包\">rpm -qf：命令查询系统文件属于哪个RPM包</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询系统文件属于哪个RPM包</span></span><br><span class=\"line\">rpm -qf /usr/lib/jvm/jdk-17-oracle-x64/bin/java</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里注意，只能通过真实文件进行查询，软连接是查询不到的</p>\n</li>\n</ul>\n<h3 id=\"rpm-qR：查询软件包的依赖关系\">rpm -qR：查询软件包的依赖关系</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询软件包的依赖关系</span></span><br><span class=\"line\">rpm -qRp jdk-17_linux-x64_bin.rpm</span><br><span class=\"line\">rpm -qR jdk-17-17.0.6-9.x86_64</span><br><span class=\"line\"><span class=\"comment\"># 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔</span></span><br><span class=\"line\">rpm -qR jdk-17</span><br><span class=\"line\"><span class=\"comment\"># 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询</span></span><br><span class=\"line\">rpm -qR zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"卸载rpm\">卸载rpm</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过包名卸载指定的软件，此时会检查是否有其它软件对该软件有依赖，如果有依赖则不允许卸载</span></span><br><span class=\"line\">rpm -e jdk-17-17.0.6-9.x86_64</span><br><span class=\"line\"><span class=\"comment\"># 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔</span></span><br><span class=\"line\">rpm -e jdk-17</span><br><span class=\"line\"><span class=\"comment\"># --nodeps :不考虑依赖，强行卸载，不推荐使用，因为这样会导致其它依赖该软件的软件不可用</span></span><br><span class=\"line\">rpm -e --nodeps jdk-17-17.0.6-9.x86_64</span><br></pre></td></tr></table></figure>\n<h3 id=\"解压rpm\">解压rpm</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压安装包中的全部文件到当前目录</span></span><br><span class=\"line\">rpm2cpio jdk-17_linux-x64_bin.rpm | cpio -idv</span><br><span class=\"line\"><span class=\"comment\"># 解压安装包中的指定文件到当前目录，/usr/lib/jvm/jdk-17-oracle-x64/bin/java是rpm包中的文件路径，注意前面要加一个点</span></span><br><span class=\"line\">rpm2cpio jdk-17_linux-x64_bin.rpm | cpio -idv ./usr/lib/jvm/jdk-17-oracle-x64/bin/java</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>说明</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>rpm2cpio</code> : 将rpm包转换为<code>cpio</code>命令能处理的归档包格式。归档包，也可称为文件库，其实就是 <code>cpio</code> 或 <code>tar</code> 格式的文件。</li>\n<li class=\"lvl-6\"><code>cpio</code> 命令可以看做是备份或还原命令，因为它可以将数据（文件）备份到 cpio 归档包，也可以利用 cpio 文档库对数据进行恢复。</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">各选项的含义为：</span><br><span class=\"line\">-i：copy-in 模式，还原；</span><br><span class=\"line\">-v：显示还原过程；</span><br><span class=\"line\">-d：还原时自动新建目录；</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"rpm查看已安装的文件是否被修改过\">rpm查看已安装的文件是否被修改过</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>通过该命令可以快速查询通过<code>rpm</code>或<code>yum</code>安装的软件的相关文件(一般为配置文件)被修改过。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询系统中已安装的所有软件包</span></span><br><span class=\"line\">$ rpm -Va</span><br><span class=\"line\">.M....G..  g /var/log/lastlog</span><br><span class=\"line\">S.5....T.  c /etc/ssh/sshd_config</span><br><span class=\"line\">S.5....T.  c /etc/NetworkManager/NetworkManager.conf</span><br><span class=\"line\">S.5....T.  c /etc/sudoers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询指定软件包</span></span><br><span class=\"line\">$ rpm -V openssh-server</span><br><span class=\"line\">S.5....T.  c /etc/ssh/sshd_config  <span class=\"comment\"># 配置文件 sshd_config 的大小、内容、修改时间被人为修改过。因为我们修改了端口。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 校验某个系统文件是否被修改</span></span><br><span class=\"line\">$ rpm -Vf /etc/ssh/sshd_config</span><br><span class=\"line\">S.5....T.  c /etc/ssh/sshd_config</span><br><span class=\"line\"></span><br><span class=\"line\">可以看到，结果显示了文件被修改的信息。该信息可分为以下 3 部分：</span><br><span class=\"line\">1.最前面的 8 个字符（S.5....T）都属于验证信息，各字符的具体含义如下：</span><br><span class=\"line\">S：文件大小是否改变。</span><br><span class=\"line\">M：文件的类型或文件的权限（rwx）是否改变。</span><br><span class=\"line\">5：文件MD5校验和是否改变（可以看成文件内容是否改变）。</span><br><span class=\"line\">D：设备的主从代码是否改变。</span><br><span class=\"line\">L：文件路径是否改变。</span><br><span class=\"line\">U：文件的属主（所有者）是否改变。</span><br><span class=\"line\">G：文件的属组是否改变。</span><br><span class=\"line\">T：文件的修改时间是否改变。</span><br><span class=\"line\">.：若相关项没发生改变，用 . 表示。</span><br><span class=\"line\"></span><br><span class=\"line\">2.被修改文件类型，大致可分为以下几类：</span><br><span class=\"line\">c：配置文件（configuration file）。</span><br><span class=\"line\">d：普通文档（documentation）。</span><br><span class=\"line\">g：<span class=\"string\">&quot;鬼&quot;</span>文件（ghost file），很少见，就是该文件不应该被这个 RPM 包包含。</span><br><span class=\"line\">l：授权文件（license file）。</span><br><span class=\"line\">r：描述文件（<span class=\"built_in\">read</span> me）。</span><br><span class=\"line\"></span><br><span class=\"line\">3.被修改文件所在绝对路径（包含文件名）。</span><br></pre></td></tr></table></figure>\n<h3 id=\"rpm导入-安装-数字证书-公钥\">rpm导入(安装)数字证书(公钥)</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>数字证书，又称数字签名，由软件开发商直接发布。Linux 系统安装数字证书后，若 RPM 包做了修改，此包携带的数字证书也会改变，将无法与系统成功匹配，软件无法安装。</p>\n</li>\n<li class=\"lvl-2\">\n<p>系统默认证书在 <code>/efc/pki/rpm-gpg/</code> 下</p>\n</li>\n<li class=\"lvl-2\">\n<p>导入证书</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装本机证书，一般这个都会默认安装</span></span><br><span class=\"line\">rpm --import /efc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</span><br><span class=\"line\"><span class=\"comment\"># 安装第三方证书，如jenkins</span></span><br><span class=\"line\">rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>可以通过 <code>rpm -qa|grep gpg-pubkey</code> 查看已经导入的证书</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rpm -qa|grep gpg-pubkey</span><br><span class=\"line\">gpg-pubkey-8483c65d-5ccc5b19</span><br><span class=\"line\">gpg-pubkey-45f2c3d5-5e81efb9</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>数字证书本身也是一个 RPM 包，因此可以用 rpm 命令查询数字证书的详细信息，也可以将其卸载。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看证书信息</span></span><br><span class=\"line\">rpm -qi gpg-pubkey-8483c65d-5ccc5b19</span><br><span class=\"line\"><span class=\"comment\"># 卸载证书</span></span><br><span class=\"line\">rpm -e gpg-pubkey-8483c65d-5ccc5b19</span><br></pre></td></tr></table></figure>\n<h2 id=\"YUM\">YUM</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>yum</code>，全称<code>Yellow dog Updater, Modified</code>，是一个专门为了解决包的依赖关系而存在的软件包管理器。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>yum</code>是Linux中的 <em><strong>应用市场</strong></em> ，不仅可以通过<code>yum</code>完成软件包的下载、安装、卸载等，还解决了软件之间的依赖，当安装的软件包需要依赖其它软件包时，会一并进行安装。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>yum</code>命令一般为默认安装，<code>yum</code>底层就是基于<code>rpm</code>实现的软件包管理</p>\n</li>\n<li class=\"lvl-2\">\n<p>使用 yum 安装软件包之前，需指定好 yum 下载 RPM 包的位置，此位置称为 yum 源。换句话说，yum 源指的就是软件安装包的来源</p>\n</li>\n<li class=\"lvl-2\">\n<p>yum 源既可以使用网络 yum 源，也可以将本地光盘作为 yum 源。</p>\n</li>\n<li class=\"lvl-2\">\n<p>yum 源默认都是配置好的网络 yum 源，配置文件位于 <code>/etc/yum.repos.d/</code> 目录下，文件扩展名为 <code>*.repo</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>但是CentOS Linux 8 已经于 2021年12月31日 到期，Linux社区已不再维护该操作系统版本和软件源，所以我们可以将yum源切换到阿里云。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 备份原有的源文件</span></span><br><span class=\"line\">rename <span class=\"string\">&#x27;.repo&#x27;</span> <span class=\"string\">&#x27;.repo.bak&#x27;</span> /etc/yum.repos.d/*.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载阿里云的yum源文件，这里下载Centos-8的源文件，其它版本可以在 https://mirrors.aliyun.com/repo/ 中查找</span></span><br><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class=\"line\"><span class=\"comment\"># 非官方扩展源，这个也可以不提前下载，可以在配置好yum源后，通过 yum install -y epel-release 进行安装</span></span><br><span class=\"line\"><span class=\"comment\"># 如果在安装软件的时候，没有在Centos-8.repo中找到官方的下载链接，那么yum会自动去epel-release指向的链接处去查找，相当于epel-release给yum提供了更多的下载渠道。</span></span><br><span class=\"line\">curl -o /etc/yum.repos.d/epel-archive-8.repo https://mirrors.aliyun.com/repo/epel-archive-8.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理yum缓存并重新建立缓存</span></span><br><span class=\"line\">yum clean all &amp;&amp; yum makecache</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前的yum源信息</span></span><br><span class=\"line\">yum repolist</span><br><span class=\"line\"></span><br><span class=\"line\">仓库 <span class=\"built_in\">id</span>                      仓库名称</span><br><span class=\"line\">AppStream                    CentOS-8 - AppStream - mirrors.aliyun.com</span><br><span class=\"line\">base                         CentOS-8 - Base - mirrors.aliyun.com</span><br><span class=\"line\">epel-archive                 Extra Packages <span class=\"keyword\">for</span> Enterprise Linux 8 - x86_64</span><br><span class=\"line\">extras                       CentOS-8 - Extras - mirrors.aliyun.com</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum配置文件\">yum配置文件</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /etc/yum.conf</span><br><span class=\"line\"></span><br><span class=\"line\">[main]</span><br><span class=\"line\">cachedir=/var/cache/yum    <span class=\"comment\">#yum下载的RPM包的缓存目录</span></span><br><span class=\"line\">keepcache=0                <span class=\"comment\">#缓存的RPM是否保存，1保存，0不保存。</span></span><br><span class=\"line\">reposdir=/etc/yum.repos.d/ <span class=\"comment\">#指定 .repo 文件的绝对路径</span></span><br><span class=\"line\">debuglevel=2               <span class=\"comment\">#调试级别(0-10)，默认为2(具体调试级别的应用，我也不了解)。</span></span><br><span class=\"line\">logfile=/var/log/yum.log   <span class=\"comment\">#yum的日志文件所在的位置</span></span><br><span class=\"line\">exactarch=1                <span class=\"comment\">#在更新的时候，是否允许更新不同版本的RPM包，</span></span><br><span class=\"line\">                           <span class=\"comment\">#比如是否在i386上更新i686的RPM包。</span></span><br><span class=\"line\">obsoletes=1                <span class=\"comment\">#这是一个update的参数，具体请参阅yum(8)，</span></span><br><span class=\"line\">                           <span class=\"comment\">#简单的说就是相当于upgrade，允许更新陈旧的RPM包。</span></span><br><span class=\"line\">gpgcheck=1                 <span class=\"comment\">#是否检查GPG(GNU Private Guard)，一种密钥方式签名。</span></span><br><span class=\"line\">plugins=1                  <span class=\"comment\">#是否允许使用插件，默认是0不允许，</span></span><br><span class=\"line\">                           <span class=\"comment\">#但是我们一般会用yum-fastestmirror这个插件。</span></span><br><span class=\"line\">installonly_limit=3        <span class=\"comment\">#允许保留多少个内核包。</span></span><br><span class=\"line\">exclude=selinux*           <span class=\"comment\">#屏蔽不想更新的RPM包，可用通配符，多个RPM包之间使用空格分离。</span></span><br><span class=\"line\">distroverpkg=system-release <span class=\"comment\">#指定一个软件包，yum 会根据这个包判断你的发行版本</span></span><br><span class=\"line\"><span class=\"built_in\">timeout</span>=5                  <span class=\"comment\">#下载超时，秒</span></span><br><span class=\"line\">retries=7                  <span class=\"comment\">#下载重试次数</span></span><br><span class=\"line\">proxy=http://0.0.0.0:8080  <span class=\"comment\">#配置代理</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"yum搜索软件\">yum搜索软件</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示yum源中可以安装的全部软件</span></span><br><span class=\"line\">yum list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 搜索指定软件，显示软件名称、版本，以及所属仓库名称</span></span><br><span class=\"line\">yum list zip</span><br><span class=\"line\"><span class=\"comment\"># 搜索指定软件，显示软件名称和简介</span></span><br><span class=\"line\">yum search zip</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>搜索时推荐使用<code>yum list zip</code>的形式</p>\n</li>\n</ul>\n<h3 id=\"yum安装\">yum安装</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装过程中需要确认是否安装</span></span><br><span class=\"line\">yum install zip</span><br><span class=\"line\"><span class=\"comment\"># 不需要确认直接安装</span></span><br><span class=\"line\">yum install zip -y</span><br><span class=\"line\"><span class=\"comment\"># 重新安装yum</span></span><br><span class=\"line\">yum reinstall zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum卸载\">yum卸载</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 卸载软件，会询问是否卸载</span></span><br><span class=\"line\">yum remove zip</span><br><span class=\"line\"><span class=\"comment\"># 不询问直接卸载</span></span><br><span class=\"line\">yum remove zip -y</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>yum</code>卸载会同时卸载掉依赖包，可以使用<code>rpm</code>卸载单独的软件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -qa | grep ^zip</span><br><span class=\"line\">zip-3.0-23.el8.x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">rpm -e --nodeps zip-3.0-23.el8.x86_64</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum升级与降级\">yum升级与降级</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 检查是否有软件需要升级</span></span><br><span class=\"line\">yum check-update</span><br><span class=\"line\"><span class=\"comment\"># 检测指定软件是否可以升级</span></span><br><span class=\"line\">yum check-update zip</span><br><span class=\"line\"><span class=\"comment\"># 升级指定软件包，-y 不询问</span></span><br><span class=\"line\">yum upgrade zip -y</span><br><span class=\"line\"><span class=\"comment\"># 升级全部软件包，-y 不询问</span></span><br><span class=\"line\">yum upgrade -y</span><br><span class=\"line\"><span class=\"comment\"># 升级指定软件包，-y 不询问</span></span><br><span class=\"line\">yum update zip -y</span><br><span class=\"line\"><span class=\"comment\"># 升级全部软件包，-y 不询问</span></span><br><span class=\"line\">yum update -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 降级，降回到升级前的版本，-y 不询问</span></span><br><span class=\"line\">yum downgrade zip -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装软件包时可能会遇到冲突，比如要安装的软件包与当前已经安装的软件包存在冲突，可以添加  --allowerasing 进行替换安装</span></span><br><span class=\"line\">yum install --allowerasing curl</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong><code>yum upgrade</code>与<code>yum update</code>的区别</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\"><code>yum</code>配置文件<code>/etc/yum.conf</code>中，如果<code>obsoletes=1</code>，此时两者没有区别，都表示更新旧的rpm包的同时会删除旧包</li>\n<li class=\"lvl-2\">如果<code>obsoletes=0</code>，<code>yum upgrade</code>会删除旧版本的包，而<code>yum update</code>则会保留旧版本的包</li>\n<li class=\"lvl-2\">生产环境中建议使用<code>yum update</code>，防止因为替换，导致旧的软件包依赖出现问题</li>\n</ul>\n</div>\n<h3 id=\"yum查看软件依赖关系\">yum查看软件依赖关系</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum deplist zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum查看软件包描述信息\">yum查看软件包描述信息</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 类似于 rpm -qi</span></span><br><span class=\"line\">yum info zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum下载rpm包\">yum下载rpm包</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># yumdownloader 命令在软件包 yum-utils 里面</span></span><br><span class=\"line\">yum -y install yum-utils</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 会将docker的rpm包及其相关依赖的rpm包都下载到当前目录</span></span><br><span class=\"line\">yumdownloader --resolve docker</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --destdir 下载到指定目录</span></span><br><span class=\"line\">yumdownloader --resolve docker --destdir dockerDir</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum组：一次安装一组软件\">yum组：一次安装一组软件</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看可用组，会列出可用组名称</span></span><br><span class=\"line\">yum grouplist</span><br><span class=\"line\">yum group list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询组信息，会列出组内包含的所有软件，比如这里查询组名为 Development Tools 的信息</span></span><br><span class=\"line\">yum groupinfo <span class=\"string\">&quot;Development Tools&quot;</span></span><br><span class=\"line\">yum group info <span class=\"string\">&quot;Development Tools&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装组内所有软件</span></span><br><span class=\"line\">yum groupinstall <span class=\"string\">&quot;Development Tools&quot;</span></span><br><span class=\"line\">yum group install <span class=\"string\">&quot;Development Tools&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 卸载组内所有软件</span></span><br><span class=\"line\">yum groupremove <span class=\"string\">&quot;Development Tools&quot;</span></span><br><span class=\"line\">yum group remove <span class=\"string\">&quot;Development Tools&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 升级软件组</span></span><br><span class=\"line\">yum groupupdate <span class=\"string\">&quot;Development Tools&quot;</span></span><br><span class=\"line\">yum group update <span class=\"string\">&quot;Development Tools&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"重建yum元数据缓存\">重建yum元数据缓存</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清理无效信息</span></span><br><span class=\"line\">yum clean all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重建缓存</span></span><br><span class=\"line\">yum makecache</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">yum --refresh -v repolist</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum查看仓库配置\">yum查看仓库配置</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示启用的仓库简介信息</span></span><br><span class=\"line\">yum repolist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示全部的仓库简介信息，包括禁用的</span></span><br><span class=\"line\">yum repolist all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示详细信息</span></span><br><span class=\"line\">yum -v repolist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --refresh 显示信息前先重建缓存</span></span><br><span class=\"line\">yum --refresh -v repolist</span><br></pre></td></tr></table></figure>\n<h3 id=\"yum源配置\">yum源配置</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参数说明</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[xxx]：xxx为源仓库名称，一定要放在[]中。</span><br><span class=\"line\">name：源仓库说明，可以自己随便写。</span><br><span class=\"line\">mirrorlist：镜像站点列表，配置了这个就不需要配置baseurl</span><br><span class=\"line\">baseurl：yum 源仓库服务的地址。</span><br><span class=\"line\">enabled：此源仓库是否生效，如果不写或写成 enabled=1 则表示生效，写成 enabled=0 则表示不生效。</span><br><span class=\"line\">gpgcheck：如果为 1 则表示 RPM 的数字证书生效；如果为 0 则表示 RPM 的数字证书不生效。</span><br><span class=\"line\">gpgkey：数字证书的公钥文件保存位置。gpgcheck=1时需要指定地址，gpgcheck=0时，可以不配置。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用光盘配置本地源</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /mnt/cdrom</span><br><span class=\"line\"><span class=\"comment\"># 挂载光盘到/mnt/cdrom目录下，也可以将cdrom下的文件拷贝到任意路径下</span></span><br><span class=\"line\">mount /dev/cdrom /mnt/cdrom/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /etc/yum.repos.d</span><br><span class=\"line\"><span class=\"comment\"># 备份原有的源文件</span></span><br><span class=\"line\">rename <span class=\"string\">&#x27;.repo&#x27;</span> <span class=\"string\">&#x27;.repo.bak&#x27;</span> /etc/yum.repos.d/*.repo</span><br><span class=\"line\"></span><br><span class=\"line\">vi local-yum.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 内容为：可以参考 CentOS-Linux-Media.repo进行配置</span></span><br><span class=\"line\">[local-yum]</span><br><span class=\"line\">name=local-yum,<span class=\"built_in\">source</span> from cdrom</span><br><span class=\"line\"><span class=\"comment\">#使用光盘挂载的方式  mount /dev/cdrom /mnt/cdrom ，也可以将cdrom下的文件拷贝到任意路径下</span></span><br><span class=\"line\">baseurl=file:///mnt/cdrom</span><br><span class=\"line\"><span class=\"comment\"># 假若你不想软件库缺省是被启用的，可以配置为 enabled=0，此时可以通过 yum --enablerepo mlocal-yum install zip 的方式访问该软件库。</span></span><br><span class=\"line\">enabled=1</span><br><span class=\"line\"><span class=\"comment\"># 不进行数字证书校验</span></span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 清理yum缓存并重新建立缓存</span></span><br><span class=\"line\">yum clean all &amp;&amp; yum makecache</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前的yum源信息</span></span><br><span class=\"line\">yum repolist</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n如果没有光驱，可将系统iso文件上传到服务器，比如在/mnt下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /mnt/os</span><br><span class=\"line\">mount -t iso9660 -o loop /mnt/CentOS-6.5-x86_64-bin-DVD1.iso /mnt/os</span><br></pre></td></tr></table></figure>\n<p>然后将 baseurl 配置为 file:///mnt/os 即可。</p>\n</div>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>增加网络仓库源<br>\n有些时候，我们安装的软件并不在我们配置好的yum源中，此时我们可以在软件的官方网站上查看到yum安装的相关说明，比如jenkins: <a href=\"https://pkg.jenkins.io/redhat/\">https://pkg.jenkins.io/redhat/</a>，我们只需要按照说明将对应的源添加到系统中即可。</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">1.添加镜像源</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">2.导入jenkins公钥</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">3.安装依赖</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装依赖，如果已经安装则可以跳过此步，jdk版本大于1.8即可</span></span><br><span class=\"line\">yum install fontconfig java-11-openjdk</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">4.安装jenkins</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y jenkins</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">5.查看jenkins安装目录</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -ql jenkins</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">6.启动jenkins</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 默认8080端口，用户：admin 初始密码在 /var/lib/jenkins/secrets/initialAdminPassword</span></span><br><span class=\"line\">systemctl start jenkins</span><br><span class=\"line\">systemctl status jenkins</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">7.插件下载源更换(海外服务器不需要更换)</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Dashboard--Manage Jenkins--Manage Plugins--Advanced settings--Update Site</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># jenkins插件默认下载站点</span></span><br><span class=\"line\">https://updates.jenkins.io/update-center.json</span><br><span class=\"line\"><span class=\"comment\"># 清华源</span></span><br><span class=\"line\">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"DNF\">DNF</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>从CentOS 8开始，系统默认的软件包管理器是<code>dnf</code>，系统提供的<code>yum</code>命令仅为<code>dnf</code>命令的软链接。<code>dnf</code>是<code>dandified yum</code>的简称，是基于rpm软件包的Linux发行版本的软件包管理器。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>dnf</code>与<code>yum</code>命令的使用和配置方式基本一致，上面介绍的<code>yum</code>命令，直接替换为<code>dnf</code>即可</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>dnf</code>与<code>yum</code>的区别在于：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">(1)yum禁止删除正在使用的内核，而dnf允许删除所有内核，包括正在使用的内核；</li>\n<li class=\"lvl-6\">(2)在更新软件包时，yum不进行依赖包相关性的检查，而dnf如果检查到存在不相关的依赖包，则不会进行软件包更新。</li>\n<li class=\"lvl-6\">(3)yum在解决依赖包问题时，存在性能较差、内存占用大等问题，而dnf采用了由 SUSE 开发的“libsolv”库，用以提升依赖包解析性能，其依赖包解析速度比yum更快，且比yum消耗更少内存。</li>\n<li class=\"lvl-6\">(4)dnf代码比yum简单，约有29000行代码，而yum代码有59000多行。</li>\n</ul>\n</li>\n</ul>\n","content_text":"摘要 在Linux发行版中，几乎每一个发行版都有自己的软件包管理系统。 常见的有适用于debian、Ubuntu等系统的dpkg、apt-get以及它们的前端aptitude，以及适用于RedHat、Fedora系统的rpm以及它的前端yum。 CentOS系统从属于RedHat系列，其软件包管理系统有RPM和YUM，本文基于CentOS8(x86_64)介绍它们的使用方法。 从CentOS 8开始，系统默认的软件包管理器是dnf，系统提供的yum命令仅为dnf命令的软链接。dnf是dandified yum的简称，是基于rpm软件包的Linux发行版本的软件包管理器。 RPM RPM，全称RPM Package Manager，是由Red Hat推出的软件包管理系统，现在在各种发行版中普遍适用。 RRM软件包是将程序源代码经过编译和封装以后形成的包文件，在软件包里面会封装软件的二进制程序、配置文件、帮助手册、库文件以及头文件等。 rpm默认安装，但是RPM存在依赖关系问题 rpm参数说明 12345678910111213141516rpm ［options］ /path/to/rpmfile option： -i|--install： 安装指定软件 -v|--verbose： 显示安装过程 -e|--erase： 卸载指定的软件 -h|--hash： 以#的方式显示安装进度条，一个#为2% -q|--query： 查询rpm相关信息 --nodeps： 不检测依赖性安装。软件安装时会检测依赖性，确定所需的底层软件是否安装，如果没有安装则会报错。如果不管依赖性，想强制安装，则可以使用这个选项。注意，这样不检测依赖性安装的软件基本上是不能使用的，所以不建议这样做。 --test： 测试安装。不会实际安装，只是检测一下依赖性。 -U： 升级+安装（如果之前有安装则升级，如果之前没有安装则安装） -F： 升级（如果之前有安装则升级，如果之前没安装则不做任何操作） --replacepkgs： 替换软件包安装。如果软件包已经安装，那么此选项可以把软件包重复安装一遍。 --replacefiles： 替换文件安装。如果要安装软件包，但是包中的部分文件已经存在，那么在正常安装时会报&quot;某个文件已经存在&quot;的错误，从而导致软件无法安装。使用这个选项可以忽略这个报错而覆盖安装。 --force： 在软件包的安装或升级过程中，如果出现某个文件已经安装或者某一个软件已经安装时 可以使用 --force 选项强制安装，等同于 --replacepkgs --replacefiles --oldpackage 同时使用 安装rpm 123456789101112131415# 这里以安装jdk举例，先下载jdk的rpm包curl -o ./jdk-17_linux-x64_bin.rpm https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.rpm# -ivh 安装rpm包，建议安装前先查询当前系统是否已经安装了相关的软件包rpm -ivh jdk-17_linux-x64_bin.rpm# --test 只对安装进行测试，不实际安装rpm -ivh --test jdk-17_linux-x64_bin.rpm# --nodeps 安装时忽略依赖，软件有可能不可用rpm -ivh --nodeps jdk-17_linux-x64_bin.rpm# --force 强制安装，如果已经安装过该软件或者有文件冲突都进行强制安装rpm -ivh --force jdk-17_linux-x64_bin.rpm# --prefix 指定安装路径，而不使用默认的安装路径，不推荐rpm -ivh --prefix /usr/local/soft/jdk17 jdk-17_linux-x64_bin.rpm# 升级安装rpm -Uvh jdk-17_linux-x64_bin.rpm RPM 包默认安装路径 安装路径 含 义 /etc/ 配置文件安装目录 /usr/bin/ 可执行的命令安装目录 /usr/lib/ 程序所使用的函数库保存位置 /usr/share/doc/ 基本的软件使用手册保存位置 /usr/share/man/ 帮助文件保存位置 rpm -q：查询软件包是否安装 123456789# 查询当前系统已经安装的所有包rpm -qa# 查询当前系统是否安装了软件包名称中含有jdk的软件包rpm -qa | grep jdk# 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔rpm -q jdk-17# 通过命令查询是否安装，一般通过yum安装的软件可以通过这种方式进行查询rpm -q zip rpm -qp：查询rpm包安装后的软件包名称 12# 查询rpm包安装后的软件包名称，p 表示查询的是rpm文件rpm -qp jdk-17_linux-x64_bin.rpm rpm -qi：查询软件包的详细信息 12345678# 查询软件包描述信息，通过rpm文件名称rpm -qip jdk-17_linux-x64_bin.rpm# 查询软件包描述信息，通过安装后的软件包名称，此时可以不加后面的.x86_64后缀，下面的命令也是这样rpm -qi jdk-17-17.0.6-9.x86_64# 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔rpm -qi jdk-17# 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询rpm -qi zip rpm -ql：命令查询软件包的文件列表 12345678# 查询软件包中的文件列表，通过rpm文件名称rpm -qlp jdk-17_linux-x64_bin.rpm# 查询软件包中的文件列表，通过安装后的软件包名称rpm -ql jdk-17-17.0.6-9.x86_64# 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔rpm -ql jdk-17# 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询rpm -ql zip rpm -qd：查询被标注为文档的文件列表 1234567# 显示被标注为文档的文件列表rpm -qdp jdk-17_linux-x64_bin.rpmrpm -qd jdk-17-17.0.6-9.x86_64# 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔rpm -qd jdk-17# 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询rpm -qd zip rpm -qc：查询被标注为配置文件的文件列表 1234567# 显示被标注为配置文件的文件列表rpm -qcp jdk-17_linux-x64_bin.rpmrpm -qc jdk-17-17.0.6-9.x86_64# 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔rpm -qc jdk-17# 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询rpm -qc zip rpm -qf：命令查询系统文件属于哪个RPM包 12# 查询系统文件属于哪个RPM包rpm -qf /usr/lib/jvm/jdk-17-oracle-x64/bin/java 这里注意，只能通过真实文件进行查询，软连接是查询不到的 rpm -qR：查询软件包的依赖关系 1234567# 查询软件包的依赖关系rpm -qRp jdk-17_linux-x64_bin.rpmrpm -qR jdk-17-17.0.6-9.x86_64# 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔rpm -qR jdk-17# 通过命令查询，一般通过yum安装的软件可以通过这种方式进行查询rpm -qR zip 卸载rpm 123456# 通过包名卸载指定的软件，此时会检查是否有其它软件对该软件有依赖，如果有依赖则不允许卸载rpm -e jdk-17-17.0.6-9.x86_64# 也可以通过包名查询，就是版本号前面那部分，这里版本号就是17.0.6，与包名之间用-分隔rpm -e jdk-17# --nodeps :不考虑依赖，强行卸载，不推荐使用，因为这样会导致其它依赖该软件的软件不可用rpm -e --nodeps jdk-17-17.0.6-9.x86_64 解压rpm 1234# 解压安装包中的全部文件到当前目录rpm2cpio jdk-17_linux-x64_bin.rpm | cpio -idv# 解压安装包中的指定文件到当前目录，/usr/lib/jvm/jdk-17-oracle-x64/bin/java是rpm包中的文件路径，注意前面要加一个点rpm2cpio jdk-17_linux-x64_bin.rpm | cpio -idv ./usr/lib/jvm/jdk-17-oracle-x64/bin/java 说明 rpm2cpio : 将rpm包转换为cpio命令能处理的归档包格式。归档包，也可称为文件库，其实就是 cpio 或 tar 格式的文件。 cpio 命令可以看做是备份或还原命令，因为它可以将数据（文件）备份到 cpio 归档包，也可以利用 cpio 文档库对数据进行恢复。 1234各选项的含义为：-i：copy-in 模式，还原；-v：显示还原过程；-d：还原时自动新建目录； rpm查看已安装的文件是否被修改过 通过该命令可以快速查询通过rpm或yum安装的软件的相关文件(一般为配置文件)被修改过。 1234567891011121314151617181920212223242526272829303132333435# 查询系统中已安装的所有软件包$ rpm -Va.M....G.. g /var/log/lastlogS.5....T. c /etc/ssh/sshd_configS.5....T. c /etc/NetworkManager/NetworkManager.confS.5....T. c /etc/sudoers# 查询指定软件包$ rpm -V openssh-serverS.5....T. c /etc/ssh/sshd_config # 配置文件 sshd_config 的大小、内容、修改时间被人为修改过。因为我们修改了端口。# 校验某个系统文件是否被修改$ rpm -Vf /etc/ssh/sshd_configS.5....T. c /etc/ssh/sshd_config可以看到，结果显示了文件被修改的信息。该信息可分为以下 3 部分：1.最前面的 8 个字符（S.5....T）都属于验证信息，各字符的具体含义如下：S：文件大小是否改变。M：文件的类型或文件的权限（rwx）是否改变。5：文件MD5校验和是否改变（可以看成文件内容是否改变）。D：设备的主从代码是否改变。L：文件路径是否改变。U：文件的属主（所有者）是否改变。G：文件的属组是否改变。T：文件的修改时间是否改变。.：若相关项没发生改变，用 . 表示。2.被修改文件类型，大致可分为以下几类：c：配置文件（configuration file）。d：普通文档（documentation）。g：&quot;鬼&quot;文件（ghost file），很少见，就是该文件不应该被这个 RPM 包包含。l：授权文件（license file）。r：描述文件（read me）。3.被修改文件所在绝对路径（包含文件名）。 rpm导入(安装)数字证书(公钥) 数字证书，又称数字签名，由软件开发商直接发布。Linux 系统安装数字证书后，若 RPM 包做了修改，此包携带的数字证书也会改变，将无法与系统成功匹配，软件无法安装。 系统默认证书在 /efc/pki/rpm-gpg/ 下 导入证书 1234# 安装本机证书，一般这个都会默认安装rpm --import /efc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial# 安装第三方证书，如jenkinsrpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key 可以通过 rpm -qa|grep gpg-pubkey 查看已经导入的证书 123$ rpm -qa|grep gpg-pubkeygpg-pubkey-8483c65d-5ccc5b19gpg-pubkey-45f2c3d5-5e81efb9 数字证书本身也是一个 RPM 包，因此可以用 rpm 命令查询数字证书的详细信息，也可以将其卸载。 1234# 查看证书信息rpm -qi gpg-pubkey-8483c65d-5ccc5b19# 卸载证书rpm -e gpg-pubkey-8483c65d-5ccc5b19 YUM yum，全称Yellow dog Updater, Modified，是一个专门为了解决包的依赖关系而存在的软件包管理器。 yum是Linux中的 应用市场 ，不仅可以通过yum完成软件包的下载、安装、卸载等，还解决了软件之间的依赖，当安装的软件包需要依赖其它软件包时，会一并进行安装。 yum命令一般为默认安装，yum底层就是基于rpm实现的软件包管理 使用 yum 安装软件包之前，需指定好 yum 下载 RPM 包的位置，此位置称为 yum 源。换句话说，yum 源指的就是软件安装包的来源 yum 源既可以使用网络 yum 源，也可以将本地光盘作为 yum 源。 yum 源默认都是配置好的网络 yum 源，配置文件位于 /etc/yum.repos.d/ 目录下，文件扩展名为 *.repo 但是CentOS Linux 8 已经于 2021年12月31日 到期，Linux社区已不再维护该操作系统版本和软件源，所以我们可以将yum源切换到阿里云。 1234567891011121314151617181920# 备份原有的源文件rename &#x27;.repo&#x27; &#x27;.repo.bak&#x27; /etc/yum.repos.d/*.repo# 下载阿里云的yum源文件，这里下载Centos-8的源文件，其它版本可以在 https://mirrors.aliyun.com/repo/ 中查找curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo# 非官方扩展源，这个也可以不提前下载，可以在配置好yum源后，通过 yum install -y epel-release 进行安装# 如果在安装软件的时候，没有在Centos-8.repo中找到官方的下载链接，那么yum会自动去epel-release指向的链接处去查找，相当于epel-release给yum提供了更多的下载渠道。curl -o /etc/yum.repos.d/epel-archive-8.repo https://mirrors.aliyun.com/repo/epel-archive-8.repo# 清理yum缓存并重新建立缓存yum clean all &amp;&amp; yum makecache# 查看当前的yum源信息yum repolist仓库 id 仓库名称AppStream CentOS-8 - AppStream - mirrors.aliyun.combase CentOS-8 - Base - mirrors.aliyun.comepel-archive Extra Packages for Enterprise Linux 8 - x86_64extras CentOS-8 - Extras - mirrors.aliyun.com yum配置文件 123456789101112131415161718192021cat /etc/yum.conf[main]cachedir=/var/cache/yum #yum下载的RPM包的缓存目录keepcache=0 #缓存的RPM是否保存，1保存，0不保存。reposdir=/etc/yum.repos.d/ #指定 .repo 文件的绝对路径debuglevel=2 #调试级别(0-10)，默认为2(具体调试级别的应用，我也不了解)。logfile=/var/log/yum.log #yum的日志文件所在的位置exactarch=1 #在更新的时候，是否允许更新不同版本的RPM包， #比如是否在i386上更新i686的RPM包。obsoletes=1 #这是一个update的参数，具体请参阅yum(8)， #简单的说就是相当于upgrade，允许更新陈旧的RPM包。gpgcheck=1 #是否检查GPG(GNU Private Guard)，一种密钥方式签名。plugins=1 #是否允许使用插件，默认是0不允许， #但是我们一般会用yum-fastestmirror这个插件。installonly_limit=3 #允许保留多少个内核包。exclude=selinux* #屏蔽不想更新的RPM包，可用通配符，多个RPM包之间使用空格分离。distroverpkg=system-release #指定一个软件包，yum 会根据这个包判断你的发行版本timeout=5 #下载超时，秒retries=7 #下载重试次数proxy=http://0.0.0.0:8080 #配置代理 yum搜索软件 1234567# 显示yum源中可以安装的全部软件yum list# 搜索指定软件，显示软件名称、版本，以及所属仓库名称yum list zip# 搜索指定软件，显示软件名称和简介yum search zip 搜索时推荐使用yum list zip的形式 yum安装 123456# 安装过程中需要确认是否安装yum install zip# 不需要确认直接安装yum install zip -y# 重新安装yumyum reinstall zip yum卸载 1234# 卸载软件，会询问是否卸载yum remove zip# 不询问直接卸载yum remove zip -y yum卸载会同时卸载掉依赖包，可以使用rpm卸载单独的软件 1234rpm -qa | grep ^zipzip-3.0-23.el8.x86_64rpm -e --nodeps zip-3.0-23.el8.x86_64 yum升级与降级 123456789101112131415161718# 检查是否有软件需要升级yum check-update# 检测指定软件是否可以升级yum check-update zip# 升级指定软件包，-y 不询问yum upgrade zip -y# 升级全部软件包，-y 不询问yum upgrade -y# 升级指定软件包，-y 不询问yum update zip -y# 升级全部软件包，-y 不询问yum update -y# 降级，降回到升级前的版本，-y 不询问yum downgrade zip -y# 安装软件包时可能会遇到冲突，比如要安装的软件包与当前已经安装的软件包存在冲突，可以添加 --allowerasing 进行替换安装yum install --allowerasing curl yum upgrade与yum update的区别 yum配置文件/etc/yum.conf中，如果obsoletes=1，此时两者没有区别，都表示更新旧的rpm包的同时会删除旧包 如果obsoletes=0，yum upgrade会删除旧版本的包，而yum update则会保留旧版本的包 生产环境中建议使用yum update，防止因为替换，导致旧的软件包依赖出现问题 yum查看软件依赖关系 1yum deplist zip yum查看软件包描述信息 12# 类似于 rpm -qiyum info zip yum下载rpm包 12345678# yumdownloader 命令在软件包 yum-utils 里面yum -y install yum-utils# 会将docker的rpm包及其相关依赖的rpm包都下载到当前目录yumdownloader --resolve docker# --destdir 下载到指定目录yumdownloader --resolve docker --destdir dockerDir yum组：一次安装一组软件 12345678910111213141516171819# 查看可用组，会列出可用组名称yum grouplistyum group list# 查询组信息，会列出组内包含的所有软件，比如这里查询组名为 Development Tools 的信息yum groupinfo &quot;Development Tools&quot;yum group info &quot;Development Tools&quot;# 安装组内所有软件yum groupinstall &quot;Development Tools&quot;yum group install &quot;Development Tools&quot;# 卸载组内所有软件yum groupremove &quot;Development Tools&quot;yum group remove &quot;Development Tools&quot;# 升级软件组yum groupupdate &quot;Development Tools&quot;yum group update &quot;Development Tools&quot; 重建yum元数据缓存 1234567# 清理无效信息yum clean all# 重建缓存yum makecache# 或者yum --refresh -v repolist yum查看仓库配置 1234567891011# 显示启用的仓库简介信息yum repolist# 显示全部的仓库简介信息，包括禁用的yum repolist all# 显示详细信息yum -v repolist# --refresh 显示信息前先重建缓存yum --refresh -v repolist yum源配置 参数说明 1234567[xxx]：xxx为源仓库名称，一定要放在[]中。name：源仓库说明，可以自己随便写。mirrorlist：镜像站点列表，配置了这个就不需要配置baseurlbaseurl：yum 源仓库服务的地址。enabled：此源仓库是否生效，如果不写或写成 enabled=1 则表示生效，写成 enabled=0 则表示不生效。gpgcheck：如果为 1 则表示 RPM 的数字证书生效；如果为 0 则表示 RPM 的数字证书不生效。gpgkey：数字证书的公钥文件保存位置。gpgcheck=1时需要指定地址，gpgcheck=0时，可以不配置。 使用光盘配置本地源 1234567891011121314151617181920212223242526mkdir /mnt/cdrom# 挂载光盘到/mnt/cdrom目录下，也可以将cdrom下的文件拷贝到任意路径下mount /dev/cdrom /mnt/cdrom/cd /etc/yum.repos.d# 备份原有的源文件rename &#x27;.repo&#x27; &#x27;.repo.bak&#x27; /etc/yum.repos.d/*.repovi local-yum.repo# 内容为：可以参考 CentOS-Linux-Media.repo进行配置[local-yum]name=local-yum,source from cdrom#使用光盘挂载的方式 mount /dev/cdrom /mnt/cdrom ，也可以将cdrom下的文件拷贝到任意路径下baseurl=file:///mnt/cdrom# 假若你不想软件库缺省是被启用的，可以配置为 enabled=0，此时可以通过 yum --enablerepo mlocal-yum install zip 的方式访问该软件库。enabled=1# 不进行数字证书校验gpgcheck=0# 清理yum缓存并重新建立缓存yum clean all &amp;&amp; yum makecache# 查看当前的yum源信息yum repolist 小贴士 如果没有光驱，可将系统iso文件上传到服务器，比如在/mnt下： 12mkdir /mnt/osmount -t iso9660 -o loop /mnt/CentOS-6.5-x86_64-bin-DVD1.iso /mnt/os 然后将 baseurl 配置为 file:///mnt/os 即可。 增加网络仓库源 有些时候，我们安装的软件并不在我们配置好的yum源中，此时我们可以在软件的官方网站上查看到yum安装的相关说明，比如jenkins: https://pkg.jenkins.io/redhat/，我们只需要按照说明将对应的源添加到系统中即可。 1.添加镜像源 1wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo 2.导入jenkins公钥 1rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key 3.安装依赖 12# 安装依赖，如果已经安装则可以跳过此步，jdk版本大于1.8即可yum install fontconfig java-11-openjdk 4.安装jenkins 1yum install -y jenkins 5.查看jenkins安装目录 1rpm -ql jenkins 6.启动jenkins 123# 默认8080端口，用户：admin 初始密码在 /var/lib/jenkins/secrets/initialAdminPasswordsystemctl start jenkinssystemctl status jenkins 7.插件下载源更换(海外服务器不需要更换) 123456Dashboard--Manage Jenkins--Manage Plugins--Advanced settings--Update Site# jenkins插件默认下载站点https://updates.jenkins.io/update-center.json# 清华源https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json DNF 从CentOS 8开始，系统默认的软件包管理器是dnf，系统提供的yum命令仅为dnf命令的软链接。dnf是dandified yum的简称，是基于rpm软件包的Linux发行版本的软件包管理器。 dnf与yum命令的使用和配置方式基本一致，上面介绍的yum命令，直接替换为dnf即可 dnf与yum的区别在于： (1)yum禁止删除正在使用的内核，而dnf允许删除所有内核，包括正在使用的内核； (2)在更新软件包时，yum不进行依赖包相关性的检查，而dnf如果检查到存在不相关的依赖包，则不会进行软件包更新。 (3)yum在解决依赖包问题时，存在性能较差、内存占用大等问题，而dnf采用了由 SUSE 开发的“libsolv”库，用以提升依赖包解析性能，其依赖包解析速度比yum更快，且比yum消耗更少内存。 (4)dnf代码比yum简单，约有29000行代码，而yum代码有59000多行。","summary":"摘要 在Linux发行版中，几乎每一个发行版都有自己的软件包管理系统。 常见的有适用于debian、Ubuntu等系统的dpkg、apt-get以及它们的前端aptitude，以及适用于RedHat、Fedora系统的rpm以及它的前端yum。 CentOS系统从属于RedHat系列，其软件包管理系统有RPM和YUM，本文基于CentOS8(x86_64)介绍它们的使用方法。 从CentOS 8开始，系统默认的软件包管理器是dnf，系统提供的yum命令仅为dnf命令的软链接。dnf是dandified yum的简称，是基于rpm软件包的Linux发行版本的软件包管理器。","date_published":"2023-03-17T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/15/linux-command07-xargs/","url":"https://blog.hanqunfeng.com/2023/03/15/linux-command07-xargs/","title":"Linux常用命令--管道符\"|\"、\"xargs\"、文件描述符与重定向","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍管道符&quot;|&quot;与&quot;xargs&quot;的使用方法。</p>\n</li>\n<li class=\"lvl-2\">\n<p>以及文件描述符与重定向操作符的使用方法。</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"管道符\">管道符&quot;|&quot;</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>管道符主要用于多重命令处理，前面命令的输出结果作为后面命令的输入</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 该命令的作用就是查看文本后排序，然后再去重，最后过滤出含有hello的行并输出</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> test.txt | <span class=\"built_in\">sort</span> | <span class=\"built_in\">uniq</span> | grep <span class=\"string\">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>以上的cat、sort、uniq、grep等命令均支持管道符，一般情况下，处理文本的命令，例如sort、uniq、grep、awk、sed等命令均支持管道，是因为这些命令均可从标准输入中读取要处理的文本（即从标准输入中读取参数）</p>\n</li>\n<li class=\"lvl-2\">\n<p>而对于不是处理文本的命令，例如ls、rm、kill等则不支持从标准输入中读取参数，只支持从命令行中读取参数，而要使其也能从标准输入中读取参数则需要使用<code>xargs</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>命令行参数优先于标准输入即管道符，如<code>cat a.txt | sort b.txt</code>，此时<code>sort</code>仅仅会处理<code>b.txt</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>- </code> 表示标准输入，例如 <code>cat a.txt | sort b.txt -</code>，相当于 <code>sort a.txt b.txt</code></p>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>命令行参数和标准输入的区别</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">命令行参数\n<blockquote>\n<p>命令行参数就是命令后面的参数<br>\n例如<code>rm test.sh</code>，<code>rm</code>是命令，<code>test.sh</code>就是命令行参数</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">标准输入\n<blockquote>\n<p>标准输入一般指的是键盘输入，也可用于表示管道符之前命令的输出结果（即打印在屏幕的文本）作为之后命令的标准输入</p>\n</blockquote>\n</li>\n</ul>\n</div>\n<h2 id=\"xargs\">xargs</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>xargs</code>的作用是接收管道符前面命令的输出进行处理后作为命令行参数传递给后续命令，而并不是作为标准输入传递给后续命令。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>xargs</code>以空白字符（空格，tap，换行符均算空白字符）分隔从管道接收的文本，并且将分隔后文本均作为参数</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>xargs</code>常用选项</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数\t    解释</span><br><span class=\"line\">-d\t    指定分隔符，不指定默认为空白字符</span><br><span class=\"line\">-p\t    先打印即将执行的命令并询问是否执行</span><br><span class=\"line\">-n\t    指定每次传输给后续命令的参数个数，不指定则全部传递</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 假设当前目录下有a.txt和b.txt，则该命令的含义就是 cat a.txt b.txt</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> *.txt | xargs <span class=\"built_in\">cat</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 等价于 按顺序执行 cat a.txt 和 cat b.txt</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> *.txt | xargs -n 1 <span class=\"built_in\">cat</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除文件，执行前先打印命令并询问是否执行，输入y回车后可以执行，仅仅回车不执行</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> *.txt | xargs -p <span class=\"built_in\">rm</span> -rf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 杀掉进程</span></span><br><span class=\"line\">ps -ef | grep <span class=\"string\">&#x27;test.sh&#x27;</span> | grep -v <span class=\"string\">&#x27;grep&#x27;</span>| awk <span class=\"string\">&#x27;&#123;print $2&#125;&#x27;</span> | xargs <span class=\"built_in\">kill</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"文件描述符\">文件描述符</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在 Linux 系统中，进程通过文件描述符来管理文件，文件描述符就是一个数字以及与之相关联的一堆数据</p>\n</li>\n<li class=\"lvl-2\">\n<p>一个进程打开一个文件，就会创建一个新的文件描述符，这个数字一般是自增的，进程如果关闭文件，这个描述符是可以重复利用的</p>\n</li>\n<li class=\"lvl-2\">\n<p>查看进程关联的文件描述符</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 比如查看`mysqld`的文件描述符</span></span><br><span class=\"line\"><span class=\"comment\"># 先获得mysqld的PID，这里是823</span></span><br><span class=\"line\">$ ps aux | grep mysqld | grep -v <span class=\"string\">&quot;grep&quot;</span></span><br><span class=\"line\">mysql      823  0.0  7.0 1653908 64080 ?       Ssl  3月01   7:50 /usr/sbin/mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入如下目录</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> /proc/823/fd</span><br><span class=\"line\"><span class=\"comment\"># 列出PID为823的进程关联的文件描述符</span></span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br><span class=\"line\">0   12  16  2   23  27  30  34  38  41  45  49  52  56  6   63  67  70  9</span><br><span class=\"line\">1   13  17  20  24  28  31  35  39  42  46  5   53  57  60  64  68  71</span><br><span class=\"line\">10  14  18  21  25  29  32  36  4   43  47  50  54  58  61  65  69  72</span><br><span class=\"line\">11  15  19  22  26  3   33  37  40  44  48  51  55  59  62  66  7   8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过ls -l可以查看到实际关联的文件，这里对文件描述符按数字大小做了排序</span></span><br><span class=\"line\">$ <span class=\"built_in\">ls</span> -l | grep <span class=\"string\">&quot;^l&quot;</span> | <span class=\"built_in\">sort</span> -k 9n | <span class=\"built_in\">head</span> -n 5</span><br><span class=\"line\">lr-x------ 1 mysql mysql 64 3月  13 04:06 0 -&gt; /dev/null</span><br><span class=\"line\">lrwx------ 1 mysql mysql 64 3月  13 04:06 1 -&gt; socket:[16837]</span><br><span class=\"line\">lrwx------ 1 mysql mysql 64 3月  13 04:06 2 -&gt; socket:[16837]</span><br><span class=\"line\">lrwx------ 1 mysql mysql 64 3月  13 04:06 3 -&gt; /var/lib/mysql/aria_log_control</span><br><span class=\"line\">lr-x------ 1 mysql mysql 64 3月  13 04:06 4 -&gt; /var/lib/mysql</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>每一个进程启动的时候，都会默认打开三个文件，用<code>0,1,2</code>来当做他们的描述符</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 : 标准输入文件(stdin)，代表标准输入，默认指键盘输入</span><br><span class=\"line\">1 : 标准输出文件(stdout)，代表标准输出，标准输出就是命令的输出，默认指向终端屏幕</span><br><span class=\"line\">2 : 标准错误文件(stderr)，代表错误输出，标准错误是命令错误信息的输出，默认指向终端屏幕</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>进程操作所有文件的过程都是一样的，都是先打开一个文件，给他一个文件描述符，然后针对这个描述符进行读或者写</p>\n</li>\n<li class=\"lvl-2\">\n<p>在Linux里，键盘输入这种操作会变成一个文件操作，就类似普通的文件那样，这就是Linux的设计，一切皆是文件</p>\n</li>\n<li class=\"lvl-2\">\n<p>不仅仅键盘操作和屏幕打印是文件操作，网络连接读取数据等等，也都是文件操作，这些也都会产生文件描述符</p>\n</li>\n<li class=\"lvl-2\">\n<p>一个进程同时拥有的文件描述符是有上限的，这个上限可以设置。</p>\n</li>\n<li class=\"lvl-2\">\n<p>我们来解读下面这个命令的执行过程</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> test.txt | grep <span class=\"string\">&quot;hello&quot;</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">1.<code>cat</code>这个程序打开了test.txt这个文件，将其内容写入 <code>1</code> 这个文件(标准输出)，也就是屏幕上</li>\n<li class=\"lvl-6\">2.管道符<code>|</code>的作用就是将前一个程序的 <code>1</code> (标准输出)绑定到后一个程序的<code>0</code>(标准输入)，这里就是将<code>cat</code>的<code>1</code>绑定到<code>grep</code>的<code>0</code></li>\n<li class=\"lvl-6\">3.然后<code>grep</code> 这个程序就试图从 <code>0</code> 这个文件(标准输入)中读取数据，然后找到包含<code>hello</code>的行，然后把找到的行写入到 <code>1</code> 这个文件(标准输出)中，也就是屏幕上</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"设置文件描述符上限\">设置文件描述符上限</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>文件描述符上限设置分为三个限制级别：系统限制、用户限制、会话限制，最终的上限是这三个限制级别中最小的值</p>\n</li>\n<li class=\"lvl-2\">\n<p>查看及设置系统上限</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /proc/sys/fs/file-max</span><br><span class=\"line\">或者</span><br><span class=\"line\">sysctl fs.file-max</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> fs.file-max=65535 &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p <span class=\"comment\"># 立即生效</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看及设置用户上限</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /etc/security/limits.conf</span><br><span class=\"line\"><span class=\"comment\"># 设置格式为：</span></span><br><span class=\"line\">　　　　　　username|@groupname <span class=\"built_in\">type</span> resource <span class=\"built_in\">limit</span></span><br><span class=\"line\">　　　　　　username|@groupname：设置需要被限制的用户名，组名前面加@和用户名区别。也可以用通配符*来做所有用户的限制。</span><br><span class=\"line\">　　　　　　<span class=\"built_in\">type</span>：有 soft，hard 和 -，soft 指的是当前系统生效的设置值。hard 表明系统中所能设定的最大值。soft 的限制不能比hard 限制高。用 - 就表明同时设置了 soft 和 hard 的值</span><br><span class=\"line\">　　　　　　resource: 为资源类型有多种。 nofile为最大打开文件数。</span><br><span class=\"line\">　　　　　　例如：* -  nofile 65535  将所有用户的最大打开文件数的soft和hard都设为65535</span><br><span class=\"line\"><span class=\"comment\"># 对/etc/security/limit.conf的修改会在新的会话期中生效</span></span><br><span class=\"line\"><span class=\"comment\"># 设置时一般在文件最后添加如下内容</span></span><br><span class=\"line\">root soft nofile 65535</span><br><span class=\"line\">root hard nofile 65535</span><br><span class=\"line\">* soft nofile 65535</span><br><span class=\"line\">* hard nofile 65535</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查看及设置会话上限 :默认继承自用户限制级别</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看</span></span><br><span class=\"line\"><span class=\"built_in\">ulimit</span> -Sn :查看会话期最大文件描述符soft限制</span><br><span class=\"line\"><span class=\"built_in\">ulimit</span> -Hn :查看会话期最大文件描述符hard限制，hard限制是soft的上限。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置</span></span><br><span class=\"line\"><span class=\"comment\"># 用ulimit所做的修改在会话期结束后都将失效</span></span><br><span class=\"line\"><span class=\"built_in\">ulimit</span> -Sn 2046 :限制当前会话期内能打开的文件数为2046（如果其中一个进程打开了2046个，其他进程再打文件都将失败）</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>文件描述符使用上限最大能设置多大呢？当然你可以把它往大了设，但是同时打开的文件描述符越多，内存开销就越大。那怎样设置一个合理的上限呢？一个经验算法是 256个fd 需4M内存。例如8G内存，<code>8*1024/4*256=524288</code>。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果我们在一台机器上部署了自己的网络服务，我们只需按下面步骤修改就可以了：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　1. 计算 fdmax = 物理内存大小(m为单位) / 4 * 256  ,假设内存为8G,fdmax=524288</span><br><span class=\"line\">　　2. 执行命令: <span class=\"built_in\">echo</span> fs.file-max=524288 &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">　　3. 执行命令: sysctl -p</span><br><span class=\"line\">　　4. 执行命令: <span class=\"built_in\">echo</span>  * soft nofile  524286 &gt;&gt; /etc/security/limits.conf</span><br><span class=\"line\">　　5. 执行命令: <span class=\"built_in\">echo</span>  * hard nofile 524287 &gt;&gt; /etc/security/limits.conf</span><br><span class=\"line\">　　6. 结束当前会话期</span><br><span class=\"line\">　　7. 启动新的会话</span><br><span class=\"line\">　　8. 启动我们的服务</span><br></pre></td></tr></table></figure>\n<h2 id=\"重定向操作符\">重定向操作符</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>所谓重定向，其含义就是将不同的文件描述符重新定向到其它文件描述符</p>\n</li>\n<li class=\"lvl-2\">\n<p>常用的重定向操作符有如下几种:</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>&lt;</code> :将文件作为命令的标准输入</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &lt; test.txt</span><br><span class=\"line\">mysql -uroot -p &lt; databases.sql</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>&gt;</code> :将命令的输出结果输出到指定文件中，就是将标准输出重定向，且覆盖原文件内容</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以下两个命令的作用是一样的，都是将标准输出重定向到文件</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> test.txt | grep <span class=\"string\">&quot;hello&quot;</span> &gt; result.txt</span><br><span class=\"line\"><span class=\"built_in\">cat</span> test.txt | grep <span class=\"string\">&quot;hello&quot;</span> 1&gt; result.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 标准输出与标准错误都重定向到文件</span></span><br><span class=\"line\">sh test.sh 1&gt; run.log 2&gt; error.log</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>&gt;&gt;</code> :将命令的输出结果以 <em><strong>追加</strong></em> 的方式输出到指定文件中</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以下两个命令的作用是一样的，都是将标准输出重定向到文件</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> test.txt | grep <span class=\"string\">&quot;hello&quot;</span> &gt;&gt; result.txt</span><br><span class=\"line\"><span class=\"built_in\">cat</span> test.txt | grep <span class=\"string\">&quot;hello&quot;</span> 1&gt;&gt; result.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 标准输出与标准错误都重定向到文件</span></span><br><span class=\"line\">sh test.sh &gt;&gt; run.log 2&gt;&gt; error.log</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>&gt;&amp;</code> :将命令的输出结果或者一个文件描述符重新定向到另一个文件描述符</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以下两个命令的作用是一样的，都是将标准输出重定向到文件，标准错误重定向且等同于标准输出</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> test.txt | grep <span class=\"string\">&quot;hello&quot;</span> &gt; result.txt 2&gt;&amp;1</span><br><span class=\"line\"><span class=\"built_in\">cat</span> test.txt | grep <span class=\"string\">&quot;hello&quot;</span> 1&gt; result.txt 2&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 标准输出重定向到文件，标准错误重定向且等同于标准输出</span></span><br><span class=\"line\">sh test.sh &gt;&gt; run.log 2&gt;&amp;1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 标准输出重定向到空设备文件，也就是不输出也不显示任何信息，标准错误重定向且等同于标准输出，也就是标准错误也重定向到空设备中</span></span><br><span class=\"line\">sh test.sh 1&gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-2\">\n<p>使用重定向操作符时的注意事项</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.标准输入0、标准输出1、标准错误2 需要分别重定向，一个重定向只能改变它们其中一个。</span><br><span class=\"line\">2.文件描述符在重定向符号左侧时可以省略。</span><br><span class=\"line\">3.文件描述符与重定向符号之间不能有空格。</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","content_text":"摘要 本文介绍管道符&quot;|&quot;与&quot;xargs&quot;的使用方法。 以及文件描述符与重定向操作符的使用方法。 本文基于CentOS8(x86_64) 管道符&quot;|&quot; 管道符主要用于多重命令处理，前面命令的输出结果作为后面命令的输入 12# 该命令的作用就是查看文本后排序，然后再去重，最后过滤出含有hello的行并输出cat test.txt | sort | uniq | grep &quot;hello&quot; 以上的cat、sort、uniq、grep等命令均支持管道符，一般情况下，处理文本的命令，例如sort、uniq、grep、awk、sed等命令均支持管道，是因为这些命令均可从标准输入中读取要处理的文本（即从标准输入中读取参数） 而对于不是处理文本的命令，例如ls、rm、kill等则不支持从标准输入中读取参数，只支持从命令行中读取参数，而要使其也能从标准输入中读取参数则需要使用xargs 命令行参数优先于标准输入即管道符，如cat a.txt | sort b.txt，此时sort仅仅会处理b.txt - 表示标准输入，例如 cat a.txt | sort b.txt -，相当于 sort a.txt b.txt 命令行参数和标准输入的区别 命令行参数 命令行参数就是命令后面的参数 例如rm test.sh，rm是命令，test.sh就是命令行参数 标准输入 标准输入一般指的是键盘输入，也可用于表示管道符之前命令的输出结果（即打印在屏幕的文本）作为之后命令的标准输入 xargs xargs的作用是接收管道符前面命令的输出进行处理后作为命令行参数传递给后续命令，而并不是作为标准输入传递给后续命令。 xargs以空白字符（空格，tap，换行符均算空白字符）分隔从管道接收的文本，并且将分隔后文本均作为参数 xargs常用选项 1234参数 解释-d 指定分隔符，不指定默认为空白字符-p 先打印即将执行的命令并询问是否执行-n 指定每次传输给后续命令的参数个数，不指定则全部传递 示例 1234567891011# 假设当前目录下有a.txt和b.txt，则该命令的含义就是 cat a.txt b.txtls *.txt | xargs cat# 等价于 按顺序执行 cat a.txt 和 cat b.txtls *.txt | xargs -n 1 cat# 删除文件，执行前先打印命令并询问是否执行，输入y回车后可以执行，仅仅回车不执行ls *.txt | xargs -p rm -rf# 杀掉进程ps -ef | grep &#x27;test.sh&#x27; | grep -v &#x27;grep&#x27;| awk &#x27;&#123;print $2&#125;&#x27; | xargs kill 文件描述符 在 Linux 系统中，进程通过文件描述符来管理文件，文件描述符就是一个数字以及与之相关联的一堆数据 一个进程打开一个文件，就会创建一个新的文件描述符，这个数字一般是自增的，进程如果关闭文件，这个描述符是可以重复利用的 查看进程关联的文件描述符 123456789101112131415161718192021# 比如查看`mysqld`的文件描述符# 先获得mysqld的PID，这里是823$ ps aux | grep mysqld | grep -v &quot;grep&quot;mysql 823 0.0 7.0 1653908 64080 ? Ssl 3月01 7:50 /usr/sbin/mysqld# 进入如下目录$ cd /proc/823/fd# 列出PID为823的进程关联的文件描述符$ ls0 12 16 2 23 27 30 34 38 41 45 49 52 56 6 63 67 70 91 13 17 20 24 28 31 35 39 42 46 5 53 57 60 64 68 7110 14 18 21 25 29 32 36 4 43 47 50 54 58 61 65 69 7211 15 19 22 26 3 33 37 40 44 48 51 55 59 62 66 7 8# 通过ls -l可以查看到实际关联的文件，这里对文件描述符按数字大小做了排序$ ls -l | grep &quot;^l&quot; | sort -k 9n | head -n 5lr-x------ 1 mysql mysql 64 3月 13 04:06 0 -&gt; /dev/nulllrwx------ 1 mysql mysql 64 3月 13 04:06 1 -&gt; socket:[16837]lrwx------ 1 mysql mysql 64 3月 13 04:06 2 -&gt; socket:[16837]lrwx------ 1 mysql mysql 64 3月 13 04:06 3 -&gt; /var/lib/mysql/aria_log_controllr-x------ 1 mysql mysql 64 3月 13 04:06 4 -&gt; /var/lib/mysql 每一个进程启动的时候，都会默认打开三个文件，用0,1,2来当做他们的描述符 1230 : 标准输入文件(stdin)，代表标准输入，默认指键盘输入1 : 标准输出文件(stdout)，代表标准输出，标准输出就是命令的输出，默认指向终端屏幕2 : 标准错误文件(stderr)，代表错误输出，标准错误是命令错误信息的输出，默认指向终端屏幕 进程操作所有文件的过程都是一样的，都是先打开一个文件，给他一个文件描述符，然后针对这个描述符进行读或者写 在Linux里，键盘输入这种操作会变成一个文件操作，就类似普通的文件那样，这就是Linux的设计，一切皆是文件 不仅仅键盘操作和屏幕打印是文件操作，网络连接读取数据等等，也都是文件操作，这些也都会产生文件描述符 一个进程同时拥有的文件描述符是有上限的，这个上限可以设置。 我们来解读下面这个命令的执行过程 1cat test.txt | grep &quot;hello&quot; 1.cat这个程序打开了test.txt这个文件，将其内容写入 1 这个文件(标准输出)，也就是屏幕上 2.管道符|的作用就是将前一个程序的 1 (标准输出)绑定到后一个程序的0(标准输入)，这里就是将cat的1绑定到grep的0 3.然后grep 这个程序就试图从 0 这个文件(标准输入)中读取数据，然后找到包含hello的行，然后把找到的行写入到 1 这个文件(标准输出)中，也就是屏幕上 设置文件描述符上限 文件描述符上限设置分为三个限制级别：系统限制、用户限制、会话限制，最终的上限是这三个限制级别中最小的值 查看及设置系统上限 12345678# 查看cat /proc/sys/fs/file-max或者sysctl fs.file-max# 设置echo fs.file-max=65535 &gt;&gt; /etc/sysctl.confsysctl -p # 立即生效 查看及设置用户上限 1234567891011121314# 查看cat /etc/security/limits.conf# 设置格式为： username|@groupname type resource limit username|@groupname：设置需要被限制的用户名，组名前面加@和用户名区别。也可以用通配符*来做所有用户的限制。 type：有 soft，hard 和 -，soft 指的是当前系统生效的设置值。hard 表明系统中所能设定的最大值。soft 的限制不能比hard 限制高。用 - 就表明同时设置了 soft 和 hard 的值 resource: 为资源类型有多种。 nofile为最大打开文件数。 例如：* - nofile 65535 将所有用户的最大打开文件数的soft和hard都设为65535# 对/etc/security/limit.conf的修改会在新的会话期中生效# 设置时一般在文件最后添加如下内容root soft nofile 65535root hard nofile 65535* soft nofile 65535* hard nofile 65535 查看及设置会话上限 :默认继承自用户限制级别 1234567# 查看ulimit -Sn :查看会话期最大文件描述符soft限制ulimit -Hn :查看会话期最大文件描述符hard限制，hard限制是soft的上限。# 设置# 用ulimit所做的修改在会话期结束后都将失效ulimit -Sn 2046 :限制当前会话期内能打开的文件数为2046（如果其中一个进程打开了2046个，其他进程再打文件都将失败） 文件描述符使用上限最大能设置多大呢？当然你可以把它往大了设，但是同时打开的文件描述符越多，内存开销就越大。那怎样设置一个合理的上限呢？一个经验算法是 256个fd 需4M内存。例如8G内存，8*1024/4*256=524288。 如果我们在一台机器上部署了自己的网络服务，我们只需按下面步骤修改就可以了： 12345678 1. 计算 fdmax = 物理内存大小(m为单位) / 4 * 256 ,假设内存为8G,fdmax=524288 2. 执行命令: echo fs.file-max=524288 &gt;&gt; /etc/sysctl.conf 3. 执行命令: sysctl -p 4. 执行命令: echo * soft nofile 524286 &gt;&gt; /etc/security/limits.conf 5. 执行命令: echo * hard nofile 524287 &gt;&gt; /etc/security/limits.conf 6. 结束当前会话期 7. 启动新的会话 8. 启动我们的服务 重定向操作符 所谓重定向，其含义就是将不同的文件描述符重新定向到其它文件描述符 常用的重定向操作符有如下几种: &lt; :将文件作为命令的标准输入 12cat &lt; test.txtmysql -uroot -p &lt; databases.sql &gt; :将命令的输出结果输出到指定文件中，就是将标准输出重定向，且覆盖原文件内容 123456# 以下两个命令的作用是一样的，都是将标准输出重定向到文件cat test.txt | grep &quot;hello&quot; &gt; result.txtcat test.txt | grep &quot;hello&quot; 1&gt; result.txt# 标准输出与标准错误都重定向到文件sh test.sh 1&gt; run.log 2&gt; error.log &gt;&gt; :将命令的输出结果以 追加 的方式输出到指定文件中 123456# 以下两个命令的作用是一样的，都是将标准输出重定向到文件cat test.txt | grep &quot;hello&quot; &gt;&gt; result.txtcat test.txt | grep &quot;hello&quot; 1&gt;&gt; result.txt# 标准输出与标准错误都重定向到文件sh test.sh &gt;&gt; run.log 2&gt;&gt; error.log &gt;&amp; :将命令的输出结果或者一个文件描述符重新定向到另一个文件描述符 123456789# 以下两个命令的作用是一样的，都是将标准输出重定向到文件，标准错误重定向且等同于标准输出cat test.txt | grep &quot;hello&quot; &gt; result.txt 2&gt;&amp;1cat test.txt | grep &quot;hello&quot; 1&gt; result.txt 2&gt;&amp;1# 标准输出重定向到文件，标准错误重定向且等同于标准输出sh test.sh &gt;&gt; run.log 2&gt;&amp;1# 标准输出重定向到空设备文件，也就是不输出也不显示任何信息，标准错误重定向且等同于标准输出，也就是标准错误也重定向到空设备中sh test.sh 1&gt;/dev/null 2&gt;&amp;1 使用重定向操作符时的注意事项 1231.标准输入0、标准输出1、标准错误2 需要分别重定向，一个重定向只能改变它们其中一个。2.文件描述符在重定向符号左侧时可以省略。3.文件描述符与重定向符号之间不能有空格。","summary":"摘要 本文介绍管道符&quot;|&quot;与&quot;xargs&quot;的使用方法。 以及文件描述符与重定向操作符的使用方法。 本文基于CentOS8(x86_64)","date_published":"2023-03-15T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/13/linux-command06-$/","url":"https://blog.hanqunfeng.com/2023/03/13/linux-command06-$/","title":"Linux常用命令--各种符号","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>文本介绍linux编程中会用到的各种符号的使用方法</p>\n</li>\n<li class=\"lvl-2\">\n<p>特殊变量: $0、$?、$*、$@、$#、$$、$_、$!</p>\n</li>\n<li class=\"lvl-2\">\n<p>&amp;和&amp;&amp;、|和||</p>\n</li>\n<li class=\"lvl-2\">\n<p>命令替换: $( ) 与 ``</p>\n</li>\n<li class=\"lvl-2\">\n<p>整数运算: $(( )) 与 $[ ]</p>\n</li>\n<li class=\"lvl-2\">\n<p>条件判断: (( ))、[ ]与[[ ]]</p>\n</li>\n<li class=\"lvl-2\">\n<p>变量引用: $ 与 ${ }</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"特殊变量-0、-、-、-、-、-、\">特殊变量: <code>$0、$?、$*、$@、$#、$$、$!</code></h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>$0</code> : 当前脚本的文件名（间接运行时还包括绝对路径）。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$n</code> : 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是 $1 。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$#</code> : 传递给脚本或函数的参数个数。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$*</code> : 传递给脚本或函数的所有参数。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$@</code> : 传递给脚本或函数的所有参数。被双引号 <code>&quot;$@&quot;</code> 包含时，与 <code>&quot;$*&quot;</code> 不同，下面将会讲到。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$?</code> : 上个命令的退出状态(0:success 非0:error)，或函数的返回值。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$$</code> : 当前 Shell 进程 ID。对于 Shell 脚本，就是这些脚本所在的进程 ID。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$_</code> : 上一个命令的最后一个参数</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$!</code> : 后台运行的最后一个进程的 ID 号</p>\n</li>\n</ul>\n<blockquote>\n<p><code>$*</code> 和 <code>$@</code> 都表示传递给函数或脚本的所有参数，不被双引号 <code>&quot;&quot;</code> 包含时，都以独立个体<code>&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot;</code> 的形式输出所有参数。<br>\n但是当它们被双引号 <code>&quot;&quot;</code> 包含时，<code>&quot;$*&quot;</code>会将所有的参数作为一个整体输出，<code>&quot;$@&quot;</code>依旧会以独立个体<code>&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot;</code> 的形式输出所有参数。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># $*</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> $*</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"comment\"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &quot;$*&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"string\">&quot;$*&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"comment\"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class=\"line\">1 2 3 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># $@</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"variable\">$@</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"comment\"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &quot;$@&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"comment\"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>获取参数数量：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paramSize=<span class=\"variable\">$&#123;#@&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"和-、-和\"><code>&amp;</code>和<code>&amp;&amp;</code>、<code>|</code>和<code>||</code></h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>&amp;</code>  表示任务在后台执行，如要在后台运行redis-server,则有 <code>redis-server &amp;</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>&amp;&amp;</code> 表示前一条命令执行成功时，才执行后一条命令 ，如 <code>make &amp;&amp; make install</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>|</code> 表示管道，上一条命令的输出，作为下一条命令参数，如 <code>cat text.txt | wc -l</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>||</code> 表示上一条命令执行失败后，才执行下一条命令，如 <code>grep &quot;success&quot; run.log || echo &quot;fail&quot;</code></p>\n</li>\n</ul>\n<h2 id=\"命令替换-与\">命令替换: <code>$( )</code> 与 ``</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>$( )</code> 与 `` 都是用来作命令替换的，优先执行括号或者反引号中的命令，并将结果替换出来组成新的命令</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以下命令效果相同</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> today is `<span class=\"built_in\">date</span> <span class=\"string\">&quot;+%Y-%m-%d&quot;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> today is $(<span class=\"built_in\">date</span> <span class=\"string\">&quot;+%Y-%m-%d&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">today=`<span class=\"built_in\">date</span> <span class=\"string\">&quot;+%Y-%m-%d&quot;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$today</span></span><br><span class=\"line\">today=$(<span class=\"built_in\">date</span> <span class=\"string\">&quot;+%Y-%m-%d&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$today</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>推荐使用<code>$( )</code>，因为在多层次的复合替换中，内部的`` 必须要进行转义，而$( )比较直观</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#  cmd3 `cmd2 \\`cmd1\\``</span></span><br><span class=\"line\">sh echo.sh <span class=\"string\">&quot;`echo today is \\`date &quot;</span>+%Y-%m-%d<span class=\"string\">&quot;\\``&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#  cmd3 $(cmd2 $(cmd1))</span></span><br><span class=\"line\">sh echo.sh <span class=\"string\">&quot;<span class=\"subst\">$(echo today is $(date <span class=\"string\">&quot;+%Y-%m-%d&quot;</span>)</span>)&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"整数运算-与\">整数运算: <code>$(( ))</code> 与 <code>$[ ]</code></h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>$(( ))</code>用于执行整数计算，等价于<code>$[ ]</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> $(( <span class=\"number\">3</span>+<span class=\"number\">5</span> ))</span><br><span class=\"line\"><span class=\"built_in\">echo</span> $[ 3+5 ]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> $(( (<span class=\"number\">3</span>+<span class=\"number\">5</span>)*<span class=\"number\">4</span>/<span class=\"number\">2</span> ))</span><br><span class=\"line\"><span class=\"built_in\">echo</span> $[ (3+5)*4/2 ]</span><br></pre></td></tr></table></figure>\n<h2 id=\"条件判断-、-和\">条件判断: <code>(( ))</code>、<code>[ ]</code>和<code>[[ ]]</code></h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在使用<code>if</code>或<code>while</code>等语句时，需要进行条件判断，<code>(( ))</code>、<code>[ ]</code>和<code>[[ ]]</code>都可以用来进行条件判断，那么他们之间有什么区别吗？</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>[ ]</code>是<code>test</code>命令的另一种形式，例如 <code>test a == b</code> 等同于 <code>[ a == b ]</code>，注意 <code>[</code> 后和 <code>]</code> 前都需要有空格，并且<code>==</code>两边也都要有空格</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">test</span> <span class=\"string\">&#x27;hello&#x27;</span> != <span class=\"string\">&#x27;world&#x27;</span> ==&gt;  [ <span class=\"string\">&#x27;hello&#x27;</span> != <span class=\"string\">&#x27;world&#x27;</span> ]</span><br><span class=\"line\"><span class=\"built_in\">test</span> ! -e test.sh       ==&gt;  [ ! -e test.sh ]</span><br><span class=\"line\"><span class=\"built_in\">test</span> <span class=\"variable\">$i</span> -lt 5           ==&gt;  [ <span class=\"variable\">$i</span> -lt 5 ]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>[[ ]]</code>是<code>[ ]</code>的增强版，其在如下几个方面进行了增强:\n<ul class=\"lvl-4\">\n<li class=\"lvl-10\">1.在<code>[[ ]]</code>中使用<code>&gt;</code>、<code>&lt;</code> 进行数值比较时不需要转义，但是不支持<code>&gt;=</code>、<code>&lt;=</code></li>\n<li class=\"lvl-10\">2.支持<code>&amp;&amp;</code>和<code>||</code></li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以下三种作用相同</span></span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> &gt; 3 &amp;&amp; <span class=\"variable\">$a</span> != 10 ]]</span><br><span class=\"line\">[ <span class=\"variable\">$a</span> &gt; 3 -a <span class=\"variable\">$a</span> != 10 ]</span><br><span class=\"line\">[ <span class=\"variable\">$a</span> &gt; 3 ] &amp;&amp; [ <span class=\"variable\">$a</span> != 10 ]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-4\">\n<li class=\"lvl-10\">3.<code>[[ ]]</code>在比较字符串时支持正则匹配和通配符匹配</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通配符匹配</span></span><br><span class=\"line\">a=<span class=\"string\">&quot;linux&quot;</span></span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> == l?nu? ]] <span class=\"comment\"># 0</span></span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> != li* ]]   <span class=\"comment\"># 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正则匹配 `=~`</span></span><br><span class=\"line\">a=<span class=\"string\">&quot;linux&quot;</span></span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> =~ ^li ]]</span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> =~ ^li[abn]ux ]]</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-6\"><code>(( ))</code> 用于条件判断时只能进行数值比较，运算符不需要转义，而且不支持<code>-lt</code>、<code>-gt</code>等等  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(( <span class=\"variable\">$i</span> &lt;= 5 ))</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n<code>(( ))</code>除了用于条件判断外，还有三种用法：<br>\n1.与<code>$</code>结合使用进行数学运算 : <code>$(( ))</code><br>\n2.在<code>for</code>循环命令中控制循环 : <code>for((i=1;i&lt;10;i++))</code><br>\n3.改变变量的值，且变量前不需要<code>$</code> : <code>((i++))</code></p>\n</div>\n</li>\n<li class=\"lvl-2\">\n<p>推荐在进行条件判断时使用<code>[[ ]]</code>，运算符不需要转义，而且支持正则</p>\n</li>\n</ul>\n<h2 id=\"变量引用-与\">变量引用: <code>$</code> 与 <code>$&#123; &#125;</code></h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>$</code>与<code>$&#123; &#125;</code>都是用来引用变量的，<code>$&#123; &#125;</code>通常用于划定变量名的边界，当执行 <code>echo &quot;$aa&quot;</code>的时候系统会打印变量<code>$aa</code>的值，当执行<code>echo &quot;$&#123;a&#125;a&quot;</code>时打印的是<code>$&#123;a&#125;</code>和字母a，如果不需要为变量名划分边界的话，<code>$a</code>和<code>$&#123;a&#125;</code>是完全相等的。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">today=`<span class=\"built_in\">date</span> <span class=\"string\">&quot;+%Y-%m-%d&quot;</span>`</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$today</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;today&#125;</span>_now</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>$&#123; &#125;</code>还有一个重要的功能，就是文本处理:</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">1.获取字符串长度</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str=<span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;#str&#125;</span> <span class=\"comment\"># 5</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">2.字符串切片<code>$&#123;a:b:c&#125;</code>: 将字符串变量<code>a</code>从第<code>b</code>个位置开始向后截取<code>c</code>个字符，b是指下标，下标从0开始，<code>c</code>可以不指定，表示截取到字符串末尾</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">&#x27;hello world!&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a:0:5&#125;</span> <span class=\"comment\"># hello</span></span><br><span class=\"line\"><span class=\"comment\"># 不指定c，表示从第6个字符开始截取到字符串末尾</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a:6&#125;</span> <span class=\"comment\"># world!</span></span><br><span class=\"line\"><span class=\"comment\"># 截取从倒数第一个字符开始到字符串末尾的字符</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a:(-1)&#125;</span> <span class=\"comment\"># !</span></span><br><span class=\"line\"><span class=\"comment\"># 截取从倒数第 6 个字符后的 5 个字符</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a:(-6):5&#125;</span> <span class=\"comment\"># world</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">3.替换字符串<code>$&#123;a/b/c&#125;</code>: 将变量<code>a</code>中的<code>b</code>全部替换为<code>c</code>，开头一个正斜杠为只匹配第一个字符串，两个正斜杠为匹配所有字符。</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">&#x27;hello hello world&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;a/hello/hi&#125;</span>&quot;</span> <span class=\"comment\"># hi hello world</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;a//hello/hi&#125;</span>&quot;</span> <span class=\"comment\"># hi hi world</span></span><br><span class=\"line\"><span class=\"comment\"># 支持正则</span></span><br><span class=\"line\">str=123abc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str//[^0-9]/&#125;</span> <span class=\"comment\"># 123，将非数字替换为空</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str//[0-9]/&#125;</span> <span class=\"comment\"># abc，将数字替换为空</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">4.字符串截取</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 格式：</span></span><br><span class=\"line\"><span class=\"comment\"># 删除匹配前缀</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;parameter#word&#125;</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;parameter##word&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 删除匹配后缀</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;parameter%word&#125;</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;parameter%%word&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 去掉左边，#最短匹配模式，##最长匹配模式。</span></span><br><span class=\"line\">% 去掉右边，%最短匹配模式，%%最长匹配模式。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\">URL=<span class=\"string\">&quot;http://www.baidu.com/baike/user.html&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 匹配http://，以//为分隔符截取出右边字符串</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL#*//&#125;</span> <span class=\"comment\"># www.baidu.com/baike/user.html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以/为分隔符截取右边字符串，##表示尽可能多的删除，保留最少内容</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL##*/&#125;</span> <span class=\"comment\"># user.html</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL#*/&#125;</span>  <span class=\"comment\"># /www.baidu.com/baike/user.html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以/为分隔符截取左边字符串，%%表示尽可能多的删除，即保留最少内容</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL%%/*&#125;</span> <span class=\"comment\"># http:</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL%/*&#125;</span> <span class=\"comment\"># http://www.baidu.com/baike</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">5.变量状态赋值</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 格式</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;VAR:-string&#125;</span> <span class=\"comment\"># 如果 VAR 变量为空则返回 string</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;VAR:+string&#125;</span> <span class=\"comment\"># 如果 VAR 变量不为空则返回 string</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;VAR:=string&#125;</span> <span class=\"comment\"># 如果 VAR 变量为空则重新赋值 VAR 变量值为 string</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;VAR:?string&#125;</span> <span class=\"comment\"># 如果 VAR 变量为空则将 string 输出到 stderr</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\"><span class=\"comment\"># 如果变量为空就返回 hello world!</span></span><br><span class=\"line\">VAR=</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;VAR:-&#x27;hello world!&#x27;&#125;</span> <span class=\"comment\"># hello world!</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$VAR</span> <span class=\"comment\"># 空</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果变量不为空就返回 hello world!</span></span><br><span class=\"line\">VAR=<span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;VAR:+&#x27;hello world!&#x27;&#125;</span> <span class=\"comment\"># hello world!</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$VAR</span> <span class=\"comment\"># hello</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果变量为空就重新赋值：</span></span><br><span class=\"line\">VAR=</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;VAR:=hello&#125;</span> <span class=\"comment\"># hello</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$VAR</span> <span class=\"comment\"># hello</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果变量为空就将信息输出 stderr</span></span><br><span class=\"line\">VAR=</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;VAR:?value is null&#125;</span> <span class=\"comment\"># -bash: VAR: value is null</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","content_text":"摘要 文本介绍linux编程中会用到的各种符号的使用方法 特殊变量: $0、$?、$*、$@、$#、$$、$_、$! &amp;和&amp;&amp;、|和|| 命令替换: $( ) 与 `` 整数运算: $(( )) 与 $[ ] 条件判断: (( ))、[ ]与[[ ]] 变量引用: $ 与 ${ } 本文基于CentOS8(x86_64) 特殊变量: $0、$?、$*、$@、$#、$$、$! $0 : 当前脚本的文件名（间接运行时还包括绝对路径）。 $n : 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是 $1 。 $# : 传递给脚本或函数的参数个数。 $* : 传递给脚本或函数的所有参数。 $@ : 传递给脚本或函数的所有参数。被双引号 &quot;$@&quot; 包含时，与 &quot;$*&quot; 不同，下面将会讲到。 $? : 上个命令的退出状态(0:success 非0:error)，或函数的返回值。 $$ : 当前 Shell 进程 ID。对于 Shell 脚本，就是这些脚本所在的进程 ID。 $_ : 上一个命令的最后一个参数 $! : 后台运行的最后一个进程的 ID 号 $* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号 &quot;&quot; 包含时，都以独立个体&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数。 但是当它们被双引号 &quot;&quot; 包含时，&quot;$*&quot;会将所有的参数作为一个整体输出，&quot;$@&quot;依旧会以独立个体&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数。 12345678910111213141516171819202122232425262728293031323334353637383940# $*for i in $*do echo $idone# sh test.sh 1 2 3 4，此时输出1234# &quot;$*&quot;for i in &quot;$*&quot;do echo $idone# sh test.sh 1 2 3 4，此时输出1 2 3 4# $@for i in $@do echo $idone# sh test.sh 1 2 3 4，此时输出1234# &quot;$@&quot;for i in &quot;$@&quot;do echo $idone# sh test.sh 1 2 3 4，此时输出1234 获取参数数量： 1paramSize=$&#123;#@&#125; &amp;和&amp;&amp;、|和|| &amp; 表示任务在后台执行，如要在后台运行redis-server,则有 redis-server &amp; &amp;&amp; 表示前一条命令执行成功时，才执行后一条命令 ，如 make &amp;&amp; make install | 表示管道，上一条命令的输出，作为下一条命令参数，如 cat text.txt | wc -l || 表示上一条命令执行失败后，才执行下一条命令，如 grep &quot;success&quot; run.log || echo &quot;fail&quot; 命令替换: $( ) 与 `` $( ) 与 `` 都是用来作命令替换的，优先执行括号或者反引号中的命令，并将结果替换出来组成新的命令 12345678# 以下命令效果相同echo today is `date &quot;+%Y-%m-%d&quot;`echo today is $(date &quot;+%Y-%m-%d&quot;)today=`date &quot;+%Y-%m-%d&quot;`echo $todaytoday=$(date &quot;+%Y-%m-%d&quot;)echo $today 推荐使用$( )，因为在多层次的复合替换中，内部的`` 必须要进行转义，而$( )比较直观 1234# cmd3 `cmd2 \\`cmd1\\``sh echo.sh &quot;`echo today is \\`date &quot;+%Y-%m-%d&quot;\\``&quot;# cmd3 $(cmd2 $(cmd1))sh echo.sh &quot;$(echo today is $(date &quot;+%Y-%m-%d&quot;))&quot; 整数运算: $(( )) 与 $[ ] $(( ))用于执行整数计算，等价于$[ ] 12345echo $(( 3+5 ))echo $[ 3+5 ]echo $(( (3+5)*4/2 ))echo $[ (3+5)*4/2 ] 条件判断: (( ))、[ ]和[[ ]] 在使用if或while等语句时，需要进行条件判断，(( ))、[ ]和[[ ]]都可以用来进行条件判断，那么他们之间有什么区别吗？ [ ]是test命令的另一种形式，例如 test a == b 等同于 [ a == b ]，注意 [ 后和 ] 前都需要有空格，并且==两边也都要有空格 123test &#x27;hello&#x27; != &#x27;world&#x27; ==&gt; [ &#x27;hello&#x27; != &#x27;world&#x27; ]test ! -e test.sh ==&gt; [ ! -e test.sh ]test $i -lt 5 ==&gt; [ $i -lt 5 ] [[ ]]是[ ]的增强版，其在如下几个方面进行了增强: 1.在[[ ]]中使用&gt;、&lt; 进行数值比较时不需要转义，但是不支持&gt;=、&lt;= 2.支持&amp;&amp;和|| 1234# 以下三种作用相同[[ $a &gt; 3 &amp;&amp; $a != 10 ]][ $a &gt; 3 -a $a != 10 ][ $a &gt; 3 ] &amp;&amp; [ $a != 10 ] 3.[[ ]]在比较字符串时支持正则匹配和通配符匹配 123456789# 通配符匹配a=&quot;linux&quot;[[ $a == l?nu? ]] # 0[[ $a != li* ]] # 1# 正则匹配 `=~`a=&quot;linux&quot;[[ $a =~ ^li ]][[ $a =~ ^li[abn]ux ]] (( )) 用于条件判断时只能进行数值比较，运算符不需要转义，而且不支持-lt、-gt等等 1(( $i &lt;= 5 )) 小贴士 (( ))除了用于条件判断外，还有三种用法： 1.与$结合使用进行数学运算 : $(( )) 2.在for循环命令中控制循环 : for((i=1;i&lt;10;i++)) 3.改变变量的值，且变量前不需要$ : ((i++)) 推荐在进行条件判断时使用[[ ]]，运算符不需要转义，而且支持正则 变量引用: $ 与 $&#123; &#125; $与$&#123; &#125;都是用来引用变量的，$&#123; &#125;通常用于划定变量名的边界，当执行 echo &quot;$aa&quot;的时候系统会打印变量$aa的值，当执行echo &quot;$&#123;a&#125;a&quot;时打印的是$&#123;a&#125;和字母a，如果不需要为变量名划分边界的话，$a和$&#123;a&#125;是完全相等的。 123today=`date &quot;+%Y-%m-%d&quot;`echo $todayecho $&#123;today&#125;_now $&#123; &#125;还有一个重要的功能，就是文本处理: 1.获取字符串长度 12str=&#x27;hello&#x27;echo $&#123;#str&#125; # 5 2.字符串切片$&#123;a:b:c&#125;: 将字符串变量a从第b个位置开始向后截取c个字符，b是指下标，下标从0开始，c可以不指定，表示截取到字符串末尾 12345678a=&#x27;hello world!&#x27;echo $&#123;a:0:5&#125; # hello# 不指定c，表示从第6个字符开始截取到字符串末尾echo $&#123;a:6&#125; # world!# 截取从倒数第一个字符开始到字符串末尾的字符echo $&#123;a:(-1)&#125; # !# 截取从倒数第 6 个字符后的 5 个字符echo $&#123;a:(-6):5&#125; # world 3.替换字符串$&#123;a/b/c&#125;: 将变量a中的b全部替换为c，开头一个正斜杠为只匹配第一个字符串，两个正斜杠为匹配所有字符。 1234567a=&#x27;hello hello world&#x27;echo &quot;$&#123;a/hello/hi&#125;&quot; # hi hello worldecho &quot;$&#123;a//hello/hi&#125;&quot; # hi hi world# 支持正则str=123abcecho $&#123;str//[^0-9]/&#125; # 123，将非数字替换为空echo $&#123;str//[0-9]/&#125; # abc，将数字替换为空 4.字符串截取 12345678910111213141516171819202122# 格式：# 删除匹配前缀$&#123;parameter#word&#125;$&#123;parameter##word&#125;# 删除匹配后缀$&#123;parameter%word&#125;$&#123;parameter%%word&#125;# 去掉左边，#最短匹配模式，##最长匹配模式。% 去掉右边，%最短匹配模式，%%最长匹配模式。# 示例URL=&quot;http://www.baidu.com/baike/user.html&quot;# 匹配http://，以//为分隔符截取出右边字符串echo $&#123;URL#*//&#125; # www.baidu.com/baike/user.html# 以/为分隔符截取右边字符串，##表示尽可能多的删除，保留最少内容echo $&#123;URL##*/&#125; # user.htmlecho $&#123;URL#*/&#125; # /www.baidu.com/baike/user.html# 以/为分隔符截取左边字符串，%%表示尽可能多的删除，即保留最少内容echo $&#123;URL%%/*&#125; # http:echo $&#123;URL%/*&#125; # http://www.baidu.com/baike 5.变量状态赋值 12345678910111213141516171819202122232425# 格式$&#123;VAR:-string&#125; # 如果 VAR 变量为空则返回 string$&#123;VAR:+string&#125; # 如果 VAR 变量不为空则返回 string$&#123;VAR:=string&#125; # 如果 VAR 变量为空则重新赋值 VAR 变量值为 string$&#123;VAR:?string&#125; # 如果 VAR 变量为空则将 string 输出到 stderr# 示例# 如果变量为空就返回 hello world!VAR=echo $&#123;VAR:-&#x27;hello world!&#x27;&#125; # hello world!echo $VAR # 空# 如果变量不为空就返回 hello world!VAR=&quot;hello&quot;echo $&#123;VAR:+&#x27;hello world!&#x27;&#125; # hello world!echo $VAR # hello#如果变量为空就重新赋值：VAR=echo $&#123;VAR:=hello&#125; # helloecho $VAR # hello# 如果变量为空就将信息输出 stderrVAR=echo $&#123;VAR:?value is null&#125; # -bash: VAR: value is null","summary":"摘要 文本介绍linux编程中会用到的各种符号的使用方法 特殊变量: $0、$?、$*、$@、$#、$$、$_、$! &amp;和&amp;&amp;、|和|| 命令替换: $( ) 与 `` 整数运算: $(( )) 与 $[ ] 条件判断: (( ))、[ ]与[[ ]] 变量引用: $ 与 ${ } 本文基于CentOS8(x86_64)","date_published":"2023-03-13T14:40:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/13/linux-command06-shell/","url":"https://blog.hanqunfeng.com/2023/03/13/linux-command06-shell/","title":"Linux常用命令--shell编程","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍shell编程的语法规则。</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"文件头\">文件头</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh :指定执行脚步的shell路径</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env bash :从env中查找指定的shell路径</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果没有为脚本设置文件头指定执行脚本的shell路径，则默认使用运行脚本的用户的shell</p>\n</blockquote>\n<h2 id=\"注释语法\">注释语法</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>#</code> : 使用<code>#</code>进行单行注释，要讲某行注释，就在该行行首添加<code>#</code></p>\n</li>\n</ul>\n<h2 id=\"特殊变量\">特殊变量</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>$0</code> : 当前脚本的文件名（间接运行时还包括绝对路径）。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$n</code> : 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是 $1 。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$#</code> : 传递给脚本或函数的参数个数。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$*</code> : 传递给脚本或函数的所有参数。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$@</code> : 传递给脚本或函数的所有参数。被双引号 <code>&quot;$@&quot;</code> 包含时，与 <code>&quot;$*&quot;</code> 不同，下面将会讲到。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$?</code> : 上个命令的退出状态(0:success 非0:error)，或函数的返回值。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$$</code> : 当前 Shell 进程 ID。对于 Shell 脚本，就是这些脚本所在的进程 ID。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$_</code> : 上一个命令的最后一个参数</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$!</code> : 后台运行的最后一个进程的 ID 号</p>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n<code>$*</code> 和 <code>$@</code> 都表示传递给函数或脚本的所有参数，不被双引号 <code>&quot;&quot;</code> 包含时，都以独立个体<code>&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot;</code> 的形式输出所有参数。<br>\n但是当它们被双引号 <code>&quot;&quot;</code> 包含时，<code>&quot;$*&quot;</code>会将所有的参数作为一个整体输出，<code>&quot;$@&quot;</code>依旧会以独立个体<code>&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot;</code> 的形式输出所有参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># $*</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> $*</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"comment\"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &quot;$*&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"string\">&quot;$*&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"comment\"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class=\"line\">1 2 3 4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># $@</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"variable\">$@</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"comment\"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &quot;$@&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"comment\"># sh test.sh 1 2 3 4，此时输出</span></span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td></tr></table></figure>\n<p>获取参数数量：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paramSize=<span class=\"variable\">$&#123;#@&#125;</span></span><br></pre></td></tr></table></figure>\n</div>\n<h2 id=\"自定义变量\">自定义变量</h2>\n<h3 id=\"字符串\">字符串</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义一个字符串变量</span></span><br><span class=\"line\">s1=<span class=\"string\">&quot;content&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个变量接收之前定义过的变量，使用变量时需要使用 $+变量名称</span></span><br><span class=\"line\">s2=<span class=\"variable\">$s1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个变量为之前定义过的变量与其它字符串的组合，此时可以使用 &#123;&#125; 将变量名称括起来以避免歧义</span></span><br><span class=\"line\">s3=<span class=\"string\">&quot;<span class=\"variable\">$&#123;s1&#125;</span>_test&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个变量接收日期字符串，``括起来的内容会优先执行，并把结果赋值给变量</span></span><br><span class=\"line\">s4=`<span class=\"built_in\">date</span> +%F<span class=\"string\">&#x27; &#x27;</span>%T`</span><br><span class=\"line\">now=`<span class=\"built_in\">date</span> +%Y%m%d_%H%M%S`</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n<code>$</code>与<code>$&#123; &#125;</code>都是用来引用变量的，<code>$&#123; &#125;</code>通常用于划定变量名的边界<br>\n当执行 <code>echo &quot;$aa&quot;</code>的时候系统会打印变量<code>$aa</code>的值，当执行<code>echo &quot;$&#123;a&#125;a&quot;</code>时打印的是<code>$&#123;a&#125;</code>和字母a，如果不需要为变量名划分边界的话，<code>$a</code>和<code>$&#123;a&#125;</code>是完全相等的。<br>\n除此之外，<code>$&#123; &#125;</code>还有一个重要的功能，就是文本处理:</p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">1.获取字符串长度</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str=<span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;#str&#125;</span> <span class=\"comment\"># 5</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">2.字符串切片<code>$&#123;a:b:c&#125;</code>: 将字符串变量<code>a</code>从第<code>b</code>个位置开始向后截取<code>c</code>个字符，b是指下标，下标从0开始，<code>c</code>可以不指定，表示截取到字符串末尾</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">&#x27;hello world!&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a:0:5&#125;</span> <span class=\"comment\"># hello</span></span><br><span class=\"line\"><span class=\"comment\"># 不指定c，表示从第6个字符开始截取到字符串末尾</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a:6&#125;</span> <span class=\"comment\"># world!</span></span><br><span class=\"line\"><span class=\"comment\"># 截取从倒数第一个字符开始到字符串末尾的字符</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a:(-1)&#125;</span> <span class=\"comment\"># !</span></span><br><span class=\"line\"><span class=\"comment\"># 截取从倒数第 6 个字符后的 5 个字符</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;a:(-6):5&#125;</span> <span class=\"comment\"># world</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">3.替换字符串<code>$&#123;a/b/c&#125;</code>: 将变量<code>a</code>中的<code>b</code>全部替换为<code>c</code>，开头一个正斜杠为只匹配第一个字符串，两个正斜杠为匹配所有字符。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"string\">&#x27;hello hello world&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;a/hello/hi&#125;</span>&quot;</span> <span class=\"comment\"># hi hello world</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;a//hello/hi&#125;</span>&quot;</span> <span class=\"comment\"># hi hi world</span></span><br><span class=\"line\"><span class=\"comment\"># 支持正则</span></span><br><span class=\"line\">str=123abc</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str//[^0-9]/&#125;</span> <span class=\"comment\"># 123，将非数字替换为空</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;str//[0-9]/&#125;</span> <span class=\"comment\"># abc，将数字替换为空</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">4.字符串截取</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 格式：</span></span><br><span class=\"line\"><span class=\"comment\"># 删除匹配前缀</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;parameter#word&#125;</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;parameter##word&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 删除匹配后缀</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;parameter%word&#125;</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;parameter%%word&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 去掉左边，#最短匹配模式，##最长匹配模式。</span></span><br><span class=\"line\">% 去掉右边，%最短匹配模式，%%最长匹配模式。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\">URL=<span class=\"string\">&quot;http://www.baidu.com/baike/user.html&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 匹配http://，以//为分隔符截取出右边字符串</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL#*//&#125;</span> <span class=\"comment\"># www.baidu.com/baike/user.html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以/为分隔符截取右边字符串，##表示尽可能多的删除，保留最少内容</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL##*/&#125;</span> <span class=\"comment\"># user.html</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL#*/&#125;</span>  <span class=\"comment\"># /www.baidu.com/baike/user.html</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以/为分隔符截取左边字符串，%%表示尽可能多的删除，即保留最少内容</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL%%/*&#125;</span> <span class=\"comment\"># http:</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;URL%/*&#125;</span> <span class=\"comment\"># http://www.baidu.com/baike</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">5.变量状态赋值</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 格式</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;VAR:-string&#125;</span> <span class=\"comment\"># 如果 VAR 变量为空则返回 string</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;VAR:+string&#125;</span> <span class=\"comment\"># 如果 VAR 变量不为空则返回 string</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;VAR:=string&#125;</span> <span class=\"comment\"># 如果 VAR 变量为空则重新赋值 VAR 变量值为 string</span></span><br><span class=\"line\"><span class=\"variable\">$&#123;VAR:?string&#125;</span> <span class=\"comment\"># 如果 VAR 变量为空则将 string 输出到 stderr</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\"><span class=\"comment\"># 如果变量为空就返回 hello world!</span></span><br><span class=\"line\">VAR=</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;VAR:-&#x27;hello world!&#x27;&#125;</span> <span class=\"comment\"># hello world!</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$VAR</span> <span class=\"comment\"># 空</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果变量不为空就返回 hello world!</span></span><br><span class=\"line\">VAR=<span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;VAR:+&#x27;hello world!&#x27;&#125;</span> <span class=\"comment\"># hello world!</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$VAR</span> <span class=\"comment\"># hello</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果变量为空就重新赋值：</span></span><br><span class=\"line\">VAR=</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;VAR:=hello&#125;</span> <span class=\"comment\"># hello</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$VAR</span> <span class=\"comment\"># hello</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果变量为空就将信息输出 stderr</span></span><br><span class=\"line\">VAR=</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;VAR:?value is null&#125;</span> <span class=\"comment\"># -bash: VAR: value is null</span></span><br></pre></td></tr></table></figure>\n</div>\n<h3 id=\"数字\">数字</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>整数运算</p>\n<blockquote>\n<p>支持<code>let</code>、<code>$(( ))</code>、<code>$[ ]</code>和<code>expr</code>四种方式</p>\n</blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义一个数字</span></span><br><span class=\"line\">a1=10</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进行数字运算时，可以使用以下是几种运算方式中的一种</span></span><br><span class=\"line\"><span class=\"comment\"># 加法和减法</span></span><br><span class=\"line\">a2=$((<span class=\"variable\">$a1</span> + <span class=\"number\">5</span>)) or a2=$((a1 + <span class=\"number\">5</span>))</span><br><span class=\"line\">a3=$[<span class=\"variable\">$a1</span> + 5] or a3=$[a1 + 5]</span><br><span class=\"line\"><span class=\"comment\"># expr 要求运算符之间要有空格</span></span><br><span class=\"line\">a4=`<span class=\"built_in\">expr</span> <span class=\"variable\">$a1</span> - 5` or a4=$(<span class=\"built_in\">expr</span> <span class=\"variable\">$a1</span> - 5)</span><br><span class=\"line\"><span class=\"comment\"># let在引用变量时不需要$，另外运算符之间不能有空格</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> a5=a1-5</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 乘法，注意使用expr方式时，* 要转义，</span></span><br><span class=\"line\">a2=$((a1 * <span class=\"number\">5</span>))</span><br><span class=\"line\">a3=$[a1 * 5]</span><br><span class=\"line\"><span class=\"comment\"># expr 要求运算符之间要有空格</span></span><br><span class=\"line\">a4=`<span class=\"built_in\">expr</span> <span class=\"variable\">$a1</span> \\* 5`</span><br><span class=\"line\"><span class=\"comment\"># let在引用变量时不需要$，另外运算符之间不能有空格</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> a5=a1*5</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 除法</span></span><br><span class=\"line\">a2=$((a1 / <span class=\"number\">5</span>))</span><br><span class=\"line\">a3=$[a1 / 5]</span><br><span class=\"line\"><span class=\"comment\"># expr 要求运算符之间要有空格</span></span><br><span class=\"line\">a4=`<span class=\"built_in\">expr</span> <span class=\"variable\">$a1</span> / 5`</span><br><span class=\"line\"><span class=\"comment\"># let在引用变量时不能有$，运算符之间不能有空格</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> a5=a1/5</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>let</code>、<code>$(( ))</code>或<code>$[ ]</code>中的变量都可以不加<code>$</code>前缀<br>\n在进行整数运算时，<code>$(( ))</code>和<code>$[ ]</code>的作用是等价的<br>\n建议使用<code>let</code>、<code>$(( ))</code>或<code>$[ ]</code>的形式进行运算，其支持正常的运算逻辑，expr稍显笨拙，比如在进行带括号的运算时</p>\n</blockquote>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a2=$(((a1 - <span class=\"number\">5</span>) * <span class=\"number\">5</span>))</span><br><span class=\"line\">a3=$[(a1 - 5) * 5]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># expr 要求运算符之间要有空格</span></span><br><span class=\"line\"><span class=\"comment\"># expr需要分开独立计算</span></span><br><span class=\"line\">a4_1=`<span class=\"built_in\">expr</span> <span class=\"variable\">$a1</span> - 5`</span><br><span class=\"line\">a4_2=`<span class=\"built_in\">expr</span> <span class=\"variable\">$&#123;a4_1&#125;</span> \\* 5`</span><br><span class=\"line\"><span class=\"comment\"># let在引用变量时不需要$，另外运算符之间不能有空格</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> a5=(a1-5)*5</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n<code>$()</code>和 `` 的作用一致，都是用来做命令替换用，一般用于将命令返回的结果传递给变量</p>\n</div>\n</li>\n<li class=\"lvl-2\">\n<p>浮点数计算</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x=10</span><br><span class=\"line\">y=3.211</span><br><span class=\"line\">a1=`<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$x</span> * 2 / <span class=\"variable\">$y</span>&quot;</span> | bc`  <span class=\"comment\"># a1为6</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># scale=2 保留两位小数，相当于截断不会四舍五入</span></span><br><span class=\"line\">a2=`<span class=\"built_in\">echo</span> <span class=\"string\">&quot;scale=2; <span class=\"variable\">$x</span> * 2 / <span class=\"variable\">$y</span>&quot;</span> | bc` <span class=\"comment\"># a2为6.22</span></span><br><span class=\"line\"><span class=\"comment\"># awk的计算会四舍五入</span></span><br><span class=\"line\">a2=`<span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$x</span> <span class=\"variable\">$y</span>&quot;</span> | awk <span class=\"string\">&#x27;&#123;printf &quot;%.2f\\n&quot;,$1*2/$2&#125;&#x27;</span>` <span class=\"comment\">#a2为6.23</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># bc运算时，整数位小于1不会显示</span></span><br><span class=\"line\">a3=`<span class=\"built_in\">echo</span> <span class=\"string\">&quot;scale=2;  2 / 3&quot;</span> | bc` <span class=\"comment\"># a3为.66，不会显示为0.66</span></span><br><span class=\"line\"><span class=\"comment\"># awk可以正确显示</span></span><br><span class=\"line\">a3=`<span class=\"built_in\">echo</span> 2 3 | awk <span class=\"string\">&#x27;&#123;printf &quot;%.2f\\n&quot;,$1/$2&#125;&#x27;</span>` <span class=\"comment\">#a3为0.67</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>awk</code> 的计算方式比 <code>bc</code> 更好一些，支持精度更为准确<br>\n<code>bc</code>和<code>awk</code>的计算方式同样支持整数</p>\n</blockquote>\n<h3 id=\"数组\">数组</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用小括号定义数组，(元素之间用空格分隔)</span></span><br><span class=\"line\">array=(Zero One Two Three)</span><br><span class=\"line\"><span class=\"comment\"># 打印数组长度</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;#array[@]&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历数组</span></span><br><span class=\"line\"><span class=\"comment\"># while遍历</span></span><br><span class=\"line\">i=0</span><br><span class=\"line\"><span class=\"keyword\">while</span> [ <span class=\"variable\">$i</span> -lt <span class=\"variable\">$&#123;#array[@]&#125;</span> ];<span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array[$i]&#125;</span></span><br><span class=\"line\">    <span class=\"built_in\">let</span> i=i+1</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>((i=0;i&lt;<span class=\"variable\">$&#123;#array[@]&#125;</span>;i++))</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;array[i]&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"从键盘设置变量-read\">从键盘设置变量:read</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>read命令格式</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">read</span> [选项] [变量名]</span><br><span class=\"line\">    选项：</span><br><span class=\"line\">    -p “提示信息”：在等待<span class=\"built_in\">read</span>输入时，输出提示信息</span><br><span class=\"line\">    -t “秒数”： <span class=\"built_in\">read</span>命令会一致等待用户输入，使用此选项可以指定等待时间</span><br><span class=\"line\">    -n “字符数”： <span class=\"built_in\">read</span>命令只接受指定的字符数，就会执行</span><br><span class=\"line\">    -s： 隐藏输入的数据，适用于机密信息的输入</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">read</span> a <span class=\"comment\"># 此时会等待用户键入变量值，比如此时输入: 3</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$a</span> <span class=\"comment\"># 3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">read</span> -t 30 -p <span class=\"string\">&quot;Please input your username:&quot;</span> username</span><br><span class=\"line\"><span class=\"built_in\">read</span> -s -t 30 -p <span class=\"string\">&quot;Please input your passsword:&quot;</span> password</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">read</span> a b c <span class=\"comment\"># 可以设置多个变量，比如此时输入: 1 2 3</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$&#123;a&#125;</span>_<span class=\"variable\">$&#123;b&#125;</span>_<span class=\"variable\">$&#123;c&#125;</span>&quot;</span> <span class=\"comment\"># 1_2_3</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"test命令\"><code>test</code>命令</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>test</code>作用检查某个条件是否成立，返回值为<code>0</code>（真）或者其他值（假），可通过<code>echo $?</code>查看返回值，也常用于循环和条件语句。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>test</code>一般有三种用法：</p>\n<blockquote>\n<p>测试文件或者文件夹是否存在<br>\n字符串比较<br>\n数值比较</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"测试文件或者文件夹是否存在\">测试文件或者文件夹是否存在</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参数说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-d dir :是否为目录，是目录为真</span><br><span class=\"line\">-f file :是否为常规文件，是文件为真</span><br><span class=\"line\">-x file/dir :是否可执行，可执行为真</span><br><span class=\"line\">-r file/dir :是否可读，可读为真</span><br><span class=\"line\">-w file/dir :是否可写，可写为真</span><br><span class=\"line\">-a file/dir :文件或目录是否存在，存在为真</span><br><span class=\"line\">-e file/dir :文件或目录是否存在，存在为真</span><br><span class=\"line\">-s file :文件大小是否非0，非0为真</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">test</span> -f test.sh</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> $?</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">test</span> -d <span class=\"built_in\">dir</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> $?</span><br></pre></td></tr></table></figure>\n<h3 id=\"字符串比较\">字符串比较</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参数说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数\t    说明</span><br><span class=\"line\">-z      当str为空时返回真</span><br><span class=\"line\">-n\t    当str为非空时返回真</span><br><span class=\"line\">=\t    两个字符串相等时返回真</span><br><span class=\"line\">==\t    两个字符串相等时返回真，同=</span><br><span class=\"line\">!=\t    两个字符串不相等时返回真</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">test</span> -z <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> $?  <span class=\"comment\"># 输出0</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">test</span> -n <span class=\"string\">&#x27;hello&#x27;</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> $?  <span class=\"comment\"># 输出0</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">test</span> <span class=\"string\">&#x27;hello&#x27;</span> == <span class=\"string\">&#x27;world&#x27;</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> $?  <span class=\"comment\"># 输出1</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">test</span> <span class=\"string\">&#x27;hello&#x27;</span> != <span class=\"string\">&#x27;world&#x27;</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> $?  <span class=\"comment\"># 输出0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"数值比较\">数值比较</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参数说明，使用<code>&gt;</code>、<code>&lt;</code>等运算符时需要转义 <code>\\&gt;</code>、<code>\\&lt;</code>，或者使用如下参数替换对应的运算符</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数\t    说明</span><br><span class=\"line\">-eq\t    等于时返回真 ==</span><br><span class=\"line\">-ne\t    不等于时返回真 !=</span><br><span class=\"line\">-lt\t    小于时返回真 &lt;</span><br><span class=\"line\">-le\t    小于等于时返回真 &lt;=</span><br><span class=\"line\">-gt\t    大于时返回真 &gt;</span><br><span class=\"line\">-ge\t    大于等于时返回真 &gt;=</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">test</span> 1 -lt 2</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> $?  <span class=\"comment\"># 输出0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算\">逻辑运算</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参数说明</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数\t  说明</span><br><span class=\"line\">-a\t    逻辑与，二者都为真则为真</span><br><span class=\"line\">-o\t    逻辑或，二者任意一个为真则为真</span><br><span class=\"line\">!\t    逻辑非</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">test</span> ! -e test.sh</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> $?</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">test</span> -f test.sh -a -d <span class=\"built_in\">dir</span></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> $?</span><br></pre></td></tr></table></figure>\n<h3 id=\"shell中的用法\">shell中的用法</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">test</span> <span class=\"variable\">$i</span> -lt 5;<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$i</span> &lt; 5&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$i</span> &gt;= 5&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"条件判断\">条件判断</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在使用<code>if</code>或<code>while</code>等语句时，需要进行条件判断，上面我们已经见到一个<code>while</code>的例子，其使用<code>[ ]</code>来定义条件判断</p>\n</li>\n<li class=\"lvl-2\">\n<p>实际上除了<code>[ ]</code>以外，我们还可以使用<code>test</code>、<code>(( ))</code>和<code>[[ ]]</code>来进行条件判断，那么他们之间有什么区别吗？</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>[ ]</code>是<code>test</code>命令的另一种形式，例如 <code>test a == b</code> 等同于 <code>[ a == b ]</code>，注意 <code>[</code> 后和 <code>]</code> 前都需要有空格，并且<code>==</code>两边也都要有空格</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">test</span> <span class=\"string\">&#x27;hello&#x27;</span> != <span class=\"string\">&#x27;world&#x27;</span> ==&gt;  [ <span class=\"string\">&#x27;hello&#x27;</span> != <span class=\"string\">&#x27;world&#x27;</span> ]</span><br><span class=\"line\"><span class=\"built_in\">test</span> ! -e test.sh       ==&gt;  [ ! -e test.sh ]</span><br><span class=\"line\"><span class=\"built_in\">test</span> <span class=\"variable\">$i</span> -lt 5           ==&gt;  [ <span class=\"variable\">$i</span> -lt 5 ]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\"><code>[[ ]]</code>是<code>[ ]</code>的增强版，其在如下几个方面进行了增强:\n<ul class=\"lvl-4\">\n<li class=\"lvl-10\">1.在<code>[[ ]]</code>中使用<code>&gt;</code>、<code>&lt;</code> 进行数值比较时不需要转义，但是不支持<code>&gt;=</code>、<code>&lt;=</code></li>\n<li class=\"lvl-10\">2.支持<code>&amp;&amp;</code>和<code>||</code></li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以下三种作用相同</span></span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> &gt; 3 &amp;&amp; <span class=\"variable\">$a</span> != 10 ]]</span><br><span class=\"line\">[ <span class=\"variable\">$a</span> &gt; 3 -a <span class=\"variable\">$a</span> != 10 ]</span><br><span class=\"line\">[ <span class=\"variable\">$a</span> &gt; 3 ] &amp;&amp; [ <span class=\"variable\">$a</span> != 10 ]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-4\">\n<li class=\"lvl-10\">3.<code>[[ ]]</code>在比较字符串时支持正则匹配和通配符匹配</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通配符匹配</span></span><br><span class=\"line\">a=<span class=\"string\">&quot;linux&quot;</span></span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> == l?nu? ]] <span class=\"comment\"># 0</span></span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> != li* ]]   <span class=\"comment\"># 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正则匹配 `=~`</span></span><br><span class=\"line\">a=<span class=\"string\">&quot;linux&quot;</span></span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> =~ ^li ]]</span><br><span class=\"line\">[[ <span class=\"variable\">$a</span> =~ ^li[abn]ux ]]</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-6\"><code>(( ))</code> 用于条件判断时只能进行数值比较，运算符不需要转义，而且不支持<code>-lt</code>、<code>-gt</code>等等  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(( <span class=\"variable\">$i</span> &lt;= 5 ))</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n<code>(( ))</code>除了用于条件判断外，还有三种用法：<br>\n1.与<code>$</code>结合使用进行数学运算 : <code>$(( ))</code><br>\n2.在<code>for</code>循环命令中控制循环 : <code>for((i=1;i&lt;10;i++))</code><br>\n3.改变变量的值，且变量前不需要<code>$</code> : <code>((i++))</code></p>\n</div>\n</li>\n<li class=\"lvl-2\">\n<p>推荐在进行条件判断时使用<code>[[ ]]</code>，运算符不需要转义，而且支持正则</p>\n</li>\n</ul>\n<h2 id=\"流程控制语句\">流程控制语句</h2>\n<h3 id=\"if语句\"><code>if</code>语句</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 语法1</span></span><br><span class=\"line\"><span class=\"comment\"># 因为多个语句写在同一行，所以要用;隔开</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -d <span class=\"variable\">$path</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;dir&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"comment\"># 其实也可以这样写</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -d <span class=\"variable\">$path</span> ]]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;dir&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 语法2</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -d <span class=\"variable\">$path</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;dir&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;not dir&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 语法3</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -d <span class=\"variable\">$path</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;dir&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> [[ -f <span class=\"variable\">$path</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;file&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;not match&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 判断参数个数是否正确，只允许输入一个参数</span></span><br><span class=\"line\">paramSize=<span class=\"variable\">$&#123;#@&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$paramSize</span> == 0 || <span class=\"variable\">$paramSize</span> &gt; 1  ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ERROR:需要一个参数!!!&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判断参数是否为大于0的数字</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> -gt 0 ] 2&gt;/dev/null ;<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span> id number&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;ERROR: <span class=\"variable\">$1</span> is not number!&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判断参数是否为整数数字，包含正整数，0，负整数</span></span><br><span class=\"line\"><span class=\"built_in\">expr</span> <span class=\"variable\">$1</span> <span class=\"string\">&quot;+&quot;</span> 0 &amp;&gt; /dev/null</span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ $? == 0 || <span class=\"variable\">$1</span> == 0 ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span> is number&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span> not number&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果导出文件已经存在则先删除</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -a <span class=\"variable\">$bookId</span>.tar.gz ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">rm</span> -rf <span class=\"variable\">$bookId</span>.tar.gz</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判断字符串是否不为空</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ -n <span class=\"variable\">$str</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$str</span> is not null&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$str</span> is null&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"case语句\"><code>case</code>语句</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">&quot;<span class=\"variable\">$1</span>&quot;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">start)</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;start&quot;</span></span><br><span class=\"line\">;;</span><br><span class=\"line\">reload)</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;reload&quot;</span></span><br><span class=\"line\">;;</span><br><span class=\"line\">stop)</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">;;</span><br><span class=\"line\">status)</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;status&quot;</span></span><br><span class=\"line\">;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;<span class=\"variable\">$0</span>: Usage: &#123;start|status|stop|reload&#125;&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 非0，非正常退出，exit 0 :正常退出</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"select语句\"><code>select</code>语句</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># select.sh</span></span><br><span class=\"line\">select var <span class=\"keyword\">in</span> <span class=\"string\">&quot;Linux&quot;</span> <span class=\"string\">&quot;UNIX&quot;</span> <span class=\"string\">&quot;Windows&quot;</span> <span class=\"string\">&quot;Other&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;You have selected <span class=\"variable\">$var</span>&quot;</span></span><br><span class=\"line\">    <span class=\"comment\"># 跳出循环</span></span><br><span class=\"line\">    <span class=\"built_in\">break</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行</span></span><br><span class=\"line\">$ sh select.sh</span><br><span class=\"line\">1) Linux</span><br><span class=\"line\">2) UNIX</span><br><span class=\"line\">3) Windows</span><br><span class=\"line\">4) Other</span><br><span class=\"line\"><span class=\"comment\">#? 2 # 输入2，表示选择第二个</span></span><br><span class=\"line\">You have selected UNIX</span><br></pre></td></tr></table></figure>\n<h3 id=\"while循环语句\"><code>while</code>循环语句</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=0</span><br><span class=\"line\"><span class=\"keyword\">while</span> [[ <span class=\"variable\">$a</span> &lt; 5 ]]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$a</span></span><br><span class=\"line\">    ((a++))</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"until循环语句\"><code>until</code>循环语句</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>类似<code>while</code>，不同点是条件判断为假时才执行</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=5</span><br><span class=\"line\"><span class=\"comment\"># 不满足条件时执行</span></span><br><span class=\"line\">until [[ <span class=\"variable\">$a</span> == 0 ]]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$a</span></span><br><span class=\"line\">    ((a--))</span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"for循环语句\"><code>for</code>循环语句</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 语法1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>((i=0;i&lt;=10;i++))</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 语法2</span></span><br><span class=\"line\"><span class=\"comment\"># 使用&#123;&#125;和seq生成序列</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> &#123;1..9&#125;   <span class=\"comment\"># 1 2 3 4 5 6 7 8 9</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;this is <span class=\"variable\">$i</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> &#123;1..9..2&#125;   <span class=\"comment\"># 1 3 5 7 9</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;this is <span class=\"variable\">$i</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> `<span class=\"built_in\">seq</span> 1 9` <span class=\"comment\"># 1 2 3 4 5 6 7 8 9</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;this is <span class=\"variable\">$i</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> `<span class=\"built_in\">seq</span> 1 2 9` <span class=\"comment\"># 1 3 5 7 9</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;this is <span class=\"variable\">$i</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 直接列出要遍历的项</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> day <span class=\"keyword\">in</span> Sun Mon Tue Wed Thu Fri Sat</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;The day is : <span class=\"variable\">$day</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将命令执行结果作为要遍历的内容</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> `<span class=\"built_in\">cat</span> file`</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$line</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历所有参数</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> <span class=\"variable\">$@</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$p</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"其它语句\">其它语句</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>break</code> : 退出本层循环，继续执行本层循环体后面的代码，注意是退出本层循环体，如果是嵌套循环，则退出break所在层的循环，并非所有的循环</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>continue</code> : 跳过本次循环，不再执行continue下面的代码，回到循环判断式判断是否继续执行循环</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>((i=0;i&lt;=10;i++))</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$i</span> == 0 ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"comment\"># 不执行后面的语句直接进行下次循环</span></span><br><span class=\"line\">        <span class=\"built_in\">continue</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$i</span> == 8 ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"comment\"># 跳出循环体，不再进行循环</span></span><br><span class=\"line\">        <span class=\"built_in\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>exit 0</code> : 正常退出</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>exit 1</code> : 非0，非正常退出</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>shift</code> : 每执行一次，参数序列顺序左移一个位置，<code>$#</code>的值减1，移出去的参数不再可用</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># shift.sh</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (( <span class=\"variable\">$#</span> &lt;= 0 ));<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Not enough parameters&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">sum</span>=0</span><br><span class=\"line\"><span class=\"keyword\">while</span> [[ <span class=\"variable\">$#</span> &gt;= 0 ]]</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">sum</span>=$((sum + <span class=\"variable\">$1</span>))</span><br><span class=\"line\">    <span class=\"built_in\">shift</span> <span class=\"comment\">#因为每次执行shift，所以上面的$1永远都是下一个参数</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$sum</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行</span></span><br><span class=\"line\">$ sh shift.sh 1 2 3 4 5 <span class=\"comment\"># 输出 15</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"shell函数的定义与使用\">shell函数的定义与使用</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>shell函数定义</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 函数定义标准写法</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">name</span></span>() &#123;</span><br><span class=\"line\">    statements</span><br><span class=\"line\">    [<span class=\"built_in\">return</span> value]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> : Shell 中的关键字，专门用来定义函数</span><br><span class=\"line\">name : 函数名</span><br><span class=\"line\">statements : 函数要执行的代码，也就是一组语句；</span><br><span class=\"line\"><span class=\"built_in\">return</span> value : 函数的返回值，其中 <span class=\"built_in\">return</span> 是 Shell 关键字，专门用在函数中返回一个值，这一部分可以写也可以不写。</span><br><span class=\"line\">由&#123; &#125;包围的部分称为函数体，调用一个函数，实际上就是执行函数体中的代码。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 函数定义时也可以不写 function 关键字</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">name</span></span>() &#123;</span><br><span class=\"line\">    statements</span><br><span class=\"line\">    [<span class=\"built_in\">return</span> value]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 如果写了 function 关键字，也可以省略函数名后面的小括号</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> name &#123;</span><br><span class=\"line\">    statements</span><br><span class=\"line\">    [<span class=\"built_in\">return</span> value]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>shell函数的调用</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果不传递参数，直接给出函数名字即可</span></span><br><span class=\"line\">name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果传递参数，多个参数之间以空格分隔</span></span><br><span class=\"line\">name param1 param2 param3</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>和其它编程语言不同的是，Shell 函数在定义时不能指明参数，但是在调用时却可以传递参数，在方法体内引用时通过$1,$2,……来使用传递过来的参数</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 函数定义，不需要接收参数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">start</span></span>()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">&quot;start&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 函数调用，在shell脚本中，可以将调用放在定义的前面</span></span><br><span class=\"line\">start</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 函数定义，需要接收参数，假设这里需要接收两个数字并求和</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">sum</span></span>()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> $(( <span class=\"variable\">$1</span> + <span class=\"variable\">$2</span> ))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 函数调用</span></span><br><span class=\"line\"><span class=\"built_in\">sum</span> 1 2</span><br><span class=\"line\"><span class=\"comment\"># 输出结果</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> $?</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 多个参数求和</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">getsum</span></span>()&#123;</span><br><span class=\"line\">    <span class=\"comment\"># 定义局部变量，变量前面要加上local关键字</span></span><br><span class=\"line\">    <span class=\"built_in\">local</span> <span class=\"built_in\">sum</span>=0</span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> <span class=\"variable\">$@</span></span><br><span class=\"line\">    <span class=\"keyword\">do</span></span><br><span class=\"line\">        ((<span class=\"built_in\">sum</span>+=n))</span><br><span class=\"line\">    <span class=\"keyword\">done</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"variable\">$sum</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># 函数调用</span></span><br><span class=\"line\">getsum 10 20 55 15  <span class=\"comment\">#调用函数并传递参数</span></span><br><span class=\"line\"><span class=\"comment\"># 输出结果</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> $?</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>shell函数中定义变量，也是全局变量，在函数体外也可以被调用，要是希望在函数体内定义的变量仅能被函数体内调用，则需要在变量前加上<code>local</code>关键字</p>\n</li>\n</ul>\n<h2 id=\"运行shell\">运行shell</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>sh test.sh</code> : 运行shell脚本</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>sh -x test.sh</code> : 执行脚本，并显示全部过程</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>sh -n test.sh</code> : 不执行脚本，只检查语法错误</p>\n</li>\n<li class=\"lvl-2\">\n<p>也可以为shell脚本授予执行权限，然后通过<code>.</code>关键字执行，比如<code>. ~/test.sh</code>，或者直接通过脚本路径运行<code>~/test.sh</code>(注意要设置文件头指定shell)</p>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">如果在windows环境下编写的脚步，上传到linux后需要先执行<code>dos2unix</code>进行编码转换，否则不能正确执行</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dos2unix test.sh</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">如果<code>dos2unix</code>命令不存在，可以通过<code>yum</code>进行安装</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install dos2unix -y</span><br></pre></td></tr></table></figure>\n</div>\n","content_text":"摘要 本文介绍shell编程的语法规则。 本文基于CentOS8(x86_64) 文件头 12#!/bin/sh :指定执行脚步的shell路径#!/usr/bin/env bash :从env中查找指定的shell路径 如果没有为脚本设置文件头指定执行脚本的shell路径，则默认使用运行脚本的用户的shell 注释语法 # : 使用#进行单行注释，要讲某行注释，就在该行行首添加# 特殊变量 $0 : 当前脚本的文件名（间接运行时还包括绝对路径）。 $n : 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是 $1 。 $# : 传递给脚本或函数的参数个数。 $* : 传递给脚本或函数的所有参数。 $@ : 传递给脚本或函数的所有参数。被双引号 &quot;$@&quot; 包含时，与 &quot;$*&quot; 不同，下面将会讲到。 $? : 上个命令的退出状态(0:success 非0:error)，或函数的返回值。 $$ : 当前 Shell 进程 ID。对于 Shell 脚本，就是这些脚本所在的进程 ID。 $_ : 上一个命令的最后一个参数 $! : 后台运行的最后一个进程的 ID 号 小贴士 $* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号 &quot;&quot; 包含时，都以独立个体&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数。 但是当它们被双引号 &quot;&quot; 包含时，&quot;$*&quot;会将所有的参数作为一个整体输出，&quot;$@&quot;依旧会以独立个体&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot; 的形式输出所有参数。 12345678910111213141516171819202122232425262728293031323334353637383940# $*for i in $*do echo $idone# sh test.sh 1 2 3 4，此时输出1234# &quot;$*&quot;for i in &quot;$*&quot;do echo $idone# sh test.sh 1 2 3 4，此时输出1 2 3 4# $@for i in $@do echo $idone# sh test.sh 1 2 3 4，此时输出1234# &quot;$@&quot;for i in &quot;$@&quot;do echo $idone# sh test.sh 1 2 3 4，此时输出1234 获取参数数量： 1paramSize=$&#123;#@&#125; 自定义变量 字符串 123456789101112# 定义一个字符串变量s1=&quot;content&quot;# 定义一个变量接收之前定义过的变量，使用变量时需要使用 $+变量名称s2=$s1# 定义一个变量为之前定义过的变量与其它字符串的组合，此时可以使用 &#123;&#125; 将变量名称括起来以避免歧义s3=&quot;$&#123;s1&#125;_test&quot;# 定义一个变量接收日期字符串，``括起来的内容会优先执行，并把结果赋值给变量s4=`date +%F&#x27; &#x27;%T`now=`date +%Y%m%d_%H%M%S` 小贴士 $与$&#123; &#125;都是用来引用变量的，$&#123; &#125;通常用于划定变量名的边界 当执行 echo &quot;$aa&quot;的时候系统会打印变量$aa的值，当执行echo &quot;$&#123;a&#125;a&quot;时打印的是$&#123;a&#125;和字母a，如果不需要为变量名划分边界的话，$a和$&#123;a&#125;是完全相等的。 除此之外，$&#123; &#125;还有一个重要的功能，就是文本处理: 1.获取字符串长度 12str=&#x27;hello&#x27;echo $&#123;#str&#125; # 5 2.字符串切片$&#123;a:b:c&#125;: 将字符串变量a从第b个位置开始向后截取c个字符，b是指下标，下标从0开始，c可以不指定，表示截取到字符串末尾 12345678a=&#x27;hello world!&#x27;echo $&#123;a:0:5&#125; # hello# 不指定c，表示从第6个字符开始截取到字符串末尾echo $&#123;a:6&#125; # world!# 截取从倒数第一个字符开始到字符串末尾的字符echo $&#123;a:(-1)&#125; # !# 截取从倒数第 6 个字符后的 5 个字符echo $&#123;a:(-6):5&#125; # world 3.替换字符串$&#123;a/b/c&#125;: 将变量a中的b全部替换为c，开头一个正斜杠为只匹配第一个字符串，两个正斜杠为匹配所有字符。 1234567a=&#x27;hello hello world&#x27;echo &quot;$&#123;a/hello/hi&#125;&quot; # hi hello worldecho &quot;$&#123;a//hello/hi&#125;&quot; # hi hi world# 支持正则str=123abcecho $&#123;str//[^0-9]/&#125; # 123，将非数字替换为空echo $&#123;str//[0-9]/&#125; # abc，将数字替换为空 4.字符串截取 12345678910111213141516171819202122# 格式：# 删除匹配前缀$&#123;parameter#word&#125;$&#123;parameter##word&#125;# 删除匹配后缀$&#123;parameter%word&#125;$&#123;parameter%%word&#125;# 去掉左边，#最短匹配模式，##最长匹配模式。% 去掉右边，%最短匹配模式，%%最长匹配模式。# 示例URL=&quot;http://www.baidu.com/baike/user.html&quot;# 匹配http://，以//为分隔符截取出右边字符串echo $&#123;URL#*//&#125; # www.baidu.com/baike/user.html# 以/为分隔符截取右边字符串，##表示尽可能多的删除，保留最少内容echo $&#123;URL##*/&#125; # user.htmlecho $&#123;URL#*/&#125; # /www.baidu.com/baike/user.html# 以/为分隔符截取左边字符串，%%表示尽可能多的删除，即保留最少内容echo $&#123;URL%%/*&#125; # http:echo $&#123;URL%/*&#125; # http://www.baidu.com/baike 5.变量状态赋值 12345678910111213141516171819202122232425# 格式$&#123;VAR:-string&#125; # 如果 VAR 变量为空则返回 string$&#123;VAR:+string&#125; # 如果 VAR 变量不为空则返回 string$&#123;VAR:=string&#125; # 如果 VAR 变量为空则重新赋值 VAR 变量值为 string$&#123;VAR:?string&#125; # 如果 VAR 变量为空则将 string 输出到 stderr# 示例# 如果变量为空就返回 hello world!VAR=echo $&#123;VAR:-&#x27;hello world!&#x27;&#125; # hello world!echo $VAR # 空# 如果变量不为空就返回 hello world!VAR=&quot;hello&quot;echo $&#123;VAR:+&#x27;hello world!&#x27;&#125; # hello world!echo $VAR # hello#如果变量为空就重新赋值：VAR=echo $&#123;VAR:=hello&#125; # helloecho $VAR # hello# 如果变量为空就将信息输出 stderrVAR=echo $&#123;VAR:?value is null&#125; # -bash: VAR: value is null 数字 整数运算 支持let、$(( ))、$[ ]和expr四种方式 123456789101112131415161718192021222324252627# 定义一个数字a1=10# 进行数字运算时，可以使用以下是几种运算方式中的一种# 加法和减法a2=$(($a1 + 5)) or a2=$((a1 + 5))a3=$[$a1 + 5] or a3=$[a1 + 5]# expr 要求运算符之间要有空格a4=`expr $a1 - 5` or a4=$(expr $a1 - 5)# let在引用变量时不需要$，另外运算符之间不能有空格let a5=a1-5# 乘法，注意使用expr方式时，* 要转义，a2=$((a1 * 5))a3=$[a1 * 5]# expr 要求运算符之间要有空格a4=`expr $a1 \\* 5`# let在引用变量时不需要$，另外运算符之间不能有空格let a5=a1*5# 除法a2=$((a1 / 5))a3=$[a1 / 5]# expr 要求运算符之间要有空格a4=`expr $a1 / 5`# let在引用变量时不能有$，运算符之间不能有空格let a5=a1/5 let、$(( ))或$[ ]中的变量都可以不加$前缀 在进行整数运算时，$(( ))和$[ ]的作用是等价的 建议使用let、$(( ))或$[ ]的形式进行运算，其支持正常的运算逻辑，expr稍显笨拙，比如在进行带括号的运算时 123456789a2=$(((a1 - 5) * 5))a3=$[(a1 - 5) * 5]# expr 要求运算符之间要有空格# expr需要分开独立计算a4_1=`expr $a1 - 5`a4_2=`expr $&#123;a4_1&#125; \\* 5`# let在引用变量时不需要$，另外运算符之间不能有空格let a5=(a1-5)*5 小贴士 $()和 `` 的作用一致，都是用来做命令替换用，一般用于将命令返回的结果传递给变量 浮点数计算 12345678910111213x=10y=3.211a1=`echo &quot;$x * 2 / $y&quot; | bc` # a1为6# scale=2 保留两位小数，相当于截断不会四舍五入a2=`echo &quot;scale=2; $x * 2 / $y&quot; | bc` # a2为6.22# awk的计算会四舍五入a2=`echo &quot;$x $y&quot; | awk &#x27;&#123;printf &quot;%.2f\\n&quot;,$1*2/$2&#125;&#x27;` #a2为6.23# bc运算时，整数位小于1不会显示a3=`echo &quot;scale=2; 2 / 3&quot; | bc` # a3为.66，不会显示为0.66# awk可以正确显示a3=`echo 2 3 | awk &#x27;&#123;printf &quot;%.2f\\n&quot;,$1/$2&#125;&#x27;` #a3为0.67 awk 的计算方式比 bc 更好一些，支持精度更为准确 bc和awk的计算方式同样支持整数 数组 123456789101112131415161718#使用小括号定义数组，(元素之间用空格分隔)array=(Zero One Two Three)# 打印数组长度echo $&#123;#array[@]&#125;# 遍历数组# while遍历i=0while [ $i -lt $&#123;#array[@]&#125; ];do echo $&#123;array[$i]&#125; let i=i+1done# for遍历for((i=0;i&lt;$&#123;#array[@]&#125;;i++))do echo $&#123;array[i]&#125;done 从键盘设置变量:read read命令格式 123456read [选项] [变量名] 选项： -p “提示信息”：在等待read输入时，输出提示信息 -t “秒数”： read命令会一致等待用户输入，使用此选项可以指定等待时间 -n “字符数”： read命令只接受指定的字符数，就会执行 -s： 隐藏输入的数据，适用于机密信息的输入 示例 12345678read a # 此时会等待用户键入变量值，比如此时输入: 3echo $a # 3read -t 30 -p &quot;Please input your username:&quot; usernameread -s -t 30 -p &quot;Please input your passsword:&quot; passwordread a b c # 可以设置多个变量，比如此时输入: 1 2 3echo &quot;$&#123;a&#125;_$&#123;b&#125;_$&#123;c&#125;&quot; # 1_2_3 test命令 test作用检查某个条件是否成立，返回值为0（真）或者其他值（假），可通过echo $?查看返回值，也常用于循环和条件语句。 test一般有三种用法： 测试文件或者文件夹是否存在 字符串比较 数值比较 测试文件或者文件夹是否存在 参数说明 12345678-d dir :是否为目录，是目录为真-f file :是否为常规文件，是文件为真-x file/dir :是否可执行，可执行为真-r file/dir :是否可读，可读为真-w file/dir :是否可写，可写为真-a file/dir :文件或目录是否存在，存在为真-e file/dir :文件或目录是否存在，存在为真-s file :文件大小是否非0，非0为真 示例 12345$ test -f test.sh$ echo $?$ test -d dir$ echo $? 字符串比较 参数说明 123456参数 说明-z 当str为空时返回真-n 当str为非空时返回真= 两个字符串相等时返回真== 两个字符串相等时返回真，同=!= 两个字符串不相等时返回真 示例 1234567891011$ test -z &#x27;&#x27;$ echo $? # 输出0$ test -n &#x27;hello&#x27;$ echo $? # 输出0$ test &#x27;hello&#x27; == &#x27;world&#x27;$ echo $? # 输出1$ test &#x27;hello&#x27; != &#x27;world&#x27;$ echo $? # 输出0 数值比较 参数说明，使用&gt;、&lt;等运算符时需要转义 \\&gt;、\\&lt;，或者使用如下参数替换对应的运算符 1234567参数 说明-eq 等于时返回真 ==-ne 不等于时返回真 !=-lt 小于时返回真 &lt;-le 小于等于时返回真 &lt;=-gt 大于时返回真 &gt;-ge 大于等于时返回真 &gt;= 示例 12$ test 1 -lt 2$ echo $? # 输出0 逻辑运算 参数说明 1234参数 说明-a 逻辑与，二者都为真则为真-o 逻辑或，二者任意一个为真则为真! 逻辑非 示例 12345$ test ! -e test.sh$ echo $?$ test -f test.sh -a -d dir$ echo $? shell中的用法 123456i=$1if test $i -lt 5;then echo &quot;$i &lt; 5&quot;else echo &quot;$i &gt;= 5&quot;fi 条件判断 在使用if或while等语句时，需要进行条件判断，上面我们已经见到一个while的例子，其使用[ ]来定义条件判断 实际上除了[ ]以外，我们还可以使用test、(( ))和[[ ]]来进行条件判断，那么他们之间有什么区别吗？ [ ]是test命令的另一种形式，例如 test a == b 等同于 [ a == b ]，注意 [ 后和 ] 前都需要有空格，并且==两边也都要有空格 123test &#x27;hello&#x27; != &#x27;world&#x27; ==&gt; [ &#x27;hello&#x27; != &#x27;world&#x27; ]test ! -e test.sh ==&gt; [ ! -e test.sh ]test $i -lt 5 ==&gt; [ $i -lt 5 ] [[ ]]是[ ]的增强版，其在如下几个方面进行了增强: 1.在[[ ]]中使用&gt;、&lt; 进行数值比较时不需要转义，但是不支持&gt;=、&lt;= 2.支持&amp;&amp;和|| 1234# 以下三种作用相同[[ $a &gt; 3 &amp;&amp; $a != 10 ]][ $a &gt; 3 -a $a != 10 ][ $a &gt; 3 ] &amp;&amp; [ $a != 10 ] 3.[[ ]]在比较字符串时支持正则匹配和通配符匹配 123456789# 通配符匹配a=&quot;linux&quot;[[ $a == l?nu? ]] # 0[[ $a != li* ]] # 1# 正则匹配 `=~`a=&quot;linux&quot;[[ $a =~ ^li ]][[ $a =~ ^li[abn]ux ]] (( )) 用于条件判断时只能进行数值比较，运算符不需要转义，而且不支持-lt、-gt等等 1(( $i &lt;= 5 )) 小贴士 (( ))除了用于条件判断外，还有三种用法： 1.与$结合使用进行数学运算 : $(( )) 2.在for循环命令中控制循环 : for((i=1;i&lt;10;i++)) 3.改变变量的值，且变量前不需要$ : ((i++)) 推荐在进行条件判断时使用[[ ]]，运算符不需要转义，而且支持正则 流程控制语句 if语句 1234567891011121314151617181920212223242526# 语法1# 因为多个语句写在同一行，所以要用;隔开if [[ -d $path ]];then echo &quot;dir&quot;fi# 其实也可以这样写if [[ -d $path ]]then echo &quot;dir&quot;fi# 语法2if [[ -d $path ]];then echo &quot;dir&quot;else echo &quot;not dir&quot;fi# 语法3if [[ -d $path ]];then echo &quot;dir&quot;elif [[ -f $path ]];then echo &quot;file&quot;else echo &quot;not match&quot;fi 示例 12345678910111213141516171819202122232425262728293031323334# 判断参数个数是否正确，只允许输入一个参数paramSize=$&#123;#@&#125;if [[ $paramSize == 0 || $paramSize &gt; 1 ]];then echo &quot;ERROR:需要一个参数!!!&quot; exit 1fi# 判断参数是否为大于0的数字if [ &quot;$1&quot; -gt 0 ] 2&gt;/dev/null ;then echo &quot;$1 id number&quot;else echo &quot;ERROR: $1 is not number!&quot; exit 1fi# 判断参数是否为整数数字，包含正整数，0，负整数expr $1 &quot;+&quot; 0 &amp;&gt; /dev/nullif [[ $? == 0 || $1 == 0 ]];then echo &quot;$1 is number&quot;else echo &quot;$1 not number&quot;fi# 如果导出文件已经存在则先删除if [[ -a $bookId.tar.gz ]];then rm -rf $bookId.tar.gzfi# 判断字符串是否不为空if [[ -n $str ]];then echo &quot;$str is not null&quot;else echo &quot;$str is null&quot;fi case语句 12345678910111213141516171819case &quot;$1&quot; instart) echo &quot;start&quot;;;reload) echo &quot;reload&quot;;;stop) echo &quot;stop&quot;;;status) echo &quot;status&quot;;;*) echo &quot;$0: Usage: &#123;start|status|stop|reload&#125;&quot; # 非0，非正常退出，exit 0 :正常退出 exit 1;;esac select语句 12345678910111213141516# select.shselect var in &quot;Linux&quot; &quot;UNIX&quot; &quot;Windows&quot; &quot;Other&quot;do echo &quot;You have selected $var&quot; # 跳出循环 breakdone# 运行$ sh select.sh1) Linux2) UNIX3) Windows4) Other#? 2 # 输入2，表示选择第二个You have selected UNIX while循环语句 123456a=0while [[ $a &lt; 5 ]]do echo $a ((a++))done until循环语句 类似while，不同点是条件判断为假时才执行 1234567a=5# 不满足条件时执行until [[ $a == 0 ]]do echo $a ((a--))done for循环语句 12345678910111213141516171819202122232425262728293031323334353637383940414243444546# 语法1for((i=0;i&lt;=10;i++))do echo $idone# 语法2# 使用&#123;&#125;和seq生成序列for i in &#123;1..9&#125; # 1 2 3 4 5 6 7 8 9do echo &quot;this is $i&quot;donefor i in &#123;1..9..2&#125; # 1 3 5 7 9do echo &quot;this is $i&quot;donefor i in `seq 1 9` # 1 2 3 4 5 6 7 8 9do echo &quot;this is $i&quot;donefor i in `seq 1 2 9` # 1 3 5 7 9do echo &quot;this is $i&quot;done# 直接列出要遍历的项for day in Sun Mon Tue Wed Thu Fri Satdo echo &quot;The day is : $day&quot;done# 将命令执行结果作为要遍历的内容for line in `cat file`do echo $linedone# 遍历所有参数for p in $@do echo $pdone 其它语句 break : 退出本层循环，继续执行本层循环体后面的代码，注意是退出本层循环体，如果是嵌套循环，则退出break所在层的循环，并非所有的循环 continue : 跳过本次循环，不再执行continue下面的代码，回到循环判断式判断是否继续执行循环 123456789101112for((i=0;i&lt;=10;i++))do if [[ $i == 0 ]];then # 不执行后面的语句直接进行下次循环 continue fi echo $i if [[ $i == 8 ]];then # 跳出循环体，不再进行循环 break fidone exit 0 : 正常退出 exit 1 : 非0，非正常退出 shift : 每执行一次，参数序列顺序左移一个位置，$#的值减1，移出去的参数不再可用 123456789101112131415# shift.shif (( $# &lt;= 0 ));then echo &quot;Not enough parameters&quot; exit 0fisum=0while [[ $# &gt;= 0 ]]do sum=$((sum + $1)) shift #因为每次执行shift，所以上面的$1永远都是下一个参数doneecho $sum# 执行$ sh shift.sh 1 2 3 4 5 # 输出 15 shell函数的定义与使用 shell函数定义 12345678910111213141516171819202122# 函数定义标准写法function name() &#123; statements [return value]&#125;function : Shell 中的关键字，专门用来定义函数name : 函数名statements : 函数要执行的代码，也就是一组语句；return value : 函数的返回值，其中 return 是 Shell 关键字，专门用在函数中返回一个值，这一部分可以写也可以不写。由&#123; &#125;包围的部分称为函数体，调用一个函数，实际上就是执行函数体中的代码。# 函数定义时也可以不写 function 关键字name() &#123; statements [return value]&#125;# 如果写了 function 关键字，也可以省略函数名后面的小括号function name &#123; statements [return value]&#125; shell函数的调用 12345# 如果不传递参数，直接给出函数名字即可name# 如果传递参数，多个参数之间以空格分隔name param1 param2 param3 和其它编程语言不同的是，Shell 函数在定义时不能指明参数，但是在调用时却可以传递参数，在方法体内引用时通过$1,$2,……来使用传递过来的参数 示例 123456# 函数定义，不需要接收参数function start()&#123; echo &quot;start&quot;&#125;# 函数调用，在shell脚本中，可以将调用放在定义的前面start 12345678# 函数定义，需要接收参数，假设这里需要接收两个数字并求和function sum()&#123; return $(( $1 + $2 ))&#125;# 函数调用sum 1 2# 输出结果echo $? 1234567891011121314# 多个参数求和function getsum()&#123; # 定义局部变量，变量前面要加上local关键字 local sum=0 for n in $@ do ((sum+=n)) done return $sum&#125;# 函数调用getsum 10 20 55 15 #调用函数并传递参数# 输出结果echo $? shell函数中定义变量，也是全局变量，在函数体外也可以被调用，要是希望在函数体内定义的变量仅能被函数体内调用，则需要在变量前加上local关键字 运行shell sh test.sh : 运行shell脚本 sh -x test.sh : 执行脚本，并显示全部过程 sh -n test.sh : 不执行脚本，只检查语法错误 也可以为shell脚本授予执行权限，然后通过.关键字执行，比如. ~/test.sh，或者直接通过脚本路径运行~/test.sh(注意要设置文件头指定shell) 小贴士 如果在windows环境下编写的脚步，上传到linux后需要先执行dos2unix进行编码转换，否则不能正确执行 1dos2unix test.sh 如果dos2unix命令不存在，可以通过yum进行安装 1yum install dos2unix -y","summary":"摘要 本文介绍shell编程的语法规则。 本文基于CentOS8(x86_64)","date_published":"2023-03-13T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/11/linux-command05-vim/","url":"https://blog.hanqunfeng.com/2023/03/11/linux-command05-vim/","title":"Linux常用命令--vim编辑器","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n引用本地其它文章连接{}\n 大括号开始% post_link 文件名称(不包含.md) %大括号结束\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍vim编辑器的使用方法。</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"vim操作模式\">vim操作模式</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>vim支持很多种操作模式，常用的有三种操作模式，分别是命令(正常、普通)模式<code>(Command Mode)</code>、插入模式<code>(Insert Mode)</code>和底行模式<code>(Last Line Mode)</code>。</p>\n</li>\n<li class=\"lvl-2\">\n<p>命令(正常、普通)模式<code>(Command Mode)</code></p>\n<blockquote>\n<p>进入vim之后，就处于<code>(Command Mode)</code>之中，在该模式下可以控制屏幕光标的移动，字符、字或行的删除，移动复制某区段以及进入<code>(Insert Mode)</code>或<code>(Last Line Mode)</code></p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p>插入模式<code>(Insert Mode)</code></p>\n<blockquote>\n<p>在命令模式下输入如下字符即可切换至插入模式<br>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a:在光标后   A:在本行末</span><br><span class=\"line\">i:在光标前   I:在本行开始</span><br><span class=\"line\">o:在光标下新开一行   O:在光标上新开一行</span><br><span class=\"line\">此时就可以在光标所在处输入字符了</span><br></pre></td></tr></table></figure><br>\n只有在<code>(Insert Mode)</code>下，才可以做文字输入，按 <code>ESC</code> 键可回到<code>(Command Mode)</code>，该模式是我们用到的最频繁的模式</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p>底行(末行)模式<code>(Last Line Mode)</code></p>\n<blockquote>\n<p>在<code>(Command Mode)</code>下，输入<code>shift + :</code>，其实就是输入 <code>:</code> 即可进入<code>(Last Line Mode)</code><br>\n在<code>(Last Line Mode)</code>下，输入命令并回车即可执行相应的操作，无论输入的命令是否执行成功都会退出<code>(Last Line Mode)</code>并切换回<code>(Command Mode)</code>，<br>\n或者输入命令后不想执行，此时可以连按两次<code>Esc</code>键即可切换回<code>(Command Mode)</code>，或者按退格键直到取消<code>:</code>也会回到<code>(Command Mode)</code><br>\n在<code>(Last Line Mode)</code>下，可以进行文件保存或退出，也可以进行文件替换，找字符串，列出行号等操作</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p>要查看vim的所有操作模式，可以在命令行输入<code>vim</code>，然后在底行模式中输入<code>help vim-modes</code>命令即可。</p>\n</li>\n</ul>\n<h2 id=\"vim语法\">vim语法</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># fileName不存在则创建</span></span><br><span class=\"line\">vim fileName</span><br><span class=\"line\"><span class=\"comment\"># 也可以不加fileName直接打开vim编辑器，此时需要在保存时指定fileName</span></span><br><span class=\"line\">vim</span><br></pre></td></tr></table></figure>\n<h2 id=\"命令-正常、普通-模式-Command-Mode-相关指令\">命令(正常、普通)模式<code>(Command Mode)</code>相关指令</h2>\n<h3 id=\"移动光标\">移动光标</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>vim可以直接用键盘上的上下左右键来移动光标，但正规的vim是用小写英文字母 <code>h 、 j 、 k 、 l</code> ，分别控制光标左、下、上、右移一格</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>gg</code> :光标移动到第一行开始处</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>G</code> :光标移动到最后一行开始处</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>#G</code> : 例如，15G ，表示移动光标至第15行行首</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>$</code> :移动到光标所在行的行尾</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>^ (0)</code> :移动到光标所在行的行首</p>\n</li>\n</ul>\n<blockquote>\n<p>上面的比较常用</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>H</code> : 光标移动到当前屏幕中的第一行开始处</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>L</code> : 光标移动到当前屏幕中的最后一行开始处</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>M</code> : 光标移动到当前屏幕中的最中间一行开始处</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>w</code> :光标跳到下个字的开头</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>e</code> :光标跳到下个字的字尾</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>b</code> :光标回到上个字的开头</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>#l</code> :光标移到相对当前光标所在处后的第#个位置，如:当前光标在本行第3个字符处，则5l表示移动到本行第8个字符处</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + b</code> :屏幕往后移动一页</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + f</code> :屏幕往前移动一页</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + u</code> :屏幕往后移动半页</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + d</code> :屏幕往前移动半页</p>\n</li>\n</ul>\n<h3 id=\"删除文字\">删除文字</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>x</code> :每按一次，删除光标所在位置的一个字符</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>dd</code> :删除光标所在行</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>#dd</code> :从光标所在行开始删除#行</p>\n</li>\n</ul>\n<blockquote>\n<p>上面的比较常用</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>#x</code> :例如，6x 表示删除光标所在位置的后面（包含自己在内）6个字符</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>X</code> :大写的X，每按一次，删除光标所在位置的前面一个字符</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>#X</code> :例如，20X 表示删除光标所在位置的前面20个字符</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>dG</code> :删除光标所在行到末尾的内容</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>D</code> :删除光标所在处到行尾</p>\n</li>\n</ul>\n<h3 id=\"复制\">复制</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>yy</code> :复制光标所在行到缓冲区。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>#yy</code> :例如，6yy 表示拷贝从光标所在的该行往下数6行文字</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>p</code>:将缓冲区内的字符贴到光标所在位置。注意:所有与 <code>y</code> 有关的复制命令都必须与 <code>p</code> 配合才能完成复制与粘贴功能</p>\n</li>\n</ul>\n<blockquote>\n<p>上面的比较常用</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>yw</code> :将光标所在之处到字尾的字符复制到缓冲区中</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>#yw</code> :复制#个字到缓冲区</p>\n</li>\n</ul>\n<h3 id=\"替换\">替换</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>r</code> :替换光标所在处的字符，一次只能替换一个字符</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>R</code> :替换光标所到之处的字符，直到按下 <code>ESC</code> 键为止</p>\n</li>\n</ul>\n<blockquote>\n<p>不常用，直接进入插入模式修改就行</p>\n</blockquote>\n<h3 id=\"更改\">更改</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>cw</code> :更改光标所在处的字到字尾处，标点符号或空格分隔，此时进入<code>(Insert Mode)</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>c#w</code> :例如，c3w 表示更改3个字，标点符号或空格分隔，此时进入<code>(Insert Mode)</code></p>\n</li>\n</ul>\n<blockquote>\n<p>不常用，直接进入插入模式修改就行</p>\n</blockquote>\n<h3 id=\"撤销或恢复上一次操作\">撤销或恢复上一次操作</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>u</code> : 如果您误执行一个命令，可以马上按下 <code>u</code> ，回到上一个操作，按多次<code>u</code>可以执行多次恢复。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + r</code> : 撤销恢复，多次执行<code>ctrl + r</code>，可以多次撤销</p>\n</li>\n</ul>\n<h2 id=\"底行-末行-模式-Last-Line-Mode-相关指令\">底行(末行)模式<code>(Last Line Mode)</code>相关指令</h2>\n<h3 id=\"列出或取消行号\">列出或取消行号</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>set nu</code> : 输入 <code>set nu</code> 后，会在文件中的每一行前面列出行号</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>set nonu</code> : 输入 <code>set nonu</code> 后，会取消文件中的每一行前面列出的行号</p>\n</li>\n</ul>\n<h3 id=\"跳到文件中的某一行\">跳到文件中的某一行</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>#</code> : <code>#</code> 号表示一个数字，再冒号后输入一个数字，再按回车键就会跳到该行</p>\n</li>\n</ul>\n<h3 id=\"查找字符\">查找字符</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>/ + key</code> : 先按 <code>/</code> 键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按 <code>n</code> 会往 <em><strong>后</strong></em> 寻找到您要的内容，循环往复。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>? + key1</code> : 先按 <code>?</code> 键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按 <code>n</code> 会往 <em><strong>前</strong></em> 寻找到您要的内容，循环往复。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>set ic</code> :搜索时忽略大小写</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>set noic</code> :搜索时区分大小写</p>\n</li>\n</ul>\n<h3 id=\"替换，语法类似于sed的s替换\">替换，语法类似于sed的s替换</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>n1s/source/target/</code> :<code>n1</code>代表行号，替换第n1行首次出现的source为target</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>n1s/source/target/i</code> :<code>n1</code>代表行号，替换第n1行首次出现的source为target，<code>i</code>表示不区分大小写</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>n1s/source/target/g</code> :<code>n1</code>代表行号，替换第n行出现的全部source为target</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>%s/source/target/g</code> :<code>%</code>代表所有行，配合<code>g</code>表示全文替换，将整个文档中的source替换为target</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>n1,n2s/source/target/ig</code> :<code>n1,n2</code>代表行号，在n1行到n2行范围内替换指定内容，不区分大小写</p>\n</li>\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n1,n2s/^/#/ :行首添加#</span><br><span class=\"line\">n1,n2s/^#// :去除行首#</span><br><span class=\"line\">n1,n2s/^/\\/\\// :行首添加//</span><br><span class=\"line\">n1,n2s/^\\/\\/// :去除行首//</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除，语法类似于sed的d删除\">删除，语法类似于sed的d删除</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>n1d</code> :n1代表行号，删除指定的行</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>n1,n2d</code> :n1,n2代表行号，删除指定范围的行</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>1,$d</code> :删除所有行的全部内容</p>\n</li>\n</ul>\n<h3 id=\"保存和退出\">保存和退出</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>w</code> :保存修改，不退出</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>w new_filename</code> :另存为，新的文件名称为new_filename</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>wq</code> :保存退出</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>q!</code> :不保存修改退出</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>wq!</code> :强制保存修改并退出，文件是只读的时候可以使用该命令强制保存（只有文件所有者有权限这样做）</p>\n</li>\n</ul>\n<h3 id=\"定义快捷键\">定义快捷键</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>我们可以自己定义快捷键，以定制化一个操作，比如在当前行行首添加<code>#</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>语法为：<code>map ^P I#&lt;ESC&gt;</code> : 定义<code>ctrl + p</code>，其含义为 输入大写字母<code>I</code>进入插入模式,输入<code>#</code>字符后按<code>Esc</code>切换回命令模式，注意，这里定义map时填写的<code>&lt;ESC&gt;</code>是一个字符一个字符写上的，而不是去按一次Esc按键</p>\n<blockquote>\n<p><code>^P</code> 的 输入方法为: <code>ctrl+v+p</code></p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p>此时在当前vim的命令模式下，输入<code>ctrl + p</code>会在光标所在行的行首添加<code>#</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>unmap ^P</code> :取消该快捷键</p>\n</li>\n<li class=\"lvl-2\">\n<p>在底行模式下定义快捷键只对本次vim有效，退出vim就失效了，如要永久生效，可以配置到<code>~/.vimrc</code>中</p>\n</li>\n</ul>\n<h3 id=\"ab替换\">ab替换</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ab替换可以让我们在使用vim的插入模式编辑内容时，输入指定的字符，vim会自动帮我们替换为指定的内容</p>\n</li>\n<li class=\"lvl-2\">\n<p>语法为：<code>ab key1 key2</code>，此时我们输入key1,会自动被vim替换为key2</p>\n<blockquote>\n<p>如：<code>ab myemali hanqunfeng@xxx.com</code>，当输入myemail+空格后，会自动替换为hanqunfeng@xxx.com</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p><code>unab myemail</code> :取消</p>\n</li>\n<li class=\"lvl-2\">\n<p>在底行模式下定义ab替换只对本次vim有效，退出vim就失效了，如要永久生效，可以配置到<code>~/.vimrc</code>中</p>\n</li>\n</ul>\n<h2 id=\"vim配置\">vim配置</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>配置文件的位置</p>\n<blockquote>\n<p>在目录 <code>/etc</code>目录下面，有个名为<code>vimrc</code>的文件，这是系统中公共的vim配置文件，对所有用户都有效。<br>\n而在每个用户的home目录下，都可以自己建立私有的配置文件，命名为：<code>.vimrc</code><br>\n私有配置会覆盖公共配置中相同的内容，通常我们只修改私有配置文件</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p>常用配置，注释是行首双引号</p>\n</li>\n</ul>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&quot; 快捷键</span></span><br><span class=\"line\"><span class=\"keyword\">map</span> ^<span class=\"keyword\">P</span> I#<span class=\"symbol\">&lt;ESC&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&quot; ab替换</span></span><br><span class=\"line\"><span class=\"keyword\">ab</span> myemali hanqunfeng@xxx.<span class=\"keyword\">com</span></span><br><span class=\"line\"><span class=\"comment\">&quot; 显示行号</span></span><br><span class=\"line\"><span class=\"keyword\">set</span>  <span class=\"keyword\">nu</span></span><br><span class=\"line\"><span class=\"comment\">&quot; 语法高亮</span></span><br><span class=\"line\"><span class=\"keyword\">syntax</span> <span class=\"keyword\">on</span></span><br><span class=\"line\"><span class=\"comment\">&quot; 缩进为4</span></span><br><span class=\"line\"><span class=\"keyword\">set</span> <span class=\"built_in\">shiftwidth</span>=<span class=\"number\">4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&quot; 括号和引号的自动补全</span></span><br><span class=\"line\"><span class=\"keyword\">inoremap</span> ( ()<span class=\"symbol\">&lt;ESC&gt;</span>i</span><br><span class=\"line\"><span class=\"keyword\">inoremap</span> [ []<span class=\"symbol\">&lt;ESC&gt;</span>i</span><br><span class=\"line\"><span class=\"keyword\">inoremap</span> &#123; &#123;&#125;<span class=\"symbol\">&lt;ESC&gt;</span>i</span><br><span class=\"line\"><span class=\"keyword\">inoremap</span> <span class=\"string\">&#x27; &#x27;</span><span class=\"string\">&#x27;&lt;ESC&gt;i</span></span><br><span class=\"line\"><span class=\"string\">inoremap &quot; &quot;&quot;&lt;ESC&gt;i</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>关于vim更为详细的配置请参考 <a href=\"/2021/01/23/vimrc/\" title=\"vim配置\">vim配置</a></p>\n</li>\n</ul>\n","content_text":"摘要 本文介绍vim编辑器的使用方法。 本文基于CentOS8(x86_64) vim操作模式 vim支持很多种操作模式，常用的有三种操作模式，分别是命令(正常、普通)模式(Command Mode)、插入模式(Insert Mode)和底行模式(Last Line Mode)。 命令(正常、普通)模式(Command Mode) 进入vim之后，就处于(Command Mode)之中，在该模式下可以控制屏幕光标的移动，字符、字或行的删除，移动复制某区段以及进入(Insert Mode)或(Last Line Mode) 插入模式(Insert Mode) 在命令模式下输入如下字符即可切换至插入模式 1234a:在光标后 A:在本行末i:在光标前 I:在本行开始o:在光标下新开一行 O:在光标上新开一行此时就可以在光标所在处输入字符了 只有在(Insert Mode)下，才可以做文字输入，按 ESC 键可回到(Command Mode)，该模式是我们用到的最频繁的模式 底行(末行)模式(Last Line Mode) 在(Command Mode)下，输入shift + :，其实就是输入 : 即可进入(Last Line Mode) 在(Last Line Mode)下，输入命令并回车即可执行相应的操作，无论输入的命令是否执行成功都会退出(Last Line Mode)并切换回(Command Mode)， 或者输入命令后不想执行，此时可以连按两次Esc键即可切换回(Command Mode)，或者按退格键直到取消:也会回到(Command Mode) 在(Last Line Mode)下，可以进行文件保存或退出，也可以进行文件替换，找字符串，列出行号等操作 要查看vim的所有操作模式，可以在命令行输入vim，然后在底行模式中输入help vim-modes命令即可。 vim语法 1234# fileName不存在则创建vim fileName# 也可以不加fileName直接打开vim编辑器，此时需要在保存时指定fileNamevim 命令(正常、普通)模式(Command Mode)相关指令 移动光标 vim可以直接用键盘上的上下左右键来移动光标，但正规的vim是用小写英文字母 h 、 j 、 k 、 l ，分别控制光标左、下、上、右移一格 gg :光标移动到第一行开始处 G :光标移动到最后一行开始处 #G : 例如，15G ，表示移动光标至第15行行首 $ :移动到光标所在行的行尾 ^ (0) :移动到光标所在行的行首 上面的比较常用 H : 光标移动到当前屏幕中的第一行开始处 L : 光标移动到当前屏幕中的最后一行开始处 M : 光标移动到当前屏幕中的最中间一行开始处 w :光标跳到下个字的开头 e :光标跳到下个字的字尾 b :光标回到上个字的开头 #l :光标移到相对当前光标所在处后的第#个位置，如:当前光标在本行第3个字符处，则5l表示移动到本行第8个字符处 ctrl + b :屏幕往后移动一页 ctrl + f :屏幕往前移动一页 ctrl + u :屏幕往后移动半页 ctrl + d :屏幕往前移动半页 删除文字 x :每按一次，删除光标所在位置的一个字符 dd :删除光标所在行 #dd :从光标所在行开始删除#行 上面的比较常用 #x :例如，6x 表示删除光标所在位置的后面（包含自己在内）6个字符 X :大写的X，每按一次，删除光标所在位置的前面一个字符 #X :例如，20X 表示删除光标所在位置的前面20个字符 dG :删除光标所在行到末尾的内容 D :删除光标所在处到行尾 复制 yy :复制光标所在行到缓冲区。 #yy :例如，6yy 表示拷贝从光标所在的该行往下数6行文字 p:将缓冲区内的字符贴到光标所在位置。注意:所有与 y 有关的复制命令都必须与 p 配合才能完成复制与粘贴功能 上面的比较常用 yw :将光标所在之处到字尾的字符复制到缓冲区中 #yw :复制#个字到缓冲区 替换 r :替换光标所在处的字符，一次只能替换一个字符 R :替换光标所到之处的字符，直到按下 ESC 键为止 不常用，直接进入插入模式修改就行 更改 cw :更改光标所在处的字到字尾处，标点符号或空格分隔，此时进入(Insert Mode) c#w :例如，c3w 表示更改3个字，标点符号或空格分隔，此时进入(Insert Mode) 不常用，直接进入插入模式修改就行 撤销或恢复上一次操作 u : 如果您误执行一个命令，可以马上按下 u ，回到上一个操作，按多次u可以执行多次恢复。 ctrl + r : 撤销恢复，多次执行ctrl + r，可以多次撤销 底行(末行)模式(Last Line Mode)相关指令 列出或取消行号 set nu : 输入 set nu 后，会在文件中的每一行前面列出行号 set nonu : 输入 set nonu 后，会取消文件中的每一行前面列出的行号 跳到文件中的某一行 # : # 号表示一个数字，再冒号后输入一个数字，再按回车键就会跳到该行 查找字符 / + key : 先按 / 键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按 n 会往 后 寻找到您要的内容，循环往复。 ? + key1 : 先按 ? 键，再输入您想寻找的字符，如果第一次找的关键字不是您想要的，可以一直按 n 会往 前 寻找到您要的内容，循环往复。 set ic :搜索时忽略大小写 set noic :搜索时区分大小写 替换，语法类似于sed的s替换 n1s/source/target/ :n1代表行号，替换第n1行首次出现的source为target n1s/source/target/i :n1代表行号，替换第n1行首次出现的source为target，i表示不区分大小写 n1s/source/target/g :n1代表行号，替换第n行出现的全部source为target %s/source/target/g :%代表所有行，配合g表示全文替换，将整个文档中的source替换为target n1,n2s/source/target/ig :n1,n2代表行号，在n1行到n2行范围内替换指定内容，不区分大小写 示例 1234n1,n2s/^/#/ :行首添加#n1,n2s/^#// :去除行首#n1,n2s/^/\\/\\// :行首添加//n1,n2s/^\\/\\/// :去除行首// 删除，语法类似于sed的d删除 n1d :n1代表行号，删除指定的行 n1,n2d :n1,n2代表行号，删除指定范围的行 1,$d :删除所有行的全部内容 保存和退出 w :保存修改，不退出 w new_filename :另存为，新的文件名称为new_filename wq :保存退出 q! :不保存修改退出 wq! :强制保存修改并退出，文件是只读的时候可以使用该命令强制保存（只有文件所有者有权限这样做） 定义快捷键 我们可以自己定义快捷键，以定制化一个操作，比如在当前行行首添加# 语法为：map ^P I#&lt;ESC&gt; : 定义ctrl + p，其含义为 输入大写字母I进入插入模式,输入#字符后按Esc切换回命令模式，注意，这里定义map时填写的&lt;ESC&gt;是一个字符一个字符写上的，而不是去按一次Esc按键 ^P 的 输入方法为: ctrl+v+p 此时在当前vim的命令模式下，输入ctrl + p会在光标所在行的行首添加# unmap ^P :取消该快捷键 在底行模式下定义快捷键只对本次vim有效，退出vim就失效了，如要永久生效，可以配置到~/.vimrc中 ab替换 ab替换可以让我们在使用vim的插入模式编辑内容时，输入指定的字符，vim会自动帮我们替换为指定的内容 语法为：ab key1 key2，此时我们输入key1,会自动被vim替换为key2 如：ab myemali hanqunfeng@xxx.com，当输入myemail+空格后，会自动替换为hanqunfeng@xxx.com unab myemail :取消 在底行模式下定义ab替换只对本次vim有效，退出vim就失效了，如要永久生效，可以配置到~/.vimrc中 vim配置 配置文件的位置 在目录 /etc目录下面，有个名为vimrc的文件，这是系统中公共的vim配置文件，对所有用户都有效。 而在每个用户的home目录下，都可以自己建立私有的配置文件，命名为：.vimrc 私有配置会覆盖公共配置中相同的内容，通常我们只修改私有配置文件 常用配置，注释是行首双引号 1234567891011121314151617&quot; 快捷键map ^P I#&lt;ESC&gt;&quot; ab替换ab myemali hanqunfeng@xxx.com&quot; 显示行号set nu&quot; 语法高亮syntax on&quot; 缩进为4set shiftwidth=4&quot; 括号和引号的自动补全inoremap ( ()&lt;ESC&gt;iinoremap [ []&lt;ESC&gt;iinoremap &#123; &#123;&#125;&lt;ESC&gt;iinoremap &#x27; &#x27;&#x27;&lt;ESC&gt;iinoremap &quot; &quot;&quot;&lt;ESC&gt;i 关于vim更为详细的配置请参考 vim配置","summary":"摘要 本文介绍vim编辑器的使用方法。 本文基于CentOS8(x86_64)","date_published":"2023-03-11T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/10/linux-command04-ctrl/","url":"https://blog.hanqunfeng.com/2023/03/10/linux-command04-ctrl/","title":"Linux常用命令--命令行快捷键","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍常用的命令行快捷键</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"最最常用的快捷键\">最最常用的快捷键</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>tab (ctrl + i)</code> : 命令补全</p>\n<blockquote>\n<p>有些命令如果想不起来怎么拼写了，可以只输入前面几个字符，然后按一次tab键，就会自动补全以输入前缀开头的命令<br>\n按两次tab键，就会显示以输入前缀开头的全部命令</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + c</code> : 停止正在执行的任务 或者 取消当前命令行编辑(删除整行)</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + l</code> : 清除屏幕上所有内容，并开始新的一行，相当于执行<code>clear</code>命令</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + a</code> : 光标回到命令行首</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + e</code> : 光标回到命令行末</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + insert</code> : 复制选中内容，mac下是 <code>command + c</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>alt + insert</code> : 粘贴刚才复制的内容到当前光标处，mac下是 <code>command + v</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>↑<code>(ctrl + p)</code> : 显示上一条历史命令</p>\n</li>\n<li class=\"lvl-2\">\n<p>↓<code>(ctrl + n )</code> : 显示下一条历史命令</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>!!</code> : 执行上一条命令，相当于 ↑ + <code>Enter</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>!key</code>  : 执行上一条以<code>key</code>开头的命令</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>backspace (ctrl + h)</code> : 删除光标前一个字符，mac下是 <code>delete</code>键</p>\n</li>\n</ul>\n<div class=\"success\">\n<p>记住上面的的这些快捷键，基本上日常操作就没啥问题了，下面的快捷键可以使我们的命令行操作更加高效和便捷，能记多少就记多少吧。</p>\n</div>\n<h2 id=\"剪切和删除\">剪切和删除</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>ctrl + k</code> : 剪切光标处到行尾处的字符（有删除的作用）</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + u</code> : 剪切光标处到行首处的字符（有删除的作用）</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + w</code> : 剪切光标前的一个单词（有删除的作用）</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>alt + d</code> : 剪切光标后的一个单词（有删除的作用），mac下是 <code>Esc + d</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + y</code> : 粘贴<code>ctrl + k</code>、<code>ctrl + u</code>、<code>ctrl + w</code>、<code>alt + d</code> 剪切/删除的文本</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + d</code> : 删除光标所在处字符</p>\n</li>\n</ul>\n<h2 id=\"搜索历史命令\">搜索历史命令</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>ctrl + r</code> : 搜索历史命令中的命令记录，输入一些关键字，会自动给出匹配到的结果，连续按<code>ctrl + r</code>，给出下一条匹配结果</p>\n<blockquote>\n<p>类似于 <code>history | grep key</code>，但是<code>ctrl + r</code>给出的结果会去重</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p><code>Enter (ctrl + o) (ctrl + m)</code> : 执行匹配结果中的命令</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + g</code> : 从正在执行<code>ctrl + r</code>的搜索中退出，<code>ctrl + c</code>也行</p>\n</li>\n<li class=\"lvl-2\">\n<p>-&gt;<code>(Esc) (ctrl + j)</code> : 将<code>ctrl + r</code>的搜索中的匹配结果粘贴到命令行，其实好多快捷键都可以达到该效果，随便记住一个吧</p>\n</li>\n</ul>\n<h2 id=\"前台进程转到后台运行\">前台进程转到后台运行</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>假设你发现前台运行的一个进程需要很长的时间，但是你需要干其他的事情，你就可以将当前进程转到后台运行</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + z</code> : 暂停正在运行行中的进程</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[1]+ Stopped /root/bin/rsync.sh  <span class=\"comment\"># [1] 表示的是 jobnumber</span></span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-2\">\n<p><code>bg</code> : 将暂停中的进程转到后台运行</p>\n<blockquote>\n<p>把当前进程暂停后，可以输入使用<code>bg</code>将该程序转到后台运行<br>\n如果有多个暂停中的程序，可以输入<code>bg + jobnumber</code>将指定序号的程序转到后台运行</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p><code>jobs</code> : 显示后台运行的进程信息</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>fg</code> : 将后台运行的进程转到前台运行</p>\n<blockquote>\n<p>把后台运行的进程转到前台运行，可以输入使用<code>fg</code>将该程序转到前台运行<br>\n如果有多个后台运行中的程序，可以输入<code>fg + jobnumber</code>将指定序号的程序转到前台运行</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p>要将一个进程在运行时就直接放到后台运行，可以在命令最后增加 <code>&amp;</code> 符号，但这个仅在当前会话中有效，一旦会话关闭，当前进程就会中断执行</p>\n</li>\n<li class=\"lvl-2\">\n<p>可以在命令最前面加上<code>nohup</code>命令，这样进程就会一直在后台运行直到程序运行结束，而不会因为会话关闭而中断</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> sh test.sh &amp;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"屏幕锁定、-解锁\">屏幕锁定、 解锁</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>ctrl + s</code> : 锁定界面，停止屏幕打印内容，使终端发呆，静止，可以使快速输出的终端屏幕停下来</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + q</code> : 解开<code>ctrl + s</code> 的锁定界面，继续屏幕打印</p>\n</li>\n</ul>\n<h2 id=\"光标移动\">光标移动</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>Esc + .</code> : 获取上一条命令的最后部分（空格分隔）</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>Esc + b</code> : 移动到当前单词的开头</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>Esc + f</code> : 移动到当前单词的结尾</p>\n</li>\n<li class=\"lvl-2\">\n<p>-&gt;<code>(ctrl + f)</code> : 光标向右移动一个字符</p>\n</li>\n<li class=\"lvl-2\">\n<p>&lt;-<code>(ctrl + b)</code> : 光标向左移动一个字符</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>ctrl + t</code> : 交换光标位置前的两个字符</p>\n</li>\n</ul>\n<h2 id=\"其它\">其它</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>!$</code> : 显示最近的一个参数</p>\n<blockquote>\n<p>比如我先用 <code>cat /etc/sysconfig/network-scripts/ifcfg-eth0</code>，然后我想用 vim 编辑。<br>\n一般的做法是先用 ↑ 显示最后一条命令，然后用 <code>ctrl + a</code> 移动到命令最前，删除 cat，然后再输入 vim 命令。<br>\n其实完全可以用 <code>vim !$</code>来代替。</p>\n</blockquote>\n</li>\n</ul>\n","content_text":"摘要 本文介绍常用的命令行快捷键 本文基于CentOS8(x86_64) 最最常用的快捷键 tab (ctrl + i) : 命令补全 有些命令如果想不起来怎么拼写了，可以只输入前面几个字符，然后按一次tab键，就会自动补全以输入前缀开头的命令 按两次tab键，就会显示以输入前缀开头的全部命令 ctrl + c : 停止正在执行的任务 或者 取消当前命令行编辑(删除整行) ctrl + l : 清除屏幕上所有内容，并开始新的一行，相当于执行clear命令 ctrl + a : 光标回到命令行首 ctrl + e : 光标回到命令行末 ctrl + insert : 复制选中内容，mac下是 command + c alt + insert : 粘贴刚才复制的内容到当前光标处，mac下是 command + v ↑(ctrl + p) : 显示上一条历史命令 ↓(ctrl + n ) : 显示下一条历史命令 !! : 执行上一条命令，相当于 ↑ + Enter !key : 执行上一条以key开头的命令 backspace (ctrl + h) : 删除光标前一个字符，mac下是 delete键 记住上面的的这些快捷键，基本上日常操作就没啥问题了，下面的快捷键可以使我们的命令行操作更加高效和便捷，能记多少就记多少吧。 剪切和删除 ctrl + k : 剪切光标处到行尾处的字符（有删除的作用） ctrl + u : 剪切光标处到行首处的字符（有删除的作用） ctrl + w : 剪切光标前的一个单词（有删除的作用） alt + d : 剪切光标后的一个单词（有删除的作用），mac下是 Esc + d ctrl + y : 粘贴ctrl + k、ctrl + u、ctrl + w、alt + d 剪切/删除的文本 ctrl + d : 删除光标所在处字符 搜索历史命令 ctrl + r : 搜索历史命令中的命令记录，输入一些关键字，会自动给出匹配到的结果，连续按ctrl + r，给出下一条匹配结果 类似于 history | grep key，但是ctrl + r给出的结果会去重 Enter (ctrl + o) (ctrl + m) : 执行匹配结果中的命令 ctrl + g : 从正在执行ctrl + r的搜索中退出，ctrl + c也行 -&gt;(Esc) (ctrl + j) : 将ctrl + r的搜索中的匹配结果粘贴到命令行，其实好多快捷键都可以达到该效果，随便记住一个吧 前台进程转到后台运行 假设你发现前台运行的一个进程需要很长的时间，但是你需要干其他的事情，你就可以将当前进程转到后台运行 ctrl + z : 暂停正在运行行中的进程 1[1]+ Stopped /root/bin/rsync.sh # [1] 表示的是 jobnumber bg : 将暂停中的进程转到后台运行 把当前进程暂停后，可以输入使用bg将该程序转到后台运行 如果有多个暂停中的程序，可以输入bg + jobnumber将指定序号的程序转到后台运行 jobs : 显示后台运行的进程信息 fg : 将后台运行的进程转到前台运行 把后台运行的进程转到前台运行，可以输入使用fg将该程序转到前台运行 如果有多个后台运行中的程序，可以输入fg + jobnumber将指定序号的程序转到前台运行 要将一个进程在运行时就直接放到后台运行，可以在命令最后增加 &amp; 符号，但这个仅在当前会话中有效，一旦会话关闭，当前进程就会中断执行 可以在命令最前面加上nohup命令，这样进程就会一直在后台运行直到程序运行结束，而不会因为会话关闭而中断 1nohup sh test.sh &amp; 屏幕锁定、 解锁 ctrl + s : 锁定界面，停止屏幕打印内容，使终端发呆，静止，可以使快速输出的终端屏幕停下来 ctrl + q : 解开ctrl + s 的锁定界面，继续屏幕打印 光标移动 Esc + . : 获取上一条命令的最后部分（空格分隔） Esc + b : 移动到当前单词的开头 Esc + f : 移动到当前单词的结尾 -&gt;(ctrl + f) : 光标向右移动一个字符 &lt;-(ctrl + b) : 光标向左移动一个字符 ctrl + t : 交换光标位置前的两个字符 其它 !$ : 显示最近的一个参数 比如我先用 cat /etc/sysconfig/network-scripts/ifcfg-eth0，然后我想用 vim 编辑。 一般的做法是先用 ↑ 显示最后一条命令，然后用 ctrl + a 移动到命令最前，删除 cat，然后再输入 vim 命令。 其实完全可以用 vim !$来代替。","summary":"摘要 本文介绍常用的命令行快捷键 本文基于CentOS8(x86_64)","date_published":"2023-03-10T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-sort/","url":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-sort/","title":"Linux常用命令--文本排序和去重相关命令","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>文本的排序、去重和统计行数等相关命令，如sort、uniq、wc等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"sort\">sort</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们排序输出，默认升序。</p>\n</li>\n</ul>\n<h3 id=\"sort基本用法\">sort基本用法</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 文件内容按ASCII码值进行比较后升序输出</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 忽略大小写</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -f file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -u去重</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -u file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -r降序</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -r file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -o结果输出到文件，类似于重定向 &gt; ，但是比重定向强的一点是可以输出到源文件</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> file -o newfile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -n 按数字大小排序，默认按字符比较，所以10比2小，此时可以加上 -n 来告诉sort要以数值来排序</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -n file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -M 会以月份来排序，比如JAN小于FEB</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -M file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -b 会忽略每一行前面的所有空白部分，从第一个可见字符开始比较</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -b file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -c 检查文件是否已经排好序，如果乱序，则输出第一个乱序的行的相关信息，$?值为1</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -c file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -C 检查文件是否已经排好序，如果乱序，则不输出任何内容，$?值为1</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -C file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 还有一些其它参数</span></span><br><span class=\"line\">-d 只考虑空白区域和字母字</span><br><span class=\"line\">-i 只针对可打印字符进行排序，有些ASCII就是不可打印字符，比如\\n是换行，\\r是回车等等</span><br></pre></td></tr></table></figure>\n<h3 id=\"sort高级用法\">sort高级用法</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>上面结束的sort用法都是从每行的第一个字符开始比较，如果文本可以被分隔为一列一列的内容，我们想按某一列进行排序该如何处理呢？</p>\n</li>\n<li class=\"lvl-2\">\n<p>为了说明这个用法，我准备了一份文件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> file</span><br><span class=\"line\">tom,68,9.1</span><br><span class=\"line\">jack,71,18.7</span><br><span class=\"line\">alex,68,9.8</span><br><span class=\"line\">bar,100,30.6</span><br><span class=\"line\">foo,20,1.2</span><br><span class=\"line\">rucy,100,20.5</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>以第二列进行排序，并按数字大小排序</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -t 分隔符，-k 排序的列号</span></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> -n -t <span class=\"string\">&quot;,&quot;</span> -k 2 file</span><br><span class=\"line\">foo,20,1.2</span><br><span class=\"line\">tom,68,9.1</span><br><span class=\"line\">alex,68,9.8</span><br><span class=\"line\">jack,71,18.7</span><br><span class=\"line\">rucy,100,20.5</span><br><span class=\"line\">bar,100,30.6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里 -n 可以写到 -k中</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -t <span class=\"string\">&quot;,&quot;</span> -k 2n file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也可以将 -r 写到 -k中</span></span><br><span class=\"line\"><span class=\"built_in\">sort</span> -t <span class=\"string\">&quot;,&quot;</span> -k 2nr file</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>以第一列的第二个字符进行排序</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 这里 -k 1.2，表示按第一列的第二个字符排序</span></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> -t <span class=\"string\">&quot;,&quot;</span> -k 1.2 file</span><br><span class=\"line\">jack,71,18.7</span><br><span class=\"line\">bar,100,30.6</span><br><span class=\"line\">alex,68,9.8</span><br><span class=\"line\">tom,68,9.1</span><br><span class=\"line\">foo,20,1.2</span><br><span class=\"line\">rucy,100,20.5</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\"><code>-k</code> 的语法格式为<code>[ FStart [ .CStart ] ] [ Modifier ] [ , [ FEnd [ .CEnd ] ][ Modifier ] ]</code></li>\n<li class=\"lvl-2\">这个语法格式可以被其中的逗号（“，”）分为两大部分，Start部分和End部分。</li>\n<li class=\"lvl-2\">Start部分也由三部分组成，其中的Modifier部分就是我们之前说过的类似n和r的选项部分，比如<code>-k 2nr</code>，<code>b、d、f、i、n 或 r</code>都可以用在Modifier部分。</li>\n<li class=\"lvl-2\">FStart就是表示使用的域，而CStart则表示在FStart域中从第几个字符开始算“排序首字符”，CStart也是可以省略的，省略的话就表示从本域的开头部分开始。</li>\n<li class=\"lvl-2\">之前例子中的 <code>-k 2</code> 就是省略了CStart而只有FStart，而<code>-k 1.2</code>其中的 <code>1</code> 就是FStart，<code>.2</code> 就是CStart。</li>\n<li class=\"lvl-2\">End的部分的组成同Start。</li>\n<li class=\"lvl-2\">Start用于表示从第几个域的第几个字符开始，End用于表示到第几个域的第几个字符结束，如果不设定End部分，那么就认为End被设定为行尾。</li>\n</ul>\n</div>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>先按第二列升序排序，第二列相同则按第三列降序排序</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 看了上面的小贴士，应该可以理解这里的含义</span></span><br><span class=\"line\"><span class=\"comment\"># -k 2,2n 表示从第二个域开始到第二个域结束并按数字升序排序，</span></span><br><span class=\"line\"><span class=\"comment\"># -k 3,3nr 表示从第三个域开始到第三个域结束并按数字降序排序，</span></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> -t <span class=\"string\">&quot;,&quot;</span> -k 2,2n -k 3,3nr file</span><br><span class=\"line\">foo,20,1.2</span><br><span class=\"line\">alex,68,9.8</span><br><span class=\"line\">tom,68,9.1</span><br><span class=\"line\">jack,71,18.7</span><br><span class=\"line\">bar,100,30.6</span><br><span class=\"line\">rucy,100,20.5</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>-k</code> 和 <code>-u</code> 同时使用要注意，<code>-u</code> 去重时比较的是 <code>-k</code> 指定的区域</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此时比较的是从第二个域到行尾是否重复，所以没有可以去掉的行</span></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> -t <span class=\"string\">&quot;,&quot;</span> -k 2n -u file</span><br><span class=\"line\">foo,20,1.2</span><br><span class=\"line\">tom,68,9.1</span><br><span class=\"line\">alex,68,9.8</span><br><span class=\"line\">jack,71,18.7</span><br><span class=\"line\">rucy,100,20.5</span><br><span class=\"line\">bar,100,30.6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此时比较的仅仅是第二个域，所以第二列重复的行会被去重</span></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> -t <span class=\"string\">&quot;,&quot;</span> -k 2,2n -u file</span><br><span class=\"line\">foo,20,1.2</span><br><span class=\"line\">tom,68,9.1</span><br><span class=\"line\">jack,71,18.7</span><br><span class=\"line\">bar,100,30.6</span><br></pre></td></tr></table></figure>\n<h2 id=\"uniq\">uniq</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>uniq命令用于报告或忽略文件中的重复行，一般与sort命令结合使用</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> file</span><br><span class=\"line\">alex; 68; 98</span><br><span class=\"line\">barr;hello; <span class=\"built_in\">test</span></span><br><span class=\"line\">barr;hello; <span class=\"built_in\">test</span></span><br><span class=\"line\">fooo;loveable;s</span><br><span class=\"line\">jack; 71; 87</span><br><span class=\"line\">jack; 71; 87</span><br><span class=\"line\">mytest; Mark; Percent</span><br><span class=\"line\">tom; 69; 91</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> file | <span class=\"built_in\">uniq</span></span><br><span class=\"line\">alex; 68; 98</span><br><span class=\"line\">barr;hello; <span class=\"built_in\">test</span></span><br><span class=\"line\">fooo;loveable;s</span><br><span class=\"line\">jack; 71; 87</span><br><span class=\"line\">mytest; Mark; Percent</span><br><span class=\"line\">tom; 69; 91</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -c,--count：在每列旁边显示该行重复出现的次数</span></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> file | <span class=\"built_in\">uniq</span> -c</span><br><span class=\"line\">1 alex; 68; 98</span><br><span class=\"line\">2 barr;hello; <span class=\"built_in\">test</span></span><br><span class=\"line\">1 fooo;loveable;s</span><br><span class=\"line\">2 jack; 71; 87</span><br><span class=\"line\">1 mytest; Mark; Percent</span><br><span class=\"line\">1 tom; 69; 91</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -d,--repeated：仅显示重复出现的行</span></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> file | <span class=\"built_in\">uniq</span> -d</span><br><span class=\"line\">barr;hello; <span class=\"built_in\">test</span></span><br><span class=\"line\">jack; 71; 87</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -D, --all-repeated[=delimit-method]，打印重复行的所有行。</span></span><br><span class=\"line\"><span class=\"comment\"># 其中 delimit-method 表示对重复行集合的分隔方式，有三种取值，分别为none、prepend和separate。</span></span><br><span class=\"line\"><span class=\"comment\"># 其中none表示不进行分隔，为默认选项，uniq -D等同于uniq --all-repeated=none；prepend表示在每一个重复行集合前面插入一个空行；separate表示在每个重复行集合间插入一个空行。</span></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> file | <span class=\"built_in\">uniq</span> -D</span><br><span class=\"line\">barr;hello; <span class=\"built_in\">test</span></span><br><span class=\"line\">barr;hello; <span class=\"built_in\">test</span></span><br><span class=\"line\">jack; 71; 87</span><br><span class=\"line\">jack; 71; 87</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> file | <span class=\"built_in\">uniq</span> --all-repeated=separate</span><br><span class=\"line\">barr;hello; <span class=\"built_in\">test</span></span><br><span class=\"line\">barr;hello; <span class=\"built_in\">test</span></span><br><span class=\"line\"></span><br><span class=\"line\">jack; 71; 87</span><br><span class=\"line\">jack; 71; 87</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -u,--unique：只显示唯一的行，即出现次数等于1的行</span></span><br><span class=\"line\">$ <span class=\"built_in\">sort</span> file | <span class=\"built_in\">uniq</span> -u</span><br><span class=\"line\">alex; 68; 98</span><br><span class=\"line\">fooo;loveable;s</span><br><span class=\"line\">mytest; Mark; Percent</span><br><span class=\"line\">tom; 69; 91</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 其它参数</span></span><br><span class=\"line\">-f, --skip-fields=N</span><br><span class=\"line\">\t忽略前N个字段。字段由空白字符（空格符、Tab）分隔。如果您的文档的行被编号，并且您希望比较行中除行号之外的所有内容。如果指定了选项 -f 1，那么下面相邻的两行：</span><br><span class=\"line\">\t1 这是一条线</span><br><span class=\"line\">\t2 这是一条线</span><br><span class=\"line\">\t将被认为是相同的。如果没有指定 -f 1 选项，它们将被认为是不同的。</span><br><span class=\"line\">-i, --ignore-case</span><br><span class=\"line\">\t忽略大小写字符的不同。</span><br><span class=\"line\">-s, --skip-chars=N</span><br><span class=\"line\">\t跳过前面N个字符不比较。</span><br><span class=\"line\">-w, --check-chars=N</span><br><span class=\"line\">\t指定每行要比较的前N个字符数。</span><br></pre></td></tr></table></figure>\n<h2 id=\"wc\">wc</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>wc（word count）命令用于统计文件字节、字符、单词与行的数量</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -l, --lines 统计行数，在统计记录数时，很常用</span></span><br><span class=\"line\">$ <span class=\"built_in\">wc</span> -l /etc/passwd</span><br><span class=\"line\">29 /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -w, --words 统计单词出现次数</span></span><br><span class=\"line\">$ <span class=\"built_in\">wc</span> -w /etc/passwd</span><br><span class=\"line\">48 /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -c, --bytes 统计文件的字节数</span></span><br><span class=\"line\">$ <span class=\"built_in\">wc</span> -c /etc/passwd</span><br><span class=\"line\">1387</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -m, --chars 统计文件的字符数，如果是 ASCII、Latin-1 等单字节编码的字符，字符数等于字节数</span></span><br><span class=\"line\">$ <span class=\"built_in\">wc</span> -m /etc/passwd</span><br><span class=\"line\">1387</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -L, --max-line-length 显示文件中最长行的字符数</span></span><br><span class=\"line\">$ <span class=\"built_in\">wc</span> -L /etc/passwd</span><br><span class=\"line\">85 /etc/passwd</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","content_text":"摘要 文本的排序、去重和统计行数等相关命令，如sort、uniq、wc等等 本文基于CentOS8(x86_64) sort sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们排序输出，默认升序。 sort基本用法 123456789101112131415161718192021222324252627282930313233# 文件内容按ASCII码值进行比较后升序输出sort file# 忽略大小写sort -f file# -u去重sort -u file# -r降序sort -r file# -o结果输出到文件，类似于重定向 &gt; ，但是比重定向强的一点是可以输出到源文件sort file -o newfile# -n 按数字大小排序，默认按字符比较，所以10比2小，此时可以加上 -n 来告诉sort要以数值来排序sort -n file# -M 会以月份来排序，比如JAN小于FEBsort -M file# -b 会忽略每一行前面的所有空白部分，从第一个可见字符开始比较sort -b file# -c 检查文件是否已经排好序，如果乱序，则输出第一个乱序的行的相关信息，$?值为1sort -c file# -C 检查文件是否已经排好序，如果乱序，则不输出任何内容，$?值为1sort -C file# 还有一些其它参数-d 只考虑空白区域和字母字-i 只针对可打印字符进行排序，有些ASCII就是不可打印字符，比如\\n是换行，\\r是回车等等 sort高级用法 上面结束的sort用法都是从每行的第一个字符开始比较，如果文本可以被分隔为一列一列的内容，我们想按某一列进行排序该如何处理呢？ 为了说明这个用法，我准备了一份文件 1234567$ cat filetom,68,9.1jack,71,18.7alex,68,9.8bar,100,30.6foo,20,1.2rucy,100,20.5 以第二列进行排序，并按数字大小排序 1234567891011121314# -t 分隔符，-k 排序的列号$ sort -n -t &quot;,&quot; -k 2 filefoo,20,1.2tom,68,9.1alex,68,9.8jack,71,18.7rucy,100,20.5bar,100,30.6# 这里 -n 可以写到 -k中sort -t &quot;,&quot; -k 2n file# 也可以将 -r 写到 -k中sort -t &quot;,&quot; -k 2nr file 以第一列的第二个字符进行排序 12345678# 这里 -k 1.2，表示按第一列的第二个字符排序$ sort -t &quot;,&quot; -k 1.2 filejack,71,18.7bar,100,30.6alex,68,9.8tom,68,9.1foo,20,1.2rucy,100,20.5 小贴士 -k 的语法格式为[ FStart [ .CStart ] ] [ Modifier ] [ , [ FEnd [ .CEnd ] ][ Modifier ] ] 这个语法格式可以被其中的逗号（“，”）分为两大部分，Start部分和End部分。 Start部分也由三部分组成，其中的Modifier部分就是我们之前说过的类似n和r的选项部分，比如-k 2nr，b、d、f、i、n 或 r都可以用在Modifier部分。 FStart就是表示使用的域，而CStart则表示在FStart域中从第几个字符开始算“排序首字符”，CStart也是可以省略的，省略的话就表示从本域的开头部分开始。 之前例子中的 -k 2 就是省略了CStart而只有FStart，而-k 1.2其中的 1 就是FStart，.2 就是CStart。 End的部分的组成同Start。 Start用于表示从第几个域的第几个字符开始，End用于表示到第几个域的第几个字符结束，如果不设定End部分，那么就认为End被设定为行尾。 先按第二列升序排序，第二列相同则按第三列降序排序 12345678910# 看了上面的小贴士，应该可以理解这里的含义# -k 2,2n 表示从第二个域开始到第二个域结束并按数字升序排序，# -k 3,3nr 表示从第三个域开始到第三个域结束并按数字降序排序，$ sort -t &quot;,&quot; -k 2,2n -k 3,3nr filefoo,20,1.2alex,68,9.8tom,68,9.1jack,71,18.7bar,100,30.6rucy,100,20.5 -k 和 -u 同时使用要注意，-u 去重时比较的是 -k 指定的区域 123456789101112131415# 此时比较的是从第二个域到行尾是否重复，所以没有可以去掉的行$ sort -t &quot;,&quot; -k 2n -u filefoo,20,1.2tom,68,9.1alex,68,9.8jack,71,18.7rucy,100,20.5bar,100,30.6# 此时比较的仅仅是第二个域，所以第二列重复的行会被去重$ sort -t &quot;,&quot; -k 2,2n -u filefoo,20,1.2tom,68,9.1jack,71,18.7bar,100,30.6 uniq uniq命令用于报告或忽略文件中的重复行，一般与sort命令结合使用 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869$ cat filealex; 68; 98barr;hello; testbarr;hello; testfooo;loveable;sjack; 71; 87jack; 71; 87mytest; Mark; Percenttom; 69; 91$ sort file | uniqalex; 68; 98barr;hello; testfooo;loveable;sjack; 71; 87mytest; Mark; Percenttom; 69; 91# -c,--count：在每列旁边显示该行重复出现的次数$ sort file | uniq -c1 alex; 68; 982 barr;hello; test1 fooo;loveable;s2 jack; 71; 871 mytest; Mark; Percent1 tom; 69; 91# -d,--repeated：仅显示重复出现的行$ sort file | uniq -dbarr;hello; testjack; 71; 87# -D, --all-repeated[=delimit-method]，打印重复行的所有行。# 其中 delimit-method 表示对重复行集合的分隔方式，有三种取值，分别为none、prepend和separate。# 其中none表示不进行分隔，为默认选项，uniq -D等同于uniq --all-repeated=none；prepend表示在每一个重复行集合前面插入一个空行；separate表示在每个重复行集合间插入一个空行。$ sort file | uniq -Dbarr;hello; testbarr;hello; testjack; 71; 87jack; 71; 87$ sort file | uniq --all-repeated=separatebarr;hello; testbarr;hello; testjack; 71; 87jack; 71; 87# -u,--unique：只显示唯一的行，即出现次数等于1的行$ sort file | uniq -ualex; 68; 98fooo;loveable;smytest; Mark; Percenttom; 69; 91# 其它参数-f, --skip-fields=N 忽略前N个字段。字段由空白字符（空格符、Tab）分隔。如果您的文档的行被编号，并且您希望比较行中除行号之外的所有内容。如果指定了选项 -f 1，那么下面相邻的两行： 1 这是一条线 2 这是一条线 将被认为是相同的。如果没有指定 -f 1 选项，它们将被认为是不同的。-i, --ignore-case 忽略大小写字符的不同。-s, --skip-chars=N 跳过前面N个字符不比较。-w, --check-chars=N 指定每行要比较的前N个字符数。 wc wc（word count）命令用于统计文件字节、字符、单词与行的数量 1234567891011121314151617181920# -l, --lines 统计行数，在统计记录数时，很常用$ wc -l /etc/passwd29 /etc/passwd# -w, --words 统计单词出现次数$ wc -w /etc/passwd48 /etc/passwd# -c, --bytes 统计文件的字节数$ wc -c /etc/passwd1387# -m, --chars 统计文件的字符数，如果是 ASCII、Latin-1 等单字节编码的字符，字符数等于字节数$ wc -m /etc/passwd1387# -L, --max-line-length 显示文件中最长行的字符数$ wc -L /etc/passwd85 /etc/passwd","summary":"摘要 文本的排序、去重和统计行数等相关命令，如sort、uniq、wc等等 本文基于CentOS8(x86_64)","date_published":"2023-03-06T13:45:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-split/","url":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-split/","title":"Linux常用命令--文本分割相关命令","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>文本分割合并等相关命令，如tr、cut、paste和split等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"tr\">tr</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>tr用来从标准输入中替换、缩减和删除字符，并将结果写到标准输出</p>\n</li>\n<li class=\"lvl-2\">\n<p>语法</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">tr</span> [选项]... SET1 [SET2]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> file | <span class=\"built_in\">tr</span> <span class=\"string\">&#x27;do&#x27;</span> <span class=\"string\">&#x27;hp&#x27;</span> : 将file中内容为<span class=\"keyword\">do</span>替换为hp，替换内容与换内容长度一致</span><br><span class=\"line\"><span class=\"built_in\">cat</span> file | <span class=\"built_in\">tr</span> <span class=\"string\">&#x27;do&#x27;</span> <span class=\"string\">&#x27;hpa&#x27;</span> : 将file中内容为<span class=\"keyword\">do</span>替换为hp，多出的a会内忽略</span><br><span class=\"line\"><span class=\"built_in\">cat</span> file | <span class=\"built_in\">tr</span> <span class=\"string\">&#x27;doABC&#x27;</span> <span class=\"string\">&#x27;hp&#x27;</span> : 将file中内容为<span class=\"keyword\">do</span>替换为hp，ABC都是用替换内容的最后一个字符p进行替换，即doABC替换为hpppp</span><br><span class=\"line\"><span class=\"built_in\">cat</span> file | <span class=\"built_in\">tr</span> <span class=\"string\">&quot;a-z&quot;</span> <span class=\"string\">&quot;A-Z&quot;</span> : 将小写字符替换为大写字符</span><br><span class=\"line\"><span class=\"built_in\">cat</span> file | <span class=\"built_in\">tr</span> <span class=\"string\">&quot;\\t&quot;</span> <span class=\"string\">&quot;$&quot;</span> : 支持转义字符，这里将tab替换为$</span><br><span class=\"line\"><span class=\"built_in\">cat</span> file | <span class=\"built_in\">tr</span> -d <span class=\"string\">&#x27;do&#x27;</span> : 将file中内容为<span class=\"keyword\">do</span>的内容删除</span><br><span class=\"line\"><span class=\"built_in\">cat</span> file | <span class=\"built_in\">tr</span> -s <span class=\"string\">&#x27;a-z&#x27;</span> : 去除file中重复的小写字符，只保留第一个</span><br></pre></td></tr></table></figure>\n<h2 id=\"cut\">cut</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>cut命令可以用于分隔每行的内容</p>\n</li>\n<li class=\"lvl-2\">\n<p>语法</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cut</span> [选项]... [文件]...</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 以空格作为分隔符，打印第一组</span></span><br><span class=\"line\"><span class=\"built_in\">cut</span> -d <span class=\"string\">&quot; &quot;</span> -f1 file</span><br><span class=\"line\">    -d：分隔符，按照指定分隔符分割列。与 -f 一起使用</span><br><span class=\"line\">    -f：依据 -d 的分隔字符将一段信息分割成为数段，用 -f 取出第几段的意思（列号，提取第几列）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 以;作为分隔符，打印第二组和第三组，注意打印多组时，分隔符也会打印</span></span><br><span class=\"line\"><span class=\"built_in\">cut</span> -d <span class=\"string\">&quot;;&quot;</span> -f2,3 file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从file文件中取出每行的第5~8个字符</span></span><br><span class=\"line\"><span class=\"built_in\">cut</span> -c 5-8 file</span><br><span class=\"line\">    -c : 以字符 (characters) 的单位取出固定字符区间，可以用来分割中文</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从file文件中取出每行的第2,4,6个字节</span></span><br><span class=\"line\"><span class=\"built_in\">cut</span> -b 2,4,6 file</span><br><span class=\"line\">    -b : 以字节为单位进行分割</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从file文件中取出每行的第6个字节之前的内容</span></span><br><span class=\"line\"><span class=\"built_in\">cut</span> -b -6 file</span><br><span class=\"line\"><span class=\"comment\"># 从file文件中取出每行的第3，第4、第5和第8个字节，数字定位的顺序必须由小到大</span></span><br><span class=\"line\"><span class=\"built_in\">cut</span> -b 3-5,8 file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果使用-b提取中文，如果提取到的不是一个完整的中文字符所占的字节，就会出现乱码</span></span><br><span class=\"line\"><span class=\"comment\"># 比如在utf8编码下，一个中文占3个字节</span></span><br><span class=\"line\"><span class=\"built_in\">cut</span> -b 1 file : 此时中文字符会出现乱码</span><br><span class=\"line\"><span class=\"comment\"># 如果希望中文也能完整的提取，可以加上 -n</span></span><br><span class=\"line\"><span class=\"built_in\">cut</span> -nb 1 file</span><br></pre></td></tr></table></figure>\n<h2 id=\"paste\">paste</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>将多个文件的相应行用制表符连接起来，并输出到标准输出</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> p1.txt</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">$ <span class=\"built_in\">cat</span> p2.txt</span><br><span class=\"line\">zhangsan</span><br><span class=\"line\">lisi</span><br><span class=\"line\">wangwu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 默认分隔符为制表符</span></span><br><span class=\"line\">$ <span class=\"built_in\">paste</span> p1.txt p2.txt</span><br><span class=\"line\">1\tzhangsan</span><br><span class=\"line\">2\tlisi</span><br><span class=\"line\">3\twangwu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定逗号为分隔符</span></span><br><span class=\"line\">$ <span class=\"built_in\">paste</span> -d <span class=\"string\">&quot;,&quot;</span> p1.txt p2.txt</span><br><span class=\"line\">1,zhangsan</span><br><span class=\"line\">2,lisi</span><br><span class=\"line\">3,wangwu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 每个文件的内容作为一行</span></span><br><span class=\"line\">$ <span class=\"built_in\">paste</span> -s -d <span class=\"string\">&quot;,&quot;</span> p1.txt p2.txt</span><br><span class=\"line\">1,2,3</span><br><span class=\"line\">zhangsan,lisi,wangwu</span><br></pre></td></tr></table></figure>\n<h2 id=\"split\">split</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>split命令用于将一个文件分割成数个。该指令将大文件分割成较小的文件，在默认情况下将按照每1000行切割成一个小文件。默认前缀为“x”。没有输入，或者当输入为<code>-</code>，则读取标准输入。</p>\n</li>\n<li class=\"lvl-2\">\n<p>语法</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">split</span> [选项]... [输入 [前缀]]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 分割为1000行的小文件，文件名格式xaa,xab...</span></span><br><span class=\"line\"><span class=\"built_in\">split</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#prefix指定分割后的文件前缀，默认为x</span></span><br><span class=\"line\"><span class=\"built_in\">split</span> file prefix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分割为指定行数的文件，如100行</span></span><br><span class=\"line\"><span class=\"built_in\">split</span> -l 100 file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分割为500M大小的文件</span></span><br><span class=\"line\"><span class=\"built_in\">split</span> -b 500M file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定分割后小文件名后缀</span></span><br><span class=\"line\"><span class=\"built_in\">split</span> --additional-suffix=.<span class=\"built_in\">log</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用数字代替字符文件名，分割后的文件名为x00,x01...的数字形式</span></span><br><span class=\"line\"><span class=\"built_in\">split</span> -d file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定分割后小文件名前缀后跟的文件名长度(不含前缀和后缀)，默认长度为2，这里文件名格式为xaaa.log,xaab.log...</span></span><br><span class=\"line\"><span class=\"comment\"># 当分割后文件的数量大于文件名能表达的最大文件数时，会报错</span></span><br><span class=\"line\"><span class=\"built_in\">split</span> -a 3 --additional-suffix=.<span class=\"built_in\">log</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将分割后的文件合并，如文件名格式为xaaa.log,xaab.log</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> x*.<span class=\"built_in\">log</span> &gt; newfile</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>实战<br>\n使用split数字命名时，序号是从0开始的，如果希望从1开始，可以使用如下方法：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拆分为每100行一个文件，5位数字序号命名，文件名称为: x00000,x00001 ...</span></span><br><span class=\"line\"><span class=\"built_in\">split</span> -a 5 -d -l 100 content.txt</span><br><span class=\"line\"><span class=\"comment\"># 将每个文件名称中的数字加1后重新命名为: new00001,new00002 ...</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -1 | grep ^x | awk -F <span class=\"string\">&#x27;x&#x27;</span> <span class=\"string\">&#x27;&#123;d=sprintf(&quot;%05d&quot; ,$2+1);system(&quot;mv &quot;$0&quot; new&quot;d)&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n","content_text":"摘要 文本分割合并等相关命令，如tr、cut、paste和split等等 本文基于CentOS8(x86_64) tr tr用来从标准输入中替换、缩减和删除字符，并将结果写到标准输出 语法 1tr [选项]... SET1 [SET2] 示例 1234567cat file | tr &#x27;do&#x27; &#x27;hp&#x27; : 将file中内容为do替换为hp，替换内容与换内容长度一致cat file | tr &#x27;do&#x27; &#x27;hpa&#x27; : 将file中内容为do替换为hp，多出的a会内忽略cat file | tr &#x27;doABC&#x27; &#x27;hp&#x27; : 将file中内容为do替换为hp，ABC都是用替换内容的最后一个字符p进行替换，即doABC替换为hppppcat file | tr &quot;a-z&quot; &quot;A-Z&quot; : 将小写字符替换为大写字符cat file | tr &quot;\\t&quot; &quot;$&quot; : 支持转义字符，这里将tab替换为$cat file | tr -d &#x27;do&#x27; : 将file中内容为do的内容删除cat file | tr -s &#x27;a-z&#x27; : 去除file中重复的小写字符，只保留第一个 cut cut命令可以用于分隔每行的内容 语法 1cut [选项]... [文件]... 示例 1234567891011121314151617181920212223242526# 以空格作为分隔符，打印第一组cut -d &quot; &quot; -f1 file -d：分隔符，按照指定分隔符分割列。与 -f 一起使用 -f：依据 -d 的分隔字符将一段信息分割成为数段，用 -f 取出第几段的意思（列号，提取第几列）# 以;作为分隔符，打印第二组和第三组，注意打印多组时，分隔符也会打印cut -d &quot;;&quot; -f2,3 file# 从file文件中取出每行的第5~8个字符cut -c 5-8 file -c : 以字符 (characters) 的单位取出固定字符区间，可以用来分割中文# 从file文件中取出每行的第2,4,6个字节cut -b 2,4,6 file -b : 以字节为单位进行分割# 从file文件中取出每行的第6个字节之前的内容cut -b -6 file# 从file文件中取出每行的第3，第4、第5和第8个字节，数字定位的顺序必须由小到大cut -b 3-5,8 file# 如果使用-b提取中文，如果提取到的不是一个完整的中文字符所占的字节，就会出现乱码# 比如在utf8编码下，一个中文占3个字节cut -b 1 file : 此时中文字符会出现乱码# 如果希望中文也能完整的提取，可以加上 -ncut -nb 1 file paste 将多个文件的相应行用制表符连接起来，并输出到标准输出 12345678910111213141516171819202122232425$ cat p1.txt123$ cat p2.txtzhangsanlisiwangwu# 默认分隔符为制表符$ paste p1.txt p2.txt1 zhangsan2 lisi3 wangwu# 指定逗号为分隔符$ paste -d &quot;,&quot; p1.txt p2.txt1,zhangsan2,lisi3,wangwu# 每个文件的内容作为一行$ paste -s -d &quot;,&quot; p1.txt p2.txt1,2,3zhangsan,lisi,wangwu split split命令用于将一个文件分割成数个。该指令将大文件分割成较小的文件，在默认情况下将按照每1000行切割成一个小文件。默认前缀为“x”。没有输入，或者当输入为-，则读取标准输入。 语法 1split [选项]... [输入 [前缀]] 示例 123456789101112131415161718192021222324# 分割为1000行的小文件，文件名格式xaa,xab...split file#prefix指定分割后的文件前缀，默认为xsplit file prefix# 分割为指定行数的文件，如100行split -l 100 file# 分割为500M大小的文件split -b 500M file# 指定分割后小文件名后缀split --additional-suffix=.log file# 使用数字代替字符文件名，分割后的文件名为x00,x01...的数字形式split -d file# 指定分割后小文件名前缀后跟的文件名长度(不含前缀和后缀)，默认长度为2，这里文件名格式为xaaa.log,xaab.log...# 当分割后文件的数量大于文件名能表达的最大文件数时，会报错split -a 3 --additional-suffix=.log file# 将分割后的文件合并，如文件名格式为xaaa.log,xaab.logcat x*.log &gt; newfile 实战 使用split数字命名时，序号是从0开始的，如果希望从1开始，可以使用如下方法： 1234# 拆分为每100行一个文件，5位数字序号命名，文件名称为: x00000,x00001 ...split -a 5 -d -l 100 content.txt# 将每个文件名称中的数字加1后重新命名为: new00001,new00002 ...ls -1 | grep ^x | awk -F &#x27;x&#x27; &#x27;&#123;d=sprintf(&quot;%05d&quot; ,$2+1);system(&quot;mv &quot;$0&quot; new&quot;d)&#125;&#x27;","summary":"摘要 文本分割合并等相关命令，如tr、cut、paste和split等等 本文基于CentOS8(x86_64)","date_published":"2023-03-06T13:40:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-awk/","url":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-awk/","title":"Linux常用命令--awk","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>awk命令使用说明</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"awk\">awk</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>awk是一个强大的文本分析工具，在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p>\n</li>\n<li class=\"lvl-2\">\n<p>语法</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：awk [-F  field-separator]  <span class=\"string\">&#x27;commands&#x27;</span>  input-file(s)</span><br><span class=\"line\">其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。</span><br><span class=\"line\">在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</span><br><span class=\"line\">如果希望指定两个或两个以上字符为分隔符时，则需要使用[ ]将分隔符括起来，如 -F [::]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>commands的格式: <code>匹配规则&#123;执行命令&#125;</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>默认情况下，awk 会将如下变量分配给它在文本行中发现的数据字段：</p>\n<blockquote>\n<p>$0 代表整个文本行；<br>\n$1 代表文本行中的第 1 个数据字段；<br>\n$2 代表文本行中的第 2 个数据字段；<br>\n$n 代表文本行中的第 n 个数据字段。</p>\n</blockquote>\n</li>\n</ul>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n<code>awk</code>是一种编程语言，它有好几种实现(解释器)，常见的如<code>awk</code>、<code>nawk</code>、<code>mawk</code>、<code>gawk</code>，<br>\nCentOS、Ubuntu等常用的Linux系统下awk的默认实现就是<code>gawk</code>。</p>\n</div>\n<h3 id=\"功能参数\">功能参数</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能参数\t解释</span><br><span class=\"line\">-F\t    指定分隔符，默认空格，指定两个或两个以上字符为分隔符时，则需要使用[ ]将分隔符括起来，如 -F [::]</span><br><span class=\"line\">-v\t    变量赋值</span><br><span class=\"line\"></span><br><span class=\"line\">模式\t                    解释</span><br><span class=\"line\">/regexp/\t            匹配满足正则表达式的行</span><br><span class=\"line\">+、-、*、/、%、^\t      加、减、乘、除、取余、指数</span><br><span class=\"line\">=\t                    变量赋值</span><br><span class=\"line\">||、&amp;&amp;\t                或者、并且</span><br><span class=\"line\">~、!~\t                满足某个正则、不满足某个正则</span><br><span class=\"line\">==、&gt;=、&lt;=、!=、&gt;、&lt;\t 等于、大于等于、小于等于、不等于、大于、小于</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 只是显示/etc/passwd的账户</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;&#123;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个变量num=3,并参与计算并打印，num也可以设置为一个外部变量，如 num=$a，注意 &#123;&#125;里不能使用外部变量</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> -v num=3 <span class=\"string\">&#x27;&#123;print num*$3&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以空格分割</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;&#123;print $1,$7&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"><span class=\"comment\"># 只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab分割</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;&#123;print $1&quot;\\t&quot;$7&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割</span></span><br><span class=\"line\"><span class=\"comment\"># a.而且在所有行添加列名name,shell</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;BEGIN &#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># b.在最后一行添加&quot;blue,/bin/nosh&quot;。</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;&#123;print $1&quot;,&quot;$7&#125; END &#123;print &quot;blue,/bin/nosh&quot;&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># c.ab前后都加</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;BEGIN &#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END &#123;print &quot;blue,/bin/nosh&quot;&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 搜索/etc/passwd有root关键字的所有行</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;/root/&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 搜索/etc/passwd有root关键字的所有行，并显示对应的shell</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;/root/&#123;print $1,$7&#125;&#x27;</span> /etc/passwd </span><br><span class=\"line\"><span class=\"comment\"># 多个命令之间加上分号</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;/root/&#123;print $7;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 匹配空白行，如果 test.txt 有 N 个空白行，那么执行此命令会输出 N 个 Blank line</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;/^$/&#123;print &quot;Blank line&quot;&#125;&#x27;</span> test.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 匹配正则的行</span></span><br><span class=\"line\">awk -F <span class=\"string\">&quot;:&quot;</span> <span class=\"string\">&#x27;$1~/root/&#123;print $1,$3,$7&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"><span class=\"comment\"># 不匹配正则的行</span></span><br><span class=\"line\">awk -F <span class=\"string\">&quot;:&quot;</span> <span class=\"string\">&#x27;$1!~/root/&#123;print $1,$3,$7&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也可以把命令写在文件中，通过 -f 指定</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> -f awk.sh /etc/passwd</span><br><span class=\"line\"><span class=\"built_in\">cat</span> awk.sh</span><br><span class=\"line\">/root/&#123;<span class=\"built_in\">print</span> <span class=\"variable\">$7</span>;<span class=\"built_in\">print</span> <span class=\"variable\">$1</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 并且，第一列字段包含rp并且行数大于10，打印行号和第1、3、7列，NR是内置变量，下面会说明</span></span><br><span class=\"line\">awk -F <span class=\"string\">&quot;:&quot;</span> <span class=\"string\">&#x27;$1~/rp/ &amp;&amp; NR&gt;10 &#123;print NR,$1,$3,$7&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">awk -F <span class=\"string\">&quot;:&quot;</span> <span class=\"string\">&#x27;$1~/rp/ || $1~/my/ &#123;print NR,$1,$3,$7&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure>\n<h3 id=\"awk内置变量\">awk内置变量</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>内置变量使用时不需要$前缀</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ARGC               命令行参数个数</span><br><span class=\"line\">ARGV               命令行参数排列</span><br><span class=\"line\">ENVIRON            支持队列中系统环境变量的使用</span><br><span class=\"line\">FILENAME           awk浏览的文件名</span><br><span class=\"line\">FNR                浏览文件的记录数</span><br><span class=\"line\">FS                 设置输入域分隔符，默认空格，等价于 -F选项</span><br><span class=\"line\">NF                 浏览记录的域的个数，分隔后的列数，<span class=\"variable\">$NF</span>表示打印最后一个字段</span><br><span class=\"line\">NR                 已读的记录数,记录所在的行号</span><br><span class=\"line\">OFS                输出域分隔符，默认空格</span><br><span class=\"line\">ORS                输出记录分隔符,默认\\n</span><br><span class=\"line\">RS                 控制记录分隔符,默认\\n</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 匹配包含root的行，并且打印行号，这里$NF 含以为：因为分隔后有7个字段，所有NF为7，$NF表示 $7 ,也就是打印第7个字段，即$NF表示打印最后一个字段</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;/root/&#123;print NR,$1,$3,$NF&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"><span class=\"comment\"># 设置输出分隔符为逗号</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;BEGIN&#123;OFS=&quot;,&quot;&#125;/root/&#123;print NR,$1,$3,$NF&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;/root/&#123;OFS=&quot;,&quot;;print NR,$1,$3,$NF&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容</span></span><br><span class=\"line\">awk  -F <span class=\"string\">&#x27;:&#x27;</span>  <span class=\"string\">&#x27;&#123;print &quot;filename:&quot; FILENAME &quot;,linenumber:&quot; NR &quot;,columns:&quot; NF &quot;,linecontent:&quot;$0&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用printf替代print,可以让代码更加简洁，易读</span></span><br><span class=\"line\">awk  -F <span class=\"string\">&#x27;:&#x27;</span>  <span class=\"string\">&#x27;&#123;printf(&quot;filename:%10s,linenumber:%s,columns:%s,linecontent:%s\\n&quot;,FILENAME,NR,NF,$0)&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>print和printf</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">awk中同时提供了print和printf两种打印输出的函数。</li>\n<li class=\"lvl-2\">其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。</li>\n<li class=\"lvl-2\">printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%s : 字符串</span><br><span class=\"line\">%ms : 占位m个字节，默认右对齐，比如: %10s</span><br><span class=\"line\">%-ms : 占位m个字节，负号表示左对齐，正号表示右对齐，比如: %-10s</span><br><span class=\"line\">%d : 按十进制整型数据的实际长度输出。</span><br><span class=\"line\">%ld : 长整型</span><br><span class=\"line\">%md : m 为指定的输出字段的宽度。如果数据的位数小于 m，则左端补以空格，若大于 m，则按实际位数输出，默认友对齐。比如: %10d</span><br><span class=\"line\">%-md : 负号表示左对齐。比如: %-10d</span><br><span class=\"line\">%u : 无符号整型</span><br><span class=\"line\">%mu : 无符号整型，默认友对齐。比如: %10u</span><br><span class=\"line\">%-mu : 无符号整型，负号表示左对齐。比如: %-10u</span><br><span class=\"line\">%c : 字符</span><br><span class=\"line\">%f : 用来输出实数，包括单精度和双精度，以小数形式输出。整数部分全部输出，小数部分输出 6 位，超过 6 位的四舍五入。</span><br><span class=\"line\">%mf : m 为指定的输出字段的宽度，默认右对齐，比如: %20f</span><br><span class=\"line\">%-mf : m 为指定的输出字段的宽度，负号表示左对齐，比如: %-20f</span><br><span class=\"line\">%.mf : 输出实数时小数点后保留 m 位，注意 m 前面有个点，比如: %.2f</span><br><span class=\"line\">%m.mf : 负号表示左对齐，比如: %-20.2f</span><br><span class=\"line\">%o : 以八进制整数形式输出，输出格式为：24</span><br><span class=\"line\">%<span class=\"comment\">#o : 以八进制整数形式输出，输出格式为：024</span></span><br><span class=\"line\">%x : 以十六进制形式输出，输出格式为：2f</span><br><span class=\"line\">%X : 以十六进制形式输出，输出格式为：2F</span><br><span class=\"line\">%<span class=\"comment\">#x : 以十六进制形式输出，输出格式为：0x2f</span></span><br><span class=\"line\">%<span class=\"comment\">#X : 以十六进制形式输出，输出格式为：0x2F</span></span><br><span class=\"line\">\\n : 换行符，支持转义字符，如 \\t 等等</span><br><span class=\"line\">\\% : %</span><br><span class=\"line\">\\&quot; : <span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">\\\\ : \\</span></span><br></pre></td></tr></table></figure>\n</div>\n<h3 id=\"awk编程\">awk编程</h3>\n<h4 id=\"基础语句\">基础语句</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>BEGIN &#123;&#125; &#123;&#125; END&#123;&#125;</code></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># count是自定义变量。之前的action&#123;&#125;里都是只有一个print,其实print只是一个语句，而action&#123;&#125;可以有多个语句，以;号隔开。</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;&#123;count++;print $0;&#125; END&#123;print &quot;user count is &quot;, count&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上面没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;BEGIN &#123;count=0;print &quot;[start]user count is &quot;, count&#125; &#123;count=count+1;print $0;&#125; END&#123;print &quot;[end]user count is &quot;, count&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计某个文件夹下的文件占用的字节数，单位M</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -l |awk <span class=\"string\">&#x27;BEGIN &#123;size=0;&#125; &#123;size=size+$5;&#125; END&#123;print &quot;[end]size is &quot;, size/1024/1024,&quot;M&quot;&#125;&#x27;</span> </span><br></pre></td></tr></table></figure>\n<h4 id=\"条件语句\">条件语句</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>awk中的条件语句是从C语言中借鉴来的，见如下声明方式：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># a</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (expression) &#123;</span><br><span class=\"line\">    statement;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># b</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (expression) &#123;</span><br><span class=\"line\">    statement;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    statement2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># c</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (expression) &#123;</span><br><span class=\"line\">    statement1;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (expression1) &#123;</span><br><span class=\"line\">    statement2;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    statement3;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.检测系统中UID为0的用户</span></span><br><span class=\"line\">awk -F : <span class=\"string\">&#x27;&#123;if($3==0) &#123;print $1&#125;&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\">简写：</span><br><span class=\"line\">awk -F : <span class=\"string\">&#x27;$3==0 &#123;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\">-F表示使用什么做为分隔符，这里使用冒号，默认是空格</span><br><span class=\"line\"><span class=\"variable\">$num</span>表示文件的第几列，这里<span class=\"variable\">$1</span>表示第一列</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;</span>:固定格式，执行命令，这里表示，如果第三列是0,则打印第一列的内容</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.检测系统中密码为空的用户</span></span><br><span class=\"line\"></span><br><span class=\"line\">awk -F : <span class=\"string\">&#x27;&#123;if(length($2)==0) &#123;print $1&#125;&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\">简写：</span><br><span class=\"line\">awk -F : <span class=\"string\">&#x27;length($2)==0 &#123;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.取出第三行，第一列的值</span></span><br><span class=\"line\"></span><br><span class=\"line\">awk <span class=\"string\">&#x27;&#123;if(NR==3) &#123;print $1&#125;&#125;&#x27;</span> file</span><br><span class=\"line\">简写：</span><br><span class=\"line\">awk <span class=\"string\">&#x27;NR==3 &#123;print $1&#125;&#x27;</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.跳过第一行</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;&#123;if(NR&gt;1) &#123;print $0&#125;&#125;&#x27;</span> file</span><br><span class=\"line\">简写：</span><br><span class=\"line\">awk <span class=\"string\">&#x27;NR&gt;1 &#123;print $0&#125;&#x27;</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.求和</span></span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;;&#x27;</span> <span class=\"string\">&#x27;&#123;if($3&gt;0) &#123;s+=$3&#125;&#125; END &#123;print s&#125;&#x27;</span> file</span><br><span class=\"line\">简写：</span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;;&#x27;</span> <span class=\"string\">&#x27;$3&gt;0 &#123;s+=$3&#125; END &#123;print s&#125;&#x27;</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.if else，~ ，!~\t某个字段满足某个正则或者不满足某个正则</span></span><br><span class=\"line\">awk <span class=\"string\">&#x27;&#123;if ($1 == &quot;foo&quot;) print &quot;Exact match foo&quot;; else if ($1 ~ &quot;bar&quot;) print &quot;Partial match bar&quot;; else print &quot;Baz&quot;&#125;&#x27;</span> path/to/file</span><br></pre></td></tr></table></figure>\n<h4 id=\"aws数组\">aws数组</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;BEGIN &#123;count=0;&#125; &#123;name[count] = $1;count++;&#125;; END&#123;for (i = 0; i &lt; NR; i++)&#123;print i, name[i]&#125;&#125;&#x27;</span> /etc/passwd</span><br><span class=\"line\">简写：</span><br><span class=\"line\">awk -F <span class=\"string\">&#x27;:&#x27;</span> <span class=\"string\">&#x27;BEGIN &#123;count=0;&#125; &#123;name[count] = $1;count++;&#125;; END&#123;for (i = 0; i &lt; NR; i++) print i, name[i]&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure>\n<h4 id=\"aws循环语句\">aws循环语句</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同，感兴趣的自行查阅，这里不再赘述。</p>\n</li>\n</ul>\n","content_text":"摘要 awk命令使用说明 本文基于CentOS8(x86_64) awk awk是一个强大的文本分析工具，在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。 语法 1234格式：awk [-F field-separator] &#x27;commands&#x27; input-file(s)其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。如果希望指定两个或两个以上字符为分隔符时，则需要使用[ ]将分隔符括起来，如 -F [::] commands的格式: 匹配规则&#123;执行命令&#125; 默认情况下，awk 会将如下变量分配给它在文本行中发现的数据字段： $0 代表整个文本行； $1 代表文本行中的第 1 个数据字段； $2 代表文本行中的第 2 个数据字段； $n 代表文本行中的第 n 个数据字段。 小贴士 awk是一种编程语言，它有好几种实现(解释器)，常见的如awk、nawk、mawk、gawk， CentOS、Ubuntu等常用的Linux系统下awk的默认实现就是gawk。 功能参数 1234567891011功能参数 解释-F 指定分隔符，默认空格，指定两个或两个以上字符为分隔符时，则需要使用[ ]将分隔符括起来，如 -F [::]-v 变量赋值模式 解释/regexp/ 匹配满足正则表达式的行+、-、*、/、%、^ 加、减、乘、除、取余、指数= 变量赋值||、&amp;&amp; 或者、并且~、!~ 满足某个正则、不满足某个正则==、&gt;=、&lt;=、!=、&gt;、&lt; 等于、大于等于、小于等于、不等于、大于、小于 示例 12345678910111213141516171819202122232425262728293031323334353637383940414243444546# 只是显示/etc/passwd的账户awk -F &#x27;:&#x27; &#x27;&#123;print $1&#125;&#x27; /etc/passwd# 定义一个变量num=3,并参与计算并打印，num也可以设置为一个外部变量，如 num=$a，注意 &#123;&#125;里不能使用外部变量awk -F &#x27;:&#x27; -v num=3 &#x27;&#123;print num*$3&#125;&#x27; /etc/passwd# 只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以空格分割awk -F &#x27;:&#x27; &#x27;&#123;print $1,$7&#125;&#x27; /etc/passwd# 只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab分割awk -F &#x27;:&#x27; &#x27;&#123;print $1&quot;\\t&quot;$7&#125;&#x27; /etc/passwd# 只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割# a.而且在所有行添加列名name,shellawk -F &#x27;:&#x27; &#x27;BEGIN &#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125;&#x27; /etc/passwd# b.在最后一行添加&quot;blue,/bin/nosh&quot;。awk -F &#x27;:&#x27; &#x27;&#123;print $1&quot;,&quot;$7&#125; END &#123;print &quot;blue,/bin/nosh&quot;&#125;&#x27; /etc/passwd# c.ab前后都加awk -F &#x27;:&#x27; &#x27;BEGIN &#123;print &quot;name,shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END &#123;print &quot;blue,/bin/nosh&quot;&#125;&#x27; /etc/passwd# 搜索/etc/passwd有root关键字的所有行awk -F &#x27;:&#x27; &#x27;/root/&#x27; /etc/passwd# 搜索/etc/passwd有root关键字的所有行，并显示对应的shellawk -F &#x27;:&#x27; &#x27;/root/&#123;print $1,$7&#125;&#x27; /etc/passwd # 多个命令之间加上分号awk -F &#x27;:&#x27; &#x27;/root/&#123;print $7;print $1&#125;&#x27; /etc/passwd# 匹配空白行，如果 test.txt 有 N 个空白行，那么执行此命令会输出 N 个 Blank lineawk &#x27;/^$/&#123;print &quot;Blank line&quot;&#125;&#x27; test.txt# 匹配正则的行awk -F &quot;:&quot; &#x27;$1~/root/&#123;print $1,$3,$7&#125;&#x27; /etc/passwd# 不匹配正则的行awk -F &quot;:&quot; &#x27;$1!~/root/&#123;print $1,$3,$7&#125;&#x27; /etc/passwd# 也可以把命令写在文件中，通过 -f 指定awk -F &#x27;:&#x27; -f awk.sh /etc/passwdcat awk.sh/root/&#123;print $7;print $1&#125;# 并且，第一列字段包含rp并且行数大于10，打印行号和第1、3、7列，NR是内置变量，下面会说明awk -F &quot;:&quot; &#x27;$1~/rp/ &amp;&amp; NR&gt;10 &#123;print NR,$1,$3,$7&#125;&#x27; /etc/passwd# 或者awk -F &quot;:&quot; &#x27;$1~/rp/ || $1~/my/ &#123;print NR,$1,$3,$7&#125;&#x27; /etc/passwd awk内置变量 内置变量使用时不需要$前缀 1234567891011ARGC 命令行参数个数ARGV 命令行参数排列ENVIRON 支持队列中系统环境变量的使用FILENAME awk浏览的文件名FNR 浏览文件的记录数FS 设置输入域分隔符，默认空格，等价于 -F选项NF 浏览记录的域的个数，分隔后的列数，$NF表示打印最后一个字段NR 已读的记录数,记录所在的行号OFS 输出域分隔符，默认空格ORS 输出记录分隔符,默认\\nRS 控制记录分隔符,默认\\n 123456789101112# 匹配包含root的行，并且打印行号，这里$NF 含以为：因为分隔后有7个字段，所有NF为7，$NF表示 $7 ,也就是打印第7个字段，即$NF表示打印最后一个字段awk -F &#x27;:&#x27; &#x27;/root/&#123;print NR,$1,$3,$NF&#125;&#x27; /etc/passwd# 设置输出分隔符为逗号awk -F &#x27;:&#x27; &#x27;BEGIN&#123;OFS=&quot;,&quot;&#125;/root/&#123;print NR,$1,$3,$NF&#125;&#x27; /etc/passwd# 或者awk -F &#x27;:&#x27; &#x27;/root/&#123;OFS=&quot;,&quot;;print NR,$1,$3,$NF&#125;&#x27; /etc/passwd# 统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容awk -F &#x27;:&#x27; &#x27;&#123;print &quot;filename:&quot; FILENAME &quot;,linenumber:&quot; NR &quot;,columns:&quot; NF &quot;,linecontent:&quot;$0&#125;&#x27; /etc/passwd# 使用printf替代print,可以让代码更加简洁，易读awk -F &#x27;:&#x27; &#x27;&#123;printf(&quot;filename:%10s,linenumber:%s,columns:%s,linecontent:%s\\n&quot;,FILENAME,NR,NF,$0)&#125;&#x27; /etc/passwd print和printf awk中同时提供了print和printf两种打印输出的函数。 其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。 printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。 1234567891011121314151617181920212223242526%s : 字符串%ms : 占位m个字节，默认右对齐，比如: %10s%-ms : 占位m个字节，负号表示左对齐，正号表示右对齐，比如: %-10s%d : 按十进制整型数据的实际长度输出。%ld : 长整型%md : m 为指定的输出字段的宽度。如果数据的位数小于 m，则左端补以空格，若大于 m，则按实际位数输出，默认友对齐。比如: %10d%-md : 负号表示左对齐。比如: %-10d%u : 无符号整型%mu : 无符号整型，默认友对齐。比如: %10u%-mu : 无符号整型，负号表示左对齐。比如: %-10u%c : 字符%f : 用来输出实数，包括单精度和双精度，以小数形式输出。整数部分全部输出，小数部分输出 6 位，超过 6 位的四舍五入。%mf : m 为指定的输出字段的宽度，默认右对齐，比如: %20f%-mf : m 为指定的输出字段的宽度，负号表示左对齐，比如: %-20f%.mf : 输出实数时小数点后保留 m 位，注意 m 前面有个点，比如: %.2f%m.mf : 负号表示左对齐，比如: %-20.2f%o : 以八进制整数形式输出，输出格式为：24%#o : 以八进制整数形式输出，输出格式为：024%x : 以十六进制形式输出，输出格式为：2f%X : 以十六进制形式输出，输出格式为：2F%#x : 以十六进制形式输出，输出格式为：0x2f%#X : 以十六进制形式输出，输出格式为：0x2F\\n : 换行符，支持转义字符，如 \\t 等等\\% : %\\&quot; : &quot;\\\\ : \\ awk编程 基础语句 BEGIN &#123;&#125; &#123;&#125; END&#123;&#125; 12345678# count是自定义变量。之前的action&#123;&#125;里都是只有一个print,其实print只是一个语句，而action&#123;&#125;可以有多个语句，以;号隔开。awk &#x27;&#123;count++;print $0;&#125; END&#123;print &quot;user count is &quot;, count&#125;&#x27; /etc/passwd# 上面没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:awk &#x27;BEGIN &#123;count=0;print &quot;[start]user count is &quot;, count&#125; &#123;count=count+1;print $0;&#125; END&#123;print &quot;[end]user count is &quot;, count&#125;&#x27; /etc/passwd# 统计某个文件夹下的文件占用的字节数，单位Mls -l |awk &#x27;BEGIN &#123;size=0;&#125; &#123;size=size+$5;&#125; END&#123;print &quot;[end]size is &quot;, size/1024/1024,&quot;M&quot;&#125;&#x27; 条件语句 awk中的条件语句是从C语言中借鉴来的，见如下声明方式： 12345678910111213141516171819202122# aif (expression) &#123; statement;&#125;# bif (expression) &#123; statement;&#125; else &#123; statement2;&#125;# cif (expression) &#123; statement1;&#125; else if (expression1) &#123; statement2;&#125; else &#123; statement3;&#125; 示例 1234567891011121314151617181920212223242526272829303132333435# 1.检测系统中UID为0的用户awk -F : &#x27;&#123;if($3==0) &#123;print $1&#125;&#125;&#x27; /etc/passwd简写：awk -F : &#x27;$3==0 &#123;print $1&#125;&#x27; /etc/passwd-F表示使用什么做为分隔符，这里使用冒号，默认是空格$num表示文件的第几列，这里$1表示第一列&#x27;&#x27;:固定格式，执行命令，这里表示，如果第三列是0,则打印第一列的内容# 2.检测系统中密码为空的用户awk -F : &#x27;&#123;if(length($2)==0) &#123;print $1&#125;&#125;&#x27; /etc/passwd简写：awk -F : &#x27;length($2)==0 &#123;print $1&#125;&#x27; /etc/passwd# 3.取出第三行，第一列的值awk &#x27;&#123;if(NR==3) &#123;print $1&#125;&#125;&#x27; file简写：awk &#x27;NR==3 &#123;print $1&#125;&#x27; file# 4.跳过第一行awk &#x27;&#123;if(NR&gt;1) &#123;print $0&#125;&#125;&#x27; file简写：awk &#x27;NR&gt;1 &#123;print $0&#125;&#x27; file# 5.求和awk -F &#x27;;&#x27; &#x27;&#123;if($3&gt;0) &#123;s+=$3&#125;&#125; END &#123;print s&#125;&#x27; file简写：awk -F &#x27;;&#x27; &#x27;$3&gt;0 &#123;s+=$3&#125; END &#123;print s&#125;&#x27; file# 6.if else，~ ，!~ 某个字段满足某个正则或者不满足某个正则awk &#x27;&#123;if ($1 == &quot;foo&quot;) print &quot;Exact match foo&quot;; else if ($1 ~ &quot;bar&quot;) print &quot;Partial match bar&quot;; else print &quot;Baz&quot;&#125;&#x27; path/to/file aws数组 awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等 123awk -F &#x27;:&#x27; &#x27;BEGIN &#123;count=0;&#125; &#123;name[count] = $1;count++;&#125;; END&#123;for (i = 0; i &lt; NR; i++)&#123;print i, name[i]&#125;&#125;&#x27; /etc/passwd简写：awk -F &#x27;:&#x27; &#x27;BEGIN &#123;count=0;&#125; &#123;name[count] = $1;count++;&#125;; END&#123;for (i = 0; i &lt; NR; i++) print i, name[i]&#125;&#x27; /etc/passwd aws循环语句 awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同，感兴趣的自行查阅，这里不再赘述。","summary":"摘要 awk命令使用说明 本文基于CentOS8(x86_64)","date_published":"2023-03-06T13:35:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-sed/","url":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-sed/","title":"Linux常用命令--sed","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>sed命令使用说明</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"sed\">sed</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>sed</code> 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>sed</code> 主要用来自动编辑一个或多个文件、简化对文件的反复操作、编写转换程序等。</p>\n</li>\n<li class=\"lvl-2\">\n<p>语法</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：sed [options] <span class=\"string\">&#x27;command&#x27;</span> file(s)</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参数</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能参数\t        解释</span><br><span class=\"line\">-n\t            关闭输出，和p一起使用只输出被sed处理的行</span><br><span class=\"line\">-e\t            多重编辑，且顺序会影响结果</span><br><span class=\"line\">-r\t            使用扩展正则</span><br><span class=\"line\">-i\t            将修改的内容覆盖到文档，使用时要小心</span><br><span class=\"line\">-f\t            指定一个sed脚本文件到命令行执行</span><br><span class=\"line\"></span><br><span class=\"line\">范围表达式\t        解释</span><br><span class=\"line\"><span class=\"string\">&#x27;2,5p&#x27;</span>\t        打印2-5行</span><br><span class=\"line\"><span class=\"string\">&#x27;2p;5p&#x27;</span>         打印2和5行</span><br><span class=\"line\"><span class=\"string\">&#x27;2,+5p&#x27;</span>\t        打印第2行及其以下5行</span><br><span class=\"line\"><span class=\"string\">&#x27;2~2p&#x27;</span>\t        从第二行开始步长为2打印，即打印2，4，6，8……行</span><br><span class=\"line\"><span class=\"string\">&#x27;/regexp/p&#x27;</span>\t    打印正则表达式匹配出的行</span><br><span class=\"line\"><span class=\"string\">&#x27;2,/aaa/p&#x27;</span>\t    打印第2行到下一次出现aaa的行，如果aaa在第二行之前或者不存在则打印到行尾</span><br><span class=\"line\"><span class=\"string\">&#x27;/aaa/,/bbb/p&#x27;</span>\t打印aaa所在的行到bbb所在的行，如果bbb在aaa之前或者不存在则打印到行尾</span><br><span class=\"line\"></span><br><span class=\"line\">动作\t 解释</span><br><span class=\"line\">p\t    打印</span><br><span class=\"line\">d\t    删除</span><br><span class=\"line\">s\t    替换</span><br><span class=\"line\">a\t    当前行后追加</span><br><span class=\"line\">i\t    当前行前插入</span><br><span class=\"line\">c\t    将当前行替换</span><br><span class=\"line\">n\t    匹配行的下一行</span><br><span class=\"line\">y\t    替换，固定用法 y/abcd/ABCD/ 将a替换为A，b替换为B……</span><br><span class=\"line\">q\t    退出sed</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-删除：d命令\">1)删除：d命令</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除example文件的第二行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2d&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 删除第二行和第五行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2d;5d&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 删除第二行到第五行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2,5d&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 删除第二行及其之后的五行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2,+5d&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 删除example文件的第二行到末尾所有行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2,$d&#x27;</span> example  </span><br><span class=\"line\"><span class=\"comment\"># 删除example文件的最后一行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;$d&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 删除example文件所有包含test的行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;/test/d&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 所有在模板test和check所确定的范围内的行都被删除</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;/test/,/check/d&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 从第一行开始，每间隔一行删除一行，这里表示删除1，3，5...行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;1~2d&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 删除匹配行的下一行，n表示下一行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;/test/&#123;n;d&#125;&#x27;</span> example</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除变量指定的行，注意这里要使用双引号</span></span><br><span class=\"line\">sed <span class=\"string\">&quot;1,<span class=\"variable\">$&#123;lineNum&#125;</span>d&quot;</span> example</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-替换：s命令\">2)替换：s命令</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 替换第几处模式匹配的地方，这里2表示替换第二处匹配的地方</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;s/test/mytest/2&#x27;</span> example</span><br><span class=\"line\">    n : 1~512 之间的数字，表示指定要替换的字符串出现第几次时才进行替换</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在整行范围内把test(i不区分大小写)替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;s/test/mytest/ig&#x27;</span> example</span><br><span class=\"line\">    i : 不区分大小写</span><br><span class=\"line\">    g : 对数据中所有匹配到的内容进行替换，不加g只匹配第一个</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;s/^test/mytest/p&#x27;</span> example </span><br><span class=\"line\">    -n : 关闭输出，和p标志一起使用表示只打印那些发生替换的行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &amp;符号表示替换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhost</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;s/^192.168.0.1/&amp;localhost/&#x27;</span> example </span><br><span class=\"line\">    &amp; : 表示替换字符串中被找到的部份</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;s/\\(love\\)able/\\1rs/p&#x27;</span> example </span><br><span class=\"line\">    () : 标记搜索内容，括号顺序按1，2...顺序被标记，注意这里需要被转义</span><br><span class=\"line\"><span class=\"comment\"># love被标记为1，所有loveable会被替换成lovers，打印所有行</span></span><br><span class=\"line\">sed -r <span class=\"string\">&#x27;s/(^love)able/\\1rs/&#x27;</span> example </span><br><span class=\"line\">    -r : 支持扩展正则，这里()不需要被转义</span><br><span class=\"line\"><span class=\"comment\"># 所有loveable会被替换成loversbl，括号顺序按1，2...顺序被标记</span></span><br><span class=\"line\">sed -r <span class=\"string\">&#x27;s/(^love)a(bl)e/\\1rs\\2/&#x27;</span> example </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;s#10#100#g&#x27;</span> example </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -i直接替换源文件，慎重使用</span></span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/test/mytest/ig&#x27;</span> example </span><br><span class=\"line\">    -i : 直接替换源文件，慎重使用</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># w标记会将匹配后的结果保存到指定文件中，注意这里text.txt中只会保留那些发生替换的行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;s/test/mytest/w test.txt&#x27;</span> example  ====&gt; sed -n <span class=\"string\">&#x27;s/test/mytest/p&#x27;</span> example &gt; test.txt</span><br><span class=\"line\">    w : 会将匹配后的结果保存到指定文件中</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 替换变量指定的行，注意这里要使用双引号，如果替换内容为双引号，要进行转义</span></span><br><span class=\"line\"><span class=\"comment\"># 这里将第一行到指定的行中的&quot;&#125;替换为&quot;&#125;,</span></span><br><span class=\"line\">sed -r <span class=\"string\">&quot;1,<span class=\"variable\">$&#123;lineNum&#125;</span>s/(\\&quot;&#125;)/\\1,/&quot;</span> example </span><br></pre></td></tr></table></figure>\n<h3 id=\"3-选定行的范围：逗号\">3)选定行的范围：逗号</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 所有在模板test和check所确定的范围内的行都被打印 </span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;/test/,/check/p&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 按连续内容截取，这里还是按关键字搜索匹配，这里假设每行都有序号并且连续</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;/5518/,/5524/p&#x27;</span> example  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># grep也有类似方法：</span></span><br><span class=\"line\">countnum=$[ <span class=\"variable\">$endnum</span> - <span class=\"variable\">$startnum</span> + 1  ]</span><br><span class=\"line\">grep <span class=\"string\">&quot;<span class=\"variable\">$startnum</span>&quot;</span> file -A <span class=\"variable\">$countnum</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印文件的第二行</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;2p&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 打印文件的第二行和第四行</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;2p;4p&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 打印第1行到第100百行</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;1,100p&#x27;</span> example  </span><br><span class=\"line\"><span class=\"comment\"># 打印从第五行开始到第一个包含以test开始的行之间的所有行</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;5,/^test/p&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 打印从第一个包含以test开始的行到第五行之间的所有行</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;/^test/,5p&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 打印从第一个包含以test开始的行到最后一行之间的所有行</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;/^test/,$p&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 打印包含java或者linux的行</span></span><br><span class=\"line\">sed -r -n <span class=\"string\">&#x27;/java|linux/p&#x27;</span> example</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从第一行开始，间隔2行打印，这里表示打印1，4，7，10...行</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;1~3p&#x27;</span> example</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印以java开头的所有行</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;/^java/p&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 打印以java开头的所有行的下一行</span></span><br><span class=\"line\">sed -n <span class=\"string\">&#x27;/^java/&#123;n;p&#125;&#x27;</span> example</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对于模板test和check之间的行，每行的末尾用字符串sed test替换</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;/test/,/check/s/$/sed test/&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 第2到5行，每行的末尾用字符串sed test替换</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2,5s/$/sed test/&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 第2到最后一行，每行的末尾用字符串sed test替换</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2,$s/$/sed test/&#x27;</span> example</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-多点编辑：e命令\">4)多点编辑：e命令</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (-e)选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果</span></span><br><span class=\"line\">sed -e <span class=\"string\">&#x27;1,5d&#x27;</span> -e <span class=\"string\">&#x27;s/test/check/&#x27;</span> example</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一个比-e更好的命令是--expression。它能给sed表达式赋值。</span></span><br><span class=\"line\">sed --expression=<span class=\"string\">&#x27;s/test/check/&#x27;</span> --expression=<span class=\"string\">&#x27;/love/d&#x27;</span> example</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">totalLine=`<span class=\"built_in\">cat</span> title_list.json | <span class=\"built_in\">wc</span> -l`</span><br><span class=\"line\">lastLineBefore1=$((<span class=\"variable\">$totalLine</span>-<span class=\"number\">1</span>))</span><br><span class=\"line\">sed -i -r -e <span class=\"string\">&quot;1,<span class=\"variable\">$&#123;lastLineBefore1&#125;</span>s/(\\&quot;&#125;)/\\1,/&quot;</span> -e <span class=\"string\">&#x27;1d&#x27;</span> -e <span class=\"string\">&#x27;2i &#123;[&#x27;</span> -e <span class=\"string\">&#x27;$a ]&#125;&#x27;</span> title_list.json</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-追加行或替换行：a、i、c和r\">5)追加行或替换行：a、i、c和r</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>a 命令表示在指定行的后面附加一行，i 命令表示在指定行的前面插入一行</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将hello wordl 插入到第二行上面</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2i hello world&#x27;</span> example</span><br><span class=\"line\">    i : 表示在指定行的前面插入一行，<span class=\"variable\">$i</span> 表示最后一行前插入</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将hello wordl 插入到第二行下面</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2a hello world&#x27;</span> example</span><br><span class=\"line\">    a : 表示在指定行的后面插入一行，<span class=\"variable\">$a</span> 表示最后一行后插入</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也可以同时插入多行内容，使用反斜线即可，这里表示在第二行下面添加两行内容</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2a\\</span></span><br><span class=\"line\"><span class=\"string\">&gt; hello world\\</span></span><br><span class=\"line\"><span class=\"string\">&gt; i love you&#x27;</span> example</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>c 命令表示将指定行中的所有内容，替换成该选项后面的字符串</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将匹配到的所有含有hello的行替换为hello world</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;/hello/c hello world&#x27;</span> example</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将hello world 替换第二行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2c hello world&#x27;</span> example</span><br><span class=\"line\">    c : 替换行内容</span><br><span class=\"line\"><span class=\"comment\"># 同样支持替换为多行</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2c\\</span></span><br><span class=\"line\"><span class=\"string\">&gt; hello world\\</span></span><br><span class=\"line\"><span class=\"string\">&gt; i love you&#x27;</span> example</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>r 命令用于将一个独立文件的数据插入到当前数据流的指定位置</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将text.txt中的内容插入到example文件的第二行下面</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2r test.txt&#x27;</span> example</span><br><span class=\"line\"><span class=\"comment\"># 将text.txt中的内容插入到example文件的末尾</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;$r test.txt&#x27;</span> example</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-处理单个字符：y\">6)处理单个字符：y</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 将所有以hello开头的行中的 a替换为A，b替换为B，c替换为C，d替换为D</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;/^hello/y/abcd/ABCD/&#x27;</span> example</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;This 1 is a test2 of 1 try3.&quot;</span> | sed <span class=\"string\">&#x27;y/123/456/&#x27;</span></span><br><span class=\"line\">This 4 is a test5 of 4 try6.</span><br><span class=\"line\">    y : 字符全局替换，原字符与替换字符的长度必须相同</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-指定行区间\">7)指定行区间</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>默认情况下，sed 命令会作用于文本数据的所有行，如果只想将命令作用于特定行或某些行，需要明确指定行区间范围。</p>\n</li>\n<li class=\"lvl-2\">\n<p>行区间可以通过如下两种方式进行限定：</p>\n<blockquote>\n<p>1.以数字形式指定行区间<br>\n2.用文本模式指定具体行区间</p>\n</blockquote>\n</li>\n<li class=\"lvl-2\">\n<p>行区间放在命令的前面，具体格式如下：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[行区间]脚本命令</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"></span><br><span class=\"line\">行区间 &#123;</span><br><span class=\"line\">    多个脚本命令,分号分隔</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例:以数字形式指定行区间</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 替换第二行中的内容</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2s/dog/cat/&#x27;</span> test.txt</span><br><span class=\"line\"><span class=\"comment\"># 替换第二行到第四行中的内容</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2,4s/dog/cat/&#x27;</span> test.txt</span><br><span class=\"line\"><span class=\"comment\"># 替换第二行到文件最后一行中的内容</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;2,$s/dog/cat/&#x27;</span> test.txt</span><br><span class=\"line\"><span class=\"comment\"># 从第一行开始，每间隔一行进行替换，1，3，5，7...</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;1~2s/dog/cat/&#x27;</span> test.txt</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例:用文本模式指定具体行区间</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 替换内容中包含pig的所有行的内容</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;/pig/s/dog/cat/&#x27;</span> test.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正则匹配限制范围，&#123;&#125;指定多个脚本，这个命令的作用是将 h1Helloh1 转换为 &lt;h1&gt;Hello&lt;/h1&gt;</span></span><br><span class=\"line\">sed <span class=\"string\">&#x27;/h[0-9]/&#123;s//\\&lt;&amp;\\&gt;/1;s//\\&lt;\\/&amp;\\&gt;/2&#125;&#x27;</span> test.txt</span><br><span class=\"line\"><span class=\"comment\"># 也可以将命令写到文件中，通过 -f 参数指定</span></span><br><span class=\"line\">sed -f sed.txt test.txt</span><br><span class=\"line\"><span class=\"built_in\">cat</span> sed.txt</span><br><span class=\"line\">/h[0-9]/&#123;</span><br><span class=\"line\">    s//\\&lt;&amp;\\&gt;/1</span><br><span class=\"line\">    s//\\&lt;\\/&amp;\\&gt;/2</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 sed命令使用说明 本文基于CentOS8(x86_64) sed sed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。 sed 主要用来自动编辑一个或多个文件、简化对文件的反复操作、编写转换程序等。 语法 1格式：sed [options] &#x27;command&#x27; file(s) 参数 123456789101112131415161718192021222324252627功能参数 解释-n 关闭输出，和p一起使用只输出被sed处理的行-e 多重编辑，且顺序会影响结果-r 使用扩展正则-i 将修改的内容覆盖到文档，使用时要小心-f 指定一个sed脚本文件到命令行执行范围表达式 解释&#x27;2,5p&#x27; 打印2-5行&#x27;2p;5p&#x27; 打印2和5行&#x27;2,+5p&#x27; 打印第2行及其以下5行&#x27;2~2p&#x27; 从第二行开始步长为2打印，即打印2，4，6，8……行&#x27;/regexp/p&#x27; 打印正则表达式匹配出的行&#x27;2,/aaa/p&#x27; 打印第2行到下一次出现aaa的行，如果aaa在第二行之前或者不存在则打印到行尾&#x27;/aaa/,/bbb/p&#x27; 打印aaa所在的行到bbb所在的行，如果bbb在aaa之前或者不存在则打印到行尾动作 解释p 打印d 删除s 替换a 当前行后追加i 当前行前插入c 将当前行替换n 匹配行的下一行y 替换，固定用法 y/abcd/ABCD/ 将a替换为A，b替换为B……q 退出sed 1)删除：d命令 1234567891011121314151617181920212223# 删除example文件的第二行sed &#x27;2d&#x27; example# 删除第二行和第五行sed &#x27;2d;5d&#x27; example# 删除第二行到第五行sed &#x27;2,5d&#x27; example# 删除第二行及其之后的五行sed &#x27;2,+5d&#x27; example# 删除example文件的第二行到末尾所有行sed &#x27;2,$d&#x27; example # 删除example文件的最后一行sed &#x27;$d&#x27; example# 删除example文件所有包含test的行sed &#x27;/test/d&#x27; example# 所有在模板test和check所确定的范围内的行都被删除sed &#x27;/test/,/check/d&#x27; example# 从第一行开始，每间隔一行删除一行，这里表示删除1，3，5...行sed &#x27;1~2d&#x27; example# 删除匹配行的下一行，n表示下一行sed &#x27;/test/&#123;n;d&#125;&#x27; example# 删除变量指定的行，注意这里要使用双引号sed &quot;1,$&#123;lineNum&#125;d&quot; example 2)替换：s命令 12345678910111213141516171819202122232425262728293031323334353637383940# 替换第几处模式匹配的地方，这里2表示替换第二处匹配的地方sed &#x27;s/test/mytest/2&#x27; example n : 1~512 之间的数字，表示指定要替换的字符串出现第几次时才进行替换# 在整行范围内把test(i不区分大小写)替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytestsed &#x27;s/test/mytest/ig&#x27; example i : 不区分大小写 g : 对数据中所有匹配到的内容进行替换，不加g只匹配第一个# (-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它sed -n &#x27;s/^test/mytest/p&#x27; example -n : 关闭输出，和p标志一起使用表示只打印那些发生替换的行# &amp;符号表示替换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhostsed &#x27;s/^192.168.0.1/&amp;localhost/&#x27; example &amp; : 表示替换字符串中被找到的部份# love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。sed -n &#x27;s/\\(love\\)able/\\1rs/p&#x27; example () : 标记搜索内容，括号顺序按1，2...顺序被标记，注意这里需要被转义# love被标记为1，所有loveable会被替换成lovers，打印所有行sed -r &#x27;s/(^love)able/\\1rs/&#x27; example -r : 支持扩展正则，这里()不需要被转义# 所有loveable会被替换成loversbl，括号顺序按1，2...顺序被标记sed -r &#x27;s/(^love)a(bl)e/\\1rs\\2/&#x27; example # 不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100sed &#x27;s#10#100#g&#x27; example # -i直接替换源文件，慎重使用sed -i &#x27;s/test/mytest/ig&#x27; example -i : 直接替换源文件，慎重使用# w标记会将匹配后的结果保存到指定文件中，注意这里text.txt中只会保留那些发生替换的行sed &#x27;s/test/mytest/w test.txt&#x27; example ====&gt; sed -n &#x27;s/test/mytest/p&#x27; example &gt; test.txt w : 会将匹配后的结果保存到指定文件中# 替换变量指定的行，注意这里要使用双引号，如果替换内容为双引号，要进行转义# 这里将第一行到指定的行中的&quot;&#125;替换为&quot;&#125;,sed -r &quot;1,$&#123;lineNum&#125;s/(\\&quot;&#125;)/\\1,/&quot; example 3)选定行的范围：逗号 1234567891011121314151617181920212223242526272829303132333435363738# 所有在模板test和check所确定的范围内的行都被打印 sed -n &#x27;/test/,/check/p&#x27; example# 按连续内容截取，这里还是按关键字搜索匹配，这里假设每行都有序号并且连续sed -n &#x27;/5518/,/5524/p&#x27; example # grep也有类似方法：countnum=$[ $endnum - $startnum + 1 ]grep &quot;$startnum&quot; file -A $countnum # 打印文件的第二行sed -n &#x27;2p&#x27; example# 打印文件的第二行和第四行sed -n &#x27;2p;4p&#x27; example# 打印第1行到第100百行sed -n &#x27;1,100p&#x27; example # 打印从第五行开始到第一个包含以test开始的行之间的所有行sed -n &#x27;5,/^test/p&#x27; example# 打印从第一个包含以test开始的行到第五行之间的所有行sed -n &#x27;/^test/,5p&#x27; example# 打印从第一个包含以test开始的行到最后一行之间的所有行sed -n &#x27;/^test/,$p&#x27; example# 打印包含java或者linux的行sed -r -n &#x27;/java|linux/p&#x27; example# 从第一行开始，间隔2行打印，这里表示打印1，4，7，10...行sed -n &#x27;1~3p&#x27; example# 打印以java开头的所有行sed -n &#x27;/^java/p&#x27; example# 打印以java开头的所有行的下一行sed -n &#x27;/^java/&#123;n;p&#125;&#x27; example# 对于模板test和check之间的行，每行的末尾用字符串sed test替换sed &#x27;/test/,/check/s/$/sed test/&#x27; example# 第2到5行，每行的末尾用字符串sed test替换sed &#x27;2,5s/$/sed test/&#x27; example# 第2到最后一行，每行的末尾用字符串sed test替换sed &#x27;2,$s/$/sed test/&#x27; example 4)多点编辑：e命令 12345678910# (-e)选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果sed -e &#x27;1,5d&#x27; -e &#x27;s/test/check/&#x27; example# 一个比-e更好的命令是--expression。它能给sed表达式赋值。sed --expression=&#x27;s/test/check/&#x27; --expression=&#x27;/love/d&#x27; exampletotalLine=`cat title_list.json | wc -l`lastLineBefore1=$(($totalLine-1))sed -i -r -e &quot;1,$&#123;lastLineBefore1&#125;s/(\\&quot;&#125;)/\\1,/&quot; -e &#x27;1d&#x27; -e &#x27;2i &#123;[&#x27; -e &#x27;$a ]&#125;&#x27; title_list.json 5)追加行或替换行：a、i、c和r a 命令表示在指定行的后面附加一行，i 命令表示在指定行的前面插入一行 123456789101112# 将hello wordl 插入到第二行上面sed &#x27;2i hello world&#x27; example i : 表示在指定行的前面插入一行，$i 表示最后一行前插入# 将hello wordl 插入到第二行下面sed &#x27;2a hello world&#x27; example a : 表示在指定行的后面插入一行，$a 表示最后一行后插入# 也可以同时插入多行内容，使用反斜线即可，这里表示在第二行下面添加两行内容sed &#x27;2a\\&gt; hello world\\&gt; i love you&#x27; example c 命令表示将指定行中的所有内容，替换成该选项后面的字符串 12345678910# 将匹配到的所有含有hello的行替换为hello worldsed &#x27;/hello/c hello world&#x27; example# 将hello world 替换第二行sed &#x27;2c hello world&#x27; example c : 替换行内容# 同样支持替换为多行sed &#x27;2c\\&gt; hello world\\&gt; i love you&#x27; example r 命令用于将一个独立文件的数据插入到当前数据流的指定位置 1234# 将text.txt中的内容插入到example文件的第二行下面sed &#x27;2r test.txt&#x27; example# 将text.txt中的内容插入到example文件的末尾sed &#x27;$r test.txt&#x27; example 6)处理单个字符：y 123456# 将所有以hello开头的行中的 a替换为A，b替换为B，c替换为C，d替换为Dsed &#x27;/^hello/y/abcd/ABCD/&#x27; example$ echo &quot;This 1 is a test2 of 1 try3.&quot; | sed &#x27;y/123/456/&#x27;This 4 is a test5 of 4 try6. y : 字符全局替换，原字符与替换字符的长度必须相同 7)指定行区间 默认情况下，sed 命令会作用于文本数据的所有行，如果只想将命令作用于特定行或某些行，需要明确指定行区间范围。 行区间可以通过如下两种方式进行限定： 1.以数字形式指定行区间 2.用文本模式指定具体行区间 行区间放在命令的前面，具体格式如下： 1234567[行区间]脚本命令或者行区间 &#123; 多个脚本命令,分号分隔&#125; 示例:以数字形式指定行区间 12345678# 替换第二行中的内容sed &#x27;2s/dog/cat/&#x27; test.txt# 替换第二行到第四行中的内容sed &#x27;2,4s/dog/cat/&#x27; test.txt# 替换第二行到文件最后一行中的内容sed &#x27;2,$s/dog/cat/&#x27; test.txt# 从第一行开始，每间隔一行进行替换，1，3，5，7...sed &#x27;1~2s/dog/cat/&#x27; test.txt 示例:用文本模式指定具体行区间 123456789101112# 替换内容中包含pig的所有行的内容sed &#x27;/pig/s/dog/cat/&#x27; test.txt# 正则匹配限制范围，&#123;&#125;指定多个脚本，这个命令的作用是将 h1Helloh1 转换为 &lt;h1&gt;Hello&lt;/h1&gt;sed &#x27;/h[0-9]/&#123;s//\\&lt;&amp;\\&gt;/1;s//\\&lt;\\/&amp;\\&gt;/2&#125;&#x27; test.txt# 也可以将命令写到文件中，通过 -f 参数指定sed -f sed.txt test.txtcat sed.txt/h[0-9]/&#123; s//\\&lt;&amp;\\&gt;/1 s//\\&lt;\\/&amp;\\&gt;/2&#125;","summary":"摘要 sed命令使用说明 本文基于CentOS8(x86_64)","date_published":"2023-03-06T13:31:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-grep/","url":"https://blog.hanqunfeng.com/2023/03/06/linux-command03-grep/","title":"Linux常用命令--grep与egerp","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>grep与egrep的使用</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"grep\">grep</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>grep命令是linux中一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>\n</li>\n<li class=\"lvl-2\">\n<p>语法</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep [option] pattern files</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>常用参数</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能参数\t    解释</span><br><span class=\"line\">-c\t        输出匹配到的行数，功能等同于<span class=\"built_in\">wc</span> -l</span><br><span class=\"line\">-i\t        正则表达式忽略大小写</span><br><span class=\"line\">-l\t        查询多文件时只输出包含匹配字符的文件名</span><br><span class=\"line\">-h\t        查询多文件时不显示文件名</span><br><span class=\"line\">-n\t        显示匹配行的行号</span><br><span class=\"line\">-s\t        不显示文件不存在或无匹配文本的错误信息</span><br><span class=\"line\">-v\t        显示不包含匹配文本的行</span><br><span class=\"line\">-w          强制 PATTERN 仅完全匹配字词</span><br><span class=\"line\">-x          强制 PATTERN 仅完全匹配一行</span><br><span class=\"line\">-e          用 PATTERN 来进行匹配操作，通常用来匹配多个条件或者PATTERN中含有参数项的</span><br><span class=\"line\">-o          仅显示匹配的字符串本身，一行中有多个匹配，会分行显示</span><br><span class=\"line\">-r          在指定目录下递归查找所有文件中匹配关键字的行</span><br><span class=\"line\">-A\t        同时显示匹配行的后几行</span><br><span class=\"line\">-B\t        同时显示匹配行的前几行</span><br><span class=\"line\">-C\t        同时显示匹配行的前几行和后几行</span><br><span class=\"line\">-NUM        同时显示匹配行的前几行和后几行，等同于 -C，如：-C 2 === -2</span><br><span class=\"line\">-G          基本正则表达式，此为预设</span><br><span class=\"line\">-E\t        扩展正则表达式，等同于egrep</span><br><span class=\"line\">-P          Perl 正则表达式</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 匹配关键字key，忽略大小写</span></span><br><span class=\"line\">grep -i key file</span><br><span class=\"line\"></span><br><span class=\"line\">grep <span class=\"string\">&quot;^#&quot;</span> file : 显示所有行首是<span class=\"comment\">#的行</span></span><br><span class=\"line\">    ^ : 正则，以什么开头的行</span><br><span class=\"line\">    $ : 正则，以什么结尾的行</span><br><span class=\"line\"></span><br><span class=\"line\">grep -v <span class=\"string\">&quot;^#&quot;</span> file : 显示所有行首不是<span class=\"comment\">#的行</span></span><br><span class=\"line\">    -v : 找出与所给关键字不匹配的行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字符匹配</span></span><br><span class=\"line\">grep [A] file : 行中内容包含给定的字符</span><br><span class=\"line\">    [ ] : 匹配单个字符</span><br><span class=\"line\">grep [^A] file : 行中内容不包含给定的字符</span><br><span class=\"line\">    [^] : 不匹配单个字符</span><br><span class=\"line\">grep [A-Z] file : 行中内容包含给定的字符范围中的任何一个</span><br><span class=\"line\">    [-] : 匹配范围字符</span><br><span class=\"line\"></span><br><span class=\"line\">grep [ABC] file : 行中内容包含给定的字符列表中的任何一个</span><br><span class=\"line\">grep [^ABC] file : 匹配除方括号中字符外的所有字符</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字符类描述: 注意使用时外面要加[]</span></span><br><span class=\"line\">[:alnum:] 字母数字集 “a-z A-Z 0-9”</span><br><span class=\"line\">[:alpha:] 字母集合 “a-z A-Z”</span><br><span class=\"line\">[:blank:] 空格或制表键</span><br><span class=\"line\">[:cntrl:] 任何控制字符</span><br><span class=\"line\">[:digit:] 数字集合 “0-9”</span><br><span class=\"line\">[:graph:] 任何可视字符（无空格）</span><br><span class=\"line\">[:lower:] 小写字母 “a-z”</span><br><span class=\"line\">[:<span class=\"built_in\">print</span>:] 非控制字符</span><br><span class=\"line\">[:punct:] 标点字符</span><br><span class=\"line\">[:space:] 空格</span><br><span class=\"line\">[:upper:] 大写字母 “A-Z”</span><br><span class=\"line\">[:xdigit:] 十六进制数字 “0-9 a-f A-F”</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\"><span class=\"comment\">#搜索开头不是英文字母的行</span></span><br><span class=\"line\">grep ^[^[:alpha:]] file === grep ^[^a-zA-Z] file</span><br><span class=\"line\"><span class=\"comment\"># 搜索非空行</span></span><br><span class=\"line\">grep -v <span class=\"string\">&quot;^$&quot;</span> file : 搜索非空行，严格来讲这个不准确，不能去除行内容只有空格或者制表符的行</span><br><span class=\"line\">grep [^[:blank:]] file : 搜索非空行，去除行内容只有空格或者制表符的行</span><br><span class=\"line\"></span><br><span class=\"line\">grep key file -A 10 : 显示关键字行及其后面的10行</span><br><span class=\"line\">    -A : After</span><br><span class=\"line\"></span><br><span class=\"line\">grep key file -B 10 : 显示关键字行及其前面的10行</span><br><span class=\"line\">    -B : Before</span><br><span class=\"line\"></span><br><span class=\"line\">grep key file -2 : 显示关键行及其上两行和下两行</span><br><span class=\"line\">    -num : 显示上下各num行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -E 开启扩展正则表达式</span></span><br><span class=\"line\">grep -E <span class=\"string\">&quot;^#&quot;</span> file  <span class=\"comment\">#打印所有注释行</span></span><br><span class=\"line\">    -E : 支持扩展正则表达式</span><br><span class=\"line\"></span><br><span class=\"line\">grep  -E <span class=\"string\">&#x27;key1|key2&#x27;</span>  -n -i file : 查找包含任意关键字的行，并显示行号</span><br><span class=\"line\">    -n : 显示行号</span><br><span class=\"line\">    -i : 不区分大小写</span><br><span class=\"line\"></span><br><span class=\"line\">grep key -c file : 查找关键字匹配的行数</span><br><span class=\"line\">    -c : 只输出匹配行的计数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这个命令非常有用，可以快速定位关键字所在的文件位置</span></span><br><span class=\"line\">grep <span class=\"string\">&#x27;key&#x27;</span> -r <span class=\"built_in\">dir</span> : 在目录下递归查找文件内容包含关键字的文件路径及其所含关键字的内容</span><br><span class=\"line\">    -r : 递归查找</span><br><span class=\"line\"></span><br><span class=\"line\">grep <span class=\"string\">&#x27;key&#x27;</span> -l *.<span class=\"built_in\">log</span> : 打印包含关键字的文件名称</span><br><span class=\"line\">    -l : 在多个文件中查找关键字，并打印文件名称</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 把key当做一个完整的单词来进行匹配，忽略那些部分匹配的行，比如 to只能匹配to，不能匹配tom</span></span><br><span class=\"line\">grep -w key file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果不用 -e 会无法解析命令，即便加上双引号也不行 &quot;-vb-&quot;</span></span><br><span class=\"line\">grep -e -vb- file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 标准正则，匹配key1 或者 匹配key2，正则中的特殊符号需要转义</span></span><br><span class=\"line\">grep -e key1 -e key2 file</span><br><span class=\"line\"><span class=\"comment\"># 扩展正则</span></span><br><span class=\"line\">grep -Ee key1 -Ee key2 file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需要同时匹配key1和key2</span></span><br><span class=\"line\">grep key1 file | grep key2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -o 可以用来统计找到多少个匹配项</span></span><br><span class=\"line\">grep -E <span class=\"string\">&quot;ro+t&quot;</span> /etc/passwd</span><br><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class=\"line\"><span class=\"comment\"># 每个匹配项占一行</span></span><br><span class=\"line\">grep -Eo <span class=\"string\">&quot;ro+t&quot;</span> /etc/passwd</span><br><span class=\"line\">root</span><br><span class=\"line\">root</span><br><span class=\"line\">root</span><br><span class=\"line\">root</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"egrep\">egrep</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>egrep命令用于在文件内查找指定的字符串，egrep执行效果与&quot;grep -E&quot;相似，使用的语法及参数可参照grep指令，与grep的不同点在于解读字符串的方法。</p>\n</li>\n<li class=\"lvl-2\">\n<p>egrep命令为 grep 的扩充版本, 改良了许多传统 grep 不能或不便的操作，比如:</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">grep 使用 <code>?</code> 与 <code>+</code> 时需要转义, 但egrep不需要。</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">&quot;[0-9]\\+&quot;</span> test.txt</span><br><span class=\"line\">grep -E <span class=\"string\">&quot;[0-9]+&quot;</span> test.txt</span><br><span class=\"line\">egrep <span class=\"string\">&quot;[0-9]+&quot;</span> test.txt</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">grep 使用 <code>a|b</code> 或 <code>(abc|xyz)</code> 这类&quot;或一&quot;比对时需要对<code>|</code>进行转义, 但egrep不需要。</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">&quot;a\\|s&quot;</span> test.txt</span><br><span class=\"line\">grep -E <span class=\"string\">&quot;a|s&quot;</span> test.txt</span><br><span class=\"line\">egrep <span class=\"string\">&quot;a|s&quot;</span> test.txt</span><br><span class=\"line\"></span><br><span class=\"line\">grep <span class=\"string\">&quot;\\(a\\|s\\)&quot;</span> test.txt</span><br><span class=\"line\">grep -E <span class=\"string\">&quot;(a|s)&quot;</span> test.txt</span><br><span class=\"line\">egrep <span class=\"string\">&quot;(a|s)&quot;</span> test.txt</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">grep在处理 <code>&#123;n,m&#125;</code> 时, 需用 <code>\\&#123; </code>与 <code>\\&#125;</code> 进行转义, 但egrep不需要。</li>\n</ul>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep <span class=\"string\">&quot;[0-9]\\&#123;3\\&#125;&quot;</span> test.txt</span><br><span class=\"line\">grep -E <span class=\"string\">&quot;[0-9]&#123;3&#125;&quot;</span> test.txt</span><br><span class=\"line\">egrep <span class=\"string\">&quot;[0-9]&#123;3&#125;&quot;</span> test.txt</span><br></pre></td></tr></table></figure>\n</li>\n<li class=\"lvl-2\">\n<p>语法</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">egrep [范本模式] [文件或目录]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">egrep <span class=\"string\">&#x27;key1|key2|key3&#x27;</span> file : 查找包含任意关键字的行</span><br><span class=\"line\">egrep <span class=\"string\">&#x27;a+&#x27;</span> file : 查找包含一个或多个a的行</span><br><span class=\"line\">egrep <span class=\"string\">&#x27;(abc)&#x27;</span> file : 包含abc整体的行</span><br><span class=\"line\">egrep <span class=\"string\">&#x27;(abc)+&#x27;</span> file : 包含一个或多个abc整体的行</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>linux正则表达式</strong></em></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基础正则表达式\t    解释</span><br><span class=\"line\">^\t            ^word表示以word开头的内容</span><br><span class=\"line\">$\t            word$表示以word结尾的内容</span><br><span class=\"line\">^$\t            表示空行</span><br><span class=\"line\">.\t            代表且只能代表任意一个字符</span><br><span class=\"line\">\\\t            转义字符</span><br><span class=\"line\">*\t            重复之前的字符0或多次</span><br><span class=\"line\">.*\t            匹配任意多个字符</span><br><span class=\"line\">[abc]           匹配abc其中的任意一个</span><br><span class=\"line\">[^abc]          匹配未包含在[abc]内的任意一个字符</span><br><span class=\"line\">[a-z]\t        匹配a-z其中的一个字符，[0-9]匹配任意数字</span><br><span class=\"line\"></span><br><span class=\"line\"># grep -E 或者 egrep，grep使用时要转义特殊字符</span><br><span class=\"line\">扩展正则表达式      解释</span><br><span class=\"line\">&#123;m,n&#125;\t        匹配前一个字符m到n次，注意grep使用时，&#123;&#125;要加转义字符\\&#123;\\&#125;</span><br><span class=\"line\">&#123;m&#125;\t            匹配字符m次</span><br><span class=\"line\">&#123;m,&#125;            匹配字符至少m次</span><br><span class=\"line\">+\t            匹配前一个字符1次或者多次，最少一次，如 wo+d，可以匹配 &quot;wood&quot; &quot;woood&quot; &quot;woooooood&quot;等字符串</span><br><span class=\"line\">?\t            重复前一个字符0次或者1次，如 bes?t，可以匹配 &quot;bet&quot; 和 &quot;best&quot; 两个字符串</span><br><span class=\"line\">|\t            同时过滤多个字符，如 of|is|on，匹配包含 &quot;of&quot; 或者 &quot;if&quot; 或者 &quot;on&quot; 的字符串</span><br><span class=\"line\">()              分组，将1个或多个字符捆绑在一起，当做一个整体进行处理，如 t(ad|ef)st，可以匹配 &quot;tadst&quot; 与 &quot;tefst&quot; 两个字符串</span><br><span class=\"line\">                分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部的变量中，这些变量的命名方式为：\\1,\\2,\\3....，如：sed -r &#x27;s/(^love)able/\\1rs/&#x27; example </span><br><span class=\"line\">()+             辨别多个重复的组，如 A(xyz)+C ,可以匹配 开头是&quot;A&quot;结尾是&quot;C&quot;，中间有一个以上的&quot;xyz&quot;的字符串</span><br><span class=\"line\"></span><br><span class=\"line\"># grep -P，不支持egrep</span><br><span class=\"line\">Perl 正则表达式    解释</span><br><span class=\"line\">\\t              匹配制表符</span><br><span class=\"line\">\\n              匹配换行符</span><br><span class=\"line\">\\s              匹配空白字符，空格、制表符\\t、换行符\\r和\\n等</span><br><span class=\"line\">\\S              匹配非空白字符</span><br><span class=\"line\">\\d              匹配数字[0-9]，如：grep -P &quot;\\d&quot; test.txt</span><br><span class=\"line\">\\D              匹配非数字[^0-9]</span><br><span class=\"line\">\\w              匹配字母数字下划线[a-zA-Z0-9_]</span><br><span class=\"line\">\\W              匹配非字母数字下划线[^a-zA-Z0-9_]</span><br><span class=\"line\">(?:xxx)         匹配xxx，但是不会被正则表达式引擎记录于内部的变量中，也就是无法通过\\1,\\2,\\3....获得</span><br></pre></td></tr></table></figure>\n</div>\n","content_text":"摘要 grep与egrep的使用 本文基于CentOS8(x86_64) grep grep命令是linux中一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。 语法 1grep [option] pattern files 常用参数 1234567891011121314151617181920功能参数 解释-c 输出匹配到的行数，功能等同于wc -l-i 正则表达式忽略大小写-l 查询多文件时只输出包含匹配字符的文件名-h 查询多文件时不显示文件名-n 显示匹配行的行号-s 不显示文件不存在或无匹配文本的错误信息-v 显示不包含匹配文本的行-w 强制 PATTERN 仅完全匹配字词-x 强制 PATTERN 仅完全匹配一行-e 用 PATTERN 来进行匹配操作，通常用来匹配多个条件或者PATTERN中含有参数项的-o 仅显示匹配的字符串本身，一行中有多个匹配，会分行显示-r 在指定目录下递归查找所有文件中匹配关键字的行-A 同时显示匹配行的后几行-B 同时显示匹配行的前几行-C 同时显示匹配行的前几行和后几行-NUM 同时显示匹配行的前几行和后几行，等同于 -C，如：-C 2 === -2-G 基本正则表达式，此为预设-E 扩展正则表达式，等同于egrep-P Perl 正则表达式 示例 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394# 匹配关键字key，忽略大小写grep -i key filegrep &quot;^#&quot; file : 显示所有行首是#的行 ^ : 正则，以什么开头的行 $ : 正则，以什么结尾的行grep -v &quot;^#&quot; file : 显示所有行首不是#的行 -v : 找出与所给关键字不匹配的行# 字符匹配grep [A] file : 行中内容包含给定的字符 [ ] : 匹配单个字符grep [^A] file : 行中内容不包含给定的字符 [^] : 不匹配单个字符grep [A-Z] file : 行中内容包含给定的字符范围中的任何一个 [-] : 匹配范围字符grep [ABC] file : 行中内容包含给定的字符列表中的任何一个grep [^ABC] file : 匹配除方括号中字符外的所有字符# 字符类描述: 注意使用时外面要加[][:alnum:] 字母数字集 “a-z A-Z 0-9”[:alpha:] 字母集合 “a-z A-Z”[:blank:] 空格或制表键[:cntrl:] 任何控制字符[:digit:] 数字集合 “0-9”[:graph:] 任何可视字符（无空格）[:lower:] 小写字母 “a-z”[:print:] 非控制字符[:punct:] 标点字符[:space:] 空格[:upper:] 大写字母 “A-Z”[:xdigit:] 十六进制数字 “0-9 a-f A-F”# 示例#搜索开头不是英文字母的行grep ^[^[:alpha:]] file === grep ^[^a-zA-Z] file# 搜索非空行grep -v &quot;^$&quot; file : 搜索非空行，严格来讲这个不准确，不能去除行内容只有空格或者制表符的行grep [^[:blank:]] file : 搜索非空行，去除行内容只有空格或者制表符的行grep key file -A 10 : 显示关键字行及其后面的10行 -A : Aftergrep key file -B 10 : 显示关键字行及其前面的10行 -B : Beforegrep key file -2 : 显示关键行及其上两行和下两行 -num : 显示上下各num行# -E 开启扩展正则表达式grep -E &quot;^#&quot; file #打印所有注释行 -E : 支持扩展正则表达式grep -E &#x27;key1|key2&#x27; -n -i file : 查找包含任意关键字的行，并显示行号 -n : 显示行号 -i : 不区分大小写grep key -c file : 查找关键字匹配的行数 -c : 只输出匹配行的计数# 这个命令非常有用，可以快速定位关键字所在的文件位置grep &#x27;key&#x27; -r dir : 在目录下递归查找文件内容包含关键字的文件路径及其所含关键字的内容 -r : 递归查找grep &#x27;key&#x27; -l *.log : 打印包含关键字的文件名称 -l : 在多个文件中查找关键字，并打印文件名称# 把key当做一个完整的单词来进行匹配，忽略那些部分匹配的行，比如 to只能匹配to，不能匹配tomgrep -w key file# 如果不用 -e 会无法解析命令，即便加上双引号也不行 &quot;-vb-&quot;grep -e -vb- file# 标准正则，匹配key1 或者 匹配key2，正则中的特殊符号需要转义grep -e key1 -e key2 file# 扩展正则grep -Ee key1 -Ee key2 file# 需要同时匹配key1和key2grep key1 file | grep key2# -o 可以用来统计找到多少个匹配项grep -E &quot;ro+t&quot; /etc/passwdroot:x:0:0:root:/root:/bin/bashoperator:x:11:0:operator:/root:/sbin/nologin# 每个匹配项占一行grep -Eo &quot;ro+t&quot; /etc/passwdrootrootrootroot egrep egrep命令用于在文件内查找指定的字符串，egrep执行效果与&quot;grep -E&quot;相似，使用的语法及参数可参照grep指令，与grep的不同点在于解读字符串的方法。 egrep命令为 grep 的扩充版本, 改良了许多传统 grep 不能或不便的操作，比如: grep 使用 ? 与 + 时需要转义, 但egrep不需要。 123grep &quot;[0-9]\\+&quot; test.txtgrep -E &quot;[0-9]+&quot; test.txtegrep &quot;[0-9]+&quot; test.txt grep 使用 a|b 或 (abc|xyz) 这类&quot;或一&quot;比对时需要对|进行转义, 但egrep不需要。 1234567grep &quot;a\\|s&quot; test.txtgrep -E &quot;a|s&quot; test.txtegrep &quot;a|s&quot; test.txtgrep &quot;\\(a\\|s\\)&quot; test.txtgrep -E &quot;(a|s)&quot; test.txtegrep &quot;(a|s)&quot; test.txt grep在处理 &#123;n,m&#125; 时, 需用 \\&#123; 与 \\&#125; 进行转义, 但egrep不需要。 123grep &quot;[0-9]\\&#123;3\\&#125;&quot; test.txtgrep -E &quot;[0-9]&#123;3&#125;&quot; test.txtegrep &quot;[0-9]&#123;3&#125;&quot; test.txt 语法 1egrep [范本模式] [文件或目录] 示例 1234egrep &#x27;key1|key2|key3&#x27; file : 查找包含任意关键字的行egrep &#x27;a+&#x27; file : 查找包含一个或多个a的行egrep &#x27;(abc)&#x27; file : 包含abc整体的行egrep &#x27;(abc)+&#x27; file : 包含一个或多个abc整体的行 linux正则表达式 1234567891011121314151617181920212223242526272829303132333435基础正则表达式 解释^ ^word表示以word开头的内容$ word$表示以word结尾的内容^$ 表示空行. 代表且只能代表任意一个字符\\ 转义字符* 重复之前的字符0或多次.* 匹配任意多个字符[abc] 匹配abc其中的任意一个[^abc] 匹配未包含在[abc]内的任意一个字符[a-z] 匹配a-z其中的一个字符，[0-9]匹配任意数字# grep -E 或者 egrep，grep使用时要转义特殊字符扩展正则表达式 解释&#123;m,n&#125; 匹配前一个字符m到n次，注意grep使用时，&#123;&#125;要加转义字符\\&#123;\\&#125;&#123;m&#125; 匹配字符m次&#123;m,&#125; 匹配字符至少m次+ 匹配前一个字符1次或者多次，最少一次，如 wo+d，可以匹配 &quot;wood&quot; &quot;woood&quot; &quot;woooooood&quot;等字符串? 重复前一个字符0次或者1次，如 bes?t，可以匹配 &quot;bet&quot; 和 &quot;best&quot; 两个字符串| 同时过滤多个字符，如 of|is|on，匹配包含 &quot;of&quot; 或者 &quot;if&quot; 或者 &quot;on&quot; 的字符串() 分组，将1个或多个字符捆绑在一起，当做一个整体进行处理，如 t(ad|ef)st，可以匹配 &quot;tadst&quot; 与 &quot;tefst&quot; 两个字符串 分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部的变量中，这些变量的命名方式为：\\1,\\2,\\3....，如：sed -r &#x27;s/(^love)able/\\1rs/&#x27; example ()+ 辨别多个重复的组，如 A(xyz)+C ,可以匹配 开头是&quot;A&quot;结尾是&quot;C&quot;，中间有一个以上的&quot;xyz&quot;的字符串# grep -P，不支持egrepPerl 正则表达式 解释\\t 匹配制表符\\n 匹配换行符\\s 匹配空白字符，空格、制表符\\t、换行符\\r和\\n等\\S 匹配非空白字符\\d 匹配数字[0-9]，如：grep -P &quot;\\d&quot; test.txt\\D 匹配非数字[^0-9]\\w 匹配字母数字下划线[a-zA-Z0-9_]\\W 匹配非字母数字下划线[^a-zA-Z0-9_](?:xxx) 匹配xxx，但是不会被正则表达式引擎记录于内部的变量中，也就是无法通过\\1,\\2,\\3....获得","summary":"摘要 grep与egrep的使用 本文基于CentOS8(x86_64)","date_published":"2023-03-06T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-ssh/","url":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-ssh/","title":"Linux常用命令--ssh、scp与免密登录","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ssh、scp命令的使用以及免密登录的设置方法</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"ssh\">ssh</h2>\n<h3 id=\"3-1-登录\">3.1 登录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 登录</span></span><br><span class=\"line\">ssh user@ip  : 默认连接22端口，不同用户名</span><br><span class=\"line\"><span class=\"comment\"># 指定端口</span></span><br><span class=\"line\">ssh -p 22122 user@ip  : 不同用户名，指定其它端口</span><br><span class=\"line\">ssh -p 22122 ip  : 相同用户名</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-2-远程执行命令或脚本\">3.2 远程执行命令或脚本</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.无需交互的命令</span></span><br><span class=\"line\">ssh user@ip <span class=\"string\">&quot;command&quot;</span></span><br><span class=\"line\">示例：</span><br><span class=\"line\">ssh user@ip <span class=\"string\">&quot;pwd&quot;</span></span><br><span class=\"line\">ssh user@ip <span class=\"string\">&quot;sh /usr/local/run.sh&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.需要交互的命令，即需要开启一个TTY</span></span><br><span class=\"line\">ssh user@ip -t <span class=\"string\">&quot;command&quot;</span></span><br><span class=\"line\">示例：</span><br><span class=\"line\">ssh user@ip -t <span class=\"string\">&quot;top&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-3-远程服务器上执行本地的脚步\">3.3 远程服务器上执行本地的脚步</h3>\n<p>上面都是执行远程服务器上的脚本，如果要在远程服务器上执行本地的脚步，需要使用如下方式:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.不需要参数</span></span><br><span class=\"line\">ssh user@ip &lt; script.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.需要参数</span></span><br><span class=\"line\">ssh user@ip <span class=\"string\">&#x27;bash -s&#x27;</span> &lt; script.sh param1 param2</span><br></pre></td></tr></table></figure>\n<h2 id=\"scp\">scp</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 本地传输到远程</span></span><br><span class=\"line\">scp xxx.txt user@ip:~/xxx.txt : 默认连接22端口，不同用户名</span><br><span class=\"line\">scp -P 22122 xxx.txt user@ip:~/xxx.txt : 不同用户名，指定其它端口</span><br><span class=\"line\">scp -P 22122 xxx.txt ip:~/xxx.txt : 相同用户名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 远程传输的本地</span></span><br><span class=\"line\">scp -P 22122 user@192.168.1.219:~/xxx.txt xxx.txt</span><br></pre></td></tr></table></figure>\n<h2 id=\"免密登录-密钥登录\">免密登录(密钥登录)</h2>\n<p><em><strong>小贴士</strong></em></p>\n<blockquote>\n<p>默认情况下，ssh或者scp都需要输入登录密码，如果不想输入密码，可以配置免密登录(密钥登录)<br>\nssh远程执行命令和scp远程传输如果配合免密登录，就可以为脚本自动化打下基础。</p>\n</blockquote>\n<p><strong>1、如果希望从ServerA免输入passwd就可以ssh到ServerB，先在ServerA上执行:</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa</span><br><span class=\"line\">中间会让你输入密码并且确认生成目录，默认存放在本地用户的 ~/.ssh目录下 一路回车就好</span><br><span class=\"line\">会生成：id_rsa（密钥） id_rsa.pub（公钥）</span><br><span class=\"line\"></span><br><span class=\"line\">-t : 指定加密类型，不指定默认rsa，支持 dsa|ecdsa|ed25519|rsa</span><br><span class=\"line\">-b : 指定密钥长度，默认2048位</span><br><span class=\"line\">-C : 注释，用于识别这个密钥，公钥内容最后会附加这个注释，默认为“用户@主机名”</span><br><span class=\"line\">-f : 生成的密钥文件名称</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\">$ ssh-keygen -t rsa -b 4096 -C <span class=\"string\">&quot;hanqunfeng&quot;</span> -f ~/.ssh/sshkey</span><br><span class=\"line\">则 ~/.ssh 路径下会生成两个文件：sshkey 和 sshkey.pub</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>2、把id_rsa.pub（公钥）的内容保存到ServerB的用户目录下的.ssh目录下的authorized_keys文件中</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方式1：</span><br><span class=\"line\">ServerA命令行执行</span><br><span class=\"line\">ssh-copy-id ~/.ssh/id_rsa.pub user@ServerB_IP</span><br><span class=\"line\">  -p : 指定端口</span><br><span class=\"line\">  -i : 指定私钥路径</span><br><span class=\"line\"></span><br><span class=\"line\">方式2：</span><br><span class=\"line\">打开ServerA上的~/.ssh/id_rsa.pub，复制里面内容，粘贴到ServerB的对应用户下的～/.ssh/authorized_keys文件中，保存退出，</span><br><span class=\"line\">如果authorized_keys文件不存在就创建，如果authorized_keys文件中已有内容则粘贴到最后即可。</span><br></pre></td></tr></table></figure>\n<p><strong>注意：ServerB 的 .ssh 目录的权限和 authorized_keys 的权限分别是 700 和 600</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> 700 -R .ssh</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 600 authorized_keys</span><br></pre></td></tr></table></figure>\n<p>至此，再次从ServerA通过ssh或者scp连接到ServerB时就不会提示你输入密码啦</p>\n<p>实际上证书的创建在任何服务器上进行都行，只需要让ServerA拥有私钥，ServerB的对应用户下的<code>～/.ssh/authorized_keys</code>文件中配置上公钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此时要求ServerA拥有的私钥的路径必须为~/.ssh/id_rsa</span></span><br><span class=\"line\">ssh user@ServerB_IP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果私钥名称不是id_rsa，或者没有放置在~/.ssh下，则需要通过 -i 指定私钥路径</span></span><br><span class=\"line\">ssh -i <span class=\"string\">&quot;~/.ssh/script.pem&quot;</span> user@ServerB_IP</span><br></pre></td></tr></table></figure>\n<p>默认情况下，sshd的密钥认证方式是开启的，可以查看ServerB的<code>/etc/ssh/sshd_config</code>中的配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 是否开启公钥验证</span></span><br><span class=\"line\">PubkeyAuthentication <span class=\"built_in\">yes</span></span><br><span class=\"line\"><span class=\"comment\"># 公钥验证文件路径</span></span><br><span class=\"line\">AuthorizedKeysFile      .ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n<h2 id=\"config配置登录信息\">config配置登录信息</h2>\n<blockquote>\n<p>通过config配置，可以进一步简化我们使用ssh和scp的方式</p>\n</blockquote>\n<p><strong>1.在用户根目录下的.ssh文件内创建config文件，用于保存ssh登陆主机的相关信息，内容格式如下：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host aliyun                       <span class=\"comment\">#就是给服务器起一个别名，后面使用时就是使用这个别名，如 ssh &#123;name&#125;</span></span><br><span class=\"line\">User root                         <span class=\"comment\">#登录用户名称</span></span><br><span class=\"line\">HostName 8.130.53.111             <span class=\"comment\">#服务器ip地址</span></span><br><span class=\"line\">Port 22                           <span class=\"comment\">#服务器登录端口，默认22</span></span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa        <span class=\"comment\">#免密登录的私钥文件路径</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果要登录后切换到root用户，可以增加 RemoteCommand和RequestTTY，注意这种方式就没办法再通过ssh执行远程脚本了</span></span><br><span class=\"line\">RemoteCommand sudo su &amp;&amp; <span class=\"built_in\">cd</span>       <span class=\"comment\">#登录后要执行的命令，这里表示切换到root用户，这里注意本机的open ssh版本需要大于等于7.6(可用ssh -V查看)</span></span><br><span class=\"line\">RequestTTY <span class=\"built_in\">yes</span>                    <span class=\"comment\">#开启TTY</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通配符匹配</span></span><br><span class=\"line\">Host 10.10.*                      <span class=\"comment\">#支持通配符，这里表示所有10.10.开头的ip都会被匹配，此时不要配置HostName</span></span><br><span class=\"line\">User root</span><br><span class=\"line\">Port 22</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\">ProxyCommand ssh aliyun -W %h:%p  <span class=\"comment\">#通过上面配置的aliyun作为跳板机登录到其它服务器上去</span></span><br><span class=\"line\">RemoteCommand sudo su &amp;&amp; <span class=\"built_in\">cd</span></span><br><span class=\"line\">RequestTTY <span class=\"built_in\">yes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 全局默认配置</span></span><br><span class=\"line\">Host *</span><br><span class=\"line\">IdentityFile ~/.ssh/id_rsa</span><br><span class=\"line\">Compression <span class=\"built_in\">yes</span></span><br><span class=\"line\">ServerAliveInterval 60</span><br><span class=\"line\">ServerAliveCountMax 5</span><br><span class=\"line\">ControlMaster auto</span><br><span class=\"line\">ControlPath ~/.sockets/%r@%h-%p</span><br><span class=\"line\">ControlPersist 4h</span><br><span class=\"line\">StrictHostKeyChecking no</span><br><span class=\"line\">UserKnownHostsFile /dev/null</span><br><span class=\"line\">ConnectTimeout 15</span><br><span class=\"line\">StrictHostKeyChecking no</span><br></pre></td></tr></table></figure>\n<p><strong>使用方法</strong><br>\n1）ssh 登录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh aliyun</span><br><span class=\"line\">ssh 10.10.123.123</span><br></pre></td></tr></table></figure>\n<p>2）scp 传输文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 本地传输到远程</span></span><br><span class=\"line\">scp ./file aliyun:~/</span><br><span class=\"line\">scp ./file 10.10.123.123:~/</span><br><span class=\"line\"><span class=\"comment\"># 远程传输的本地</span></span><br><span class=\"line\">scp aliyun:~/file ./</span><br><span class=\"line\">scp 10.10.123.123:~/file ./</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改sshd端口和关闭密码登录\">修改sshd端口和关闭密码登录</h2>\n<p>1.sshd默认端口是22，建议生产环境进行修改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/ssh/sshd_config</span><br><span class=\"line\"><span class=\"comment\"># 找到 Port 22，默认是注释掉的，解开注释然后将端口22改为你想要的端口号</span></span><br><span class=\"line\">Port 22122</span><br></pre></td></tr></table></figure>\n<p>2.关闭密码登录<br>\n如果配置了密钥登录，可以禁止密码登录，建议生产环境进行修改</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/ssh/sshd_config</span><br><span class=\"line\"><span class=\"comment\"># 找到 PasswordAuthentication 禁止密码登录设置为 no，允许密码登录设置为 yes</span></span><br><span class=\"line\">PasswordAuthentication no</span><br></pre></td></tr></table></figure>\n<p>3.重启SSH服务：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart sshd</span><br></pre></td></tr></table></figure>\n<p>4.查看sshd端口状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tunpl | grep sshd</span><br><span class=\"line\">tcp        0      0 0.0.0.0:22122           0.0.0.0:*               LISTEN      20652/sshd</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 ssh、scp命令的使用以及免密登录的设置方法 本文基于CentOS8(x86_64) ssh 3.1 登录 12345# 登录ssh user@ip : 默认连接22端口，不同用户名# 指定端口ssh -p 22122 user@ip : 不同用户名，指定其它端口ssh -p 22122 ip : 相同用户名 3.2 远程执行命令或脚本 12345678910# 1.无需交互的命令ssh user@ip &quot;command&quot;示例：ssh user@ip &quot;pwd&quot;ssh user@ip &quot;sh /usr/local/run.sh&quot;# 2.需要交互的命令，即需要开启一个TTYssh user@ip -t &quot;command&quot;示例：ssh user@ip -t &quot;top&quot; 3.3 远程服务器上执行本地的脚步 上面都是执行远程服务器上的脚本，如果要在远程服务器上执行本地的脚步，需要使用如下方式: 12345# 1.不需要参数ssh user@ip &lt; script.sh# 2.需要参数ssh user@ip &#x27;bash -s&#x27; &lt; script.sh param1 param2 scp 1234567# 本地传输到远程scp xxx.txt user@ip:~/xxx.txt : 默认连接22端口，不同用户名scp -P 22122 xxx.txt user@ip:~/xxx.txt : 不同用户名，指定其它端口scp -P 22122 xxx.txt ip:~/xxx.txt : 相同用户名# 远程传输的本地scp -P 22122 user@192.168.1.219:~/xxx.txt xxx.txt 免密登录(密钥登录) 小贴士 默认情况下，ssh或者scp都需要输入登录密码，如果不想输入密码，可以配置免密登录(密钥登录) ssh远程执行命令和scp远程传输如果配合免密登录，就可以为脚本自动化打下基础。 1、如果希望从ServerA免输入passwd就可以ssh到ServerB，先在ServerA上执行: 12345678910111213$ ssh-keygen -t rsa中间会让你输入密码并且确认生成目录，默认存放在本地用户的 ~/.ssh目录下 一路回车就好会生成：id_rsa（密钥） id_rsa.pub（公钥）-t : 指定加密类型，不指定默认rsa，支持 dsa|ecdsa|ed25519|rsa-b : 指定密钥长度，默认2048位-C : 注释，用于识别这个密钥，公钥内容最后会附加这个注释，默认为“用户@主机名”-f : 生成的密钥文件名称# 示例$ ssh-keygen -t rsa -b 4096 -C &quot;hanqunfeng&quot; -f ~/.ssh/sshkey则 ~/.ssh 路径下会生成两个文件：sshkey 和 sshkey.pub 2、把id_rsa.pub（公钥）的内容保存到ServerB的用户目录下的.ssh目录下的authorized_keys文件中 123456789方式1：ServerA命令行执行ssh-copy-id ~/.ssh/id_rsa.pub user@ServerB_IP -p : 指定端口 -i : 指定私钥路径方式2：打开ServerA上的~/.ssh/id_rsa.pub，复制里面内容，粘贴到ServerB的对应用户下的～/.ssh/authorized_keys文件中，保存退出，如果authorized_keys文件不存在就创建，如果authorized_keys文件中已有内容则粘贴到最后即可。 注意：ServerB 的 .ssh 目录的权限和 authorized_keys 的权限分别是 700 和 600 12chmod 700 -R .sshchmod 600 authorized_keys 至此，再次从ServerA通过ssh或者scp连接到ServerB时就不会提示你输入密码啦 实际上证书的创建在任何服务器上进行都行，只需要让ServerA拥有私钥，ServerB的对应用户下的～/.ssh/authorized_keys文件中配置上公钥 12345# 此时要求ServerA拥有的私钥的路径必须为~/.ssh/id_rsassh user@ServerB_IP# 如果私钥名称不是id_rsa，或者没有放置在~/.ssh下，则需要通过 -i 指定私钥路径ssh -i &quot;~/.ssh/script.pem&quot; user@ServerB_IP 默认情况下，sshd的密钥认证方式是开启的，可以查看ServerB的/etc/ssh/sshd_config中的配置 1234# 是否开启公钥验证PubkeyAuthentication yes# 公钥验证文件路径AuthorizedKeysFile .ssh/authorized_keys config配置登录信息 通过config配置，可以进一步简化我们使用ssh和scp的方式 1.在用户根目录下的.ssh文件内创建config文件，用于保存ssh登陆主机的相关信息，内容格式如下： 1234567891011121314151617181920212223242526272829303132Host aliyun #就是给服务器起一个别名，后面使用时就是使用这个别名，如 ssh &#123;name&#125;User root #登录用户名称HostName 8.130.53.111 #服务器ip地址Port 22 #服务器登录端口，默认22IdentityFile ~/.ssh/id_rsa #免密登录的私钥文件路径# 如果要登录后切换到root用户，可以增加 RemoteCommand和RequestTTY，注意这种方式就没办法再通过ssh执行远程脚本了RemoteCommand sudo su &amp;&amp; cd #登录后要执行的命令，这里表示切换到root用户，这里注意本机的open ssh版本需要大于等于7.6(可用ssh -V查看)RequestTTY yes #开启TTY# 通配符匹配Host 10.10.* #支持通配符，这里表示所有10.10.开头的ip都会被匹配，此时不要配置HostNameUser rootPort 22IdentityFile ~/.ssh/id_rsaProxyCommand ssh aliyun -W %h:%p #通过上面配置的aliyun作为跳板机登录到其它服务器上去RemoteCommand sudo su &amp;&amp; cdRequestTTY yes# 全局默认配置Host *IdentityFile ~/.ssh/id_rsaCompression yesServerAliveInterval 60ServerAliveCountMax 5ControlMaster autoControlPath ~/.sockets/%r@%h-%pControlPersist 4hStrictHostKeyChecking noUserKnownHostsFile /dev/nullConnectTimeout 15StrictHostKeyChecking no 使用方法 1）ssh 登录： 12ssh aliyunssh 10.10.123.123 2）scp 传输文件 123456# 本地传输到远程scp ./file aliyun:~/scp ./file 10.10.123.123:~/# 远程传输的本地scp aliyun:~/file ./scp 10.10.123.123:~/file ./ 修改sshd端口和关闭密码登录 1.sshd默认端口是22，建议生产环境进行修改 123$ vim /etc/ssh/sshd_config# 找到 Port 22，默认是注释掉的，解开注释然后将端口22改为你想要的端口号Port 22122 2.关闭密码登录 如果配置了密钥登录，可以禁止密码登录，建议生产环境进行修改 123$ vim /etc/ssh/sshd_config# 找到 PasswordAuthentication 禁止密码登录设置为 no，允许密码登录设置为 yesPasswordAuthentication no 3.重启SSH服务： 1systemctl restart sshd 4.查看sshd端口状态 12netstat -tunpl | grep sshdtcp 0 0 0.0.0.0:22122 0.0.0.0:* LISTEN 20652/sshd","summary":"摘要 ssh、scp命令的使用以及免密登录的设置方法 本文基于CentOS8(x86_64)","date_published":"2023-02-28T13:55:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-curl-wget/","url":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-curl-wget/","title":"Linux常用命令--curl与wget","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>curl与wget的基本使用方法</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"curl\">curl</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看页面内容，默认GET请求</span></span><br><span class=\"line\">curl url</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 简单验证的页面登录方法</span></span><br><span class=\"line\">curl -u user:passwd url</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载文件要指定下载后的文件名称</span></span><br><span class=\"line\">curl -o fileName url</span><br><span class=\"line\"><span class=\"comment\"># 显示下载进度条,-C断点续传，-o下载后的文件名称</span></span><br><span class=\"line\">curl -C -<span class=\"comment\"># -o fileName url</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -X, --request 指定请求方法</span></span><br><span class=\"line\"><span class=\"comment\"># -d, --data DATA     HTTP POST data</span></span><br><span class=\"line\"><span class=\"comment\"># -X指定请求协议,-H指定请求头，多个请求头就使用多个-H，-d指定请求数据</span></span><br><span class=\"line\">curl url \\</span><br><span class=\"line\">  -X POST \\</span><br><span class=\"line\">  -d <span class=\"string\">&quot;&#123;\\&quot;data\\&quot;:\\&quot;content\\&quot;&#125;&quot;</span> \\</span><br><span class=\"line\">  -H <span class=\"string\">&quot;content-type: application/json&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">curl url \\</span><br><span class=\"line\">  -X POST \\</span><br><span class=\"line\">  -d <span class=\"string\">&quot;name=zhangsan&amp;age=30&quot;</span></span><br><span class=\"line\">  -H <span class=\"string\">&quot;content-type: application/x-www-form-urlencoded&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># --data-urlencode参数等同于-d，发送 POST 请求的数据体，区别在于会自动将发送的数据进行 URL 编码</span></span><br><span class=\"line\">curl --data-urlencode <span class=\"string\">&#x27;name=张三&#x27;</span> url</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -G, --get  Send the -d data with a HTTP GET</span></span><br><span class=\"line\"><span class=\"comment\"># 发出一个 GET 请求，实际请求的 URL 为url?name=zhangsan&amp;age=30。如果省略-G，会发出一个 POST 请求。</span></span><br><span class=\"line\">curl -G -d <span class=\"string\">&#x27;name=zhangsan&#x27;</span> -d <span class=\"string\">&#x27;age=30&#x27;</span> url</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上传文件，注意文件名称前面要加上@，后面跟本地文件路径，不指定type默认会把 MIME 类型设为application/octet-stream，不指定filename默认使用上传文件名称作为服务器端接收到的文件名称</span></span><br><span class=\"line\">curl -F <span class=\"string\">&#x27;file=@photo.png;type=image/png;filename=me.png&#x27;</span> -H <span class=\"string\">&quot;Content-Type: multipart/form-data&quot;</span> url</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 同时传递文件和普通属性，有多少个参数，后面就跟多少个-F指定要上传携带的参数值</span></span><br><span class=\"line\">curl -F <span class=\"string\">&#x27;file=@photo.png;type=image/png;filename=me.png&#x27;</span> -F <span class=\"string\">&#x27;name=java&#x27;</span> -H <span class=\"string\">&quot;Content-Type: multipart/form-data&quot;</span> url</span><br><span class=\"line\"><span class=\"comment\"># 同时传递文件和json属性</span></span><br><span class=\"line\">curl -F <span class=\"string\">&#x27;file=@photo.png;type=image/png;filename=me.png&#x27;</span> -F <span class=\"string\">&#x27;jsonBody=&#123;&quot;name&quot;:&quot;java&quot;&#125;;type=application/json&#x27;</span> -H <span class=\"string\">&quot;Content-Type: multipart/form-data&quot;</span> url</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过FTP进行下载，-O 将返回内容输出到当前目录下，和url中文件名相同的文件中（不含目录）</span></span><br><span class=\"line\">curl -O ftp://user:pass@ip:port/file </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过FTP进行上传，-T 指定上传文件</span></span><br><span class=\"line\">curl -T file ftp://user:pass@ip:port/path </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示libcurl使用的CA证书捆绑包的内置路径，用于解决 curl: (60) SSL certificate problem: certificate has expired 的问题时，定位证书的位置，然后从  https://curl.se/docs/caextract.html 下载新版进行替换</span></span><br><span class=\"line\">curl-config --ca</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">有些系统没有默认安装curl，可以通过<code>yum install curl -y</code>的方式进行安装，也可以通过源码进行安装，这里给出源码安装的过程</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\">yum install gcc cmake openssl openssl-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载源码：https://github.com/curl/curl/releases/</span></span><br><span class=\"line\">wget https://github.com/curl/curl/releases/download/curl-8_0_1/curl-8.0.1.tar.gz</span><br><span class=\"line\">tar -zxcf curl-8.0.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 进入curl目录下，创建一个build文件夹，用于存放编译产生的中间文件、动态库、头文件等内容</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> curl-8.0.1</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过cmke生成Makefile，注意，cmake的语法是：cmake [路径]，.. 表示上一级目录</span></span><br><span class=\"line\">cmake ..</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编译并安装</span></span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新系统的链接库</span></span><br><span class=\"line\">ldconfig -v</span><br></pre></td></tr></table></figure>\n</div>\n<h2 id=\"wget\">wget</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载到当前目录</span></span><br><span class=\"line\">wget url</span><br><span class=\"line\"><span class=\"comment\"># 下载到指定文件中</span></span><br><span class=\"line\">wget -O saveFile url</span><br><span class=\"line\"><span class=\"comment\"># 下载file.txt中的所有链接</span></span><br><span class=\"line\">wget -i file.txt</span><br><span class=\"line\"><span class=\"comment\"># 断点续传，最多重试5次</span></span><br><span class=\"line\">wget -c -t 5 url</span><br><span class=\"line\"><span class=\"comment\"># 递归下载整个网站,递归深度为5</span></span><br><span class=\"line\">wget -r -l 5 url</span><br><span class=\"line\"><span class=\"comment\"># 只下载rar格式的文件</span></span><br><span class=\"line\">wget -m --accept=rar url</span><br><span class=\"line\"><span class=\"comment\"># 不下载gif格式的文件</span></span><br><span class=\"line\">wget -m --reject=gif url</span><br><span class=\"line\"><span class=\"comment\"># 不下载已经存在的文件,设置超时时间5s</span></span><br><span class=\"line\">wget -nc -T 5 url</span><br><span class=\"line\"><span class=\"comment\"># 下载速度限制为1m/s，默认全速下载</span></span><br><span class=\"line\">wget --limit-rate=1m url</span><br><span class=\"line\"><span class=\"comment\"># 使用需要用户名和密码认证的ftp下载</span></span><br><span class=\"line\">wget --ftp-user=USERNAME --ftp-password=PASSWORD ftp://url</span><br><span class=\"line\"><span class=\"comment\"># 访问https连接提示证书过期时，如果确认可以安全访问，可以加上--no-check-certificate</span></span><br><span class=\"line\">wget --no-check-certificate https://xxxxx</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 curl与wget的基本使用方法 本文基于CentOS8(x86_64) curl 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647# 查看页面内容，默认GET请求curl url# 简单验证的页面登录方法curl -u user:passwd url# 下载文件要指定下载后的文件名称curl -o fileName url# 显示下载进度条,-C断点续传，-o下载后的文件名称curl -C -# -o fileName url# -X, --request 指定请求方法# -d, --data DATA HTTP POST data# -X指定请求协议,-H指定请求头，多个请求头就使用多个-H，-d指定请求数据curl url \\ -X POST \\ -d &quot;&#123;\\&quot;data\\&quot;:\\&quot;content\\&quot;&#125;&quot; \\ -H &quot;content-type: application/json&quot;curl url \\ -X POST \\ -d &quot;name=zhangsan&amp;age=30&quot; -H &quot;content-type: application/x-www-form-urlencoded&quot;# --data-urlencode参数等同于-d，发送 POST 请求的数据体，区别在于会自动将发送的数据进行 URL 编码curl --data-urlencode &#x27;name=张三&#x27; url# -G, --get Send the -d data with a HTTP GET# 发出一个 GET 请求，实际请求的 URL 为url?name=zhangsan&amp;age=30。如果省略-G，会发出一个 POST 请求。curl -G -d &#x27;name=zhangsan&#x27; -d &#x27;age=30&#x27; url# 上传文件，注意文件名称前面要加上@，后面跟本地文件路径，不指定type默认会把 MIME 类型设为application/octet-stream，不指定filename默认使用上传文件名称作为服务器端接收到的文件名称curl -F &#x27;file=@photo.png;type=image/png;filename=me.png&#x27; -H &quot;Content-Type: multipart/form-data&quot; url# 同时传递文件和普通属性，有多少个参数，后面就跟多少个-F指定要上传携带的参数值curl -F &#x27;file=@photo.png;type=image/png;filename=me.png&#x27; -F &#x27;name=java&#x27; -H &quot;Content-Type: multipart/form-data&quot; url# 同时传递文件和json属性curl -F &#x27;file=@photo.png;type=image/png;filename=me.png&#x27; -F &#x27;jsonBody=&#123;&quot;name&quot;:&quot;java&quot;&#125;;type=application/json&#x27; -H &quot;Content-Type: multipart/form-data&quot; url# 通过FTP进行下载，-O 将返回内容输出到当前目录下，和url中文件名相同的文件中（不含目录）curl -O ftp://user:pass@ip:port/file # 通过FTP进行上传，-T 指定上传文件curl -T file ftp://user:pass@ip:port/path # 显示libcurl使用的CA证书捆绑包的内置路径，用于解决 curl: (60) SSL certificate problem: certificate has expired 的问题时，定位证书的位置，然后从 https://curl.se/docs/caextract.html 下载新版进行替换curl-config --ca 小贴士 有些系统没有默认安装curl，可以通过yum install curl -y的方式进行安装，也可以通过源码进行安装，这里给出源码安装的过程 1234567891011121314151617181920# 安装依赖yum install gcc cmake openssl openssl-devel# 下载源码：https://github.com/curl/curl/releases/wget https://github.com/curl/curl/releases/download/curl-8_0_1/curl-8.0.1.tar.gztar -zxcf curl-8.0.1.tar.gz# 进入curl目录下，创建一个build文件夹，用于存放编译产生的中间文件、动态库、头文件等内容cd curl-8.0.1mkdir buildcd build# 通过cmke生成Makefile，注意，cmake的语法是：cmake [路径]，.. 表示上一级目录cmake ..# 编译并安装make &amp;&amp; make install# 更新系统的链接库ldconfig -v wget 12345678910111213141516171819202122# 下载到当前目录wget url# 下载到指定文件中wget -O saveFile url# 下载file.txt中的所有链接wget -i file.txt# 断点续传，最多重试5次wget -c -t 5 url# 递归下载整个网站,递归深度为5wget -r -l 5 url# 只下载rar格式的文件wget -m --accept=rar url# 不下载gif格式的文件wget -m --reject=gif url# 不下载已经存在的文件,设置超时时间5swget -nc -T 5 url# 下载速度限制为1m/s，默认全速下载wget --limit-rate=1m url# 使用需要用户名和密码认证的ftp下载wget --ftp-user=USERNAME --ftp-password=PASSWORD ftp://url# 访问https连接提示证书过期时，如果确认可以安全访问，可以加上--no-check-certificatewget --no-check-certificate https://xxxxx","summary":"摘要 curl与wget的基本使用方法 本文基于CentOS8(x86_64)","date_published":"2023-02-28T13:40:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-netmask/","url":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-netmask/","title":"Linux常用命令--子网掩码","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>本文介绍子网掩码的作用</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"子网掩码\">子网掩码</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>我们经常看到10.8.1.0/24这种ip表示方式，其表示为从10.8.1.0这个IP开始，24代表子网掩码为255.255.255.0，共包含256个地址，即从0-255共256个IP，即10.8.1.0~10.8.1.255。</p>\n</li>\n<li class=\"lvl-2\">\n<p>这里<code>/24</code>代表子网掩码，即前面由多少个1组成，举例如下：<br>\nA类IP地址的默认子网掩码为255.0.0.0，由于255相当于二进制的8位1，所以也缩写成“/8”，表示网络号占了8位，/12表示网络号占了12位，即有12个1，以此类推。<br>\n具体的设置规则可参考下表:</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>IP总数</th>\n<th>子网掩码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/24</td>\n<td>256</td>\n<td>255.255.255.0</td>\n</tr>\n<tr>\n<td>/20</td>\n<td>4096</td>\n<td>255.255.240.0</td>\n</tr>\n<tr>\n<td>/16</td>\n<td>65536</td>\n<td>255.255.0.0</td>\n</tr>\n<tr>\n<td>/12</td>\n<td>1048576</td>\n<td>255.240.0.0</td>\n</tr>\n<tr>\n<td>/8</td>\n<td>16777216</td>\n<td>255.0.0.0</td>\n</tr>\n</tbody>\n</table>\n<p><code>子网掩码</code>是用来判断任意两台计算机的IP地址是否属于同一子网络的根据。<br>\n最为简单的理解就是两台计算机各自的IP地址与子网掩码进行<code>与</code>运算后，得出的结果是相同的，则说明这两台计算机是处于同一个子网络上的，可以进行直接的通讯。<br>\n比如：<br>\n网段：10.8.1.0/24<br>\n网络地址：10.8.1.0<br>\n子网掩码：255.255.255.0<br>\n主机地址：10.8.1.1~10.8.1.254<br>\n广播地址：10.8.1.255<br>\n主机地址+网络地址+广播地址：256</p>\n<p>计算规则：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>10进制</th>\n<th>二进制</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>主机地址</td>\n<td>10.8.1.1</td>\n<td><code>00001010.00001000.00000001.00000001</code></td>\n<td>10.8.1.1~10.8.1.254，这些ip和子网掩码<code>与</code>后的结果都相同</td>\n</tr>\n<tr>\n<td>子网掩码</td>\n<td>255.255.255.0</td>\n<td><code>11111111.11111111.11111111.00000000</code></td>\n<td>/24，即24个1</td>\n</tr>\n<tr>\n<td>网络地址</td>\n<td>10.8.1.0</td>\n<td><code>00001010.00001000.00000001.00000000</code></td>\n<td>主机地址和子网掩码<code>与</code>运算后的结果就得到了网络地址，同一个物理网络上的所有主机都使用同一个网络地址</td>\n</tr>\n<tr>\n<td>广播地址</td>\n<td>10.8.1.255</td>\n<td><code>00001010.00001000.00000001.11111111</code></td>\n<td>网络地址最后的0全部变为1就得到了广播地址</td>\n</tr>\n</tbody>\n</table>\n<p>以172.16.0.0/12为例，其子网掩码是255.240.0.0，<br>\n则172.16.0.0是网络地址，172.31.255.255是广播地址，网络地址相同的ip可以互相通信</p>\n<p>IP地址分为五类，A类保留给政府机构，B类分配给中等规模的公司，C类分配给任何需要的人，D类用于组播，E类用于实验，各类可容纳的地址数目不同。<br>\n其中A类、B类、和C类这三类地址用于TCP/IP节点，其它两类D类和E类被用于特殊用途。</p>\n<p><code>A、B、C三类IP地址的特征</code>：当将IP地址写成二进制形式时，A类地址的第一位总是O，B类地址的前两位总是10，C类地址的前三位总是110。</p>\n<table>\n<thead>\n<tr>\n<th>地址类型</th>\n<th>二进制</th>\n<th>十进制</th>\n<th>地址范围</th>\n<th>私有地址</th>\n<th>保留地址</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A类</td>\n<td>0000000.00000000.00000000.00000000</td>\n<td>0.0.0.0</td>\n<td>1.0.0.1~126.155.255.254</td>\n<td>10.X.X.X</td>\n<td>127.X.X.X</td>\n<td>第1字节为网络地址，其它3个字节为主机地址，第1个字节的第一位固定为0，注意数字0和127不作为A类地址</td>\n</tr>\n<tr>\n<td>B类</td>\n<td>10000000.00000000.00000000.00000000</td>\n<td>128.0.0.0</td>\n<td>128.0.0.1~191.255.255.254</td>\n<td>172.16.0.0~172.31.255.255</td>\n<td>169.254.X.X</td>\n<td>第1字节和第2字节为网络地址，其它2个字节为主机地址，第1个字节的前两位固定为10</td>\n</tr>\n<tr>\n<td>C类</td>\n<td>11000000.00000000.00000000.00000000</td>\n<td>192.0.0.0</td>\n<td>192.0.0.1~223.255.255.254</td>\n<td>192.168.X.X</td>\n<td></td>\n<td>第1字节、第2字节和第3个字节为网络地址，第4个个字节为主机地址，第1个字节的前三位固定为110</td>\n</tr>\n<tr>\n<td>D类</td>\n<td>11100000.00000000.00000000.00000000</td>\n<td>224.0.0.0</td>\n<td>224.0.0.1~239.255.255.254</td>\n<td></td>\n<td></td>\n<td>不分网络地址和主机地址，第1个字节的前四位固定为1110，这一类地址被用在多点广播（Multicast）中</td>\n</tr>\n<tr>\n<td>E类</td>\n<td>11110000.00000000.00000000.00000000</td>\n<td>240.0.0.0</td>\n<td>240.0.0.1~255.255.255.254</td>\n<td></td>\n<td></td>\n<td>第1个字节的前五位固定为11110，为将来使用保留</td>\n</tr>\n</tbody>\n</table>\n<p><code>私有网络地址</code>（以下简称私网地址）是指内部网络或者主机的IP地址，IANA（互联网数字分配机构）规定将下列的IP地址保留用作私网地址，不在Internet上被分配，可在一个单位或公司内部使用。RFC918中规定私有地址如下:</p>\n<table>\n<thead>\n<tr>\n<th>私有地址类别</th>\n<th>地址范围</th>\n<th>网段</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A类私有地址</td>\n<td>10.0.0.0 ~ 10.255.255.255</td>\n<td>10.0.0.0/8</td>\n</tr>\n<tr>\n<td>B类私有地址</td>\n<td>172.16.0.0 ~ 172.31.255.255</td>\n<td>172.16.0.0/12</td>\n</tr>\n<tr>\n<td>C类私有地址</td>\n<td>192.168.0.0 ~ 192.168.255.255</td>\n<td>192.168.0.0/16</td>\n</tr>\n</tbody>\n</table>\n","content_text":"摘要 本文介绍子网掩码的作用 本文基于CentOS8(x86_64) 子网掩码 我们经常看到10.8.1.0/24这种ip表示方式，其表示为从10.8.1.0这个IP开始，24代表子网掩码为255.255.255.0，共包含256个地址，即从0-255共256个IP，即10.8.1.0~10.8.1.255。 这里/24代表子网掩码，即前面由多少个1组成，举例如下： A类IP地址的默认子网掩码为255.0.0.0，由于255相当于二进制的8位1，所以也缩写成“/8”，表示网络号占了8位，/12表示网络号占了12位，即有12个1，以此类推。 具体的设置规则可参考下表: IP总数 子网掩码 /24 256 255.255.255.0 /20 4096 255.255.240.0 /16 65536 255.255.0.0 /12 1048576 255.240.0.0 /8 16777216 255.0.0.0 子网掩码是用来判断任意两台计算机的IP地址是否属于同一子网络的根据。 最为简单的理解就是两台计算机各自的IP地址与子网掩码进行与运算后，得出的结果是相同的，则说明这两台计算机是处于同一个子网络上的，可以进行直接的通讯。 比如： 网段：10.8.1.0/24 网络地址：10.8.1.0 子网掩码：255.255.255.0 主机地址：10.8.1.1~10.8.1.254 广播地址：10.8.1.255 主机地址+网络地址+广播地址：256 计算规则： 10进制 二进制 说明 主机地址 10.8.1.1 00001010.00001000.00000001.00000001 10.8.1.1~10.8.1.254，这些ip和子网掩码与后的结果都相同 子网掩码 255.255.255.0 11111111.11111111.11111111.00000000 /24，即24个1 网络地址 10.8.1.0 00001010.00001000.00000001.00000000 主机地址和子网掩码与运算后的结果就得到了网络地址，同一个物理网络上的所有主机都使用同一个网络地址 广播地址 10.8.1.255 00001010.00001000.00000001.11111111 网络地址最后的0全部变为1就得到了广播地址 以172.16.0.0/12为例，其子网掩码是255.240.0.0， 则172.16.0.0是网络地址，172.31.255.255是广播地址，网络地址相同的ip可以互相通信 IP地址分为五类，A类保留给政府机构，B类分配给中等规模的公司，C类分配给任何需要的人，D类用于组播，E类用于实验，各类可容纳的地址数目不同。 其中A类、B类、和C类这三类地址用于TCP/IP节点，其它两类D类和E类被用于特殊用途。 A、B、C三类IP地址的特征：当将IP地址写成二进制形式时，A类地址的第一位总是O，B类地址的前两位总是10，C类地址的前三位总是110。 地址类型 二进制 十进制 地址范围 私有地址 保留地址 说明 A类 0000000.00000000.00000000.00000000 0.0.0.0 1.0.0.1~126.155.255.254 10.X.X.X 127.X.X.X 第1字节为网络地址，其它3个字节为主机地址，第1个字节的第一位固定为0，注意数字0和127不作为A类地址 B类 10000000.00000000.00000000.00000000 128.0.0.0 128.0.0.1~191.255.255.254 172.16.0.0~172.31.255.255 169.254.X.X 第1字节和第2字节为网络地址，其它2个字节为主机地址，第1个字节的前两位固定为10 C类 11000000.00000000.00000000.00000000 192.0.0.0 192.0.0.1~223.255.255.254 192.168.X.X 第1字节、第2字节和第3个字节为网络地址，第4个个字节为主机地址，第1个字节的前三位固定为110 D类 11100000.00000000.00000000.00000000 224.0.0.0 224.0.0.1~239.255.255.254 不分网络地址和主机地址，第1个字节的前四位固定为1110，这一类地址被用在多点广播（Multicast）中 E类 11110000.00000000.00000000.00000000 240.0.0.0 240.0.0.1~255.255.255.254 第1个字节的前五位固定为11110，为将来使用保留 私有网络地址（以下简称私网地址）是指内部网络或者主机的IP地址，IANA（互联网数字分配机构）规定将下列的IP地址保留用作私网地址，不在Internet上被分配，可在一个单位或公司内部使用。RFC918中规定私有地址如下: 私有地址类别 地址范围 网段 A类私有地址 10.0.0.0 ~ 10.255.255.255 10.0.0.0/8 B类私有地址 172.16.0.0 ~ 172.31.255.255 172.16.0.0/12 C类私有地址 192.168.0.0 ~ 192.168.255.255 192.168.0.0/16","summary":"摘要 本文介绍子网掩码的作用 本文基于CentOS8(x86_64)","date_published":"2023-02-28T13:36:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-firewall/","url":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-firewall/","title":"Linux常用命令--防火墙firewalld","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>firewalld的基本使用介绍</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"防火墙firewalld\">防火墙firewalld</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭防火墙</span></span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\"><span class=\"comment\"># 开启防火墙</span></span><br><span class=\"line\">systemctl start firewalld.service</span><br><span class=\"line\"><span class=\"comment\"># 关闭开机自启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld.service</span><br><span class=\"line\"><span class=\"comment\"># 开启开机启动</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看firewalld状态</span></span><br><span class=\"line\">sudo firewall-cmd --state</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看默认区域</span></span><br><span class=\"line\">sudo firewall-cmd --get-default-zone</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看启用的规则和服务</span></span><br><span class=\"line\">sudo firewall-cmd --list-all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 只查看启用的服务</span></span><br><span class=\"line\">sudo firewall-cmd --list-services</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 临时添加新的服务,firewalld重载或重启后失效</span></span><br><span class=\"line\"><span class=\"comment\"># firewalld会从/etc/firewalld/services/目录中加载服务配置文件，如果这个目录中没有服务配置文件，则到/usr/lib/firewalld/services/目录中加载 https.xml</span></span><br><span class=\"line\">sudo firewall-cmd --add-service=https</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 永久添加新的服务</span></span><br><span class=\"line\">sudo firewall-cmd --permanent --add-service=https</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 永久移除服务</span></span><br><span class=\"line\">sudo firewall-cmd --remove-service=vnc-server --permanent</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看开放的端口和协议</span></span><br><span class=\"line\">sudo firewall-cmd --list-ports</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 开放端口</span></span><br><span class=\"line\">sudo firewall-cmd --add-port=80/tcp --permanent</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关闭端口</span></span><br><span class=\"line\">sudo firewall-cmd --remove-port=80/tcp --permanent</span><br><span class=\"line\">sudo firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 允许ip或ip段访问某个端口</span></span><br><span class=\"line\">sudo firewall-cmd --permanent --add-rich-rule <span class=\"string\">&#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.8&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&#x27;</span></span><br><span class=\"line\">sudo firewall-cmd --permanent --add-rich-rule <span class=\"string\">&#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.0/24&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&#x27;</span></span><br><span class=\"line\">sudo firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 拒绝ip或ip段访问某个端口</span></span><br><span class=\"line\">sudo firewall-cmd --permanent --add-rich-rule <span class=\"string\">&#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.8&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; reject&#x27;</span></span><br><span class=\"line\">sudo firewall-cmd --permanent --add-rich-rule <span class=\"string\">&#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.0/24&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; reject&#x27;</span></span><br><span class=\"line\">sudo firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看设置的规则</span></span><br><span class=\"line\">sudo firewall-cmd --list-rich-rules</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>参考地址：<br>\n<a href=\"https://www.51cto.com/article/707726.html\">https://www.51cto.com/article/707726.html</a><br>\n<a href=\"https://blog.csdn.net/qq_57268251/article/details/124787256\">https://blog.csdn.net/qq_57268251/article/details/124787256</a><br>\n<a href=\"https://blog.csdn.net/eagle89/article/details/127277636\">https://blog.csdn.net/eagle89/article/details/127277636</a></p>\n</li>\n<li class=\"lvl-2\">\n<p>云服务器都是基于<code>安全组</code>的规则进行配置，其<code>firewalld</code>、<code>iptables</code>和<code>SELinux</code>都是关闭的</p>\n</li>\n</ul>\n","content_text":"摘要 firewalld的基本使用介绍 本文基于CentOS8(x86_64) 防火墙firewalld 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657# 关闭防火墙systemctl stop firewalld.service# 开启防火墙systemctl start firewalld.service# 关闭开机自启动systemctl disable firewalld.service# 开启开机启动systemctl enable firewalld.service# 查看firewalld状态sudo firewall-cmd --state# 查看默认区域sudo firewall-cmd --get-default-zone# 查看启用的规则和服务sudo firewall-cmd --list-all# 只查看启用的服务sudo firewall-cmd --list-services# 临时添加新的服务,firewalld重载或重启后失效# firewalld会从/etc/firewalld/services/目录中加载服务配置文件，如果这个目录中没有服务配置文件，则到/usr/lib/firewalld/services/目录中加载 https.xmlsudo firewall-cmd --add-service=https# 永久添加新的服务sudo firewall-cmd --permanent --add-service=httpssudo firewall-cmd --reload# 永久移除服务sudo firewall-cmd --remove-service=vnc-server --permanentsudo firewall-cmd --reload# 查看开放的端口和协议sudo firewall-cmd --list-ports# 开放端口sudo firewall-cmd --add-port=80/tcp --permanentsudo firewall-cmd --reload# 关闭端口sudo firewall-cmd --remove-port=80/tcp --permanentsudo firewall-cmd --reload# 允许ip或ip段访问某个端口sudo firewall-cmd --permanent --add-rich-rule &#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.8&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&#x27;sudo firewall-cmd --permanent --add-rich-rule &#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.0/24&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&#x27;sudo firewall-cmd --reload# 拒绝ip或ip段访问某个端口sudo firewall-cmd --permanent --add-rich-rule &#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.8&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; reject&#x27;sudo firewall-cmd --permanent --add-rich-rule &#x27;rule family=&quot;ipv4&quot; source address=&quot;10.8.1.0/24&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; reject&#x27;sudo firewall-cmd --reload# 查看设置的规则sudo firewall-cmd --list-rich-rules 参考地址： https://www.51cto.com/article/707726.html https://blog.csdn.net/qq_57268251/article/details/124787256 https://blog.csdn.net/eagle89/article/details/127277636 云服务器都是基于安全组的规则进行配置，其firewalld、iptables和SELinux都是关闭的","summary":"摘要 firewalld的基本使用介绍 本文基于CentOS8(x86_64)","date_published":"2023-02-28T13:35:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-net/","url":"https://blog.hanqunfeng.com/2023/02/28/linux-command02-net/","title":"Linux常用命令--网络相关命令","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>网络相关命令，如ping、ifconfig、netstat以及查看DNS、检查域名和证书的到期时间等等</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"1-测试网络和服务的连通性\">1.测试网络和服务的连通性</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 测试网络连通性</span></span><br><span class=\"line\">ping 192.168.36.49 -c 3 : -c 测试次数</span><br><span class=\"line\">ping 192.168.36.49 -c 3 -s 1000 : -s 发送icmp包的大小bytes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ping 域名，可以查看到负载均衡器名及其分发到的ip</span></span><br><span class=\"line\"><span class=\"comment\"># 可以看到多次ping baidu的域名，得到了不同的ip地址</span></span><br><span class=\"line\">ping www.baidu.com</span><br><span class=\"line\">PING www.a.shifen.com (110.242.68.4) 56(84) bytes of data.</span><br><span class=\"line\">64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=1 ttl=50 time=19.7 ms</span><br><span class=\"line\">64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=2 ttl=50 time=19.8 ms</span><br><span class=\"line\">64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=3 ttl=50 time=19.8 ms</span><br><span class=\"line\"></span><br><span class=\"line\">ping www.baidu.com</span><br><span class=\"line\">PING www.a.shifen.com (110.242.68.3) 56(84) bytes of data.</span><br><span class=\"line\">64 bytes from 110.242.68.3 (110.242.68.3): icmp_seq=1 ttl=49 time=19.6 ms</span><br><span class=\"line\">64 bytes from 110.242.68.3 (110.242.68.3): icmp_seq=2 ttl=49 time=19.6 ms</span><br><span class=\"line\">64 bytes from 110.242.68.3 (110.242.68.3): icmp_seq=3 ttl=49 time=19.6 ms</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试服务连通性</span></span><br><span class=\"line\">telnet 192.168.36.49 3306</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>禁止ping</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">临时禁止，服务器重启后失效</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">永久禁止</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/sysctl.conf</span><br><span class=\"line\">在文件最后增加如下内容后保存退出</span><br><span class=\"line\">net.ipv4.icmp_echo_ignore_all = 1</span><br><span class=\"line\"></span><br><span class=\"line\">使修改生效</span><br><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n</div>\n<h2 id=\"2-查看网络设置信息\">2.查看网络设置信息</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ifconfig -a : 查看所有网卡信息</span><br><span class=\"line\">ifconfig eth0 : 查看指定网卡信息</span><br><span class=\"line\"></span><br><span class=\"line\">ip a : 查看所有网卡信息</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 临时设置IP，重启机器或者重启network马上失效</span></span><br><span class=\"line\">ifconfig eth0 192.168.12.51</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启用网卡</span></span><br><span class=\"line\">ifconfig eth0 up  或者  ifup eth0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 禁用网卡</span></span><br><span class=\"line\">ifconfig eth0 down  或者  ifdown eth0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启network</span></span><br><span class=\"line\">systemctl restart network</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-查看进程端口\">3.查看进程端口</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tunpl : 查看端口是否启动，或者查看占用端口的进程</span><br><span class=\"line\"></span><br><span class=\"line\">-n 不显示别名，能显示数字的全部转化为数字</span><br><span class=\"line\">-t 显示TCP协议的链接情况</span><br><span class=\"line\">-l 仅理出有在Listen的服务状态</span><br><span class=\"line\">-u 显示UDP协议的链接情况</span><br><span class=\"line\">-p 显示建立相关链接的程序名</span><br><span class=\"line\"></span><br><span class=\"line\">Active Internet connections (only servers)</span><br><span class=\"line\">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class=\"line\">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1158/sshd</span><br><span class=\"line\">tcp6       0      0 :::3306                 :::*                    LISTEN      777/mysqld</span><br><span class=\"line\">udp        0      0 172.19.230.128:68       0.0.0.0:*                           598/systemd-network</span><br><span class=\"line\">udp        0      0 127.0.0.1:323           0.0.0.0:*                           569/chronyd</span><br><span class=\"line\">udp6       0      0 :::546                  :::*                                598/systemd-network</span><br><span class=\"line\">udp6       0      0 ::1:323                 :::*                                569/chronyd</span><br><span class=\"line\"></span><br><span class=\"line\">例子：</span><br><span class=\"line\">netstat -tunpl | grep sshd</span><br><span class=\"line\">netstat -tunpl | grep 3306</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-查看DNS\">4.查看DNS</h2>\n<h3 id=\"8-1-查看DNS\">8.1 查看DNS</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方法1</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法2</span></span><br><span class=\"line\">nslookup localhost</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方法3</span></span><br><span class=\"line\">dig</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-2-设置DNS\">8.2 设置DNS</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/resolv.conf</span><br><span class=\"line\"><span class=\"comment\"># 可以设置多个DNS，优先级从上到下</span></span><br><span class=\"line\">nameserver xxx.xxx.xxx.xxx</span><br><span class=\"line\">nameserver xxx.xxx.xxx.xxx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启网络</span></span><br><span class=\"line\">systemctl restart network</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-检查域名到期时间\">5.检查域名到期时间</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whois baidu.com | grep -E <span class=\"string\">&#x27;(Expiry Date|Expiration Time)&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"6-检查域名绑定的证书到期时间\">6.检查域名绑定的证书到期时间</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> | openssl s_client  -connect  www.baidu.com:443 2&gt;/dev/null | openssl x509 -noout -dates | awk -F<span class=\"string\">&#x27;=&#x27;</span> <span class=\"string\">&#x27;NR==2&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"7-设置HOSTNAME\">7.设置HOSTNAME</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看HOSTNAME</span></span><br><span class=\"line\">hostname 或者 hostnamectl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 临时设置，重启后失效</span></span><br><span class=\"line\">hostname newName</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 永久立即生效，不需要重启</span></span><br><span class=\"line\">hostnamectl set-hostname newName</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-路由\">8.路由</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看路由列表</span></span><br><span class=\"line\">route -n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加路由规则，这里表示当前服务器要访问172.20.0.0/24这个网段的ip要去路由器192.168.10.20上查找</span></span><br><span class=\"line\">route add -net 172.20.0.0/24 gw 192.168.10.20 dev eth0</span><br></pre></td></tr></table></figure>","content_text":"摘要 网络相关命令，如ping、ifconfig、netstat以及查看DNS、检查域名和证书的到期时间等等 本文基于CentOS8(x86_64) 1.测试网络和服务的连通性 1234567891011121314151617181920# 测试网络连通性ping 192.168.36.49 -c 3 : -c 测试次数ping 192.168.36.49 -c 3 -s 1000 : -s 发送icmp包的大小bytes# ping 域名，可以查看到负载均衡器名及其分发到的ip# 可以看到多次ping baidu的域名，得到了不同的ip地址ping www.baidu.comPING www.a.shifen.com (110.242.68.4) 56(84) bytes of data.64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=1 ttl=50 time=19.7 ms64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=2 ttl=50 time=19.8 ms64 bytes from 110.242.68.4 (110.242.68.4): icmp_seq=3 ttl=50 time=19.8 msping www.baidu.comPING www.a.shifen.com (110.242.68.3) 56(84) bytes of data.64 bytes from 110.242.68.3 (110.242.68.3): icmp_seq=1 ttl=49 time=19.6 ms64 bytes from 110.242.68.3 (110.242.68.3): icmp_seq=2 ttl=49 time=19.6 ms64 bytes from 110.242.68.3 (110.242.68.3): icmp_seq=3 ttl=49 time=19.6 ms# 测试服务连通性telnet 192.168.36.49 3306 禁止ping 临时禁止，服务器重启后失效 1echo &quot;1&quot; &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all 永久禁止 123456vim /etc/sysctl.conf在文件最后增加如下内容后保存退出net.ipv4.icmp_echo_ignore_all = 1使修改生效sysctl -p 2.查看网络设置信息 12345678910111213141516ifconfig -a : 查看所有网卡信息ifconfig eth0 : 查看指定网卡信息ip a : 查看所有网卡信息# 临时设置IP，重启机器或者重启network马上失效ifconfig eth0 192.168.12.51# 启用网卡ifconfig eth0 up 或者 ifup eth0# 禁用网卡ifconfig eth0 down 或者 ifdown eth0# 重启networksystemctl restart network 3.查看进程端口 1234567891011121314151617181920netstat -tunpl : 查看端口是否启动，或者查看占用端口的进程-n 不显示别名，能显示数字的全部转化为数字-t 显示TCP协议的链接情况-l 仅理出有在Listen的服务状态-u 显示UDP协议的链接情况-p 显示建立相关链接的程序名Active Internet connections (only servers)Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program nametcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 1158/sshdtcp6 0 0 :::3306 :::* LISTEN 777/mysqldudp 0 0 172.19.230.128:68 0.0.0.0:* 598/systemd-networkudp 0 0 127.0.0.1:323 0.0.0.0:* 569/chronydudp6 0 0 :::546 :::* 598/systemd-networkudp6 0 0 ::1:323 :::* 569/chronyd例子：netstat -tunpl | grep sshdnetstat -tunpl | grep 3306 4.查看DNS 8.1 查看DNS 12345678# 方法1cat /etc/resolv.conf# 方法2nslookup localhost# 方法3dig 8.2 设置DNS 1234567vim /etc/resolv.conf# 可以设置多个DNS，优先级从上到下nameserver xxx.xxx.xxx.xxxnameserver xxx.xxx.xxx.xxx# 重启网络systemctl restart network 5.检查域名到期时间 1whois baidu.com | grep -E &#x27;(Expiry Date|Expiration Time)&#x27; 6.检查域名绑定的证书到期时间 1echo | openssl s_client -connect www.baidu.com:443 2&gt;/dev/null | openssl x509 -noout -dates | awk -F&#x27;=&#x27; &#x27;NR==2&#123;print $2&#125;&#x27; 7.设置HOSTNAME 12345678# 查看HOSTNAMEhostname 或者 hostnamectl# 临时设置，重启后失效hostname newName# 永久立即生效，不需要重启hostnamectl set-hostname newName 8.路由 12345# 查看路由列表route -n# 添加路由规则，这里表示当前服务器要访问172.20.0.0/24这个网段的ip要去路由器192.168.10.20上查找route add -net 172.20.0.0/24 gw 192.168.10.20 dev eth0","summary":"摘要 网络相关命令，如ping、ifconfig、netstat以及查看DNS、检查域名和证书的到期时间等等 本文基于CentOS8(x86_64)","date_published":"2023-02-28T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/02/24/linux-command01-auth/","url":"https://blog.hanqunfeng.com/2023/02/24/linux-command01-auth/","title":"Linux常用命令--文件与目录的权限管理","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>文件与目录的授权(ACL)等相关命令</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"文件与目录的权限管理\">文件与目录的权限管理</h2>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n<strong>文件系统构成</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin 、/bin：存放所有用户都可以执行的命令</span><br><span class=\"line\">/usr/sbin 、/sbin：存放只有root用户可以执行的命令</span><br><span class=\"line\">/home：用户缺省宿主目录</span><br><span class=\"line\">/proc：虚拟文件目录，存放当前进程信息</span><br><span class=\"line\">/dev：设备文件</span><br><span class=\"line\">/lib：系统运行所需的共享库</span><br><span class=\"line\">/lost+found：存放系统出错的检查结果</span><br><span class=\"line\">/tmp：临时文件</span><br><span class=\"line\">/etc：系统配置文件</span><br><span class=\"line\">/var：经常变动的文件，如邮件，日志，计划任务</span><br><span class=\"line\">/usr：库，手册，第三方程序一般安装在/usr/local下</span><br><span class=\"line\">/boot：内核文件</span><br><span class=\"line\">/mnt：临时挂载点</span><br></pre></td></tr></table></figure>\n<p><strong>文件类型和文件权限</strong><br>\n当我们通过<code>ls -l</code>查看文件列表信息时，会看到文件类型和权限、文件所属用户和用户组、最后修改时间等等:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drwxr-xr-x 6 root root    4096 7月  23 2021 apache-maven-3.8.1</span><br><span class=\"line\">-rw-r--r-- 1 root root 9536838 3月  31 2021 apache-maven-3.8.1-bin.tar.gz</span><br><span class=\"line\">lrwxrwxrwx 1 root root      18 7月  23 2021 maven -&gt; apache-maven-3.8.1</span><br></pre></td></tr></table></figure>\n<p>第一列展示的就是文件权限，如<code>drwxr-xr-x</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一个字符表示文件类型:</span><br><span class=\"line\">- 表示普通文件</span><br><span class=\"line\">d 表示目录</span><br><span class=\"line\">l 表示符号链接</span><br><span class=\"line\">c 表示字符设备文件</span><br><span class=\"line\">b 表示块设备文件</span><br><span class=\"line\">s 表示套接字文件</span><br><span class=\"line\">p 表示管道文件</span><br></pre></td></tr></table></figure>\n<p>也可以通过<code>file</code>命令查看文件类型</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ file apache-maven-3.8.1</span><br><span class=\"line\">apache-maven-3.8.1: directory</span><br><span class=\"line\">$ file apache-maven-3.8.1-bin.tar.gz</span><br><span class=\"line\">apache-maven-3.8.1-bin.tar.gz: gzip compressed data, from FAT filesystem (MS-DOS, OS/2, NT)</span><br><span class=\"line\">$ file maven</span><br><span class=\"line\">maven: symbolic <span class=\"built_in\">link</span> to `apache-maven-3.8.1<span class=\"string\">&#x27;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一列的其余 9 个字符表示文件或目录的访问权限，分别对应三个字符一组的 rwx 权限，</span><br><span class=\"line\">每3位分别代表文件所有者权限，文件所属组权限，其它用户和组的权限:</span><br><span class=\"line\">r 表示读取权限</span><br><span class=\"line\">w 表示写入权限</span><br><span class=\"line\">x 表示执行权限</span><br><span class=\"line\">- 表示没有对应权限</span><br></pre></td></tr></table></figure>\n</div>\n<h3 id=\"1-改变文件或目录权限\">1.改变文件或目录权限</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> u+x file/dir</span><br><span class=\"line\"></span><br><span class=\"line\">u:文件所有者</span><br><span class=\"line\">g:文件所属组</span><br><span class=\"line\">o:其它用户和组</span><br><span class=\"line\">a:所有用户所有组</span><br><span class=\"line\"></span><br><span class=\"line\">+:赋予权限 -:去除权限</span><br><span class=\"line\"></span><br><span class=\"line\">r:读权限   文件--可以查看  目录--可以列出目录内容</span><br><span class=\"line\">w:写权限   文件--可以修改  目录--可以在目录中创建、删除文件和目录</span><br><span class=\"line\">x:执行权限 文件--可以执行文件 目录--可以进入目录</span><br><span class=\"line\"></span><br><span class=\"line\">注：对于目录，如有r权限，则必须有x权限。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 751 file : 相当于rwxr-x--x</span><br><span class=\"line\">r-&gt;4</span><br><span class=\"line\">w-&gt;2</span><br><span class=\"line\">x-&gt;1</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-改变文件或目录所有者和所属组\">2.改变文件或目录所有者和所属组</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chown</span> user file :将file的所有者修改为user</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">chgrp</span> group file :将file的所属组修改为group</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">chown</span> -R user.group <span class=\"built_in\">dir</span> :修改<span class=\"built_in\">dir</span>及其子目录的所有者和所属组 </span><br></pre></td></tr></table></figure>\n<h3 id=\"3-为可执行程序赋予SetUID与SetGID权限\">3.为可执行程序赋予SetUID与SetGID权限</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>当一个可执行程序具有SetUID权限，用户执行这个程序时将以这个程序所有者身份执行。</p>\n</li>\n<li class=\"lvl-2\">\n<p>当一个可执行程序具有SetGID权限，用户执行这个程序时将以这个程序所属组身份执行。</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置SetUID</span></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> u+s 程序</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 4755 程序 : 权限从3位数字变成了4位数字，SetUID权限用数字4表示</span><br><span class=\"line\"><span class=\"comment\"># 取消SetUID</span></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> u-s 程序</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 755 程序</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置SetGID</span></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> g+s 程序</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 2755 程序 : 权限从3位数字变成了4位数字，SetGID权限用数字2表示</span><br><span class=\"line\"><span class=\"comment\"># 取消SetGID</span></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> g-s 程序</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> 755 程序</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例</span></span><br><span class=\"line\">ll test.sh : 初始权限</span><br><span class=\"line\">-rwxr-xr-x 1 root root 0 3月   3 15:44 test.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> u+s test.sh : 增加SetUID权限</span><br><span class=\"line\"></span><br><span class=\"line\">ll test.sh</span><br><span class=\"line\">-rwSr-xr-x 1 root root 0 3月   3 15:44 test.sh</span><br><span class=\"line\"></span><br><span class=\"line\">此时可以看到root用户的执行权限从小写的x变成了大写的S，表示任何用户执行test.sh，都会以root用户身份执行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> u-s test.sh : 去掉SetUID权限</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> g+s test.sh : 增加SetGID权限</span><br><span class=\"line\"></span><br><span class=\"line\">ll test.sh</span><br><span class=\"line\">-rwxr-Sr-x 1 root root 0 3月   3 15:44 test.sh</span><br><span class=\"line\"></span><br><span class=\"line\">此时可以看到root用户组的执行权限从小写的x变成了大写的S，表示任何用户执行test.sh，都会以root用户组的身份执行</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在根路径下查找具有SetUID和SetGID程序：</span></span><br><span class=\"line\">find / -perm -4000 -o -perm -2000</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-ACL授权\">4.ACL授权</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ACL授权比chmod更加灵活，也更加精细化，它可以为每个用户或组单独设置一套访问权限</p>\n</li>\n</ul>\n<h4 id=\"添加或修改ACL权限\">添加或修改ACL权限</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>语法格式</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setfacl -m [权限规则] <span class=\"built_in\">dir</span>[file]</span><br><span class=\"line\"></span><br><span class=\"line\">权限规则：</span><br><span class=\"line\">u[设置用户]:username[用户名]:rwx[设置权限]</span><br><span class=\"line\">g[设置组]:groupname[组名]:rwx[设置权限]</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-rw-r--r-- 1 root root 0 3月   9 11:25 file</span><br><span class=\"line\">drwxr-xr-x  2 root root 4096 3月   9 11:36 <span class=\"built_in\">dir</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为hanqf用户设置file文件的访问权限为rw</span></span><br><span class=\"line\">setfacl -m u:hanqf:rw file</span><br><span class=\"line\"><span class=\"comment\"># 为hanqf用户设置dir文件的访问权限为rwx</span></span><br><span class=\"line\">setfacl -m u:hanqf:rwx <span class=\"built_in\">dir</span></span><br><span class=\"line\"></span><br><span class=\"line\">-rw-rw-r--+ 1 root root 0 3月   9 11:25 file</span><br><span class=\"line\">drwxrwxr-x+ 2 root root 4096 3月   9 11:35 <span class=\"built_in\">dir</span></span><br><span class=\"line\">此时可以看到file和<span class=\"built_in\">dir</span>的权限后面多了一个加号标志，同时其组权限也发生了变化，这个我们后面讲</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为hanqf用户组设置file文件的访问权限为rwx</span></span><br><span class=\"line\">setfacl -m g:hanqf:rw file</span><br><span class=\"line\"><span class=\"comment\"># 为hanqf用户组设置dir文件的访问权限为rwx</span></span><br><span class=\"line\">setfacl -m g:hanqf:rwx <span class=\"built_in\">dir</span></span><br><span class=\"line\"></span><br><span class=\"line\">-rw-rwxr--+ 1 root root 0 3月   9 11:25 file</span><br><span class=\"line\">drwxrwxr-x+ 2 root root 4096 3月   9 11:35 <span class=\"built_in\">dir</span></span><br><span class=\"line\">此时同样可以看到file和<span class=\"built_in\">dir</span>的权限后面多了一个加号标志，同时其组权限也发生了变化，这个我们后面讲</span><br><span class=\"line\"></span><br><span class=\"line\">所以，只要看到文件或目录权限后面有个加号，就说明被设置ACL权限</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -R : 递归设置子目录下的权限</span></span><br><span class=\"line\">setfacl -m u:hanqf:r -R <span class=\"built_in\">dir</span> <span class=\"comment\">#同时设置子目录下的权限</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"查看ACL权限\">查看ACL权限</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ getfacl file  <span class=\"comment\">#查看该文件被设置的所有acl权限</span></span><br><span class=\"line\"><span class=\"comment\"># file: dir</span></span><br><span class=\"line\"><span class=\"comment\"># owner: root</span></span><br><span class=\"line\"><span class=\"comment\"># group: root</span></span><br><span class=\"line\">user::rwx</span><br><span class=\"line\">user:hanqf:rw-</span><br><span class=\"line\">group::r-x</span><br><span class=\"line\">group:hanqf:rwx</span><br><span class=\"line\">mask::rwx</span><br><span class=\"line\">other::r-x</span><br><span class=\"line\"></span><br><span class=\"line\">$ getfacl <span class=\"built_in\">dir</span>  <span class=\"comment\">#查看该目录被设置的所有acl权限</span></span><br><span class=\"line\"><span class=\"comment\"># file: dir</span></span><br><span class=\"line\"><span class=\"comment\"># owner: root</span></span><br><span class=\"line\"><span class=\"comment\"># group: root</span></span><br><span class=\"line\">user::rwx</span><br><span class=\"line\">user:hanqf:rwx</span><br><span class=\"line\">group::r-x</span><br><span class=\"line\">group:hanqf:rwx</span><br><span class=\"line\">mask::rwx</span><br><span class=\"line\">other::r-x</span><br><span class=\"line\"></span><br><span class=\"line\">$ getfacl --omit-header file ：去掉头信息</span><br><span class=\"line\">user::rwx</span><br><span class=\"line\">user:hanqf:rw-</span><br><span class=\"line\">group::r-x</span><br><span class=\"line\">group:hanqf:rwx</span><br><span class=\"line\">mask::rwx</span><br><span class=\"line\">other::r-x</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">文件所有者权限:<code>ACL_USER_OBJ</code><br>\nuser::rwx</li>\n<li class=\"lvl-2\">指定某些用户的权限，一行显示一个:<code>ACL_USER</code><br>\nuser:hanqf:rw-</li>\n<li class=\"lvl-2\">文件所属组权限:<code>ACL_GROUP</code><br>\ngroup::r-x</li>\n<li class=\"lvl-2\">指定某些用户组的权限，一行显示一个:<code>ACL_GROUP_OBJ</code><br>\ngroup:hanqf:rwx</li>\n<li class=\"lvl-2\">mask权限，<code>ACL_USER</code>, <code>ACL_GROUP</code>和<code>ACL_GROUP_OBJ</code>中的最大值，即rwx转换为数字后的和<br>\nmask::rwx</li>\n<li class=\"lvl-2\">其它用户和组的权限<br>\nother::r-x</li>\n</ul>\n</div>\n<h4 id=\"mask限制ACL权限最大值\">mask限制ACL权限最大值</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>上面我们在给文件或目录设置ACL权限后，通过<code>ls -l</code>命令查看文件或目录权限时，发现组权限也发生了变化，</p>\n</li>\n<li class=\"lvl-2\">\n<p>实际上这里的组权限显示的是<code>mask</code>，<code>mask</code>用于限制<code>ACL_USER</code>, <code>ACL_GROUP</code>和<code>ACL_GROUP_OBJ</code>中的最大值，即rwx转换为数字后的和</p>\n</li>\n<li class=\"lvl-2\">\n<p>我们也可以设置<code>mask</code>的值</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ setfacl -m mask::r-- file</span><br><span class=\"line\"></span><br><span class=\"line\">$ getfacl --omit-header file</span><br><span class=\"line\">user::rw-</span><br><span class=\"line\">user:hanqf:rw-\t\t\t<span class=\"comment\">#effective:r--</span></span><br><span class=\"line\">group::r--</span><br><span class=\"line\">group:hanqf:rwx\t\t\t<span class=\"comment\">#effective:r--</span></span><br><span class=\"line\">mask::r--</span><br><span class=\"line\">other::r--</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">ls</span> -l file</span><br><span class=\"line\">-rw-r--r--+ 1 root root 0 3月   9 11:25 file</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>此时会看到相应的权限后面多出了<code>#effective:r--</code>，我们设置<code>mask</code>的权限只有读权限，这样即便我们之前设置了hanqf用户的读写权限，此时也失效了，所以实际的权限也是<code>r--</code></p>\n</li>\n<li class=\"lvl-2\">\n<p><code>mask</code>不会限制<code>other</code>的权限</p>\n</li>\n</ul>\n<h4 id=\"Default-ACL-设置\">Default ACL 设置</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>如果希望任何人在dir下创建的文件都对被指定的用户拥有相同的权限，那么我们就应该对dir目录设置 Default ACL</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -d 缺省设置，这样，任何人在该dir目录下创建的文件，都可以被hanqf读写</span></span><br><span class=\"line\">$ setfacl -d -m user:hanqf:rw <span class=\"built_in\">dir</span></span><br><span class=\"line\">$ getfacl --omit-header <span class=\"built_in\">dir</span></span><br><span class=\"line\">user::rwx</span><br><span class=\"line\">group::r-x</span><br><span class=\"line\">other::r-x</span><br><span class=\"line\">default:user::rwx</span><br><span class=\"line\">default:user:hanqf:rw-</span><br><span class=\"line\">default:group::r-x</span><br><span class=\"line\">default:mask::rwx</span><br><span class=\"line\">default:other::r-x</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Default ACL 只针对设置后新创建的文件才有效</p>\n</li>\n<li class=\"lvl-2\">\n<p>取消 Default ACL</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ setfacl -k <span class=\"built_in\">dir</span></span><br><span class=\"line\">$ getfacl <span class=\"built_in\">dir</span></span><br><span class=\"line\">user::rwx</span><br><span class=\"line\">user:hanqf:rw-</span><br><span class=\"line\">group::r-x</span><br><span class=\"line\">mask::rwx</span><br><span class=\"line\">other::r-x</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除ACL权限\">删除ACL权限</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 删除用户的权限</span></span><br><span class=\"line\">setfacl -x u:username file</span><br><span class=\"line\">setfacl -x u:username <span class=\"built_in\">dir</span></span><br><span class=\"line\">setfacl -x u:username -R <span class=\"built_in\">dir</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除组的权限</span></span><br><span class=\"line\">setfacl -x g:groupname file</span><br><span class=\"line\">setfacl -x g:groupname <span class=\"built_in\">dir</span></span><br><span class=\"line\">setfacl -x g:groupname -R <span class=\"built_in\">dir</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除全部acl权限</span></span><br><span class=\"line\">setfacl -b file</span><br><span class=\"line\">setfacl -b <span class=\"built_in\">dir</span></span><br><span class=\"line\">setfacl -b -R <span class=\"built_in\">dir</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ACL权限删除后，对应文件或目录权限上的加号就会去掉</p>\n</li>\n</ul>\n","content_text":"摘要 文件与目录的授权(ACL)等相关命令 本文基于CentOS8(x86_64) 文件与目录的权限管理 小贴士 文件系统构成 12345678910111213/usr/bin 、/bin：存放所有用户都可以执行的命令/usr/sbin 、/sbin：存放只有root用户可以执行的命令/home：用户缺省宿主目录/proc：虚拟文件目录，存放当前进程信息/dev：设备文件/lib：系统运行所需的共享库/lost+found：存放系统出错的检查结果/tmp：临时文件/etc：系统配置文件/var：经常变动的文件，如邮件，日志，计划任务/usr：库，手册，第三方程序一般安装在/usr/local下/boot：内核文件/mnt：临时挂载点 文件类型和文件权限 当我们通过ls -l查看文件列表信息时，会看到文件类型和权限、文件所属用户和用户组、最后修改时间等等: 123drwxr-xr-x 6 root root 4096 7月 23 2021 apache-maven-3.8.1-rw-r--r-- 1 root root 9536838 3月 31 2021 apache-maven-3.8.1-bin.tar.gzlrwxrwxrwx 1 root root 18 7月 23 2021 maven -&gt; apache-maven-3.8.1 第一列展示的就是文件权限，如drwxr-xr-x 12345678第一个字符表示文件类型:- 表示普通文件d 表示目录l 表示符号链接c 表示字符设备文件b 表示块设备文件s 表示套接字文件p 表示管道文件 也可以通过file命令查看文件类型 123456$ file apache-maven-3.8.1apache-maven-3.8.1: directory$ file apache-maven-3.8.1-bin.tar.gzapache-maven-3.8.1-bin.tar.gz: gzip compressed data, from FAT filesystem (MS-DOS, OS/2, NT)$ file mavenmaven: symbolic link to `apache-maven-3.8.1&#x27; 123456第一列的其余 9 个字符表示文件或目录的访问权限，分别对应三个字符一组的 rwx 权限，每3位分别代表文件所有者权限，文件所属组权限，其它用户和组的权限:r 表示读取权限w 表示写入权限x 表示执行权限- 表示没有对应权限 1.改变文件或目录权限 12345678910111213141516171819chmod u+x file/diru:文件所有者g:文件所属组o:其它用户和组a:所有用户所有组+:赋予权限 -:去除权限r:读权限 文件--可以查看 目录--可以列出目录内容w:写权限 文件--可以修改 目录--可以在目录中创建、删除文件和目录x:执行权限 文件--可以执行文件 目录--可以进入目录注：对于目录，如有r权限，则必须有x权限。chmod 751 file : 相当于rwxr-x--xr-&gt;4w-&gt;2x-&gt;1 2.改变文件或目录所有者和所属组 12345chown user file :将file的所有者修改为userchgrp group file :将file的所属组修改为groupchown -R user.group dir :修改dir及其子目录的所有者和所属组 3.为可执行程序赋予SetUID与SetGID权限 当一个可执行程序具有SetUID权限，用户执行这个程序时将以这个程序所有者身份执行。 当一个可执行程序具有SetGID权限，用户执行这个程序时将以这个程序所属组身份执行。 1234567891011121314151617181920212223242526272829303132333435# 设置SetUIDchmod u+s 程序chmod 4755 程序 : 权限从3位数字变成了4位数字，SetUID权限用数字4表示# 取消SetUIDchmod u-s 程序chmod 755 程序# 设置SetGIDchmod g+s 程序chmod 2755 程序 : 权限从3位数字变成了4位数字，SetGID权限用数字2表示# 取消SetGIDchmod g-s 程序chmod 755 程序# 示例ll test.sh : 初始权限-rwxr-xr-x 1 root root 0 3月 3 15:44 test.shchmod u+s test.sh : 增加SetUID权限ll test.sh-rwSr-xr-x 1 root root 0 3月 3 15:44 test.sh此时可以看到root用户的执行权限从小写的x变成了大写的S，表示任何用户执行test.sh，都会以root用户身份执行chmod u-s test.sh : 去掉SetUID权限chmod g+s test.sh : 增加SetGID权限ll test.sh-rwxr-Sr-x 1 root root 0 3月 3 15:44 test.sh此时可以看到root用户组的执行权限从小写的x变成了大写的S，表示任何用户执行test.sh，都会以root用户组的身份执行# 在根路径下查找具有SetUID和SetGID程序：find / -perm -4000 -o -perm -2000 4.ACL授权 ACL授权比chmod更加灵活，也更加精细化，它可以为每个用户或组单独设置一套访问权限 添加或修改ACL权限 语法格式 12345setfacl -m [权限规则] dir[file]权限规则：u[设置用户]:username[用户名]:rwx[设置权限]g[设置组]:groupname[组名]:rwx[设置权限] 示例 12345678910111213141516171819202122232425-rw-r--r-- 1 root root 0 3月 9 11:25 filedrwxr-xr-x 2 root root 4096 3月 9 11:36 dir# 为hanqf用户设置file文件的访问权限为rwsetfacl -m u:hanqf:rw file# 为hanqf用户设置dir文件的访问权限为rwxsetfacl -m u:hanqf:rwx dir-rw-rw-r--+ 1 root root 0 3月 9 11:25 filedrwxrwxr-x+ 2 root root 4096 3月 9 11:35 dir此时可以看到file和dir的权限后面多了一个加号标志，同时其组权限也发生了变化，这个我们后面讲# 为hanqf用户组设置file文件的访问权限为rwxsetfacl -m g:hanqf:rw file# 为hanqf用户组设置dir文件的访问权限为rwxsetfacl -m g:hanqf:rwx dir-rw-rwxr--+ 1 root root 0 3月 9 11:25 filedrwxrwxr-x+ 2 root root 4096 3月 9 11:35 dir此时同样可以看到file和dir的权限后面多了一个加号标志，同时其组权限也发生了变化，这个我们后面讲所以，只要看到文件或目录权限后面有个加号，就说明被设置ACL权限# -R : 递归设置子目录下的权限setfacl -m u:hanqf:r -R dir #同时设置子目录下的权限 查看ACL权限 1234567891011121314151617181920212223242526272829$ getfacl file #查看该文件被设置的所有acl权限# file: dir# owner: root# group: rootuser::rwxuser:hanqf:rw-group::r-xgroup:hanqf:rwxmask::rwxother::r-x$ getfacl dir #查看该目录被设置的所有acl权限# file: dir# owner: root# group: rootuser::rwxuser:hanqf:rwxgroup::r-xgroup:hanqf:rwxmask::rwxother::r-x$ getfacl --omit-header file ：去掉头信息user::rwxuser:hanqf:rw-group::r-xgroup:hanqf:rwxmask::rwxother::r-x 小贴士 文件所有者权限:ACL_USER_OBJ user::rwx 指定某些用户的权限，一行显示一个:ACL_USER user:hanqf:rw- 文件所属组权限:ACL_GROUP group::r-x 指定某些用户组的权限，一行显示一个:ACL_GROUP_OBJ group:hanqf:rwx mask权限，ACL_USER, ACL_GROUP和ACL_GROUP_OBJ中的最大值，即rwx转换为数字后的和 mask::rwx 其它用户和组的权限 other::r-x mask限制ACL权限最大值 上面我们在给文件或目录设置ACL权限后，通过ls -l命令查看文件或目录权限时，发现组权限也发生了变化， 实际上这里的组权限显示的是mask，mask用于限制ACL_USER, ACL_GROUP和ACL_GROUP_OBJ中的最大值，即rwx转换为数字后的和 我们也可以设置mask的值 123456789101112$ setfacl -m mask::r-- file$ getfacl --omit-header fileuser::rw-user:hanqf:rw- #effective:r--group::r--group:hanqf:rwx #effective:r--mask::r--other::r--$ ls -l file-rw-r--r--+ 1 root root 0 3月 9 11:25 file 此时会看到相应的权限后面多出了#effective:r--，我们设置mask的权限只有读权限，这样即便我们之前设置了hanqf用户的读写权限，此时也失效了，所以实际的权限也是r-- mask不会限制other的权限 Default ACL 设置 如果希望任何人在dir下创建的文件都对被指定的用户拥有相同的权限，那么我们就应该对dir目录设置 Default ACL 1234567891011# -d 缺省设置，这样，任何人在该dir目录下创建的文件，都可以被hanqf读写$ setfacl -d -m user:hanqf:rw dir$ getfacl --omit-header diruser::rwxgroup::r-xother::r-xdefault:user::rwxdefault:user:hanqf:rw-default:group::r-xdefault:mask::rwxdefault:other::r-x Default ACL 只针对设置后新创建的文件才有效 取消 Default ACL 1234567$ setfacl -k dir$ getfacl diruser::rwxuser:hanqf:rw-group::r-xmask::rwxother::r-x 删除ACL权限 1234567891011121314# 删除用户的权限setfacl -x u:username filesetfacl -x u:username dirsetfacl -x u:username -R dir# 删除组的权限setfacl -x g:groupname filesetfacl -x g:groupname dirsetfacl -x g:groupname -R dir# 删除全部acl权限setfacl -b filesetfacl -b dirsetfacl -b -R dir ACL权限删除后，对应文件或目录权限上的加号就会去掉","summary":"摘要 文件与目录的授权(ACL)等相关命令 本文基于CentOS8(x86_64)","date_published":"2023-02-24T14:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/02/24/linux-command01-zip/","url":"https://blog.hanqunfeng.com/2023/02/24/linux-command01-zip/","title":"Linux常用命令--文件与目录的压缩","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>文件与目录的压缩与解压缩等相关命令</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"压缩和解压缩命令\">压缩和解压缩命令</h2>\n<h3 id=\"1-格式：-gz-只能压缩文件\">1.格式：.gz 只能压缩文件</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\">gzip file : 压缩 file.gz</span><br><span class=\"line\">gzip *.sh : 每个文件生成独立的.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">gunzip file.gz : 解压缩</span><br><span class=\"line\"></span><br><span class=\"line\">gunzip *.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看压缩文件内容</span></span><br><span class=\"line\">vim file.gz <span class=\"comment\"># 可以直接编辑</span></span><br><span class=\"line\">less file.gz</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-格式：-tar-可以压缩文件和目录\">2.格式：.tar 可以压缩文件和目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\">tar -cvf file.tar file : 压缩</span><br><span class=\"line\">    -c:产生.tar文件</span><br><span class=\"line\">    -v:显示详细信息</span><br><span class=\"line\">    -f:指定压缩后的文件名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">tar -xvf file.tar : 解压缩</span><br><span class=\"line\">    -x:解压.tar文件</span><br><span class=\"line\">    -v:显示详细信息</span><br><span class=\"line\">    -f:指定要解压的文件名</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xvf file.tar -C todir</span><br><span class=\"line\">    -C:解压到指定目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 .tar文件转成 .tar.gz文件</span></span><br><span class=\"line\">gzip file.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不解包，查看包中文件列表</span></span><br><span class=\"line\">tar -tf file.tar : 不解包，查看包中文件列表</span><br><span class=\"line\">vim file.tar</span><br><span class=\"line\">less file.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将文件加入到压缩包中</span></span><br><span class=\"line\">tar -rf file.tar newfile1 newfile2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新压缩包中已经存在的文件或者追加新的文件</span></span><br><span class=\"line\">tar -uf file.tar oldfile1 newfile1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将文件从压缩包中删除</span></span><br><span class=\"line\">tar --delete file -f file.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 合并两个压缩包，将file2.tar中的内容合并到file1.tar中</span></span><br><span class=\"line\">tar -Af file1.tar file2.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较系统文件与压缩包中的同名文件是否有差异</span></span><br><span class=\"line\">tar -<span class=\"built_in\">df</span> update.tar update.txt</span><br><span class=\"line\">update.txt: 修改时间不同</span><br><span class=\"line\">update.txt: 大小不同</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-格式：-tar-gz-可以压缩文件和目录\">3.格式：.tar.gz 可以压缩文件和目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\">tar -zcvf file.tar.gz file/dir</span><br><span class=\"line\">tar -zcvf file_$(<span class=\"built_in\">date</span> +%F).tar.gz file</span><br><span class=\"line\">tar -zcvf file.tar.gz dir1 dir2 dir3 : 压缩多个目录</span><br><span class=\"line\">    -c:产生.tar文件</span><br><span class=\"line\">    -v:显示详细信息</span><br><span class=\"line\">    -f:指定压缩后的文件名</span><br><span class=\"line\">    -z:打包同时压缩为.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">tar -zxvf file.tar.gz </span><br><span class=\"line\">    -x:解压.tar文件</span><br><span class=\"line\">    -v:显示详细信息</span><br><span class=\"line\">    -f:指定要解压的文件名</span><br><span class=\"line\">    -z:解压缩.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf file.tar.gz -C todir</span><br><span class=\"line\">    -C:解压到指定目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 .tar.gz文件转成 .tar文件</span></span><br><span class=\"line\">gunzip file.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不解包，查看包中文件列表</span></span><br><span class=\"line\">tar -ztf file.tar.gz : 不解包，查看包中文件列表</span><br><span class=\"line\">vim file.tar.gz</span><br><span class=\"line\">less file.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将文件加入到压缩包中</span></span><br><span class=\"line\"><span class=\"comment\"># tar.gz文件不支持直接追加文件，需要先解压到tar，再追加，之后再打包为tar.gz，更新\\删除\\合并同理</span></span><br><span class=\"line\">gunzip file.tar.gz</span><br><span class=\"line\">tar -rf file.tar newfile1 newfile2</span><br><span class=\"line\">gzip file.tar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 比较系统文件与压缩包中的同名文件是否有差异</span></span><br><span class=\"line\">tar -<span class=\"built_in\">df</span> update.tar.gz update.txt</span><br><span class=\"line\">update.txt: 修改时间不同</span><br><span class=\"line\">update.txt: 大小不同</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-格式：-zip-可以压缩文件和目录\">4.格式：.zip 可以压缩文件和目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\">zip file.zip file : 压缩文件</span><br><span class=\"line\">zip -r dir.zip <span class=\"built_in\">dir</span> : 压缩目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">unzip file.zip : 解压缩</span><br><span class=\"line\">unzip -o file.zip : 解压后如果文件已经存在，则覆盖</span><br><span class=\"line\">unzip -n file.zip : 解压后如果文件已经存在，则不覆盖</span><br><span class=\"line\">unzip file.zip -d newDir : 解压缩到指定目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不解压查看压缩包内文件目录结构</span></span><br><span class=\"line\">zip -sf file.zip : 不解压查看压缩包内文件目录结构</span><br><span class=\"line\">unzip -l file.zip : 不解压查看压缩包内文件目录结构</span><br><span class=\"line\">zipinfo file.zip : 不解压查看压缩包内文件目录结构</span><br><span class=\"line\">vim file.zip</span><br><span class=\"line\">less file.zip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不解压查看压缩包内文件内容</span></span><br><span class=\"line\">unzip -c file.zip : 不解压查看压缩包内所有文件内容</span><br><span class=\"line\">unzip -c file.zip file : 不解压查看压缩包内的file文件内容</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新增或更新压缩包中的文件</span></span><br><span class=\"line\">zip -u file.zip test.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从压缩包中删除文件</span></span><br><span class=\"line\">zip -d file.zip test.sh</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-格式：-bz2-只能压缩文件\">5.格式：.bz2 只能压缩文件</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 压缩</span></span><br><span class=\"line\">bzip2 -k file : 压缩 file.bz2</span><br><span class=\"line\">    -k:压缩后保留原文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压缩</span></span><br><span class=\"line\">bunzip2 -k file.bz2 : 解压缩</span><br><span class=\"line\">    -k:解压后保留原文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 不解压查看压缩包内文件内容</span></span><br><span class=\"line\">vim file.bz2 <span class=\"comment\"># 可以直接编辑</span></span><br><span class=\"line\">less file.bz2</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-格式：-rar\">6.格式：.rar</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>rar 命令在 linux 中默认是没有的，我们在使用前需要先安装一下:<a href=\"https://www.rarlab.com/download.htm\">https://www.rarlab.com/download.htm</a></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载与安装，这里要求gcc的版本至少为5.2</span></span><br><span class=\"line\">wget --no-check-certificate https://www.rarlab.com/rar/rarlinux-x64-621.tar.gz</span><br><span class=\"line\">tar -zxf rarlinux-x64-621.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> rar/</span><br><span class=\"line\">make</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用示例</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 压缩: rar a 压缩后的文件名称(不带后缀rar) 要压缩的文件</span></span><br><span class=\"line\">rar a sql *.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看压缩文件内的文件列表</span></span><br><span class=\"line\">rar l sql.rar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从压缩文件内删除指定的文件，如这里删除1.sql</span></span><br><span class=\"line\">rar d sql.rar 1.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 追加或更新文件</span></span><br><span class=\"line\">rar u sql.rar 1.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打印压缩文件内容</span></span><br><span class=\"line\">rar p sql.rar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压，并保持原来压缩之前源文件的目录组织结构。</span></span><br><span class=\"line\">rar x sql.rar</span><br><span class=\"line\">unrar x sql.rar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压到当前目录，压缩文件中原包含的目录全没有</span></span><br><span class=\"line\">rar e sql.rar</span><br><span class=\"line\">unrar e sql.rar</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 文件与目录的压缩与解压缩等相关命令 本文基于CentOS8(x86_64) 压缩和解压缩命令 1.格式：.gz 只能压缩文件 123456789101112# 压缩gzip file : 压缩 file.gzgzip *.sh : 每个文件生成独立的.gz# 解压缩gunzip file.gz : 解压缩gunzip *.gz# 查看压缩文件内容vim file.gz # 可以直接编辑less file.gz 2.格式：.tar 可以压缩文件和目录 123456789101112131415161718192021222324252627282930313233343536373839# 压缩tar -cvf file.tar file : 压缩 -c:产生.tar文件 -v:显示详细信息 -f:指定压缩后的文件名# 解压缩tar -xvf file.tar : 解压缩 -x:解压.tar文件 -v:显示详细信息 -f:指定要解压的文件名tar -xvf file.tar -C todir -C:解压到指定目录# 将 .tar文件转成 .tar.gz文件gzip file.tar# 不解包，查看包中文件列表tar -tf file.tar : 不解包，查看包中文件列表vim file.tarless file.tar# 将文件加入到压缩包中tar -rf file.tar newfile1 newfile2# 更新压缩包中已经存在的文件或者追加新的文件tar -uf file.tar oldfile1 newfile1# 将文件从压缩包中删除tar --delete file -f file.tar# 合并两个压缩包，将file2.tar中的内容合并到file1.tar中tar -Af file1.tar file2.tar# 比较系统文件与压缩包中的同名文件是否有差异tar -df update.tar update.txtupdate.txt: 修改时间不同update.txt: 大小不同 3.格式：.tar.gz 可以压缩文件和目录 12345678910111213141516171819202122232425262728293031323334353637# 压缩tar -zcvf file.tar.gz file/dirtar -zcvf file_$(date +%F).tar.gz filetar -zcvf file.tar.gz dir1 dir2 dir3 : 压缩多个目录 -c:产生.tar文件 -v:显示详细信息 -f:指定压缩后的文件名 -z:打包同时压缩为.gz# 解压缩tar -zxvf file.tar.gz -x:解压.tar文件 -v:显示详细信息 -f:指定要解压的文件名 -z:解压缩.gztar -zxvf file.tar.gz -C todir -C:解压到指定目录# 将 .tar.gz文件转成 .tar文件gunzip file.tar.gz# 不解包，查看包中文件列表tar -ztf file.tar.gz : 不解包，查看包中文件列表vim file.tar.gzless file.tar.gz# 将文件加入到压缩包中# tar.gz文件不支持直接追加文件，需要先解压到tar，再追加，之后再打包为tar.gz，更新\\删除\\合并同理gunzip file.tar.gztar -rf file.tar newfile1 newfile2gzip file.tar# 比较系统文件与压缩包中的同名文件是否有差异tar -df update.tar.gz update.txtupdate.txt: 修改时间不同update.txt: 大小不同 4.格式：.zip 可以压缩文件和目录 1234567891011121314151617181920212223242526# 压缩zip file.zip file : 压缩文件zip -r dir.zip dir : 压缩目录# 解压缩unzip file.zip : 解压缩unzip -o file.zip : 解压后如果文件已经存在，则覆盖unzip -n file.zip : 解压后如果文件已经存在，则不覆盖unzip file.zip -d newDir : 解压缩到指定目录# 不解压查看压缩包内文件目录结构zip -sf file.zip : 不解压查看压缩包内文件目录结构unzip -l file.zip : 不解压查看压缩包内文件目录结构zipinfo file.zip : 不解压查看压缩包内文件目录结构vim file.zipless file.zip# 不解压查看压缩包内文件内容unzip -c file.zip : 不解压查看压缩包内所有文件内容unzip -c file.zip file : 不解压查看压缩包内的file文件内容# 新增或更新压缩包中的文件zip -u file.zip test.sh# 从压缩包中删除文件zip -d file.zip test.sh 5.格式：.bz2 只能压缩文件 1234567891011# 压缩bzip2 -k file : 压缩 file.bz2 -k:压缩后保留原文件# 解压缩bunzip2 -k file.bz2 : 解压缩 -k:解压后保留原文件# 不解压查看压缩包内文件内容vim file.bz2 # 可以直接编辑less file.bz2 6.格式：.rar rar 命令在 linux 中默认是没有的，我们在使用前需要先安装一下:https://www.rarlab.com/download.htm 12345# 下载与安装，这里要求gcc的版本至少为5.2wget --no-check-certificate https://www.rarlab.com/rar/rarlinux-x64-621.tar.gztar -zxf rarlinux-x64-621.tar.gzcd rar/make 使用示例 12345678910111213141516171819202122# 压缩: rar a 压缩后的文件名称(不带后缀rar) 要压缩的文件rar a sql *.sql# 查看压缩文件内的文件列表rar l sql.rar# 从压缩文件内删除指定的文件，如这里删除1.sqlrar d sql.rar 1.sql# 追加或更新文件rar u sql.rar 1.sql# 打印压缩文件内容rar p sql.rar# 解压，并保持原来压缩之前源文件的目录组织结构。rar x sql.rarunrar x sql.rar# 解压到当前目录，压缩文件中原包含的目录全没有rar e sql.rarunrar e sql.rar","summary":"摘要 文件与目录的压缩与解压缩等相关命令 本文基于CentOS8(x86_64)","date_published":"2023-02-24T13:45:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/02/24/linux-command01-search/","url":"https://blog.hanqunfeng.com/2023/02/24/linux-command01-search/","title":"Linux常用命令--搜索文件与目录","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>文件与目录的检索等相关命令</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"文件搜索命令\">文件搜索命令</h2>\n<h3 id=\"1-显示系统命令所在目录\">1.显示系统命令所在目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">which</span> <span class=\"built_in\">mkdir</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-查找文件或目录\">2.查找文件或目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find <span class=\"built_in\">dir</span> -name filename : 在目录下查找文件名为filename的文件</span><br><span class=\"line\"></span><br><span class=\"line\">    -name:文件名称，例如：find . -name <span class=\"string\">&quot;*.log&quot;</span> </span><br><span class=\"line\"></span><br><span class=\"line\">    -size:文件大小,以block为单位，1block=512k</span><br><span class=\"line\"></span><br><span class=\"line\">    -size +204800:大于100M</span><br><span class=\"line\"></span><br><span class=\"line\">    -size -204800:小于100M</span><br><span class=\"line\"></span><br><span class=\"line\">    -user:文件所有者</span><br><span class=\"line\"></span><br><span class=\"line\">    -ctime:按文件创建时间来查找文件，-n指n天以内，+n指n天以前</span><br><span class=\"line\"></span><br><span class=\"line\">    -cmin:同上，分钟</span><br><span class=\"line\"></span><br><span class=\"line\">    -mtime:按文件更改时间来查找文件，-n指n天以内，+n指n天以前</span><br><span class=\"line\"></span><br><span class=\"line\">    -mmin:同上，分钟</span><br><span class=\"line\"></span><br><span class=\"line\">    -atime:按文件访问时间来查找文件</span><br><span class=\"line\"></span><br><span class=\"line\">    -amin:同上，分钟</span><br><span class=\"line\"></span><br><span class=\"line\">    -<span class=\"built_in\">type</span> b/d/c/p/l/f: 查是块设备、目录、字符设备、管道、符号链接、普通文件</span><br><span class=\"line\"></span><br><span class=\"line\">    -empty:查找在系统中为空的文件或者文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">    -<span class=\"built_in\">exec</span> commond &#123;&#125; \\; : 将查找到的路径作为commond的参数，并执行,</span><br><span class=\"line\"></span><br><span class=\"line\">        find . -name .svn -<span class=\"built_in\">exec</span> <span class=\"built_in\">rm</span> -rf &#123;&#125; \\; 类似于 : find . -name .svn | xargs <span class=\"built_in\">rm</span> -rf</span><br><span class=\"line\"></span><br><span class=\"line\">        find . -name <span class=\"string\">&quot;*.log&quot;</span> -<span class=\"built_in\">exec</span> <span class=\"built_in\">cp</span> <span class=\"string\">&#x27;&#123;&#125;&#x27;</span> ./dir <span class=\"string\">&#x27;;&#x27;</span> : 将当前目录下的以.<span class=\"built_in\">log</span>结尾的文件拷贝到./dir下，</span><br><span class=\"line\">        类似于find . -name <span class=\"string\">&quot;*.log&quot;</span> | xargs -n1 -i <span class=\"built_in\">cp</span> &#123;&#125; ./dir</span><br><span class=\"line\">        -n[num] : 执行命令时，一次提供几个参数，这里表示，每次传递给<span class=\"built_in\">cp</span>一个参数</span><br><span class=\"line\"></span><br><span class=\"line\">        清理30天前的日志文件：</span><br><span class=\"line\">        find logdir -name <span class=\"string\">&quot;*.log*&quot;</span> -mtime +30 -<span class=\"built_in\">type</span> f | xargs <span class=\"built_in\">rm</span> -f</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        -maxdepth:查找目录最大深度，默认是全部查找</span><br><span class=\"line\"></span><br><span class=\"line\">        例如：find -maxdepth 2 -name <span class=\"string\">&quot;*<span class=\"variable\">$&#123;filename&#125;</span>*&quot;</span> -<span class=\"built_in\">exec</span> <span class=\"built_in\">cp</span> &#123;&#125; <span class=\"variable\">$newfilename</span> \\;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        -a:and</span><br><span class=\"line\"></span><br><span class=\"line\">        -o:or</span><br><span class=\"line\"></span><br><span class=\"line\">        例子：查询大于100M并且所有者为hanqf的文件并将其删除</span><br><span class=\"line\"></span><br><span class=\"line\">        find /etc -size +204800 -a -user hanqf -<span class=\"built_in\">exec</span> <span class=\"built_in\">rm</span> -rf &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">        !:不等于，不包含，例如：find . ! -<span class=\"built_in\">type</span> d，查找所有类型不是目录的文件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-从文件索引库中查找文件或目录\">3.从文件索引库中查找文件或目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">updatedb:更新索引，系统会自动定期执行</span><br><span class=\"line\"></span><br><span class=\"line\">locate key：从索引库中查找名称包含key的文件和目录</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-在文件中搜索匹配关键字的行\">4.在文件中搜索匹配关键字的行</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep key file : 查找含key的行，等同于 <span class=\"built_in\">cat</span> file | grep key</span><br><span class=\"line\">    例子: grep ^<span class=\"comment\"># file : 显示所有行首是#的行</span></span><br><span class=\"line\"></span><br><span class=\"line\">grep -v key file:查找不含key的行</span><br><span class=\"line\">    例子: grep -v ^<span class=\"comment\"># file : 显示所有行首不是#的行</span></span><br><span class=\"line\"></span><br><span class=\"line\">grep key file -A 10:显示关键字行及其后面的10行</span><br><span class=\"line\"></span><br><span class=\"line\">grep key file -B 10:显示关键字行及其前面的10行</span><br><span class=\"line\"></span><br><span class=\"line\">grep  -E <span class=\"string\">&#x27;key1|key2&#x27;</span>  -n -i file : 查找包含任意关键字的行，并显示行号</span><br><span class=\"line\">    -E 支持正则表达式，-n 显示行号，-i 不区分大小写</span><br><span class=\"line\"></span><br><span class=\"line\">grep key -c file : 查找关键字匹配的行数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这个命令非常有用，可以快速定位关键字所在的文件位置</span></span><br><span class=\"line\">grep <span class=\"string\">&#x27;key&#x27;</span> -r <span class=\"built_in\">dir</span> : 在目录下递归查找文件内容包含关键字的文件路径及其所含关键字的内容</span><br><span class=\"line\">    -r 递归查找</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 文件与目录的检索等相关命令 本文基于CentOS8(x86_64) 文件搜索命令 1.显示系统命令所在目录 1which mkdir 2.查找文件或目录 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455find dir -name filename : 在目录下查找文件名为filename的文件 -name:文件名称，例如：find . -name &quot;*.log&quot; -size:文件大小,以block为单位，1block=512k -size +204800:大于100M -size -204800:小于100M -user:文件所有者 -ctime:按文件创建时间来查找文件，-n指n天以内，+n指n天以前 -cmin:同上，分钟 -mtime:按文件更改时间来查找文件，-n指n天以内，+n指n天以前 -mmin:同上，分钟 -atime:按文件访问时间来查找文件 -amin:同上，分钟 -type b/d/c/p/l/f: 查是块设备、目录、字符设备、管道、符号链接、普通文件 -empty:查找在系统中为空的文件或者文件夹 -exec commond &#123;&#125; \\; : 将查找到的路径作为commond的参数，并执行, find . -name .svn -exec rm -rf &#123;&#125; \\; 类似于 : find . -name .svn | xargs rm -rf find . -name &quot;*.log&quot; -exec cp &#x27;&#123;&#125;&#x27; ./dir &#x27;;&#x27; : 将当前目录下的以.log结尾的文件拷贝到./dir下， 类似于find . -name &quot;*.log&quot; | xargs -n1 -i cp &#123;&#125; ./dir -n[num] : 执行命令时，一次提供几个参数，这里表示，每次传递给cp一个参数 清理30天前的日志文件： find logdir -name &quot;*.log*&quot; -mtime +30 -type f | xargs rm -f -maxdepth:查找目录最大深度，默认是全部查找 例如：find -maxdepth 2 -name &quot;*$&#123;filename&#125;*&quot; -exec cp &#123;&#125; $newfilename \\; -a:and -o:or 例子：查询大于100M并且所有者为hanqf的文件并将其删除 find /etc -size +204800 -a -user hanqf -exec rm -rf &#123;&#125; \\; !:不等于，不包含，例如：find . ! -type d，查找所有类型不是目录的文件 3.从文件索引库中查找文件或目录 123updatedb:更新索引，系统会自动定期执行locate key：从索引库中查找名称包含key的文件和目录 4.在文件中搜索匹配关键字的行 123456789101112131415161718grep key file : 查找含key的行，等同于 cat file | grep key 例子: grep ^# file : 显示所有行首是#的行grep -v key file:查找不含key的行 例子: grep -v ^# file : 显示所有行首不是#的行grep key file -A 10:显示关键字行及其后面的10行grep key file -B 10:显示关键字行及其前面的10行grep -E &#x27;key1|key2&#x27; -n -i file : 查找包含任意关键字的行，并显示行号 -E 支持正则表达式，-n 显示行号，-i 不区分大小写grep key -c file : 查找关键字匹配的行数# 这个命令非常有用，可以快速定位关键字所在的文件位置grep &#x27;key&#x27; -r dir : 在目录下递归查找文件内容包含关键字的文件路径及其所含关键字的内容 -r 递归查找","summary":"摘要 文件与目录的检索等相关命令 本文基于CentOS8(x86_64)","date_published":"2023-02-24T13:40:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2023/02/24/linux-command01-file-dir/","url":"https://blog.hanqunfeng.com/2023/02/24/linux-command01-file-dir/","title":"Linux常用命令--文件与目录的基本操作","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>文件与目录的查看、创建、修改、删除等相关命令</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>CentOS8(x86_64)</code></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"文件与目录的基本操作\">文件与目录的基本操作</h2>\n<h3 id=\"1-查看目录下的内容：\">1.查看目录下的内容：</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> .  : 查看当前路径下的文件，当前目录可以不加<span class=\"string\">&#x27;.&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -1 : 注意这里是数字1，列表展示当前目录下的文件及目录的名称</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -1 -c : 以更改时间(ctime)倒序，显示文件和目录，默认按字母排序</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -l : -l以列表的形式显示详细信息，包括文件类型和权限、文件所属用户和用户组、最后修改时间等等</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -al : -a显示所有文件包括隐藏文件以及当前目录(.)和上级目录(..)，如果不希望展示这两个路径可以使用-A</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -lh : 以人类便于理解的方式展示文件大小，K、M等等</span><br><span class=\"line\"><span class=\"built_in\">ls</span> <span class=\"built_in\">dir</span> : 查看指定目录下的文件</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -l <span class=\"built_in\">dir</span> : 查看指定目录下的文件,列表展示</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>ls -l</code>的默认按文件名称排序，排序方式是alphabetically(字典序)，其规则大致为如下：<br>\n1.数字排在字母前面<br>\n2.忽视字母大小写<br>\n3.无视数字和英文字母之外的字符</p>\n</li>\n<li class=\"lvl-2\">\n<p>按<code>文件大小</code>排序列出文件清单</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注意：只能排文件，目录大小默认4k，要连目录一块排序，请使用 du -sh * | sort -h</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -lSh : 从大到小</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -lShr : 从小到大</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>按<code>时间</code>排序列出文件清单</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ls</span> -lt : 按mtime从大到小</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -ltr : 按mtime从小到大</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -ltc : 按ctime从大到小</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -ltcr : 按ctime从小到大</span><br></pre></td></tr></table></figure>\n<div class=\"success\">\n<p><em><strong>小贴士</strong></em></p>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">为了方便，通常会使用别名<code>ll</code>替代<code>ls -l</code></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">which</span> ll</span><br><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">&#x27;ls -l --color=auto&#x27;</span></span><br><span class=\"line\">\t/usr/bin/ls</span><br><span class=\"line\"></span><br><span class=\"line\">$ ll</span><br><span class=\"line\">drwxr-xr-x 6 root root    4096 7月  23 2021 apache-maven-3.8.1</span><br><span class=\"line\">-rw-r--r-- 1 root root 9536838 3月  31 2021 apache-maven-3.8.1-bin.tar.gz</span><br><span class=\"line\">lrwxrwxrwx 1 root root      18 7月  23 2021 maven -&gt; apache-maven-3.8.1</span><br></pre></td></tr></table></figure>\n<p>展示出来的信息可以分为7组,意思如下：<br>\n[1]:权限<br>\n[2]:连结<br>\n[3]:拥有者<br>\n[4]:群组<br>\n[5]:文件容量<br>\n[6]:修改日期<br>\n[7]:文件或目录名称</p>\n</div>\n<h3 id=\"2-查看目录或文件的属性\">2.查看目录或文件的属性</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll -d <span class=\"built_in\">dir</span> :-d只显示目录信息</span><br><span class=\"line\">ll file :查看指定文件信息</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-切换目录\">3.切换目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /  :切换到根目录</span><br><span class=\"line\"><span class=\"built_in\">cd</span> .. :回到上级目录</span><br><span class=\"line\"><span class=\"built_in\">cd</span> -  :返回到上一次访问的目录</span><br><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"built_in\">dir</span>:切换到指定目录</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-查看当前路径\">4.查看当前路径</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">pwd</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5-创建空文件\">5.创建空文件</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">touch</span> filename :只创建不编辑</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-创建目录\">6.创建目录</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> <span class=\"built_in\">dir</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p <span class=\"built_in\">dir</span>/dir/dir :创建多级目录</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-文件和目录复制\">7.文件和目录复制</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> sourcefile todir :复制到指定目录，保持原文件名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cp</span> file1 file2 todir :同时复制多个文件到指定目录下</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cp</span> sourcefile todir/newfile :复制到指定目录，并重命名文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cp</span> -R sourcedir todir :如果todir不存在，则将sourcedir下的内容复制到todir目录下，如果todir已经存在，则将sourcedir复制到todir目录下</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cp</span> sourcedir/* todir :复制目录下的文件到指定目录，不含sourcedir</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cp</span> -n sourcefile todir :如文件已经存在，则不覆盖</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cp</span> -f sourcefile todir :如文件已经存在，则强制覆盖</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-移动文件、重命名\">8.移动文件、重命名</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> file1 file2 :重命名file1为file2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> file todir :将文件移动到指定目录下</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> <span class=\"built_in\">dir</span> todir :如果todir不存在，则将<span class=\"built_in\">dir</span>重命名为todir，如果todir已经存在，则将<span class=\"built_in\">dir</span>移动到todir目录下</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> <span class=\"built_in\">dir</span> todir/ :如果todir不存在，则将<span class=\"built_in\">dir</span>重命名为todir，如果todir已经存在，则将<span class=\"built_in\">dir</span>移动到todir目录下</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> -n file todir :如有重复，则不覆盖</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mv</span> -f file todir :如有重复，则强制覆盖</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># rename命令的功能是用于批量修改文件名称。与mv命令一次只能修改一个文件名不同，rename命令能够基于正则表达式对文件名进行批量修改</span></span><br><span class=\"line\"><span class=\"comment\"># 注意rename命令在centos和ubuntu下语法是不同的</span></span><br><span class=\"line\"><span class=\"comment\"># centos : rename &lt;from&gt; &lt;to&gt; *.txt</span></span><br><span class=\"line\"><span class=\"comment\"># 批量重命名，把/etc/yum.repos.d/*.repo指定的所有文件，文件名称中的‘.repo’替换为‘.repo.bak’</span></span><br><span class=\"line\">rename <span class=\"string\">&#x27;.repo&#x27;</span> <span class=\"string\">&#x27;.repo.bak&#x27;</span> /etc/yum.repos.d/*.repo</span><br><span class=\"line\"></span><br><span class=\"line\">    rename命令的参数有三项：</span><br><span class=\"line\">    其一是当前文件名中要被修改的字符;</span><br><span class=\"line\">    其二是其要被修改为的新字符;</span><br><span class=\"line\">    其三是要被执行的对象文件列表，可以用正则表达式确定范围</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 后缀替换，当前路径下的所有.txt文件替换为.php</span></span><br><span class=\"line\">rename .txt .php *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ubuntu :  rename &#x27;s/from/to/&#x27; *.txt</span></span><br><span class=\"line\">rename <span class=\"string\">&#x27;s/x0*/new/&#x27;</span> *</span><br></pre></td></tr></table></figure>\n<div class=\"success\">\n<p><em><strong>小贴士</strong></em><br>\n进行<code>cp</code>或<code>mv</code>操作时，非重命名操作最好都先通过<code>mkdir</code>创建好目标目录</p>\n</div>\n<h3 id=\"9-文件和目录删除\">9.文件和目录删除</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">rm</span> -f file : 删除文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf <span class=\"built_in\">dir</span> : 删除目录</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-显示文件内容相关\">10.显示文件内容相关</h3>\n<h4 id=\"cat-显示文件所有内容\">cat :显示文件所有内容</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> file</span><br></pre></td></tr></table></figure>\n<h4 id=\"more-分页显示文件内容\">more :分页显示文件内容</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">more file</span><br><span class=\"line\">下一页: 空格</span><br><span class=\"line\">下一行: 回车</span><br><span class=\"line\">退出 : q</span><br><span class=\"line\"></span><br><span class=\"line\">选项\t含义</span><br><span class=\"line\">-f\t计算行数时，以实际的行数，而不是自动换行过后的行数。</span><br><span class=\"line\">-p\t不以卷动的方式显示每一页，而是先清除屏幕后再显示内容。</span><br><span class=\"line\">-c\t跟 -p 选项相似，不同的是先显示内容再清除其他旧资料。</span><br><span class=\"line\">-s\t当遇到有连续两行以上的空白行时，就替换为一行的空白行。</span><br><span class=\"line\">-u\t不显示下引号（根据环境变量 TERM 指定的终端而有所不同）。</span><br><span class=\"line\">+n\t从第 n 行开始显示文件内容，n 代表数字。</span><br><span class=\"line\">-n\t一次显示的行数，n 代表数字。</span><br></pre></td></tr></table></figure>\n<h4 id=\"head-显示文件前几行，默认是10行\">head :显示文件前几行，默认是10行</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">head</span> -20 file : 显示开头的20行</span><br></pre></td></tr></table></figure>\n<h4 id=\"tail-显示文件最后几行，默认是10行\">tail :显示文件最后几行，默认是10行</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">tail</span> -20 file : 显示结尾的20行</span><br><span class=\"line\"><span class=\"built_in\">tail</span> -f file -n 100 : 动态显示文件内容，先显示最后100行内容，用于查看日志</span><br><span class=\"line\"><span class=\"built_in\">tail</span> -f file | grep key : 动态显示文件内容，配合grep使用，只显示关心的内容</span><br></pre></td></tr></table></figure>\n<h4 id=\"less-与more类似，不过less更加高效，推荐使用\">less :与more类似，不过less更加高效，推荐使用</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">less file</span><br><span class=\"line\"></span><br><span class=\"line\">选项\t选项含义</span><br><span class=\"line\">-N\t显示每行的行号。</span><br><span class=\"line\">-S\t行过长时将超出部分舍弃。</span><br><span class=\"line\">-e\t当文件显示结束后，自动离开。</span><br><span class=\"line\">-g\t只标志最后搜索到的关键同。</span><br><span class=\"line\">-Q\t不使用警告音。</span><br><span class=\"line\">-i\t忽略搜索时的大小写。</span><br><span class=\"line\">-m\t显示类似 more 命令的百分比。</span><br><span class=\"line\">-f\t强迫打开特殊文件，比如外围设备代号、目录和二进制文件。</span><br><span class=\"line\">-s\t显示连续空行为一行。</span><br><span class=\"line\">-b &lt;缓冲区大小&gt;\t设置缓冲区的大小。</span><br><span class=\"line\">-o &lt;文件名&gt;\t将 less 输出的内容保存到指定文件中。</span><br><span class=\"line\">-x &lt;数字&gt;\t将【Tab】键显示为规定的数字空格。</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>more 和 less的区别</strong></em><br>\n1、less可以按键盘上下方向键显示上下内容，而more不能通过上下方向键控制显示<br>\n2、less不必读整个文件，加载速度会比more更快<br>\n3、less退出后shell不会留下刚显示的内容，而more退出后会在shell上留下刚显示的内容<br>\n4、阅读到文件结束时，less不会退出，而more会<br>\n5、less可用行号或百分比作为书签浏览文件，而more不行<br>\n6、相比more，less提供更加友好的检索、高亮显示等操作</p>\n</div>\n<h4 id=\"strings-查看二进制文件中可以读取的字符部分\">strings :查看二进制文件中可以读取的字符部分</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">strings /lib64/libc.so.6 | grep GLIBC</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-软链接与硬连接\">11.软链接与硬连接</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">ln</span> -s file/dir file/dir : 软连接</span><br><span class=\"line\"><span class=\"built_in\">ln</span> file file : 硬连接</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>软链接 与 硬链接 的区别</strong></em><br>\n<code>软链接（soft link）</code>：也称为符号链接（Symbolic Link），类似于 Windows 操作系统中的快捷方式文件，该文件有自己的名称、inode 和 物理存储的文件数据（记录着另一文件的路径名指向），访问该文件会被重新定向到软链接所指的源文件名。</p>\n<p><code>硬链接（hard link）</code>：相当于为当前文件名对应的文件再创建一个文件别名，当前文件名与该文件别名对应的 inode 和 物理存储的文件数据 都是一样的，访问该文件别名同访问当前文件名一致。</p>\n<p>1.删除源文件，软链接 会失效(但不会被自动删除)，硬链接 不会失效(文件并没有被真正删除)；<br>\n2.软链接 可以为文件和目录(允许不存在)创建链接，硬链接 只可以为文件创建链接；<br>\n3.软链接 可以跨文件系统，硬链接 必须是同一个文件系统；<br>\n4.软链接 的文件权限 可以和源文件不一样，硬链接 的文件权限 一定和源文件一样；<br>\n5.软链接：作为可执行文件的快捷方式；<br>\n6.硬链接：备份重要文件。</p>\n</div>\n<h3 id=\"12-查看文件或目录的大小\">12.查看文件或目录的大小</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">du</span> -h file : 查看文件大小</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">du</span> -sh <span class=\"built_in\">dir</span> : 查看目录大小</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">du</span> -sh * : 查看当前目录下所有文件和目录的大小</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">du</span> -sh * | <span class=\"built_in\">sort</span> -h   : 正序</span><br><span class=\"line\"><span class=\"built_in\">du</span> -sh * | <span class=\"built_in\">sort</span> -hr  : 倒序</span><br></pre></td></tr></table></figure>\n<h3 id=\"13-查看文件、目录详细时间参数\">13.查看文件、目录详细时间参数</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">stat</span> file/dir : 列出访问时间，最后修改时间，等等</span><br><span class=\"line\"><span class=\"comment\"># 示例：</span></span><br><span class=\"line\"><span class=\"built_in\">stat</span> apache-maven-3.8.1-bin.tar.gz</span><br><span class=\"line\">  文件：<span class=\"string\">&quot;apache-maven-3.8.1-bin.tar.gz&quot;</span></span><br><span class=\"line\">  大小：9536838   \t块：18632      IO 块：4096   普通文件</span><br><span class=\"line\">设备：fd01h/64769d\tInode：1078257     硬链接：1</span><br><span class=\"line\">权限：(0644/-rw-r--r--)  Uid：(    0/    root)   Gid：(    0/    root)</span><br><span class=\"line\">最近访问：2023-03-03 10:06:52.371937028 +0800</span><br><span class=\"line\">最近更改：2021-03-31 01:41:19.000000000 +0800</span><br><span class=\"line\">最近改动：2021-07-23 15:25:42.624723562 +0800</span><br><span class=\"line\">创建时间：-</span><br><span class=\"line\"></span><br><span class=\"line\">1. 最近访问(Access Time) ：简写为atime，表示文件的访问时间。当文件内容被访问时，更新这个时间。</span><br><span class=\"line\">2. 最近更改(Modify Time) ：简写为mtime，表示文件内容的修改时间，当文件的数据内容被修改时，更新这个时间。就是 <span class=\"built_in\">ls</span> -l 里显示的时间。</span><br><span class=\"line\">3. 最近改动(Change Time) ：简写为ctime，表示文件的状态时间，当文件的状态被修改时，更新这个时间，例如文件的链接数，大小，权限，Blocks数。</span><br></pre></td></tr></table></figure>\n<div class=\"tips\">\n<p><em><strong>小贴士</strong></em><br>\n<strong>使用<code>touch</code>命令修改文件的时间戳</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">touch</span> --<span class=\"built_in\">help</span></span><br><span class=\"line\">用法：<span class=\"built_in\">touch</span> [选项]... 文件...</span><br><span class=\"line\">Update the access and modification <span class=\"built_in\">times</span> of each FILE to the current time.</span><br><span class=\"line\"></span><br><span class=\"line\">A FILE argument that does not exist is created empty, unless -c or -h</span><br><span class=\"line\">is supplied.</span><br><span class=\"line\"></span><br><span class=\"line\">A FILE argument string of - is handled specially and causes <span class=\"built_in\">touch</span> to</span><br><span class=\"line\">change the <span class=\"built_in\">times</span> of the file associated with standard output.</span><br><span class=\"line\">Mandatory arguments to long options are mandatory <span class=\"keyword\">for</span> short options too.</span><br><span class=\"line\">  -a\t\t\t    只更改访问时间</span><br><span class=\"line\">  -c, --no-create\t不创建任何文件</span><br><span class=\"line\">  -d, --<span class=\"built_in\">date</span>=字符串\t 使用指定字符串表示时间而非当前时间</span><br><span class=\"line\">  -f\t\t\t    (忽略)</span><br><span class=\"line\">  -h, --no-dereference\t\t会影响符号链接本身，而非符号链接所指示的目的地</span><br><span class=\"line\">\t\t\t\t            (当系统支持更改符号链接的所有者时，此选项才有用)</span><br><span class=\"line\">  -m\t\t\t    只更改修改时间</span><br><span class=\"line\">  -r, --reference=FILE   use this file<span class=\"string\">&#x27;s times instead of current time</span></span><br><span class=\"line\"><span class=\"string\">  -t STAMP               use [[CC]YY]MMDDhhmm[.ss] instead of current time</span></span><br><span class=\"line\"><span class=\"string\">      --time=WORD        change the specified time:</span></span><br><span class=\"line\"><span class=\"string\">                           WORD is access, atime, or use: equivalent to -a</span></span><br><span class=\"line\"><span class=\"string\">                           WORD is modify or mtime: equivalent to -m</span></span><br><span class=\"line\"><span class=\"string\">      --help\t\t显示此帮助信息并退出</span></span><br><span class=\"line\"><span class=\"string\">      --version\t\t显示版本信息并退出</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">请注意，-d 和-t 选项可接受不同的时间/日期格式。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 示例</span></span><br><span class=\"line\"><span class=\"string\"># 修改atime</span></span><br><span class=\"line\"><span class=\"string\">touch -a test : 修改为当前系统时间</span></span><br><span class=\"line\"><span class=\"string\">touch -a -d &quot;2023-03-02 11:37:08&quot; test.sh : 修改为指定的时间</span></span><br><span class=\"line\"><span class=\"string\">touch -a -t &quot;202303021137.08&quot; test.sh</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 修改mtime</span></span><br><span class=\"line\"><span class=\"string\">touch -m test : 修改为当前系统时间</span></span><br><span class=\"line\"><span class=\"string\">touch -m -d &quot;2023-03-02 11:37:08&quot; test.sh : 修改为指定的时间</span></span><br><span class=\"line\"><span class=\"string\">touch -m -t &quot;202303021137.08&quot; test.sh</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 注意，修改atime或mtime时，都会同时修改ctime，因为文件的状态发生了变化</span></span><br></pre></td></tr></table></figure>\n</div>\n<h3 id=\"14-查看文件的MD5或SHA值\">14.查看文件的MD5或SHA值</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">md5sum</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sha256sum</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">sha512sum</span> file</span><br></pre></td></tr></table></figure>\n<h3 id=\"15-查看硬盘分区情况及其挂载点\">15.查看硬盘分区情况及其挂载点</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">df</span> -h : 显示硬盘大小，自动使用最大的单位</span><br><span class=\"line\"><span class=\"built_in\">df</span> -Th : 同时显示分区类型</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">df</span> -hl : 只显示本机的文件系统</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">df</span>    : 分区容量全部使用单位K，等同于 <span class=\"built_in\">df</span> -k</span><br><span class=\"line\"><span class=\"built_in\">df</span> -m : 分区容量全部使用单位M</span><br></pre></td></tr></table></figure>\n<h3 id=\"16-将文件转换为16进制格式\">16.将文件转换为16进制格式</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 转16进制</span></span><br><span class=\"line\">xxd file &gt; 16file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 16进制转回</span></span><br><span class=\"line\">xxd r 16file file</span><br></pre></td></tr></table></figure>\n","content_text":"摘要 文件与目录的查看、创建、修改、删除等相关命令 本文基于CentOS8(x86_64) 文件与目录的基本操作 1.查看目录下的内容： 12345678ls . : 查看当前路径下的文件，当前目录可以不加&#x27;.&#x27;ls -1 : 注意这里是数字1，列表展示当前目录下的文件及目录的名称ls -1 -c : 以更改时间(ctime)倒序，显示文件和目录，默认按字母排序ls -l : -l以列表的形式显示详细信息，包括文件类型和权限、文件所属用户和用户组、最后修改时间等等ls -al : -a显示所有文件包括隐藏文件以及当前目录(.)和上级目录(..)，如果不希望展示这两个路径可以使用-Als -lh : 以人类便于理解的方式展示文件大小，K、M等等ls dir : 查看指定目录下的文件ls -l dir : 查看指定目录下的文件,列表展示 ls -l的默认按文件名称排序，排序方式是alphabetically(字典序)，其规则大致为如下： 1.数字排在字母前面 2.忽视字母大小写 3.无视数字和英文字母之外的字符 按文件大小排序列出文件清单 123# 注意：只能排文件，目录大小默认4k，要连目录一块排序，请使用 du -sh * | sort -hls -lSh : 从大到小ls -lShr : 从小到大 按时间排序列出文件清单 12345ls -lt : 按mtime从大到小ls -ltr : 按mtime从小到大ls -ltc : 按ctime从大到小ls -ltcr : 按ctime从小到大 小贴士 为了方便，通常会使用别名ll替代ls -l 12345678$ which llalias ll=&#x27;ls -l --color=auto&#x27; /usr/bin/ls$ lldrwxr-xr-x 6 root root 4096 7月 23 2021 apache-maven-3.8.1-rw-r--r-- 1 root root 9536838 3月 31 2021 apache-maven-3.8.1-bin.tar.gzlrwxrwxrwx 1 root root 18 7月 23 2021 maven -&gt; apache-maven-3.8.1 展示出来的信息可以分为7组,意思如下： [1]:权限 [2]:连结 [3]:拥有者 [4]:群组 [5]:文件容量 [6]:修改日期 [7]:文件或目录名称 2.查看目录或文件的属性 12ll -d dir :-d只显示目录信息ll file :查看指定文件信息 3.切换目录 1234cd / :切换到根目录cd .. :回到上级目录cd - :返回到上一次访问的目录cd dir:切换到指定目录 4.查看当前路径 1pwd 5.创建空文件 1touch filename :只创建不编辑 6.创建目录 12mkdir dirmkdir -p dir/dir/dir :创建多级目录 7.文件和目录复制 12345678910111213cp sourcefile todir :复制到指定目录，保持原文件名cp file1 file2 todir :同时复制多个文件到指定目录下cp sourcefile todir/newfile :复制到指定目录，并重命名文件cp -R sourcedir todir :如果todir不存在，则将sourcedir下的内容复制到todir目录下，如果todir已经存在，则将sourcedir复制到todir目录下cp sourcedir/* todir :复制目录下的文件到指定目录，不含sourcedircp -n sourcefile todir :如文件已经存在，则不覆盖cp -f sourcefile todir :如文件已经存在，则强制覆盖 8.移动文件、重命名 12345678910111213141516171819202122232425262728mv file1 file2 :重命名file1为file2mv file todir :将文件移动到指定目录下mv dir todir :如果todir不存在，则将dir重命名为todir，如果todir已经存在，则将dir移动到todir目录下mv dir todir/ :如果todir不存在，则将dir重命名为todir，如果todir已经存在，则将dir移动到todir目录下mv -n file todir :如有重复，则不覆盖mv -f file todir :如有重复，则强制覆盖# rename命令的功能是用于批量修改文件名称。与mv命令一次只能修改一个文件名不同，rename命令能够基于正则表达式对文件名进行批量修改# 注意rename命令在centos和ubuntu下语法是不同的# centos : rename &lt;from&gt; &lt;to&gt; *.txt# 批量重命名，把/etc/yum.repos.d/*.repo指定的所有文件，文件名称中的‘.repo’替换为‘.repo.bak’rename &#x27;.repo&#x27; &#x27;.repo.bak&#x27; /etc/yum.repos.d/*.repo rename命令的参数有三项： 其一是当前文件名中要被修改的字符; 其二是其要被修改为的新字符; 其三是要被执行的对象文件列表，可以用正则表达式确定范围# 后缀替换，当前路径下的所有.txt文件替换为.phprename .txt .php *# ubuntu : rename &#x27;s/from/to/&#x27; *.txtrename &#x27;s/x0*/new/&#x27; * 小贴士 进行cp或mv操作时，非重命名操作最好都先通过mkdir创建好目标目录 9.文件和目录删除 123rm -f file : 删除文件rm -rf dir : 删除目录 10.显示文件内容相关 cat :显示文件所有内容 1cat file more :分页显示文件内容 12345678910111213more file下一页: 空格下一行: 回车退出 : q选项 含义-f 计算行数时，以实际的行数，而不是自动换行过后的行数。-p 不以卷动的方式显示每一页，而是先清除屏幕后再显示内容。-c 跟 -p 选项相似，不同的是先显示内容再清除其他旧资料。-s 当遇到有连续两行以上的空白行时，就替换为一行的空白行。-u 不显示下引号（根据环境变量 TERM 指定的终端而有所不同）。+n 从第 n 行开始显示文件内容，n 代表数字。-n 一次显示的行数，n 代表数字。 head :显示文件前几行，默认是10行 1head -20 file : 显示开头的20行 tail :显示文件最后几行，默认是10行 123tail -20 file : 显示结尾的20行tail -f file -n 100 : 动态显示文件内容，先显示最后100行内容，用于查看日志tail -f file | grep key : 动态显示文件内容，配合grep使用，只显示关心的内容 less :与more类似，不过less更加高效，推荐使用 123456789101112131415less file选项 选项含义-N 显示每行的行号。-S 行过长时将超出部分舍弃。-e 当文件显示结束后，自动离开。-g 只标志最后搜索到的关键同。-Q 不使用警告音。-i 忽略搜索时的大小写。-m 显示类似 more 命令的百分比。-f 强迫打开特殊文件，比如外围设备代号、目录和二进制文件。-s 显示连续空行为一行。-b &lt;缓冲区大小&gt; 设置缓冲区的大小。-o &lt;文件名&gt; 将 less 输出的内容保存到指定文件中。-x &lt;数字&gt; 将【Tab】键显示为规定的数字空格。 more 和 less的区别 1、less可以按键盘上下方向键显示上下内容，而more不能通过上下方向键控制显示 2、less不必读整个文件，加载速度会比more更快 3、less退出后shell不会留下刚显示的内容，而more退出后会在shell上留下刚显示的内容 4、阅读到文件结束时，less不会退出，而more会 5、less可用行号或百分比作为书签浏览文件，而more不行 6、相比more，less提供更加友好的检索、高亮显示等操作 strings :查看二进制文件中可以读取的字符部分 1strings /lib64/libc.so.6 | grep GLIBC 11.软链接与硬连接 12ln -s file/dir file/dir : 软连接ln file file : 硬连接 软链接 与 硬链接 的区别 软链接（soft link）：也称为符号链接（Symbolic Link），类似于 Windows 操作系统中的快捷方式文件，该文件有自己的名称、inode 和 物理存储的文件数据（记录着另一文件的路径名指向），访问该文件会被重新定向到软链接所指的源文件名。 硬链接（hard link）：相当于为当前文件名对应的文件再创建一个文件别名，当前文件名与该文件别名对应的 inode 和 物理存储的文件数据 都是一样的，访问该文件别名同访问当前文件名一致。 1.删除源文件，软链接 会失效(但不会被自动删除)，硬链接 不会失效(文件并没有被真正删除)； 2.软链接 可以为文件和目录(允许不存在)创建链接，硬链接 只可以为文件创建链接； 3.软链接 可以跨文件系统，硬链接 必须是同一个文件系统； 4.软链接 的文件权限 可以和源文件不一样，硬链接 的文件权限 一定和源文件一样； 5.软链接：作为可执行文件的快捷方式； 6.硬链接：备份重要文件。 12.查看文件或目录的大小 12345678du -h file : 查看文件大小du -sh dir : 查看目录大小du -sh * : 查看当前目录下所有文件和目录的大小du -sh * | sort -h : 正序du -sh * | sort -hr : 倒序 13.查看文件、目录详细时间参数 123456789101112131415stat file/dir : 列出访问时间，最后修改时间，等等# 示例：stat apache-maven-3.8.1-bin.tar.gz 文件：&quot;apache-maven-3.8.1-bin.tar.gz&quot; 大小：9536838 块：18632 IO 块：4096 普通文件设备：fd01h/64769d Inode：1078257 硬链接：1权限：(0644/-rw-r--r--) Uid：( 0/ root) Gid：( 0/ root)最近访问：2023-03-03 10:06:52.371937028 +0800最近更改：2021-03-31 01:41:19.000000000 +0800最近改动：2021-07-23 15:25:42.624723562 +0800创建时间：-1. 最近访问(Access Time) ：简写为atime，表示文件的访问时间。当文件内容被访问时，更新这个时间。2. 最近更改(Modify Time) ：简写为mtime，表示文件内容的修改时间，当文件的数据内容被修改时，更新这个时间。就是 ls -l 里显示的时间。3. 最近改动(Change Time) ：简写为ctime，表示文件的状态时间，当文件的状态被修改时，更新这个时间，例如文件的链接数，大小，权限，Blocks数。 小贴士 使用touch命令修改文件的时间戳 123456789101112131415161718192021222324252627282930313233343536373839$ touch --help用法：touch [选项]... 文件...Update the access and modification times of each FILE to the current time.A FILE argument that does not exist is created empty, unless -c or -his supplied.A FILE argument string of - is handled specially and causes touch tochange the times of the file associated with standard output.Mandatory arguments to long options are mandatory for short options too. -a 只更改访问时间 -c, --no-create 不创建任何文件 -d, --date=字符串 使用指定字符串表示时间而非当前时间 -f (忽略) -h, --no-dereference 会影响符号链接本身，而非符号链接所指示的目的地 (当系统支持更改符号链接的所有者时，此选项才有用) -m 只更改修改时间 -r, --reference=FILE use this file&#x27;s times instead of current time -t STAMP use [[CC]YY]MMDDhhmm[.ss] instead of current time --time=WORD change the specified time: WORD is access, atime, or use: equivalent to -a WORD is modify or mtime: equivalent to -m --help 显示此帮助信息并退出 --version 显示版本信息并退出请注意，-d 和-t 选项可接受不同的时间/日期格式。# 示例# 修改atimetouch -a test : 修改为当前系统时间touch -a -d &quot;2023-03-02 11:37:08&quot; test.sh : 修改为指定的时间touch -a -t &quot;202303021137.08&quot; test.sh# 修改mtimetouch -m test : 修改为当前系统时间touch -m -d &quot;2023-03-02 11:37:08&quot; test.sh : 修改为指定的时间touch -m -t &quot;202303021137.08&quot; test.sh# 注意，修改atime或mtime时，都会同时修改ctime，因为文件的状态发生了变化 14.查看文件的MD5或SHA值 12345md5sum filesha256sum filesha512sum file 15.查看硬盘分区情况及其挂载点 1234567df -h : 显示硬盘大小，自动使用最大的单位df -Th : 同时显示分区类型df -hl : 只显示本机的文件系统df : 分区容量全部使用单位K，等同于 df -kdf -m : 分区容量全部使用单位M 16.将文件转换为16进制格式 12345# 转16进制xxd file &gt; 16file# 16进制转回xxd r 16file file","summary":"摘要 文件与目录的查看、创建、修改、删除等相关命令 本文基于CentOS8(x86_64)","date_published":"2023-02-24T13:30:05.000Z","tags":["技术","linux","linux常用命令","linux常用命令"]},{"id":"https://blog.hanqunfeng.com/2022/11/22/mysql-sql-optimization/","url":"https://blog.hanqunfeng.com/2022/11/22/mysql-sql-optimization/","title":"MySql--sql语句优化","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>sql语句优化</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>mysql-8.0.30</code>，<a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">https://dev.mysql.com/doc/refman/8.0/en/</a></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"一般优化原则\">一般优化原则</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查询类型要与字段类型匹配，否则不会使用索引，这里注意日期类型可以使用字符串比较</p>\n</li>\n<li class=\"lvl-2\">\n<p>like '%xx%'不会使用索引，like 'xx%'会使用索引</p>\n</li>\n<li class=\"lvl-2\">\n<p>in和or在表数据量比较大的情况会走索引，在表记录不多的情况下会选择全表扫描</p>\n</li>\n<li class=\"lvl-2\">\n<p>where条件左侧避免使用函数，否则不会使用索引</p>\n</li>\n</ul>\n<h2 id=\"分页查询优化\">分页查询优化</h2>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> employees limit <span class=\"number\">90000</span>,<span class=\"number\">25</span>;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>1.根据自增且连续的主键排序的分页查询，要求主键自增且连续</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> employees <span class=\"keyword\">where</span> id <span class=\"operator\">&gt;</span> <span class=\"number\">90000</span> limit <span class=\"number\">25</span>;</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>2.根据非主键字段排序的分页查询(这种方式更加灵活)</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> employees e <span class=\"keyword\">inner</span> <span class=\"keyword\">join</span> (<span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> employees <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> name limit <span class=\"number\">90000</span>,<span class=\"number\">25</span>) ed <span class=\"keyword\">on</span> e.id <span class=\"operator\">=</span> ed.id;</span><br></pre></td></tr></table></figure>\n<h2 id=\"order-by-与-group-by-优化\"><code>order by</code> 与 <code>group by</code> 优化</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>group by</code> 与``order by` 很类似，其实质是先排序后分组，遵照索引创建顺序的最左前缀法则</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>order by</code> 与 <code>group by</code> 字段尽量与 <code>select</code> 和 <code>where</code> 中的字段组合为联合索引，即覆盖索引，避免文件排序和回表</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>where</code> 高于 <code>having</code>，能写在 <code>where</code> 中的限定条件就不要去 <code>having</code> 限定了</p>\n</li>\n</ul>\n<h2 id=\"in和exsits优化，小表驱动大表\"><code>in</code>和<code>exsits</code>优化，小表驱动大表</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>1.当B表的数据集小于A表的数据集时，in优于exists</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> A <span class=\"keyword\">where</span> id <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> B);</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>2.当A表的数据集小于B表的数据集时，exists优于in</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> A <span class=\"keyword\">where</span> <span class=\"keyword\">exists</span> (<span class=\"keyword\">select</span> <span class=\"number\">1</span> <span class=\"keyword\">from</span> B <span class=\"keyword\">where</span> B.id <span class=\"operator\">=</span> A.id)</span><br></pre></td></tr></table></figure>\n<h2 id=\"count-查询优化\"><code>count(*)</code>查询优化</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>count(*)≈count(1)&gt;count(索引字段)&gt;count(主键id)</p>\n</li>\n</ul>\n<h2 id=\"多表关联语句优化\">多表关联语句优化</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>不要超过3张表，关联表越多查询效率越低</p>\n</li>\n<li class=\"lvl-2\">\n<p>mysql优化器一般会优先选择小表做驱动表，所以使用 <code>inner join</code> 时，排在前面的表并不一定就是驱动表。</p>\n</li>\n<li class=\"lvl-2\">\n<p>当使用 <code>left join</code> 时，左表是驱动表，右表是被驱动表，当使用 <code>right join</code> 时，右表时驱动表，左表是被驱动表， 当使用 <code>join</code> 时，mysql会选择数据量比较小的表作为驱动表，大表作为被驱动表。</p>\n</li>\n<li class=\"lvl-2\">\n<p>多表关联字段一定要创建索引</p>\n</li>\n<li class=\"lvl-2\">\n<p>在决定哪个表做驱动表的时候，应该是两个表按照各自的条件过滤，过滤完成之后，计算参与 join 的各个字段的总数据量，数据量小的那个表，就是“小表”，应该作为驱动表。</p>\n</li>\n</ul>\n","content_text":"摘要 sql语句优化 本文基于mysql-8.0.30，https://dev.mysql.com/doc/refman/8.0/en/ 一般优化原则 查询类型要与字段类型匹配，否则不会使用索引，这里注意日期类型可以使用字符串比较 like '%xx%'不会使用索引，like 'xx%'会使用索引 in和or在表数据量比较大的情况会走索引，在表记录不多的情况下会选择全表扫描 where条件左侧避免使用函数，否则不会使用索引 分页查询优化 1select * from employees limit 90000,25; 1.根据自增且连续的主键排序的分页查询，要求主键自增且连续 1select * from employees where id &gt; 90000 limit 25; 2.根据非主键字段排序的分页查询(这种方式更加灵活) 1select * from employees e inner join (select id from employees order by name limit 90000,25) ed on e.id = ed.id; order by 与 group by 优化 group by 与``order by` 很类似，其实质是先排序后分组，遵照索引创建顺序的最左前缀法则 order by 与 group by 字段尽量与 select 和 where 中的字段组合为联合索引，即覆盖索引，避免文件排序和回表 where 高于 having，能写在 where 中的限定条件就不要去 having 限定了 in和exsits优化，小表驱动大表 1.当B表的数据集小于A表的数据集时，in优于exists 1select * from A where id in (select id from B); 2.当A表的数据集小于B表的数据集时，exists优于in 1select * from A where exists (select 1 from B where B.id = A.id) count(*)查询优化 count(*)≈count(1)&gt;count(索引字段)&gt;count(主键id) 多表关联语句优化 不要超过3张表，关联表越多查询效率越低 mysql优化器一般会优先选择小表做驱动表，所以使用 inner join 时，排在前面的表并不一定就是驱动表。 当使用 left join 时，左表是驱动表，右表是被驱动表，当使用 right join 时，右表时驱动表，左表是被驱动表， 当使用 join 时，mysql会选择数据量比较小的表作为驱动表，大表作为被驱动表。 多表关联字段一定要创建索引 在决定哪个表做驱动表的时候，应该是两个表按照各自的条件过滤，过滤完成之后，计算参与 join 的各个字段的总数据量，数据量小的那个表，就是“小表”，应该作为驱动表。","summary":"摘要 sql语句优化 本文基于mysql-8.0.30，https://dev.mysql.com/doc/refman/8.0/en/","date_published":"2022-11-22T13:30:05.000Z","tags":["技术","mysql","mysql"]},{"id":"https://blog.hanqunfeng.com/2022/10/26/mysql-sql-function/","url":"https://blog.hanqunfeng.com/2022/10/26/mysql-sql-function/","title":"MySql--sql语句与常用函数","content_html":"<!--\n **加粗**\n *斜体*\n ***加粗并斜体***\n ~~删除线~~\n ==突出显示==\n `突出显示(推荐)`\n ++下划线++\n ~下标~\n ^上标^\n 脚注，参考文献[^1]，然后在文档最下方要添加这个1对应的内容，如：[^1]: My reference.\n 图片设置宽度和高度 ![](https://upic-oss.oss-cn-beijing.aliyuncs.com/uPic/innodb_buffer_pool.png =900x600)\n\n +++ **点击折叠**\n 这是被隐藏的内容\n +++\n\n::: tips success warning danger\n这里是容器内的内容\n:::\n\n% note info % success warning danger\n这里是容器内的内容\n% endnote %\n\n -->\n<h2 id=\"摘要\">摘要</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>sql语句与常用函数介绍</p>\n</li>\n<li class=\"lvl-2\">\n<p>本文基于<code>mysql-8.0.30</code>，<a href=\"https://dev.mysql.com/doc/refman/8.0/en/\">https://dev.mysql.com/doc/refman/8.0/en/</a></p>\n</li>\n</ul>\n<span id=\"more\"></span>\n<h2 id=\"Mysql关键字执行顺序\">Mysql关键字执行顺序</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Mysql关键字语法顺序</th>\n<th style=\"text-align:left\">Mysql关键字执行顺序</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">select[distinct]</td>\n<td style=\"text-align:left\">from &lt;left_table&gt;</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">from</td>\n<td style=\"text-align:left\">on &lt;join_condition&gt;</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">join(left join)</td>\n<td style=\"text-align:left\">&lt;join_type&gt; join &lt;right_table&gt;</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">on</td>\n<td style=\"text-align:left\">where &lt;where_condition&gt;</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">where</td>\n<td style=\"text-align:left\">group by &lt;grout_by_list&gt; [with rollup]</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">group by[with rollup]</td>\n<td style=\"text-align:left\">having &lt;having_condition&gt;</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">having</td>\n<td style=\"text-align:left\">select[distinct] &lt;select_list&gt;</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">union(union all)</td>\n<td style=\"text-align:left\">union(union all)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">order by</td>\n<td style=\"text-align:left\">order by &lt;order_by_list&gt; [asc</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">limit</td>\n<td style=\"text-align:left\">limit &lt;limit_number&gt;</td>\n</tr>\n</tbody>\n</table>\n<div class=\"note info\"><p>FROM：组装来自不同数据源的记录<br>\nWHERE：根据指定的条件过滤上一步检索出的记录<br>\nGROUP BY：对上面过滤后的记录按指定条件分组<br>\nSUM/AVG/COUNT：使用聚合函数进行计算<br>\nHAVING：对所有分组根据指定条件进行过滤<br>\nSELECT：从上一步过滤后的各个分组记录中提取指定查询的字段列表（包括聚合字段、计算字段、表达式字段等）<br>\nORDER BY：对上一步查询得到的结果集按照排序字段列表进行排序，并输出排序结果<br>\nDISTINCT和GROUP BY：都可以实现去重，DISTINCT是筛选去重，GROUP BY是分组去重<br>\nWHERE与HAVING的区别：WHERE是对记录进行筛选；而HAVING是对按GROUP BY进行分组后的组进行筛选。HAVING只有在使用GROUP BY 后才能使用。</p>\n</div>\n<h2 id=\"distinct-去重\">distinct:去重</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>distinct关键字用于去重，distinct必须写在所有要查询字段的前面</p>\n</li>\n<li class=\"lvl-2\">\n<p>distinct后面有几个字段，就代表修饰几个字段，而不是紧随distinct的字段（类似于联合唯一索引），例如以下两个语句效果相同</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># name<span class=\"operator\">+</span>age去重</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span> name,age <span class=\"keyword\">from</span> employees</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span> (name),age <span class=\"keyword\">from</span> employees</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>distinct + order by</code> 是无法保证排序结果的，此时要使用 <code>group by + order by</code></p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">distinct执行顺序先于order by，而distinct去重时不确定其选取的是哪条记录，而且distinct本身的排序结果也是乱序，所以其根本无法保证基于其它字段的排序顺序</li>\n<li class=\"lvl-6\">group by也可以达到去重的目的，并可以基于聚合函数实现排序的目的</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 错误方式</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span>(t.search) <span class=\"keyword\">FROM</span> tbl_search_history t <span class=\"keyword\">where</span> t.user_id <span class=\"operator\">=</span> :userId <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> t.id <span class=\"keyword\">desc</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 正确方式</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> t.search <span class=\"keyword\">FROM</span> tbl_search_history t <span class=\"keyword\">WHERE</span> t.user_id <span class=\"operator\">=</span> :userId <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> t.search <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> <span class=\"built_in\">MAX</span>(t.id) <span class=\"keyword\">desc</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"with-rollup-分组后聚合\">with rollup:分组后聚合</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>with rollup出现在group by后面，用于对分组结果中的聚合数据再次进行汇总</p>\n</li>\n<li class=\"lvl-2\">\n<p>比如下面这个sql用于统计各个部门员工的年龄平均值、最大值和最小值</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> depName,<span class=\"built_in\">avg</span>(age),<span class=\"built_in\">max</span>(age),<span class=\"built_in\">min</span>(age) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName <span class=\"keyword\">with</span> <span class=\"keyword\">rollup</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+----------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> <span class=\"built_in\">avg</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">max</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">min</span>(age) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+----------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">30.5000</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+----------+----------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> depName,groupName,<span class=\"built_in\">avg</span>(age),<span class=\"built_in\">max</span>(age),<span class=\"built_in\">min</span>(age) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName,groupName <span class=\"keyword\">with</span> <span class=\"keyword\">rollup</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+----------+----------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> <span class=\"built_in\">avg</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">max</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">min</span>(age) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+----------+----------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">25.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">28</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">35.5000</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">34</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>    <span class=\"operator\">|</span> <span class=\"number\">30.2500</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">29.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">34</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">32.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">26</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>    <span class=\"operator\">|</span> <span class=\"number\">30.5000</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">44</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">42.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>    <span class=\"operator\">|</span> <span class=\"number\">38.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>  <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>    <span class=\"operator\">|</span> <span class=\"number\">32.2500</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+----------+----------+----------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>with rollup会为分组字段自动填充null值，我们可以使用<code>GROUPING</code>函数判断是否为with rollup自动填充的来设置想要的内容，比如</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> <span class=\"keyword\">GROUPING</span>(depName)<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;总计&#x27;</span> <span class=\"keyword\">ELSE</span> depName <span class=\"keyword\">END</span> depName,<span class=\"built_in\">avg</span>(age),<span class=\"built_in\">max</span>(age),<span class=\"built_in\">min</span>(age)</span><br><span class=\"line\"><span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName <span class=\"keyword\">with</span> <span class=\"keyword\">rollup</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+----------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> <span class=\"built_in\">avg</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">max</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">min</span>(age) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+----------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">30.5000</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 总计    <span class=\"operator\">|</span> <span class=\"number\">32.2500</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+----------+----------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> <span class=\"keyword\">GROUPING</span>(depName)<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"keyword\">GROUPING</span>(groupName)<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;总计&#x27;</span> <span class=\"keyword\">ELSE</span> depName <span class=\"keyword\">END</span> depName,</span><br><span class=\"line\"><span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> <span class=\"keyword\">GROUPING</span>(depName)<span class=\"operator\">=</span><span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"keyword\">GROUPING</span>(groupName)<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;小计&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">WHEN</span> <span class=\"keyword\">GROUPING</span>(depName)<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"keyword\">GROUPING</span>(groupName)<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;总计&#x27;</span> <span class=\"keyword\">ELSE</span> groupName <span class=\"keyword\">END</span> groupName,</span><br><span class=\"line\"><span class=\"built_in\">avg</span>(age),<span class=\"built_in\">max</span>(age),<span class=\"built_in\">min</span>(age) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName,groupName <span class=\"keyword\">with</span> <span class=\"keyword\">rollup</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+----------+----------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> <span class=\"built_in\">avg</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">max</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">min</span>(age) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+----------+----------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">25.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">28</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">35.5000</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">34</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 小计      <span class=\"operator\">|</span> <span class=\"number\">30.2500</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">29.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">34</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">32.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">26</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> 小计      <span class=\"operator\">|</span> <span class=\"number\">30.5000</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">44</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">42.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> 小计      <span class=\"operator\">|</span> <span class=\"number\">38.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 总计    <span class=\"operator\">|</span> 总计      <span class=\"operator\">|</span> <span class=\"number\">32.2500</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+----------+----------+----------+</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"group-concat-分组连接，将分组下的全部column用分隔符连接\">group_concat(): 分组连接，将分组下的全部column用分隔符连接</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>语法：<code>group_concat([DISTINCT] column [Order BY column ASC/DESC] [SEPARATOR '分隔符'])</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>默认逗号连接，不去重，不排序</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> depName,group_concat(age) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> group_concat(age)       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">22</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">28</span>,<span class=\"number\">34</span>,<span class=\"number\">34</span>,<span class=\"number\">36</span>,<span class=\"number\">38</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">34</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">44</span>,<span class=\"number\">24</span>,<span class=\"number\">46</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> depName,group_concat(age) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName <span class=\"keyword\">with</span> <span class=\"keyword\">rollup</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> group_concat(age)                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">22</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">28</span>,<span class=\"number\">34</span>,<span class=\"number\">34</span>,<span class=\"number\">36</span>,<span class=\"number\">38</span>                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">34</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">38</span>                                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">44</span>,<span class=\"number\">24</span>,<span class=\"number\">46</span>,<span class=\"number\">38</span>                                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>  <span class=\"operator\">|</span> <span class=\"number\">22</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">28</span>,<span class=\"number\">34</span>,<span class=\"number\">34</span>,<span class=\"number\">36</span>,<span class=\"number\">38</span>,<span class=\"number\">34</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">38</span>,<span class=\"number\">44</span>,<span class=\"number\">24</span>,<span class=\"number\">46</span>,<span class=\"number\">38</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-------------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>默认连接符为&quot;,“，如果要使用”:&quot;连接，可以使用<code>SEPARATOR ':'</code></p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> depName,group_concat(age SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+---------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> group_concat(age SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+---------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">22</span>:<span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">28</span>:<span class=\"number\">34</span>:<span class=\"number\">34</span>:<span class=\"number\">36</span>:<span class=\"number\">38</span>         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">34</span>:<span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">38</span>                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">44</span>:<span class=\"number\">24</span>:<span class=\"number\">46</span>:<span class=\"number\">38</span>                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+---------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> depName,group_concat(age SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName <span class=\"keyword\">with</span> <span class=\"keyword\">rollup</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> group_concat(age SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>)                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">22</span>:<span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">28</span>:<span class=\"number\">34</span>:<span class=\"number\">34</span>:<span class=\"number\">36</span>:<span class=\"number\">38</span>                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">34</span>:<span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">38</span>                                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">44</span>:<span class=\"number\">24</span>:<span class=\"number\">46</span>:<span class=\"number\">38</span>                                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>  <span class=\"operator\">|</span> <span class=\"number\">22</span>:<span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">28</span>:<span class=\"number\">34</span>:<span class=\"number\">34</span>:<span class=\"number\">36</span>:<span class=\"number\">38</span>:<span class=\"number\">34</span>:<span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">38</span>:<span class=\"number\">44</span>:<span class=\"number\">24</span>:<span class=\"number\">46</span>:<span class=\"number\">38</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-------------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>默认连接全部数据，如果要去掉重复的数据，可以使用<code>DISTINCT</code>关键字，其结果是排好序的</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> depName,group_concat(<span class=\"keyword\">DISTINCT</span> age SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> group_concat(<span class=\"keyword\">DISTINCT</span> age SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">22</span>:<span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">28</span>:<span class=\"number\">34</span>:<span class=\"number\">36</span>:<span class=\"number\">38</span>                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">34</span>:<span class=\"number\">38</span>                              <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">24</span>:<span class=\"number\">38</span>:<span class=\"number\">44</span>:<span class=\"number\">46</span>                              <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> depName,group_concat(<span class=\"keyword\">DISTINCT</span> age SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName <span class=\"keyword\">with</span> <span class=\"keyword\">rollup</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> group_concat(<span class=\"keyword\">DISTINCT</span> age SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">22</span>:<span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">28</span>:<span class=\"number\">34</span>:<span class=\"number\">36</span>:<span class=\"number\">38</span>                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">34</span>:<span class=\"number\">38</span>                              <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">24</span>:<span class=\"number\">38</span>:<span class=\"number\">44</span>:<span class=\"number\">46</span>                              <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>  <span class=\"operator\">|</span> <span class=\"number\">22</span>:<span class=\"number\">24</span>:<span class=\"number\">26</span>:<span class=\"number\">28</span>:<span class=\"number\">34</span>:<span class=\"number\">36</span>:<span class=\"number\">38</span>:<span class=\"number\">44</span>:<span class=\"number\">46</span>               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>排序<code>Order BY columnName ASC/DESC</code></p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> depName,group_concat(<span class=\"keyword\">DISTINCT</span> age <span class=\"keyword\">Order</span> <span class=\"keyword\">BY</span> age <span class=\"keyword\">DESC</span> SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName <span class=\"keyword\">with</span> <span class=\"keyword\">rollup</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> group_concat(<span class=\"keyword\">DISTINCT</span> age <span class=\"keyword\">Order</span> <span class=\"keyword\">BY</span> age <span class=\"keyword\">DESC</span> SEPARATOR <span class=\"string\">&#x27;:&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">38</span>:<span class=\"number\">36</span>:<span class=\"number\">34</span>:<span class=\"number\">28</span>:<span class=\"number\">26</span>:<span class=\"number\">24</span>:<span class=\"number\">22</span>                                       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">38</span>:<span class=\"number\">34</span>:<span class=\"number\">26</span>:<span class=\"number\">24</span>                                                <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">46</span>:<span class=\"number\">44</span>:<span class=\"number\">38</span>:<span class=\"number\">24</span>                                                <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>:<span class=\"number\">44</span>:<span class=\"number\">38</span>:<span class=\"number\">36</span>:<span class=\"number\">34</span>:<span class=\"number\">28</span>:<span class=\"number\">26</span>:<span class=\"number\">24</span>:<span class=\"number\">22</span>                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"over-开窗函数\">over(): 开窗函数</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>语法：over（partition by columnname1 order by columnname2）</p>\n</li>\n<li class=\"lvl-2\">\n<p>含义：按columname1指定的字段进行分组排序，按字段columnname2的值进行排序</p>\n</li>\n<li class=\"lvl-2\">\n<p>over函数只能出现在select中，不能出现在过滤条件中</p>\n</li>\n<li class=\"lvl-2\">\n<p>over()意思就是所有的数据都在窗口中，不能单独使用，要和分析函数如：sum(),avg(),row_number()等等一块使用，这么说貌似不好理解，直接看示例吧</p>\n</li>\n<li class=\"lvl-2\">\n<p>将年龄的平均值显示在每行</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> `depName`,`groupName`,age,<span class=\"built_in\">avg</span>(age)<span class=\"keyword\">over</span>() <span class=\"keyword\">as</span> avgAge <span class=\"keyword\">from</span> tbl_employees</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span> avgAge  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>将每个部门的年龄平均值显示在每行</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> `depName`,`groupName`,age,<span class=\"built_in\">avg</span>(age)<span class=\"keyword\">over</span>(<span class=\"keyword\">partition</span> <span class=\"keyword\">by</span> depName) <span class=\"keyword\">as</span> avgAge <span class=\"keyword\">from</span> tbl_employees</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span> avgAge  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">30.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">30.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">30.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">30.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">30.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>将每个部门下每个分组的年龄平均值显示在每行</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> `depName`,`groupName`,age,<span class=\"built_in\">avg</span>(age)<span class=\"keyword\">over</span>(<span class=\"keyword\">partition</span> <span class=\"keyword\">by</span> depName,groupName) <span class=\"keyword\">as</span> avgAge <span class=\"keyword\">from</span> tbl_employees</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span> avgAge  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span> <span class=\"number\">25.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">25.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">25.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span> <span class=\"number\">25.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">35.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">35.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span> <span class=\"number\">35.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">35.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">29.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">29.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">32.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">32.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span> <span class=\"number\">34.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">34.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span> <span class=\"number\">42.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">42.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>每个部门每个分组下按年龄倒序并显示每组的平均年龄</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> `depName`,`groupName`,age,<span class=\"built_in\">avg</span>(age)<span class=\"keyword\">over</span>(<span class=\"keyword\">partition</span> <span class=\"keyword\">by</span> depName,groupName <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> age <span class=\"keyword\">desc</span>) <span class=\"keyword\">as</span> avgAge <span class=\"keyword\">from</span> tbl_employees</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span> avgAge  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span> <span class=\"number\">28.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">27.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">26.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span> <span class=\"number\">25.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span> <span class=\"number\">37.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">35.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">35.5000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">34.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">29.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">32.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span> <span class=\"number\">44.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">34.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span> <span class=\"number\">46.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">42.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\">注意，这里是先分组，然后逐行求平均值的，比如前<span class=\"number\">4</span>条记录是一组，第一行数据和自己比，平均值就是<span class=\"number\">28</span>，第二行数据和第一行数据比，平均值是(<span class=\"number\">26</span><span class=\"operator\">+</span><span class=\"number\">28</span>)<span class=\"operator\">/</span><span class=\"number\">2</span>，第三行数据和前两行比，平均值就是(<span class=\"number\">28</span><span class=\"operator\">+</span><span class=\"number\">26</span><span class=\"operator\">+</span><span class=\"number\">24</span>)<span class=\"operator\">/</span><span class=\"number\">3</span>，以此类推，第四行就是(<span class=\"number\">28</span><span class=\"operator\">+</span><span class=\"number\">26</span><span class=\"operator\">+</span><span class=\"number\">24</span><span class=\"operator\">+</span><span class=\"number\">22</span>)<span class=\"operator\">/</span><span class=\"number\">4</span>，第五行是另一个分组了，依旧是按行计算。这里需要说一下第<span class=\"number\">7</span>行和第<span class=\"number\">8</span>行，因为这两行是同一个分组，且年龄相同，都是<span class=\"number\">34</span>，其平均值计算方法是相同年龄行相加后一起求平均值，所以我们看到这两行的平均值是一样的，所以<span class=\"keyword\">over</span>按哪个字段排序，如果其值相同，调用分析函数时要一起计算。每个分组的最后一条记录的显示的平均值才是该组的真实平均值</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>不分组直接排序，这里按年龄倒序</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> `depName`,`groupName`,age,<span class=\"built_in\">avg</span>(age)<span class=\"keyword\">over</span>(<span class=\"keyword\">order</span> <span class=\"keyword\">by</span> age <span class=\"keyword\">desc</span>) <span class=\"keyword\">as</span> avgAge <span class=\"keyword\">from</span> tbl_employees</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span> avgAge  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span> <span class=\"number\">46.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span> <span class=\"number\">45.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">40.8000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">40.8000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">40.8000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span> <span class=\"number\">40.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">38.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span> <span class=\"number\">37.0000</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">35.1667</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">35.1667</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">32.9333</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">32.9333</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">32.9333</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+</span></span><br><span class=\"line\">这里的计算方法与上面分组的情况类似，按行计算平均值，遇到排序字段值相同时，要一起计算。最后一条记录显示的平均值就是所有记录的平均值。</span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>查询每个员工年龄与全体平均年龄的差值</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> depName,groupName,age,<span class=\"built_in\">avg</span>(age)<span class=\"keyword\">over</span>() <span class=\"keyword\">as</span> avgAge,age<span class=\"operator\">-</span><span class=\"built_in\">avg</span>(age)<span class=\"keyword\">over</span>() <span class=\"keyword\">from</span> tbl_employees</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span> avgAge  <span class=\"operator\">|</span> age<span class=\"operator\">-</span><span class=\"built_in\">avg</span>(age)<span class=\"keyword\">over</span>() <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">-10.2500</span>           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">-8.2500</span>            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">-6.2500</span>            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">-4.2500</span>            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">1.7500</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">1.7500</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">3.7500</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">5.7500</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">1.7500</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">-8.2500</span>            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">-6.2500</span>            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">5.7500</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">11.7500</span>            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">-8.2500</span>            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">13.7500</span>            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span> <span class=\"number\">32.2500</span> <span class=\"operator\">|</span> <span class=\"number\">5.7500</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+-----------+-----+---------+--------------------+</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"查询行号\">查询行号</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>mysql没有提供可供计算行号的方法，不过我们可以通过两种方式来实现</p>\n</li>\n<li class=\"lvl-2\">\n<p>第一种方法，自定义行号变量<code>@rownum</code></p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">SELECT</span> <span class=\"variable\">@rownum</span>:<span class=\"operator\">=</span><span class=\"variable\">@rownum</span><span class=\"operator\">+</span><span class=\"number\">1</span> <span class=\"keyword\">AS</span> rownum, t.depName,t.groupName,t.age  <span class=\"keyword\">FROM</span> (<span class=\"keyword\">SELECT</span> <span class=\"variable\">@rownum</span>:<span class=\"operator\">=</span><span class=\"number\">0</span>) r, tbl_employees t</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> rownum <span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">5</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">6</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">7</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">8</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">9</span>      <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">11</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">12</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">13</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">14</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">15</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">16</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"># 年龄倒序显示</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"variable\">@rownum</span>:<span class=\"operator\">=</span><span class=\"variable\">@rownum</span><span class=\"operator\">+</span><span class=\"number\">1</span> <span class=\"keyword\">AS</span> rownum, t.depName,t.groupName,t.age  <span class=\"keyword\">FROM</span> (<span class=\"keyword\">SELECT</span> <span class=\"variable\">@rownum</span>:<span class=\"operator\">=</span><span class=\"number\">0</span>) r, tbl_employees t <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> age <span class=\"keyword\">desc</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> rownum <span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>      <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span>      <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span>      <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">5</span>      <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">6</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">7</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">8</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">9</span>      <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">11</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">12</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">13</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">14</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">15</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">16</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>第二种方法，使用<code>row_number()over()</code>函数</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">row_number</span>()<span class=\"keyword\">over</span>() <span class=\"keyword\">as</span> rownum,depName,groupName,age <span class=\"keyword\">from</span> tbl_employees</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> rownum <span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">5</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">6</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">7</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">8</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">9</span>      <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">11</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">12</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">13</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">14</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">15</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">16</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\">此时如果要按年龄排序，则排序规则可以写在最后，也可以写在<span class=\"keyword\">over</span>函数内，效果是一样的</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">row_number</span>()<span class=\"keyword\">over</span>() <span class=\"keyword\">as</span> rownum,depName,groupName,age <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> age <span class=\"keyword\">desc</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> rownum <span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>      <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span>      <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span>      <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">5</span>      <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">6</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">7</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">8</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">9</span>      <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">11</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">12</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">13</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">14</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">15</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">16</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">row_number</span>()<span class=\"keyword\">over</span>(<span class=\"keyword\">order</span> <span class=\"keyword\">by</span> age <span class=\"keyword\">desc</span>) <span class=\"keyword\">as</span> rownum,depName,groupName,age <span class=\"keyword\">from</span> tbl_employees</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> rownum <span class=\"operator\">|</span> depName <span class=\"operator\">|</span> groupName <span class=\"operator\">|</span> age <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>      <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">46</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span>      <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">44</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span>      <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">5</span>      <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">38</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">6</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">36</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">7</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">8</span>      <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 后端      <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">9</span>      <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">34</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">28</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">11</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">12</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">2</span>组       <span class=\"operator\">|</span> <span class=\"number\">26</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">13</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">14</span>     <span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">15</span>     <span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">1</span>组       <span class=\"operator\">|</span> <span class=\"number\">24</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">16</span>     <span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> 前端      <span class=\"operator\">|</span> <span class=\"number\">22</span>  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+---------+-----------+-----+</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Mysql常用函数\">Mysql常用函数</h2>\n<h3 id=\"数学函数\">数学函数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ABS(x)</td>\n<td style=\"text-align:left\">返回x的绝对值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">BIN(x)</td>\n<td style=\"text-align:left\">返回x的二进制（OCT(x)返回八进制，HEX(x)返回十六进制）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CEILING(x)</td>\n<td style=\"text-align:left\">返回&gt;=x的最小整数值，可以简写为 ceil(x)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">FLOOR(x)</td>\n<td style=\"text-align:left\">返回&lt;=x的最大整数值</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">ABS</span>(<span class=\"number\">10</span>),<span class=\"built_in\">ABS</span>(<span class=\"number\">-10</span>),BIN(<span class=\"number\">10</span>),OCT(<span class=\"number\">10</span>),HEX(<span class=\"number\">10</span>),<span class=\"built_in\">CEILING</span>(<span class=\"number\">10.2</span>),<span class=\"built_in\">EXP</span>(<span class=\"number\">1</span>),<span class=\"built_in\">FLOOR</span>(<span class=\"number\">10.2</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+---------+---------+---------+---------------+-------------------+-------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"built_in\">ABS</span>(<span class=\"number\">10</span>) <span class=\"operator\">|</span> <span class=\"built_in\">ABS</span>(<span class=\"number\">-10</span>) <span class=\"operator\">|</span> BIN(<span class=\"number\">10</span>) <span class=\"operator\">|</span> OCT(<span class=\"number\">10</span>) <span class=\"operator\">|</span> HEX(<span class=\"number\">10</span>) <span class=\"operator\">|</span> <span class=\"built_in\">CEILING</span>(<span class=\"number\">10.2</span>) <span class=\"operator\">|</span> <span class=\"built_in\">EXP</span>(<span class=\"number\">1</span>)            <span class=\"operator\">|</span> <span class=\"built_in\">FLOOR</span>(<span class=\"number\">10.2</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+---------+---------+---------+---------------+-------------------+-------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span>      <span class=\"operator\">|</span> <span class=\"number\">10</span>       <span class=\"operator\">|</span> <span class=\"number\">1010</span>    <span class=\"operator\">|</span> <span class=\"number\">12</span>      <span class=\"operator\">|</span> A       <span class=\"operator\">|</span> <span class=\"number\">11</span>            <span class=\"operator\">|</span> <span class=\"number\">2.718281828459045</span> <span class=\"operator\">|</span> <span class=\"number\">10</span>          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+---------+---------+---------+---------------+-------------------+-------------+</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">GREATEST(x1,x2,…,xn)</td>\n<td style=\"text-align:left\">返回集合中最大的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LEAST(x1,x2,…,xn)</td>\n<td style=\"text-align:left\">返回集合中最小的值</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 按照数字顺序，字符顺序，首字母顺序比较</span><br><span class=\"line\"><span class=\"keyword\">select</span> GREATEST(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>),LEAST(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>),GREATEST(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>),LEAST(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>),GREATEST(<span class=\"string\">&#x27;MySQL&#x27;</span>,<span class=\"string\">&#x27;Java&#x27;</span>,<span class=\"string\">&#x27;Redis&#x27;</span>),LEAST(<span class=\"string\">&#x27;MySQL&#x27;</span>,<span class=\"string\">&#x27;Java&#x27;</span>,<span class=\"string\">&#x27;Redis&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> GREATEST(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>) <span class=\"operator\">|</span> LEAST(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>) <span class=\"operator\">|</span> GREATEST(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>) <span class=\"operator\">|</span> LEAST(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>,<span class=\"string\">&#x27;D&#x27;</span>) <span class=\"operator\">|</span> GREATEST(<span class=\"string\">&#x27;MySQL&#x27;</span>,<span class=\"string\">&#x27;Java&#x27;</span>,<span class=\"string\">&#x27;Redis&#x27;</span>) <span class=\"operator\">|</span> LEAST(<span class=\"string\">&#x27;MySQL&#x27;</span>,<span class=\"string\">&#x27;Java&#x27;</span>,<span class=\"string\">&#x27;Redis&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">4</span>                 <span class=\"operator\">|</span> <span class=\"number\">1</span>              <span class=\"operator\">|</span> D                         <span class=\"operator\">|</span> A                      <span class=\"operator\">|</span> Redis                            <span class=\"operator\">|</span> Java                          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 这里要注意，只要集合中含有<span class=\"keyword\">NULL</span>，返回值都是<span class=\"keyword\">null</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> GREATEST(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"keyword\">NULL</span>),LEAST(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"keyword\">NULL</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> GREATEST(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"keyword\">NULL</span>) <span class=\"operator\">|</span> LEAST(<span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"keyword\">NULL</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                 <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>              <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+---------------------+</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">EXP(x)</td>\n<td style=\"text-align:left\">返回值e（自然对数的底）的x次方，自然对数e其值约等于2.71828</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LN(x)</td>\n<td style=\"text-align:left\">返回x的自然对数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LOG(x,y)</td>\n<td style=\"text-align:left\">返回x的以y为底的对数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MOD(x,y)</td>\n<td style=\"text-align:left\">返回x/y的模（余数）,当被除数为正数，结果就是正数，当被除数为负数，结果就是负数。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">PI()</td>\n<td style=\"text-align:left\">返回pi的值（圆周率）</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">EXP</span>(<span class=\"number\">1</span>),<span class=\"built_in\">LN</span>(<span class=\"number\">2.718281828459045</span>),<span class=\"built_in\">LOG</span>(<span class=\"number\">2</span>,<span class=\"number\">16</span>),<span class=\"built_in\">MOD</span>(<span class=\"number\">10</span>,<span class=\"number\">3</span>),<span class=\"built_in\">MOD</span>(<span class=\"number\">-10</span>,<span class=\"number\">3</span>),PI()</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+-----------------------+-----------+-----------+------------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"built_in\">EXP</span>(<span class=\"number\">1</span>)            <span class=\"operator\">|</span> <span class=\"built_in\">LN</span>(<span class=\"number\">2.718281828459045</span>) <span class=\"operator\">|</span> <span class=\"built_in\">LOG</span>(<span class=\"number\">2</span>,<span class=\"number\">16</span>) <span class=\"operator\">|</span> <span class=\"built_in\">MOD</span>(<span class=\"number\">10</span>,<span class=\"number\">3</span>) <span class=\"operator\">|</span> <span class=\"built_in\">MOD</span>(<span class=\"number\">-10</span>,<span class=\"number\">3</span>) <span class=\"operator\">|</span> PI()     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+-----------------------+-----------+-----------+------------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2.718281828459045</span> <span class=\"operator\">|</span> <span class=\"number\">1.0</span>                   <span class=\"operator\">|</span> <span class=\"number\">4.0</span>       <span class=\"operator\">|</span> <span class=\"number\">1</span>         <span class=\"operator\">|</span> <span class=\"number\">-1</span>         <span class=\"operator\">|</span> <span class=\"number\">3.141593</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+-----------------------+-----------+-----------+------------+----------+</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">RAND()</td>\n<td style=\"text-align:left\">返回０到１内的随机值,可以通过提供一个参数(种子)使RAND()随机数生成器生成一个指定的值。</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 相同的种子，返回值相同</span><br><span class=\"line\"><span class=\"keyword\">select</span> RAND(),RAND(<span class=\"number\">2</span>),RAND(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+--------------------+--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> RAND()              <span class=\"operator\">|</span> RAND(<span class=\"number\">2</span>)            <span class=\"operator\">|</span> RAND(<span class=\"number\">2</span>)            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+--------------------+--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">0.10167000452212059</span> <span class=\"operator\">|</span> <span class=\"number\">0.6555866465490187</span> <span class=\"operator\">|</span> <span class=\"number\">0.6555866465490187</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+--------------------+--------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 获得介于[i，j)之间的随机值，<span class=\"built_in\">FLOOR</span>(i <span class=\"operator\">+</span> RAND() <span class=\"operator\">*</span>(j − i))，比如[<span class=\"number\">1</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">FLOOR</span>(<span class=\"number\">1</span> <span class=\"operator\">+</span> RAND()<span class=\"operator\">*</span>(<span class=\"number\">10</span> <span class=\"operator\">-</span> <span class=\"number\">1</span>)) <span class=\"keyword\">AS</span> Random_Number;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Random_Number <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">6.0</span>           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 获得介于[i，j]之间的随机值，<span class=\"built_in\">FLOOR</span>(i <span class=\"operator\">+</span> RAND() <span class=\"operator\">*</span>(j − i <span class=\"operator\">+</span> <span class=\"number\">1</span>))，比如[<span class=\"number\">1</span>,<span class=\"number\">10</span>]</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">FLOOR</span>(<span class=\"number\">1</span> <span class=\"operator\">+</span> RAND()<span class=\"operator\">*</span>(<span class=\"number\">10</span> <span class=\"operator\">-</span> <span class=\"number\">1</span> <span class=\"operator\">+</span> <span class=\"number\">1</span>)) <span class=\"keyword\">AS</span> Random_Number;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> Random_Number <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10.0</span>          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------+</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ROUND(x,y)</td>\n<td style=\"text-align:left\">返回参数x的四舍五入的有y位小数的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SIGN(x)</td>\n<td style=\"text-align:left\">返回代表数字x的符号的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SQRT(x)</td>\n<td style=\"text-align:left\">返回一个数的平方根</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">POW(x,y)</td>\n<td style=\"text-align:left\">指数函数，x为底，y为指数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TRUNCATE(x,y)</td>\n<td style=\"text-align:left\">返回数字x截短为y位小数的结果，y为负数时整数部分替换为0</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> ROUND(<span class=\"number\">3.147</span>,<span class=\"number\">2</span>),SIGN(<span class=\"number\">5</span>),SIGN(<span class=\"number\">-5</span>),<span class=\"built_in\">SQRT</span>(<span class=\"number\">16</span>),POW(<span class=\"number\">4</span>,<span class=\"number\">2</span>),<span class=\"keyword\">TRUNCATE</span>(<span class=\"number\">3.147</span>,<span class=\"number\">2</span>),<span class=\"keyword\">TRUNCATE</span>(<span class=\"number\">3.147</span>,<span class=\"number\">0</span>),<span class=\"keyword\">TRUNCATE</span>(<span class=\"number\">123.147</span>,<span class=\"number\">-2</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> ROUND(<span class=\"number\">3.147</span>,<span class=\"number\">2</span>) <span class=\"operator\">|</span> SIGN(<span class=\"number\">5</span>) <span class=\"operator\">|</span> SIGN(<span class=\"number\">-5</span>) <span class=\"operator\">|</span> <span class=\"built_in\">SQRT</span>(<span class=\"number\">16</span>) <span class=\"operator\">|</span> POW(<span class=\"number\">4</span>,<span class=\"number\">2</span>) <span class=\"operator\">|</span> <span class=\"keyword\">TRUNCATE</span>(<span class=\"number\">3.147</span>,<span class=\"number\">2</span>) <span class=\"operator\">|</span> <span class=\"keyword\">TRUNCATE</span>(<span class=\"number\">3.147</span>,<span class=\"number\">0</span>) <span class=\"operator\">|</span> <span class=\"keyword\">TRUNCATE</span>(<span class=\"number\">123.147</span>,<span class=\"number\">-2</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3.15</span>           <span class=\"operator\">|</span> <span class=\"number\">1</span>       <span class=\"operator\">|</span> <span class=\"number\">-1</span>       <span class=\"operator\">|</span> <span class=\"number\">4.0</span>      <span class=\"operator\">|</span> <span class=\"number\">16.0</span>     <span class=\"operator\">|</span> <span class=\"number\">3.14</span>              <span class=\"operator\">|</span> <span class=\"number\">3</span>                 <span class=\"operator\">|</span> <span class=\"number\">100</span>                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">FORMAT(N,D,locale)</td>\n<td style=\"text-align:left\">将数字N格式化为格式，如&quot;#,###,###.##&quot;，舍入到D位小数。它返回一个值作为字符串。</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>mysql支持的locale请查看<a href=\"https://dev.mysql.com/doc/refman/8.0/en/locale-support.html\">https://dev.mysql.com/doc/refman/8.0/en/locale-support.html</a></p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 不指定locale时默认en_US，de_DE语言环境使用点(.)来分隔千位和逗号(，)来分隔小数点</span><br><span class=\"line\"><span class=\"keyword\">select</span> format(<span class=\"number\">1450028.123</span>,<span class=\"number\">2</span>),format(<span class=\"number\">1450028.123</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;en_US&#x27;</span>),format(<span class=\"number\">1450028.123</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;zh_CN&#x27;</span>),format(<span class=\"number\">1450028.123</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;de_DE&#x27;</span>);</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------+-------------------------------+-------------------------------+-------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> format(<span class=\"number\">1450028.123</span>,<span class=\"number\">2</span>) <span class=\"operator\">|</span> format(<span class=\"number\">1450028.123</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;en_US&#x27;</span>) <span class=\"operator\">|</span> format(<span class=\"number\">1450028.123</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;zh_CN&#x27;</span>) <span class=\"operator\">|</span> format(<span class=\"number\">1450028.123</span>,<span class=\"number\">2</span>,<span class=\"string\">&#x27;de_DE&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------+-------------------------------+-------------------------------+-------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>,<span class=\"number\">450</span>,<span class=\"number\">028.12</span>          <span class=\"operator\">|</span> <span class=\"number\">1</span>,<span class=\"number\">450</span>,<span class=\"number\">028.12</span>                  <span class=\"operator\">|</span> <span class=\"number\">1</span>,<span class=\"number\">450</span>,<span class=\"number\">028.12</span>                  <span class=\"operator\">|</span> <span class=\"number\">1.450</span><span class=\"number\">.028</span>,<span class=\"number\">12</span>                  <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------+-------------------------------+-------------------------------+-------------------------------+</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"聚合函数-常用于GROUP-BY从句的SELECT查询中\">聚合函数(常用于GROUP BY从句的SELECT查询中)</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AVG(col)</td>\n<td style=\"text-align:left\">返回指定列的平均值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">COUNT(col)</td>\n<td style=\"text-align:left\">返回指定列中非NULL值的个数，注意count(*)不会跳过NULL值行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MIN(col)</td>\n<td style=\"text-align:left\">返回指定列的最小值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MAX(col)</td>\n<td style=\"text-align:left\">返回指定列的最大值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SUM(col)</td>\n<td style=\"text-align:left\">返回指定列的所有值之和</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GROUP_CONCAT(col)</td>\n<td style=\"text-align:left\">返回由属于一组的列值连接组合而成的结果</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> depName,<span class=\"built_in\">count</span>(<span class=\"operator\">*</span>),<span class=\"built_in\">avg</span>(age),<span class=\"built_in\">max</span>(age),<span class=\"built_in\">min</span>(age),<span class=\"built_in\">sum</span>(age),group_concat(age) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+----------+----------+----------+----------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> <span class=\"built_in\">count</span>(<span class=\"operator\">*</span>) <span class=\"operator\">|</span> <span class=\"built_in\">avg</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">max</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">min</span>(age) <span class=\"operator\">|</span> <span class=\"built_in\">sum</span>(age) <span class=\"operator\">|</span> group_concat(age)       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+----------+----------+----------+----------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">8</span>        <span class=\"operator\">|</span> <span class=\"number\">30.2500</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">22</span>       <span class=\"operator\">|</span> <span class=\"number\">242</span>      <span class=\"operator\">|</span> <span class=\"number\">22</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">28</span>,<span class=\"number\">34</span>,<span class=\"number\">34</span>,<span class=\"number\">36</span>,<span class=\"number\">38</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">4</span>        <span class=\"operator\">|</span> <span class=\"number\">30.5000</span>  <span class=\"operator\">|</span> <span class=\"number\">38</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span> <span class=\"number\">122</span>      <span class=\"operator\">|</span> <span class=\"number\">34</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">4</span>        <span class=\"operator\">|</span> <span class=\"number\">38.0000</span>  <span class=\"operator\">|</span> <span class=\"number\">46</span>       <span class=\"operator\">|</span> <span class=\"number\">24</span>       <span class=\"operator\">|</span> <span class=\"number\">152</span>      <span class=\"operator\">|</span> <span class=\"number\">44</span>,<span class=\"number\">24</span>,<span class=\"number\">46</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+----------+----------+----------+----------+----------+-------------------------+</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"字符串函数\">字符串函数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ASCII(char)</td>\n<td style=\"text-align:left\">返回字符的ASCII码值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LENGTH(s)</td>\n<td style=\"text-align:left\">返回字符串str中的字符数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">BIT_LENGTH(str)</td>\n<td style=\"text-align:left\">返回字符串的比特长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CONCAT(s1,s2…,sn)</td>\n<td style=\"text-align:left\">将s1,s2…,sn连接成字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CONCAT_WS(sep,s1,s2…,sn)</td>\n<td style=\"text-align:left\">将s1,s2…,sn连接成字符串，并用sep字符间隔</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">INSERT(str,x,y,instr)</td>\n<td style=\"text-align:left\">将字符串str从第x位置开始，y个字符长的子串替换为字符串instr，返回结果</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">REPLACE(str,substr,otherstr)</td>\n<td style=\"text-align:left\">在str中查找substr，并使用otherstr替换</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">FIND_IN_SET(str,list)</td>\n<td style=\"text-align:left\">分析逗号分隔的list列表，如果发现str，返回str在list中的位置，位置从1开始计算</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">REPEAT(str,x)</td>\n<td style=\"text-align:left\">返回字符串str重复x次的结果</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">REVERSE(str)</td>\n<td style=\"text-align:left\">返回颠倒字符串str的结果</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">STRCMP(s1,s2)</td>\n<td style=\"text-align:left\">比较字符串s1和s2,如果两个字符串相同，则返回0，如果根据定义的顺序第一个参数小于第二个参数，则返回-1，而当第二个参数小于第一个参数时，返回1。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LEFT(str,x)</td>\n<td style=\"text-align:left\">返回字符串str中最左边的x个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">RIGHT(str,x)</td>\n<td style=\"text-align:left\">返回字符串str中最右边的x个字符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SUBSTRING(str,x,y)或者SUBSTR(str,x,y)</td>\n<td style=\"text-align:left\">返回字符串str从第x个字符开始，截取y个字符长度，y不填写则表示截取到字符串末尾</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TRIM(str)</td>\n<td style=\"text-align:left\">去除字符串首部和尾部的所有空格</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">RTRIM(str)</td>\n<td style=\"text-align:left\">返回字符串str尾部的空格</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LTRIM(str)</td>\n<td style=\"text-align:left\">从字符串str中切掉开头的空格</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UCASE(str)或UPPER(str)</td>\n<td style=\"text-align:left\">返回将字符串str中所有字符转变为大写后的结果</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LCASE(str)或LOWER(str)</td>\n<td style=\"text-align:left\">返回将字符串str中所有字符改变为小写后的结果</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LPAD(str,x,y)</td>\n<td style=\"text-align:left\">将str长度为设置为x，不足部分用y在前面补齐</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">RPAD(str,x,y)</td>\n<td style=\"text-align:left\">将str长度为设置为x，不足部分用y在后面补齐</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SPACE(x)</td>\n<td style=\"text-align:left\">返回指定数量的空格，x必须大于0</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 字符串替换</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">INSERT</span>(<span class=\"string\">&#x27;abcdefgh&#x27;</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"string\">&#x27;ufo&#x27;</span>),REVERSE(<span class=\"string\">&#x27;abcdefgh&#x27;</span>),REPEAT(<span class=\"string\">&#x27;MySQL&#x27;</span>, <span class=\"number\">3</span>),REPLACE(<span class=\"string\">&#x27;abcdefgh&#x27;</span>,<span class=\"string\">&#x27;de&#x27;</span>,<span class=\"string\">&#x27;ufo&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------+---------------------+--------------------+--------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">INSERT</span>(<span class=\"string\">&#x27;abcdefgh&#x27;</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"string\">&#x27;ufo&#x27;</span>) <span class=\"operator\">|</span> REVERSE(<span class=\"string\">&#x27;abcdefgh&#x27;</span>) <span class=\"operator\">|</span> REPEAT(<span class=\"string\">&#x27;MySQL&#x27;</span>, <span class=\"number\">3</span>) <span class=\"operator\">|</span> REPLACE(<span class=\"string\">&#x27;abcdefgh&#x27;</span>,<span class=\"string\">&#x27;de&#x27;</span>,<span class=\"string\">&#x27;ufo&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------+---------------------+--------------------+--------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> abufoh                       <span class=\"operator\">|</span> hgfedcba            <span class=\"operator\">|</span> MySQLMySQLMySQL    <span class=\"operator\">|</span> abcufofgh                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------+---------------------+--------------------+--------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 计算字符串长度，中文占<span class=\"number\">3</span>个字符，每个字符<span class=\"number\">8</span>个字节</span><br><span class=\"line\"><span class=\"keyword\">select</span> ASCII(<span class=\"string\">&#x27;A&#x27;</span>),LENGTH(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>),BIT_LENGTH(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------+--------------------------+------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> ASCII(<span class=\"string\">&#x27;A&#x27;</span>) <span class=\"operator\">|</span> LENGTH(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>) <span class=\"operator\">|</span> BIT_LENGTH(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------+--------------------------+------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">65</span>         <span class=\"operator\">|</span> <span class=\"number\">21</span>                       <span class=\"operator\">|</span> <span class=\"number\">168</span>                          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------+--------------------------+------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串连接</span><br><span class=\"line\"><span class=\"keyword\">select</span> CONCAT(<span class=\"string\">&#x27;中华&#x27;</span>,<span class=\"string\">&#x27;人民&#x27;</span>,<span class=\"string\">&#x27;共和国&#x27;</span>),CONCAT_WS(<span class=\"string\">&#x27;_&#x27;</span>,<span class=\"string\">&#x27;中华&#x27;</span>,<span class=\"string\">&#x27;人民&#x27;</span>,<span class=\"string\">&#x27;共和国&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------+---------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> CONCAT(<span class=\"string\">&#x27;中华&#x27;</span>,<span class=\"string\">&#x27;人民&#x27;</span>,<span class=\"string\">&#x27;共和国&#x27;</span>) <span class=\"operator\">|</span> CONCAT_WS(<span class=\"string\">&#x27;_&#x27;</span>,<span class=\"string\">&#x27;中华&#x27;</span>,<span class=\"string\">&#x27;人民&#x27;</span>,<span class=\"string\">&#x27;共和国&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------+---------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 中华人民共和国                 <span class=\"operator\">|</span> 中华_人民_共和国                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------+---------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串截取</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">LEFT</span>(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>,<span class=\"number\">5</span>),<span class=\"keyword\">RIGHT</span>(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>,<span class=\"number\">5</span>),<span class=\"built_in\">SUBSTRING</span>(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>,<span class=\"number\">3</span>),<span class=\"built_in\">SUBSTRING</span>(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+---------------------------+-------------------------------+---------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">LEFT</span>(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>,<span class=\"number\">5</span>) <span class=\"operator\">|</span> <span class=\"keyword\">RIGHT</span>(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>,<span class=\"number\">5</span>) <span class=\"operator\">|</span> <span class=\"built_in\">SUBSTRING</span>(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>,<span class=\"number\">3</span>) <span class=\"operator\">|</span> <span class=\"built_in\">SUBSTRING</span>(<span class=\"string\">&#x27;中华人民共和国&#x27;</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+---------------------------+-------------------------------+---------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 中华人民共               <span class=\"operator\">|</span> 人民共和国                <span class=\"operator\">|</span> 人民共和国                    <span class=\"operator\">|</span> 人民                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+---------------------------+-------------------------------+---------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串补齐</span><br><span class=\"line\"><span class=\"keyword\">select</span> LPAD(&quot;hello&quot;,<span class=\"number\">7</span>,<span class=\"string\">&#x27;a&#x27;</span>),LPAD(&quot;hello&quot;,<span class=\"number\">7</span>,<span class=\"number\">0</span>),RPAD(&quot;hello&quot;,<span class=\"number\">7</span>,<span class=\"string\">&#x27;a&#x27;</span>),RPAD(&quot;hello&quot;,<span class=\"number\">7</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+-------------------+---------------------+-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> LPAD(&quot;hello&quot;,<span class=\"number\">7</span>,<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"operator\">|</span> LPAD(&quot;hello&quot;,<span class=\"number\">7</span>,<span class=\"number\">0</span>) <span class=\"operator\">|</span> RPAD(&quot;hello&quot;,<span class=\"number\">7</span>,<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"operator\">|</span> RPAD(&quot;hello&quot;,<span class=\"number\">7</span>,<span class=\"number\">0</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+-------------------+---------------------+-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> aahello             <span class=\"operator\">|</span> <span class=\"number\">00</span>hello           <span class=\"operator\">|</span> helloaa             <span class=\"operator\">|</span> hello00           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+-------------------+---------------------+-------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 列表中查找指定的字符串</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> FIND_IN_SET(<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;a,b,c,d&#x27;</span>),FIND_IN_SET(<span class=\"string\">&#x27;bb&#x27;</span>, <span class=\"string\">&#x27;ab,bb,cb,db&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------+----------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> FIND_IN_SET(<span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;a,b,c,d&#x27;</span>) <span class=\"operator\">|</span> FIND_IN_SET(<span class=\"string\">&#x27;bb&#x27;</span>, <span class=\"string\">&#x27;ab,bb,cb,db&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------+----------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2</span>                           <span class=\"operator\">|</span> <span class=\"number\">2</span>                                <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------+----------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 字符串比较，按字母顺序逐个比较</span><br><span class=\"line\"><span class=\"keyword\">Select</span> STRCMP(<span class=\"string\">&#x27;Geeks&#x27;</span>, <span class=\"string\">&#x27;Geeks&#x27;</span>),STRCMP(<span class=\"string\">&#x27;Geeks&#x27;</span>, <span class=\"string\">&#x27;Geek&#x27;</span>),STRCMP(<span class=\"string\">&#x27;Geek&#x27;</span>, <span class=\"string\">&#x27;Geeks&#x27;</span>),STRCMP(<span class=\"string\">&#x27;Geek&#x27;</span>, <span class=\"keyword\">NULL</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+-------------------------+-------------------------+----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> STRCMP(<span class=\"string\">&#x27;Geeks&#x27;</span>, <span class=\"string\">&#x27;Geeks&#x27;</span>) <span class=\"operator\">|</span> STRCMP(<span class=\"string\">&#x27;Geeks&#x27;</span>, <span class=\"string\">&#x27;Geek&#x27;</span>) <span class=\"operator\">|</span> STRCMP(<span class=\"string\">&#x27;Geek&#x27;</span>, <span class=\"string\">&#x27;Geeks&#x27;</span>) <span class=\"operator\">|</span> STRCMP(<span class=\"string\">&#x27;Geek&#x27;</span>, <span class=\"keyword\">NULL</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+-------------------------+-------------------------+----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">0</span>                        <span class=\"operator\">|</span> <span class=\"number\">1</span>                       <span class=\"operator\">|</span> <span class=\"number\">-1</span>                      <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+-------------------------+-------------------------+----------------------+</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> STRCMP(<span class=\"string\">&#x27;ae&#x27;</span>,<span class=\"string\">&#x27;abcd&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> STRCMP(<span class=\"string\">&#x27;ae&#x27;</span>,<span class=\"string\">&#x27;abcd&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>                   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 大小写转换</span><br><span class=\"line\"><span class=\"keyword\">select</span> UCASE(<span class=\"string\">&#x27;abc&#x27;</span>),<span class=\"built_in\">UPPER</span>(<span class=\"string\">&#x27;abc&#x27;</span>),LCASE(<span class=\"string\">&#x27;ABC&#x27;</span>),<span class=\"built_in\">LOWER</span>(<span class=\"string\">&#x27;ABC&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+--------------+--------------+--------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> UCASE(<span class=\"string\">&#x27;abc&#x27;</span>) <span class=\"operator\">|</span> <span class=\"built_in\">UPPER</span>(<span class=\"string\">&#x27;abc&#x27;</span>) <span class=\"operator\">|</span> LCASE(<span class=\"string\">&#x27;ABC&#x27;</span>) <span class=\"operator\">|</span> <span class=\"built_in\">LOWER</span>(<span class=\"string\">&#x27;ABC&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+--------------+--------------+--------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> ABC          <span class=\"operator\">|</span> ABC          <span class=\"operator\">|</span> abc          <span class=\"operator\">|</span> abc          <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------+--------------+--------------+--------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 去除左右空格</span><br><span class=\"line\"><span class=\"keyword\">select</span> LENGTH(<span class=\"built_in\">TRIM</span>(<span class=\"string\">&#x27;  abc  &#x27;</span>)),LENGTH(LTRIM(<span class=\"string\">&#x27;  abc  &#x27;</span>)),LENGTH(RTRIM(<span class=\"string\">&#x27;  abc  &#x27;</span>))</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+--------------------------+--------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> LENGTH(<span class=\"built_in\">TRIM</span>(<span class=\"string\">&#x27;  abc  &#x27;</span>)) <span class=\"operator\">|</span> LENGTH(LTRIM(<span class=\"string\">&#x27;  abc  &#x27;</span>)) <span class=\"operator\">|</span> LENGTH(RTRIM(<span class=\"string\">&#x27;  abc  &#x27;</span>)) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+--------------------------+--------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3</span>                       <span class=\"operator\">|</span> <span class=\"number\">5</span>                        <span class=\"operator\">|</span> <span class=\"number\">5</span>                        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+--------------------------+--------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 返回指定数量的空格</span><br><span class=\"line\"><span class=\"keyword\">select</span> SPACE(<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> SPACE(<span class=\"number\">100</span>)                                                                                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------------------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span>                                                                                                      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------------------------------------------------------------------------------+</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"日期和时间函数\">日期和时间函数</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>时间格式符含义</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th style=\"text-align:left\">格式符</th>\n<th style=\"text-align:left\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">%Y</td>\n<td style=\"text-align:left\">四位的年份</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">%y</td>\n<td style=\"text-align:left\">2位的年份</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">%m</td>\n<td style=\"text-align:left\">月份（01,02，…11,12）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">%c</td>\n<td style=\"text-align:left\">月份（1,2,3…11,12）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">%d</td>\n<td style=\"text-align:left\">日（01,02，…）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">%H</td>\n<td style=\"text-align:left\">小时（24小时）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\">%h</td>\n<td style=\"text-align:left\">小时（12小时）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\">%i</td>\n<td style=\"text-align:left\">分钟（00,01，…59）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">9</td>\n<td style=\"text-align:left\">%s</td>\n<td style=\"text-align:left\">秒（00,01，…59）</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>获取当前日期和时间</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">CURDATE()或CURRENT_DATE()或CURRENT_DATE</td>\n<td style=\"text-align:left\">返回当前的日期</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CURTIME()或CURRENT_TIME()或CURTIME</td>\n<td style=\"text-align:left\">返回当前的时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">NOW()</td>\n<td style=\"text-align:left\">返回当前的日期和时间,%Y-%m-%d %H:%i:%s</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">current_timestamp()或current_timestamp或localtime或localtimestamp</td>\n<td style=\"text-align:left\">返回当前的日期和时间,%Y-%m-%d %H:%i:%s</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sysdate()</td>\n<td style=\"text-align:left\">返回当前的日期和时间,%Y-%m-%d %H:%i:%s</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> CURDATE(),<span class=\"built_in\">CURRENT_DATE</span>(),CURTIME(),<span class=\"built_in\">CURRENT_TIME</span>(),NOW(),<span class=\"built_in\">current_timestamp</span>()</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------+----------------+-----------+----------------+---------------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> CURDATE()  <span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_DATE</span>() <span class=\"operator\">|</span> CURTIME() <span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_TIME</span>() <span class=\"operator\">|</span> NOW()               <span class=\"operator\">|</span> <span class=\"built_in\">current_timestamp</span>() <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------+----------------+-----------+----------------+---------------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span>     <span class=\"operator\">|</span> <span class=\"number\">6</span>:<span class=\"number\">44</span>:<span class=\"number\">49</span>   <span class=\"operator\">|</span> <span class=\"number\">6</span>:<span class=\"number\">44</span>:<span class=\"number\">49</span>        <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">06</span>:<span class=\"number\">44</span>:<span class=\"number\">49</span> <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">06</span>:<span class=\"number\">44</span>:<span class=\"number\">49</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------+----------------+-----------+----------------+---------------------+---------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 也可以使用名称获取时间</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">current_timestamp</span>,<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"built_in\">CURRENT_TIME</span>,<span class=\"built_in\">localtime</span>,<span class=\"built_in\">localtimestamp</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+--------------+--------------+---------------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"built_in\">current_timestamp</span>   <span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_DATE</span> <span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_TIME</span> <span class=\"operator\">|</span> <span class=\"built_in\">localtime</span>           <span class=\"operator\">|</span> <span class=\"built_in\">localtimestamp</span>      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+--------------+--------------+---------------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">07</span>:<span class=\"number\">11</span>:<span class=\"number\">54</span> <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span>   <span class=\"operator\">|</span> <span class=\"number\">7</span>:<span class=\"number\">11</span>:<span class=\"number\">54</span>      <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">07</span>:<span class=\"number\">11</span>:<span class=\"number\">54</span> <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">07</span>:<span class=\"number\">11</span>:<span class=\"number\">54</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+--------------+--------------+---------------------+---------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 获得当前 UTC 日期时间函数，now()调用的是系统本地时间，因为我国位于东八时区，所以本地时间 <span class=\"operator\">=</span> UTC 时间 <span class=\"operator\">+</span> <span class=\"number\">8</span> 小时</span><br><span class=\"line\"><span class=\"keyword\">select</span> utc_timestamp(), utc_date(), utc_time(),now();</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+------------+------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> utc_timestamp()     <span class=\"operator\">|</span> utc_date() <span class=\"operator\">|</span> utc_time() <span class=\"operator\">|</span> now()               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+------------+------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">07</span>:<span class=\"number\">16</span>:<span class=\"number\">43</span> <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"operator\">|</span> <span class=\"number\">7</span>:<span class=\"number\">16</span>:<span class=\"number\">43</span>    <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">15</span>:<span class=\"number\">16</span>:<span class=\"number\">43</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+------------+------------+---------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>日期增加或减少</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">DATE_ADD(date,INTERVAL int keyword)</td>\n<td style=\"text-align:left\">返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH);</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DATE_SUB(date,INTERVAL int keyword)</td>\n<td style=\"text-align:left\">返回日期date减去间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH);</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>keyword: YEAR,MONTH,DAY,HOUR,MINUTE,SECOND,WEEK,QUARTER,MICROSECOND</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> DATE_ADD(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">YEAR</span>),DATE_ADD(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">MONTH</span>),DATE_ADD(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">DAY</span>),DATE_SUB(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">YEAR</span>),DATE_SUB(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">MONTH</span>),DATE_SUB(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">DAY</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> DATE_ADD(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">YEAR</span>) <span class=\"operator\">|</span> DATE_ADD(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">MONTH</span>) <span class=\"operator\">|</span> DATE_ADD(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">DAY</span>) <span class=\"operator\">|</span> DATE_SUB(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">YEAR</span>) <span class=\"operator\">|</span> DATE_SUB(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">MONTH</span>) <span class=\"operator\">|</span> DATE_SUB(<span class=\"built_in\">CURRENT_DATE</span>,<span class=\"type\">INTERVAL</span> <span class=\"number\">6</span> <span class=\"keyword\">DAY</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2028</span><span class=\"number\">-10</span><span class=\"number\">-26</span>                             <span class=\"operator\">|</span> <span class=\"number\">2023</span><span class=\"number\">-04</span><span class=\"number\">-26</span>                              <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-11</span><span class=\"number\">-01</span>                            <span class=\"operator\">|</span> <span class=\"number\">2016</span><span class=\"number\">-10</span><span class=\"number\">-26</span>                             <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-04</span><span class=\"number\">-26</span>                              <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-20</span>                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>两个日期比较</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">datediff(date1,date2)</td>\n<td style=\"text-align:left\">两个日期相减</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">timediff(time1,time2)</td>\n<td style=\"text-align:left\">两个时间相减</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">timestampdiff(unit,datetime1,datetime2)</td>\n<td style=\"text-align:left\">两个时间相差的unit声明的间隔</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>unit: year,month,day,hour,minute,second,week,QUARTER</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 比较日期，时间的差值</span><br><span class=\"line\"><span class=\"keyword\">select</span> datediff(<span class=\"string\">&#x27;2022-08-08&#x27;</span>, <span class=\"string\">&#x27;2022-08-01&#x27;</span>),timediff(<span class=\"string\">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class=\"string\">&#x27;2022-08-08 00:00:00&#x27;</span>),timediff(<span class=\"string\">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class=\"string\">&#x27;2022-08-07 00:00:00&#x27;</span>),timediff(<span class=\"string\">&#x27;08:08:0&#x27;</span>, <span class=\"string\">&#x27;00:00:00&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> datediff(<span class=\"string\">&#x27;2022-08-08&#x27;</span>, <span class=\"string\">&#x27;2022-08-01&#x27;</span>) <span class=\"operator\">|</span> timediff(<span class=\"string\">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class=\"string\">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class=\"operator\">|</span> timediff(<span class=\"string\">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class=\"string\">&#x27;2022-08-07 00:00:00&#x27;</span>) <span class=\"operator\">|</span> timediff(<span class=\"string\">&#x27;08:08:0&#x27;</span>, <span class=\"string\">&#x27;00:00:00&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">7</span>                                    <span class=\"operator\">|</span> <span class=\"number\">8</span>:<span class=\"number\">08</span>:<span class=\"number\">00</span>                                               <span class=\"operator\">|</span> <span class=\"number\">1</span> <span class=\"keyword\">day</span>, <span class=\"number\">8</span>:<span class=\"number\">08</span>:<span class=\"number\">00</span>                                        <span class=\"operator\">|</span> <span class=\"number\">8</span>:<span class=\"number\">08</span>:<span class=\"number\">00</span>                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 比较日期的相差的年，月，日数</span><br><span class=\"line\"><span class=\"keyword\">select</span> timestampdiff(<span class=\"keyword\">year</span>,<span class=\"string\">&#x27;2022-05-01&#x27;</span>,<span class=\"string\">&#x27;2021-05-01&#x27;</span>),timestampdiff(<span class=\"keyword\">month</span>,<span class=\"string\">&#x27;2022-05-01&#x27;</span>,<span class=\"string\">&#x27;2021-05-01&#x27;</span>),timestampdiff(<span class=\"keyword\">day</span>,<span class=\"string\">&#x27;2022-05-01&#x27;</span>,<span class=\"string\">&#x27;2021-05-01&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------------+------------------------------------------------+----------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> timestampdiff(<span class=\"keyword\">year</span>,<span class=\"string\">&#x27;2022-05-01&#x27;</span>,<span class=\"string\">&#x27;2021-05-01&#x27;</span>) <span class=\"operator\">|</span> timestampdiff(<span class=\"keyword\">month</span>,<span class=\"string\">&#x27;2022-05-01&#x27;</span>,<span class=\"string\">&#x27;2021-05-01&#x27;</span>) <span class=\"operator\">|</span> timestampdiff(<span class=\"keyword\">day</span>,<span class=\"string\">&#x27;2022-05-01&#x27;</span>,<span class=\"string\">&#x27;2021-05-01&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------------+------------------------------------------------+----------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">-1</span>                                            <span class=\"operator\">|</span> <span class=\"number\">-12</span>                                            <span class=\"operator\">|</span> <span class=\"number\">-365</span>                                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------------+------------------------------------------------+----------------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 比较日期的相差的小时，分钟，秒数</span><br><span class=\"line\"><span class=\"keyword\">select</span> timestampdiff(<span class=\"keyword\">hour</span>,<span class=\"string\">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class=\"string\">&#x27;2022-08-08 00:00:00&#x27;</span>),timestampdiff(<span class=\"keyword\">minute</span>,<span class=\"string\">&#x27;2022-08-08 08:08:0&#x27;</span>, <span class=\"string\">&#x27;2022-08-08 00:00:00&#x27;</span>),timestampdiff(<span class=\"keyword\">second</span>,<span class=\"string\">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class=\"string\">&#x27;2022-08-08 00:00:00&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> timestampdiff(<span class=\"keyword\">hour</span>,<span class=\"string\">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class=\"string\">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class=\"operator\">|</span> timestampdiff(<span class=\"keyword\">minute</span>,<span class=\"string\">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class=\"string\">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class=\"operator\">|</span> timestampdiff(<span class=\"keyword\">second</span>,<span class=\"string\">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class=\"string\">&#x27;2022-08-08 00:00:00&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">-8</span>                                                              <span class=\"operator\">|</span> <span class=\"number\">-488</span>                                                              <span class=\"operator\">|</span> <span class=\"number\">-29280</span>                                                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 比较日期的相差的周，季度数</span><br><span class=\"line\"><span class=\"keyword\">select</span> timestampdiff(week,<span class=\"string\">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class=\"string\">&#x27;2022-08-01 00:00:00&#x27;</span>),timestampdiff(QUARTER,<span class=\"string\">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class=\"string\">&#x27;2022-05-01 00:00:00&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------------------------------+--------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> timestampdiff(week,<span class=\"string\">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class=\"string\">&#x27;2022-08-01 00:00:00&#x27;</span>) <span class=\"operator\">|</span> timestampdiff(QUARTER,<span class=\"string\">&#x27;2022-08-08 08:08:00&#x27;</span>, <span class=\"string\">&#x27;2022-05-01 00:00:00&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------------------------------+--------------------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">-1</span>                                                              <span class=\"operator\">|</span> <span class=\"number\">-1</span>                                                                 <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------------------------------+--------------------------------------------------------------------+</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>日期或时间拆分</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">DAYOFWEEK(date)</td>\n<td style=\"text-align:left\">返回date所代表的一星期中的第几天(1~7)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DAYOFMONTH(date)或者DAY(date)</td>\n<td style=\"text-align:left\">返回date是一个月的第几天(1~31)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DAYOFYEAR(date)</td>\n<td style=\"text-align:left\">返回date是一年的第几天(1~366)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DAYNAME(date)</td>\n<td style=\"text-align:left\">返回date的星期名，如：SELECT DAYNAME(CURRENT_DATE);</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MONTHNAME(date)</td>\n<td style=\"text-align:left\">返回date的月份名，如：SELECT MONTHNAME(CURRENT_DATE);</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">QUARTER(date)</td>\n<td style=\"text-align:left\">返回date在一年中的季度(1~4)，如SELECT QUARTER(CURRENT_DATE);</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">CURRENT_DATE</span>(),DAYOFWEEK(<span class=\"built_in\">CURRENT_DATE</span>),DAYOFMONTH(<span class=\"built_in\">CURRENT_DATE</span>),DAYOFYEAR(<span class=\"built_in\">CURRENT_DATE</span>),DAYNAME(<span class=\"built_in\">CURRENT_DATE</span>),QUARTER(<span class=\"built_in\">CURRENT_DATE</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_DATE</span>() <span class=\"operator\">|</span> DAYOFWEEK(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> DAYOFMONTH(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> DAYOFYEAR(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> DAYNAME(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> QUARTER(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span>     <span class=\"operator\">|</span> <span class=\"number\">4</span>                       <span class=\"operator\">|</span> <span class=\"number\">26</span>                       <span class=\"operator\">|</span> <span class=\"number\">299</span>                     <span class=\"operator\">|</span> Wednesday             <span class=\"operator\">|</span> <span class=\"number\">4</span>                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">WEEK(date)或weekofyear(date)</td>\n<td style=\"text-align:left\">返回日期date为一年中第几周(0~53)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">YEAR(date)</td>\n<td style=\"text-align:left\">返回日期date的年份(1000~9999)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MONTH(date)</td>\n<td style=\"text-align:left\">返回date的月份值(1~12)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DAY(date)</td>\n<td style=\"text-align:left\">返回date是一个月的第几天(1~31)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">dayofweek(date)</td>\n<td style=\"text-align:left\">返回date是一周的第几天(1~7)，（1 = Sunday, 2 = Monday, …, 7 = Saturday）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">weekday()</td>\n<td style=\"text-align:left\">返回date是一周的第几天(0~6)，(0 = Monday, 1 = Tuesday, …, 6 = Sunday)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">HOUR(time)</td>\n<td style=\"text-align:left\">返回time的小时值(0~23)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MINUTE(time)</td>\n<td style=\"text-align:left\">返回time的分钟值(0~59)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SECOND(time)</td>\n<td style=\"text-align:left\">返回time的秒数值(0~59)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">microsecond(time)</td>\n<td style=\"text-align:left\">返回微秒</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">LAST_DAY(date)</td>\n<td style=\"text-align:left\">返回date所属月份的最后一天</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> now(),WEEK(<span class=\"built_in\">CURRENT_DATE</span>),<span class=\"keyword\">YEAR</span>(<span class=\"built_in\">CURRENT_DATE</span>),<span class=\"keyword\">MONTH</span>(<span class=\"built_in\">CURRENT_DATE</span>),<span class=\"keyword\">DAY</span>(<span class=\"built_in\">CURRENT_DATE</span>),<span class=\"keyword\">HOUR</span>(<span class=\"built_in\">CURRENT_TIME</span>),<span class=\"keyword\">MINUTE</span>(<span class=\"built_in\">CURRENT_TIME</span>),<span class=\"keyword\">SECOND</span>(<span class=\"built_in\">CURRENT_TIME</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> now()               <span class=\"operator\">|</span> WEEK(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> <span class=\"keyword\">YEAR</span>(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> <span class=\"keyword\">MONTH</span>(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> <span class=\"keyword\">DAY</span>(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> <span class=\"keyword\">HOUR</span>(<span class=\"built_in\">CURRENT_TIME</span>) <span class=\"operator\">|</span> <span class=\"keyword\">MINUTE</span>(<span class=\"built_in\">CURRENT_TIME</span>) <span class=\"operator\">|</span> <span class=\"keyword\">SECOND</span>(<span class=\"built_in\">CURRENT_TIME</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">07</span>:<span class=\"number\">31</span>:<span class=\"number\">03</span> <span class=\"operator\">|</span> <span class=\"number\">43</span>                 <span class=\"operator\">|</span> <span class=\"number\">2022</span>               <span class=\"operator\">|</span> <span class=\"number\">10</span>                  <span class=\"operator\">|</span> <span class=\"number\">26</span>                <span class=\"operator\">|</span> <span class=\"number\">7</span>                  <span class=\"operator\">|</span> <span class=\"number\">31</span>                   <span class=\"operator\">|</span> <span class=\"number\">3</span>                    <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> microsecond(<span class=\"string\">&#x27;2022-10-22 07:15:30.123456&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> microsecond(<span class=\"string\">&#x27;2022-10-22 07:15:30.123456&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">123456</span>                                    <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> MONTHNAME(<span class=\"built_in\">CURRENT_DATE</span>),DAYNAME(<span class=\"built_in\">CURRENT_DATE</span>),LAST_DAY(<span class=\"built_in\">CURRENT_DATE</span>),LAST_DAY(<span class=\"string\">&#x27;2022-02-01&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-----------------------+------------------------+------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> MONTHNAME(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> DAYNAME(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> LAST_DAY(<span class=\"built_in\">CURRENT_DATE</span>) <span class=\"operator\">|</span> LAST_DAY(<span class=\"string\">&#x27;2022-02-01&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-----------------------+------------------------+------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> October                 <span class=\"operator\">|</span> Wednesday             <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-31</span>             <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-02</span><span class=\"number\">-28</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-----------------------+------------------------+------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 返回当前月份有多少天</span><br><span class=\"line\"><span class=\"keyword\">select</span> now(), <span class=\"keyword\">day</span>(last_day(now())) <span class=\"keyword\">as</span> days;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> now()               <span class=\"operator\">|</span> days <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">07</span>:<span class=\"number\">34</span>:<span class=\"number\">22</span> <span class=\"operator\">|</span> <span class=\"number\">31</span>   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 返回当天是一周中的第几天，注意dayofweek与weekday的区别</span><br><span class=\"line\"><span class=\"keyword\">select</span> now(),dayofweek(now()),weekday(now()),DAYNAME(now())</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+------------------+----------------+----------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> now()               <span class=\"operator\">|</span> dayofweek(now()) <span class=\"operator\">|</span> weekday(now()) <span class=\"operator\">|</span> DAYNAME(now()) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+------------------+----------------+----------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">07</span>:<span class=\"number\">48</span>:<span class=\"number\">48</span> <span class=\"operator\">|</span> <span class=\"number\">4</span>                <span class=\"operator\">|</span> <span class=\"number\">2</span>              <span class=\"operator\">|</span> Wednesday      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+------------------+----------------+----------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>extract(unit from date)</code>函数，也可是实现日期、时间拆分的目的</p>\n<blockquote>\n<p>unit支持的内容：<br>\nyear,quarter,month,week,day,hour,minute,second,microsecond,day_hour,day_minute,day_second,day_microsecond,hour_minute,hour_second,hour_microsecond,minute_second,minute_microsecond,second_microsecond</p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">extract</span>(<span class=\"keyword\">year</span> <span class=\"keyword\">from</span> now()),<span class=\"built_in\">extract</span>(<span class=\"keyword\">month</span> <span class=\"keyword\">from</span> now()),<span class=\"built_in\">extract</span>(<span class=\"keyword\">day</span> <span class=\"keyword\">from</span> now()),<span class=\"built_in\">extract</span>(<span class=\"keyword\">hour</span> <span class=\"keyword\">from</span> now()),<span class=\"built_in\">extract</span>(<span class=\"keyword\">minute</span> <span class=\"keyword\">from</span> now()),<span class=\"built_in\">extract</span>(<span class=\"keyword\">second</span> <span class=\"keyword\">from</span> now())</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+---------------------------+-------------------------+--------------------------+----------------------------+----------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"built_in\">extract</span>(<span class=\"keyword\">year</span> <span class=\"keyword\">from</span> now()) <span class=\"operator\">|</span> <span class=\"built_in\">extract</span>(<span class=\"keyword\">month</span> <span class=\"keyword\">from</span> now()) <span class=\"operator\">|</span> <span class=\"built_in\">extract</span>(<span class=\"keyword\">day</span> <span class=\"keyword\">from</span> now()) <span class=\"operator\">|</span> <span class=\"built_in\">extract</span>(<span class=\"keyword\">hour</span> <span class=\"keyword\">from</span> now()) <span class=\"operator\">|</span> <span class=\"built_in\">extract</span>(<span class=\"keyword\">minute</span> <span class=\"keyword\">from</span> now()) <span class=\"operator\">|</span> <span class=\"built_in\">extract</span>(<span class=\"keyword\">second</span> <span class=\"keyword\">from</span> now()) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+---------------------------+-------------------------+--------------------------+----------------------------+----------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span>                     <span class=\"operator\">|</span> <span class=\"number\">10</span>                        <span class=\"operator\">|</span> <span class=\"number\">27</span>                      <span class=\"operator\">|</span> <span class=\"number\">4</span>                        <span class=\"operator\">|</span> <span class=\"number\">7</span>                          <span class=\"operator\">|</span> <span class=\"number\">24</span>                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------+---------------------------+-------------------------+--------------------------+----------------------------+----------------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>日期和时间的格式化</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">DATE_FORMAT(date,fmt)</td>\n<td style=\"text-align:left\">依照指定的fmt格式格式化日期date值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TIME_FORMAT(time,fmt)</td>\n<td style=\"text-align:left\">依照字符串fmt格式化时间time值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">STR_TO_DATE(str, fmt)</td>\n<td style=\"text-align:left\">将某种格式的日期字符串转换为标准格式 %Y-%m-%d %H:%i:%s</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">unix_timestamp()</td>\n<td style=\"text-align:left\">获取当前日期的unix时间戳</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">unix_timestamp(date)</td>\n<td style=\"text-align:left\">获取指定日期的unix时间戳</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">FROM_UNIXTIME(ts)</td>\n<td style=\"text-align:left\">使用标准格式 %Y-%m-%d %H:%i:%s格式化UNIX时间戳ts</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">FROM_UNIXTIME(ts,fmt)</td>\n<td style=\"text-align:left\">根据指定的fmt格式，格式化UNIX时间戳ts</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT({DATE</td>\n<td style=\"text-align:left\">TIME</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> DATE_FORMAT(now(),<span class=\"string\">&#x27;%Y/%m/%d %H:%i:%s&#x27;</span>),DATE_FORMAT(<span class=\"string\">&#x27;2022-10-22&#x27;</span>,<span class=\"string\">&#x27;%Y年%m月%d日&#x27;</span>),TIME_FORMAT(<span class=\"string\">&#x27;12:23:24&#x27;</span>,<span class=\"string\">&#x27;%H_%i_%s&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------+------------------------------------------+------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> DATE_FORMAT(now(),<span class=\"string\">&#x27;%Y/%m/%d %H:%i:%s&#x27;</span>) <span class=\"operator\">|</span> DATE_FORMAT(<span class=\"string\">&#x27;2022-10-22&#x27;</span>,<span class=\"string\">&#x27;%Y年%m月%d日&#x27;</span>) <span class=\"operator\">|</span> TIME_FORMAT(<span class=\"string\">&#x27;12:23:24&#x27;</span>,<span class=\"string\">&#x27;%H_%i_%s&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------+------------------------------------------+------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"operator\">/</span><span class=\"number\">10</span><span class=\"operator\">/</span><span class=\"number\">26</span> <span class=\"number\">10</span>:<span class=\"number\">03</span>:<span class=\"number\">00</span>                    <span class=\"operator\">|</span> <span class=\"number\">2022</span>年<span class=\"number\">10</span>月<span class=\"number\">22</span>日                           <span class=\"operator\">|</span> <span class=\"number\">12</span>_23_24                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------------+------------------------------------------+------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> STR_TO_DATE(<span class=\"string\">&#x27;08/09/2022&#x27;</span>, <span class=\"string\">&#x27;%m/%d/%Y&#x27;</span>),str_to_date(<span class=\"string\">&#x27;08.09.2022 08:09:30&#x27;</span>, <span class=\"string\">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------------------+---------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> STR_TO_DATE(<span class=\"string\">&#x27;08/09/2022&#x27;</span>, <span class=\"string\">&#x27;%m/%d/%Y&#x27;</span>) <span class=\"operator\">|</span> str_to_date(<span class=\"string\">&#x27;08.09.2022 08:09:30&#x27;</span>, <span class=\"string\">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------------------+---------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-08</span><span class=\"number\">-09</span>                            <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-08</span><span class=\"number\">-09</span> <span class=\"number\">08</span>:<span class=\"number\">09</span>:<span class=\"number\">30</span>                                     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------------------+---------------------------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> unix_timestamp(),unix_timestamp(now()),unix_timestamp(<span class=\"string\">&#x27;2022-08-09 08:09:30&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------+-----------------------+---------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> unix_timestamp() <span class=\"operator\">|</span> unix_timestamp(now()) <span class=\"operator\">|</span> unix_timestamp(<span class=\"string\">&#x27;2022-08-09 08:09:30&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------+-----------------------+---------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1666773064</span>       <span class=\"operator\">|</span> <span class=\"number\">1666773064</span>            <span class=\"operator\">|</span> <span class=\"number\">1660032570</span>                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------+-----------------------+---------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> FROM_UNIXTIME(<span class=\"number\">1666773064</span>),FROM_UNIXTIME(<span class=\"number\">1666773064</span>,<span class=\"string\">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------+-----------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> FROM_UNIXTIME(<span class=\"number\">1666773064</span>) <span class=\"operator\">|</span> FROM_UNIXTIME(<span class=\"number\">1666773064</span>,<span class=\"string\">&#x27;%m.%d.%Y %h:%i:%s&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------+-----------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-10</span><span class=\"number\">-26</span> <span class=\"number\">08</span>:<span class=\"number\">31</span>:<span class=\"number\">04</span>       <span class=\"operator\">|</span> <span class=\"number\">10.26</span><span class=\"number\">.2022</span> <span class=\"number\">08</span>:<span class=\"number\">31</span>:<span class=\"number\">04</span>                           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------+-----------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">DATE(date)</td>\n<td style=\"text-align:left\">输出格式：2022-11-23</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TIMESTAMP(datetime)</td>\n<td style=\"text-align:left\">输出格式：2022-11-23 07:44:48</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"type\">date</span>(<span class=\"string\">&#x27;2022-11-23 07:44:48&#x27;</span>),<span class=\"type\">date</span>(now()),<span class=\"type\">timestamp</span>(<span class=\"string\">&#x27;2022-11-23 07:44:48&#x27;</span>),<span class=\"type\">timestamp</span>(now())</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------+-------------+----------------------------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"type\">date</span>(<span class=\"string\">&#x27;2022-11-23 07:44:48&#x27;</span>) <span class=\"operator\">|</span> <span class=\"type\">date</span>(now()) <span class=\"operator\">|</span> <span class=\"type\">timestamp</span>(<span class=\"string\">&#x27;2022-11-23 07:44:48&#x27;</span>) <span class=\"operator\">|</span> <span class=\"type\">timestamp</span>(now())    <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------+-------------+----------------------------------+---------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-11</span><span class=\"number\">-23</span>                  <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-11</span><span class=\"number\">-23</span>  <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-11</span><span class=\"number\">-23</span> <span class=\"number\">07</span>:<span class=\"number\">44</span>:<span class=\"number\">48</span>              <span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-11</span><span class=\"number\">-23</span> <span class=\"number\">07</span>:<span class=\"number\">57</span>:<span class=\"number\">11</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------+-------------+----------------------------------+---------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>日期、时间转换函数</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">time_to_sec(time)</td>\n<td style=\"text-align:left\">时间转换为秒</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sec_to_time(seconds)</td>\n<td style=\"text-align:left\">秒转换为时间</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">to_days(date)</td>\n<td style=\"text-align:left\">日期转换为天数，距离0000-00-00到现在的天数，建议使用4位年份</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">from_days(days)</td>\n<td style=\"text-align:left\">天数转换为日期</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 年份不是<span class=\"number\">2</span>位时，以实际年份值为准</span><br><span class=\"line\"><span class=\"keyword\">select</span> to_days(<span class=\"string\">&#x27;0000-00-00&#x27;</span>),to_days(<span class=\"string\">&#x27;0000-01-01&#x27;</span>),to_days(<span class=\"string\">&#x27;1-01-01&#x27;</span>),to_days(<span class=\"string\">&#x27;100-01-01&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------+-----------------------+--------------------+----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> to_days(<span class=\"string\">&#x27;0000-00-00&#x27;</span>) <span class=\"operator\">|</span> to_days(<span class=\"string\">&#x27;0000-01-01&#x27;</span>) <span class=\"operator\">|</span> to_days(<span class=\"string\">&#x27;1-01-01&#x27;</span>) <span class=\"operator\">|</span> to_days(<span class=\"string\">&#x27;100-01-01&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------+-----------------------+--------------------+----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>                <span class=\"operator\">|</span> <span class=\"number\">1</span>                     <span class=\"operator\">|</span> <span class=\"number\">366</span>                <span class=\"operator\">|</span> <span class=\"number\">36525</span>                <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------+-----------------------+--------------------+----------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 年份是<span class=\"number\">2</span>位时，默认前面加上<span class=\"number\">20</span>，建议使用<span class=\"number\">4</span>位年份</span><br><span class=\"line\"><span class=\"keyword\">select</span> to_days(<span class=\"string\">&#x27;00-01-01&#x27;</span>),to_days(<span class=\"string\">&#x27;10-01-01&#x27;</span>),to_days(<span class=\"string\">&#x27;2010-01-01&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+---------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> to_days(<span class=\"string\">&#x27;00-01-01&#x27;</span>) <span class=\"operator\">|</span> to_days(<span class=\"string\">&#x27;10-01-01&#x27;</span>) <span class=\"operator\">|</span> to_days(<span class=\"string\">&#x27;2010-01-01&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+---------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">730485</span>              <span class=\"operator\">|</span> <span class=\"number\">734138</span>              <span class=\"operator\">|</span> <span class=\"number\">734138</span>                <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------+---------------------+-----------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 时间与秒相互转</span><br><span class=\"line\"><span class=\"keyword\">select</span> time_to_sec(<span class=\"string\">&#x27;01:00:05&#x27;</span>),sec_to_time(<span class=\"number\">3605</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> time_to_sec(<span class=\"string\">&#x27;01:00:05&#x27;</span>) <span class=\"operator\">|</span> sec_to_time(<span class=\"number\">3605</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">3605</span>                    <span class=\"operator\">|</span> <span class=\"number\">1</span>:<span class=\"number\">00</span>:<span class=\"number\">05</span>           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------+-------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>时区转换</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">convert_tz(date,from_timezone,to_timezone)</td>\n<td style=\"text-align:left\">将date从from_timezone转换为to_timezone</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> convert_tz(<span class=\"string\">&#x27;2022-08-08 12:00:00&#x27;</span>, <span class=\"string\">&#x27;+08:00&#x27;</span>, <span class=\"string\">&#x27;+00:00&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> convert_tz(<span class=\"string\">&#x27;2022-08-08 12:00:00&#x27;</span>, <span class=\"string\">&#x27;+08:00&#x27;</span>, <span class=\"string\">&#x27;+00:00&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-08</span><span class=\"number\">-08</span> <span class=\"number\">04</span>:<span class=\"number\">00</span>:<span class=\"number\">00</span>                                   <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>拼凑日期、时间函数</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">makdedate(year,dayofyear)</td>\n<td style=\"text-align:left\">拼接日期，year年份，dayofyear一年中的第几天</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">maketime(hour,minute,second)</td>\n<td style=\"text-align:left\">拼接时间，hour小时,minute分钟,second秒</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> makedate(<span class=\"number\">2022</span>,<span class=\"number\">31</span>),maketime(<span class=\"number\">12</span>,<span class=\"number\">15</span>,<span class=\"number\">30</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> makedate(<span class=\"number\">2022</span>,<span class=\"number\">31</span>) <span class=\"operator\">|</span> maketime(<span class=\"number\">12</span>,<span class=\"number\">15</span>,<span class=\"number\">30</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+--------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2022</span><span class=\"number\">-01</span><span class=\"number\">-31</span>        <span class=\"operator\">|</span> <span class=\"number\">12</span>:<span class=\"number\">15</span>:<span class=\"number\">30</span>           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+--------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>获得国家地区的时间格式字符串</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT({DATE</td>\n<td style=\"text-align:left\">TIME</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> GET_FORMAT(<span class=\"type\">DATE</span>,<span class=\"string\">&#x27;USA&#x27;</span>),GET_FORMAT(DATETIME,<span class=\"string\">&#x27;USA&#x27;</span>),GET_FORMAT(<span class=\"type\">TIME</span>,<span class=\"string\">&#x27;USA&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+----------------------------+------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> GET_FORMAT(<span class=\"type\">DATE</span>,<span class=\"string\">&#x27;USA&#x27;</span>) <span class=\"operator\">|</span> GET_FORMAT(DATETIME,<span class=\"string\">&#x27;USA&#x27;</span>) <span class=\"operator\">|</span> GET_FORMAT(<span class=\"type\">TIME</span>,<span class=\"string\">&#x27;USA&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+----------------------------+------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">%</span>m.<span class=\"operator\">%</span>d.<span class=\"operator\">%</span>Y               <span class=\"operator\">|</span> <span class=\"operator\">%</span>Y<span class=\"operator\">-</span><span class=\"operator\">%</span>m<span class=\"operator\">-</span><span class=\"operator\">%</span>d <span class=\"operator\">%</span>H.<span class=\"operator\">%</span>i.<span class=\"operator\">%</span>s          <span class=\"operator\">|</span> <span class=\"operator\">%</span>h:<span class=\"operator\">%</span>i:<span class=\"operator\">%</span>s <span class=\"operator\">%</span>p            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------+----------------------------+------------------------+</span></span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数调用</th>\n<th style=\"text-align:left\">结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATE,‘USA’)</td>\n<td style=\"text-align:left\">‘%m.%d.%Y’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATE,‘JIS’)</td>\n<td style=\"text-align:left\">‘%Y-%m-%d’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATE,‘ISO’)</td>\n<td style=\"text-align:left\">‘%Y-%m-%d’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATE,‘EUR’)</td>\n<td style=\"text-align:left\">‘%d.%m.%Y’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATE,‘INTERNAL’)</td>\n<td style=\"text-align:left\">‘%Y%m%d’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATETIME,‘USA’)</td>\n<td style=\"text-align:left\">‘%Y-%m-%d %H.%i.%s’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATETIME,‘JIS’)</td>\n<td style=\"text-align:left\">‘%Y-%m-%d %H:%i:%s’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATETIME,‘ISO’)</td>\n<td style=\"text-align:left\">‘%Y-%m-%d %H:%i:%s’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATETIME,‘EUR’)</td>\n<td style=\"text-align:left\">‘%Y-%m-%d %H.%i.%s’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(DATETIME,‘INTERNAL’)</td>\n<td style=\"text-align:left\">‘%Y%m%d%H%i%s’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(TIME,‘USA’)</td>\n<td style=\"text-align:left\">‘%h:%i:%s %p’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(TIME,‘JIS’)</td>\n<td style=\"text-align:left\">‘%H:%i:%s’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(TIME,‘ISO’)</td>\n<td style=\"text-align:left\">‘%H:%i:%s’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(TIME,‘EUR’)</td>\n<td style=\"text-align:left\">‘%H.%i.%s’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GET_FORMAT(TIME,‘INTERNAL’)</td>\n<td style=\"text-align:left\">‘%H%i%s’</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"加密函数\">加密函数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">AES_ENCRYPT(str,key)</td>\n<td style=\"text-align:left\">使用AES加密,返回用密钥key对字符串str利用高级加密标准算法加密后的结果，调用AES_ENCRYPT的结果是一个二进制字符串，以BLOB类型存储</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">AES_DECRYPT(str,key)</td>\n<td style=\"text-align:left\">使用AES解密,返回用密钥key对字符串str利用高级加密标准算法解密后的结果</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MD5(str)</td>\n<td style=\"text-align:left\">计算字符串str的MD5校验和</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SHA(str),SHA1(str)</td>\n<td style=\"text-align:left\">计算字符串str的安全散列算法(SHA)校验和</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SHA2(str)</td>\n<td style=\"text-align:left\">计算字符串str的安全散列算法(SHA2)校验和</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> AES_ENCRYPT(<span class=\"string\">&#x27;123456&#x27;</span>,<span class=\"string\">&#x27;abc&#x27;</span>),AES_DECRYPT(AES_ENCRYPT(<span class=\"string\">&#x27;123456&#x27;</span>,<span class=\"string\">&#x27;abc&#x27;</span>),<span class=\"string\">&#x27;abc&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------------+------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> AES_ENCRYPT(<span class=\"string\">&#x27;123456&#x27;</span>,<span class=\"string\">&#x27;abc&#x27;</span>)        <span class=\"operator\">|</span> AES_DECRYPT(AES_ENCRYPT(<span class=\"string\">&#x27;123456&#x27;</span>,<span class=\"string\">&#x27;abc&#x27;</span>),<span class=\"string\">&#x27;abc&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------------+------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">0xe46cef3cb055471402ea4dfb7249cb32</span> <span class=\"operator\">|</span> <span class=\"number\">123456</span>                                         <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">------------------------------------+------------------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 不可逆</span><br><span class=\"line\"><span class=\"keyword\">select</span> MD5(<span class=\"string\">&#x27;123456&#x27;</span>),SHA(<span class=\"string\">&#x27;123456&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------+------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> MD5(<span class=\"string\">&#x27;123456&#x27;</span>)                    <span class=\"operator\">|</span> SHA(<span class=\"string\">&#x27;123456&#x27;</span>)                            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------+------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> e10adc3949ba59abbe56e057f20f883e <span class=\"operator\">|</span> <span class=\"number\">7</span>c4a8d09ca3762af61e59520943dc26494f8941b <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------------------+------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"信息函数\">信息函数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">USER(),SESSION_USER(),SYSTEM_USER()</td>\n<td style=\"text-align:left\">客户端提供的用户名和主机名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CURRENT_USER(),CURRENT_USER</td>\n<td style=\"text-align:left\">经过身份验证的用户名和主机名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DATABASE(),SCHEMA()</td>\n<td style=\"text-align:left\">返回默认（当前）数据库名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">VERSION()</td>\n<td style=\"text-align:left\">返回指示MySQL服务器版本的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ICU_VERSION()</td>\n<td style=\"text-align:left\">Unicode国际组件（ICU）库的版本,用于支持正则表达式操作</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CONNECTION_ID()</td>\n<td style=\"text-align:left\">返回连接的连接ID（线程ID）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CHARSET(x)</td>\n<td style=\"text-align:left\">查询x的存储字符集</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">COLLATION(x)</td>\n<td style=\"text-align:left\">查询x的排序字符集</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">user</span>(),<span class=\"built_in\">SESSION_USER</span>(),<span class=\"built_in\">SYSTEM_USER</span>(),<span class=\"built_in\">CURRENT_USER</span>(),<span class=\"built_in\">CURRENT_USER</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+-------------------+-------------------+----------------+--------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">user</span>()            <span class=\"operator\">|</span> <span class=\"built_in\">SESSION_USER</span>()    <span class=\"operator\">|</span> <span class=\"built_in\">SYSTEM_USER</span>()     <span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_USER</span>() <span class=\"operator\">|</span> <span class=\"built_in\">CURRENT_USER</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+-------------------+-------------------+----------------+--------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> root<span class=\"variable\">@1</span><span class=\"number\">.119</span><span class=\"number\">.151</span><span class=\"number\">.30</span> <span class=\"operator\">|</span> root<span class=\"variable\">@1</span><span class=\"number\">.119</span><span class=\"number\">.151</span><span class=\"number\">.30</span> <span class=\"operator\">|</span> root<span class=\"variable\">@1</span><span class=\"number\">.119</span><span class=\"number\">.151</span><span class=\"number\">.30</span> <span class=\"operator\">|</span> root@<span class=\"operator\">%</span>         <span class=\"operator\">|</span> root@<span class=\"operator\">%</span>       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-------------------+-------------------+-------------------+----------------+--------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> version(),database(),schema(),ICU_VERSION(),CONNECTION_ID()</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+------------+----------+---------------+-----------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> version() <span class=\"operator\">|</span> database() <span class=\"operator\">|</span> schema() <span class=\"operator\">|</span> ICU_VERSION() <span class=\"operator\">|</span> CONNECTION_ID() <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+------------+----------+---------------+-----------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">8.0</span><span class=\"number\">.30</span>    <span class=\"operator\">|</span> test       <span class=\"operator\">|</span> test     <span class=\"operator\">|</span> <span class=\"number\">69.1</span>          <span class=\"operator\">|</span> <span class=\"number\">138</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+------------+----------+---------------+-----------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> CHARSET(<span class=\"string\">&#x27;abc&#x27;</span>),CHARSET(<span class=\"number\">1010</span>),CHARSET(<span class=\"number\">0x1010</span>),<span class=\"keyword\">COLLATION</span>(<span class=\"string\">&#x27;abc&#x27;</span>),<span class=\"keyword\">COLLATION</span>(<span class=\"number\">1010</span>),<span class=\"keyword\">COLLATION</span>(<span class=\"number\">0x1010</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+---------------+-----------------+--------------------+-----------------+-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> CHARSET(<span class=\"string\">&#x27;abc&#x27;</span>) <span class=\"operator\">|</span> CHARSET(<span class=\"number\">1010</span>) <span class=\"operator\">|</span> CHARSET(<span class=\"number\">0x1010</span>) <span class=\"operator\">|</span> <span class=\"keyword\">COLLATION</span>(<span class=\"string\">&#x27;abc&#x27;</span>)   <span class=\"operator\">|</span> <span class=\"keyword\">COLLATION</span>(<span class=\"number\">1010</span>) <span class=\"operator\">|</span> <span class=\"keyword\">COLLATION</span>(<span class=\"number\">0x1010</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+---------------+-----------------+--------------------+-----------------+-------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> utf8mb4        <span class=\"operator\">|</span> <span class=\"type\">binary</span>        <span class=\"operator\">|</span> <span class=\"type\">binary</span>          <span class=\"operator\">|</span> utf8mb4_general_ci <span class=\"operator\">|</span> <span class=\"type\">binary</span>          <span class=\"operator\">|</span> <span class=\"type\">binary</span>            <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------+---------------+-----------------+--------------------+-----------------+-------------------+</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"其它函数\">其它函数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">INET_ATON(ip)</td>\n<td style=\"text-align:left\">返回IP地址的数字表示</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">INET_NTOA(num)</td>\n<td style=\"text-align:left\">返回数字所代表的IP地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IS_IPV4(str)</td>\n<td style=\"text-align:left\">参数是否为IPv4地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">INET6_ATON(ip)</td>\n<td style=\"text-align:left\">返回IPv6地址的数字值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">INET6_NTOA(num)</td>\n<td style=\"text-align:left\">从数字值返回IPv6地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IS_IPV6(str)</td>\n<td style=\"text-align:left\">参数是否为IPv6地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UUID()</td>\n<td style=\"text-align:left\">返回通用唯一标识符（UUID）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UUID_SHORT()</td>\n<td style=\"text-align:left\">返回整数值通用标识符</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">IS_UUID(str)</td>\n<td style=\"text-align:left\">参数是否为有效的UUID</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ANY_VALUE(column)</td>\n<td style=\"text-align:left\">抑制ONLY_FULL_GROUP_BY值拒绝，返回分组内任意数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">GROUPING(column)</td>\n<td style=\"text-align:left\">将超聚合的ROLLUP行与常规行区分开来，返回值是0或1</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> INET_ATON(<span class=\"string\">&#x27;10.122.89.47&#x27;</span>),INET_NTOA(<span class=\"number\">175790383</span>),IS_IPV4(<span class=\"string\">&#x27;10.122.89.47&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------+----------------------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> INET_ATON(<span class=\"string\">&#x27;10.122.89.47&#x27;</span>) <span class=\"operator\">|</span> INET_NTOA(<span class=\"number\">175790383</span>) <span class=\"operator\">|</span> IS_IPV4(<span class=\"string\">&#x27;10.122.89.47&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------+----------------------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">175790383</span>                 <span class=\"operator\">|</span> <span class=\"number\">10.122</span><span class=\"number\">.89</span><span class=\"number\">.47</span>         <span class=\"operator\">|</span> <span class=\"number\">1</span>                       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------------------------+----------------------+-------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> INET6_ATON(<span class=\"string\">&#x27;fdfe::5a55:caff:fefa:9089&#x27;</span>),INET6_NTOA(<span class=\"number\">0xfdfe0000000000005a55cafffefa9089</span>),IS_IPV6(<span class=\"string\">&#x27;fdfe::5a55:caff:fefa:9089&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------+------------------------------------------------+--------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> INET6_ATON(<span class=\"string\">&#x27;fdfe::5a55:caff:fefa:9089&#x27;</span>) <span class=\"operator\">|</span> INET6_NTOA(<span class=\"number\">0xfdfe0000000000005a55cafffefa9089</span>) <span class=\"operator\">|</span> IS_IPV6(<span class=\"string\">&#x27;fdfe::5a55:caff:fefa:9089&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------+------------------------------------------------+--------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">0xfdfe0000000000005a55cafffefa9089</span>      <span class=\"operator\">|</span> fdfe::<span class=\"number\">5</span>a55:caff:fefa:<span class=\"number\">9089</span>                      <span class=\"operator\">|</span> <span class=\"number\">1</span>                                    <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------------------------------------+------------------------------------------------+--------------------------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> UUID(),UUID_SHORT(),IS_UUID(<span class=\"string\">&#x27;872192b2-55b3-11ed-8890-0ad5455f39d8&#x27;</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------+----------------------+-------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> UUID()                               <span class=\"operator\">|</span> UUID_SHORT()         <span class=\"operator\">|</span> IS_UUID(<span class=\"string\">&#x27;872192b2-55b3-11ed-8890-0ad5455f39d8&#x27;</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------+----------------------+-------------------------------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">9761</span>d30a<span class=\"number\">-55</span>b3<span class=\"number\">-11</span>ed<span class=\"number\">-8890</span><span class=\"number\">-0</span>ad5455f39d8 <span class=\"operator\">|</span> <span class=\"number\">16889433509511299076</span> <span class=\"operator\">|</span> <span class=\"number\">1</span>                                               <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------------------------------------+----------------------+-------------------------------------------------+</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"流程控制\">流程控制</h2>\n<h3 id=\"控制函数\">控制函数</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">if(expr,v1,v2)</td>\n<td style=\"text-align:left\">实现if-else的效果，如果expr是true，返回v1。如果expr是false，返回v2</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ifnull(v1,v2)</td>\n<td style=\"text-align:left\">判断v1值是否为null，如果v1不为NULL，返回v2，否则返回v1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">nullif(v1,v2)</td>\n<td style=\"text-align:left\">如果v1=v2则返回null,否则返回v1</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> if(<span class=\"number\">1</span><span class=\"operator\">&gt;</span><span class=\"number\">2</span>,<span class=\"string\">&#x27;1&gt;2&#x27;</span>,<span class=\"string\">&#x27;1&lt;=2&#x27;</span>),ifnull(<span class=\"number\">1</span>,<span class=\"number\">2</span>),ifnull(<span class=\"keyword\">null</span>,<span class=\"number\">2</span>),<span class=\"built_in\">nullif</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>),<span class=\"built_in\">nullif</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------+-------------+----------------+-------------+-------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> if(<span class=\"number\">1</span><span class=\"operator\">&gt;</span><span class=\"number\">2</span>,<span class=\"string\">&#x27;1&gt;2&#x27;</span>,<span class=\"string\">&#x27;1&lt;=2&#x27;</span>) <span class=\"operator\">|</span> ifnull(<span class=\"number\">1</span>,<span class=\"number\">2</span>) <span class=\"operator\">|</span> ifnull(<span class=\"keyword\">null</span>,<span class=\"number\">2</span>) <span class=\"operator\">|</span> <span class=\"built_in\">nullif</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) <span class=\"operator\">|</span> <span class=\"built_in\">nullif</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>) <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------+-------------+----------------+-------------+-------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span><span class=\"operator\">&lt;=</span><span class=\"number\">2</span>                 <span class=\"operator\">|</span> <span class=\"number\">1</span>           <span class=\"operator\">|</span> <span class=\"number\">2</span>              <span class=\"operator\">|</span> <span class=\"operator\">&lt;</span><span class=\"keyword\">null</span><span class=\"operator\">&gt;</span>      <span class=\"operator\">|</span> <span class=\"number\">1</span>           <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------------------+-------------+----------------+-------------+-------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 统计每个部门年龄等于<span class=\"number\">34</span>的人数</span><br><span class=\"line\"><span class=\"keyword\">select</span> depName,<span class=\"built_in\">sum</span>(if(age<span class=\"operator\">=</span><span class=\"number\">34</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>)),group_concat(age) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+---------------------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> <span class=\"built_in\">sum</span>(if(age<span class=\"operator\">=</span><span class=\"number\">34</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>)) <span class=\"operator\">|</span> group_concat(age)       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+---------------------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">2</span>                   <span class=\"operator\">|</span> <span class=\"number\">22</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">28</span>,<span class=\"number\">34</span>,<span class=\"number\">34</span>,<span class=\"number\">36</span>,<span class=\"number\">38</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>                   <span class=\"operator\">|</span> <span class=\"number\">34</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">0</span>                   <span class=\"operator\">|</span> <span class=\"number\">44</span>,<span class=\"number\">24</span>,<span class=\"number\">46</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+---------------------+-------------------------+</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"控制语句case…when\">控制语句<code>case…when</code></h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>case…when</code>比<code>if函数</code>功能更加强大，支持多个条件分支判断</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>case…when</code>语句支持两种判断类型</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">1.表达式与常量比较</li>\n</ul>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case 要判断的字段或表达式</span><br><span class=\"line\">when 常量1 then 要显示的值1或语句1</span><br><span class=\"line\">when 常量2 then 要显示的值2或语句2</span><br><span class=\"line\">...</span><br><span class=\"line\">else 缺省要显示的值n或语句n</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> <span class=\"string\">&#x27;green&#x27;</span> <span class=\"keyword\">WHEN</span> <span class=\"string\">&#x27;red&#x27;</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;stop&#x27;</span> <span class=\"keyword\">WHEN</span> <span class=\"string\">&#x27;green&#x27;</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;go&#x27;</span> <span class=\"keyword\">ELSE</span> <span class=\"string\">&#x27;null&#x27;</span> <span class=\"keyword\">END</span> <span class=\"keyword\">as</span> <span class=\"keyword\">result</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">result</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> go     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 统计每个部门年龄等于<span class=\"number\">34</span>的人数</span><br><span class=\"line\"><span class=\"keyword\">select</span> depName,<span class=\"built_in\">sum</span>(<span class=\"keyword\">case</span> age <span class=\"keyword\">when</span> <span class=\"number\">34</span> <span class=\"keyword\">then</span> <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span>),group_concat(age) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> <span class=\"built_in\">sum</span>(<span class=\"keyword\">case</span> age <span class=\"keyword\">when</span> <span class=\"number\">34</span> <span class=\"keyword\">then</span> <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span> ) <span class=\"operator\">|</span> group_concat(age)       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">2</span>                                        <span class=\"operator\">|</span> <span class=\"number\">22</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">28</span>,<span class=\"number\">34</span>,<span class=\"number\">34</span>,<span class=\"number\">36</span>,<span class=\"number\">38</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>                                        <span class=\"operator\">|</span> <span class=\"number\">34</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">0</span>                                        <span class=\"operator\">|</span> <span class=\"number\">44</span>,<span class=\"number\">24</span>,<span class=\"number\">46</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+-------------------------+</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">\n<p>2.分支条件判断</p>\n</li>\n</ul>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">case</span><br><span class=\"line\">when 条件1 then 要显示的值1或语句1</span><br><span class=\"line\">when 条件2 then 要显示的值2或语句2</span><br><span class=\"line\">...</span><br><span class=\"line\">else 缺省要显示的值n或语句n</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CASE</span> <span class=\"keyword\">WHEN</span> <span class=\"number\">1</span><span class=\"operator\">&gt;</span><span class=\"number\">2</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;stop&#x27;</span> <span class=\"keyword\">WHEN</span> <span class=\"number\">1</span><span class=\"operator\">&lt;</span><span class=\"number\">2</span> <span class=\"keyword\">THEN</span> <span class=\"string\">&#x27;go&#x27;</span> <span class=\"keyword\">ELSE</span> <span class=\"string\">&#x27;null&#x27;</span> <span class=\"keyword\">END</span> <span class=\"keyword\">as</span> <span class=\"keyword\">result</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"keyword\">result</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> go     <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 统计每个部门年龄等于<span class=\"number\">34</span>的人数</span><br><span class=\"line\"><span class=\"keyword\">select</span> depName,<span class=\"built_in\">sum</span>(<span class=\"keyword\">case</span> <span class=\"keyword\">when</span> age<span class=\"operator\">=</span><span class=\"number\">34</span> <span class=\"keyword\">then</span> <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span>),group_concat(age) <span class=\"keyword\">from</span> tbl_employees <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> depName</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> depName <span class=\"operator\">|</span> <span class=\"built_in\">sum</span>(<span class=\"keyword\">case</span> <span class=\"keyword\">when</span> age<span class=\"operator\">=</span><span class=\"number\">34</span> <span class=\"keyword\">then</span> <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span> ) <span class=\"operator\">|</span> group_concat(age)       <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+-------------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 技术部  <span class=\"operator\">|</span> <span class=\"number\">2</span>                                        <span class=\"operator\">|</span> <span class=\"number\">22</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">28</span>,<span class=\"number\">34</span>,<span class=\"number\">34</span>,<span class=\"number\">36</span>,<span class=\"number\">38</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 运维部  <span class=\"operator\">|</span> <span class=\"number\">1</span>                                        <span class=\"operator\">|</span> <span class=\"number\">34</span>,<span class=\"number\">24</span>,<span class=\"number\">26</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> 销售部  <span class=\"operator\">|</span> <span class=\"number\">0</span>                                        <span class=\"operator\">|</span> <span class=\"number\">44</span>,<span class=\"number\">24</span>,<span class=\"number\">46</span>,<span class=\"number\">38</span>             <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">---------+------------------------------------------+-------------------------+</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"算术运算符\">算术运算符</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">+</td>\n<td style=\"text-align:left\">加法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">减法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">*</td>\n<td style=\"text-align:left\">乘法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">/</td>\n<td style=\"text-align:left\">除法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">div</td>\n<td style=\"text-align:left\">整除，只取整数部分</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">%，mod</td>\n<td style=\"text-align:left\">模运算符，取余数</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 除法</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">10</span><span class=\"operator\">/</span><span class=\"number\">4</span>,<span class=\"number\">10</span> div <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span><span class=\"operator\">/</span><span class=\"number\">4</span>   <span class=\"operator\">|</span> <span class=\"number\">10</span> div <span class=\"number\">4</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+----------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">2.5000</span> <span class=\"operator\">|</span> <span class=\"number\">2</span>        <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">--------+----------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"># 取余数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"number\">10</span> mod <span class=\"number\">3</span>,<span class=\"built_in\">mod</span>(<span class=\"number\">10</span>,<span class=\"number\">3</span>),<span class=\"number\">10</span> <span class=\"operator\">%</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+-----------+--------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">10</span> mod <span class=\"number\">3</span> <span class=\"operator\">|</span> <span class=\"built_in\">mod</span>(<span class=\"number\">10</span>,<span class=\"number\">3</span>) <span class=\"operator\">|</span> <span class=\"number\">10</span> <span class=\"operator\">%</span> <span class=\"number\">3</span> <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+-----------+--------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"number\">1</span>        <span class=\"operator\">|</span> <span class=\"number\">1</span>         <span class=\"operator\">|</span> <span class=\"number\">1</span>      <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">----------+-----------+--------+</span></span><br></pre></td></tr></table></figure>\n","content_text":"摘要 sql语句与常用函数介绍 本文基于mysql-8.0.30，https://dev.mysql.com/doc/refman/8.0/en/ Mysql关键字执行顺序 Mysql关键字语法顺序 Mysql关键字执行顺序 select[distinct] from &lt;left_table&gt; from on &lt;join_condition&gt; join(left join) &lt;join_type&gt; join &lt;right_table&gt; on where &lt;where_condition&gt; where group by &lt;grout_by_list&gt; [with rollup] group by[with rollup] having &lt;having_condition&gt; having select[distinct] &lt;select_list&gt; union(union all) union(union all) order by order by &lt;order_by_list&gt; [asc limit limit &lt;limit_number&gt; FROM：组装来自不同数据源的记录 WHERE：根据指定的条件过滤上一步检索出的记录 GROUP BY：对上面过滤后的记录按指定条件分组 SUM/AVG/COUNT：使用聚合函数进行计算 HAVING：对所有分组根据指定条件进行过滤 SELECT：从上一步过滤后的各个分组记录中提取指定查询的字段列表（包括聚合字段、计算字段、表达式字段等） ORDER BY：对上一步查询得到的结果集按照排序字段列表进行排序，并输出排序结果 DISTINCT和GROUP BY：都可以实现去重，DISTINCT是筛选去重，GROUP BY是分组去重 WHERE与HAVING的区别：WHERE是对记录进行筛选；而HAVING是对按GROUP BY进行分组后的组进行筛选。HAVING只有在使用GROUP BY 后才能使用。 distinct:去重 distinct关键字用于去重，distinct必须写在所有要查询字段的前面 distinct后面有几个字段，就代表修饰几个字段，而不是紧随distinct的字段（类似于联合唯一索引），例如以下两个语句效果相同 123# name+age去重select distinct name,age from employeesselect distinct (name),age from employees distinct + order by 是无法保证排序结果的，此时要使用 group by + order by distinct执行顺序先于order by，而distinct去重时不确定其选取的是哪条记录，而且distinct本身的排序结果也是乱序，所以其根本无法保证基于其它字段的排序顺序 group by也可以达到去重的目的，并可以基于聚合函数实现排序的目的 12345# 错误方式SELECT DISTINCT(t.search) FROM tbl_search_history t where t.user_id = :userId ORDER BY t.id desc# 正确方式SELECT t.search FROM tbl_search_history t WHERE t.user_id = :userId GROUP BY t.search order by MAX(t.id) desc with rollup:分组后聚合 with rollup出现在group by后面，用于对分组结果中的聚合数据再次进行汇总 比如下面这个sql用于统计各个部门员工的年龄平均值、最大值和最小值 12345678910111213141516171819202122232425select depName,avg(age),max(age),min(age) from tbl_employees group by depName with rollup+---------+----------+----------+----------+| depName | avg(age) | max(age) | min(age) |+---------+----------+----------+----------+| 技术部 | 30.2500 | 38 | 22 || 运维部 | 30.5000 | 38 | 24 || 销售部 | 38.0000 | 46 | 24 || &lt;null&gt; | 32.2500 | 46 | 22 |+---------+----------+----------+----------+select depName,groupName,avg(age),max(age),min(age) from tbl_employees group by depName,groupName with rollup+---------+-----------+----------+----------+----------+| depName | groupName | avg(age) | max(age) | min(age) |+---------+-----------+----------+----------+----------+| 技术部 | 前端 | 25.0000 | 28 | 22 || 技术部 | 后端 | 35.5000 | 38 | 34 || 技术部 | &lt;null&gt; | 30.2500 | 38 | 22 || 运维部 | 1组 | 29.0000 | 34 | 24 || 运维部 | 2组 | 32.0000 | 38 | 26 || 运维部 | &lt;null&gt; | 30.5000 | 38 | 24 || 销售部 | 1组 | 34.0000 | 44 | 24 || 销售部 | 2组 | 42.0000 | 46 | 38 || 销售部 | &lt;null&gt; | 38.0000 | 46 | 24 || &lt;null&gt; | &lt;null&gt; | 32.2500 | 46 | 22 |+---------+-----------+----------+----------+----------+ with rollup会为分组字段自动填充null值，我们可以使用GROUPING函数判断是否为with rollup自动填充的来设置想要的内容，比如 1234567891011121314151617181920212223242526272829select CASE WHEN GROUPING(depName)=1 THEN &#x27;总计&#x27; ELSE depName END depName,avg(age),max(age),min(age)from tbl_employees group by depName with rollup+---------+----------+----------+----------+| depName | avg(age) | max(age) | min(age) |+---------+----------+----------+----------+| 技术部 | 30.2500 | 38 | 22 || 运维部 | 30.5000 | 38 | 24 || 销售部 | 38.0000 | 46 | 24 || 总计 | 32.2500 | 46 | 22 |+---------+----------+----------+----------+select CASE WHEN GROUPING(depName)=1 and GROUPING(groupName)=1 THEN &#x27;总计&#x27; ELSE depName END depName,CASE WHEN GROUPING(depName)=0 and GROUPING(groupName)=1 THEN &#x27;小计&#x27;WHEN GROUPING(depName)=1 and GROUPING(groupName)=1 THEN &#x27;总计&#x27; ELSE groupName END groupName,avg(age),max(age),min(age) from tbl_employees group by depName,groupName with rollup+---------+-----------+----------+----------+----------+| depName | groupName | avg(age) | max(age) | min(age) |+---------+-----------+----------+----------+----------+| 技术部 | 前端 | 25.0000 | 28 | 22 || 技术部 | 后端 | 35.5000 | 38 | 34 || 技术部 | 小计 | 30.2500 | 38 | 22 || 运维部 | 1组 | 29.0000 | 34 | 24 || 运维部 | 2组 | 32.0000 | 38 | 26 || 运维部 | 小计 | 30.5000 | 38 | 24 || 销售部 | 1组 | 34.0000 | 44 | 24 || 销售部 | 2组 | 42.0000 | 46 | 38 || 销售部 | 小计 | 38.0000 | 46 | 24 || 总计 | 总计 | 32.2500 | 46 | 22 |+---------+-----------+----------+----------+----------+ group_concat(): 分组连接，将分组下的全部column用分隔符连接 语法：group_concat([DISTINCT] column [Order BY column ASC/DESC] [SEPARATOR '分隔符']) 默认逗号连接，不去重，不排序 123456789101112131415161718select depName,group_concat(age) from tbl_employees group by depName+---------+-------------------------+| depName | group_concat(age) |+---------+-------------------------+| 技术部 | 22,24,26,28,34,34,36,38 || 运维部 | 34,24,26,38 || 销售部 | 44,24,46,38 |+---------+-------------------------+select depName,group_concat(age) from tbl_employees group by depName with rollup+---------+-------------------------------------------------+| depName | group_concat(age) |+---------+-------------------------------------------------+| 技术部 | 22,24,26,28,34,34,36,38 || 运维部 | 34,24,26,38 || 销售部 | 44,24,46,38 || &lt;null&gt; | 22,24,26,28,34,34,36,38,34,24,26,38,44,24,46,38 |+---------+-------------------------------------------------+ 默认连接符为&quot;,“，如果要使用”:&quot;连接，可以使用SEPARATOR ':' 123456789101112131415161718select depName,group_concat(age SEPARATOR &#x27;:&#x27;) from tbl_employees group by depName+---------+---------------------------------+| depName | group_concat(age SEPARATOR &#x27;:&#x27;) |+---------+---------------------------------+| 技术部 | 22:24:26:28:34:34:36:38 || 运维部 | 34:24:26:38 || 销售部 | 44:24:46:38 |+---------+---------------------------------+select depName,group_concat(age SEPARATOR &#x27;:&#x27;) from tbl_employees group by depName with rollup+---------+-------------------------------------------------+| depName | group_concat(age SEPARATOR &#x27;:&#x27;) |+---------+-------------------------------------------------+| 技术部 | 22:24:26:28:34:34:36:38 || 运维部 | 34:24:26:38 || 销售部 | 44:24:46:38 || &lt;null&gt; | 22:24:26:28:34:34:36:38:34:24:26:38:44:24:46:38 |+---------+-------------------------------------------------+ 默认连接全部数据，如果要去掉重复的数据，可以使用DISTINCT关键字，其结果是排好序的 123456789101112131415161718select depName,group_concat(DISTINCT age SEPARATOR &#x27;:&#x27;) from tbl_employees group by depName+---------+------------------------------------------+| depName | group_concat(DISTINCT age SEPARATOR &#x27;:&#x27;) |+---------+------------------------------------------+| 技术部 | 22:24:26:28:34:36:38 || 运维部 | 24:26:34:38 || 销售部 | 24:38:44:46 |+---------+------------------------------------------+select depName,group_concat(DISTINCT age SEPARATOR &#x27;:&#x27;) from tbl_employees group by depName with rollup+---------+------------------------------------------+| depName | group_concat(DISTINCT age SEPARATOR &#x27;:&#x27;) |+---------+------------------------------------------+| 技术部 | 22:24:26:28:34:36:38 || 运维部 | 24:26:34:38 || 销售部 | 24:38:44:46 || &lt;null&gt; | 22:24:26:28:34:36:38:44:46 |+---------+------------------------------------------+ 排序Order BY columnName ASC/DESC 123456789select depName,group_concat(DISTINCT age Order BY age DESC SEPARATOR &#x27;:&#x27;) from tbl_employees group by depName with rollup+---------+------------------------------------------------------------+| depName | group_concat(DISTINCT age Order BY age DESC SEPARATOR &#x27;:&#x27;) |+---------+------------------------------------------------------------+| 技术部 | 38:36:34:28:26:24:22 || 运维部 | 38:34:26:24 || 销售部 | 46:44:38:24 || &lt;null&gt; | 46:44:38:36:34:28:26:24:22 |+---------+------------------------------------------------------------+ over(): 开窗函数 语法：over（partition by columnname1 order by columnname2） 含义：按columname1指定的字段进行分组排序，按字段columnname2的值进行排序 over函数只能出现在select中，不能出现在过滤条件中 over()意思就是所有的数据都在窗口中，不能单独使用，要和分析函数如：sum(),avg(),row_number()等等一块使用，这么说貌似不好理解，直接看示例吧 将年龄的平均值显示在每行 123456789101112131415161718192021select `depName`,`groupName`,age,avg(age)over() as avgAge from tbl_employees+---------+-----------+-----+---------+| depName | groupName | age | avgAge |+---------+-----------+-----+---------+| 技术部 | 前端 | 22 | 32.2500 || 技术部 | 前端 | 24 | 32.2500 || 技术部 | 前端 | 26 | 32.2500 || 技术部 | 前端 | 28 | 32.2500 || 技术部 | 后端 | 34 | 32.2500 || 技术部 | 后端 | 34 | 32.2500 || 技术部 | 后端 | 36 | 32.2500 || 技术部 | 后端 | 38 | 32.2500 || 运维部 | 1组 | 34 | 32.2500 || 运维部 | 1组 | 24 | 32.2500 || 运维部 | 2组 | 26 | 32.2500 || 运维部 | 2组 | 38 | 32.2500 || 销售部 | 1组 | 44 | 32.2500 || 销售部 | 1组 | 24 | 32.2500 || 销售部 | 2组 | 46 | 32.2500 || 销售部 | 2组 | 38 | 32.2500 |+---------+-----------+-----+---------+ 将每个部门的年龄平均值显示在每行 123456789101112131415161718192021select `depName`,`groupName`,age,avg(age)over(partition by depName) as avgAge from tbl_employees+---------+-----------+-----+---------+| depName | groupName | age | avgAge |+---------+-----------+-----+---------+| 技术部 | 前端 | 22 | 30.2500 || 技术部 | 前端 | 24 | 30.2500 || 技术部 | 前端 | 26 | 30.2500 || 技术部 | 前端 | 28 | 30.2500 || 技术部 | 后端 | 34 | 30.2500 || 技术部 | 后端 | 34 | 30.2500 || 技术部 | 后端 | 36 | 30.2500 || 技术部 | 后端 | 38 | 30.2500 || 运维部 | 1组 | 34 | 30.5000 || 运维部 | 1组 | 24 | 30.5000 || 运维部 | 2组 | 26 | 30.5000 || 运维部 | 2组 | 38 | 30.5000 || 销售部 | 1组 | 44 | 38.0000 || 销售部 | 1组 | 24 | 38.0000 || 销售部 | 2组 | 46 | 38.0000 || 销售部 | 2组 | 38 | 38.0000 |+---------+-----------+-----+---------+ 将每个部门下每个分组的年龄平均值显示在每行 123456789101112131415161718192021select `depName`,`groupName`,age,avg(age)over(partition by depName,groupName) as avgAge from tbl_employees+---------+-----------+-----+---------+| depName | groupName | age | avgAge |+---------+-----------+-----+---------+| 技术部 | 前端 | 22 | 25.0000 || 技术部 | 前端 | 24 | 25.0000 || 技术部 | 前端 | 26 | 25.0000 || 技术部 | 前端 | 28 | 25.0000 || 技术部 | 后端 | 34 | 35.5000 || 技术部 | 后端 | 34 | 35.5000 || 技术部 | 后端 | 36 | 35.5000 || 技术部 | 后端 | 38 | 35.5000 || 运维部 | 1组 | 34 | 29.0000 || 运维部 | 1组 | 24 | 29.0000 || 运维部 | 2组 | 26 | 32.0000 || 运维部 | 2组 | 38 | 32.0000 || 销售部 | 1组 | 44 | 34.0000 || 销售部 | 1组 | 24 | 34.0000 || 销售部 | 2组 | 46 | 42.0000 || 销售部 | 2组 | 38 | 42.0000 |+---------+-----------+-----+---------+ 每个部门每个分组下按年龄倒序并显示每组的平均年龄 12345678910111213141516171819202122select `depName`,`groupName`,age,avg(age)over(partition by depName,groupName order by age desc) as avgAge from tbl_employees+---------+-----------+-----+---------+| depName | groupName | age | avgAge |+---------+-----------+-----+---------+| 技术部 | 前端 | 28 | 28.0000 || 技术部 | 前端 | 26 | 27.0000 || 技术部 | 前端 | 24 | 26.0000 || 技术部 | 前端 | 22 | 25.0000 || 技术部 | 后端 | 38 | 38.0000 || 技术部 | 后端 | 36 | 37.0000 || 技术部 | 后端 | 34 | 35.5000 || 技术部 | 后端 | 34 | 35.5000 || 运维部 | 1组 | 34 | 34.0000 || 运维部 | 1组 | 24 | 29.0000 || 运维部 | 2组 | 38 | 38.0000 || 运维部 | 2组 | 26 | 32.0000 || 销售部 | 1组 | 44 | 44.0000 || 销售部 | 1组 | 24 | 34.0000 || 销售部 | 2组 | 46 | 46.0000 || 销售部 | 2组 | 38 | 42.0000 |+---------+-----------+-----+---------+注意，这里是先分组，然后逐行求平均值的，比如前4条记录是一组，第一行数据和自己比，平均值就是28，第二行数据和第一行数据比，平均值是(26+28)/2，第三行数据和前两行比，平均值就是(28+26+24)/3，以此类推，第四行就是(28+26+24+22)/4，第五行是另一个分组了，依旧是按行计算。这里需要说一下第7行和第8行，因为这两行是同一个分组，且年龄相同，都是34，其平均值计算方法是相同年龄行相加后一起求平均值，所以我们看到这两行的平均值是一样的，所以over按哪个字段排序，如果其值相同，调用分析函数时要一起计算。每个分组的最后一条记录的显示的平均值才是该组的真实平均值 不分组直接排序，这里按年龄倒序 12345678910111213141516171819202122select `depName`,`groupName`,age,avg(age)over(order by age desc) as avgAge from tbl_employees+---------+-----------+-----+---------+| depName | groupName | age | avgAge |+---------+-----------+-----+---------+| 销售部 | 2组 | 46 | 46.0000 || 销售部 | 1组 | 44 | 45.0000 || 技术部 | 后端 | 38 | 40.8000 || 运维部 | 2组 | 38 | 40.8000 || 销售部 | 2组 | 38 | 40.8000 || 技术部 | 后端 | 36 | 40.0000 || 技术部 | 后端 | 34 | 38.0000 || 技术部 | 后端 | 34 | 38.0000 || 运维部 | 1组 | 34 | 38.0000 || 技术部 | 前端 | 28 | 37.0000 || 技术部 | 前端 | 26 | 35.1667 || 运维部 | 2组 | 26 | 35.1667 || 技术部 | 前端 | 24 | 32.9333 || 运维部 | 1组 | 24 | 32.9333 || 销售部 | 1组 | 24 | 32.9333 || 技术部 | 前端 | 22 | 32.2500 |+---------+-----------+-----+---------+这里的计算方法与上面分组的情况类似，按行计算平均值，遇到排序字段值相同时，要一起计算。最后一条记录显示的平均值就是所有记录的平均值。 查询每个员工年龄与全体平均年龄的差值 123456789101112131415161718192021select depName,groupName,age,avg(age)over() as avgAge,age-avg(age)over() from tbl_employees+---------+-----------+-----+---------+--------------------+| depName | groupName | age | avgAge | age-avg(age)over() |+---------+-----------+-----+---------+--------------------+| 技术部 | 前端 | 22 | 32.2500 | -10.2500 || 技术部 | 前端 | 24 | 32.2500 | -8.2500 || 技术部 | 前端 | 26 | 32.2500 | -6.2500 || 技术部 | 前端 | 28 | 32.2500 | -4.2500 || 技术部 | 后端 | 34 | 32.2500 | 1.7500 || 技术部 | 后端 | 34 | 32.2500 | 1.7500 || 技术部 | 后端 | 36 | 32.2500 | 3.7500 || 技术部 | 后端 | 38 | 32.2500 | 5.7500 || 运维部 | 1组 | 34 | 32.2500 | 1.7500 || 运维部 | 1组 | 24 | 32.2500 | -8.2500 || 运维部 | 2组 | 26 | 32.2500 | -6.2500 || 运维部 | 2组 | 38 | 32.2500 | 5.7500 || 销售部 | 1组 | 44 | 32.2500 | 11.7500 || 销售部 | 1组 | 24 | 32.2500 | -8.2500 || 销售部 | 2组 | 46 | 32.2500 | 13.7500 || 销售部 | 2组 | 38 | 32.2500 | 5.7500 |+---------+-----------+-----+---------+--------------------+ 查询行号 mysql没有提供可供计算行号的方法，不过我们可以通过两种方式来实现 第一种方法，自定义行号变量@rownum 12345678910111213141516171819202122232425262728293031323334353637383940414243 SELECT @rownum:=@rownum+1 AS rownum, t.depName,t.groupName,t.age FROM (SELECT @rownum:=0) r, tbl_employees t+--------+---------+-----------+-----+| rownum | depName | groupName | age |+--------+---------+-----------+-----+| 1 | 技术部 | 前端 | 22 || 2 | 技术部 | 前端 | 24 || 3 | 技术部 | 前端 | 26 || 4 | 技术部 | 前端 | 28 || 5 | 技术部 | 后端 | 34 || 6 | 技术部 | 后端 | 34 || 7 | 技术部 | 后端 | 36 || 8 | 技术部 | 后端 | 38 || 9 | 运维部 | 1组 | 34 || 10 | 运维部 | 1组 | 24 || 11 | 运维部 | 2组 | 26 || 12 | 运维部 | 2组 | 38 || 13 | 销售部 | 1组 | 44 || 14 | 销售部 | 1组 | 24 || 15 | 销售部 | 2组 | 46 || 16 | 销售部 | 2组 | 38 |+--------+---------+-----------+-----+# 年龄倒序显示SELECT @rownum:=@rownum+1 AS rownum, t.depName,t.groupName,t.age FROM (SELECT @rownum:=0) r, tbl_employees t order by age desc+--------+---------+-----------+-----+| rownum | depName | groupName | age |+--------+---------+-----------+-----+| 1 | 销售部 | 2组 | 46 || 2 | 销售部 | 1组 | 44 || 3 | 技术部 | 后端 | 38 || 4 | 运维部 | 2组 | 38 || 5 | 销售部 | 2组 | 38 || 6 | 技术部 | 后端 | 36 || 7 | 技术部 | 后端 | 34 || 8 | 技术部 | 后端 | 34 || 9 | 运维部 | 1组 | 34 || 10 | 技术部 | 前端 | 28 || 11 | 技术部 | 前端 | 26 || 12 | 运维部 | 2组 | 26 || 13 | 技术部 | 前端 | 24 || 14 | 运维部 | 1组 | 24 || 15 | 销售部 | 1组 | 24 || 16 | 技术部 | 前端 | 22 |+--------+---------+-----------+-----+ 第二种方法，使用row_number()over()函数 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364select row_number()over() as rownum,depName,groupName,age from tbl_employees+--------+---------+-----------+-----+| rownum | depName | groupName | age |+--------+---------+-----------+-----+| 1 | 技术部 | 前端 | 22 || 2 | 技术部 | 前端 | 24 || 3 | 技术部 | 前端 | 26 || 4 | 技术部 | 前端 | 28 || 5 | 技术部 | 后端 | 34 || 6 | 技术部 | 后端 | 34 || 7 | 技术部 | 后端 | 36 || 8 | 技术部 | 后端 | 38 || 9 | 运维部 | 1组 | 34 || 10 | 运维部 | 1组 | 24 || 11 | 运维部 | 2组 | 26 || 12 | 运维部 | 2组 | 38 || 13 | 销售部 | 1组 | 44 || 14 | 销售部 | 1组 | 24 || 15 | 销售部 | 2组 | 46 || 16 | 销售部 | 2组 | 38 |+--------+---------+-----------+-----+此时如果要按年龄排序，则排序规则可以写在最后，也可以写在over函数内，效果是一样的select row_number()over() as rownum,depName,groupName,age from tbl_employees order by age desc+--------+---------+-----------+-----+| rownum | depName | groupName | age |+--------+---------+-----------+-----+| 1 | 销售部 | 2组 | 46 || 2 | 销售部 | 1组 | 44 || 3 | 技术部 | 后端 | 38 || 4 | 运维部 | 2组 | 38 || 5 | 销售部 | 2组 | 38 || 6 | 技术部 | 后端 | 36 || 7 | 技术部 | 后端 | 34 || 8 | 技术部 | 后端 | 34 || 9 | 运维部 | 1组 | 34 || 10 | 技术部 | 前端 | 28 || 11 | 技术部 | 前端 | 26 || 12 | 运维部 | 2组 | 26 || 13 | 技术部 | 前端 | 24 || 14 | 运维部 | 1组 | 24 || 15 | 销售部 | 1组 | 24 || 16 | 技术部 | 前端 | 22 |+--------+---------+-----------+-----+select row_number()over(order by age desc) as rownum,depName,groupName,age from tbl_employees+--------+---------+-----------+-----+| rownum | depName | groupName | age |+--------+---------+-----------+-----+| 1 | 销售部 | 2组 | 46 || 2 | 销售部 | 1组 | 44 || 3 | 技术部 | 后端 | 38 || 4 | 运维部 | 2组 | 38 || 5 | 销售部 | 2组 | 38 || 6 | 技术部 | 后端 | 36 || 7 | 技术部 | 后端 | 34 || 8 | 技术部 | 后端 | 34 || 9 | 运维部 | 1组 | 34 || 10 | 技术部 | 前端 | 28 || 11 | 技术部 | 前端 | 26 || 12 | 运维部 | 2组 | 26 || 13 | 技术部 | 前端 | 24 || 14 | 运维部 | 1组 | 24 || 15 | 销售部 | 1组 | 24 || 16 | 技术部 | 前端 | 22 |+--------+---------+-----------+-----+ Mysql常用函数 数学函数 函数名称 功能 ABS(x) 返回x的绝对值 BIN(x) 返回x的二进制（OCT(x)返回八进制，HEX(x)返回十六进制） CEILING(x) 返回&gt;=x的最小整数值，可以简写为 ceil(x) FLOOR(x) 返回&lt;=x的最大整数值 123456select ABS(10),ABS(-10),BIN(10),OCT(10),HEX(10),CEILING(10.2),EXP(1),FLOOR(10.2)+---------+----------+---------+---------+---------+---------------+-------------------+-------------+| ABS(10) | ABS(-10) | BIN(10) | OCT(10) | HEX(10) | CEILING(10.2) | EXP(1) | FLOOR(10.2) |+---------+----------+---------+---------+---------+---------------+-------------------+-------------+| 10 | 10 | 1010 | 12 | A | 11 | 2.718281828459045 | 10 |+---------+----------+---------+---------+---------+---------------+-------------------+-------------+ 函数名称 功能 GREATEST(x1,x2,…,xn) 返回集合中最大的值 LEAST(x1,x2,…,xn) 返回集合中最小的值 123456789101112131415# 按照数字顺序，字符顺序，首字母顺序比较select GREATEST(1,2,3,4),LEAST(1,2,3,4),GREATEST(&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;,&#x27;D&#x27;),LEAST(&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;,&#x27;D&#x27;),GREATEST(&#x27;MySQL&#x27;,&#x27;Java&#x27;,&#x27;Redis&#x27;),LEAST(&#x27;MySQL&#x27;,&#x27;Java&#x27;,&#x27;Redis&#x27;)+-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+| GREATEST(1,2,3,4) | LEAST(1,2,3,4) | GREATEST(&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;,&#x27;D&#x27;) | LEAST(&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;,&#x27;D&#x27;) | GREATEST(&#x27;MySQL&#x27;,&#x27;Java&#x27;,&#x27;Redis&#x27;) | LEAST(&#x27;MySQL&#x27;,&#x27;Java&#x27;,&#x27;Redis&#x27;) |+-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+| 4 | 1 | D | A | Redis | Java |+-------------------+----------------+---------------------------+------------------------+----------------------------------+-------------------------------+# 这里要注意，只要集合中含有NULL，返回值都是nullselect GREATEST(10, 20, NULL),LEAST(10, 20, NULL)+------------------------+---------------------+| GREATEST(10, 20, NULL) | LEAST(10, 20, NULL) |+------------------------+---------------------+| &lt;null&gt; | &lt;null&gt; |+------------------------+---------------------+ 函数名称 功能 EXP(x) 返回值e（自然对数的底）的x次方，自然对数e其值约等于2.71828 LN(x) 返回x的自然对数 LOG(x,y) 返回x的以y为底的对数 MOD(x,y) 返回x/y的模（余数）,当被除数为正数，结果就是正数，当被除数为负数，结果就是负数。 PI() 返回pi的值（圆周率） 123456select EXP(1),LN(2.718281828459045),LOG(2,16),MOD(10,3),MOD(-10,3),PI()+-------------------+-----------------------+-----------+-----------+------------+----------+| EXP(1) | LN(2.718281828459045) | LOG(2,16) | MOD(10,3) | MOD(-10,3) | PI() |+-------------------+-----------------------+-----------+-----------+------------+----------+| 2.718281828459045 | 1.0 | 4.0 | 1 | -1 | 3.141593 |+-------------------+-----------------------+-----------+-----------+------------+----------+ 函数名称 功能 RAND() 返回０到１内的随机值,可以通过提供一个参数(种子)使RAND()随机数生成器生成一个指定的值。 1234567891011121314151617181920212223# 相同的种子，返回值相同select RAND(),RAND(2),RAND(2)+---------------------+--------------------+--------------------+| RAND() | RAND(2) | RAND(2) |+---------------------+--------------------+--------------------+| 0.10167000452212059 | 0.6555866465490187 | 0.6555866465490187 |+---------------------+--------------------+--------------------+# 获得介于[i，j)之间的随机值，FLOOR(i + RAND() *(j − i))，比如[1,10)SELECT FLOOR(1 + RAND()*(10 - 1)) AS Random_Number;+---------------+| Random_Number |+---------------+| 6.0 |+---------------+# 获得介于[i，j]之间的随机值，FLOOR(i + RAND() *(j − i + 1))，比如[1,10]SELECT FLOOR(1 + RAND()*(10 - 1 + 1)) AS Random_Number;+---------------+| Random_Number |+---------------+| 10.0 |+---------------+ 函数名称 功能 ROUND(x,y) 返回参数x的四舍五入的有y位小数的值 SIGN(x) 返回代表数字x的符号的值 SQRT(x) 返回一个数的平方根 POW(x,y) 指数函数，x为底，y为指数 TRUNCATE(x,y) 返回数字x截短为y位小数的结果，y为负数时整数部分替换为0 123456select ROUND(3.147,2),SIGN(5),SIGN(-5),SQRT(16),POW(4,2),TRUNCATE(3.147,2),TRUNCATE(3.147,0),TRUNCATE(123.147,-2)+----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+| ROUND(3.147,2) | SIGN(5) | SIGN(-5) | SQRT(16) | POW(4,2) | TRUNCATE(3.147,2) | TRUNCATE(3.147,0) | TRUNCATE(123.147,-2) |+----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+| 3.15 | 1 | -1 | 4.0 | 16.0 | 3.14 | 3 | 100 |+----------------+---------+----------+----------+----------+-------------------+-------------------+----------------------+ 函数名称 功能 FORMAT(N,D,locale) 将数字N格式化为格式，如&quot;#,###,###.##&quot;，舍入到D位小数。它返回一个值作为字符串。 mysql支持的locale请查看https://dev.mysql.com/doc/refman/8.0/en/locale-support.html 1234567# 不指定locale时默认en_US，de_DE语言环境使用点(.)来分隔千位和逗号(，)来分隔小数点select format(1450028.123,2),format(1450028.123,2,&#x27;en_US&#x27;),format(1450028.123,2,&#x27;zh_CN&#x27;),format(1450028.123,2,&#x27;de_DE&#x27;);+-----------------------+-------------------------------+-------------------------------+-------------------------------+| format(1450028.123,2) | format(1450028.123,2,&#x27;en_US&#x27;) | format(1450028.123,2,&#x27;zh_CN&#x27;) | format(1450028.123,2,&#x27;de_DE&#x27;) |+-----------------------+-------------------------------+-------------------------------+-------------------------------+| 1,450,028.12 | 1,450,028.12 | 1,450,028.12 | 1.450.028,12 |+-----------------------+-------------------------------+-------------------------------+-------------------------------+ 聚合函数(常用于GROUP BY从句的SELECT查询中) 函数名称 功能 AVG(col) 返回指定列的平均值 COUNT(col) 返回指定列中非NULL值的个数，注意count(*)不会跳过NULL值行 MIN(col) 返回指定列的最小值 MAX(col) 返回指定列的最大值 SUM(col) 返回指定列的所有值之和 GROUP_CONCAT(col) 返回由属于一组的列值连接组合而成的结果 12345678select depName,count(*),avg(age),max(age),min(age),sum(age),group_concat(age) from tbl_employees group by depName+---------+----------+----------+----------+----------+----------+-------------------------+| depName | count(*) | avg(age) | max(age) | min(age) | sum(age) | group_concat(age) |+---------+----------+----------+----------+----------+----------+-------------------------+| 技术部 | 8 | 30.2500 | 38 | 22 | 242 | 22,24,26,28,34,34,36,38 || 运维部 | 4 | 30.5000 | 38 | 24 | 122 | 34,24,26,38 || 销售部 | 4 | 38.0000 | 46 | 24 | 152 | 44,24,46,38 |+---------+----------+----------+----------+----------+----------+-------------------------+ 字符串函数 函数名称 功能 ASCII(char) 返回字符的ASCII码值 LENGTH(s) 返回字符串str中的字符数 BIT_LENGTH(str) 返回字符串的比特长度 CONCAT(s1,s2…,sn) 将s1,s2…,sn连接成字符串 CONCAT_WS(sep,s1,s2…,sn) 将s1,s2…,sn连接成字符串，并用sep字符间隔 INSERT(str,x,y,instr) 将字符串str从第x位置开始，y个字符长的子串替换为字符串instr，返回结果 REPLACE(str,substr,otherstr) 在str中查找substr，并使用otherstr替换 FIND_IN_SET(str,list) 分析逗号分隔的list列表，如果发现str，返回str在list中的位置，位置从1开始计算 REPEAT(str,x) 返回字符串str重复x次的结果 REVERSE(str) 返回颠倒字符串str的结果 STRCMP(s1,s2) 比较字符串s1和s2,如果两个字符串相同，则返回0，如果根据定义的顺序第一个参数小于第二个参数，则返回-1，而当第二个参数小于第一个参数时，返回1。 LEFT(str,x) 返回字符串str中最左边的x个字符 RIGHT(str,x) 返回字符串str中最右边的x个字符 SUBSTRING(str,x,y)或者SUBSTR(str,x,y) 返回字符串str从第x个字符开始，截取y个字符长度，y不填写则表示截取到字符串末尾 TRIM(str) 去除字符串首部和尾部的所有空格 RTRIM(str) 返回字符串str尾部的空格 LTRIM(str) 从字符串str中切掉开头的空格 UCASE(str)或UPPER(str) 返回将字符串str中所有字符转变为大写后的结果 LCASE(str)或LOWER(str) 返回将字符串str中所有字符改变为小写后的结果 LPAD(str,x,y) 将str长度为设置为x，不足部分用y在前面补齐 RPAD(str,x,y) 将str长度为设置为x，不足部分用y在后面补齐 SPACE(x) 返回指定数量的空格，x必须大于0 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586# 字符串替换select INSERT(&#x27;abcdefgh&#x27;,3,5,&#x27;ufo&#x27;),REVERSE(&#x27;abcdefgh&#x27;),REPEAT(&#x27;MySQL&#x27;, 3),REPLACE(&#x27;abcdefgh&#x27;,&#x27;de&#x27;,&#x27;ufo&#x27;)+------------------------------+---------------------+--------------------+--------------------------------+| INSERT(&#x27;abcdefgh&#x27;,3,5,&#x27;ufo&#x27;) | REVERSE(&#x27;abcdefgh&#x27;) | REPEAT(&#x27;MySQL&#x27;, 3) | REPLACE(&#x27;abcdefgh&#x27;,&#x27;de&#x27;,&#x27;ufo&#x27;) |+------------------------------+---------------------+--------------------+--------------------------------+| abufoh | hgfedcba | MySQLMySQLMySQL | abcufofgh |+------------------------------+---------------------+--------------------+--------------------------------+# 计算字符串长度，中文占3个字符，每个字符8个字节select ASCII(&#x27;A&#x27;),LENGTH(&#x27;中华人民共和国&#x27;),BIT_LENGTH(&#x27;中华人民共和国&#x27;)+------------+--------------------------+------------------------------+| ASCII(&#x27;A&#x27;) | LENGTH(&#x27;中华人民共和国&#x27;) | BIT_LENGTH(&#x27;中华人民共和国&#x27;) |+------------+--------------------------+------------------------------+| 65 | 21 | 168 |+------------+--------------------------+------------------------------+# 字符串连接select CONCAT(&#x27;中华&#x27;,&#x27;人民&#x27;,&#x27;共和国&#x27;),CONCAT_WS(&#x27;_&#x27;,&#x27;中华&#x27;,&#x27;人民&#x27;,&#x27;共和国&#x27;)+--------------------------------+---------------------------------------+| CONCAT(&#x27;中华&#x27;,&#x27;人民&#x27;,&#x27;共和国&#x27;) | CONCAT_WS(&#x27;_&#x27;,&#x27;中华&#x27;,&#x27;人民&#x27;,&#x27;共和国&#x27;) |+--------------------------------+---------------------------------------+| 中华人民共和国 | 中华_人民_共和国 |+--------------------------------+---------------------------------------+# 字符串截取select LEFT(&#x27;中华人民共和国&#x27;,5),RIGHT(&#x27;中华人民共和国&#x27;,5),SUBSTRING(&#x27;中华人民共和国&#x27;,3),SUBSTRING(&#x27;中华人民共和国&#x27;,3,2)+--------------------------+---------------------------+-------------------------------+---------------------------------+| LEFT(&#x27;中华人民共和国&#x27;,5) | RIGHT(&#x27;中华人民共和国&#x27;,5) | SUBSTRING(&#x27;中华人民共和国&#x27;,3) | SUBSTRING(&#x27;中华人民共和国&#x27;,3,2) |+--------------------------+---------------------------+-------------------------------+---------------------------------+| 中华人民共 | 人民共和国 | 人民共和国 | 人民 |+--------------------------+---------------------------+-------------------------------+---------------------------------+# 字符串补齐select LPAD(&quot;hello&quot;,7,&#x27;a&#x27;),LPAD(&quot;hello&quot;,7,0),RPAD(&quot;hello&quot;,7,&#x27;a&#x27;),RPAD(&quot;hello&quot;,7,0)+---------------------+-------------------+---------------------+-------------------+| LPAD(&quot;hello&quot;,7,&#x27;a&#x27;) | LPAD(&quot;hello&quot;,7,0) | RPAD(&quot;hello&quot;,7,&#x27;a&#x27;) | RPAD(&quot;hello&quot;,7,0) |+---------------------+-------------------+---------------------+-------------------+| aahello | 00hello | helloaa | hello00 |+---------------------+-------------------+---------------------+-------------------+# 列表中查找指定的字符串SELECT FIND_IN_SET(&#x27;b&#x27;, &#x27;a,b,c,d&#x27;),FIND_IN_SET(&#x27;bb&#x27;, &#x27;ab,bb,cb,db&#x27;)+-----------------------------+----------------------------------+| FIND_IN_SET(&#x27;b&#x27;, &#x27;a,b,c,d&#x27;) | FIND_IN_SET(&#x27;bb&#x27;, &#x27;ab,bb,cb,db&#x27;) |+-----------------------------+----------------------------------+| 2 | 2 |+-----------------------------+----------------------------------+# 字符串比较，按字母顺序逐个比较Select STRCMP(&#x27;Geeks&#x27;, &#x27;Geeks&#x27;),STRCMP(&#x27;Geeks&#x27;, &#x27;Geek&#x27;),STRCMP(&#x27;Geek&#x27;, &#x27;Geeks&#x27;),STRCMP(&#x27;Geek&#x27;, NULL)+--------------------------+-------------------------+-------------------------+----------------------+| STRCMP(&#x27;Geeks&#x27;, &#x27;Geeks&#x27;) | STRCMP(&#x27;Geeks&#x27;, &#x27;Geek&#x27;) | STRCMP(&#x27;Geek&#x27;, &#x27;Geeks&#x27;) | STRCMP(&#x27;Geek&#x27;, NULL) |+--------------------------+-------------------------+-------------------------+----------------------+| 0 | 1 | -1 | &lt;null&gt; |+--------------------------+-------------------------+-------------------------+----------------------+select STRCMP(&#x27;ae&#x27;,&#x27;abcd&#x27;)+---------------------+| STRCMP(&#x27;ae&#x27;,&#x27;abcd&#x27;) |+---------------------+| 1 |+---------------------+# 大小写转换select UCASE(&#x27;abc&#x27;),UPPER(&#x27;abc&#x27;),LCASE(&#x27;ABC&#x27;),LOWER(&#x27;ABC&#x27;)+--------------+--------------+--------------+--------------+| UCASE(&#x27;abc&#x27;) | UPPER(&#x27;abc&#x27;) | LCASE(&#x27;ABC&#x27;) | LOWER(&#x27;ABC&#x27;) |+--------------+--------------+--------------+--------------+| ABC | ABC | abc | abc |+--------------+--------------+--------------+--------------+# 去除左右空格select LENGTH(TRIM(&#x27; abc &#x27;)),LENGTH(LTRIM(&#x27; abc &#x27;)),LENGTH(RTRIM(&#x27; abc &#x27;))+-------------------------+--------------------------+--------------------------+| LENGTH(TRIM(&#x27; abc &#x27;)) | LENGTH(LTRIM(&#x27; abc &#x27;)) | LENGTH(RTRIM(&#x27; abc &#x27;)) |+-------------------------+--------------------------+--------------------------+| 3 | 5 | 5 |+-------------------------+--------------------------+--------------------------+# 返回指定数量的空格select SPACE(100)+------------------------------------------------------------------------------------------------------+| SPACE(100) |+------------------------------------------------------------------------------------------------------+| |+------------------------------------------------------------------------------------------------------+ 日期和时间函数 时间格式符含义 序号 格式符 含义 1 %Y 四位的年份 2 %y 2位的年份 3 %m 月份（01,02，…11,12） 4 %c 月份（1,2,3…11,12） 5 %d 日（01,02，…） 6 %H 小时（24小时） 7 %h 小时（12小时） 8 %i 分钟（00,01，…59） 9 %s 秒（00,01，…59） 获取当前日期和时间 函数名称 功能 CURDATE()或CURRENT_DATE()或CURRENT_DATE 返回当前的日期 CURTIME()或CURRENT_TIME()或CURTIME 返回当前的时间 NOW() 返回当前的日期和时间,%Y-%m-%d %H:%i:%s current_timestamp()或current_timestamp或localtime或localtimestamp 返回当前的日期和时间,%Y-%m-%d %H:%i:%s sysdate() 返回当前的日期和时间,%Y-%m-%d %H:%i:%s 12345678910111213141516171819202122select CURDATE(),CURRENT_DATE(),CURTIME(),CURRENT_TIME(),NOW(),current_timestamp()+------------+----------------+-----------+----------------+---------------------+---------------------+| CURDATE() | CURRENT_DATE() | CURTIME() | CURRENT_TIME() | NOW() | current_timestamp() |+------------+----------------+-----------+----------------+---------------------+---------------------+| 2022-10-26 | 2022-10-26 | 6:44:49 | 6:44:49 | 2022-10-26 06:44:49 | 2022-10-26 06:44:49 |+------------+----------------+-----------+----------------+---------------------+---------------------+# 也可以使用名称获取时间select current_timestamp,CURRENT_DATE,CURRENT_TIME,localtime,localtimestamp+---------------------+--------------+--------------+---------------------+---------------------+| current_timestamp | CURRENT_DATE | CURRENT_TIME | localtime | localtimestamp |+---------------------+--------------+--------------+---------------------+---------------------+| 2022-10-26 07:11:54 | 2022-10-26 | 7:11:54 | 2022-10-26 07:11:54 | 2022-10-26 07:11:54 |+---------------------+--------------+--------------+---------------------+---------------------+# 获得当前 UTC 日期时间函数，now()调用的是系统本地时间，因为我国位于东八时区，所以本地时间 = UTC 时间 + 8 小时select utc_timestamp(), utc_date(), utc_time(),now();+---------------------+------------+------------+---------------------+| utc_timestamp() | utc_date() | utc_time() | now() |+---------------------+------------+------------+---------------------+| 2022-10-26 07:16:43 | 2022-10-26 | 7:16:43 | 2022-10-26 15:16:43 |+---------------------+------------+------------+---------------------+ 日期增加或减少 函数名称 功能 DATE_ADD(date,INTERVAL int keyword) 返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH); DATE_SUB(date,INTERVAL int keyword) 返回日期date减去间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH); keyword: YEAR,MONTH,DAY,HOUR,MINUTE,SECOND,WEEK,QUARTER,MICROSECOND 123456SELECT DATE_ADD(CURRENT_DATE,INTERVAL 6 YEAR),DATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH),DATE_ADD(CURRENT_DATE,INTERVAL 6 DAY),DATE_SUB(CURRENT_DATE,INTERVAL 6 YEAR),DATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH),DATE_SUB(CURRENT_DATE,INTERVAL 6 DAY)+----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+| DATE_ADD(CURRENT_DATE,INTERVAL 6 YEAR) | DATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH) | DATE_ADD(CURRENT_DATE,INTERVAL 6 DAY) | DATE_SUB(CURRENT_DATE,INTERVAL 6 YEAR) | DATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH) | DATE_SUB(CURRENT_DATE,INTERVAL 6 DAY) |+----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+| 2028-10-26 | 2023-04-26 | 2022-11-01 | 2016-10-26 | 2022-04-26 | 2022-10-20 |+----------------------------------------+-----------------------------------------+---------------------------------------+----------------------------------------+-----------------------------------------+---------------------------------------+ 两个日期比较 函数名称 功能 datediff(date1,date2) 两个日期相减 timediff(time1,time2) 两个时间相减 timestampdiff(unit,datetime1,datetime2) 两个时间相差的unit声明的间隔 unit: year,month,day,hour,minute,second,week,QUARTER 1234567891011121314151617181920212223242526272829303132# 比较日期，时间的差值select datediff(&#x27;2022-08-08&#x27;, &#x27;2022-08-01&#x27;),timediff(&#x27;2022-08-08 08:08:0&#x27;, &#x27;2022-08-08 00:00:00&#x27;),timediff(&#x27;2022-08-08 08:08:0&#x27;, &#x27;2022-08-07 00:00:00&#x27;),timediff(&#x27;08:08:0&#x27;, &#x27;00:00:00&#x27;)+--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+| datediff(&#x27;2022-08-08&#x27;, &#x27;2022-08-01&#x27;) | timediff(&#x27;2022-08-08 08:08:0&#x27;, &#x27;2022-08-08 00:00:00&#x27;) | timediff(&#x27;2022-08-08 08:08:0&#x27;, &#x27;2022-08-07 00:00:00&#x27;) | timediff(&#x27;08:08:0&#x27;, &#x27;00:00:00&#x27;) |+--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+| 7 | 8:08:00 | 1 day, 8:08:00 | 8:08:00 |+--------------------------------------+-------------------------------------------------------+-------------------------------------------------------+---------------------------------+# 比较日期的相差的年，月，日数select timestampdiff(year,&#x27;2022-05-01&#x27;,&#x27;2021-05-01&#x27;),timestampdiff(month,&#x27;2022-05-01&#x27;,&#x27;2021-05-01&#x27;),timestampdiff(day,&#x27;2022-05-01&#x27;,&#x27;2021-05-01&#x27;)+-----------------------------------------------+------------------------------------------------+----------------------------------------------+| timestampdiff(year,&#x27;2022-05-01&#x27;,&#x27;2021-05-01&#x27;) | timestampdiff(month,&#x27;2022-05-01&#x27;,&#x27;2021-05-01&#x27;) | timestampdiff(day,&#x27;2022-05-01&#x27;,&#x27;2021-05-01&#x27;) |+-----------------------------------------------+------------------------------------------------+----------------------------------------------+| -1 | -12 | -365 |+-----------------------------------------------+------------------------------------------------+----------------------------------------------+# 比较日期的相差的小时，分钟，秒数select timestampdiff(hour,&#x27;2022-08-08 08:08:00&#x27;, &#x27;2022-08-08 00:00:00&#x27;),timestampdiff(minute,&#x27;2022-08-08 08:08:0&#x27;, &#x27;2022-08-08 00:00:00&#x27;),timestampdiff(second,&#x27;2022-08-08 08:08:00&#x27;, &#x27;2022-08-08 00:00:00&#x27;)+-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+| timestampdiff(hour,&#x27;2022-08-08 08:08:00&#x27;, &#x27;2022-08-08 00:00:00&#x27;) | timestampdiff(minute,&#x27;2022-08-08 08:08:00&#x27;, &#x27;2022-08-08 00:00:00&#x27;) | timestampdiff(second,&#x27;2022-08-08 08:08:00&#x27;, &#x27;2022-08-08 00:00:00&#x27;) |+-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+| -8 | -488 | -29280 |+-----------------------------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------+# 比较日期的相差的周，季度数select timestampdiff(week,&#x27;2022-08-08 08:08:00&#x27;, &#x27;2022-08-01 00:00:00&#x27;),timestampdiff(QUARTER,&#x27;2022-08-08 08:08:00&#x27;, &#x27;2022-05-01 00:00:00&#x27;)+-----------------------------------------------------------------+--------------------------------------------------------------------+| timestampdiff(week,&#x27;2022-08-08 08:08:00&#x27;, &#x27;2022-08-01 00:00:00&#x27;) | timestampdiff(QUARTER,&#x27;2022-08-08 08:08:00&#x27;, &#x27;2022-05-01 00:00:00&#x27;) |+-----------------------------------------------------------------+--------------------------------------------------------------------+| -1 | -1 |+-----------------------------------------------------------------+--------------------------------------------------------------------+ 日期或时间拆分 函数名称 功能 DAYOFWEEK(date) 返回date所代表的一星期中的第几天(1~7) DAYOFMONTH(date)或者DAY(date) 返回date是一个月的第几天(1~31) DAYOFYEAR(date) 返回date是一年的第几天(1~366) DAYNAME(date) 返回date的星期名，如：SELECT DAYNAME(CURRENT_DATE); MONTHNAME(date) 返回date的月份名，如：SELECT MONTHNAME(CURRENT_DATE); QUARTER(date) 返回date在一年中的季度(1~4)，如SELECT QUARTER(CURRENT_DATE); 123456SELECT CURRENT_DATE(),DAYOFWEEK(CURRENT_DATE),DAYOFMONTH(CURRENT_DATE),DAYOFYEAR(CURRENT_DATE),DAYNAME(CURRENT_DATE),QUARTER(CURRENT_DATE)+----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+| CURRENT_DATE() | DAYOFWEEK(CURRENT_DATE) | DAYOFMONTH(CURRENT_DATE) | DAYOFYEAR(CURRENT_DATE) | DAYNAME(CURRENT_DATE) | QUARTER(CURRENT_DATE) |+----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+| 2022-10-26 | 4 | 26 | 299 | Wednesday | 4 |+----------------+-------------------------+--------------------------+-------------------------+-----------------------+-----------------------+ 函数名称 功能 WEEK(date)或weekofyear(date) 返回日期date为一年中第几周(0~53) YEAR(date) 返回日期date的年份(1000~9999) MONTH(date) 返回date的月份值(1~12) DAY(date) 返回date是一个月的第几天(1~31) dayofweek(date) 返回date是一周的第几天(1~7)，（1 = Sunday, 2 = Monday, …, 7 = Saturday） weekday() 返回date是一周的第几天(0~6)，(0 = Monday, 1 = Tuesday, …, 6 = Sunday) HOUR(time) 返回time的小时值(0~23) MINUTE(time) 返回time的分钟值(0~59) SECOND(time) 返回time的秒数值(0~59) microsecond(time) 返回微秒 LAST_DAY(date) 返回date所属月份的最后一天 123456789101112131415161718192021222324252627282930313233343536select now(),WEEK(CURRENT_DATE),YEAR(CURRENT_DATE),MONTH(CURRENT_DATE),DAY(CURRENT_DATE),HOUR(CURRENT_TIME),MINUTE(CURRENT_TIME),SECOND(CURRENT_TIME)+---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+| now() | WEEK(CURRENT_DATE) | YEAR(CURRENT_DATE) | MONTH(CURRENT_DATE) | DAY(CURRENT_DATE) | HOUR(CURRENT_TIME) | MINUTE(CURRENT_TIME) | SECOND(CURRENT_TIME) |+---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+| 2022-10-26 07:31:03 | 43 | 2022 | 10 | 26 | 7 | 31 | 3 |+---------------------+--------------------+--------------------+---------------------+-------------------+--------------------+----------------------+----------------------+select microsecond(&#x27;2022-10-22 07:15:30.123456&#x27;)+-------------------------------------------+| microsecond(&#x27;2022-10-22 07:15:30.123456&#x27;) |+-------------------------------------------+| 123456 |+-------------------------------------------+SELECT MONTHNAME(CURRENT_DATE),DAYNAME(CURRENT_DATE),LAST_DAY(CURRENT_DATE),LAST_DAY(&#x27;2022-02-01&#x27;)+-------------------------+-----------------------+------------------------+------------------------+| MONTHNAME(CURRENT_DATE) | DAYNAME(CURRENT_DATE) | LAST_DAY(CURRENT_DATE) | LAST_DAY(&#x27;2022-02-01&#x27;) |+-------------------------+-----------------------+------------------------+------------------------+| October | Wednesday | 2022-10-31 | 2022-02-28 |+-------------------------+-----------------------+------------------------+------------------------+# 返回当前月份有多少天select now(), day(last_day(now())) as days;+---------------------+------+| now() | days |+---------------------+------+| 2022-10-26 07:34:22 | 31 |+---------------------+------+# 返回当天是一周中的第几天，注意dayofweek与weekday的区别select now(),dayofweek(now()),weekday(now()),DAYNAME(now())+---------------------+------------------+----------------+----------------+| now() | dayofweek(now()) | weekday(now()) | DAYNAME(now()) |+---------------------+------------------+----------------+----------------+| 2022-10-26 07:48:48 | 4 | 2 | Wednesday |+---------------------+------------------+----------------+----------------+ extract(unit from date)函数，也可是实现日期、时间拆分的目的 unit支持的内容： year,quarter,month,week,day,hour,minute,second,microsecond,day_hour,day_minute,day_second,day_microsecond,hour_minute,hour_second,hour_microsecond,minute_second,minute_microsecond,second_microsecond 123456select extract(year from now()),extract(month from now()),extract(day from now()),extract(hour from now()),extract(minute from now()),extract(second from now())+--------------------------+---------------------------+-------------------------+--------------------------+----------------------------+----------------------------+| extract(year from now()) | extract(month from now()) | extract(day from now()) | extract(hour from now()) | extract(minute from now()) | extract(second from now()) |+--------------------------+---------------------------+-------------------------+--------------------------+----------------------------+----------------------------+| 2022 | 10 | 27 | 4 | 7 | 24 |+--------------------------+---------------------------+-------------------------+--------------------------+----------------------------+----------------------------+ 日期和时间的格式化 函数名称 功能 DATE_FORMAT(date,fmt) 依照指定的fmt格式格式化日期date值 TIME_FORMAT(time,fmt) 依照字符串fmt格式化时间time值 STR_TO_DATE(str, fmt) 将某种格式的日期字符串转换为标准格式 %Y-%m-%d %H:%i:%s unix_timestamp() 获取当前日期的unix时间戳 unix_timestamp(date) 获取指定日期的unix时间戳 FROM_UNIXTIME(ts) 使用标准格式 %Y-%m-%d %H:%i:%s格式化UNIX时间戳ts FROM_UNIXTIME(ts,fmt) 根据指定的fmt格式，格式化UNIX时间戳ts GET_FORMAT({DATE TIME 123456789101112131415161718192021222324252627select DATE_FORMAT(now(),&#x27;%Y/%m/%d %H:%i:%s&#x27;),DATE_FORMAT(&#x27;2022-10-22&#x27;,&#x27;%Y年%m月%d日&#x27;),TIME_FORMAT(&#x27;12:23:24&#x27;,&#x27;%H_%i_%s&#x27;)+----------------------------------------+------------------------------------------+------------------------------------+| DATE_FORMAT(now(),&#x27;%Y/%m/%d %H:%i:%s&#x27;) | DATE_FORMAT(&#x27;2022-10-22&#x27;,&#x27;%Y年%m月%d日&#x27;) | TIME_FORMAT(&#x27;12:23:24&#x27;,&#x27;%H_%i_%s&#x27;) |+----------------------------------------+------------------------------------------+------------------------------------+| 2022/10/26 10:03:00 | 2022年10月22日 | 12_23_24 |+----------------------------------------+------------------------------------------+------------------------------------+select STR_TO_DATE(&#x27;08/09/2022&#x27;, &#x27;%m/%d/%Y&#x27;),str_to_date(&#x27;08.09.2022 08:09:30&#x27;, &#x27;%m.%d.%Y %h:%i:%s&#x27;)+---------------------------------------+---------------------------------------------------------+| STR_TO_DATE(&#x27;08/09/2022&#x27;, &#x27;%m/%d/%Y&#x27;) | str_to_date(&#x27;08.09.2022 08:09:30&#x27;, &#x27;%m.%d.%Y %h:%i:%s&#x27;) |+---------------------------------------+---------------------------------------------------------+| 2022-08-09 | 2022-08-09 08:09:30 |+---------------------------------------+---------------------------------------------------------+select unix_timestamp(),unix_timestamp(now()),unix_timestamp(&#x27;2022-08-09 08:09:30&#x27;)+------------------+-----------------------+---------------------------------------+| unix_timestamp() | unix_timestamp(now()) | unix_timestamp(&#x27;2022-08-09 08:09:30&#x27;) |+------------------+-----------------------+---------------------------------------+| 1666773064 | 1666773064 | 1660032570 |+------------------+-----------------------+---------------------------------------+select FROM_UNIXTIME(1666773064),FROM_UNIXTIME(1666773064,&#x27;%m.%d.%Y %h:%i:%s&#x27;)+---------------------------+-----------------------------------------------+| FROM_UNIXTIME(1666773064) | FROM_UNIXTIME(1666773064,&#x27;%m.%d.%Y %h:%i:%s&#x27;) |+---------------------------+-----------------------------------------------+| 2022-10-26 08:31:04 | 10.26.2022 08:31:04 |+---------------------------+-----------------------------------------------+ 函数名称 功能 DATE(date) 输出格式：2022-11-23 TIMESTAMP(datetime) 输出格式：2022-11-23 07:44:48 123456select date(&#x27;2022-11-23 07:44:48&#x27;),date(now()),timestamp(&#x27;2022-11-23 07:44:48&#x27;),timestamp(now())+-----------------------------+-------------+----------------------------------+---------------------+| date(&#x27;2022-11-23 07:44:48&#x27;) | date(now()) | timestamp(&#x27;2022-11-23 07:44:48&#x27;) | timestamp(now()) |+-----------------------------+-------------+----------------------------------+---------------------+| 2022-11-23 | 2022-11-23 | 2022-11-23 07:44:48 | 2022-11-23 07:57:11 |+-----------------------------+-------------+----------------------------------+---------------------+ 日期、时间转换函数 函数名称 功能 time_to_sec(time) 时间转换为秒 sec_to_time(seconds) 秒转换为时间 to_days(date) 日期转换为天数，距离0000-00-00到现在的天数，建议使用4位年份 from_days(days) 天数转换为日期 1234567891011121314151617181920212223# 年份不是2位时，以实际年份值为准select to_days(&#x27;0000-00-00&#x27;),to_days(&#x27;0000-01-01&#x27;),to_days(&#x27;1-01-01&#x27;),to_days(&#x27;100-01-01&#x27;)+-----------------------+-----------------------+--------------------+----------------------+| to_days(&#x27;0000-00-00&#x27;) | to_days(&#x27;0000-01-01&#x27;) | to_days(&#x27;1-01-01&#x27;) | to_days(&#x27;100-01-01&#x27;) |+-----------------------+-----------------------+--------------------+----------------------+| &lt;null&gt; | 1 | 366 | 36525 |+-----------------------+-----------------------+--------------------+----------------------+# 年份是2位时，默认前面加上20，建议使用4位年份select to_days(&#x27;00-01-01&#x27;),to_days(&#x27;10-01-01&#x27;),to_days(&#x27;2010-01-01&#x27;)+---------------------+---------------------+-----------------------+| to_days(&#x27;00-01-01&#x27;) | to_days(&#x27;10-01-01&#x27;) | to_days(&#x27;2010-01-01&#x27;) |+---------------------+---------------------+-----------------------+| 730485 | 734138 | 734138 |+---------------------+---------------------+-----------------------+# 时间与秒相互转select time_to_sec(&#x27;01:00:05&#x27;),sec_to_time(3605)+-------------------------+-------------------+| time_to_sec(&#x27;01:00:05&#x27;) | sec_to_time(3605) |+-------------------------+-------------------+| 3605 | 1:00:05 |+-------------------------+-------------------+ 时区转换 函数名称 功能 convert_tz(date,from_timezone,to_timezone) 将date从from_timezone转换为to_timezone 123456select convert_tz(&#x27;2022-08-08 12:00:00&#x27;, &#x27;+08:00&#x27;, &#x27;+00:00&#x27;)+-------------------------------------------------------+| convert_tz(&#x27;2022-08-08 12:00:00&#x27;, &#x27;+08:00&#x27;, &#x27;+00:00&#x27;) |+-------------------------------------------------------+| 2022-08-08 04:00:00 |+-------------------------------------------------------+ 拼凑日期、时间函数 函数名称 功能 makdedate(year,dayofyear) 拼接日期，year年份，dayofyear一年中的第几天 maketime(hour,minute,second) 拼接时间，hour小时,minute分钟,second秒 123456select makedate(2022,31),maketime(12,15,30)+-------------------+--------------------+| makedate(2022,31) | maketime(12,15,30) |+-------------------+--------------------+| 2022-01-31 | 12:15:30 |+-------------------+--------------------+ 获得国家地区的时间格式字符串 函数名称 功能 GET_FORMAT({DATE TIME 123456select GET_FORMAT(DATE,&#x27;USA&#x27;),GET_FORMAT(DATETIME,&#x27;USA&#x27;),GET_FORMAT(TIME,&#x27;USA&#x27;)+------------------------+----------------------------+------------------------+| GET_FORMAT(DATE,&#x27;USA&#x27;) | GET_FORMAT(DATETIME,&#x27;USA&#x27;) | GET_FORMAT(TIME,&#x27;USA&#x27;) |+------------------------+----------------------------+------------------------+| %m.%d.%Y | %Y-%m-%d %H.%i.%s | %h:%i:%s %p |+------------------------+----------------------------+------------------------+ 函数调用 结果 GET_FORMAT(DATE,‘USA’) ‘%m.%d.%Y’ GET_FORMAT(DATE,‘JIS’) ‘%Y-%m-%d’ GET_FORMAT(DATE,‘ISO’) ‘%Y-%m-%d’ GET_FORMAT(DATE,‘EUR’) ‘%d.%m.%Y’ GET_FORMAT(DATE,‘INTERNAL’) ‘%Y%m%d’ GET_FORMAT(DATETIME,‘USA’) ‘%Y-%m-%d %H.%i.%s’ GET_FORMAT(DATETIME,‘JIS’) ‘%Y-%m-%d %H:%i:%s’ GET_FORMAT(DATETIME,‘ISO’) ‘%Y-%m-%d %H:%i:%s’ GET_FORMAT(DATETIME,‘EUR’) ‘%Y-%m-%d %H.%i.%s’ GET_FORMAT(DATETIME,‘INTERNAL’) ‘%Y%m%d%H%i%s’ GET_FORMAT(TIME,‘USA’) ‘%h:%i:%s %p’ GET_FORMAT(TIME,‘JIS’) ‘%H:%i:%s’ GET_FORMAT(TIME,‘ISO’) ‘%H:%i:%s’ GET_FORMAT(TIME,‘EUR’) ‘%H.%i.%s’ GET_FORMAT(TIME,‘INTERNAL’) ‘%H%i%s’ 加密函数 函数名称 功能 AES_ENCRYPT(str,key) 使用AES加密,返回用密钥key对字符串str利用高级加密标准算法加密后的结果，调用AES_ENCRYPT的结果是一个二进制字符串，以BLOB类型存储 AES_DECRYPT(str,key) 使用AES解密,返回用密钥key对字符串str利用高级加密标准算法解密后的结果 MD5(str) 计算字符串str的MD5校验和 SHA(str),SHA1(str) 计算字符串str的安全散列算法(SHA)校验和 SHA2(str) 计算字符串str的安全散列算法(SHA2)校验和 1234567891011121314select AES_ENCRYPT(&#x27;123456&#x27;,&#x27;abc&#x27;),AES_DECRYPT(AES_ENCRYPT(&#x27;123456&#x27;,&#x27;abc&#x27;),&#x27;abc&#x27;)+------------------------------------+------------------------------------------------+| AES_ENCRYPT(&#x27;123456&#x27;,&#x27;abc&#x27;) | AES_DECRYPT(AES_ENCRYPT(&#x27;123456&#x27;,&#x27;abc&#x27;),&#x27;abc&#x27;) |+------------------------------------+------------------------------------------------+| 0xe46cef3cb055471402ea4dfb7249cb32 | 123456 |+------------------------------------+------------------------------------------------+# 不可逆select MD5(&#x27;123456&#x27;),SHA(&#x27;123456&#x27;)+----------------------------------+------------------------------------------+| MD5(&#x27;123456&#x27;) | SHA(&#x27;123456&#x27;) |+----------------------------------+------------------------------------------+| e10adc3949ba59abbe56e057f20f883e | 7c4a8d09ca3762af61e59520943dc26494f8941b |+----------------------------------+------------------------------------------+ 信息函数 名称 功能 USER(),SESSION_USER(),SYSTEM_USER() 客户端提供的用户名和主机名 CURRENT_USER(),CURRENT_USER 经过身份验证的用户名和主机名 DATABASE(),SCHEMA() 返回默认（当前）数据库名称 VERSION() 返回指示MySQL服务器版本的字符串 ICU_VERSION() Unicode国际组件（ICU）库的版本,用于支持正则表达式操作 CONNECTION_ID() 返回连接的连接ID（线程ID） CHARSET(x) 查询x的存储字符集 COLLATION(x) 查询x的排序字符集 1234567891011121314151617181920select user(),SESSION_USER(),SYSTEM_USER(),CURRENT_USER(),CURRENT_USER+-------------------+-------------------+-------------------+----------------+--------------+| user() | SESSION_USER() | SYSTEM_USER() | CURRENT_USER() | CURRENT_USER |+-------------------+-------------------+-------------------+----------------+--------------+| root@1.119.151.30 | root@1.119.151.30 | root@1.119.151.30 | root@% | root@% |+-------------------+-------------------+-------------------+----------------+--------------+select version(),database(),schema(),ICU_VERSION(),CONNECTION_ID()+-----------+------------+----------+---------------+-----------------+| version() | database() | schema() | ICU_VERSION() | CONNECTION_ID() |+-----------+------------+----------+---------------+-----------------+| 8.0.30 | test | test | 69.1 | 138 |+-----------+------------+----------+---------------+-----------------+SELECT CHARSET(&#x27;abc&#x27;),CHARSET(1010),CHARSET(0x1010),COLLATION(&#x27;abc&#x27;),COLLATION(1010),COLLATION(0x1010)+----------------+---------------+-----------------+--------------------+-----------------+-------------------+| CHARSET(&#x27;abc&#x27;) | CHARSET(1010) | CHARSET(0x1010) | COLLATION(&#x27;abc&#x27;) | COLLATION(1010) | COLLATION(0x1010) |+----------------+---------------+-----------------+--------------------+-----------------+-------------------+| utf8mb4 | binary | binary | utf8mb4_general_ci | binary | binary |+----------------+---------------+-----------------+--------------------+-----------------+-------------------+ 其它函数 函数名称 功能 INET_ATON(ip) 返回IP地址的数字表示 INET_NTOA(num) 返回数字所代表的IP地址 IS_IPV4(str) 参数是否为IPv4地址 INET6_ATON(ip) 返回IPv6地址的数字值 INET6_NTOA(num) 从数字值返回IPv6地址 IS_IPV6(str) 参数是否为IPv6地址 UUID() 返回通用唯一标识符（UUID） UUID_SHORT() 返回整数值通用标识符 IS_UUID(str) 参数是否为有效的UUID ANY_VALUE(column) 抑制ONLY_FULL_GROUP_BY值拒绝，返回分组内任意数据 GROUPING(column) 将超聚合的ROLLUP行与常规行区分开来，返回值是0或1 1234567891011121314151617181920SELECT INET_ATON(&#x27;10.122.89.47&#x27;),INET_NTOA(175790383),IS_IPV4(&#x27;10.122.89.47&#x27;)+---------------------------+----------------------+-------------------------+| INET_ATON(&#x27;10.122.89.47&#x27;) | INET_NTOA(175790383) | IS_IPV4(&#x27;10.122.89.47&#x27;) |+---------------------------+----------------------+-------------------------+| 175790383 | 10.122.89.47 | 1 |+---------------------------+----------------------+-------------------------+select INET6_ATON(&#x27;fdfe::5a55:caff:fefa:9089&#x27;),INET6_NTOA(0xfdfe0000000000005a55cafffefa9089),IS_IPV6(&#x27;fdfe::5a55:caff:fefa:9089&#x27;)+-----------------------------------------+------------------------------------------------+--------------------------------------+| INET6_ATON(&#x27;fdfe::5a55:caff:fefa:9089&#x27;) | INET6_NTOA(0xfdfe0000000000005a55cafffefa9089) | IS_IPV6(&#x27;fdfe::5a55:caff:fefa:9089&#x27;) |+-----------------------------------------+------------------------------------------------+--------------------------------------+| 0xfdfe0000000000005a55cafffefa9089 | fdfe::5a55:caff:fefa:9089 | 1 |+-----------------------------------------+------------------------------------------------+--------------------------------------+select UUID(),UUID_SHORT(),IS_UUID(&#x27;872192b2-55b3-11ed-8890-0ad5455f39d8&#x27;)+--------------------------------------+----------------------+-------------------------------------------------+| UUID() | UUID_SHORT() | IS_UUID(&#x27;872192b2-55b3-11ed-8890-0ad5455f39d8&#x27;) |+--------------------------------------+----------------------+-------------------------------------------------+| 9761d30a-55b3-11ed-8890-0ad5455f39d8 | 16889433509511299076 | 1 |+--------------------------------------+----------------------+-------------------------------------------------+ 流程控制 控制函数 函数名称 功能 if(expr,v1,v2) 实现if-else的效果，如果expr是true，返回v1。如果expr是false，返回v2 ifnull(v1,v2) 判断v1值是否为null，如果v1不为NULL，返回v2，否则返回v1 nullif(v1,v2) 如果v1=v2则返回null,否则返回v1 12345678910111213141516select if(1&gt;2,&#x27;1&gt;2&#x27;,&#x27;1&lt;=2&#x27;),ifnull(1,2),ifnull(null,2),nullif(1,1),nullif(1,2)+----------------------+-------------+----------------+-------------+-------------+| if(1&gt;2,&#x27;1&gt;2&#x27;,&#x27;1&lt;=2&#x27;) | ifnull(1,2) | ifnull(null,2) | nullif(1,1) | nullif(1,2) |+----------------------+-------------+----------------+-------------+-------------+| 1&lt;=2 | 1 | 2 | &lt;null&gt; | 1 |+----------------------+-------------+----------------+-------------+-------------+# 统计每个部门年龄等于34的人数select depName,sum(if(age=34,1,0)),group_concat(age) from tbl_employees group by depName+---------+---------------------+-------------------------+| depName | sum(if(age=34,1,0)) | group_concat(age) |+---------+---------------------+-------------------------+| 技术部 | 2 | 22,24,26,28,34,34,36,38 || 运维部 | 1 | 34,24,26,38 || 销售部 | 0 | 44,24,46,38 |+---------+---------------------+-------------------------+ 控制语句case…when case…when比if函数功能更加强大，支持多个条件分支判断 case…when语句支持两种判断类型 1.表达式与常量比较 123456case 要判断的字段或表达式when 常量1 then 要显示的值1或语句1when 常量2 then 要显示的值2或语句2...else 缺省要显示的值n或语句nend 12345678910111213141516SELECT CASE &#x27;green&#x27; WHEN &#x27;red&#x27; THEN &#x27;stop&#x27; WHEN &#x27;green&#x27; THEN &#x27;go&#x27; ELSE &#x27;null&#x27; END as result;+--------+| result |+--------+| go |+--------+# 统计每个部门年龄等于34的人数select depName,sum(case age when 34 then 1 else 0 end),group_concat(age) from tbl_employees group by depName+---------+------------------------------------------+-------------------------+| depName | sum(case age when 34 then 1 else 0 end ) | group_concat(age) |+---------+------------------------------------------+-------------------------+| 技术部 | 2 | 22,24,26,28,34,34,36,38 || 运维部 | 1 | 34,24,26,38 || 销售部 | 0 | 44,24,46,38 |+---------+------------------------------------------+-------------------------+ 2.分支条件判断 123456casewhen 条件1 then 要显示的值1或语句1when 条件2 then 要显示的值2或语句2...else 缺省要显示的值n或语句nend 12345678910111213141516SELECT CASE WHEN 1&gt;2 THEN &#x27;stop&#x27; WHEN 1&lt;2 THEN &#x27;go&#x27; ELSE &#x27;null&#x27; END as result;+--------+| result |+--------+| go |+--------+# 统计每个部门年龄等于34的人数select depName,sum(case when age=34 then 1 else 0 end),group_concat(age) from tbl_employees group by depName+---------+------------------------------------------+-------------------------+| depName | sum(case when age=34 then 1 else 0 end ) | group_concat(age) |+---------+------------------------------------------+-------------------------+| 技术部 | 2 | 22,24,26,28,34,34,36,38 || 运维部 | 1 | 34,24,26,38 || 销售部 | 0 | 44,24,46,38 |+---------+------------------------------------------+-------------------------+ 算术运算符 名称 功能 + 加法 - 减法 * 乘法 / 除法 div 整除，只取整数部分 %，mod 模运算符，取余数 123456789101112131415# 除法select 10/4,10 div 4+--------+----------+| 10/4 | 10 div 4 |+--------+----------+| 2.5000 | 2 |+--------+----------+# 取余数select 10 mod 3,mod(10,3),10 % 3+----------+-----------+--------+| 10 mod 3 | mod(10,3) | 10 % 3 |+----------+-----------+--------+| 1 | 1 | 1 |+----------+-----------+--------+","summary":"摘要 sql语句与常用函数介绍 本文基于mysql-8.0.30，https://dev.mysql.com/doc/refman/8.0/en/","date_published":"2022-10-26T13:30:05.000Z","tags":["技术","mysql","mysql"]}]}